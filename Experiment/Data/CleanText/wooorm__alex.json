{
    "wooorm": "Closed by 61ceb77. Thanks!\n. Closed by 2c455ac. Nice catch!\n. Closed by 6652fa2.\n. Nice addition, Alex seems like a very nice addition \ud83d\ude09\n. Awesome! Cool, thanks I'll work through your points very soon. They all seem like great catches!\nDo you/she mind if I ask your partner the same question? If I can, could you pass her my e-mail adress or vice versa so I can get in touch with her?\n. Thanks a lot :+1:, I\u2019ve fixed and re-worded most of your issues, great suggestions.\nOnly thing still unfixed is\u00a0Why? Feature requests and issues are more than welcome. The point here was to ensure that the triggered patterns are based on the community\u2019s suggestions, and that anyone can suggest new patterns if they feel something should be handled.\nHow about removing the list-item in Why and adding it as a paragraph at the end of the intro?\nP.S. and the logo, we\u2019ll be able to use rawgit when the repo is public, which should show it\u2019s purpleness in great glory :smile:\n. Not yet but I\u2019ll let you know if. Thanks a lo and great to hear!\n. That\u2019s a hard one! I was working on adding \u201cracially insensitive\u201d words and phrases like \u201cbounty bar\u201d came a long. Which is similar to this: there will always be edge cases where a program will not detect that something is not insensitive.\nFor example, a product called \u201cmailman\u201d. Should alex warn? Maybe yes, because in fact \u201cmailman\u201d might still be considered insensitive to someone and they just have a horrible marketing team. The same goes for he if someone doesn\u2019t get that its an abbreviation.\nThis specific case could be fixed by checking if words are \u201cloose\u201d (no other adjacent word nodes), e.g., \u201che\u201d, or (he), or he -. But this could also ignore something like he, who rose from ... (false positive false positive?), but maybe these cases are rare enough to be skipped.\nAn other option would be to warn about everything (as it is currently), and seeing it as a suggestion for a human to consider and not the \u201ctruth\u201d. But this would make alex unusable in test scripts because it will keep outputting warnings for he.\nHard problem, thanks for brining it to light!\n. Oh yeah that\u2019s also possible! However, I think that it's hard to distinguish syntactically: he, an entity decoder and he, who rose from.\nConcretely, we can make an (educated?) guess towards something being either offensive or not. But there will always be warnings not triggered where they should, or triggered where the shouldn't.\nThat being said, I\u2019ll work on an implementation tomorrow \ud83d\ude09\n. Yeah that\u2019s possible!\n. Closed by https://github.com/wooorm/retext-equality/commit/71540461a1182eac29d40a92564797caa755036b.\nIt\u2019s pretty ingenious, but might turn out to be too sensitive for real world use-cases, guess not, but we\u2019ll see!\n. No it does not, and I think it's better that way: as it is more focused towards what a person reads, and less towards how it is marked up.\nIn the case of 'he', the algorithm ignores it because it sees the word as some sort of definition (due to the following dash).\nAgain, I think this is the right approach, I hope that when Alex is public we'll gather more fixtures! Maybe we'll have to re-investigate how markup is used in cases where it will also make a word 'literal'.\n. P.S. my response was related to your solution, not towards if this update fixed the example you gave. The latter is true, not sure if that came through. \ud83d\ude09\n. I\u2019m okay with this! Go ahead and rebase on master, or I can do so in \u00b110 minutes!\n. :+1:\n. Oh that\u2019s nice. In the future I\u2019d like to add default extension searching (paired with ignore patterns), as discussed yesterday.\nDo you think adding this now and changing this soon is better than waiting for that to be implemented?\n. Would also add *.txt docs/*.txt just to be sure!\n. Okay I\u2019ll add it!\n. I\u2019ve actually expanded it to deep directories of docs too, and to doc, and to include many more markdown extensions!\n. :+1: Thanks a lot! I\u2019ve changed the commit message to be a tad bit more descriptive though \ud83d\ude09\n. ;) git amend isn\u2019t that hard, plus I like rebasing over merging so who cares. And you deserve it!\n. Thanks for the issue. I\u2019ll read this now but before I start: http://languagelog.ldc.upenn.edu/nll/?category_name=singular-they and http://english.stackexchange.com/questions/48/is-there-a-correct-gender-neutral-singular-pronoun-his-versus-her-versus/55#55!\n. Okay: again, thanks for raising the issue. You provide some very philosophical points: introducing new words to the English lexicon and whatnot. Have you seen xe? Very interesting indeed. I don\u2019t think I can persuade enough people by adding it here. Maybe Sweden can though.\nAlso, I acknowledge that (probably) most people do not intent to be offending when using he. However, I\u2019m certain that some people reading it will find it offensive. And that\u2019s where alex comes in. It\u2019s not to make you feel guilty, it\u2019s to be more inclusive towards the people reading your text.\nIf there\u2019s no good alternative to your sentence. So be it, that\u2019s the language and you\u2019ll have to either resort to using funky phrasing like xe, make a choice to opt for a singular their, or just rewrite the complete sentence.\nWhat do you wish alex would suggest?\n. @Charlotteis Thanks, and I agree :+1:\n. I\u2019m going to close this. Again, thanks for your question / opinion. I really appreciate it but I have to decline changing alex.\nAnyway, feel free to re-open.\n. Will do. I\u2019m adding some more profane words (everyone is typing horrible words in the demo and getting angry that they\u2019re not highlighted) tonight, and I\u2019ll add this too!\nThanks!\n. Woops, sorry. That shouldn\u2019t happen of course. The algorithm changed a lot while developing, that must\u2019ve slipped through!\nI\u2019ll fix this later today!\n. Again, sorry. I'll fix this later.\n. Interesting. I\u2019d love to. Latin-languages aren\u2019t that hard. I use this parser for English, which is pretty small, which is some code on top of parse-latin.\nThen, there needs to be a pattern library. See the YAML files in retext-equality for more info.\nWhat language are you thinking about? There might be unforeseen difficulties in some languages (I only speak Dutch and English, and a little german / french :smile:)\n. Yeah, have you seen the patterns in retext-equality? That's basically what's needed for other latin-script languages!\nAgain, love to help, and that sounds very logical. I think the best step now is to get started translating, if you'd like I can explain more about the types of patterns currently available. That might help get the 'mental framework' across needed for translating :)\n. @RamonGebben @montogeek @brunowego As noted earlier, this is possible, but we need patterns for each language. Would you be willing, and able, to contribute those?\n. Are you talking about the English abbreviation regexes? In that case, these are different per language, so the Dutch one also has a custom expression. There are probably lists on wikipedia for each language, so with one of those it would be a lot easier to add support for a language.\nAlso, most language have custom elision, such as the English \u2019n\u2019 (e.g. in Rock \u2019n\u2019 Roll), and the Dutch \u2019s (e.g. in \u2019s Morgens). So I need those kinds of exceptions too.\nHowever, in theory, these are edge cases, and with just the patterns (see retext-equality), a lot can be accomplished too!\n. Pattern files, like the ones packaged with retext-equality need to be created first. Than I can think about how to support switching between these dictionaries: how they would be specified and such :)\n. Cool! :sunglasses: Regarding dictionaries, I can provide help with how the source code works (it\u2019s all in wooorm/retext-equality). Other than that, some information regarding abbreviations in a language is needed for a parser (plus also some edge cases where certain initial/final symbols and punctuation characters belong the their adjacent words, e.g., English has 2 o\u2019 clock, and Dutch has \u2019s Morgens).\nThe most important is the translations themselves, which I\u2019d be grateful if you could work on :smile: \n. Take a look at the link above, those can be quite literally translated! Note that there\u2019s of course a difference in languages: most translations shouldn\u2019t be made literally, plus there might be new additions for other languages, and removals too!\n. Wow that\u2019s so cool! :+1:\n. Do ping me for help!\n. @SalomonSmeke Cool! Ping me for help! \ud83d\ude04 \n. @gsvolt Wow, awesome. Great to hear. Please see my first comment above (https://github.com/wooorm/alex/issues/14#issuecomment-137497986) for more information. The fact that hindi isn\u2019t Latin-script makes it a bit harder though.\n. @SalomonSmeke @montogeek Cool. I\u2019m not familiar with the differences between Mexican Spanish and Spanish, so I don\u2019t thing I can correctly advise relating to the language. However, it seems like both could be useful, a \u201cstandard\u201d Spanish version and a Mexican Spanish version.\nNote that a Mexican Spanish plugin could itself \u201cdepend\u201d on the \u201cstandard\u201d Spanish plugin, so there\u2019s no need to copy code, if you plan on building Mexican Spanish on top of Spanish.\n. I don\u2019t have time for this. If someone wants to pick it up I\u2019d be glad to help, but I\u2019m closing this as it won\u2019t be included in the foreseeable future.\nIf you\u2019re interested. Click \u201cfork\u201d on retext-equality, translate stuff, and publish!\n. Thanks a lot! I\u2019ll try to implement this weekend.\n. I just checked them again, they\u2019re really great :)\n. Would markdown comments, aka HTML comments work? So something like this (the comment part)?\n. Yeah, forgot to say that it\u2019s really awesome you\u2019d like to include it!\nThere will be some difficulty in parsing asciidoc. Alex uses mdast to bridge markdown to natural language. It\u2019s not just stripping markdown, there\u2019s some difficulty in detecting *in*sane as a single word.\nSimilar technology needs to be added for proper asciidoc support.\nOther than that, it would not be very hard to provide a new layer to replace markdown with some other format, but still, this is a huge step!\n. Thanks! I'll add them later today!\n. Great idea, I agree that the current impossibility of configuring alex is a huge flaw. Nobody has the same standards! I\u2019ll try to get the time to work on this next week :smile:\n. Agree w/ @sindresorhus\n. @sindresorhus @maxogden I agree that non-configurability makes things a lot easier, but I do think this problem needs configuration. It\u2019s just so loaded, and everyone has different standards.\nThanks for mentioning it though, feature creep is def. not what we want, duly noted!\n. The internal support for warnings has support for ruleId properties. Those could be used for links too.\nIt might be possible to add a link to each pattern. The same would go for author-provided patterns.\nOverwriting is a bit harder though.\n. How about the size of these things though? These sentences are already long: https://github.com/wooorm/alex/blob/master/screenshot.png\n. Okay. I\u2019m afraid however that these description can become very long. There could be a whole blogpost attached, or a lot of links, to each warning. How to stop that? Is that wrong? Expected? What would you like to configure?\nCould you give me an example of how you see an .alexrc file configuring a rule?\n. As an alternative, mdast-lint uses ruleId properties for short, succinct, names. And It has documentation for each ruleId what it triggers for, sometimes also why, &c.:\nWould it be a valid alternative to just have a link under the report with more information, and rule-names next to each warning?\n. Okay :) I have to say that this is a bit on the back burner for me though, but I agree that there should be access to some reasoning.\n. See the commit message for more info, new sources and notes can be added to retext-equality, similar to  this.\n. Thanks :) It\u2019s not too beautiful right now though. I\u2019d rather not implement a text-wrapping algorithm, however, maybe everything could be indented by two spaces or so? Or a line after the note?\n\n. Not gonna happen, seems the tests are failing!\n. Seems like quite the discussion: https://www.google.nl/search?rls=en&q=ableist+sociopathy\n. Thanks @evaryont!\n. @evaryont Thanks for the list. I peered through it, but found no words relating to \u201cinsensitive\u201d and \u201cinconsiderate\u201d words. They all seem to be relating to being deemed \u201cinaccurate\u201d in the psychological and psychiatric fields.\nI may have missed some, but I don\u2019t think alex is the place for these suggestions, therefore I decline this issue. If you do not agree and think some of these words should be added, please provide a more concise list of patterns which are inconsiderate and suggestions of considerate replacements.\n. @howardroark I respect your opinion but do not agree. alex was intended for people who\u2019d like their own text to be sensitive and considerate towards others (IMO \u201cself-censorship\u201d is not a bad word).\nPlease, instead of commenting on every issue, open an issue to voice your concerns. But, only do so when I can act on it: the concerns you name are an infinite philosophical debate, probably better discussed over beer than on GitHub.\n. This script might just be what you are looking for:\nsh\n$ alex $(git ls-files)\nThat lints all by Git known files!\n. Also, with globbing, you could use something like alex * **/*, but that would include binary files (e.g., images), and hidden files. Maybe alex $(find . -type f) would be more suitable!\n. IMHO this is not something which can be fixed in alex, rather, it\u2019s something unix does well. Can I close this?\n. On Pouchdb? I can indeed imagine that the size of that repo made it all a bit slower :)\n. Did you wrap with '$()'?\n. I opted not to introduce your suggestions. Thanks a lot, but they are \u201cprofane\u201d words: there\u2019s no argueing that they shouldn\u2019t be used when you want to write \u201csensitive\u201d and \u201cconsiderate\u201d.\n. @rugk These terms might be introduced after-all by GH-46!\n. It's a nice androgynous/unisex name, it was free on npm, and I like it :)\n. @sindresorhus Nice idea! Probably should also have a header something like \u201cWhy does this not have \u2018X\u2019, this is dumb\u201d :wink: \n. Thanks for making the Gift, which browser are you using?\nBasically there's a text area in front, and a div with similar styling behind it (with 'color' set to 'transparent', but with some spans with background colors).\nHowever, having the styling in sync is pretty hard I found, so I'm not sure what it property is missing.\n. whoops, autocorrect ;)\nThanks for the info!\n. @jpruiz114 you should try it out, it should work :)\n. Could you remove the require.js script?\n. And just to make testing easier, swap out alex.min.js for alex.js\n. require.js loads files from the server. If you later include alex it \u201cthinks\u201d it\u2019s loaded by require.js. Thus, it doesn\u2019t expose itself on window.\nIf there\u2019s no require.js, alex does.\n. An no, there\u2019s no difference between alex.js and alex.min.js\u2019s programming interfaces.\n. Thanks :smile:\n. I'll add this to the integrations though\n. @meetbryce Could you describe what you want this to do?\n. I sure would like this but am not interested in creating them myself.\n. @meetbryce Wouldn\u2019t it be a lot easier to create a separate repo?\nIn it, a bookmarklet.js which loads alex.min.js (if no window.alex), gets the selected text, runs alex (var res = alex(text).messages), and displays it? (console.log(res.map(String)))\n. @danielhickman Cool :+1:\n. @sean-roberts Cool! :+1:\n@danielhickman were you able to investigate this?\n. Okay, no problem. I\u2019m not sure what \u201ca while\u201d means, I\u2019m guessing others can also try their had at making an extension?\n. @danielhickman Cool, thanks for taking the time to look into it!\n-   I don\u2019t really care about a bookmarklet myself. I think extensions would be easiest;\n-   I suggest looking at the selected text and running that through alex;\nDid you say you have experience with Chrome Extensions? Also, I\u2019d suggest using npm and browserify or duo as a driver for the repo of the extension. Are you experienced with node/npm/browserify/duo?\nI prefer those because that makes it easier to keep the extension up-to-date, plus it makes it easier for me to help :smile:\n. Nice! Looking forward to when you\u2019ve got that covered. Make sure to ping me if you need help :)\n. @sean-roberts :+1:\n. @danielhickman Great to hear its working! Have you pushed to danielhickman/Alex-Chrome-Extension? The reason for asking is because the docs are pretty \u201cminimal\u201d. I\u2019d like to make it really easy for people to download the extension, so I\u2019d prefer to update the docs.\nFor a Chrome Extension example, check out github-linker\u2019s chrome extension. For some alex examples, see the list of integrations.\n. Okay, awesome, let me know if you need my opinion on things :)\n. @danielhickman Oh wow that looks wonderful! Works very well too!\n\nCongrats on the work. It\u2019s so awesome :smile: \nSome minor nitpicks:\n-   The headings in the licenses list are a bit funky (e.g., Javscript & CSS), maybe the can be omitted, or\n  less obtrusive by making them grey instead of purple?\n-   Javscript & CSS >  Javascript & CSS;\n-   There\u2019s a little more spacing under the Issues block than there is on the sides, I\u2019d go for the same size on every side if possible!\n-   It\u2019s a bit weird that the caret starts at the beginning of the selected text (|We\u2019ve confirmed... instead of ...his identity|)\n-   Maybe rename AlexJS in the hamburger menu to Website (that way people know where they\u2019re going);\n-   Rename Alex, where it refers to the project (not to the site), to just alex (note the case);\n-   Maybe, instead of having both License: MIT License in the subtitle and LICENSE in the bottom button bar, opt for MIT License only, and in the button bar?\nOther than that, the points you mentioned above (auto-updating and issue-highlight), just the docs on GH.\nAgain, very well done!\n. @sindresorhus Oh whoops, your right :grimacing:\n. @sindresorhus @danielhickman Didn\u2019t know about Grammarly before. Basically, it places a counter on a textarea and pulls writing through the program, displaying the number of issues. Then, you can click on that counter to open up an editor (like the Alex panel). That could work here too!\n. @sindresorhus I couldn\u2019t get that to work on GitHub, I can on Gmail though. Maybe it only works for content-editable-type input? Interesting :)\n. @danielhickman I get an error when clicking that link;\n1.\n2.\n3. I meant outside the blocks, between the blocks and the modal;\n4. Here: \n5.\n6. Both :)\n7. I meant don\u2019t list the license next to the author, just in the button bar of the blocks, and instead of having License opt for MIT License (and others) there.\nAlso, I tried uninstalling the extension (installed from GH) on Chrome Canary and for some reason it crashes Chrome. Now the hamburger menu doesn\u2019t work + the selection doesn\u2019t come through (see photo above) anymore :/ Maybe that has to do with non-Chrome-Web-Store extensions though!\n. Oh now the link comes through :)\n. @danielhickman Sorry for the late response!\n1.\n2.\n3. I think I\u2019m having trouble getting my point across, I\u2019m talking about the fact that in the below image the green line should be equal in length to the red line:\n    \n4. \u201cNo issues\u201d is indeed because of the sample text; here\u2019s a screenshot of real text, where the caret still starts at the beginning (whereas I propose it moves to the end):\n    \n5.\n6. An alternative is to use upper-case (ALEX) in the app bar, but I\u2019d really prefer AlexJS in the licenses to be alex, and AlexJS in the hamburger menu to be Website (or alexjs.com).\n7. Okay;\n8. As long as it doesn\u2019t happen with the live version! \ud83d\ude04\nAnyway, it\u2019s going really well :) Looking forward to see the contentEditable integration! Also, just a counter on a textArea is acceptable to me!\n. @danielhickman Cool, I\u2019ll try to look into it over the weekend :+1:\n. @danielhickman, sorry, I totally forgot you worked on this! :anguished: \nAre you still available to continue work on this?\n. @kishore-narendran Pretty evident from the comment before yours, right?\n@danielhickman Okay, awesome! So am I! Could you push the code to GH? Can be private, before we publish it, in which case I\u2019m able to provide a private repo if needed.\nIf the code is somewhere online I can help more :)\n. Oh right, I forgot, sorry :)\n. @rugk If someone makes it\n. Closing as there's no visible work on this. If you're making this, please open a new issue or ask to reopen this!\n. @kishore-narendran @rugk This issue was originally about a browser extension / bookmarklet. I\u2019d love both, and will add it to the integrations \ud83d\udc4d \n. Thanks!\nThey could be detected by #16 and #18, probably.\nAlso: it\u2019s a really personal question, some people would still prefer graduate over alumnus in the last example, and the same goes for disabled and turned off in the first.\nYour second example could probably be ignored by alex itself because it\u2019s (clearly) a name.\nI always meant for alex to be a help when writing, not in a CI to block publishing. Humans are smarter than alex. But, I do see that people (want to) use it that way though.\nShort version: #16 and #18 need to be fixed!\n. Thanks @jdalton, I agree with you! Alex isn\u2019t as smart as a human, but it tries its best and is sometimes overly happy to let you know something may be insensitive.\n. @ixti I can see how the bot seems offensive here. However, \u201cpancake face\u201d is an actual ethnic slur (according to WikiPedia). Therefore, I think alex is operating according to its byline, \u201cCatch insensitive, inconsiderate writing\u201d, by warning about it.\nPlease open a new issue with more information if you\u2019d like to discuss this further, or discus the slackbot on the keoghpe/alex-slack#1.\n. Thanks for being so considerate @ixti :smile:\n. Been a while. Thanks for hanging on. The just releases 2.0.0 version fixes this by introducing several mechanisms to control the messages suggested by alex.\n. :+1: I\u2019ll get to this somewhere tomorrow, if you\u2019d like to get this in earlier you should PR!\n. Wow nice work! That\u2019s so cool :)\nBefore I add this to the repository though, could you add some information regarding how people can install it, how to serve your own alex, how it looks in a slack channel, &c.\nAgain, I\u2019m not experienced with slackbots, but I think slack-poker-bot and trebekbot are good examples. Ping me for help!\n. Wow that\u2019s so awesome! :+1: Really nice work :smile: \n. I\u2019m fine with the addition. I\u2019d like to help you create your first PR. Are you experienced with node? Basically, you have to add the words to patterns in retext-equality.\n. @danielhickman Thanks for the feedback! Did you know that we are already working on a PR? wooorm/retext-equality#3\n. Cool!\n. Thanks for the feedback.\nIf you know have better suggestions, please create a pull request on retext-equality or retext-profanity, or both!\n. https://en.wikipedia.org/wiki/List_of_ethnic_slurs#b\n. \ud83d\ude09 Not everything alex highlights can be used directly, however, they might make you think of looking for alternatives!\n. I don\u2019t agree. Other people don\u2019t either. In addition, I don\u2019t hide that I am the original author behind some organization, Further, everyone is able to contribute. They have already done so.\nAlex is not an insult to \u201cpoetics of life\u201d, just like spelling-control is not an insult to grammar.\n. :+1:\n. I would say that \u201cit\u201d works well for Harry the Worm though?\nIn all seriousness, you are right. If you have another suggestion, please share.\nRegarding that, they and it are merely suggestions. Most importantly, they work well\nwith technical writing as seen on GitHub, but not as much for fiction / stories.\nAlso: alex just highlights some points of interest. Authors should just see them that way,\nalex does not enforce its rules.\n. @danielhickman I don\u2019t think he she is actually used in real language, so I\u2019m not sure that this is a bug?\nThe reason for this is that or patterns, as used internally by retext-equality, do not trigger a warning when occurring adjacent to each other (optionally joined by white-space and and or or).\nThat is to say, this is design: a feature rather than a bug.\nPlease re-open this if you still have questions, or don\u2019t agree :+1: \n. Nah \ud83d\ude09\n. @chrisopedia I agree w/ @sindresorhus on this; and I\u2019d rather not change how this works on the CLI (you can also use the API for more fine-grained control)\nIf that regex doesn\u2019t do the trick, please re-open the issue.\nP.S. AWESOME that you\u2019re making a Vim plugin!\n. @lcd047 Thanks for the questions, interested in seeing it!\nThe error format is meant for humans, that\u2019s why it focusses more on looking nice to humans instead of looking nice for computers. If @sindresorhus\u2019s regex doesn\u2019t do the trick, you could also write a script to interact with alex(3) directly instead of alex(1).\nAlso: Why would you want to pass multiple files through alex at once? I didn\u2019t need that for atom-linter-alex; what exactly are you trying to do with Vim?\nYour first point, sure #45.\nRegarding your second point, alex is named alex, not alexis; more importantly, why are you running into this problem? I\u2019m not sure where alex is, but I\u2019d suggest instead of linking in PATH, to use some relative path to node_modules/alex/cli.js.\nFor your third point, maybe an option is indeed useful. However, as markdown is based on things people use in plain-text (such as strong with asterisks and code with ticks) too, I\u2019m thinking it would do more harm than good to add such an option (my guess here is that you\u2019ll have to check extensions and pass all files without a markdown extensions with this option).\n. > I never said anything about an alexis (not intentionally anyway).\nSorry, auto-correct, that should\u2019ve been \u201calexjs\u201d (with a J, hope it gets it right this time :wink:)\n\nMany Haskell developers that use syntastic have the other alex in their $PATH. I suspect they would be confused if all of a sudden syntastic would try to run a lexer generator against random text files (and presumably failing with fanfare).\n\nI can imagine that would fail horribly haha, but, back to what I was trying to say, does this alex need to be in the $PATH? Is it necessary to look  in the $PATH for alex? Or, can you work around that and use a relative or absolute path?\n. Whoops, commented too early. Your other points:\n\nMy point is that right now running alex against plain text file can ignore some lines, because they are indented with 4 spaces.\n\nI\u2019m not sure if that\u2019s really a \u201cshow stopper\u201d, as you described earlier, how many people really have that in their documents? Anyway, I don\u2019t really mind adding this in the future though, but I think markdown as a base is a really good default, even for most plain-text and other non-markdown files. I think I\u2019m worried that you\u2019re setting it as a default and I don\u2019t think that that\u2019s a wise approach!\n. @lcd047 This probably stems from my unfamiliarity with Vim plug-ins, but can\u2019t you install alex locally? It seems like what you\u2019re trying to tell me is that alex must be installed by the user? Even if there\u2019s a difference in file-structure across OSes, node_modules/.bin/alex still works right?\n\nVim distinguishes between text and markdown automatically\n\nSorry, I didn\u2019t get my point across clearly: I think that even plain-text benefits from being processed as plain-text, more so than it having a negative effect (through indented paragraphs)!\n. Thanks @yoshuawuyts!\nFriendly ping: @sindresorhus, @pjf, @Charlotteis, would love your feedback on this :+1:\n. Thanks @alexgleason :+1:\n. Thanks for the points @Charlotteis! :ok_hand:\n. Okay, sounds good. Thanks all for the feedback!\nI\u2019ll work on creating retext-profanity (probably based on wooorm/profanities), externalised because it\u2019s quite different from retext-equality.\nThen, I\u2019ll add support for a new flag to the CLI (-p, --profanities?) and an option to the API, to include profanities.\n. @Charlotteis Yeah I was indeed thinking of using both! :wink: \n. That\u2019s already in place, @alexgleason. alex.js is a compiled version of a lot of different Node modules, compiled using Browserify, for the browser. I recommend you browse index.js and lib/**/*.js files of all the different modules instead of trying to open the compiled file instead.\n. :+1:\n. Hahahah nice! I\u2019m just doing some updates on alex (the other one). Thanks for the catch! :laughing:\n. :+1:\n. Yup, I\u2019m all for this :+1: \n. Thanks for the interest, @samhogg. I don't have much time, but I'm slowly working to this.\nI'll first create vfile-find-down as a separate module, to search for files. That should provide a solid (tested) Base for this. Additionally, my just released vfile-find-down will provide the file-findjg system for configuration files.\nIf you're really interested in working on a PR for Alex, I suggest the latter: use vfile-find-up (it's '.one' method) to find a '.alexrc' file with configuration (there's a separate issue for that, so if so, please respond there). Thanks for the interest!\n. @samhogg I did this (searching for configuration files upwards) with mdast, modelled after eslint. That ensures working in subdirectories still works as planned. And, additionally, cascading configuration files are possible (which is very cool :wink:).\nnode-glob, and globbing in general, is certainly useful. But you additionally need to search for files by extension for those globs to result in applicable files, something else is needed for that (vfile-find-down, that is).\n. @yoshuawuyts Certainly!\nI just came up with a possible alternative to use alex in CIs: just passing through additions.\nThat way, when alex highlights (causing the CI to fail) stuff but humans smarter than alex decide it\u2019s to sensitive and still merge it in, next checks don\u2019t cause those phrases to turn up again!?\nViable idea? Thoughts?\n. @jden :+1: About the globbing: not to fret, I\u2019m sure that\u2019ll be included (in fact, there\u2019s already globbing in place, even for Windows).\nAbout the diffing CI: We probably need a separate module which, when run on Travis and the like, passes the diffs through alex. I have no idea how that could be accomplished, or if similar things already exist. Anyone ideas?\n. @samhogg What you\u2019re missing is, when someone uses alex docs/, the .md and .txt files must be passed to alex, not .html or .png files!\nRe the diffing: I\u2019m not sure, ideally, if someone PRs a branch (with several commits) onto master, all those commits must be checked. I\u2019m not sure if it\u2019s possible to just detect what has changed (on travis?) though :/\n. @samhogg Certainly, it\u2019s a start. But it doesn\u2019t enable the second code example given by @alexgleason (on which I find very important).\n@jden Nice, but we still need some parsing right (it might be my diff formatting but on my set-up that still includes funky lines). I had some luck with git diff -U0 HEAD^ | awk '/^\\+[^\\+]/' | sed -r 's/^.//g', which reject lines not starting with +, and spits out all added lines without those +es. I guess parsing diff\u2019s could certainly be done on travis in JS. The hard part is getting correct line and column numbers.\nMore in GH-58.\n. Thanks a lot!\n. Thanks @suisea, but these were added in wooorm/retext-equality@b5fd7bf019a4eb4a3f0120038d759bf0d95779b6, which was included in e5507626fa47427515758dfd7af0dd7f985749e5!\n. Done in 3527fb81e261ac601d352a2e99fc175aa60941c2!\n. Thanks for the idea @alexgleason, I agree.\nI\u2019m pretty sure all derogatory terms for people of colour should all be called as what they are: an error.\nHowever, not every pattern is that binary, e.g., armo might be used for both people from Armenian descent or a lot of other things.\nHow to handle those cases? I\u2019d rather not go for a whole list of might be, probably is, possibly is, quite likely is, &c.\n. Although not directly applicable. The just released 2.0.0 version of alex splits profanities from inclusivity warnings. The first are now more clearly mentioned as being vulgar. In addition GH-72 which will land in 3.0.0 will make the descriptions of messages more clear.\nWith both those, I feel this issue can be closed. If not, I\u2019m fine with re-opening!\n. Thanks for reporting. Sorry about that! That should\u2019ve been fixed now. Could you check again by uninstalling and re-installing alex?\n. Great! Thanks!\n. Thanks a lot @suchow! \n. Thanks a lot @suchow! \n. Sorry, thick fingers and small GH buttons :(\nCould you create a PR?\nAlso: must've been a mistake by me when including the list of ethnic slurs from Wikipedia: https://en.m.wikipedia.org/wiki/List_of_ethnic_slurs\n. Thanks for the interest! I prefer an amended rule :+1:\n. Very nice! Could you squash all commits into one? That makes it easier for me to handle (E.g., include minified distribution files)\n. Closed by wooorm/retext-equality@13c19daf6db30caef241d6fe5181fc7043e356b0.\nThanks for the work, and squashing, but I only just now noticed that your changes were made in distribution files, not source files, and that the source files are in a different project. See retext-equality for the patterns, and see the script/ directory there for more information.\n. Thanks @jdalton! For some weird reason when I did the same (after rm -rf node_modules) I came up with a few differences. Not sure what\u2019s going on. I\u2019m on node -v 5.0.0?\nAnyway, I amended your commit to keep your name intact!\n. @HugoGiraudel This issue is still a concept. I\u2019m not yet going to work on it. Partially because it means an Heroku subscription, and that costs money.\nYou mention \u201cusing alex in a CI\u201d, that\u2019s possible, e.g., by running $ alex somewhere in Travis or another CI. This issue is about PRs and the added/updated lines, which isn\u2019t possible (on its own) yet.\nCoala, mentioned above, could maybe help you here though, it offers a diff-based implementation of alex, I think.\n. Closing for now as I\u2019m not interesting in doing it now, nor do I have the time. I\u2019d love it if someone made this into dedicated reality though! (but do check out alex-bear as mentioned above for now!)\n. Reopening. I\u2019ve got some ideas for this!\n. Yes! And directories starting with a dot (like .git)!\n. Thanks for reporting, @c089!\n. Hmm, well, weird. Glad it\u2019s fixed though :smile: \n. :(\n. Hmm, it that case they might not be related after all. I just tried this, and couldn\u2019t reproduce it at all. alex < example.md works perfectly for me. So does echo \"His network looks good\" | alex. Both with a clean install:\ntxt\n\ud83d\ude80  ~: node -v\nv5.1.0\n\ud83d\ude80  ~: npm -v\n3.3.12\n\ud83d\ude80  ~: alex --version\n1.6.1\nFor some reason there seems to be something right with my system or wrong with yours. Could you try reproducing on another computer / set-up?\nP.S., the same goes for wooorm/mdast#90.\n. Ah, that I can reproduce!\ntxt\n\ud83d\ude80  ~: npm -v\n1.4.28\n\ud83d\ude80  ~: node -v\nv0.10.40\n\ud83d\ude80  ~: alex --version\n1.6.1\n\ud83d\ude80  ~: echo \"His network looks good\" | alex\nNow, I\u2019m seeing an error when installing alex on node@0.10:\ntxt\nnpm WARN engine get-stdin@5.0.1: wanted: {\"node\":\">=0.12.0\"} (current: {\"node\":\"0.10.40\",\"npm\":\"1.4.28\"})\nWhich, I\u2019m guessing, is exactly this problem you\u2019re seeing.\nTo be honest, Node@0.10 is pretty \u201cancient\u201d. So I\u2019m not really interested in putting in the hours to get that working. Also: I confirmed alex is working as expected for node@0.12.\nSo, I hope this won\u2019t conflict with your setup, but I\u2019m closing this!\n. Yeah, I can imagine. Getting it to work wouldn\u2019t be very hard but it would mean downgrading a dependency, meaning it won\u2019t get updates/fixes which is quite the deal.\nSucks those distros don\u2018t update their node versions. :anguished:\n. I\u2019m guessing that to be the most viable cross-OS option!\n. Hey @nslater!\nThanks for the issue. :smile:\n-   What considerate alternatives would you suggest, instead of \u201csane\u201d?\n-   Would you be interested in creating a PR? Basically, you\u2019d add a new pattern to retext-equality/script/ablist.yml, like so, and then (after npm install) execute npm run build to update the distribution files.\n. @nslater Ping!\n. Closing due to no response.\n. Thanks for the great contributions, @shinnn!\n. @ethanostrow Thanks for the suggestion.\nThere\u2019s no such plug-in yet, would you be capable and interested in creating it?\n. I don\u2019t have time for this. If someone wants to pick it up I\u2019d be glad to help, but I\u2019m closing this as it won\u2019t be included in the foreseeable future.\n. Thanks for the issue, @netsi1964.\nFirst of all, please post plug-in related questions on the atom-linter-alex repo, in the future.\nOn to your question: out of my control, atom-linter-alex is built on the AtomLinter, which provides the interface between messages and Atom. I suggest raising the issue over there, if you\u2019d like AtomLinter to provide an interface for clickable suggestions which change the marked words into suggestions.\n. :+1:\n. If you use bower, you\u2019ll get precompiled distribution files. I\u2019ll remove bower support soon, and move the distribution files over to GH releases.\nAll other packagers receive the source files. Check out index.js.\n. Would be cool, but there\u2019s a lot of work involved in that: you need a powerful parser, which can take a while to create. As an example, the markdown parser took me \u00b1 two years to write.\nIf anyone is interested, be my guest, but I don\u2019t see this happening (in the coming years), so I\u2019m closing this.\nP.S. have you used alex.text(), in JS, or alex --text on the CLI? It will lint the code in ReST too, but at least it\u2019ll catch warnings in links and whatnot.\n. Interesting, especially that that form, alexander, comes from the more generic \u03b1\u03bb\u03b5\u03be\u03c9 (alexo, meaning defending). Let\u2019s just say alex is derived from the latter, okay?\nHappy Holidays! :christmas_tree:\n. Good suggestion!\n. Definitely like this idea! Thanks for taking the time to write this down :+1: \n. Unfortunately, this will have to wait a bit. It will take quite some time to rewrite all messages, and I\u2019d rather ship 2.0.0 now!\n. :+1: \n. Closing for now, I\u2019m still super open to it, but I don\u2019t have time for it (apparently) on my own backlog. If anyone wants to work on this: ping me!. Thanks, I\u2019ll dig in!\n. Okay, the three commits above fix the warnings you mentioned. If you rm -rf node_modules/ and npm install again, things should be operating normally!\nThanks again for raising the issue!\n. Nice, thanks! Will merge this somewhere soon today and publish it as a fix!\n. @rugk Thanks for the suggestion, if you want this now you should add it to wooorm/profanities. This file, to be exact.\n. Whoops, forgot to close here. If you re-install alex your fix is included!\n. Thanks for the suggestion, @condret.\n. This was fixed somewhere in the past, no idea where!\n. Thanks for suggesting, @rmmonster.\nThe profanities were recently added and this is a bug there.\n. I added more nuance to the profanities. As both homosexual and gay can be used as profanities, both get messages (Reconsider using \u201cHomosexual\u201d, it may be profane, and Be careful with \u201cGay\u201d, it\u2019s profane in some cases). The retext-equality dependency also warns for homosexual (suggesting gay instead).\nSee ignoring messages to deal with unwanted messages in general.\n. That\u2019s not going into alex and I\u2019m not interested in working on it.\nLuckily, someone on 4chan already did, I seem to remember it being called \u201cXenaJS\u201d but I\u2019m not sure if it\u2019s still online.\n. I don\u2019t like to add \u201cjew\u201d, as that\u2019s a perfectly valid word, and from my reading it is the preferred term for that group. Unlike \u201cgyp\u201d, which is not the preferred term by a group of people. If you don\u2019t agree, please supply a source.\nRegarding \u201cjewed\u201d, I agree, please provide a source.\nAlso, I suggest request a pull on retext-equality if you want to move this along.\nFrom your profile and your tweet, you don\u2019t seem to have much experience with open source. Please let me know if I can help and advice with that.\n. @apapadimoulis Your words have convinced me, but your tweet makes me doubt intent. Please provide a source.\nAlso: if a group refers to themselves in a certain way, think of Hip Hop culture, doesn\u2019t make those references OK in general.\nAnd, importantly, this is not a race between whichever group is most offended by a given reference.\n. Hey @polygeekery, @apapadimoulis, your trolling was fun but now you\u2019re boring me.\n@polygeekery Yeah, sure, I suggest removing them from wooorm/profanities, through the not-so-bad.txt file. I suggest only removing the really-not-that-offensive words (e.g., nuke).\n. The message for Jew is now Be careful with \u201cJew\u201d, it\u2019s profane in some cases; and for Jewed, Don\u2019t use \u201cJewed\u201d, it\u2019s profane; which I believe covers several uses of the phrases correctly.\n. Thanks for the suggestion, @apapadimoulis. In the future I\u2019d like to make this kind of grading possible though!\n. The message for Niggardly is now Be careful with \u201cNiggardly\u201d, it\u2019s profane in some cases, which I believe covers several uses of the phrase correctly.\n. I\u2019m not sure why it\u2019s the task of this alex to name itself differently? (side note: the name alexjs is only used in the domain, nowhere else, I dislike it :wink:)\nSure, it\u2019s possible to add another link, but I feel it\u2019s like feature creep.\nI think I\u2019ve suggested this before to Coala: instead of using npm install -g, install without the -g flag and use the correct version.\nnpm uses -g for commands installed by the user; if it\u2019s a dependency it\u2019s best to version it with the host package (coala).\nIf you\u2019re using npm install alex remark, that means you can use ./node_modules/.bin/remark and  ./node_modules/.bin/alex and be sure it\u2019s the correct remark or alex, respectively.\nWhich seams pretty good?\n. Yeah, I understand, either adding a new (symlinked) binary or my proposed solution would work for that, but my suggestion would have nice benefits (like better version control, so if a new version of remark or Alex is published it won't affect coala.)\n. Yes, no $PATH, just a local reference to ./node_modules/.bin/alex.\nWhy would users have to specify that location? You can specify it directly in your code, and there\u2019s no differences between systems (other than / or \\).\n. @sils1297 Wait, what is @AbdealiJK\u2019s solution?\nDoes this mean this I can close this?\n. OK, great! Please let me know if I can help in any other way :+1:\n. Haha :ok_hand:\n. I just now saw that users have to manually install the npm dependencies.\nI was under the impression coala installed those into its own directory, any reason why that\u2019s not the case? If it would, that means every user can run those linters without having to manually install them!\n. @AbdealiJK I think it's more awkward for users to have to install 6+ packages when they want to use coala, whereas with the by me proposed solution, they would Install coala and be done with it.\nThis problem isn't just alex, or remark, it will arise more and more if there are other 'bears' added.\nNote that in the case of node, they didn't change the name of node project.\nCircleCI: one can specify a path to a binary.\nI'm not going to rename remark or alex: I cannot control if some other package is created in the future, pics one of these names (or if I do that, by accident), and becomes popular.\nSure, I don't name thing 'ls' but Alex and remark are perfectly reasonable.\n. \ud83d\ude02\n. I\u2019ll accept a PR for this.\n. Thanks for the question, Nate.\nThat\u2019s because there\u2019s no allow parameter for the alex.text() function: allow only works with alex.markdown() and alex().\n. Great idea, thanks for suggesting! There\u2019s quite some chance of false positives though, so I\u2019ll need to think about how to implement it.\n. The message for Spa is now Be careful with \u201cSpa\u201d, it\u2019s profane in some cases, which I believe covers several uses of the phrase correctly.\n. Great suggestion! \ud83c\udf89 \n1) What do you suggest instead?\n2) You can add a pattern yourself through a PR in wooorm/retext-equality.\n. @yoshuawuyts \ud83d\udc4d\nRegarding muslim person, I believe \u201cperson\u201d there is redundant (think ATM Machine) as muslim already refers to a person (wikipedia definition: \u201cMuslim [...] relates to a person who follows the religion of Islam\u201d).\nmuslim and person of Islamic faith are great!\n. Close! The patterns.json file is created from the YAML databases in script/. I\u2019d appreciate it if you add it there.\nP.S. I\u2019ll add a section in the README about contributing \ud83d\udc4d \n. Added the section on wooorm/retext-equality. Also: what do you suggest instead?\nP.S. Great suggestion! \ud83c\udf89 \n. Agreed! \ud83d\udc4d\nI recently included a list of profane words and it\u2019s overly sensitive. I\u2019m currently in the process of rating how big the chance is that those words are or aren\u2019t profane, and adjust messages accordingly.\nIt\u2019s a lot of work so it will take a while though, thanks for your patience :)\n. Seems I just lost the work \u2019till now, but the project is here: https://github.com/wooorm/cuss. If you\u2019re interested in helping, fork it, and rate the phrases in data/index.json (0, 1, or 2). See the readme for more info and examples! :)\n. The message for Chinese is now Be careful with \u201cChinese\u201d, it\u2019s profane in some cases, which I believe covers several uses of the phrase correctly.\n. Thanks Rebecca!\n. > I say we should take some time and proofread our files a bit.\nI say we shouldn\u2019t be passive aggressive.\n. Haha, great!\nThanks for the suggestions!\n. No.\n. Duplicate of wooorm/alex#69!\n. Could you expand on that?\n. ...was quite long \ud83d\ude09\nSure, that\u2019s possible. But it\u2019s not a regex. Would you be interested in PRing?\nThe right places are profanities and cuss.\n. No problem!\nYup, it won\u2019t be easy to add total support for compounds, but I also think it would be very viable. think rapist, which is profane, but not in therapist. Now, I don\u2019t believe the letters fuck are used in any non-profane words, but most are.\nTo keep false-positives low, I\u2019d prefer just listing words in the aforementioned libs\n. I added it to profanities; will add to cuss in a second. If you\u2019d like to add more, please PR there!\n. There already is such a flag (-w, --why), but there aren\u2019t many sources yet! \nPlus, glaad is already used, but please add more sources!\nThis issue in particular is caused by a mismatch between retext-profanitites and retext-equality. Thanks for noticing. I\u2019ll deal with that somewhere soon this week!\n. I'd love that!\n. Hi @rugk! Thanks for the issue! \ud83c\udf89 Brexit related, maybe? \ud83d\ude09\nI believe it\u2019s a misspelt/shortened form of uck (you should be able to find definitions for that on Urban Dictionary).\nYou pose two suggestions: the last being case-sensitivity. I don\u2019t really like adding that, as that would make the algorithm quite brittle: it would be easy to get past the algorithm, and the algorithm would miss possible problems. I\u2019d rather have more messages.\nalex is not a very smart program. It emits many messages. It\u2019s up to the human to handle those messages as they see fit. However, alex does already grade possible offences: Be careful with UK, it\u2019s profane in some cases.\nI suggest the section on ignoring messages in the readme.\n. @rugk That seems like a very different bug! Could you open another issue to discuss that?\n. Fixed in 4.1.0!. Hi @dakshil, thanks for helping!\nDo you have any suggestions of what terms to add?\n. Oh and if you\u2019d like to help you contribute to retext-equality, or profanitities/cuss!\n. @dakshil Ping!\n. :+1:\nCould you also expand on why you think alex should highlight beg? Do you have sources which describe why it\u2019s insensitive?\n. @dakshil Hi \ud83d\udc4b \nThe by you linked article doesn\u2019t explain what I asked for. It contains one comment by an anonymous user, which I don\u2019t find a good source. In fact, from Googling around a bit I find more references to panhandling being bad.\nCould you find a better source? Or get some community support for this?\n. Thanks for raising, again, I\u2019m closing this for the aforementioned reasons.\nDon\u2019t forget that you can always create your own retext plugins if you\u2019re so inclined, and roll your own \u201calex\u201d.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Oh I like this! Awesome!\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Closed by 8a9559c.\n. Good ideas! Do you have some suggestions for alternatives?\n. @traustiasg Ping!\n. Indeed, it would be possible to add an option for that.\nIf you really need it now, I suggest going with unified directly (this is just a small wrapper around the by you highlighted code).\nI\u2019ll add support for passing noBinary in alex as well though.\nRe the second part of your question: if you want to champion it, could you open an issue over on the correct repo (retext-equality)?\n. Literal means words in quotes, like those examples you used above, but your screenshots don\u2019t show them.\n. - You can allow certain cases through several methods. These probably won\u2019t work in the slack integration though, but that\u2019s an issue for that repo.\n- It\u2019s not possible to add new patterns, either add them in retext-equality, retext-profanities, or create something like those plugins and integrate them in your own system.\nI\u2019m closing this issue here as the original question is answered!\n. I laid some of that out in GH-14.\n. Closing, if someone wants to work on this I\u2019d be glad to help!\n. No backcompat.\n. \ud83d\udc4c\ud83d\udc4c\ud83d\udc4c\nWant to PR?\n. Also: wooorm/retext-profanities does the profane words (without suggestions)\n. I added a paragraph covering this. Hope it helps?!\n. \ud83d\udc4c \n. No need to do this.\n. It\u2019s a feature, not a bug!\n\nA tab or 3 or more spaces at the beginning will cause nothing to be checked\n\nThat\u2019s \u2019cause it\u2019s markdown. The CLI and API both provide ways to turn that off.\n\nAlso, nothing inside quotes is checked either.\n\nThat\u2019s because quotes aren\u2019t often something one can change, as they\u2019re often meant literally, or said/written by someone else. Read more about that here: https://github.com/wooorm/alex#support\nThanks for the issue! Feel free to comment or raise new issues if you\u2019ve got more questions.\n. Sure!\n. Thanks for the issue, @kiipa, the fact that Jesus is considered profane (or, in fact, the message reads \u201cmay be profane\u201d) has to do with that word being used as a profanity (for example, as in Jesus, my big toe!) whereas to my knowledge muhammed is not. I\u2019d love to know about it though, if you see the latter used that way.\nCheers, hope you enjoy open source!\nP.S. Thanks other peeps as well! \u2764\ufe0f \n. Thanks @glenlife. I can\u2019t find much on ebe, ebephile, do you mean hebephilia related terms?. Do you have sources for that?. Good one, thanks for the suggestion @snood1205!\nIf you\u2019d like to add delirious to alex, the right place to do so is a PR to add a new pattern in ablist.yml in retext-equality.\nWould you be interested in helping out?. Oh and sorry for the late response!. Great! Let me know if you need help with anything!\nP.S. That\u2019s a very kind response, thank you!. Fixed!\nThanks so much, @snood1205!. Hi folks! :wave:\nWe\u2019ve discussed this a bit in GH-14 (and later GH-130). I\u2019m all for multiple languages, but I can\u2019t help with Spanish.\nIf you\u2019re interested. Click \u201cfork\u201d on retext-equality, translate stuff, and publish! Afterwards, we can see how to integrate it into alex!\n. Anyone interested in starting work on this?. @agustingrigoriu Ping!. Sorry for the wait folks! Thanks @ClaudioOliveda for your interest!\nThe files that need to be translated are the YAML ones in retext-equality.\nFor starters, I suggest the following workflow:\n\nFork retext-equality\nCreate a branch for Spanish\nTranslate the YAML files\n\n...if those files are translated, we can see about making retext-equality support multiple languages. Maybe a monorepo? Anyway, that\u2019s stuff for later!\nDoes this help?. Closing due to no response.\nFeel free to ping again and I\u2019ll re-open this issue if someone would like to work on this.. Could you provide more info? I\u2019m not seeing browser being incorrectly highlighted.. That would be awesome! However, it does involve a lot of work.\nI can help with that, but I can\u2019t help with Arabic. Are you interested and able in taking this on?. Sorry, didn\u2019t mean to close it yet.. @codezplz Ping!. Closing due to no response.\nFeel free to ping again and I\u2019ll open it again if someone would like to work on this.. Oh gosh, I haven\u2018t pushed alex@4.1.0 yet! \ud83d\ude31\nI just did, I think it should work, could you check again?. Pfew, good!\nSorry about that, and thanks for reaching out! \ud83c\udf89. Thanks for using alex, @fahad19, and hi!\nThis is intentional. Globs are expanded, and you\u2019re saying like \u201cget README.md and MAINTAINERS.md\u201d, but then \u201cdon\u2019t get MAINTAINERS.md\u201d, and alex knows not what to do.\nThe simplest fix is probably to let alex find files itself: alex .\nCould you check if that works?. Great!  Sure, no problem, and glad to hear!\n\ud83d\udc4b. I think this should be okay if you use a newer version of node in travis (where const is supported). Could you check if that works?. Great! Thanks for using alex :). Normally, host or hostess are considered okay, as both a male and a female form occur.\nIf you pass in noBinary: true, host or hostess isn\u2019t okay, and you should use presenter or entertainer instead.\nIt seems you want to use the allow feature instead?. > I should also add that the 'allow' option doesn't allow you to override.\nWell, you\u2019re initial Q was this:\n\n[...] the noBinary option, I thought it would remove (if set to false) warnings for retext-equality terms.\n\n...and if you want to do that, you can use allow: [\"host-hostess\"], or <!--alex ignore host-hostess-->, but there\u2019s no way to turn of all retext-equality checks: you can use retext-profanities directly if you want that!\n\nThe recommended alternative doesn't really make sense in the context of Host computers. I'd be interested is alternatives...\n\nCorrect, alex isn\u2019t smart enough to know how a word with different meanings is used. In this case, <!--alex ignore host-hostess--> makes the most sense!. This project is primarily intended for technical documentation, and these words are highly unlikely to appear there.\nThis project is not intended to be a spam filter: there\u2019s many ways to get around alex if that\u2019s your goal, leetspeek, etc.\nIf you\u2019d like to add profanities to be checked by alex, the right place to do so is a PR to profanities.. The word \u201cdefault\u201d here means if you\u2019re using alex.\nnode_modules are also ignored if you\u2019re passing in files and directories (alex docs readme.md).\nnode_modules are not ignored if you\u2019re passing in globs that match files, as globs are often expanded by the shell: alex doesn\u2019t see **/*.md, it gets for example readme.md node_modules/something/readme.md.\nAs a fix, use alex ., and then add patterns to .alexignore that you don\u2019t want checked.\nAlso: maybe the --diff flag is of interest.. Not?\nsh\n\ud83d\ude80  example: alex\ndoc/getting-started.md: no issues found\ndoc/plugins.md: no issues found\nreadme.md: no issues found\n\ud83d\ude80  example: alex -q\n\ud83d\ude80  example: alex -q .\n\ud83d\ude80  example:\nCould you provide information on how you\u2019re running things?. The stuff you need to add to allow is this:\n1:1-1:4  warning  Don\u2019t use \u201cWTF\u201d, it\u2019s profane  wtf  retext-profanities.\nSo if you see a warning, add that part (the rule identifier) to allow. Due to technicalities, it\u2019s not easy to allow any value in there, but I\u2019m definitely for better docs! Do you have a suggestion what to add where?. Thank you!!!\nDo you think this small note will make it clearer what the rule sources are? Or do we need more?. Alright, great!. Thanks so much @SheetJSDev!. Hey!\nAfrica is already marked as an unlikely profanity, and I just did the same for Niger in the lower-level cuss module, as the words can still be used as a profanity. alex isn\u2019t very smart, but it can help find things you may have forgotten. Anyway, you\u2019re the human, you\u2019re much smarter than alex.\nThanks for reporting!. This is a feature. These words, literals, are ignored!. Those messages are generated by retext-equality, here. I think it would be great to have better wording.\nWant to talk over there?. Hi @zakattak! It\u2019s from cuss: https://github.com/words/cuss. You can open a PR / issue there. I\u2019m not sure which weight to choose for either words though, but I guess syncing them makes sense.. Aww, with a title like that I expected a joke about serial commas, but alas...\n\n\nYou guys have reached your peak as a culture and now whatever you are doing now is just a down hill journey.\n\nWe as a community prefer not to be addressed as \u201cyou guys\u201d.\nFinally, with regards to what I think you\u2019re trying to tell us, @optikfluffel\u2019s response is pretty apt:\n\nyou do understand, that nobody forces anyone to use alex, right? If you don't like it, think it's unnecessary or even bad then please just move along and ignore it. Thanks.\n\n...especially the lion king gif! \ud83d\udc4d. True! Could you do a PR to change this line with something else then?. Sweet! Would you be into adding it to the readme as well? https://github.com/wooorm/alex#integrations. Sweet, thanks @yohanmishkin!. Done!. Hi Bex! \ud83d\udc4b\nThanks for chiming in. This is not something that can change: alex isn\u2019t very smart in catching things, it has no sense of context, and that\u2019s what is needed to be able to deal with this case.\nHowever, there are several ways to ignore messages. You can ignore host in all files by allowing, or in this specific case with disable or ignore comments.\nAnd finally, there\u2019s the --diff flag, but that won\u2019t work in the probot package.\nIt looks like the \ud83e\udd16 package processed the whole document, instead of just the changed lines?\nIn fact, I think there\u2019s no support in the \ud83e\udd16 package to ignore messages? \ud83e\udd14\nMaybe we can collaborate on a package like unified-engine-atom, which makes it easy to create an Atom linter from a unified processor (such as atom-linter-alex), but for probot apps. . @hiimbex Ping :). Thanks for getting back to me, Bex!\nWell in that case I\u2019ll close it for now, but I\u2019d like to collaborate on it if you\u2019re up for it in the future! . Any suggestions on what we should do?\nI\u2019m thinking something along the following pseudo-code lines:\njs\nif (input.length !== 0) {\n  // use args\n} else if (process.stdin.isTTY) {\n  // definitely no stdin. use defaults\n} else {\n  someFunctionToReadFromStdin(function (_, buf) {\n    if (buf) {\n      // definitely stdin\n    } else {\n      // no data on stdin, use defaults.\n    }\n  })\n}\n/CC @sindresorhus - What do you think?. Right, but we have default globs if there\u2019s no input \ud83d\ude2c. Sure, PR welcome!. Thanks Riley!. Thanks!. Perfect, squee! \ud83e\udd17. @gretzky Sorry for the slow reply. To get a new profanity in there, you need to PR to profanities, and then when that\u2019s released, to cuss. Then it\u2019ll be automatically in retext-profanities and alex as well!\nfor the duplicate warnings, that could be another issue, to ignore profanities if they\u2019re already warned about in equality.. @gretzky Would you be into creating a PR for the first case, and open another issue for the second?. @gretzky That is very nice! However, when you say \u201csmall\u201d, it actually uses words/brill which is 1.8mb minified! I\u2019m not sure it\u2019s a great idea to add so much more code to alex! \ud83d\ude40. Thanks, Josh! I\u2019ll take some time tonight to properly respond!. Hey again Josh. I\u2019m sorry, I\u2019m not going to be able to spend as much time on a response as you did on this write-up. I simply don\u2019t have enough time in my life right now as I used to.\nI need alex. I needed alex when I wrote my thesis and created alex. My friends need(ed?) alex as well. That\u2019s why it\u2019s here and why it\u2019s open source.\nI think the idea of alex is more useful to a lot of people than the implementation. And as you proved with your examples, it\u2019s never going to be a perfect tool. But it is a tool, and it helps, and yes, humans are smarter than this tool. Beep boop. \ud83e\udd16\n\nFor your code examples, feel free to create a PR that implements something like retext-sentiment. Maybe that helps\nThe goal for alex is to make you, as a human, think. We don\u2018t care about your use case 1 or 4. But your use case 2 (\u201cHumans that care about other humans\u201d), includes me, and others, that do need a little help. I think one part of that is difference in culture. There\u2019s many things that maybe you, as an American (I believe?) don\u2019t need, but that I, as a non-American, could definitely use a hint for.\n  For use case 3, sure. Would be helpful, PRs are open \ud83e\udd37\u200d\u2642\ufe0f\n\nLook, most of this is about docs. We could use some help. I\u2019m going to try and fix some tomorrow. We\u2019re doing hacktoberfest. Feel free to help out, and maybe there\u2019s a t-shirt and some stickers in it for you! Feel free to help! \ud83c\udf89. Thank again Josh. Let\u2019s split this up though.\n\nInvestigate sentiment detection\ninvestigate if afinn / retext-sentiment are enough\n\n\nSuppression of speech\nCould you look into the readme and the website, and open issues for small problems? I\u2019d like to use those issues for hacktoberfest to get first-timers into open source.\nBigger stuff could be PRs!\n\n\nI like your data-model proposal. Could you create another issue, superseding GH-72, with this suggestion?\n\n\nWithout NLP, the problem of intent - the whole point of my posting here - is going to cause friction and remain academically inaccurate until the results are more applicable. \"She is black\" and \"That UI component is black\" are not equivalent in terms of insensitivity - this is factually undeniable.\n\nI think that NLP, or to be more precise, a machine-learned algorithm, will still be insensitive. There are some cases where algorithms report black as bad, and white as okay, or islam as bad, and christianity as good. That\u2019s unrelated to a more sensitive thing though. I\u2019m all for that.\n\nif your goal is to curb truly insensitive writing.\n\nThe goal is to help with accidental insensitive writing.\n\nI'd love to work on this personally as Retext seems fun and it would be a good excuse, and I'm sure there would be interest from others as well.\n\nAwesome!!!. Hey @SleeplessByte, thanks for your reply. I do appreciate it, but could you vote on issues and comments with GH\u2019s reactions? Again, I appreciate the comment, but it doesn\u2019t add new things, and I\u2019d prefer to keep the issues here on topic and concise.\nAlso, feel free to open new issues and help out with something for #72!. I opened a few new issues to individually work on the things I highlighted above. @Qix-, feel free to work on point 2 of https://github.com/get-alex/alex/issues/196#issuecomment-425076007 if you\u2019re into that.\nI\u2019m closing this now, and hope to discuss stuff on the new issues!. Hi @devkant, thanks for offering! I suggest waiting for october 1st, so as to participate in hacktoberfest if you\u2019re into that. But yeah, feel free to take a stab at it now, and let us know if you need help.. @hiteshpr Let\u2019s wait for @devkant, he responded first!. @devkant Not sure if @hiteshpr Is still working on this, so feel free to take a stab at it. Or anyone else :). Hey @cunhazera! Do you mean https://github.com/get-alex/alex/issues/198?. No problem, feel free to help out with that one!. Hi @AidenMead, yes, that would be great! I\u2019d love a PR, and make sure to share your progress early. I think this issue could be fixed in many different ways, so let\u2019s talk about it when you have something we can discuss.\nAnd feel free to ask us for any tips :). Yes, feel free to help out everyone!. Hi @Redarcher9! Yes, please!\nI\u2019d suggest waiting till tomorrow to participate in hacktoberfest though! \ud83c\udf83. If you\u2019ve installed Node already, you should be fine following the contributing guides.\nNote that the website is on the website branch, and the file you\u2018re looking for to add the corner is src/index.html. If you change that, and run npm test, all files are minified and built to the dest directory. If that looks file, you\u2019re done! \ud83d\udc4d. @meetcric Let\u2019s give @Redarcher9 a shot first!. @meetcric Yup, https://github.com/get-alex/alex/issues/199 I think!. I believe he misplaced his comment, so I think you're free to work on that one!. @meetcric Could you discuss that problem on its own issue (GH-199)?. Whoops! I forgot to close this issue! Here, let me do that.\nI totally agree that it could be styled better though, @TJScalzo, I\u2019d appreciate a PR for that.\n@svcastaneda thanks for chiming in! Hmm, I hadn\u2019t thought about that. The corners are used on a lot of websites, the animation is always in there.  I guess most corners thus ignore the \u201cChange the colors, dimensions or add your own text/images\u201d rule. Are you suggesting we remove the corner? \ud83e\udd14. Heya, yes, feel free to help out! I think this one isn\u2019t very easy, so I\u2019m sure multiple people can work on it.\nLet me know if y\u2019all need help :). I don\u2019t think so, but I don\u2019t know.\nBut maybe it works to split this up, e.g., someone work on the API (index.js), someone else on the docs, someone on the CLI, etc. If someone starts, we can open new issues for the other parts.. Thanks @riley-martine. Could you create a PR for that? That makes it easier to review :)\nWhat I didn\u2019t mention before, is that an HTML processor should ignore all stuff that is not readable text. I think we should ignore things in <script>s or <style>s for example.\nAnother thing: If both markdown and HTML are in the default globs, we need to check files to see if they are either Markdown or HTML (potentially from the extensions again). Or maybe there should be a --html mode that just looks for .htm, .html files, and not markdown (and a --markdown flag for the other way round? \ud83e\udd14). Alright, we\u2019ve got the CLI! Now we need the same functionality for the API, docs, and better tests. Anyone up for helping with those?. @CRomano31415 Please do! Feel free to open a new issue / PR about Spanish\n@JekRock Under the hood, mainly Latin-script languages are supported. Cyrillic could potentially work. See parse-latin for the main parts about it.\n@deatheguard French would be great. Looks like you found GH-207 already. For English, you can just help with retext-profanities and retext-equality already!\n@baezor Please do as well! Let\u2019s check if @CRomano31415 opens an issue so y\u2019all can collaborate :). @AhmedRedaAmin Yes, feel free to do that, and create a new issue for it! \n\nNote : it includes numbers for some Arabic sounds , if that will cause problems for parse-latin\n\nI\u2019m not sure, I don\u2019t know Arabic, let\u2019s try it out!. @inesbenomar18 Awesome! For french, start with GH-207. And feel free to open a new issue about Arabic (note though that I think Arabic-script may not be properly supported). @rampagesang Awesome! Unfortunately I don\u2019t think languages that use a script other than the Latin-script can work with the current technical setup :(. @Yangeok Hey, that\u2019s cool! I don\u2019t think Korean will work (see the comment before yours), but German would definitely work!. @waaghree Yep, romanised can work. For inspiration, see the Arabic cuss file added in https://github.com/words/cuss/pull/16!. @GledsonAfonso We could definitely use a section on internationalisation in the contributing.md file!. Sure, you could create a separate issue, or if you\u2019d like to work on it feel free to take a stab at it!. Perfect, thanks @nikewall!. Weeeee \ud83c\udf89 Very nice, @lex111!. Hey @bvishal8510, thanks for working on this! We already have a contributing file, and you can see it here: https://github.com/get-alex/alex/blob/master/contributing.md. I agree with @nathfreder that this is very specific, it could be a bit more lively and fun, more human.\nCould you add a section to our existing file instead of this new duplicate?. Hey @bvishal8510, unfortunately someone else has now, after 3 days of no response, worked this out in GH-211, but still, thanks for working on this!\nIf you\u2019re up for another challenge, do peruse the other issues.. Wow, awesome folks! Thanks for the interest! \ud83c\udf89\ud83c\udf83\nAs this issue is the first for a language, I\u2019m not entirely sure how to approach this. I played some ideas out in #202, what do y\u2019all think about those?. @deatheguard Perfect! You can help review https://github.com/words/cuss/pull/15, or maybe start work on retext-equality? \ud83d\udcaa. Soo, we landed French in cuss! Thanks @cynferdd, @AurelieBayre, @cedroid09, and @deatheguard for working on this! \ud83c\udf89\nThe next step is to add something for French to retext-equality. Anyone able and interested to work on that?. Hi @erickzhao \ud83d\udc4b\nThis is still a very vague issue, but awesome that you\u2019re interested!\nWe came up with it in #196, but we\u2019re not entirely sure whether it\u2019s useful or feasible.\nThe perspective API is super interesting! I\u2019m not sure if we should send all docs over the network though. And I\u2019m not sure about the fact that it focusses on comments, and whether it would work for us.\nA first step could be to paste some readmes and docs of popular projects into the online demo.\nA second, could be to drop retext-sentiment into a pipeline, e.g., something like this:\n```js\nvar processor = unified()\n  .use(remarkParse)\n  .use(remark2retext)\n  .use(sentiment)\n  .use(plugin)\nprocessor.runSync(processor.parse(doc), function (err, file) {\n  console.error(vfileReporter(err || file))\n})\nfunction plugin() {\n  // check all paragraphs, detect very negative ones, and emit a message about them\n}\n```\n...run that over a few big projects, and see whether it works?. @swastikbanerjee07 This project is in JavaScript, but that could definitely be another project!. Note that there are some bad examples of racist algorithms. I\u2019m doubtful if this would work.. Also related to GH-72.. Note also that this is a pretty big issue, it\u2019ll require many conditions to the original files!. @jonyeezs Hmm, it can be split up by first doing one initial condition, and writing the code for that, and then slowly porting the rest of retext-equality over? \ud83e\udd14. Would you like prefer issues for that?. @jonyeezs Oh don\u2019t worry about it, it\u2019s not silly at all :) I\u2019m sure other people have the same question, thanks for asking it.\n\nyeah slowly porting over seems less overwhelming.\n\nwould you be able and are you interested to work on the first condition and the initial code?\n\nSide-note: This is inspiring me to create a chrome extension! But that would be for another future date XD\n\nPlease do! It\u2019s also not easy, probably hard, though. Some people have tried but never finished it!\nAnd thanks for your lovely comments about alex, I appreciate it \ud83e\udd17. @Murderlon Could you expand on what you mean? A bit of a more actionable suggestion?. Thanks @vaishnavi-janardhan!! Congratulations on your first contribution here!\n@Murderlon Feel free to open a new issue if you think this line could be better!. @CRomano31415 Nice! \ud83c\udf89\n\nGathering list of words in Spanish, to be placed in sp-json file, get one started so we can modify!\n\nPush early so people can help \ud83d\udc4d\n\nhow to tag lists of words as there is considerable difference in meaning based on geographical areas, ideas?\n\nDepends, are you working on profanities or equality?. In case of profanities, maybe there\u2019s some lists like this already out there!. @fportela-ns You mean @CRomano31415 I think \ud83d\ude09\nThis looks like a really good start! Awesome work all!\nHow do you all want to proceed? How can I help?. Soo, we landed Spanish in cuss! Thanks @CRomano31415, @baezor, @MrBenJ, and @fportela-ns for working on this! \ud83c\udf89\nThe next step is to add something for Spanish to retext-equality. Anyone able and interested to work on that?. @MrBenJ Awesome! And that\u2019s fine, take your time! :). Sweet!. @tmott13 Hi Tanya! Thanks for working on this!\nLooks like you PRed the index.html to the wrong place though. Now it\u2019s in the root of the website branch but it\u2019s supposed to be in the src folder. Could you try again, taking care to follow the steps laid out in contributing.md. OK, don\u2019t worry, and let\u2019s talk on GH-215. Note that it\u2019s a hard but it\u2019s possible to do this all in the same PR, if you ever have some free time to figure that out \ud83d\ude09. Perfect!. Oh it looks like you haven\u2019t pushed the code yet, could you do that, and I\u2019ll merge! \ud83d\udc4d. @tmott13 Awesome Tanya, thank you! Congratulations on your first merged PR here! \ud83c\udf89\ud83c\udf89\ud83c\udf89. Nice @riley-martine! I think there\u2019s some more stuff to do, e.g., docs and API support.\nWhat do you think future work is, then I\u2019ll open some more issues for them!. Thank you @MrBenJ, this is great! \ud83c\udf89. Congrats on landing your first PR here! \ud83c\udf89. Awesome @AhmedRedaAmin!. @AhmedRedaAmin I added help wanted and hacktoberfest (though those don\u2019t affect your progress with hacktoberfest, they will help people find them easier).\nI\u2019d suggest starting with a small file, with only a few cases. And then let other people help to add more.\nIt doesn\u2019t have to be everything all at once.\nAnd that\u2019s also why I don\u2019t think beginner-friendly works yet, because we first need a base that people can work from!. @AhmedRedaAmin No I\u2019d suggest creating a pull request as early as possible! \ud83d\udc4d We can move from there!. Thanks for working on this @AhmedRedaAmin! That\u2019s awesome.\nThe next step is to add something for Latin-script Arabic to retext-equality. Anyone able and interested to work on that?. If you have the proper thing locally, but something else on your remote branch (in this PR), you can force push (git push --force) your changes to the remote.\nNormally you want to be careful overwriting remote things, but as this is your branch, it\u2019s fine! \ud83d\udc4d. @laurenmayers Anything we can do to help?. I think this issue isn\u2019t really a problem, as this is just stuff user for development. It\u2019s not like we\u2019re running a server that could crash (in which case this would be a problem).\nI do think that other people will see this warning and take it too literally though, so I\u2019m fine with upgrading to ava@next \ud83d\udc4d. Perfect! OK if I close this?. Hey @edorado93, could you expand on why these changes are needed?. @edorado93 Could you add that line again? Then it\u2019s good to go! \ud83d\udc4d. @edorado93 Thanks for clarifying! Maybe we can reword that line, in all places it occurs, in a better way?\nFor example, something along these lines:\n```\nA message for this sentence will pop up.\n...\nAnother message for this sentence will pop up.\n...\nNo message for this sentence will pop up.\n...\n```. @edorado93 Still working on this? Anything we can do to help?. @MauroCoppola Hello, nice to e-meet you! I like most of these ideas! But could you expand on the below points?\n\nIndentation for API explaination;\n\nI\u2019m not sure what you mean with this \ud83e\udd14\n\nDedicated .md file for API documentation;\n\nHmm, wouldn\u2019t that make it harder to find stuff?\n\nParticular style for API title to avoid misunderstanding with document's headers.\n\nDon\u2019t we already have that?. @MauroCoppola What do you think about my previous comment? Anything I can clarify?. @MauroCoppola Ping!\n@bu7ch I\u2019m not sure yet whether this is an actionable issue.. @MauroCoppola Thanks for getting back to us!\nHmmm \ud83e\udd14 I don\u2019t feel like moving the API docs to a different place is going to help with readability / findability, as then humans looking for answers need to go to different places, and CMD+F doesn\u2019t work anymore.\nAlso not sure why you see the integrations, at first sight, as part of the last API heading. The alex.text heading uses a smaller font that integrations.\nAnd the API headings already have a different style: they are wrapped in inline code, so they already do look different from the other headings! \ud83e\udd37\u200d\u2642\ufe0f\nP.S. I did find that the .alexignore heading should be indented an extra level and be \u201cinside\u201d Ignoring files . Thanks for the issue @JWO719! Luckily globs are already supported! \ud83d\ude09. Could you try quoting the glob (alex \"content/**/*.md\")? There\u2019s differences in glob support on different platforms (mostly windows is weird).. @laurenmayers Hey this looked really great! I moved the generated files directly to the root folder though (so the build works), and refactored the manifest / svg a bit. But super thanks for working on this!\nGH is down, so Travis didn\u2019t get the updated files yet. Let\u2019s hope it\u2019s fixed soon!. @KikeSan It seems you disagree with the style used in this project to format markdown and prose. We use tools to check that style.\n\nPlease read the contributing guides first: https://github.com/get-alex/alex/blob/master/contributing.md. You submitted this PR without comment. That means you didn\u2019t read the guide. It feels like you\u2019re not respecting our time \ud83d\ude1e\nCould you elaborate on why your style is better\n\nIf we all agree that your proposed style is better, you also need to change the tooling (but don\u2018t do that yet, we may not agree on it). alex is not a male name.. Hey nice work!\n\n\nThis still needs docs and cli support\n\nJust an idea: why not support sureness top-level, does it have to be in profanities?. @mansona Sorry for the slow reply. Happy holidays and stuff!\n\n\n\ud83c\udf89 I didn't want to add those until I was sure I wasn't a million miles off with the implementation \ud83d\ude02\n\nNo it looks good! \ud83d\udc4d\n\nSo this is related to our discussion on the other PR. \"sureness\" in the context of retext-profanities kinda makes sense (even though we weren't 100% happy with it) but in the context of alex it makes no sense \ud83d\ude1e \"sureness about what\". We could make it top-level with profanitySureness because then it at least makes sense but I quite liked the idea that you had this top-level object that was essentially passed directly into the respective plugin. That way if we add any more configs to retext-profanities it won't require any code change in alex.\n\nAh, yeah. Makes sense. But allow profanities and passing it to retext-profanities shows the internals under alex, and we haven\u2019t done that before. Maybe profanitySureness instead?. Released! Thanks @mansona!. See https://github.com/get-alex/alex/issues/32 for some more information. I believe https://github.com/danielhickman/Alex-Chrome-Extension was never finished though.\nIf you create something like this, we\u2019d include it in https://github.com/get-alex/alex#integrations!. You can go to releases to get a built browser version.\nThere are also alternatives to jsdelivr around that do the building with browserify/webpack that you could use!. I think I\u2019d prefer docs over a dockerfile. @andmos Do you think that makes sense as well?\nThis is a Node project, and installing it through npm/yarn is the preferred way. I also don\u2019t use Docker so I can\u2019t maintain, test, or update it when needed. Finally, as you created the file yourself already, I feel that Docker users already have the know-how to add a Node project when needed, even if that project doesn\u2019t provide a Dockerfile!. It\u2019s is a perfect contraction of it was, plus I dig the tone of voice. Keeping it.\n. Could you use two spaces here between the sentences?. Same with spaces here!. Could you use a curly apostrophe in user's? So user\u2019s.. Could you use sh for the language flag of the code block?. Same flag here!. Could you remove this extra line (now there\u2019s two blank lines, and the linter doesn\u2019t like that. beep boop \ud83e\udd16). Could you indent this nicely, so that the SVG is on a newline, indented one leve, compared to the link?. And move this inline style to src/index.css?. Oh and also this style element could you be in index.css as well!. Could you remove the duplicate empty line? If you run npm test, css is checked, an you\u2019ll see a warning about this!. Could you remove this inline style as well? You could select the element from CSS with .github-corner svg { /* all the inline styles */ }. Hmm, what\u2019s the <br> doing here? Is that needed?. Maybe a link here? https://github.com/collections/social-impact. Maybe both?!\nHey, we could also add this more at the start of the page? This is very low!. I like the last one, image first, text second.\n\nIf you still need some spacing, maybe a heading makes more sense semantically than a <br> element. Or some CSS?\nFor the link in the text, could you make it a bit more descriptive? click here is not so good for accessibility or SEO\nAnd could you remove target=\"_blank\" from the link? It\u2019s fine if the link loads in the original tab/window, I think, but maybe you had a reason for it!. suggestion\n  var allow\n\nRest of the codebase uses var, which is fine for now!. Should config be passed here too, so that HTML supports profanitySureness as well?. Could you use var messages = alex(...).messages here (and on L45)? Rest of the codebase uses ES5.. ",
    "yoshuawuyts": "Oh, final thing: the logo doesn't appear to render. I'm sure you're aware of it, but figured I'd mention it regardless. Not sure github svg's can be linked, think we ran into that with man-n/logo too.\n. Changing the list to a paragraph sounds good! Also thanks for pointing out rawgit, I didn't know about it ^^\n. My partner just read the full readme and agrees with everything on there. She's not a dev though, but was very enthusiastic about what the project does. Wooh \ud83c\udf89! If there's anything other than the readme you'd want her to read, I can put you in touch. Cheers!\n. @moosehadley thanks for pointing that out, the feedback is appreciated. What do you suggest as an alternative to sociopath?\n. That's a good suggestion! PRs are welcome on https://github.com/wooorm/retext-equality :grin:\n. @nukeop apparently he and at least 133 others don't feel comfortable using master / slave analogies. There are several alternatives available which alex will inform you of. It's always up to the author to decide whether or not to act on the information available.\n. > Well, I do feel comfortable with that terminology,\nIt's not about you. It's about other people that do feel uncomfortable. See also discussions on why codes of conduct are required for conferences. If you feel your own opinion and feelings come before those of others, nobody will force you to change. Like I mentioned before: alex only exists to inform you of phrases that might be insensitive to others and suggest alternative phrasings.\nAlso regarding newspeak: this is not censorship. This is suggesting different words. If anything following this path will broaden vocabulary to include gender-, race- and religion-neutral terms in addition to the existing words and phrases.\nAlso fun fact: I'm the owner of the newspeak module on npm, I'm quite familiar with the term haha. Cheers! :sparkles::sparkles:\n. You can find the list of words used in https://github.com/wooorm/retext-equality. The list is updated based on community feedback, if you think it can be improved feel free to open issues / PRs about it! :grin:\n\nWhy would I ever use this instead of just a simple ctrl+f?\n\nctrl+f responds to a query you created. alex returns results results you might not have been aware of prior to running it, by definition it would be nonsensical to use ctrl+f to search for an unknown query. Cheers!\n. Thanks for your criticism, it has been noted. Contributions to make alex better at detecting context would be much appreciated. Cheers!\n. The output was bundled using browserify -s - https://github.com/wooorm/alex/blob/master/package.json#L80\nThe require statements are in there because of how browserify works; they can't be done away with.\nIn the browser do:\nhtml\n<body>\n  <script src=\"alex.min.js\"></script>\n</body>\nAnd alex should be available globally. Cheers!\n. It already exists - https://www.npmjs.com/package/gulp-alex :sparkles:\n. @ixti Welp, covering all possible contexts of a slur is hard. It correctly caught \"pancake face\" as being used as a derogatory term; the suggestion could probably use some work though. Could you clarify in what context it was used so we can add an appropriate suggestion?\nAlso: I understand that you're upset, but please refrain from dropping all-caps f-bombs in issues. Everyone involved with Alex does so in their spare time and has the best intentions. It'd be appreciated if you'd be considerate of that in future interactions.\n. I think it should catch profanities, possibly under a flag to start with. If we want to warn about possibly insensitive writing, profanities and slurs are part of it.\n. This could be useful for https://github.com/nodejs/diversity/issues/9\n. Could you add some context to your suggestions? Thanks.\n. PRs are welcome (':\n. perhaps muslim / muslim person / person of the islamic faith would work? idk, just dumping suggestions\n. hah yeah, the reason why I emphasized the \"person\" in there is because I feel the word \"muslim\" has been twisted by media to depict these devilish creatures which are only capable of bad things. Emphasizing they're people might act as a gentle reminder that 1.6 billion muslims are just as human as the 5.4 billion non-muslims. But you're right hah\n. Oh yeah, those should def be included. PR welcome!\n. @eah13 Yeah, that seems about right :sparkles:\n. yeah, fair enough - perhaps tank top could work too?\n. goodbye \u270c\ufe0f. You use \"gay\" as if it's an insult - it's not. Goodbye \ud83d\udc4b . ",
    "sindresorhus": "That's great! :)\n. Can you not differentiate between \u201che\u201d, or (he), or he - and he, who rose from ...?\n. Can you detect whether it's a lone word inside [] or () and ignore it?\n. Does this have knowledge of Markdown, so [he](https://github.com/mathiasbynens/he) will be skipped?\n. :+1: \n. https://github.com/wooorm/alex/commit/c30ec128ecf9aa5b02e9024c7b607f46e67bd13d\n. I assume .md will be on the default extension searching, so I don't think this will conflict. I would say now. Being able to just run $ alex is very nice. :+1: to .txt.\n. > This would mean for book-writing we can have alex as part of our continuous integration suite\nThat's so cool! :)\n. I think this is a good idea, but we should add \"Check for an alex field in package.json\" (see pkg-conf) as the second step. This is common for ESLint, XO, and many other tools, so not to add even more meta files to your project.\n. I would say the best part of something is not when you can't configure it, but rather when you don't need to. There will always be people needing to customize things. I think great defaults that works for most, but with configurability when needed, is the way to go.\n. > \"Mankind\" (\"manpower\" etc.) is already a gender neutral word, it already encompasses all of what you suggest to call \"humankind\", same as \"manslaughter\" for example.\nhttp://io9.com/5962243/think-twice-before-using-mankind-to-mean-all-humanity-say-scholars\n\n\"Master plan\", \"master stroke\" etc. is derived from adjective \"master\" which is not gender specific (a woman can have a master's degree for example).\n\nAgreed, \"master plan\" by itself is ok.\n\n\"Freshman\" (or \"freshwoman\", \"frenchman\", \"showman\" etc) are perfectly fine when referring to the person that is male or female, respectively.\n\nAgreed.\n\nMaster/slave when referring to servers, disks, and so on, have a completely different meaning and etymology than when referring to people. While the number of people living as slaves is at its highest point in history, it is doubtful that they care about computer science terminology. The terms \"primary/replica\" are rather confusing and frankly I have not seen them before anywhere other than this software.\n\nhttps://twitter.com/kwuchu/status/618799087006130176\n\nThere doesn't seem to be a purpose to this kind of censorship, unless you are addressing an unknown group of people.\n\nIt's right in the tagline: \"Catch insensitive, inconsiderate writing\". This has nothing to do with censorship, and I'm surprised you see it as such. Alex is only meant to help us write more consderately.\n. @wooorm Maybe add it to a FAQ in the readme? I've gotten that question a couple of times too.\nLike: https://github.com/sindresorhus/ava#faq\n. Yup, https://github.com/wooorm/alex/blob/master/alex.min.js\n. > Javscript & CSS > Javascript & CSS;.\nActually: JavaScript & CSS;\n\nLooks good, though I was hoping for something that integrated with any <textarea>. That way I could have it run (or even atuomagically) directly when writing comments on GitHub and other websites. Like the Grammarly and Markdown Here Chrome extensions.\n. @wooorm It also marks words inline in the textarea.\n. @wooorm It used to highlight the words on GitHub, but that stopped working some weeks ago. It still does show a popup if you hover over an incorrect word, though.\n. :+1: \n. :+1: Go ahead! :)\n. I don't see why you need the output to change. You can just use a super simple regex: https://github.com/sindresorhus/SublimeLinter-contrib-alex/blob/8ef58610c816130794fde02e7be4cddb8d6ad089/linter.py#L21\n. > The error format is unnecessarily complicated to parse (since the meaning of an error line depends on other lines before it)\nHow exactly is it complicated? How does it depend on the line before it? It was straight forward for me to write a regex for it. Literally took minutes. Syntastic might differ though.\n\nPerhaps the presence of filenames on the command line should take precedence over the check for a TTY?\n\n:+1: That's how I usually do it.\n\nI suppose changing the output of alex --version to something like AlexJS 1.2.0 would be a non-intrusive way to deal with that.\n\n:-1: --version should IMHO be a clean version. You can use --help for that.\n. :+1: I think it's a good idea and should be on by default. Profanities are inconsiderate too. I want to ensure my docs to be profanity-free.\n. Here's how I handle it: https://github.com/sindresorhus/strip-css-comments-cli/blob/ac32c3a959b3bc7cfc6c994b48c05b747bf9260b/cli.js#L34-L43. Then it's probably best to have a --stdin flag. You could purely base it on process.stdout.isTTY, but then it's impossible to spawn it as a child process without using stdin.. ",
    "ELLIOTTCABLE": "No problem, lol. (Thanks for going to the trouble to keep my GIT_AUTHOR_NAME! Adorable! :D)\n. Doesn't bother me! (=\n. Is there a particular reason to leave this closed, despite it being an outstanding issue? It's totally okay to not have time to work on something \u2014 but I'd consider this a rather major problem with Alex, as it stands; and having an Issue like this standing out on the Issues page is the most effective way I can think of for an unmaintained project to encourage visitors to possibly contribute!\n(Hope the feedback isn't unwelcome; I just really can't understand the current race-to-zero-open-issues, even-on-unmaintained/side-projects, culture.). ",
    "varjmes": "As someone who refers to themselves using gender neutral pronouns, people say \"It is theirs\" when talking about what I possess, rather than \"It is hers\". It works, I am happy with it.\nLanguage is beautiful and adaptive. It can also be difficult to wield in all cases, but I think \"theirs\" is the right call here.\n\"his\"/\"hers\" excludes everyone who is neither a \"he\" nor a \"she\".\nThere are many pronouns already used in the wild by people who do not feel that he/she fits. We shouldn't need to invent any more in the case of alex (unless, of course, you want to!)\nHere is an awesome list of pronouns: http://my.pronoun.is/\n:+1: \n. I don't think I used \"themselves\" in my comment. I would use \"themself\" personally. I consider myself to be a person, thats my identity :)\n. I used alex $(git ls-files) and it took... some time :clock1: \nBut, it does what I needed, so thank you! Feel free to close this :)\n. I'm finding that alex does not read everything when I do git ls-files. Not sure why that is, but I'm working on it! And yes, pouchdb slows things down :P\n. When you get a large project, contributed to by 10s-100s of developers you'll probably get something profane slipped in, maybe because they were frustrated at the time. See twitter.com/gitlost for the sheer amount developers will swear in git commit messages alone :smile: \nGreat point on the historical texts too.\nI think @yoshuawuyts has the right idea with offering it under a flag, but I would also have no problem making it default behaviour. Maybe you could make it default but give a flag to turn off profanity warnings? Either way, at least it is in :)\n. --profanities is good because it's explicit. But you could alias -p. Use --profanities in the docs, but let people know they can use -p too? :)\n. ",
    "pocketbird": "I think I understand - and I disagree but, regardless, I appreciate your thoughtfulness and reasoning. \nI haven't seen xe but, will check it out. \nOut of curiosity, @charlotteis you said \"themselves\" - do you consider yourself as having two separate identities or did you mean to say, \"themself?\" I think maybe \"themself\" is correct in this scenario, not \"themselves.\" \"Themself\" being a new word but, not completely new, so to speak. It seems appropriate. \nThis is the first time I've really considered this kind of thing to this extent so, please excuse my overly enthusiastic attention to detail haha. \n\nOn Sep 2, 2015, at 3:45 PM, Titus Wormer notifications@github.com wrote:\n@Charlotteis Thanks, and I agree \n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "todrobbins": "@wooorm++\n. Ha! Thanks. If I had a little more time on my hands I'd help make the additions. Cheers!\n. ",
    "Ketchup901": "This is outrageous.\n\"Him\" is a fucking PRONOUN. How is it insensitive? I feel very offended, it's as if I'm not a human being just because I am a man. This is what you call sexism.\n. This whole project is retarded and poorly coded. \nhttps://rbt.asia/g/thread/50073311\n. ",
    "Hual": "Hey, racial slurs aren't insensitive but 'man' sure is!\n. ",
    "severen": "@Hual, that's the biggest strawman I've seen all day.\n. ",
    "RamonGebben": "Well I speak Dutch as wel but I work with an international team whom would\nlove to help out with with defining rules. So lets consider implementing\ngrammer files that the parser would work with this way anybody could submit\na new language.\nDoes that sound logical ?\nOn 18:08, Thu, Sep 3, 2015 Titus Wormer notifications@github.com wrote:\n\nInteresting. I\u2019d love to. Latin-languages aren\u2019t that hard. I use this\nparser for English https://github.com/wooorm/parse-english, which is\npretty small, which is some code on top of parse-latin\nhttps://github.com/wooorm/parse-latin.\nThen, there needs to be a pattern library. See the YAML files in\nretext-equality\nhttps://github.com/wooorm/retext-equality/tree/master/script for more\ninfo.\nWhat language are you thinking about? There might be unforeseen\ndifficulties in some languages (I only speak Dutch and English, and a\nlittle german / french [image: :smile:])\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/14#issuecomment-137497986.\n. I created a glitter chat room to make communication go faster \ngitter\n. Sure, I think so if would you please explain a bit more whats needs to be done? I took a look at this file and it looks like we want some kind of better system to generate those regexes. Then we wouldn't need to write entire new patterns every time we want to add a language. What are you're thoughts on this?\n. Ow you already have a parser for Dutch. :) Then I can't help with developing other languages because only fluent in Dutch and English. :( How would one use Alex with Dutch?\n. \n",
    "montogeek": "Please, add this, I want to make it available to Spanish language :)\n. I can contribute to Spanish, but I dont know how exactly.\n. I think I can work on it this weekend too\n. @SalomonSmeke What if we create an standart/neutral Spanish version?\n. ",
    "brunowego": "Portuguese language :+1: \n. ",
    "ryanberckmans": "I showed alexjs to somebody who avoids inconsiderate communication for a living. Her first question was \"Does it support multiple languages?\"\nOur vote is for Spanish and French and we can contribute to those dictionaries.\n+1\n. ",
    "Far0s": "I will try to take a look this weekend at translating retext-equality in French :smile: \n. ",
    "SalomonSmeke": "I can help with Spanish. Natively bilingual Spanish + English. I'll look at the links above when I can :)\n. I've been working on this in Spanish. And its tough. You did a great job in\nEnglish and its hard because many of those words aren't colloquially\nequivalent to anything in Mexican Spanish. I'm even wondering if its\nprudent to make \"Spanish - mexico\" variants.\nOn Oct 6, 2015 7:21 PM, \"gsvolt\" notifications@github.com wrote:\n\nHey @wooorm https://github.com/wooorm, I was curious.. would it be cool\nto work on supporting languages like hindi? I know google translate handles\nhindi - but I really don't know your code base that well to know if any\nchanges I make will work or not. I do know hindi and I'm pretty sure A LOT\nof Indians will appreciate alex.js I can read and write Arabic as well (but\nsadly cannot understand it) - with Arabic it'll have to take into account\nthe right to left styles specific to that language I'd say.\nLet me know what you think. I'm googling dictionaries online that provide\ndata for hindi in the meantime.\n@gsvolt https://github.com/gsvolt\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/14#issuecomment-146042573.\n. Well... Defining neutral Spanish is difficult. And if you do. There no\nslang. And most of these terms are non existent. Which makes alex in\n\"neutral Spanish\" less useful\nOn Oct 6, 2015 11:56 PM, \"Fernando Montoya\" notifications@github.com\nwrote:\n@SalomonSmeke https://github.com/SalomonSmeke What if we create an\nstandart/neutral Spanish version?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/14#issuecomment-146077589.\n. \n",
    "gsvolt": "Hey @wooorm, I was curious.. would it be cool to work on supporting languages like hindi? I know google translate handles hindi - but I really don't know your code base that well to know if any changes I make will work or not. I do know hindi and I'm pretty sure A LOT of Indians will appreciate alex.js I can read and write Arabic as well (but sadly cannot understand it) - with Arabic it'll have to take into account the right to left styles specific to that language I'd say.\nLet me know what you think. I'm googling dictionaries online that provide data for hindi in the meantime.\n@gsvolt\n. ",
    "pjf": "\nWould markdown comments, aka HTML comments work?\n\nFor markdown, yes please! :)\nAsciidoc has its own idea about comments. Depending upon how you're doing parsing, I personally would be delighted if we saw any line starting with // being checked for directives. (Asciidoc seems to be common at least at O'Reilly for book-writing, so there's an immediate use-case as part of the toolchain.)\nMany, many thanks again!\n. > How about the size of these things though?\nThat's why the suggestion comes with a command-line option to enable or disable the showing of links (and I'd suggest the default be disabled).\nWhile probably overkill, perlcritic supports a whole range of verbosity levels for this sort of thing, with everything from tiny explanations, book references, to full on community-contributed explanations:\n```\n$ perlcritic --verbose=1 Quote.pm | head -1\nQuote.pm:78:5:Expression form of \"eval\"\n$ perlcritic --verbose=5 Quote.pm | head -1\nQuote.pm: Expression form of \"eval\" at line 78, column 5.  See page 161 of PBP.  (Severity: 5)\n$ perlcritic --verbose=10 Quote.pm\nExpression form of \"eval\" at line 78, column 5.\n  BuiltinFunctions::ProhibitStringyEval (Severity: 5)\n    The string form of `eval' is recompiled every time it is executed,\n    whereas the block form is only compiled once. Also, the string form\n    doesn't give compile-time warnings.\n    eval \"print $foo\";        # not ok\n    eval {print $foo};        # ok\n\n```\n(The actual verbosity levels map to format strings so you can also build your own.)\nI'm not too worried about the length of the extra information, since I imagine the primary use for this is users wondering \"why would X be problematic?\" and running in --why mode to find out. (At least based upon all the times when I run perlcritic with --verbose=10 to figure out why it objects to a particular line of code.)\n. > Okay. I\u2019m afraid however that these description can become very long. There could be a whole blogpost attached, or a lot of links, to each warning. How to stop that? Is that wrong? Expected? What would you like to configure?\nMy envisioned user-experience looks something like this:\n```\n$ alex --why example.md\nexample.md\n  239:123-239:129 warning his may be insensitive, use their or theirs instead (see: http://writingcenter.unc.edu/handouts/gender-sensitive-language/ )\n```\nThat is, a single link presented to the user where they can learn more information. Not all warnings may have links, and if we allow users to customise their own rules then I'd hope they can customise their links as well (so they can point to project style guides or company policy). I presume that last part would preclude a link to the documentation for all the rule-ids.\nAs for the links themselves, we almost certainly want at least one level of indirection in configuration itself; lots of words deal with gendered language, and the chances are they can all link to the same place. (I'm not familiar with the internal workings of alex, but since you've mentioned rule-ids I presume we already have some grouping.)\nOf course, this is very much a nice-to-have-but-not-essential feature. But given how often people are surprised at some of the racial slurs that have entered common language, I certainly love the idea of alex providing a ready means of education. :)\n. You totally rock! Thank you! :)\n. > There are several alternatives available which alex will inform you of. It's always up to the author to decide whether or not to act on the information available.\nBingo. Alex is no different from a code linter or spell-checker. It can tell you that something might be a problem, but it's always up to the author to decide if it actually is.\n. If profanity is a separate switch one can enable and disable, then I'm all for it. Features are great, and from the discussion thus far we'd have users that would find it useful.\nIf profanity checking isn't something the user can turn off, then I'm not a big fan. I definitely want alex to be able to find slurs and language that is offensive towards particular people, but neutral profanities are something I find much more acceptable, and a lot of people use them quite expressively. I hope to find people saying things are \"ducking awesome\" in my projects. :)\nI'd be weakly inclined to have the option for alex to check for them off by default, as I feel they dilute alex's core purpose, which for me is to flag often unintentionally insensitive language. Profanities are almost always intentional, and neutral profanities especially so.\n. ",
    "maxogden": "The best part of http://standardjs.com/ is that you can't configure it, which means it is easier to use. Not saying that completely applies here, but I like the fact that you can currently use alex with zero configuration.\n. @sindresorhus well I disagree with you on There will always be people needing to customize things, but I agree with your overall point in this case. I mostly just wanted to voice my concern that feature creep + complexity are easy to add but hard to remove.\n. ",
    "alexgleason": "Can it work the same way as spell check in Microsoft Word?\nYour options are, when it finds a particular error, to \"Ignore this instance\" and \"Ignore all\".\nSince many of these false positives are contextual, it makes sense to allow them on a case-by-case basis rather than allowing one word entirely then risk it being used badly in the future.\n. I mainly want this to make sure there's nothing insensitive in my source code written by other developers. Programmers are the more likely culprits than copywriters for this, and it's more easily obfuscated. (Related: #49) It would give more peace of mind before shipping something.\nIt would also make it possible to refactor historical texts.\n. Thanks for clarifying!\n. It was meant to be. :wink: Thanks for your work on this.\n. ",
    "liamdawson": "Another point of view here as well: I suggested it to one of my colleagues, they thought it was a bit too heavy-handed for their tastes. I think slowly working people onto Alex would be better than having them dismiss it out of hand, e.g. enabling Alex in a Slack room with fewer suggestions and gradually working up to the full set.\n. What about a confidence factor? That allows for different tolerances, and still a spectrum of outputs.\nFor example, a slur could give a confidence factor of 1, but disabled could be a bit less due to uses where it's a valid term (e.g. this setting is disabled by default). Then, in CI for example, you could choose a confidence factor for different things (minimum confidence 0.5 for README, 0.8 for code).\n. ",
    "ccoenen": ":+1: would be helpful, especially for non-native speakers.\n. ",
    "nukeop": "\nhttps://twitter.com/kwuchu/status/618799087006130176\n\nSo, some guy on twitter said he \"dunnos\" how he feels about that, how is that relevant?\n. > @nukeop apparently he and at least 133 others don't feel comfortable using master / slave analogies. There are several alternatives available which alex will inform you of. It's always up to the author to decide whether or not to act on the information available.\n\nBingo. Alex is no different from a code linter or spell-checker. It can tell you that something might be a problem, but it's always up to the author to decide if it actually is.\n\nWell, I do feel comfortable with that terminology, and I come from a tribe that was enslaved so frequently throughout history that the word slave itself was derived from its name. I would like to remind everyone that slavery is not by any means limited to early USA and that white people such as Irish were slaves in USA in numbers as great or greater than blacks. I don't think people living in modern USA are really in a position to say anything about actual slavery since it has been eliminated almost completely in the country a very long time ago. 130 people feeling uncomfortable on twitter is a silly thing to cause a change in commonly recognized, completely mundane terminology.\nAt any rate, this reminds me of a passage from a popular book:\n\nThe mind should develop a blind spot whenever a dangerous thought presented itself. The process should be automatic, instinctive. Crimestop, they called it in Newspeak.\nHe set to work to exercise himself in crimestop. He presented himself with propositions\u2014'the Party says the earth is flat', 'the party says that ice is heavier than water'\u2014and trained himself in not seeing or not understanding the arguments that contradicted them.\n. \"Compassion\"? For what? You don't seriously think this kind of passive aggressive bullying towards self-censorship can be beneficial in any way, do you?\n. \n",
    "howardroark": "To be fair there is a slippery slope at play here.  The slack-bot listed in the README is sort of walking down the path towards censorship.  Who is to say that you don't wake up tomorrow to find a bot scanning all of GitHub and pointing out all of the people who are in violation of these conditions.  Maybe it ranks everyone with a score of how sensitive or insensitive they are and labels it along side their name and information. Then fear ensues and people start to act differently based from that fear... as opposed to from real genuine compassion.\nI feel that there are some philosophical implications at play here.  It would not hurt to address them.\n. Would you concede that you are likely to be unaware of your own ideological bias?\n. ",
    "gonmf": "Well then you don't address any of the things you claim then. All terms are gendered or master/slave vs primary/replica, which isn't racial unless you're trying to ignore all the reasons behind slavery that don't have to do with race.\n\nalex helps you find gender favouring, polarising, race related, religion inconsiderate, or other unequal phrasing.\n\nis just false.\nAlso, as has already been point out, your suggestions are very simplistic and don't have anything to do with reality. for instance primary/replica cannot replace master/slave in many cases because the context is not of replicated mediums.\n. Just fix your false advertising.\n. ",
    "rugk": "Okay. I would just say that cribble is also profane IMO.\n. :+1:  for a FAQ. :smiley: \n. Nice that it's a gift for you - I thought it was only a gif. :wink: :laughing: \nSpecs:\nFirefox 40.0.3\nWindows 7\n. Can we also have this extension for Firefox?\n. > If no one is making this anymore I'd love to. \nWhat exactly? Firefox browser extension? Bookmarklet?\nAt least I think a bookmarklet would be the easiest and best browser cross-compatible solution. A real add-on can be created afterwards.\n. At first the thing which is easier to create...\nAnd that's - as I assume - a bookmarklet. As I said the browser extension could be created afterwards...\n. > Hey buddy, I'm sorry to hear John Doe completed suicide.\n\ud83d\ude27 Sorry, but this sounds horrible. Suicide is not something you should \"complete\". That's not a game you complete. More information here: http://www.speakingofsuicide.com/2013/04/13/language/\n\nI hope you also know the so-called Werther effect, where there are also some guidelines for journalists how to deal with suicides. From the wording perspective it is often recommend to not mention the word \"suicide\" at all - or at least not in the headline. I don't know whether this may also be included in Alex, but I wanted to be sure to mention it.\n. Okay: https://github.com/wooorm/retext-equality/pull/14\nThere I moved the \"complete suicide\" to the other site.\nAnything else to do?\nI found it in the equality file, so I doubt the reason for this to be shown is \"profanity\"...\n. Okay, done. BTW \"hijack\" was already included.\n. Funnily even if I put the example <!--alex ignore dad-mom--> before the line Alex complains about, the warning goes away...\nI think the correct one would be  <!--alex ignore UK-->, would not it?\nThe file method does not work, but I think this is an issue with the IDE integration I use: https://github.com/wooorm/atom-linter-alex/issues/17\n. Actually putting everything in a c omment before the line works:\n<!--fsdfds-->\n    From: Devon, UK\n. I can reproduce this behaviour (without the indentation - which seems to affect Alex too) on http://alexjs.com/\nShows no warning:\n<!-- ioo -->\nFrom: Devon, UK\nShows warning:\n```\nFrom: Devon, UK\n```\n. Indeed. I'll do. :smile: \n. ",
    "jpruiz114": "Is there an example of how to use this on a website without node js? Just pure JavaScript and the library?\n. This doesn't seem like a solution.\nWhen you check the non minified version you see this dependencies:\n/\n- Dependencies.\n  /\nvar bail = require('bail');\nvar mdast = require('mdast');\nvar bridge = require('mdast-util-to-nlcst');\nvar retext = require('retext');\nvar parser = require('retext-english');\nvar equality = require('retext-equality');\nvar sort = require('vfile-sort');\nIt also uses require.\nAny posibility to provide a web browser example?\n. Hey there @wooorm @yoshuawuyts, I just gave it a try, not on browserify, with Chrome.\nTried it here:\nhttp://www.jeanpaulruizvallejo.com/site/tests/js/alexjs-test-1.html\nGot this:\nUncaught ReferenceError: alex is not defined(anonymous function) @ alexjs-test-1.html:13\nI really want to use this library on a project of my own but not sure if the only way to use it is on a nodejs project and under browserify.\nAny other ideas?\nbtw, thanks for taking the time to answer.\n. Worked!!\nGot it here:\nhttp://www.jeanpaulruizvallejo.com/site/tests/js/alexjs-test-2.html\nThanks @wooorm.\nIf I may ask, what makes difference having and not having the \"require\" call?\nAnd also, is different the minified version from the non minified one?\n. Thanks for your time @wooorm and for the explanation. Again, great work here!!\n. ",
    "danielhickman": "I was working on a contenteditable version of the input method. I ran into a few issues, but it can be done.\nMy progress is in my Alex extension, commented out. \n. I have some experience with Chrome extensions. I'll will take a look at the code and attempt when I have a chance. \n. It might take me a while. I'm fairly new.\nOn Tue, Sep 15, 2015, 3:25 AM Titus Wormer notifications@github.com wrote:\n\n@sean-roberts https://github.com/sean-roberts Cool! [image: :+1:]\n@danielhickman https://github.com/danielhickman were you able to\ninvestigate this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/32#issuecomment-140347518.\n. Apologies for being vague. Do you have an idea on how you'd like it to operate?\nShould it:\n- ~~The extension and bookmarklet act the same?~~\n- Query the whole page and open that in a new panel window\n- Query contentEditable and inputs\n- See what domain is open and perform a different task?\n. After looking into the bookmarklet, Alex itself has more than 11 lines for every character allowed in Chrome's bookmarklets. So I had to use something like this instead:\n\n``` javascript\nvar alexScript= document.createElement('script');\nalexScript.setAttribute('src','https://raw.githubusercontent.com/wooorm/alex/master/alex.js');\ndocument.head.appendChild(alexScript);\nalert(alex('We\u2019ve confirmed his identity.').messages);\n```\nWhich doesn't work on everything from GitHub to Gmail because of the uber popular Content Security Policy directive regarding the sources of scripts loaded.\nSo it doesn't look easy to get it working in a bookmarklet. There's two ways that still work with Chrome extensions though.\n. I've used node and npm but not browserify duo and not experienced with any of them. There is a simple solution which is a webhook to a script on a server (I can have it set up in a minute or two on mine) that auto updates it (and allows the Webstore to use that as the update). I'm assuming npm would work somewhat like that too.\nAnyways, I have a Chrome dummy extension that has a local copy of Alex.JS. You press the browser action and it alerts alex('We\u2019ve confirmed his identity.').messages. I'll setup using selection as input and probably a styled output in a new panel window or something.\nhttps://github.com/danielhickman/Alex-Chrome-Extension\n. @sean-roberts I'm not sure how npm works with Chrome extensions. Does it work with ones hosted on the Chrome webstore?\n. Do you mean using the updateurl in the manifest would create a bottle neck? \n. I've done a lot of work on the Chrome extension. It's fully functional and uses your selected text or inputted text (like the demo on alexjs.com). I've used similar code too. I'm working on the overlay on the input (I used a div with contenteditable instead of and textarea because of the overlay that has a few visual bugs (will make issues for them). \nI'm also don't know exactly what #43 is caused by, but it's occurring in my modified version too.\n. @wooorm Haven't pushed docs yet. I've been trying to finish up the look first. :smile: \n. @wooorm @meetbryce I have completed it with exception of it auto updating alex.js and the issue highlight. I will publish to the Webstore once those are finished.\nI welcome any feedback :smile: \nDownload: https://github.com/danielhickman/Alex-Chrome-Extension/releases/tag/v0.1\n. @wooorm \n\n-The headings in the licenses list are a bit funky (e.g., Javscript & CSS), maybe the can be omitted, or less obtrusive by making them grey instead of purple?\n-Javscript & CSS > Javascript & CSS;\n-There\u2019s a little more spacing under the Issues block than there is on the sides, I\u2019d go for the same size on every side if possible!\n-It\u2019s a bit weird that the caret starts at the beginning of the selected text (|We\u2019ve confirmed... instead of ...his identity|)\n-Maybe rename AlexJS in the hamburger menu to Website (that way people know where they\u2019re going);\n-Rename Alex, where it refers to the project (not to the site), to just alex (note the case);\n-Maybe, instead of having both License: MIT License in the subtitle and LICENSE in the bottom button bar, opt for MIT License only, and in the button bar?\n- The headings in the licenses list are now a light grey, slightly bolder, without the colons, and with a bit of padding; to follow Material Design better.\n- I decided to not use semicolons or colons.\n- On all sides there is the same amount of padding, it looks funk though because of the title's weird line-height.\n- I haven't been able to see this. Could you send a screenshot?\n- Done.\n- Where? In licenses or the appbar?\n- I'm not sure what you mean by and in the button bar?\n\n@sindresorhus \nI'm looking to do something very similar as well.\n@wooorm @sindresorhus \nIt does it by adding <g> tags to every area, which only works with contenteditable elements, not inputs. This is why I opted for one in the popup in Alex (instead of the buggy highlighting on the project website). It currently can highlight things by adding <span> tags, but when the field is edited, the caret is moved to the beginning and adding on to <span> causes all of the following text to appear as an issue. I am trying to fix those things and then I'll copy that code to the page so it can evaluate each contenteditable field.\nI'm not sure how I'd do textareas though.\n. Oh my. I looked at Grammarly's source code, it's 53,000 lines long.\n. Unlisted Chrome webstore version: https://chrome.google.com/webstore/detail/odeagamimaijfiaeikecldjjajfapmmb\n. @wooorm \n1.\n2.\n3. I'm trying to stay as close to Material Design as I can without using their tools, so the 8px each side of the cards is what I'd like. (I'm using 1px = 1dp)\n4. I still don't see that with any version. Is the caret there for you when you first open the extension? I didn't make it focus on run (I've disabled that until I fix the highlight) :confused: Also, I see \"No issues!\" when the sample text is there, is that because of the deletion in Chrome Canary?\n5.\n6. I don't think it looks as presentable, and it really doesn't look good with a Material Design appbar, I am not sure what to do about it.\n7. That makes sense, I might do that but I don't like providing information in actions, it's not as intuitive.\n8. That sucks, I removed the non-website version successfully. It probably deleted the JavaScript causing it not to work.\n. @wooorm It's been on GitHub. \nLink: https://github.com/xorprojects/Alex-Chrome-Extension\n. I'm all for it since it's merely a warning. I think regardless of the right or religious stuff, it's nice to make sure you don't make it feel like a crime when someone it morning about it.\n\nHey buddy, I'm sorry to hear John Doe commit suicide.\n\nSounds much worse than (in my opinion):\n\nHey buddy, I'm sorry to hear John Doe completed suicide.\n. @wooorm Yup I saw it. I just wanted to add my two cents.\n. Oh okay that is a cool feature! I used he or she in testing my extension and thought it was a bug.\n. \n",
    "meetbryce": "Awesome! thanks.\nOn Tue, Sep 8, 2015 at 1:35 PM Yoshua Wuyts notifications@github.com\nwrote:\n\nClosed #31 https://github.com/wooorm/alex/issues/31.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/31#event-403181641.\n\nCheers,\nBryce York\n. Would be good to be able to highlight text and then activate the\nbookmarklet and have the AlexJS results come up in a modal window.\n\nThe use cases I'm imagining are:\n- emails\n- google docs\n- blog posts\nOn Tue, Sep 8, 2015 at 5:58 PM Titus Wormer notifications@github.com\nwrote:\n\n@meetbryce https://github.com/meetbryce Could you describe what you\nwant this to do?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/32#issuecomment-138467623.\n\nCheers,\nBryce York\n. I'll look into it once I've gotten some practice with Alex. Hopefully I'll\nbe able to figure out a way to print it together.\n\nWill pull request my fork if it makes sense to incorporate it in the main\nrepo.\nOn Wed, 9 Sep 2015 at 8:29 pm, Titus Wormer notifications@github.com\nwrote:\n\nI sure would like this but am not interested in creating them myself.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/32#issuecomment-138867455.\n\nCheers,\nBryce York\n. Also, hosting it on a server could potentially end up being a bottleneck if\nthis thing gets super popular - which I think is totally possible.\n\nSo excited to see this come to life!\nOn Thu, 17 Sep 2015 at 7:26 am, Sean Roberts notifications@github.com\nwrote:\n\nSo really what I was saying is use npm as a your package management and\nuse something like browserify in your build process to pull in your\ndependent modules -- in this case, Alex.JS.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/32#issuecomment-140899551.\n\nCheers,\nBryce York\n. I meant having the code hosting on a remote server rather than on the users\nlocal machine, sorry.\n\nJust considering someone would need to manage hosting if they chose to go\nthat route.\nOn Thu, 17 Sep 2015 at 5:12 PM, Daniel Hickman notifications@github.com\nwrote:\n\nDo you mean using the updateurl in the manifest would create a bottle\nneck?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/32#issuecomment-140989160.\n\nCheers,\nBryce York\n. Just an idea, but if you make the background color a light gray color (eg\n\nf2f2f2) it might look a little more natural.\nCheers,\nBryce York\nOn Mon, Sep 21, 2015 at 9:41 AM Daniel Hickman notifications@github.com wrote:\n@wooorm\n1.\n2.\n3. I'm trying to stay as close to Material Design as I can without using their\ntools, so the 8px each side of the cards is what I'd like. (I'm using 1px = 1dp)\n4. I still don't see that with any version. Is the caret there for you when you\nfirst open the extension? I didn't make it focus on run (I've disabled that\nuntil I fix the highlight) Also, I see \"No issues!\" when the sample text is there, is that because of the\ndeletion in Chrome Canary?\n5.\n6. I don't think it looks as presentable, and it really doesn't look good with a\nMaterial Design appbar, I am not sure what to do about it.\n7. That makes sense, I might do that but I don't like providing information in\nactions, it's not as intuitive.\n8. That sucks, I removed the non-website version successfully. It probably\ndeleted the JavaScript causing it not to work.\n\u2014\nReply to this email directly or view it on GitHub .\n. Sorry to double email, but is it possible to have the placeholder text actually\nbe placeholder text?\nCheers,\nBryce York\nOn Mon, Sep 21, 2015 at 10:59 AM Bryce York bryce@meetbryce.com wrote:\nJust an idea, but if you make the background color a light gray color (eg\nf2f2f2) it might look a little more natural.\nCheers,\nBryce York\nOn Mon, Sep 21, 2015 at 9:41 AM Daniel Hickman < notifications@github.com > wrote:\n@wooorm\n1.\n2.\n3. I'm trying to stay as close to Material Design as I can without using their\ntools, so the 8px each side of the cards is what I'd like. (I'm using 1px = 1dp)\n4. I still don't see that with any version. Is the caret there for you when you\nfirst open the extension? I didn't make it focus on run (I've disabled that\nuntil I fix the highlight) Also, I see \"No issues!\" when the sample text is there, is that because of the\ndeletion in Chrome Canary?\n5.\n6. I don't think it looks as presentable, and it really doesn't look good with a\nMaterial Design appbar, I am not sure what to do about it.\n7. That makes sense, I might do that but I don't like providing information in\nactions, it's not as intuitive.\n8. That sucks, I removed the non-website version successfully. It probably\ndeleted the JavaScript causing it not to work.\n\u2014\nReply to this email directly or view it on GitHub .\n. ",
    "sean-roberts": "Yep I am all about seeing an extension come to life with this\n. I have experience making extensions as well. I agree though, npm / commonJS including Alex.JS would make it easier to maintain what version is supported and keeps it more explicit. Also, hosting it on another server would incur the http call for loading the library in. As we know, the fastest request is one we don't have to make, so including the library with your extension code would make more sense from a performance perspective as well.\n. So really what I was saying is use npm as a your package management and use something like browserify in your build process to pull in your dependent modules -- in this case, Alex.JS.\n. ",
    "kishore-narendran": "Is someone still working on this?\n. My apologies @wooorm \n. If no one is making this anymore I'd love to.\u00a0\n. @rugk Do you want to make a bookmarklet or a browser extension? \ud83d\ude1b I'll take either.\n. ",
    "joshhunt": "\nAlex: Catch insensitive, inconsiderate writing\n\nAuthentication is disabled by default isn't insensitive or inconsiderate writing.\n. ",
    "jdalton": "@joshhunt\n\n\nAlex: Catch insensitive, inconsiderate writing\n\nAuthentication is disabled by default isn't insensitive or inconsiderate writing.\n\nAlex reports it --> may <-- be insensitive.\nbash\nwarning  `disabled` may be insensitive, use `person with disabilities` instead\nI think the warning is qualified enough here and besides false positives it does happen to catch insensitive, inconsiderate writing. \n. Redirect to https://github.com/wooorm/retext-equality/issues.\n. object-keys originally added guards for a few properties that errored when compared, e.g. localStorage.constructor.prototype === localStorage.\n. Rock!\n. ",
    "ixti": "I apologize for my pretty rude and aggressive (previous) comment (deleted it myself).\nIn that particular case issue was definitely not with alex but with integration itself.\n. ",
    "kvz": "Awesome!\n. Confirmed working, thanks for the quick response :100: \n. ",
    "keoghpe": "Simple but seems effective!\nhttps://github.com/keoghpe/alex-slack\n. @wooorm I've updated the readme. Let me know what you think :smile: \n. ",
    "capito-tar-gz": "Joking aside, I wonder if adding some sort of categories or tagging structure to the data might help. Users could instruct Alex to ignore or add specific lists related to their project. \n. @wooorm I'm not very experienced, but I'm familiar and I get the basics. I'll add it soon. :)\n. @rugk I think you're right. \"Completed\" should be on the opposite side, even per the original link posted in this issue. \n\"Suicide\" itself will throw a warning, although the reason is that it is \"profane\" (?). Not sure if that is the best categorization? I like the article's use of \"stigmatizing\" and wonder if that could be used in other places, too.\n. Love it. If I get the chance, I'll try to add this to my to-do.\n. ",
    "JacksonGariety": "@capitocapito this is an interesting moral issue with many moving parts.\nLet's start from the position that a someone who dies by suicide is not a criminal and has not committed a crime. Rather, their death was the result of illness.\nSo we can say that they are a victim of depression. However, once someone is dead, they aren't anything. Rather, they simply are not. So we may call them a victim, but it wouldn't do any good once they're dead.\nSo the semantic issue must lie prior to the individual's death and therefore take the suicidal person into account. Psychoanalytically speaking, acts of suicide are negations of the ownership of the father, God, etc. So the goal of effectively preventing suicide is to make the person feel like they have someone watching over them, say, an authority figure.\nThe word victim certainly won't work since a victim has not been properly protected. A good authority figure has laws and rules, and so the most sensible thing to call a suicidal individual is \"someone who is about to commit a crime against those who protect him/her.\" By identifying the authority figure one may save the persons life, and to assert authority requires punishment, which follows a crime, which must be comitted.\nSo we may close this ticket unless a counter-argument is made.\nIt's important to look at these GitHub tickets carefully. The future of the English language may depend upon it.\n. @capitocapito from your article:\nThe word \u2018commit\u2019 is commonly used in connection with religious offences. Indeed suicide is considered wrong in many religions (Cholbi, 2009). Over time suicide has been regarded as a cardinal sin in some religions and is still often considered a moral sin.\nI think it important to recognize the role the concept of God plays in preventing suicide. Though I don't consider myself a Christian, I think it's safe to say that believing in the sacrifice of a corporeal God (Jesus, for instance) is by far the most effective way to prevent suicide. If we can imagine that God died on the cross, he did it intentionally and thus shows that he loves us and that, simultaneously, we are free. Love and freedom are the two tools by which we prevent suicide, be it by religion or some other method, they must be included.\nBy omitting the religious references from the semantics of suicide, what results is the loss of belief in life itself.\n. well, bananas are yellow\n. ",
    "john-adamson": "Well, I can say I'm glad to be ignorant of that slur!\n. ",
    "neko": "Some context:\n\n. ",
    "lcd047": "The error format is unnecessarily complicated to parse (since the meaning of an error line depends on other lines before it), but it's perfectly usable.\nThere are however three problems that are show stoppers.\nFirst, Vim's system() runs programs with stdin closed, and alex doesn't expect that:\n```\n$ alex example.md </dev/null\n: no issues found\n```\nPerhaps the presence of filenames on the command line should take precedence over the check for a TTY?\nSecond, alex is not an unique name for an executable.  There is a popular lexer generator for Haskell named the same, and running either alex --version and alex offer no indication that the program being run is actually AlexJS and not something else.  I suppose changing the output of alex --version to something like AlexJS 1.2.0 would be a non-intrusive way to deal with that.\nThird, alex is supposed to be able to check plain text files, but it really expects the files to be markdown.  This is a problem because lines staring a paragraph and indented with 4 spaces are ignored, even for plain text files.  As far as I can tell there is no easy way to distinguish between markdown and plain text looking at contents alone, so maybe add a new option to skip markdown pre-processing?\n. > How exactly is it complicated? How does it depend on the line before it?\nThe filenames.  When you see an error line\n1:40-1:46  warning  `master` / `slaves` may be insensitive, use `primary` / `replica` instead\nyou can't tell what file it refers to.  You have to keep track of filenames separately.  Not a problem, but still more complicated than it could have been.\n\nIt was straight forward for me to write a regex for it. Literally took minutes. Syntastic might differ though.\n\nVim uses a scanf()-like system named errorformat.  In retrospect, things would have been a lot easier for everybody if syntastic used plain regexps instead, but the errorformat thing is what Vim offers out of the box for parsing errors, and I suppose it seemed fine at the time.\n\n--version  should IMHO be a clean version. You can use --help for that.\n\nWhatever it is, it should provide a way to identify AlexJS uniquely.\n. > If @sindresorhus\u2019s regex doesn\u2019t do the trick, you could also write a script to interact with alex(3) directly instead of alex(1)\nNever mind, it's just a detail.  Error parsing already works fine.\n\nAlso: Why would you want to pass multiple files through alex at once?\n\nI don't, but Vim's error parsing insists on having a filename with each error.  If I can't infer a filename from the output of a checker, I have to supply it some other way.  Like I said, it's a detail.\n\nYour first point, sure #45.\n\nThank you.\n\nRegarding your second point, alex is named alex, not alexis\n\nI never said anything about an alexis (not intentionally anyway).\n\nmore importantly, why are you running into this problem?\n\nBecause the Haskell package also has a binary named alex, and syntastic needs to make sure it has found the right one before enabling the corresponding checker.  Many Haskell developers that use syntastic have the other alex in their $PATH.  I suspect they would be confused if all of a sudden syntastic would try to run a lexer generator against random text files (and presumably failing with fanfare).\n\nHowever, as markdown is based on things people use in plain-text (such as strong with asterisks and code with ticks) too, I\u2019m thinking it would do more harm than good to add such an option\n\nMy point is that right now running alex against plain text file can ignore some lines, because they are indented with 4 spaces.  That happens regardless of file's extension, and it probably isn't what \nusers expect.\n\n(my guess here is that you\u2019ll have to check extensions and pass all files without a markdown extensions with this option).\n\nThat wouldn't be a problem for syntastic.  Vim already has a \"filetype\" associated to each file, and checkers are tied to these filetypes.  As I understand Sublime Text has a similar concept, I think they're called selectors.  Anyway, the user has to make sure the filetypes are set correctly, or a lot of other thing would start going wrong.\n. > does this alex need to be in the $PATH? Is it necessary to look in the $PATH for alex? Or, can you work around that and use a relative or absolute path?\nIt doesn't have to be in the $PATH.  I could make the checker require users to set the absolute path.  But that would make it unlike the other 187 existing checkers.  As for trying to detect where alex lives outside of $PATH, I really don't want to go there.  Vim runs on a lot of OSes, from Commodore Amiga (should any of them still work in 2015), to VAX VMS, to the latest Mac OS-X, and each of these OSes have their standard directory structures.  Even though I'm pretty sure alex won't ever run on most of these systems, I'd still have to deal with low-level details most people run from.\n\nI think I\u2019m worried that you\u2019re setting it as a default and I don\u2019t think that that\u2019s a wise approach!\n\nI'm not setting any default.  Vim distinguishes between text and markdown automatically, and when it guesses wrong the user has to fix the filetype.  Syntastic has different sets of checkers for markdown and for plain text.  They have nothing to do with one another, and when a program is set as a checker for several filetypes, the different instances can have different options.  alex as a checker for markdown would work, but alex as a checker for plain text files would miss some lines for no user-discernible reason, and people would complain about that to syntastic's maintainer.  On the other hand, I could enable it as a checker only for markdown, and then people would complain that alex the program can check plain text files, and alex the checker can't.\n. I'm afraid the time I can afford to spend negotiating this is running out.  Thus, sadly, a checker for alex won't be part of syntastic.  Fortunately, such a checker (should anybody write a working one) can also be maintained externally.  General directions for writing syntastic checkers are given in the relevant wiki page, and my thoughts on the OP's take on this can be found here.  Have a good day, everybody.\n. ",
    "samhogg": "@wooorm is there anyone working on this? Just came across your project and would love to help out!\n. Oh right, that's an interesting approach, I didn't think of the config side - although I would've thought that would just be using existing conventions to find the config file (look in current directory, and then home directory). \nI was thinking of using something like node-glob to handle patterns similar to the patterns @alexgleason gave examples of.\n. > But you additionally need to search for files by extension for those globs to result in applicable files, something else is needed for that (vfile-find-down, that is).\nGlobbing works with extensions fine as far as I can tell? Or is there I am something I'm missing completely?\n:+1: on the diffing idea, that's pretty smart. Would the approach be just checking additions relative to the last commit, or another branch?\n. @wooorm with globbing I can do something like alex docs/**/*.(md|txt) which would do exactly what you want, and is a pretty common approach amongst node tools that I've seen.\nIn Travis/CircleCI you can access the git log, I guess it's whether you want it to be incremental on a commit by commit basis or diffing the entire branch (which could get messy)\n. ",
    "junosuarez": "The diff-only approach sounds good to me.\nHuman language can be tricky. To me the value in alex is not 100% adherence (as it might be with things like code style linters), but in providing another layer of sensitivity checking. And because the feedback is automatic and coming from a tool rather than a person, it removes the element of ego, defensiveness and debate that sometimes is involved when insensitive language is pointed out through other means.\nI'll also voice support for node-glob. It's cross-platform and works on Windows (without relying on the shell to expand glob patterns), which is used by a large number of node users (some 40% of visitors to npm.com have Windows useragent strings).\n. A naive approach is just to pipe the git diff through alex. the following could be added to a .travis.yml:\ngit diff -U0 HEAD^ | grep -ve '^-' | alex\nthis suppresses unchanged lines, filters out deletions, and pipes it to alex\n. proposed name alex-diff\n. :+1: :clap: :confetti_ball: :tada: \n. ",
    "suisea": "here you go! http://www.autistichoya.com/p/ableist-words-and-terms-to-avoid.html\nsorry, i think i meant dumb instead of mute. and \"-d-ot\" has a medical etymology and as a result, used pejoratively, is a slur.\n. oh okay, for some reason they didn't show up on the alexjs.com site! @wooorm \n. ",
    "mxlje": "Thanks a lot, it works now \ud83c\udf89\n. ",
    "suchow": "How do you want this fixed? A new rule added, existing ones amended?\n. I don't see any rules that detect ethnic slurs against Russians, so I'm not sure how to do this via amendment other than to delete \"katsap\", but that seems less than ideal.\nBy the way, I'm a co-creator of proselint (http://proselint.com, w/ @michaelpacer & @laraross), an in-the-works linter for prose, and we have quite complementary goals in our projects. We should talk!\n. @wooorm done\n. ",
    "patrickkettner": "what are the \"other\" restrictions?\n. ",
    "sils": "We already have a bear for using alex in coala: https://github.com/coala-analyzer/coala/commit/c8239cddd1eee01fdb2b7ee2c7e67c4b914baa5d , with that you can use alex for GitHub pull requests via gitmate.com . (After that gets merged.) Because running servers cost money we'll make this service free for open source and paid for closed source.\n. @HugoGiraudel yes, take a look at gitmate.io or app.gitmate.io , that's a prototype service that'll be able to run alex over documents you specify using coala. (At the same time it also can do other static code analysis on your code.)\n. FWIW just executing alex on its own checks all files in my directory.\n. On fedora:\n```\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % alex\nREADME.md: no issues found\nrequirements.txt: no issues found\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % alex --version\n1.6.1\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % npm -v\n1.3.6\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % node -v\nv0.10.36\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % echo \"His network looks good\" | alex\nlasse@eduroam-1483 ~/prog/landing (git)-[sils/textchange] % \n```\n. that's interesting, on arch:\n```\nlasse@lssteady ~/prog/landing (git)-[master] % alex\nREADME.md: no issues found\nrequirements.txt: no issues found\nlasse@lssteady ~/prog/landing (git)-[master] % alex --version\n1.6.1\nlasse@lssteady ~/prog/landing (git)-[master] % npm -v\n3.4.0\nlasse@lssteady ~/prog/landing (git)-[master] % node -v\nv5.1.0\nlasse@lssteady ~/prog/landing (git)-[master] % echo \"His network looks good\" | alex\n\n    1:1-1:4  warning  His may be insensitive, use Their, Theirs, Them instead\n\u26a0 1 warning\n```\n. Sure, note that this is apparently the current node version on Fedora which is usually even newer than what's shipped on RHEL or SLES (Red Hat/Suse Enterprise Linuxes).\n. Ubuntu and especially debian might linger also at that kind of versions. https://apps.fedoraproject.org/packages/nodejs , https://packages.debian.org/stable/nodejs\n. That said, I can totally see you deciding against support for this but if it's not a lot of work it might be highly relevant for a lot of users, apparently.\n. I wonder why that is, the version number sounds really really ancient. I don't see any reason why the major distributions wouldn't ship new versions.\n. Ok I know something that should help you: https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server\nThere's probably a similar tutorialish thing for fedora/RHEL SUSE/SLES so you could just add a few guides for people using those distributions.\n. The nvm method seems to be fairly distribution independent.\n. FWIW we actually do want to use your alex and the alex haskell lexer in our CI.\n. The usecase is that we actually want to use both alex binaries in one run. So global installation or not, if we modify the path we can still only use one of them, right?\n. (FWIW we're using the non global installation of alex by now :))\n. Ah you mean specifying the whole path to alex without using PATH at all. Sorry, didn't get that. It's not feasible for users though... they'd have to give the path to alex which is system dependent.\n. @AbdealiJK that's a feasible solution, similar to how we do it with checkstyle.\n@wooorm sorry for being so stubborn and stupid. :P\n. Yeah I think considering your opinions you should close this.\n. We will, you know us :)\n2016-02-22 22:42 GMT+01:00 Titus Wormer notifications@github.com:\n\nClosed #83 https://github.com/wooorm/alex/issues/83.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wooorm/alex/issues/83#event-560462070.\n. \n",
    "HugoGiraudel": "I am very interested to set up Alex.js as part of CI integration on Sass Guidelines. Is there any progress or workaround on this? \nAlso, is there support for other languages than English so far?\n. ",
    "c089": "Thanks, that was fast :) Not sure this is my bug though, because it also fails from the same cwd, i.e. cd /tmp && alex ./alex.txt.\n. ...but 1.6.1 fixed both :) Thanks a lot.\n. ",
    "shinnn": "@wooorm No problem!\n@jden :wink:\n. ",
    "netsi1964": "Sorry I posted to the wrong place, and thanks for your suggestion :-)\n. ",
    "lightdozer": "You are ridiculously, insanely stupid. I don't have anything other than that to say. Please never post anything publicly to the internet ever again.\n. Have you considered crying about how the completely nondescript name Alex is actually an offensive slur meant to denigrate you personally?\n. ",
    "GreenTurtleOne": "Edit: take a look at this guy's profile. He's a troll looking for attention.\nI admit I fell for it LOL.\n. How dare I criticize you for trolling? Okay.\n. ",
    "lightyrs": "This is crucial.. ",
    "codingcatgirl": "OKay, found it. I thought it was part of this repository but it is not. It would be nice if this was mentioned somewhere in the readme :)\n. ",
    "polygeekery": "\nI don\u2019t like to add \u201cjew\u201d, as that\u2019s a perfectly valid word\n\nThen what justification do you have for including the following words?\n- headlights\n- tinkle\n- urine\n- urinate\n- kumquat\n- niggle\n- niggled\n- niggles\n- niggardly\n- lactate\n- nuke\n- propoganda\n- radical\n- nymph\n- primetime\n- rigger\n- roach\n- robber\n- satan\n- screw\n- septic\n- shinola\n- shooting\n- sick\n- slant\n- slope\n- smack\n- snigger\n- tar baby\n??\nThis is only a small selection of the words in your json file that are not profane.  I mean...I guess a few of them could be in very specific context.  But by adding all of these silly words you only make your software completely useless due to all of the false positives it will flag.\n. @wooorm, would you be interested in a pull request that removes all of the words that are not profanity?  If your project is serious, and I am beginning to doubt it is much the same as @apapadimoulis is, you would want to remove the words that are not profane or that would likely trigger more false positives than do real good.\n. ",
    "apapadimoulis": "I may not be a big open source contributor, but I am a staunch believer in inclusiveness and I think we, as an industry, need to be focusing more energy on helping people avoid microagressions. This project is a good step in that direction, and this was one way I thought I contribute (the website suggested to post a note here).\nAs a member of \"that group\", I can say that \"jew\" (note the casing) is most certainly not a valid word, and is far more offensive than \"gyp\". Culturally speaking, Romani people are generally nomads and thieves, and they even themselves use the word \"gyp\" when describing their ways.\nI grew up around a Romani family, and they joked about gyping people all the time. Watch the show Gypsy Wedding, and they use it constantly.\nHowever as a Jew (note the capitalization, because it's a proper noun) / Jewish person (again, capitalization), it's true that we are culturally frugal people, but we most certainly do not use the word \"jew\" when describing our ways.\nSo, yes, it's highly offensive to all Jews that you would consider \"gyp\" and \"gypsie\" profane (even when Romani people do not), but are perfectly acceptable with \"jew\" and \"jewed\".\n. @boomzillawtf, while I'm certain your intention was not to offend, but instead to illustrate how \"jew\" can be used in an offensive manner... as a Jew, I would appreciate if you are more considerate when illustrating offensive uses of language surrounding the completely invalid word \"jew\" \n. @wooorm the fact that you want a source for the inappropriateness of \"jew\" yet classify the long list of words that @polygeekery mentioned as profane makes me doubt this project's sincerity and your intent.\nJew is a proper noun. The spellchecker puts a red squiggly line under \"jew\" and suggests Jew as the correction. For a source, just look in literally any English dictionary ever written. \nThe word \"hip hop\" however, is not considered a proper noun (source: literally every single English dictionary ever written), yet you chose to capitalize it? This is why I question the sincerity here -- and frankly I'm finding it really hard to see this attitude as anything but anti-Semitic. \nSo, it's seems were at a bit of a Mexican standoff[1]. Neither of us can tell whether the other one is sincere or not. But, for either the sake of helping people avoid microagressions, or for continuing the parody of said objective, \"jew\" most certainly should be considered profane.\n[1] again note the capitalization of a proper noun; also, as far as I'm aware, that word is not considered insensitive and is not etymologically racist; however I do apologize in if anyone was offended by my usage\n. ",
    "whelaro": "@wooorm I don't think @apapadimoulis is trying to troll you. As for sources, I've heard it used in the negative ways that @apapadimoulis has described, but from Urban Dictionary as a quick source for this sort of thing:\njewed - verb. To get screwed over or cheated out of something.\njew - Derogatory term for someone tight with their money or someone not very generous.\nthe 20 words related to jew section (on mobile, at least) include a lot of other slurs that would fall into this category as well.\nedit: I think flagging \"jew\" as bad outright would be, well, bad. Maybe a warning about review context? Jewed on the other hand isn't good in any usage that I've seen. Think it is derogatory by default.\n. ",
    "AbdealiJK": "But if we specify ./node_modules/.bin/alex in the code, it wouldn't work is alex is globally installed.\nNor would it work if the user runs coala from a directory other than the root of the place they did npm install :(\ni.e. --find-config wouldn't be able to run AlexBear => The editor plugins will not be able to use alex at all.\n. @wooorm At the moment we do not do that - we may support it later. There are issues that arise when doing something like that, and it's generally better to use existing libraries in my opinion.\nDoing something like that feels like windows - where you have to package your own version of any library and it sits inside your own Program Files folder (I'm not a fan of it).\nEither way (removing coala out of the equation) - I still think you should consider making a alexjs just for the reason that circleci already has an alex in their path for haskell. And adding both these alex's into a CI would be tough. In general, package name clashes are bad and causes confusion (I remember when nodejs came out).\n. ",
    "Hypnosphi": "FYI: this is actually possible, see my fork\nYou need to create and push primary branch, then go to Branches settings and set it as default branch. After that, you'll be  able to remove the M-word branch completly on Branches tab. ",
    "eah13": "@yoshuawuyts would the correct place to fix this be here? https://github.com/wooorm/retext-equality/blob/master/lib/patterns.json#L4542\n. ",
    "HopefulLlama": "Fair! Is there any way I can help?\n. ",
    "ms-217": "\n\nI say we should take some time and proofread our files a bit.\n\nI say we shouldn\u2019t be passive aggressive.\n\nI'll take that into consideration next time. :angry: :arrow_backward: grrr aggressive\n. ",
    "evilebottnawi": "@wooorm not output\nshell\nREADME.md: no issues found\nLICENSE.md: no issues found\nOnly if error exist.\n. @RRorg yes\n. @wooorm Thanks!\n. ",
    "reneroth": "I think the OP meant to type --quiet, which will suppress all output unless an error is encountered, useful for e.g. piping commands.\n. I would go with the recommendations of well-established human rights organizations instead of trying to come up with my own ways:\nThe Gay and Lesbian Alliance Against Defamation does not see lesbian as an offensive term, and indeed supports it use as a noun, replacing the clinical term homosexual\n. ",
    "devsnek": "Sorry. I didn't write that cohesively. What i am proposing is a change to the way the input is parsed to find bad words that have been compounded. However, I just read the code, and this seems to span across three or four repos, so I may not get around to a pr. \ud83d\ude04 \n. ",
    "seanohue": "This raises the question -- what is the source for deciding if something is maybe insensitive vs. profane, etc.?\n. @RRorg That sounds like a good source to use. Should we try to find sources to include for other terms as well? That might be another issue. Perhaps there could even be a super-verbose flag to ask alex to cite its sources.\n. @wooorm Ah, thanks. I haven't had a chance to look at this project in depth but I'll try to find some time to contribute sources.\n. Perhaps \"person of color\" as a replacement for non-white\n. Should I submit a new issue for a feature request to check quotes?\n. I assume it's because Muhammed is also one of the,  or THE, most common\nname in the world.\nOn Nov 17, 2016 5:39 PM, \"Dan \u00d6rjestad\" notifications@github.com wrote:\n\nIf \"Jesus\" is considered profane, why is \"Muhammed\" absolutely fine?\nWhy the discrimination?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/wooorm/alex/issues/141, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHxr-dThvKWgULj5odZf_sExSRnU5mBtks5q_NeCgaJpZM4K15mf\n.\n. I'll note that \"Jes\u00fas\" is distinctly different than \"Jesus\", and also note that \"Jesus\" as in \"Jesus Christ!\" is used as a swear more often than \"Mohammed\", anyway. It seems like you are reaching.\n. That said, I'll leave it to the maintainer to decide what to do -- add Muhammed (and other prophets/messiahs) as profane, remove Jesus as profane, or simply do nothing. \n. \n",
    "dakshil": "Ohh sorry. Am in the process of moving so got caught up.\nhttp://www.thesaurus.com/browse/beg\nHere are the replacement words for beg.\nOn 14 Aug 2016 05:29, \"Titus Wormer\" notifications@github.com wrote:\n\n@dakshil https://github.com/dakshil Ping!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/wooorm/alex/issues/104#issuecomment-239664315, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AG7NrU_bdMbzFE5K8w7nowlOk7BkXBWoks5qft_ngaJpZM4JTDe2\n.\n. https://en.m.wikipedia.org/wiki/Talk:Begging\n\nhttp://www.dictionary.com/browse/begging\nPlease see synonyms part. The word beg has become demeaning or slightly\ndegrading. Telling someone to, stop begging you to do them a favour, for eg\ncomes across as them being needy.\nThe term isn't exactly friendly and alternative words are being used now a\ndays.\nOn 14 Aug 2016 05:38, \"Titus Wormer\" notifications@github.com wrote:\n\n\ud83d\udc4d\nCould you also expand on why you think alex should highlight beg? Do you\nhave sources which describe why it\u2019s insensitive?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/wooorm/alex/issues/104#issuecomment-239664636, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AG7NrXuBkqQpR6EdX034g7UT66fQ27TWks5qfuIhgaJpZM4JTDe2\n.\n. \n",
    "johntd8": "Yes.  I think so as well.\n. ",
    "mathesond2": "Hi @wooorm! love the project, and figured I'd give this issue a quick jot..this is seriously offensive stuff to type out in an issue, but I suppose the point of Alex is to correct such language. :) Please let me know your thoughts, I'd love to contribute more.\neskimo - Inuit\nhalf-breed - bi-racial\nhalf-caste - bi-racial, multi-racial\nmick - Irish person\nnegress - woman of African descent\noriental - Asian person\npaddy - Irish person\nfruitcake - gay man or lesbian woman\nnon-white - multi-cultural(?) <--not sure about this one\nghetto - urban(?) <--not sure about this one\nafricoon - person of African descent\nbeanbag - person of Mexican descent\nching-chong - person of Asian descent\ndiaper-head - person of Middle-Eastern descent\njewess - Jewish female\nslanty - Asian person\nspics - hispanics, latinos\n. ",
    "software-opal": "So this change can be made really easily by changing line 30 in index.js\ndiff\ndiff --git a/index.js b/index.js\nindex 128d7fa..e23a780 100644\n--- a/index.js\n+++ b/index.js\n@@ -29,3 +29,3 @@ alex.markdown = alex;\n /* Processor. */\n-var text = unified().use(english).use(equality).use(profanities);\n+var text = unified().use(english).use(equality, {noBinary: true}).use(profanities);\nHowever this simply creates 2 warnings; one for he and one for she. I'd prefer a more precise solution implemented in retext-equality to detect these as a candidate for replacement.\nFor example:\nInput: He or she must own a computer\nOutput: `He or she may be insensitive, use they instead`\n. ",
    "lodenrogue": "Seems my browser defaulted to Windows-1252 instead of UTF-8\n. ",
    "gpeden": "thanks for that explanation.  Is there a way to allow him / her without quotes?  Also, is there a way to add my own words to the exclusion / bad list?\n. ",
    "antislice": "Yup, that definitely helps! Thanks for adding it.\n. ",
    "henriklundgren": "I felt intrigued by the subject and decided to chime in,\nbesides previous said,\nfrom a power research perspective,\nChristianity enjoys an elevated position that non-Christianity doesn't,\nhence reaching for discrimination seems petty.\n. ",
    "greenkeeper[bot]": "Version 10.1.2 just got published.\nUpdate to this version instead \ud83d\ude80 \n\nCommits\nThe new version differs by 4 commits .\n\ne46335f chore(release): 10.1.2\n25aec77 fix: revert defaulting to empty file-coverage report, this caused too many issues\ne03cd48 chore(release): 10.1.1\n81229a0 fix: fix bug related to merging coverage reports see #482\n\nSee the full diff.\n\n. ## Version 6.1.0 just got published. \nUpdate to this version instead \ud83d\ude80 \n\nRelease Notes\n6.1.0\n\n\n03650ff Fix to only merge settings for plain objects\n\n\n\nCommits\nThe new version differs by 3 commits .\n\n8da7530 6.1.0\nc6fdd5b Update dev-dependencies\n03650ff Fix to only merge settings for plain objects\n\nSee the full diff.\n\n. ## Version 3.0.1 just got published. \nUpdate to this version instead \ud83d\ude80 \n\nCommits\nThe new version differs by 3 commits .\n\n8b3b645 3.0.1\n147f860 Update dev-dependencies\ndaf3d53 Fix miscategorised dependency\n\nSee the full diff.\n\n. ## Version 3.0.2 just got published. \nUpdate to this version instead \ud83d\ude80 \n\nCommits\nThe new version differs by 2 commits .\n\neb25484 3.0.2\n0f463a6 Fix file-system access for filled files\n\nSee the full diff.\n\n. ",
    "glen7": "Ebe/ebephile is a term that refers to people sexually persuing older teenagers - differing from pedo and hebephilia. https://en.wikipedia.org/wiki/Ephebophilia. ",
    "snood1205": "Certainly I can do that. No worries on the late response. Maintaining open source projects is a pain, so you're fine!. No worries thanks for your help! . ",
    "fega": "I can help . I see Alex as a very interesting writing tool, I guess that will be great if it is translated or adopted in another languages. ",
    "agustingrigoriu": "I agree, I like the concept, It should be adopted not only in Spanish but other languages. I'm very sorry, i dissapeared because I started my thesis and also I began working. For the time being I can't find enough time to colaborate. I hope you can forgive me\n. I talked to a friend and he is interested in taking my place in this task. Please explain him what to do to contribute. And again, sorry for dissapearing.. ",
    "BelenValdivia": "Hello! I want to participate too.. ",
    "ClaudioOliveda": "Hello, I want to take the place of Agustin.\nWhere are the files I should modify?\nI await comments. ",
    "Haroenv": "Weird, I could definitely see it yesterday in my editor, but now it\u2019s not marked as insensitive anymore. \nThanks anyway!. ",
    "markcornick": "Observed on macOS Sierra (16.5.0) with the following npm version:\n{ npm: '4.2.0',\n  ares: '1.10.1-DEV',\n  cldr: '30.0.3',\n  http_parser: '2.7.0',\n  icu: '58.2',\n  modules: '51',\n  node: '7.9.0',\n  openssl: '1.0.2k',\n  tz: '2016j',\n  unicode: '9.0',\n  uv: '1.11.0',\n  v8: '5.5.372.43',\n  zlib: '1.2.11' }\n. alex@4.1.0 does work, with no issues found at any point of my test script. Thanks!\n. ",
    "fahad19": "Travis-CI build output for reference: https://travis-ci.org/Travix-International/frint/builds/231453498#L1895. if I modify unified-engine/lib/finder.js:148 (link) a bit, it works like I expect it to:\n```js\nif (ignored) {\n  try {\n    // file.fail('Cannot process specified file: it\u2019s ignored');\n  } catch (err) {}\nreturn one(null, []);\n}\n```. @wooorm: that worked! I will close this issue.\nthanks for being so quick and helpful!. ",
    "actionjack": "Yep that works when I use node 6.0.0 thanks. ",
    "booyaa": "Hi,\nThe recommended alternative doesn't really make sense in the context of\nHost computers. I'd be interested is alternatives...\nCheers.\n. I should also add that the 'allow' option doesn't allow you to override.. ",
    "pierreneter": "I have tried, and quiet  flag doesn't work with .?. I think I do not need to use the --diff flag for travis-ci now because the previous changes still need to be checked. After the process is complete, I will add it later.\nSo, thank you for the suggestion about this flag.. Oops, sorry, my typo.. Thank you for explaining. \nI feel satisfied with the script:\nalex -q .. ",
    "SheetJSDev": "\nThe README and documentation should be refreshed to reflect the current output format.  The rule is included as the penultimate column in the current version but I guess it wasn't presented when the docs were last updated.\n\nFollowing the example from https://github.com/wooorm/alex#command-line , the README currently claims the output for the example.md is:\n``txt\nexample.md\n  1:5-1:14   warningboogeymanmay be insensitive, useboogeyinstead                       boogeyman-boogeywoman\n  1:42-1:48  warningmaster/slavesmay be insensitive, useprimary/replicainstead  master-slave\n  2:52-2:54  warninghemay be insensitive, usethey,itinstead                          he-she\n  2:61-2:68  warningcripplemay be insensitive, useperson with a limp` instead             cripple\n\u26a0 4 warnings\n```\nRunning against the current version, I see:\n``txt\n$ alex example.md \nexample.md\n   1:5-1:14  warningboogeymanmay be insensitive, useboogeyinstead                       boogeyman-boogeywoman  retext-equality\n  1:42-1:48  warningmaster/slavesmay be insensitive, useprimary/replicainstead  master-slave           retext-equality\n  1:69-1:75  warning  Don\u2019t use \u201cslaves\u201d, it\u2019s profane                                           slaves                 retext-profanities\n  2:52-2:54  warninghemay be insensitive, usethey,itinstead                          he-she                 retext-equality\n  2:61-2:68  warningcripplemay be insensitive, useperson with a limp` instead             cripple                retext-equality\n\u26a0 5 warnings\n```\n\nWould it be possible to add column labels to the output?  For the example, something like:\n\n``txt\n$ alex example.md \nexample.md\n   name               message                                                                    source                 rule id \n   1:5-1:14  warningboogeymanmay be insensitive, useboogeyinstead                       boogeyman-boogeywoman  retext-equality\n  1:42-1:48  warningmaster/slavesmay be insensitive, useprimary/replicainstead  master-slave           retext-equality\n  1:69-1:75  warning  Don\u2019t use \u201cslaves\u201d, it\u2019s profane                                           slaves                 retext-profanities\n  2:52-2:54  warninghemay be insensitive, usethey,itinstead                          he-she                 retext-equality\n  2:61-2:68  warningcripplemay be insensitive, useperson with a limp` instead             cripple                retext-equality\n\u26a0 5 warnings\n```\n(related question: is there any way to elicit an error? If not, maybe the whole warning column should be removed)\n\nI haven't looked into the code , but what technical challenges are presented by optionally testing actual rather than ruleId?  For example, with WTF:\n\n```js\n\nrequire('alex').text('WTF').messages[0]\n{ [1:1-1:4: Don\u2019t use \u201cWTF\u201d, it\u2019s profane]\n  message: 'Don\u2019t use \u201cWTF\u201d, it\u2019s profane',\n  name: '1:1-1:4',\n  file: '',\n  reason: 'Don\u2019t use \u201cWTF\u201d, it\u2019s profane',\n  line: 1,\n  column: 1,\n  location: \n   { start: { line: 1, column: 1, offset: 0 },\n     end: { line: 1, column: 4, offset: 3 } },\n  ruleId: 'wtf', // <-- this is the rule \n  source: 'retext-profanities',\n  fatal: false,\n  profanitySeverity: 2,\n  actual: 'WTF', // <-- the actual text is avaiable\n  expected: null }\n```\n\nWould it be possible to make exemptions that checked the actual value rather than ruleId?  For example, the exemption !WTF would match the actual text WTF. Revisiting the issue a week later, the original confusion surrounded exactly what the allow field contained.  The two examples in the README were boogeyman-boogeywoman and butt, both of which happened to match the offending text, so it wasn't clear that you needed to specify the rule id.  I think the one-sentence clarification suffices.. ",
    "zakattak": "I just realized you're pulling this from retext - I'll open the issue there.. Actually, after a small amount of digging, I'm not sure where the weight comes from for these two words. Let me know which repo I should create a new issue in.. Yep, I think it's personal preference - I would say both of them are \"maybe profane\", because they are the anatomically correct words for genitalia. There are proper places to use those words. Again, it's my personal preference though, other people might not feel the same way.. I've opened a PR there. Thanks!. ",
    "waldyrious": "\nI've opened a PR there. Thanks!\n\nLink for future reference: https://github.com/words/cuss/pull/14. ",
    "optikfluffel": "\n@ahmad2smile you do understand, that nobody forces anyone to use alex, right? If you don't like it, think it's unnecessary or even bad then please just move along and ignore it. Thanks.. ",
    "yohanmishkin": "No doubt. Thanks for the heads up!. ",
    "brenca": "I think it's not just mac.\n\n. ",
    "hiimbex": "Hi @wooorm! sorry for the delay. I'm totally in support of all these ideas, but I'm really swamped right now, so I doubt I'll have the bandwidth to work on this anytime in the near future. \nFeel free to close this out if you don't think anyone will be able to work on it anytime soon.. ",
    "riley-martine": "I've sent two PRs (one for readme, one for website).. Since I didn't see any forks, I started over at https://github.com/riley-martine/alex\nIf anyone who actually knows Javascript could review what I've done so far, I would appreciate it.\nAnother useful thing would be creating test cases that pass the markdown parser and fail on the html parser. I'm not so sure what the end goal is - running ./cli.js on a file containing <em>boogey</em>man already detects boogeyman.. Let me know if that's too much? I'm not sure I'm doing the best job of checking text vs html, the regex looking for \"9 warnings\" feels hacky. Also, the html parser does not check the title tag, apparently.. ",
    "jenweber": "@wooorm done!. ",
    "gretzky": "Sure I'll take a crack at it. @wooorm so rather than just adding a new word, i wrote a small tool that formats comparatives / superlatives. hopefully this is helpful in identifying several words. i can always add the individual word if that's easier, but i figured there's a use case out there that would need to check for multiple comparatives or superlatives of profane word.. Got it! FWIW, I removed brill. Either way, I can add the words manually if that's what you think we should do here!. ",
    "Qix-": "Hi @wooorm, very thoughtful response.\nI know I write super long posts but I'm attempting to approach this thoughtfully and delicately. The last thing I want is to have this issue be misinterpreted as malicious.\nWith the current climate of varying opinions on identity politics, a post like mine could be considered either insightful or blasphemous, depending on the person. There's really no way to have any degree of opposing or alternative viewpoint without being chastised for it on certain platforms, so I'm hoping that's not the case here on Github.\nAs a member of the LGBT community (I also feel it's worth mentioning I'm a centrist) I've faced both sides of this coin and wish only to prompt meaningful discussion and development in the spirit of improving Alex.\n\n\nFor your code examples, feel free to create a PR that implements something like retext-sentiment. Maybe that helps\n\nYes, absolutely - that's exactly what I was thinking, too. For the use-case of documentation, even the following is not far-fetched to see in documentation:\nPlease only contribute spaces, as tabs are mindless.\nAlex = 100% okay. retext-sentiment = dark orange (on the demo page).\nHowever there are some massive gaps in afinn-165, such as plurality:F***ing ni***rs. with the online demo shows as yellow, which I assume means neutral - whereas the singular form of the second word correctly shows red.\nI'm not sure if this is the intended scope of afinn-165 or if that's something that retext-sentiment should handle, but it's definitely not intended functionality.\nDisclaimer: I feel the need to mention I do not use or condone racially derogatory language, and anyone that does should open a book at some point in their lives \ud83d\ude43\nI'm not sure how afinn-165 classifies words but it's missing a lot of information (words, specifically) to make it useful for NLP in this way, in my opinion. Is it open for PRs?\nAlso, F**k you. by itself shows as neutral, too. I can't imagine that being correct. Deep diving into that particular case, retext-sentiment appears to ignore things at the very beginning of a sentence.\nJust mentioning it here since you're the maintainer of both of those repos. I can open an issue on the respective repositories if you'd like.\n\n\nThere\u2019s many things that maybe you, as an American (I believe?) don\u2019t need, but that I, as a non-American, could definitely use a hint for.\n\nYep, I'm American :)\nI understand, but I can't stress enough that there will be a continual burden of maintenance stemming from (albeit oftentimes harsh and inconsiderate) feedback due to the perceived language or thought policing. It's obvious to me that isn't the point of Alex (in large part because I'm familiar with who you are a few other maintainers are and that they are good people) - however it's understandable that others will not understand that at first glance of the project's description or examples.\nI can see the point in helping those that are not fluent with the culture surrounding the English language - and in my opinion (hopefully nothing I'm saying is being taken as authoritative) that's an incredibly useful and valid use-case for Alex to exist and it does a marvelous job at what it does  - however, suggesting incorrect usages of fundamental components and parts of speech within English when evaluating general prose is not considered correct English.\n\nAs an aside: Boogeyman (as I mentioned above) is decisively male. It's a very common entity in horror lore. It makes no sense as \"boogywoman\" unless it's a derivative or parody of the common folklore - the boogeyman is decisively male; \"boogey\", which generally refers to, uh.. mucus from the nose \ud83e\udd27; or \"bogey\", which has something to do with golf scoring (sorry golfers, I'm not well versed with that stuff).\n\nThis is critique you're going to receive as maintainers of an English 'scoring' package such as Alex, and without properly disclaiming the goals of the package, that criticism will never end.\n\n\nLook, most of this is about docs.\n\nI understand that. But all I'm pointing out is that the vast majority of people in America right now consider this topic to be highly controversial as many people perceive it to be thought- or language-policing without regards toward intent of the message. This is the reason for the troll posts, the controversy, etc.\nSuppression of speech is something Alex is going to be labelled as doing, which is why I'm putting so much effort into making sure its documentation or functionality (or both, preferably) reflect the true intent of the project.\nIf you're worried about mis-pronoun-ing an individual who identifies as a gender not conforming to societal norms, then the error message should reflect that.\n\nBe careful with \"he\" or \"she\", as they can incorrectly refer to an individual of a different gender.\n\nThis conveys intent and situations where problems may arise. If I wrote Harry Potter, I know Harry Potter is a \"he\" - it's not insensitive to use it. However, I'm not going to assume that an \"Alex\" that I have not personally met on the other end of an email message is a male or a female and thus this rule does apply.\nThe same thing can be applied to race.\n\n\"Black\", when referring to an individual or a demographic, is considered profane in certain cases.\n\nThis conveys intent. If I'm talking about the color black (e.g. this text is black on white), in no situation is that going to be insensitive towards a particular race.\nThese are example of how you could immediately improve error messages, if you're interested in that.\n\nWithout NLP, the problem of intent - the whole point of my posting here - is going to cause friction and remain academically inaccurate until the results are more applicable. \"She is black\" and \"That UI component is black\" are not equivalent in terms of insensitivity - this is factually undeniable. \nHowever, Alex marks both as insensitive - which is concerning since that will only confuse users trying to remain culturally sensitive to English speakers due to not knowing the language as well - something you said yourself was a primary use-case for users.\nI strongly feel Alex should move away from individual word evaluation and towards a retext solution if your goal is to curb truly insensitive writing.\nWriting something such as...\nThe girl had black hair, black nail polish, and black skin.\n... and getting back an error such as...\n1:43 - 1:54 Using \"black\" to refer to an individual or a skin tone may be considered insensitive\n... using a data structure similar to...\njson\n{\n    \"profanity\": {\n        \"black\": \"to refer to an individual or a skin tone\"\n    }\n}\njavascript\nconsole.log(`Using \"${key}\"${profanity[key] ? ' ' + profanity[key] : ''} may be considered profane`);\n... is going to be much more informative, respectful, sensitive and accurate, and more applicable to the English language and culture surrounding it.\nHowever, you're much more well-versed in Retext so it's your call as to whether or not this is something you would want to move toward. This also means a sweeping departure from how Alex works currently, in pursuit of more accurate results.\nI'd love to work on this personally as Retext seems fun and it would be a good excuse, and I'm sure there would be interest from others as well.\n\nFeel free to help! \ud83c\udf89\n\nAbsolutely \ud83d\ude42. @swastikbanerjee07 absolutely :). ",
    "SleeplessByte": "Hi there! I don't know if it's appropriate to join this conversation and I really don't want to detract form the points being made; as someone who's on the the spectrum and from a blatantly forward (and usually \"rude\") culture, I was very intrigued seeing this in my feed. \nThat said, I think an additional / complementary issue is with the README and the description, which makes Alex pretend to be a single source of truth when it comes to inconsiderate writing, where in fact, as we can see in the comments above, it's merely aiding people to take note of things that could potentially be perceived differently than was intended. I think this is a great thing, and this tool is good to exist, but I am really conflicted about the way its functionality and usage is described.\nAs for the workings, I think if https://github.com/get-alex/alex/issues/72 were superseded and implemented, this tool would instantly get so much more value for me, as it would help me understand why something could -- accidentally -- be profane or inconsiderate; and that would help until there is something like NLP to guestimate the intent of the writer and guesstimate how it will be perceived by an arbitrary reader. \nLet's not forget that you can make almost \u00e1n\u00fd word in any language be something profane or inconsiderate.. ",
    "devkant": "I would like to do it. ",
    "hiteshpr": "HI, can I work on this?. ",
    "cunhazera": "@wooorm could I put some note at the Contributing section?. @wooorm Oh, no. I did not know about that issue.. @meetcric no, I'm not. That's all yours :). ",
    "AidenMead": "Hey! I was hoping maybe I could add a little something for this issue? I was thinking something minimalist (to stick with the over-all style) but something to make sure people know about the Hacktoberfest contribution options. \nWould that be okay?. ",
    "strongSoda": "Hey there, I would like to help on this issue. Can I get started on it?. I would look into the API part.. ",
    "tmott13": "I created a pull request for this issue \ud83d\udc4d. sorry, I just created a new pull request and removed the files that I put in the main folder, the changes are now in the src folder. . I\u2019ll make those changes for you. I\u2019ll paste in the link instead of \u201cclick here\u201d.  Opening up links in a new tab/window is just my personal preference but I will fix it for you. Any additional text you would like me to add? . Or I can make \u201cGitHub Social Impact Collection Challenge\u201d text in the paragraph the link. That way would be much better I think. . How does this look? I removed the target=\"_blank\" in the link. No breaks are being used.\n\n. I added the updated index.html file. Thank you so much! \ud83c\udf89\ud83c\udf89\ud83c\udf89. I was leaving a little white space in between.. Here's a screenshot\n\n. do you want the image as a link or put the link in the text?. how does this look? I added it right under the cover heading.\n\n. or put the text under the image? \n\n. ",
    "Redarcher9": "Hi there,I'm new to open-source community.Can I work on this issue?. Thankyou @wooorm !I am familiar with javascript but haven't used Node.js before.Can you help me figure out what things do i need to learn before contributing to this issue?. ",
    "meetcric": "Hi there,Can i work on this issue?. Okey..is there any other issue I can work on?. @wooorm  think @cunhazera is working in #199. should I start to work on that issue?\n . @wooorm can u explain this issue in details please?. ",
    "TJScalzo": "Personally, I think the GitHub corner as it's styled right now doesn't fit the style of the site. I feel like it would look better styled like this with colors already used on the landing page.\nShould I make a pull request with this change?. @svcastaneda Does that mean the current GitHub corner is breaking their branding standards? The person who designed the corner seems to show it being used in a variety of color combinations on his site. If the animated corner goes against GitHub\u2019s logo rules, should we be using it at all?. This recolor turns the triangle white and the Octocat purple. An example of what it looks like on the landing screen's colored background can be seen here.. ",
    "svcastaneda": "@TJScalzo I don't think that idea complies with GitHub's logo usage guide mostly because of the animation and possibly the usage of a purple background instead of a white or dark grey color. ",
    "dhyey35": "Hi @wooorm, Can I start working on this issue ?. ",
    "Puddinglord": "Does Digital Ocean have a policy for multiple people working on a PR? Would each one get credit or just the one who submits the PR at the end.. ",
    "CRomano31415": "I see the issue in retext-profanities. I'll start putting a list in Spanish together \ud83d\udc4d\ud83c\udffc. Profanities. \nIf anyone else can push before me, go for it - currently at work and won't be able to push for a few hours.. I've found some lists in discussion boards, there are no official ones that I have been able to find. But you can start putting it together.. @MrBenJ Sounds good, do you want to start it? I have a huge list of words that I'm cleaning up but wasn't sure how to code them since some are not profane in some countries, but then I realized if it's profane to some, it should be flagged as profane so I'm almost done cleaning up. If you upload a json, I can add to it. I was looking at fr-json and I wasn't sure what the numbers next to the words were, do you know?  . Well, that is a great question, because I could have sworn I saw fr-json not too long ago in one of the remarks... This issue points to it, but now I can't find it either. . Ok @MrBenJ here's the list We need help with ppl picking the profane terms (not all of them belong in profanity - some may belong elsewhere) and adding them to a json (in the right location - not sure where that is at). . Awesome!! I have no idea where to put that JSON file here, maybe @wooorm can guide us? Titus, we have a JSON file with spanish profanity, which repo do we add it to?\n. I feel pretty good that my contribution to society today has been a list of profane words. \nYes, please @fportela-ns pull and fix. To be transparent, I just kind of scraped the web and cleaned it up LOL I didn't quite invest the time in modifying it. And also some words have different meaning in different countries so...idk what to do about those.... ",
    "JekRock": "Does it support only Latin languages? I can help with Russian and Ukrainian.. ",
    "deatheguard": "I can help with French and/or English!. I can help with French as well! And I really want to!. ",
    "baezor": "I can help with spanish!. Is someone working on spanish here? . Which is the status? How can I help? @CRomano31415 . ",
    "AhmedRedaAmin": "Can I add support for Arab Latin-Script Slang ? (Used heavily on Social media)\nNote : it includes numbers for some Arabic sounds , if that will cause problems for parse-latin. Okay , so I noticed there were 2 approaches to adding new languages , so I 'll take @CRomano31415 's approach , I already started by borrowing her repo template , I hope you don't mind Claudia ! . @waaghree yes , I worked on something very similar . You can refer to @wooorm 's link as well as the issue titled Arabic Latin-Script on this repo , feel free to ping me if you want to ask about anything .\nGlad to see Arabic script being transliterated for more than one language :D , Good luck mate. . @GledsonAfonso  So here is how it works , you add the words to the words/cuss project , rate them based on profanity , then they get used in get-alex/alex to detect profane words , that is as far as I know how the Yaml files can Identify the inappropriate words , as for the \"insensitive\" phrases , they get added to retext-equality by hand directly together with the suggested alternatives , they are different from flat out cusses which obviously don't have alternatives suggested .\nThis is what I understood atleast .\nShort answer : The second best way to help  with internationalization is to add your native language insensitive phrases to retext-equality along with their suggested alternatives , Good luck mate ! :D . @MrBenJ  Hey ! can you pass over the jsonify script you used on the list ? I will very much need it actually :'D\nI am currently using Claudia's template and manually adding them to the json file seems incredibly ludicrous .. Thanks @MrBenJ  , that is AWESOME !\nI 'll definitely look into that repo as soon as I finish what's on my hands currently , that thing is a big help mate , thanks again .\n.  hey @wooorm  , can you put the labels mate ? The hacktober fest , beginner friendly , help-wanted ,the whole shabang , let the Arab bois have fun will ya :'D.\nAlso I'm exhausted , this is turned out to be way difficult than I expected , due to transcription differences , the fact that there is near to 9 dialects , the lack of sources and a whole other host of problems , I managed to compile like a 130+ something actually , all while trying to understand other dialects .\nso yeah , help ye lads .\nAnd also I wasn't able to find any sources , so I could be one , any suggestions how we can put this collection out there , you know ,  in case anyone needs it for any reason ? . Done the first json upload @wooorm .\nShould I merge with you now ?\nOr should I host it for a while till it fills up first ?\nI got about 220+ something entries .. Okay , fair enough , Pull request to words/cuss coming right up , like the French team , I 'll be pushing only the .json file .. ",
    "inesbenomar18": "I can help with Arabic and French as well! :) \n. ",
    "rampagesang": "@wooorm Do you know a language other than English\n...and are you able (it\u2019ll take some time) and wiling to help? Create a new issue for your language and let\u2019s start working on this!\nI can help with Korean!~. ",
    "Yangeok": "Can i help you to translate language korean and germany?. ",
    "PaoloWeishaupt": "I can help with italian, spanish, french and german.. ",
    "luigicorreia": "I can help with Portuguese.. ",
    "toucedam": "\nI can help with spanish!. Is someone working on spanish here?\n\nyes. ",
    "GledsonAfonso": "I can help with Portuguese too (pt-BR).. @wooorm @AhmedRedaAmin  Except from the words/cuss project, there's another way that we can help with Internationalisation? If yes, how?. @AhmedRedaAmin  Thank you for the explanation! I think it would be interesting if we had some section in the get-alex/alex project (wiki maybe? With a mention in the README file and all the cool stuff) about this... or this already exists and I'm just making a fool of myself here, haha.\nAnyway, thanks again for the heads up. I'll see if I can add some phrases in retext-equality as soon as I get the gist of it. Cheers!. @wooorm Great! Do we need to create an issue for that?. @wooorm Okay! I will create an issue for that now and see if I can manage to work on it later, in case no one take it first. Thanks!\n@OtacilioN Thanks for creating the issue for the language.. @OtacilioN I think that variation is the key here. Pt-BR and pt have huge variations within them, more yet when it is about profanities and curses. For now, the project words/cuss have some pt-BR words, but not pt and, for what I know, we still need some support for both languages in retext-equality, retext-profanities.. Great then! ^^\nThank you for your help, @OtacilioN. That's right, pt-br.js and pt.js.. It's open for the community, @OtacilioN, you can take it if you want. I opened the issue because I probably will not have the time to do it this weekend.. ",
    "waaghree": "\nDo you know a language other than English\n...and are you able (it\u2019ll take some time) and wiling to help? Create a new issue for your language and let\u2019s start working on this!\n\nHow about Urdu?  It's in mostly Arabic script with added characters, however, for a large part people use English characterset to write on social media in something called \"Roman Urdu\".  @AhmedRedaAmin are you working on something similar in Arabic?. ",
    "OtacilioN": "Hey Folks, I would love to help with Portuguese! . Hey, I would love to help in the Internationalisation to PT-BR, but I did not found in the Contributing guide how to contribute in Internationalisation, is that it possible? . Okay @GledsonAfonso, so should we create two different translations right? pt-br.js and pt.js.\nThanks for this amazing resource, I am working on https://github.com/retextjs/retext-profanities right now, and I hope to make a pull request soon. . Hey @GledsonAfonso are you already writing this information in the guide? Or are you opening this issue to the community make it? . ",
    "lex111": "\n. Done :heavy_check_mark:. Oops! Sorry, I completely forgot about this :man_facepalming: . ",
    "nathfreder": "This seems a bit \"exact\" and does not look very appealing. . Looks better, probably still needs work but it is a good start!\n(you forgot mergable). This whole thing (particularly this href) looks like it is effortlessly copy-and-pasted. I would recommend having a look at what you pasted and fill in the blanks \ud83d\ude03.. Thanks ok @lex111. . \"Atlast\" should be \"At last\". \"open pull request\" should be in double quotes.. \"If you pass test\" should be \"If you pass the test\".. \"mergable\" is not a word.. \"mergable\" is not a word.. ",
    "AurelieBayre": "I would be interested in helping too.. ",
    "cedroid09": "Okay, I'm in too.. ",
    "cynferdd": "Looking at the way the projects are made, I think your approach is good. I can take care of the profanities project, to start with.. ",
    "erickzhao": "Hey, that sounds like a really interesting idea. I've seen something similar used in a GitHub app before, but they were using Perspective API instead, which seemed to target conversational sentiment. Not sure how much of a difference that would make?\nIs this an issue that needs more investigating in general, or would you be accepting PRs to test it out?. @swastikbanerjee07 feel free right now I haven't had the time over the past week to do anything!. ",
    "swastikbanerjee07": "Hi ! How about using nltk for sentiment analysis by textblob API?\nCan I take this issue up?. @wooorm Ou. Then I guess I'll not be able to contribute for this project? :( I don't know JavaScript.. Hi ! Can I take this issue up?. Cool! I'll start working on it.. ",
    "jonyeezs": "Is there a way we could split this issues into multiples TODOs that can be tackled individually?. yeah slowly porting over seems less overwhelming.\nI guess i may have posted a silly statement. As someone new to this project, I'm not sure what I'm dealing with.\nBut I love the mission of what alex is and would love to contribute.\nSide-note: This is inspiring me to create a chrome extension! But that would be for another future date XD. ",
    "brycekahle": "@wooorm I made an attempt on the code side of things in retext-equality. See https://github.com/retextjs/retext-equality/pull/55. ",
    "Murderlon": "Resolved in https://github.com/retextjs/retext-equality/pull/55. @vaishnavi-janardhan much better already. Though one small change for the better might be a small tip before one starts contributing to the site. Perhaps a reference to the \"Write code\" section where this is already done.. Hi @IfeanyiEkperi, thanks for the issue! However, It seems this comes down to opinionated styling. All the section's deliberately have min-height: 100vh which means every section will take up your entire screen. As it seems this was the original intend, I'd consider this a non-issue. :). @Gotham13121997 Thanks! Every change no matter how small is welcome :). @laurenmayers seems like a perfect first issue to pick up here \ud83d\udc4d\nDo you already have an approach in mind? It could be as simple as an <a href=\"#content\">icon</a> and a <section id=\"content\">...</section>. If you are feeling adventurous, you could look into Element.scrollIntoView() as a progressive enhancement.. resolved in #224 . @laurenmayers Thanks for the work! In regards of your question, src/index.html loads the src/index.js script but it uses require's and therefor needs a build step in order for the browser to understand it. If you open dest/index.html after your changes have been build (npm run build) you should be able to see them.\n@brendo That's would be a nice approach and a progressive enhancement as well.  @laurenmayers Maybe give this a shot first and tell me what you think?. Sounds good \ud83d\udc4d \nI'd recommend creating a 260x260 version and this online tool, which also generated the HTML for you.\n. @laurenmayers I'd probably delete the untracked files for now and then do git checkout ., which will clear as much as possible back to begin. You can then probably do a git pull and maybe try a few things from there. If you're stuck again, please return with the full output of git status :). That's totally fine. You already took the initiative of coming up with this and working on it in your free time so don't feel pressured to finish things as quickly as possible.. @ItsPugle Check the output of npm run test, resolve the errors and commit them. Everything should be fine then :). > I'm really perplexed, since the only thing I've changed in the Markdown in README\nYes, remark does stylistic markdown checking as well and deviating from the rules results in warnings. \nThese warning are currently failing the CI checks:\nreadme.md\n  42:1-42:16  warning  Missing blank line before block node  no-missing-blank-lines  remark-lint\n  43:1-45:4  warning  Missing blank line before block node  no-missing-blank-lines  remark-lint\nCheck the lines 42 and 43 locally, add blank lines, and npm run test again to see if everything passes.. @ItsPugle congrats on landing your first PR in alex! \ud83c\udf89. @IfeanyiEkperi I like your enthusiasm in coming up with issues, but an email service for updates and issues is redundant and very time consuming. The single source of truth for issues are the issues, and updates feel like release notes.\nIf you like to contribute for hacktoberfest, I'd recommend checking out this list, or alex's issues or the issues in it's dependencies \ud83d\ude42\n. @edorado93 perfect, all good to go :). @MrBenJ thanks for picking this up as well as investigating the origin of it!\nSince you already submitted a PR to the package containing the vulnerability I don't think it's necessary to drop support for node/boron just to temporarily fix it. Especially since @wooorm and you agreed it isn't that bad of an issue.\nLet's keep the issue open till it's fixed and thanks again \ud83d\udc4d. non-issue as currently presented. hi @laurenmayers, it seems there are still some git issues going on here. Git is always the hardest to figure out when things go wrong.\nIssues:\n- commits from you smooth scroll PR are still in here\n- the favicons are missing\n- there are conflicting files\nBy all means try a few things to fix this in in any way you like, but I think the easiest thing to do at this point is to do the following\n- save the favicons and html code somewhere locally\n- delete your fork\n- re-fork\n- create a new PR\nlet me know if you have any questions :). Agreed. Thanks to Hacktoberfest there have been lots of internationalization additions and discussions and this could help to keep that up \ud83d\udc4d  . Hi @andmos, cool stuff! But I feel like this is something you make specifically for yourself when you need it and it doesn't need to be in this repo.\nHave some good arguments? Otherwise I think I'll close this.. @wooorm what do you think? Nice to have with some documentation in the README?. ",
    "codecov-io": "Codecov Report\n\nMerging #211 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #211   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          63     63         \n=====================================\n  Hits           63     63\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6c06a99...155669e. Read the comment docs.\n. # Codecov Report\nMerging #211 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #211   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          63     63         \n=====================================\n  Hits           63     63\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6c06a99...beacb8b. Read the comment docs.\n. # Codecov Report\nMerging #216 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #216   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          63     67    +4   \n=====================================\n+ Hits           63     67    +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| cli.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6c06a99...437d075. Read the comment docs.\n. # Codecov Report\nMerging #217 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #217   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          67     67         \n=====================================\n  Hits           67     67\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5548330...39fd59f. Read the comment docs.\n. # Codecov Report\nMerging #218 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #218   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          67     71    +4   \n=====================================\n+ Hits           67     71    +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| index.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5548330...2d6f0ac. Read the comment docs.\n. # Codecov Report\nMerging #222 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #222   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          71     71         \n=====================================\n  Hits           71     71\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8efb39...a5c8a86. Read the comment docs.\n. # Codecov Report\nMerging #227 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #227   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          71     71         \n=====================================\n  Hits           71     71\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e28e161...50c6791. Read the comment docs.\n. # Codecov Report\nMerging #230 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #230   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          71     71         \n=====================================\n  Hits           71     71\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d0f97f...32bf0de. Read the comment docs.\n. # Codecov Report\nMerging #237 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #237   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          71     71         \n=====================================\n  Hits           71     71\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d0f97f...7a95610. Read the comment docs.\n. # Codecov Report\nMerging #243 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #243   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          73     85   +12   \n=====================================\n+ Hits           73     85   +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| cli.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| index.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8dd29a5...6646bba. Read the comment docs.\n. # Codecov Report\nMerging #246 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\nmaster   #246   +/-\n=====================================\n  Coverage     100%   100%         \n=====================================\n  Files           3      3         \n  Lines          85     85         \n=====================================\n  Hits           85     85\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4b9a763...6438c2d. Read the comment docs.\n. \n",
    "vaishnavi-janardhan": "I have made few edits. Please look into it.. ",
    "MrBenJ": "Que paso?  Se habla espanol! Puedo ayudar.\nWhat's up? I know how to speak Spanish. I can help. I know a few inappropriate Spanish words and can contribute. Is it in the sp-json file? . @CRomano31415 - I think the international 2 character code for Spanish is es, not sp. Do you think the file should be named es-json instead?\nhttp://www.loc.gov/standards/iso639-2/php/code_list.php. @CRomano31415 - Sure thing. I'd be happy to start it off. \nWhere are you finding es-json or fr-json ? I'm new to this project and don't know where these files are. Let me know and I'll get started right away :). Ahh! It looks like that PR hasn't been merged into words/cuss yet. Looking at what @wooorm has commented with on the issue you're referencing, I'll go ahead and follow the same naming conventions they're asking for of the other contributor. We can work on this PR together and get this moving :). Happy Hacktoberfest!. Hey @CRomano31415 - I wrote a little script to JSONify your list and added a couple of words that weren't on there. I made a pull request to your own repo here: \nhttps://github.com/CRomano31415/SpanishProfanity/pull/1\nIn the comments, I mentioned that I set everything to a value of 2 for the time being. \nMy coworker @fportela-ns actually helped out a little bit with some insults that were missing as well.. Hey @CRomano31415 - My coworker @fportela-ns wants to help out and he's a native Spanish speaker. We found a few words in there that don't quite belong chancla is similar to sandal and aguacates is @fportela-ns 's favorite food. He's gonna fork that repo and start working on it. Also, as a fun side note, how many times in one's life can you say, \"I have a file with Spanish profanity! Where do I put it!?\" I'm giggling over here.. @fportela-ns @wooorm @CRomano31415 \nI think the next best course of action is to grab @CRomano31415 's file and make a proper pull request to this repo: https://github.com/words/cuss\nI've already submitted a PR to get-alex/alex and I'd like @CRomano31415 and @fportela-ns to get some credit for contributing to this project, so I'll let them go ahead and make the appropriate PR's to get credit/contribution/hacktoberfest points :).. Hey @AhmedRedaAmin \nSure thing. I whipped up an NPM package for you as a CLI tool:\nhttps://www.npmjs.com/package/wordlist-to-json\nHere's the git repo if you feel like contributing :)\nhttps://github.com/MrBenJ/wordlist-to-json\nYou can install it globally with:\nnpm install -g wordlist-to-json\nAnd use it like this:\nwordlist-to-json --file my_wordlist.txt --space 2\nHope you like it :). Hey @wooorm - I have some time. I should be able to help out on retext-equality. Might not get to it today, but probably by the end of the week I can lend a hand.. I totally agree with you on that @wooorm - The reason I'm bringing this up is that Github and npm both show big warnings on my repos that use your project. They look a little like this: \n\nWhile it's alarming, it really isn't that bad of an issue, since like you said, Alex isn't running a server or similar.\nI'll go ahead and fix this up for you. PR incoming before end of day today :) (USA time)\n. Hello!\nI found the root cause of the npm audit issue. It's here:\nhttps://github.com/alessioalex/git-spawned-stream/pull/5\nI submitted a PR to that project as well. Those tests are passing right now and hopefully we can get this all taken care of :D.\nAs a quick side note, there's this great free tool I use to keep dependencies up to date called Greenkeeper. \nThanks again! Appreciate you maintaining this awesome project :). Hey @wooorm \nI was able to recreate the build error in travis by switching my node version to v6.14.4. It looks like the transforms in @babel require the ** operator, which isn't available until Node 7. \nYour node/boron Image uses Node v6.14.1. \nI already submitted a PR to get rid of the RegEx vulnerability issue in the package that's causing the issue, so if you'd like to continue supporting Node 6 LTS, we can close this PR and not worry about upgrading Ava to @next\nIf you need me to edit the configs to test on Node 8 and put in the proper documentations, please let me know and I'll add some commits to make sure this is solid.\n. ",
    "fportela-ns": "hey @CRomano31415  have the PR ready \ud83d\ude04 honestly there are a LOT of words that I've no idea what they mean haha. But here's my contribution https://github.com/CRomano31415/SpanishProfanity/pull/2.\nI just removed a few words that I consider can't be profane in any way, and marked as 1 words that are profane but only depending on the context. ",
    "Leodau": "Hey all, just added some ES Venezuelan dialect profanities into cuss  \ud83d\udc6e\nfeat(Profanity_ES): Adding Venezuelan dialect profanities.\nThere is indeed a problem with all the ES profanity lists i find on the net, since ES is so geo sensitive, the only real way into solving this is actually trying to not add any word that could be used usually by public speakers, teachers, tv.. and that are correctly defined in the dictionary, even though they might be used by some dialect as profanities.. ",
    "annakau": "I could try to add some notes. ",
    "agans": "Hi, I opened a PR to help contribute to this issue, if anyone would like to take a look - thanks! https://github.com/retextjs/retext-equality/pull/51. ",
    "IfeanyiEkperi": "Ok @Murderlon. Noted. What of the grammatical error on the page?. ",
    "laurenmayers": "I'll start with a simple anchor tag #content jump, and play around with the Element.scrollIntoView() function and see how it goes :) . Hey @brendo, I just learnt about scroll-behaviour myself, I'll give it a go! \n@Murderlon That explains things! Thanks for that, I'll work on this now :) . All done! Love the smooth-scrolling property \ud83d\udc4c\ud83c\udffb\nI realized after pushing the updated code that I left an empty line on line 4 which interfered with the  changes review on GitHub, hence the latest commit.. @Murderlon Ooh yes! I didn't consider that, my apologies. It's second nature to use my formatter now, and yes, it's Prettier. I'll be more mindful of that from now on!. Thanks @Murderlon! That is an awesome tool. Just created the PR - looks like it's included my recent commits as part of a changelog, hoping I haven't PR'd those again too? (Still new to this, really appreciative of any feedback and wanting to make sure I'm contributing the right way). Thanks :) . @Murderlon Ah, I knew something was going wrong. I'm having a little trouble sorting out the merge conflict, not sure what sort of monster I've created here \ud83d\ude05\nIf I run git pull or git reset HEAD~5 I get: \nnothing added to commit but untracked files present (use \"git add\" to track)\nUpdating b644e4f..4ddc5ad\nerror: The following untracked working tree files would be overwritten by merge:\n        favicon_package_v0.16/android-chrome-192x192.png\n        favicon_package_v0.16/android-chrome-256x256.png\n        favicon_package_v0.16/apple-touch-icon.png\n        favicon_package_v0.16/browserconfig.xml\n        favicon_package_v0.16/favicon-16x16.png\n        favicon_package_v0.16/favicon-32x32.png\n        favicon_package_v0.16/favicon.ico\n        favicon_package_v0.16/mstile-150x150.png\n        favicon_package_v0.16/safari-pinned-tab.svg\n        favicon_package_v0.16/site.webmanifest\n        src/hacktoberfest.png\nPlease move or remove them before you merge.\nAborting\nI tried the git reset HEAD~5 a few times and just noticed each time it's pushing my branch further and further behind origin/website, and I'm not sure how to catch up. I'd really appreciate any advice on how I can redeem myself here, I've somehow gone down a rabbit hole :( . @Murderlon Thanks for your help. I've managed to get everything back to where it was locally (pre favicons) using your advice, and then tried to revert the related commits using git revert <SHA> as per these instructions - but they are still visible in my fork \ud83e\udd14\nSo now that my local environment is back to square one (pre-favicons), how can I get my fork back to square one too? I can still see the two files I reverted: \nfavicon_package_v0.16\nsrc/index.html\nGit status at time of writing:\n```\nMacBook-Pro:alex laurenmayers$ git status\nOn branch website\nYour branch is ahead of 'origin/website' by 2 commits.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working tree clean\nMacBook-Pro:alex laurenmayers$\n```. @wooorm @Murderlon  Hey! I was hoping I could finish this off after this weekend, if you don't mind the delay? Life just got a bit hectic but I want to finish this as soon as I can! :) . Awesome, thanks @wooorm! Yes hope so!. ",
    "brendo": "\nI would like to add smooth scrolling, however I was having trouble seeing my changes to the index.js file when I was working on this - even testing console.logs did not show up for me. I would really appreciate any pointers as I'd love to add that feature.\n\nI only learnt recently that smooth scrolling can be achieved in some browsers just with CSS! Give scroll-behaviour a go and you might not need to add any JS at all \ud83d\udc83 . ",
    "sebassdc": "Is this still required?. ",
    "ItsPugle": "Hey @wooorm, I'm a bit lost here. I can't seem to find any info about preferred markdown formatting etc and it seems to be rendering fine? \ud83d\ude42. @Murderlon \ud83d\udc4b I've looked through the test results, and I'm absolutely lost. I'm not proficient in Node.JS, let alone JavaScript, myself at all and the output for npm run test has no guidance towards any obvious thing that's the issue. \nI'm really perplexed, since the only thing I've changed in the Markdown in README - nothing else.\n. Okay, I think I've gotten the hang of Node and might have resolved this \ud83c\udf89 Thank you so much @Murderlon, I've never worked with using remark or Node (other than using it for global packages and once for playing around with dependencies)! . Thanks, I'm super happy I was able to help (even though it's such a small change) \ud83d\ude04 . ",
    "alessioalex": "Issue fixed in git-spawned-stream, published version 1.0.1 to npm already.. fine by me, sure!. ",
    "edorado93": "Hey @wooorm, these changes don't fix any pressing issues as such. However, they fix-up the documentation a bit. e.g. \nA window will **not** pop up.\nThis was written twice in the documentation in two consective lines and I think that was by mistake. Again, nothing major but just some README fixes. . @wooorm Sure thing. I'll add the line back. But as @Murderlon said, the line is there to convey that linting is disabled until <!--alex enable dad-mom-->. I still feel it's a bit confusing at first. Can we project it in some other way maybe? If you feel its ok, I'll add the line back and you can go ahead with the merge. \nMaybe we can have something like\n```\nalex disable dad-mom\nSENTENCE 1\nA window will not pop up.\nSENTENCE 2\nA window will not pop up.\nalex enable dad-mom\nSENTENCE 3\nA window will pop up.\n```\nSomething along these lines. What do you think?. @wooorm Yes. That would be better. I'll scan the documentation and make these changes wherever applicable. . @wooorm Yes. I am working on this. Not getting time to look into it due to some other work. I will post here if I need some help. \ud83d\udc4d . @wooorm I made the changes to the README. I did a rebase to just have a single commit. Let me know if you want me to change something else. . Thanks a ton @Murderlon \ud83d\ude04 . ",
    "bu7ch": "Can i take that.. ",
    "MauroCoppola": "@wooorm Sorry for my late response.\n\nIndentation for API explaination;\nI\u2019m not sure what you mean with this \ud83e\udd14\n\nand\n\nParticular style for API title to avoid misunderstanding with document's headers.\nDon\u2019t we already have that?\n\nThose were some ideas to make a visual separation for each API explaination. For example, imho the Integrations paragraph seems a part of alex.text(value) API at first sight.\n\nDedicated .md file for API documentation;\nHmm, wouldn\u2019t that make it harder to find stuff?\n\nAdding a link to the documentation inside README.md might avoid the problem. In addition, creating a dedicated file can be useful for the future if more APIs and/or more documentation for each of those will be added.. ",
    "JWO719": "Ok thanks for pointing that out, but I'm still slightly confuse, because the example above alex content/**/*.md in my case just lints the first folder inside the content folder. It neither checks the content folder itself, nor deeper levels e.g. 'content/guide/v6'. Am I doing something wrong? :D. Yeah it is a linux based system but yeah quotes fixed it :D thanks a lot!. ",
    "toloveru": "This repository is so predominantly male, that's so damn offensi\ud83c\udd71\ufe0fe!!! Change its name right now because I'M OFFENDED and I'm entitled to enforcing the name change of projects that I haven't contributed to, for \"protecting\" minorites that I've never even met, because REASONS!!! \ud83d\ude06. And how dare you try think otherwise, you misogynistic cis male a-hole?! I'ma expose you on Twitter and Tumblr if you don't change your name RIGHT NOW!!! \ud83d\ude21  . ",
    "mansona": "\n\nThis still needs docs and cli support\n\n\n\ud83c\udf89 I didn't want to add those until I was sure I wasn't a million miles off with the implementation \ud83d\ude02 \n\n\nJust an idea: why not support sureness top-level, does it have to be in profanities?\n\n\nSo this is related to our discussion on the other PR. \"sureness\" in the context of retext-profanities kinda makes sense (even though we weren't 100% happy with it) but in the context of alex it makes no sense \ud83d\ude1e \"sureness about what\". We could make it top-level with profanitySureness because then it at least makes sense but I quite liked the idea that you had this top-level object that was essentially passed directly into the respective plugin. That way if we add any more configs to retext-profanities it won't require any code change in alex.\nThoughs? \n. @wooorm Happy New Year \ud83c\udf89 \nI've added some documentation and taken your idea of calling the config profanitySureness into account. I think I've covered everything that needs to be done \ud83e\udd14 let me know if I'm missing anything and I'll take another look \ud83d\udc4d . @wooorm I updated everything as you asked \ud83c\udf89 \nOne thing to note: I made sure that the API for configuration on text and html matched exactly the functionality of the normal markdown API, including the \"array fallback\" style execution that you suggested to remove from the documentation. This means that they now support something that is not documented and was never documented, just for the sake of consistency \ud83d\ude02 \nAlso, as you suggested I removed the documentation for the \"allow array\" fallback configuration and now we are only documenting the object style of config. I didn't change the implementation (or the tests) so we can still release this as a minor version \ud83d\udc4d . yay! thanks a million @wooorm \ud83c\udf89 \n. ",
    "andmos": "I see your point. The best argument I guess is that the Dockerfile provides a (now) standardized way of running / including apps in local development flow / CI /deployment without having Node or NPM installed. It makes the project more accessible to non-JS developers who might not have Node installed, or make a QA pipeline for blogs or other writing decoupled from the runtime itself. For my writing I check links with awesome_bot and the markdown-style with MarkdownLint without having built the projects or installed Ruby / Node. Might just be me of course, but it is a nice feature to have available \ud83d\ude03   . It's totally cool guys. Since the Dockerfile don't build the app, only wrap npm install, I can create a repository only containing the Dockerfile hand have a automated build to the dockerhub from that. \nCheers! . "
}