{
    "terrymanu": "\u4f7f\u7528\u4e86lombok\uff0c\u8bf7\u53c2\u8003\uff1ahttp://dangdangdotcom.github.io/elastic-job/sourceCodeGuide.html\n. \u76ee\u524d\u4e8b\u52a1\u53ea\u662f\u53ef\u7528\uff0c\u8fd8\u6ca1\u6709\u505a\u8de8\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u539f\u5b50\u6027\u3002\u6211\u4eec\u672a\u6765\u4f1a\u57fa\u4e8eBASE\u505a\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u67d4\u6027\u4e8b\u52a1\u3002\u6709\u4ec0\u4e48\u5efa\u8bae\u90fd\u53ef\u4ee5\u63d0\uff0c\u591a\u8c22\n. \u60f3\u6cd5\u8fd8\u672a\u5b8c\u5168\u6210\u578b\u3002\u67d4\u6027\u4e8b\u52a1\u53ef\u4ee5\u7f51\u4e0a\u641c\u4e0b\u3002\u4e0d\u8fc7\u6700\u7ec8\u6211\u4eec\u4e0d\u4e00\u5b9a\u91c7\u7528\u4ec0\u4e48\u65b9\u6848\u3002\u7b49\u505a\u7684\u65f6\u5019\u53ef\u4ee5\u8be6\u7ec6\u8ba8\u8bba\n. \u611f\u8c22\u82b1\u8d39\u5b9d\u8d35\u65f6\u95f4\u8bd5\u7528\u3002\u8bf7\u95ee\u96be\u4f7f\u7528\u5728\u54ea\u91cc\uff0c\u4ee3\u7801\u4f7f\u7528\u4e86\u54ea\u4e9b\u7b2c\u4e09\u53d1\u5bfc\u81f4\u60a8\u96be\u4e8e\u4f7f\u7528\u3002\u60a8\u7684\u5efa\u8bae\u6709\u52a9\u4e8e\u6211\u4eec\u6539\u5584\u3002\u8c22\u8c22\n. \u76ee\u524d\u53ef\u4ee5\u6839\u636e\u8fde\u63a5\u6570\u7b97\u51fa\u7ebf\u7a0b\u6570\uff0c\u6240\u4ee5\u91c7\u7528\u56fa\u5b9a\u7ebf\u7a0b\u6c60\u66f4\u5408\u9002\u4e9b\n. or\u7684\u5904\u7406\u662f\u57fa\u4e8e\u4e0d\u5305\u542bor\u5904\u7406\u5668\u4e4b\u4e0a\u7684\u3002mergeCurrentConditionContext\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u662f\u4e3a\u4e86\u5904\u7406merge\u805a\u5408\u5217\uff0c\u662f\u4e3a\u4e86\u751f\u4ea7\u548cor\u7edf\u4e00\u7684\u8fd4\u56de\u683c\u5f0f\n. \u5148\u8ba8\u8bba\u4e00\u4e0b\uff1a\n1. \u5982\u4f55\u7406\u89e3Properties\u5bf9\u8c61\u592a\u91cd\n2. \u8fd9\u4e2abug\uff0c\u5982\u679c\u6539\u6210map\uff0c\u5982\u679c\u5c06true\u653e\u7f6e\u4e3a\"true\"\uff0c\u7a0b\u5e8f\u4ecd\u7136\u89e3\u6790\u4e0d\u4e86\u3002\u5982\u679c\u662fproperties\uff0c\u81f3\u5c11\u6b63\u786e\u4f7f\u7528\u7684\u4eba\u90fd\u4f1a\u653e\u7f6eString\uff0c\u6539\u6210Object\u7684\u6cdb\u578b\u662f\u5426\u4f1a\u5bfc\u81f4\u7406\u89e3\u6210\u672c\u589e\u52a0\uff1f\n. \u4e00\u4e9b\u4e0d\u6210\u6587\u7684\u89c4\u5b9a\uff0cprop\u662f\u4eceprop\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c\u4e0d\u9700\u8981\u89e3\u91ca\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662fstring\uff0c\u4f46map\u5219\u4e0d\u7136\u3002\u8fd9\u91cc\u6211\u4eec\u7684\u672c\u610f\u4e5f\u662f\u60f3\u4eceprop\u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\uff0c\u53ea\u662f\u8fd8\u6ca1\u5199\n. \u53ef\u80fd\u6709\u95ee\u9898\n\u9996\u5148\uff0c\u76ee\u7684\u662f\u4e0d\u5206\u5e93\u5206\u8868\u7684\u624d\u80fd\u4f7f\u7528\u81ea\u589e\u4e3b\u952e\n\u4f46\u662f\u76ee\u524d\u7684pull request\uff0c\u662f\u5206\u7247\u540e\u7684statement\u4e3a1\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u81ea\u589e\u4e3b\u952e\n\u8fd9\u4e2a\u4e0d\u80fd\u6ee1\u8db3\u4e4b\u524d\u7684\u9700\u6c42\n\u6b63\u786e\u7684\u505a\u6cd5\u662f\uff0c\u901a\u8fc7shardingRule\u5224\u65ad\uff0c\u662f\u5355\u5e93\u5355\u8868\u7684\u518d\u652f\u6301\n\u5b9e\u73b0\u8d77\u6765\u96be\u5ea6\u6709\u70b9\u5927\uff0c\u6211\u4eec\u5148\u63d0\u4e2aissue\n. \u975e\u5206\u5e93\u5206\u8868\u81ea\u589e\u4e3b\u952e\u652f\u6301\u5df2\u63d0\u4f9b\n. druid\u7248\u672c\u76ee\u524d\u65e0\u5347\u7ea7\u8ba1\u5212\uff0c\u5982\u6709\u9700\u8981\u8bf7\u5148\u81ea\u884cpatch\u5427\uff0c\u6216\u8005\u4fdd\u6301\u548csharding-jdbc\u76f8\u540c\u7684druid\u7248\u672c\u3002\n\u7531\u4e8e\u5176\u4ed6\u529f\u80fd\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u76ee\u524d\u65e0oracle\u652f\u6301\u7684\u8ba1\u5212\u3002\n. druid\u7248\u672c\u76ee\u524d\u65e0\u5347\u7ea7\u8ba1\u5212\uff0c\u5982\u6709\u9700\u8981\u8bf7\u5148\u81ea\u884cpatch\u5427\uff0c\u6216\u8005\u4fdd\u6301\u548csharding-jdbc\u76f8\u540c\u7684druid\u7248\u672c\u3002\n\u7531\u4e8e\u5176\u4ed6\u529f\u80fd\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u76ee\u524d\u65e0oracle\u652f\u6301\u7684\u8ba1\u5212\u3002\n. \u6709\u51e0\u4e2a\u7591\u95ee\u60f3\u5f04\u6e05\u695a\uff1a\n1. setCatalog\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u54ea\u91cc\u4f1a\u7528\u5230\n2. \u5373\u4f7f\u8fd9\u91ccsetCatalog\uff0c\u800csharding-jdbc\u5c06getCatalog\u65b9\u6cd5\u629b\u5f02\u5e38\uff0csharding-jdbc\u7684\u5b9e\u73b0\u662f\u5426\u4e5f\u8981\u4e00\u8d77\u6539\n3. setSchema\u5982\u4f55\u8003\u8651\n. \u660e\u767d\u4e86\u3002\u4e0d\u8fc7\u9700\u8981\u7efc\u5408\u8003\u8651\u4e0b\uff0c\u53ea\u662fset\u4e86Catalog\uff0csharding-jdbc\u662f\u4e0d\u80fd\u8fd0\u884c\u7684\u3002sharding-jdbc\u672a\u5b9e\u73b0\u8fd9\u4e2aapi\uff0c\u800c\u76f8\u5173\u53c2\u8003\u7684tddl\u4e5f\u672a\u5b9e\u73b0\u3002\u8fd9\u91cc\u6211\u4eec\u4e5f\u8fd8\u6ca1\u8003\u8651\u6e05\u695a\u600e\u4e48\u7ef4\u62a4\u591acatalog\uff0c\u6bd5\u7adfsharding-jdbc\u4e2d\u7ef4\u62a4\u7684\u4e0d\u662f\u5355conn\uff0c\u800c\u662f\u4e00\u4e2aconn\u96c6\u5408\u3002\n\u5982\u679c\u8003\u8651\u5b8c\u5584\u8fd9\u91cc\u7684\u529f\u80fd\uff0c\u5efa\u8bae\u5c06sharding-jdbc\u5b9e\u73b0\u7684jdbc\u89c4\u8303\u4e00\u8d77\u8003\u8651\n. \u5df2\u7ecf\u5f00\u6e90\u3002\u57281.1.0 snapshot\u3002\u8bf7\u4e0d\u8981\u5728issue\u4e2d\u63d0\u6b64\u7c7b\u95ee\u9898\uff0c\u8c22\u8c22\u5408\u4f5c\u3002\n. \u8bf7\u66f4\u65b0\u81f3wiki\u9875\u9762\u3002\nhttps://github.com/dangdangdotcom/sharding-jdbc/wiki\n. \u5982\u6709\u95ee\u9898\u8bf7\u5728qq\u7fa4\u63d0\u95ee\uff0cissue\u4e3b\u8981\u7528\u4e8e\u63d0bug\u6216\u529f\u80fd\u63d0\u5347\u3002\u8c22\u8c22\n. \u5982\u6709\u95ee\u9898\u8bf7\u5728qq\u7fa4\u63d0\u95ee\uff0cissue\u4e3b\u8981\u7528\u4e8e\u63d0bug\u6216\u529f\u80fd\u63d0\u5347\u3002\u8c22\u8c22\n. \u652f\u6301\u3002\n\u8bf7\u4e0d\u8981\u5728issue\u4e2d\u63d0\u95ee\uff0c\u6587\u6863\u548cexample\u90fd\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u8c22\u8c22\u5408\u4f5c\n. \u8ba8\u8bba\u95ee\u9898\u8bf7\u4f7f\u7528qq\u7fa4\u6216wiki\uff0c\u8bf7\u5c3d\u91cf\u4fdd\u6301issue\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u5c3d\u91cf\u53ef\u4ee5\u901a\u8fc7issue\u5c55\u73b0\u9879\u76ee\u53d1\u5c55\u7684\u8fdb\u5ea6\u5386\u7a0b\u3002\n. \u4f7f\u7528bindingTable\u4ee3\u66ff\u5173\u8054\u5173\u7cfb\u89e3\u6790\uff0c\u4f46\u52a8\u6001\u8868\u4e0d\u80fd\u4f7f\u7528bindingTable\uff0c\u6240\u4ee5\u9700\u8981\u5728SQL\u4e2d\u628a\u6bcf\u4e2a\u8868\u7684sharding value\u90fd\u5199\u8fdb\u53bb\u3002\u5982\uff1a\nSELECT i.order_id, i.order_item_id  FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id = 1 AND o.order_id = 10000\n\u6539\u4e3a\nSELECT i.order_id, i.order_item_id  FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id = 1 AND o.order_id = 10000 AND i.order_id = 10000\n. \u8ba8\u8bba\u95ee\u9898\u8bf7\u4f7f\u7528qq\u7fa4\u6216wiki\uff0c\u8bf7\u5c3d\u91cf\u4fdd\u6301issue\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u5c3d\u91cf\u53ef\u4ee5\u901a\u8fc7issue\u5c55\u73b0\u9879\u76ee\u53d1\u5c55\u7684\u8fdb\u5ea6\u5386\u7a0b\u3002\n. \u8ba8\u8bba\u95ee\u9898\u8bf7\u4f7f\u7528qq\u7fa4\u6216wiki\uff0c\u8bf7\u5c3d\u91cf\u4fdd\u6301issue\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u5c3d\u91cf\u53ef\u4ee5\u901a\u8fc7issue\u5c55\u73b0\u9879\u76ee\u53d1\u5c55\u7684\u8fdb\u5ea6\u5386\u7a0b\u3002\n. For English only, other languages will not accept.\nI just lock this issue. If you want, you can submit a new issue with English. \u4ee5\u540e\u4f1a\u6709\u5143\u6570\u636e\u7ba1\u7406\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4f1a\u653e\u5165\u6ce8\u518c\u4e2d\u5fc3\u3002\n\u4f7f\u7528\u63a5\u53e3\u7684\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u5b9a\u975e\u5e38\u597d\u7528\u3002\n\u53ef\u4ee5\u591a\u8ba8\u8bba\u4e0b\n. \u76ee\u524d\u5df2\u6709inline\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7b80\u5316\u914d\u7f6e\u3002\u53ea\u662f\u5b57\u7b26\u4e32\u914d\u7f6e\u518d\u5f00\u653e\u81ea\u5b9a\u4e49\u63a5\u53e3\u96be\u514d\u8fc7\u4e8e\u7e41\u7410\u3002\u76ee\u524d\u5148\u4e0d\u8003\u8651\u3002\n. duplicate with #80 \n. \u4f1a\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002\u5df2\u4fee\u6539\u3002\n\u4f46\u6211\u4eec\u4e5f\u5efa\u8bae\u4e0d\u8981\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528MemoryTransactionLogStorage\uff0cMemoryTransactionLogStorage\u4ec5\u5e94\u4f5c\u4e3a\u672c\u5730demo\u4f7f\u7528\u3002\n. \u8fd9\u4e2a\u7ecf\u8fc7\u6211\u4eec\u6d4b\u8bd5\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u4e14\u5df2\u7ecf\u53d1\u5e03\u5f88\u4e45\u4e86\uff0c\u8bf7\u770b\u4e00\u4e0b\u81ea\u5df1\u7684namespace\u914d\u7f6e\u3002\u8c22\u8c22\n. duplicated with #86\u3002\nxsd\u90fd\u5728jar\u5305\u4e2d\uff0c\u5e76\u65e0\u53d1\u5e03\u81f3\u7f51\u4e0a\uff0c\u81ea\u884c\u914d\u7f6e\u547d\u540d\u7a7a\u95f4\u5373\u53ef\n. fixed at 1.5.3. \u6211\u4eec\u8fd9\u91cc\u4e0d\u8ba8\u8bbamycat\n. \u57281.3.0\u7248\u672c\u5df2\u5bf9\u7ed3\u679c\u5f52\u5e76\u6a21\u5757\u505a\u51fa\u91cd\u5927\u8c03\u6574\uff0c\u8bf7\u4f7f\u75281.3.0\u5c1d\u8bd5\uff0c\u5982\u8fd8\u6709\u95ee\u9898\uff0c\u8bf7\u53cd\u9988\uff0c\u591a\u8c22\n. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\u3002\u5982\u6709\u95ee\u9898\uff0c\u8bf7\u8ddf\u8fdb\uff0c\u5982\u65e0\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u4e8e\u4e09\u5929\u540e\u4ee5\u4e0d\u80fd\u91cd\u73b0\u4e3a\u7531\u5173\u95ed\u6b64bug\n. \u4e0d\u80fd\u91cd\u73b0\n. \u6211\u4eec\u4e5f\u6ca1\u6709\u6d4b\u8bd5\u8fc7\u5168\u90e8\u7684\u7248\u672c\u3002\u8bf7\u76f4\u63a5\u53c2\u7167pom\u5bf9\u5e94\u7684\u7248\u672c\u4f7f\u7528\u3002\n. \u8bf7\u95ee\u4f7f\u7528\u7684\u54ea\u4e2a\u7248\u672c\n. \u8bfb\u5199\u5206\u79bb\u5e76\u4e0d\u63d0\u4f9b\u4e3b\u5e93\u548c\u4ece\u5e93\u7684\u6570\u636e\u540c\u6b65\u3002\nexample\u7684\u4f8b\u5b50\u662f\u5411\u4e3b\u5e93\u63d2\u5165\uff0c\u7136\u540e\u4ece\u4ece\u5e93\u8bfb\u53d6\u65f6\u786e\u5b9e\u6ca1\u6570\u636e\uff0c\u56e0\u4e3a\u4e3b\u4ece\u540c\u6b65\u662f\u6570\u636e\u5e93\u7aef\u7684\u914d\u7f6e\n. \u6b64\u9700\u6c42\u8fdd\u53cd\u6211\u4eec\u5bf9sharding-jdbc\u7684\u8bbe\u8ba1\u7406\u5ff5\u3002\u76ee\u524d\u5148\u4e0d\u4f1a\u8003\u8651\u3002\n. \u80fd\u4e0d\u80fd\u518d\u8bf4\u7684\u8be6\u7ec6\u4e9b\uff0c\u6211\u6ca1\u5b8c\u5168\u7406\u89e3\u3002\n\u5982\u679c\u662f\u652f\u6301\u5efa\u8868\u8bed\u53e5\uff0c\u662f\u975e\u5e38\u5927\u7684\u65b0\u529f\u80fd\u5f00\u53d1\uff0c\u53ef\u4ee5\u5355\u72ec\u63d0issue\uff0c\u6700\u597d\u4e0d\u8981\u6df7\u5728\u4e00\u8d77\u8ba8\u8bba\u3002\nactualTables\u5c31\u662f\u771f\u5b9e\u8868\u540d\uff0c\u8bf7\u95ee\u81ea\u5b9a\u4e49\u89c4\u5219\u662f\u4ec0\u4e48\u610f\u601d\uff1f\n. duplicate with #62\n. \u4e0espring boot\u6574\u5408\u8bf7\u81ea\u884c\u5904\u7406\u3002\nsharding-jdbc\u5173\u6ce8\u70b9\u5728\u4e8ejdbc\uff0c\u53ef\u4e0e\u4efb\u4f55orm\u6574\u5408\u3002\n\u7531\u4e8e\u65f6\u95f4\u5173\u7cfb\u65e0\u6cd5\u7a77\u4e3e\u6240\u6709orm\u7684\u4f8b\u5b50\uff0c\u8bf7\u8c05\u89e3\u3002\n. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0cissue\u5173\u95ed\n. fixed at 2.0.0.m1. spring\u547d\u540d\u7a7a\u95f4\u7684xsd\u90fd\u5728jar\u5305\u4e2d\uff0c\u5c5e\u4e8espring\u8303\u7574\uff0c\u8bf7\u81ea\u884cgoogle\u4f7f\u7528\u65b9\u6cd5\u3002\n. duplicate with #86 \n. groovy\u4f7f\u7528\u65b9\u6cd5\u95ee\u9898\u4e0d\u5728sharding-jdbc\u7ba1\u63a7\u7684\u8303\u56f4\u3002\n. 1. \u8bf7\u95eeformat\u5728\u4f55\u79cd\u573a\u666f\u4f1a\u7528\u5230\n2. \u4e3a\u4ec0\u4e48\u67092\u4e2aformat\u65b9\u6cd5\n3. \u5982\u679c\u786e\u8ba4\u9700\u8981format\u65b9\u6cd5\uff0c\u8bf7\u4e00\u5e76\u66f4\u65b0\u6587\u6863\n. \u591a\u8c22\u63d0\u4ea4\u4ee3\u7801\u3002\n\u4e0d\u8fc7\u6211\u4eec\u76ee\u524d\u4e0d\u4f1a\u8003\u8651\u5347\u7ea7durid\u7248\u672c\u3002\u4e00\u65e6\u5347\u7ea7\uff0c\u4e4b\u524d\u7684druid\u53c8\u4e0d\u80fd\u7528\u4e86\uff0c\u4e4b\u524d\u4f7f\u7528\u7684\u7528\u6237\u4f1a\u53d7\u6781\u5927\u5f71\u54cd\u3002\u5982\u4f55\u505a\u90fd\u662f\u8d39\u529b\u4e0d\u8ba8\u597d\u3002\u6240\u4ee5\u4e0d\u505a\u6539\u52a8\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u8bf7\u89c1\u8c05\u3002\n. \u8bf7\u63d0\u4f9b\u914d\u7f6e\uff0c\u4ee3\u7801\u4ee5\u53catrace log\n. \u7ed1\u5b9a\u8868\u5206\u7247\u503c\u4ee5\u53ca\u5206\u7247\u7b56\u7565\u5fc5\u987b\u5b8c\u5168\u4e00\u81f4\uff0c\u56e0\u6b64\u65e0\u9700\u4f20\u9012\uff0c\u76f4\u63a5\u63a8\u5bfc\u5373\u53ef\u3002. \u8fd9\u6709\u4ec0\u4e48\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u4e48\n. \u6682\u65f6\u65e0\u5bf9oracle\u652f\u6301\u7684\u8ba1\u5212\n. \u63d0issue\u524d\u8bf7\u5148\u9605\u8bfb\u6587\u6863\n. \u8bf7\u4e0d\u8981\u5728\u5206\u7247\u7684\u6570\u636e\u5e93\u4e2d\u4f7f\u7528\u81ea\u589e\u4e3b\u952e\n. \u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863\uff0cinline\u8868\u8fbe\u5f0f\u90e8\u5206\n. \u8bbe\u8ba1\u95ee\u9898\uff0c\u76ee\u524d\u6682\u65f6\u4e0d\u8003\u8651\n. \u4f7f\u7528default-datasource\uff0c\u76f8\u5173\u8d44\u6599\u53ef\u67e5\u770b\u6587\u6863\n. duplicate with #215 . \u5df2\u53ef\u4ee5\u4f7f\u7528getGeneratedKeys\u7684\u6807\u51c6\u505a\u6cd5\u4ee3\u66ffLAST_INSERT_ID()\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528LAST_INSERT_ID()\u8fd9\u6837\u7684\u975e\u6807\u51c6\u5316SQL. \u4f7f\u7528snowflake\u7b97\u6cd5\uff0c\u76f8\u5173\u8d44\u6599\u53ef\u76f4\u63a5\u67e5\u8be2snowflake\u5373\u53ef\u3002. \u53ea\u7528\u8bfb\u5199\u5206\u79bb\u7684\u8bdd\uff0cmysql\u7684jdbc\u9a71\u52a8com.mysql.jdbc.ReplicationDriver\u5c31\u652f\u6301\n. \u770b\u8bb0\u5f55\u662f\u60a8\u81ea\u5df1\u5173\u7684\n. \u9ed8\u8ba4\u91c7\u7528snowflake\uff0c\u6682\u65f6\u4e0d\u6253\u7b97\u4fee\u6539\u5176\u7b97\u6cd5. duplicate with #196 . \u5df2\u4e8e2.x\u91cd\u65b0\u8bbe\u8ba1. \u5df2\u5b8c\u6210\u5bf9\u5176\u4ed6\u6570\u636e\u5e93\u7684\u57fa\u672c\u652f\u6301\u3002. \u76ee\u524d\u6682\u65f6\u4e0d\u8003\u8651\u592a\u590d\u6742\u7684\u3001\u9762\u5411OLAP\u7684SQL. fixed at 1.5.3. \u7531\u4e8e\u8be5issue\u534a\u5e74\u65e0\u53cd\u9988\uff0c\u4e5f\u672a\u6536\u5230pr\uff0c\u56e0\u6b64\u5148\u5173\u95ed\u4e86\u3002. \u7cbe\u529b\u6709\u9650\uff0c\u6682\u65f6\u6ca1\u8ba1\u5212\u652f\u6301. \u611f\u8c22\u60a8\u63d0\u4ea4\u4ee3\u7801\u3002\u8bf7\u5c06\u4ee3\u7801\u63d0\u5230parser\u5206\u652f\u3002\u6211\u4eec\u7684master\u5206\u652f\u4ec5\u7528\u4e8e\u5408\u5e76\u5176\u4ed6branch\u7684\u4ee3\u7801\u3002. \u6b64\u5904\u5e94\u8be5\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u518d\u591a\u7684\u7ebf\u7a0b\uff0c\u8fd9\u91cc\u7684AtomicInteger\u4e5f\u53ea\u4f1a\u589e\u52a0\u5230slaveDataSources.size()\u800c\u5df2\uff0c\u4e0d\u4f1a\u518d\u589e\u52a0\u4e86\uff0c\u518d\u6b21\u589e\u52a0\u4f1a\u76f4\u63a5\u6e05\u96f6\u3002\n\u800c\u4e14\u4e0d\u53ef\u80fd\u51fa\u73b0slaveDataSources.size()\u5927\u4e8eInteger\u6700\u5927\u503c\u7684\u53ef\u80fd\uff0c\u56e0\u6b64\u8fd9\u4e2apr\u6211\u5c31\u4e0dmerge\u4e86\uff0c\u5148\u5173\u95ed\u4e86\u3002\n\u611f\u8c22\u60a8\u63d0\u4f9b\u4ee3\u7801\uff0c\u4e0b\u6b21\u6709\u5408\u9002\u7684\u4ee3\u7801\u6b22\u8fce\u518d\u6b21\u63d0\u4ea4pr\u3002. \u7cbe\u529b\u6709\u9650\uff0c\u6682\u65f6\u6ca1\u8ba1\u5212\u652f\u6301. \u5c06spring\u7684placeholder\u6539\u6210\u522b\u7684\u5c31\u53ef\u4ee5\uff0c\u6216\u8005ignore\u627e\u4e0d\u5230\u7684key\u4e5f\u884c. \u5c71\u4e1c\u4f70\u660c\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8 http://www.sdbaichang.com. \u5317\u4eac\u5bb6\u89c6\u5929\u4e0b\u79d1\u6280\u6709\u9650\u516c\u53f8 http://www.hiveview.com/. \u5df2\u4fee\u6b63\uff0c\u591a\u8c22\u6307\u51fa. \u8f6c\u8f6c\u516c\u53f8 http://www.zhuanzhuan.com. \u552f\u54c1\u4f1a http://www.vip.com. \u51e4\u51f0\u6c7d\u8f66 http://auto.ifeng.com/. \u641c\u72d0\u8d44\u8baf http://ss.sohu.com/. \u8d5b\u7279\u65afCertusNet http://www.certusnet.com.cn/. @xunzhaotianhe \u5df2\u4fee\u6b63. @pinebud @fy401 Welcome our 2 new friends.  Your company is now in our user list.. \u5982\u679c\u662f\u914d\u7f6e\u9519\u8bef\u5bfc\u81f4\u7684\u8bdd\uff0cissue\u6211\u5148\u5173\u4e86\uff0c\u5982\u8fd8\u6709\u95ee\u9898\u8bf7\u518d\u5f00\u542f\u548c\u8ba8\u8bba. \u6587\u6863\u5df2\u660e\u786e\u8bf4\u660e\u4e0d\u652f\u6301\u3002\u627f\u8bfa\u8303\u56f4\u4e4b\u5916\u7684\u4e1c\u897f\u9650\u4e8e\u7cbe\u529b\u6682\u65f6\u4e0d\u4f1a\u505a\u3002. \u5373\u4f7f\u662f\u52a0\u8f7d\u4e86\u4e24\u6b21\uff0c\u4e5f\u4e0d\u4f1aoom\u3002\u8bf7\u95eeoom\u662f\u5982\u4f55\u5b9a\u4f4d\u7684\uff1f @beibeii . \u597d\u50cf\u662f\u4f60\u81ea\u5b9a\u4e49java config\u7684\u95ee\u9898\uff1f\u56e0\u4e3a\u8fd9\u91cc\u5e76\u672a\u7528\u5230spring namespace\uff0c\u56e0\u6b64\u8fd9\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u573a\u666f\u3002\n\u5982\u679c\u4ecd\u7136\u6709\u95ee\u9898\uff0c\u6b22\u8fce\u65b0\u63d0\u4ea4\u4e00\u4e2aissue\u3002 @drtrang . fixed at 1.5.3. 1.5.0.M1\u5e94\u8be5\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u5148\u5173\u95ed\u4e86\uff0c\u5982\u679c\u4ecd\u6709\u95ee\u9898\u6b22\u8fce\u53cd\u9988. fixed at 1.5.0.M2. \u80fd\u5426\u5c06\u4ee3\u7801\u4ee5\u53ca\u62a5\u9519\u4fe1\u606f\u53d1\u5168\u4e86\uff0c\u8fd9\u6837\u5f88\u96be\u5b9a\u4f4d. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\u4e14\u65e0\u6cd5\u91cd\u73b0\u3002\n\u4e0b\u6b21\u7684issue\u8bf7\u63d0\u4f9b\u8db3\u591f\u7684\u4e0a\u4e0b\u6587\u3002\n\u5148\u5173\u95ed\u4e86\u3002. \u8fd9\u91cc\u91c7\u7528\u7684\u662fsnowflake\u7b97\u6cd5\u3002\u6211\u4eec\u6682\u65f6\u4e0d\u6253\u7b97\u5bf9\u5176\u7b97\u6cd5\u672c\u8eab\u8fdb\u884c\u6539\u5199\u3002. \u4e0d\u652f\u6301\u5b50\u67e5\u8be2. \u95ee\u9898\u5df2\u89e3\u51b3\uff0cissue\u5148\u5173\u4e86\uff0c\u6709\u9700\u8981\u8bf7\u518d\u5f00. sjdbc\u6709\u914d\u7f6e\u53ef\u4ee5\u914d\u7f6e\u6267\u884c\u8fde\u63a5\u6c60\u7684size\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\u8fd9\u4e2a\u503c. duplicate with #239 . fixed at 1.5.0.M2. \u76ee\u524d\u4e0d\u652f\u6301\u4e00\u6b21\u6267\u884c\u591a\u6761SQL\uff0c\u672a\u6765\u7248\u672c\u4e5f\u8bb8\u4f1a\u589e\u52a0\u6b64\u529f\u80fd\u3002\u5148\u5173\u95ed\u4e86\uff0c\u7b49\u6709\u8ba1\u5212\u65f6\u518d\u8ba8\u8bba. \u8bfb\u5199\u5206\u79bb+\u4e8b\u52a1\u8fd9\u91cc\u6211\u4eec\u786e\u5b9e\u6ca1\u6709\u4ed4\u7ec6\u8003\u8651\u8fc7\uff0c\u672a\u6765\u9700\u8981\u597d\u597d\u68b3\u7406\u4e00\u4e0b\u3002\n\u4e0d\u8fc7\u8bfb\u5199\u5206\u79bb\u4e2d\uff0c\u53c8\u8bfb\u53c8\u5199\uff0c\u8fd8\u8981\u5728\u540c\u4e00\u4e8b\u52a1\u4e2d\u4f3c\u4e4e\u4e0d\u53ef\u80fd\uff0c\u9700\u8981\u5f00\u542fXA\uff1f\u8fd9\u6837\u6027\u80fd\u53c8\u592a\u53d7\u9650\u5236\uff0c\u56e0\u6b64\u9700\u8981\u8ba8\u8bba\u4e0b\u5982\u4f55\u5b9e\u73b0\u6bd4\u8f83\u597d\uff0c\u8fd8\u662f\u8bfb\u5199\u5206\u79bb\u5c31\u4e0d\u5e94\u8be5\u652f\u6301\u4e8b\u52a1\uff1f. \u8bfb\u5199\u5206\u79bb\u4e00\u5b9a\u662f\u5728\u4e24\u4e2a\u5e93\u3002\u5982\u679c\u652f\u6301\u4e8b\u52a1\u52bf\u5fc5\u8981\u5f00\u542fXA\u3002\u8fd9\u6837\u7684\u6027\u80fd\u8fd8\u4e0d\u5982\u8bfb\u5199\u4e0d\u5206\u79bb\uff0c\u5f97\u4e0d\u507f\u5931\u3002. \u76ee\u524dsharding-jdbc\u7684\u5b9a\u4f4d\u662f\u67d4\u6027\u4e8b\u52a1\uff0c\u56e0\u6b64\u8bfb\u5199\u5206\u79bb\u7684\u60c5\u51b5\uff0c\u5f00\u542f\u5728\u540c\u4e00\u4e8b\u52a1\u4e2d\u4e0d\u7b26\u5408sharding-jdbc\u7684\u524d\u63d0\u6761\u4ef6\u3002\u56e0\u6b64\u6b64issue\u5148\u5173\u95ed\u4e86\u3002. \u662f\u4e2a\u597d\u5efa\u8bae\uff0c\u672a\u6765\u53ef\u4ee5\u8003\u8651\u3002\n\u4e0d\u8fc7\u5206\u7247db\u9700\u8981\u5e26sharding-key\u4e5f\u57fa\u672c\u662f\u4e1a\u754c\u5171\u8bc6\uff0c\u56e0\u6b64\u52a0\u4e0asharding-key\u4e5f\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002. merge this issue to #1289 . count\u8fdb\u884c\u8fc7\u7ed3\u679c\u5f52\u5e76\uff0c\u591a\u5c11\u4e2a\u5e93\u90fd\u4f1a\u6c47\u603b\u5230\u4e00\u4e2a\u7ed3\u679c\u96c6\uff0c\u5c31\u50cf\u5bf9\u5355\u5e93\u64cd\u4f5c\u4e00\u6837\u3002\n\u6211\u4e0d\u77e5\u9053\u662f\u5426\u6b63\u786e\u7684\u7406\u89e3\u4e86\u4f60\u7684\u95ee\u9898\uff1f. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u5148\u5173\u95ed\u4e86\u3002. \u5f53\u5f53\u5185\u90e8sharding-jdbc\u7ecf\u5e38\u4e0e\u57fa\u4e8equartz\u7684elastic-job\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u672a\u53d1\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u3002sharding-jdbc\u4f7f\u7528\u7684\u662f\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\u3002\n\u56e0\u6b64\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u8db3\u4ee5\u5b9a\u4f4d\u95ee\u9898\u3002\u8bf7\u518d\u5206\u6790\u548c\u660e\u6670\u4e00\u4e0b\u95ee\u9898\u7684\u5b9a\u4f4d\uff0c\u6216\u8005\u63d0\u4f9b\u5b8c\u6574\u7684\u53ef\u91cd\u73b0\u4ee3\u7801\u4f9b\u6211\u4eecdebug\u3002\n\u7531\u4e8e\u770b\u4e0a\u53bb\u4e0esharding-jdbc\u5173\u7cfb\u4e0d\u5927\uff0c\u6211\u5148\u5173\u95ed\u4e86\uff0c\u5982\u679c\u6709\u66f4\u65b0\u8bf7\u5728reopen\u5e76\u8ba8\u8bba\u3002\u8c22\u8c22. \u67092\u4e2a\u5efa\u8bae\u53ef\u4ee5\u8bd5\u4e00\u4e0b\uff1a\n1. \u53ef\u4ee5\u75281.5.0.M1\u8bd5\u4e00\u4e0b\n2. \u662f\u5426\u4e1a\u52a1\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u4e86autocommit\uff0c\u5bfc\u81f4\u4e8b\u52a1\u5931\u8d25\u3002\u8fd9\u9700\u8981\u4e86\u89e3\u4e00\u4e0b\u8fd9\u4e2a\u7a0b\u5e8f\u7684dao\u6846\u67b6\u662f\u600e\u4e48\u8bbe\u7f6e\u7684\uff0c\u662f\u5426\u662fspring\u7684transaction\u8bbe\u7f6e\u6709\u95ee\u9898\uff1f. \u65e0\u6cd5\u91cd\u73b0\u4e14\u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u5148\u5173\u95ed\u4e86\u3002\u6709\u9700\u8981\u8bf7\u518d\u5f00\u542f\u3002. \u652f\u6301\uff0c\u4f7f\u7528\u4ec0\u4e48\u7c7b\u578b\u505a\u4e3b\u952e\u8fdb\u53d6\u51b3\u4e8edb\u5efa\u8868\u7684schema\uff0csharding-jdbc\u4ec5\u662f\u5206\u7247\u4e2d\u95f4\u4ef6\u3002\n\u53e6\u5916\uff0csjdbc\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u81ea\u589e\u4e3b\u952e\u4ec5\u652f\u6301\u6570\u5b57. sjdbc\u4ece\u672a\u627f\u8bfa\u652f\u6301\u5b50\u67e5\u8be2\uff0c\u5e76\u4e14\u660e\u786e\u7684\u5728\u4e0d\u652f\u6301\u5217\u8868\u4e2d\u58f0\u660e\u4e86\u4e0d\u652f\u6301\u5b50\u67e5\u8be2\u3002\u4e4b\u524d\u76841.4.2\u5bf9\u5b50\u67e5\u8be2\u7684\u652f\u6301\u4ec5\u4ec5\u662f\u5185\u90e8\u9700\u6c42\u7684hack\u3002\u4e3a\u4e86\u529f\u80fd\u7684\u6e05\u6670\u4e0e\u7edf\u4e00\uff0c1.5.0\u4ecd\u7136\u4e0d\u652f\u6301\u5b50\u67e5\u8be2\uff0c\u56e0\u6b64\u8fd9\u90e8\u5206\u4f1a\u4ece1.4.2\u7684\u7248\u672c\u4e2d\u5220\u9664\u3002. \u5728\u672a\u6765\u7684\u7248\u672c\u4f1a\u5168\u9762\u7684\u652f\u6301\u5b50\u67e5\u8be2\uff0c\u4f46\u7531\u4e8e\u7248\u672c\u53d1\u5e03\u65f6\u95f4\u7684\u95ee\u9898\uff0c\u6b64\u9879\u66f4\u65b0\u4e0d\u4f1a\u57281.5.0\u53d1\u5e03. \u5206\u7247\u7b97\u6cd5\u53ea\u662f\u7528\u4e8e\u786e\u5b9a\u5982\u4f55\u8def\u7531\u5230\u6b63\u786e\u989d\u6570\u636e\uff0c\u56e0\u6b64\u5982\u679c\u5206\u7247\u952e\u6539\u4e86\u800c\u6570\u636e\u8fd8\u5728\u65e7\u8868\u91cc\uff0c\u5c31\u6c38\u8fdc\u65e0\u6cd5\u88ab\u8def\u7531\u5230\u4e86\u3002\n\u56e0\u4e3asharding-jdbc\u4e0d\u8d1f\u8d23\u6570\u636e\u8fc1\u79fb\uff0c\u56e0\u6b64\u8fd9\u5757\u7ed9\u4e0d\u4e86\u4f60\u4ec0\u4e48\u5efa\u8bae\u4e86\u3002\n. \u4ece\u539f\u7406\u4e0a\u8bf4\uff0csharding jdbc\u548c\u8fde\u63a5\u6c60\u6ca1\u5173\u7cfb\u7684\u3002\u56e0\u6b64\u8fd9\u4e2a\u95ee\u9898\u80fd\u5426\u8bf7\u60a8\u5b9a\u4f4d\u4e0b\u5177\u4f53\u7684\u539f\u56e0\uff0c\u6216\u6362\u5176\u4ed6\u8fde\u63a5\u6c60\u8bd5\u8bd5. \u6279\u91cf\u63d2\u5165\u4e0d\u652f\u6301\uff0c\u8bf7\u53c2\u89c1\uff1ahttp://dangdangdotcom.github.io/sharding-jdbc/01-start/limitations/. springboot\u7ed3\u5408\u4f7f\u7528\u5c31\u662f\u81ea\u5df1\u521b\u5efabean\uff0c\u76f8\u5173\u7684\u4f8b\u5b50\uff0cgoogle\u548cgithub\u4e0a\u6709\u5f88\u591a\uff0c\u53ef\u4ee5\u81ea\u884c\u641c\u7d22. duplicate with #115 . fixed at 1.5.0M2, \u4e4b\u524d\u7684Sharding Column\u548cLogic Table\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u3002. \u5e94\u8be5\u5c31\u662f\u5982\u5f02\u5e38\u6240\u8bf4\uff0cinsert\u8bed\u53e5\u6ca1\u6709\u4f20sharding key\u5427\uff1f\u5982\u679c\u786e\u5b9e\u662f\u8fd9\u6837\u8bf7\u6838\u5b9e\u540e\u5173\u95edissue. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u5148\u5173\u95ed\u4e86\u3002\n\u901a\u8fc7\u63cf\u8ff0\u5206\u6790\u5e94\u8be5\u4e0d\u662fbug\uff0c\u662fsharding-jdbc\u7684\u6b63\u5e38\u884c\u4e3a\u3002\n\u540e\u671f\u6709\u66f4\u65b0\u6b22\u8fcereopen issue\u518d\u8ba8\u8bba\u3002. \u6682\u65f6\u8fd8\u4e0d\u652f\u6301\uff0c\u9884\u8ba11.6.0\u65f6\u505a\u914d\u7f6e\u52a8\u6001\u5316\u65f6\u4f1a\u652f\u6301. \u914d\u7f6e\u52a8\u6001\u5316\u9884\u8ba1\u57281.6.0\u53d1\u5e03. fixed at 2.0.0.M1. fixed at 3.0.0.M1. \u65e0\u6cd5\u91cd\u73b0\uff0c\u5e76\u4e14\u957f\u65f6\u95f4\u65e0\u53cd\u9988\u3002\n\u8bf7\u53c2\u89c1sharding-jdbc-example. \u652f\u6301\uff0c\u5206\u5e93+\u5206\u8868\uff0c\u4ec5\u5206\u5e93\uff0c\u4ec5\u5206\u8868\u5373\u4e3asharding-JDBC\u7684\u57fa\u672c\u529f\u80fd\u3002. example\u4e2d\u6709\u76f8\u5e94\u7684\u793a\u4f8b. \u6682\u65f6\u4e0d\u6253\u7b97\u652f\u6301\u8fd9\u4e2a\u529f\u80fd\u3002\u6211\u4eec\u5e0c\u671bsharding-jdbc\u5728\u4efb\u4f55\u72b6\u6001\u4e0b\u90fd\u4fdd\u6301\u5bf9\u5916\u53cd\u9988\u7684\u4e00\u81f4\u6027\uff0c\u800c\u4e0d\u662f\u5728\u672a\u5206\u5e93\u5206\u8868\u201c\u9690\u85cf\u201d\uff0c\u5728\u914d\u7f6e\u5206\u5e93\u5206\u8868\u65f6\u624d\u66b4\u9732\u4e00\u4e9bSQL\u4e0d\u652f\u6301\u3002\n\u8fd9\u6837\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u4f7f\u7528\u6210\u672c\u8f83\u9ad8\uff0c\u5f88\u53ef\u80fd\u5bfc\u81f4\u7528\u6237\u7814\u7a76\u4ec0\u4e48\u6837\u7684\u914d\u7f6e\u652f\u6301\u4ec0\u4e48SQL\u3002\n\u4e0d\u53c2\u4e0e\u5206\u5e93\u5206\u8868\u7684\u6570\u636e\u5e93\u5efa\u8bae\u4e0d\u4f7f\u7528Sharding-JDBC\uff0c\u800c\u662f\u7528\u6807\u51c6\u7684DataSource\u4e0eSharding-JDBC\u914d\u5408\u4f7f\u7528\u3002\nSharding-JDBC\u7684\u5b9a\u4f4d\u662f\u5206\u5e93\u5206\u8868\u6c34\u5e73\u6269\u5c55\u65b9\u6848\uff0c\u800c\u975e\u5782\u76f4+\u6c34\u5e73\u6269\u5c55\u65b9\u6848\u3002. duplicate with #256 . duplicate with #239 . fixed at 1.5.0.M2. it is a good idea. If you want use SquirrelSQL also use jdbc to access database, so I think you just need develop a new ui for config sharding rule. But sharding-jdbc only support CRUD SQL, cannot support CREATE, DROP etc. . no response any more, close now. If you want discuss it, please reopen it.. \u4e0d\u53ef\u4ee5. fixed at 1.5.0.M3. \u8fd9\u4e2a\u503c\u53ef\u4ee5\u914d\u7f6e\u3002\u53c2\u8003\u6587\u6863\uff1ahttp://dangdangdotcom.github.io/sharding-jdbc/02-guide/configuration/ \u641c\u7d22executor.max.size\u5373\u53ef. Sharding-JDBC\u5b9a\u4f4d\u4e3aJDBC\u9a71\u52a8\u589e\u5f3a\uff0c\u8f7b\u91cf\u7ea7\u662f\u6700\u57fa\u672c\u5b88\u5219\u3002\u56e0\u6b64\u4e0d\u4f1a\u589e\u52a0\u7b2c\u4e09\u65b9\u7f13\u5b58\u6765\u589e\u52a0Sharding-JDBC\u7684\u590d\u6742\u5ea6\u3002\n\u5982\u679c\u7ebf\u7a0b\u961f\u5217\u5df2\u7ecf\u6ea2\u51fa\uff0c\u8bc1\u660e\u8be5\u670d\u52a1\u5668\u5df2\u7ecf\u8d85\u8fc7\u53ef\u627f\u53d7\u7684\u6781\u503c\uff0c\u5982\u679cSharding-JDBC\u4e0d\u7528\u7ebf\u7a0b\u6c60\u4fdd\u62a4\u6027\u62d2\u7edd\u8bf7\u6c42\uff0c\u5219\u5e94\u7528\u5373\u4f1a\u88ab\u51b2\u57ae\u3002\u4efb\u4f55\u4e00\u4e2a\u6210\u719f\u7684\u6846\u67b6\u90fd\u662f\u5982\u6b64\u505a\u6cd5\uff0c\u5982tomcat\uff0cdubbo\u3002\n\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u670d\u52a1\u5668\u5e94\u8003\u8651\u6269\u5bb9\u3002. \u4e0d\u652f\u6301\u5217\u8868\u4e2d\u5df2\u660e\u786e\u8bf4\u660e\u4e0d\u652f\u6301or\uff0c\u4e0d\u80fd\u7528in\u4ee3\u66ff\u7684or\u5728\u5206\u5e93\u5206\u8868\u7684\u67e5\u8be2\u662f\u6027\u80fd\u6740\u624b\uff0c\u5e94\u907f\u514d\u4f7f\u7528\u3002. Shariding-JDBC\u529b\u56fe\u4f7f\u7528\u7edf\u4e00\u7684\u884c\u4e3a\u53cd\u9988\u7528\u6237\uff0c\u800c\u4e0d\u662f\u6ee1\u8db3\u4e86xxx\u6761\u4ef6\uff0cxxx\u7c7b\u578b\u7684SQL\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u53cd\u4e4b\u4e0d\u884c\u3002\u8fd9\u6837\u7684\u6392\u5217\u7ec4\u5408\u592a\u591a\uff0c\u8ba9\u7528\u6237\u96be\u4e8e\u4f7f\u7528\u548c\u638c\u63e1\u3002\u8fd9\u6837\u7528\u6237\u7684\u5fc3\u601d\u4f1a\u653e\u5728\u5982\u4f55\u914d\u7f6e\u624d\u80fd\u652f\u6301\u4f55\u79cdSQL\u3002\n\u56e0\u6b64\u7edf\u4e00\u7684\u884c\u4e3a\u662fSharding-JDBC\u7684\u8bbe\u8ba1\u51c6\u5219\u3002\n\u5982\u679c\u60f3\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u4e0d\u5206\u5e93\u5206\u8868\u7684\u6570\u636e\u6e90\uff0c\u53ef\u4ee5\u5c06\u5176\u653e\u5728\u53e6\u4e00\u4e2a\u6570\u636e\u6e90\u4e2d\uff0c\u4e0eSharidng-JDBC\u5206\u522b\u7ba1\u7406\uff0c\u6bd4\u5982\u4f7f\u7528spring\u652f\u6301\u7684\u591a\u6570\u636e\u6e90\u914d\u7f6e\u5373\u662f\u5176\u4e2d\u4e00\u4e2a\u9009\u62e9\u3002. this issue had fixed at #501, it had expired because it created more than one year. So I just lock it. \u591a\u4f59\u7684\u62ec\u53f7\u89e3\u6790\u786e\u5b9e\u633a\u9ebb\u70e6\u7684\uff0c\u76ee\u524d\u7cbe\u529b\u6709\u9650\uff0c\u5148\u4e0d\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\u8bf7\u81ea\u884c\u53bb\u6389\u591a\u4f59\u7684\u62ec\u53f7\u5427. \u8fd9\u6837\u4fee\u6539\u662f\u4e0d\u6b63\u786e\u7684\uff0cOR\u89e3\u6790\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u4e48\u7b80\u5355\u3002\u5e76\u4e0d\u662f\u89e3\u6790\u5230OR\u4e0d\u62a5\u9519\u5373\u53ef\u3002\u800c\u662f\u56e0\u4e3a\u89e3\u6790\u5230OR\u4e4b\u540e\u7684\u540e\u7eed\u903b\u8f91\u53ca\u5176\u590d\u6742\uff0c\u800c\u4e14\u975e\u5e38\u4e0d\u9002\u5408\u5728\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u4e2d\u4f7f\u7528\uff0c\u4f1a\u6781\u5927\u7684\u5f71\u54cd\u6027\u80fd\u3002OR\u662f\u9700\u8981\u5c06OR\u548cAND\u7684\u7ec4\u5408\u62c6\u89e3\u6210\u5168AND\uff0c\u624d\u53ef\u4ee5\u771f\u6b63\u7684\u6267\u884cSQL\u3002\u6211\u4e3e\u4f8b\u8bf4\u660e\uff1a\nWHERE \u00a0\uff08a=\uff1f OR b=\uff1f\uff09 AND c=\uff1f\n\u5fc5\u987b\u62c6\u89e3\u4e3a\nWHERE \u00a0a=\uff1f AND c=\uff1f\u548cWHERE \u00a0b=\uff1f AND c=\uff1f\u4e24\u6761\u8bed\u53e5\u624d\u80fd\u6267\u884c\n\u6211\u518d\u4e3e\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a\nWHERE id=1 OR status=\u2018OK\u2019\u8fd9\u6837\u7684SQL\uff0c\u5982\u679cid\u662f\u5206\u7247\u952e\uff0c\u5e94\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\n\u9996\u5148\uff0c\u9700\u8981\u8def\u7531\u5230id=1\u7684\u5e93\u6216\u8868\uff0c\u5355\u8868\u83b7\u53d6\u5373\u53ef\u3002\n\u5176\u6b21\uff0c\u56e0\u4e3a\u6709OR\uff0c\u9700\u8981\u5728\u6240\u6709\u7684\u6570\u636e\u5e93\u548c\u8868\u4e2d\u5168\u8def\u7531\uff0c\u53d6\u51fa\u6240\u6709\u7684status=\u2018OK\u2019\u7684\u6570\u636e\u3002\n\u6700\u540e\uff0c\u5c06\u4e24\u79cd\u6570\u636e\u5f52\u5e76\u3002\n\u56e0\u6b64\uff0cSQL\u5fc5\u987b\u62c6\u4e3a\u4e24\u6761\uff0c\u4e00\u6761\u4e3aWHERE id=1\uff0c\u53e6\u4e00\u6761\u4e3astatus=\u2018OK\u2019\uff0c\u800c\u4e14\u4ed6\u4eec\u7684\u5206\u7247\u8def\u7531\u65b9\u5f0f\u622a\u7136\u4e0d\u540c\u3002\n\u5982\u679c\u8003\u8651\u5230\u5f88\u591aOR\u548cAND\u7684\u7ec4\u5408\u5c31\u66f4\u52a0\u590d\u6742\uff0c\u5fc5\u987b\u7ec4\u6210\u4e00\u4e2a\u591a\u7ef4\u9012\u5f52\u7684\u6811\u7ed3\u6784\u3002\u8fd9\u79cd\u6027\u80fd\u5bf9\u4e8e\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u65e0\u6cd5\u63a5\u53d7\uff0c\u4e5f\u4e0d\u53ef\u63a7\uff0c\u56e0\u6b64Sharding-JDBC\u624d\u9009\u62e9\u4e0d\u5bf9OR\u8fdb\u884c\u652f\u6301\u3002\n\u56e0\u6b64\u8fd9\u4e2apr\u662f\u65e0\u6cd5\u5bf9OR\u8fdb\u884c\u5f7b\u5e95\u7684\u652f\u6301\u7684\uff0c\u6211\u5148\u5173\u95ed\u4e86\u3002\n\u611f\u8c22\u4f60\u63d0\u4f9b\u601d\u8def\u548c\u4ee3\u7801\uff0c\u6b22\u8fce\u7ee7\u7eed\u5bf9OR\u8fdb\u884c\u8c03\u7814\uff0c\u5982\u4f55\u53ef\u4ee5\u63d0\u4f9b\u5b8c\u5584\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6b22\u8fce\u518d\u6b21\u63d0\u4ea4pr\u3002\n. \u4e0d\u652f\u6301\u7279\u6b8a\u8bed\u6cd5. \u662f\u4e0d\u5206\u5e93\u5206\u8868\u7684\u8868\u4e0d\u60f3\u914d\u7f6e\u4e48\uff1f\n\u914d\u7f6edefault-data-source\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898\u4e48. \u8fd9\u90e8\u5206\u4f1a\u57281.6.0\u589e\u5f3a\u30021.6.0\u4e3b\u8981\u662f\u8981\u5bf9\u914d\u7f6e\u8fdb\u884c\u8c03\u6574\u3002\u73b0\u5728\u76841.5.x\u53ca\u5176\u4ee5\u524d\u7248\u672c\u4e0d\u652f\u6301\u4ec5\u8bfb\u5199\u5206\u79bb\u3002\n\u56e0\u6b64\u8fd9\u4e2aissue\u6211\u5148\u5173\u4e86\uff0c\u656c\u8bf7\u671f\u5f851.6.0. \u770b\u62a5\u9519\u4fe1\u606f\u5b8c\u5168\u662fmybatis\u7684\u95ee\u9898\uff1f\n\u8bf7\u63d0\u4f9bsharding-jdbc\u7684info\u65e5\u5fd7\n\u6216\u8005\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684\u6e90\u7801. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u6211\u5173\u95ed\u4e86\u3002\n\u4e0b\u6b21\u518d\u63d0issue\u65f6\u8bf7\u591a\u5173\u6ce8\uff0c\u800c\u4e0d\u662f\u6ca1\u6709\u63cf\u8ff0\u6e05\u695a\u7684\u60c5\u51b5\u4e0b\u5c31\u4e0d\u7ba1\u4e86\uff0c\u8c22\u8c22\u5408\u4f5c\u3002. \u6211\u4eec\u5e76\u672a\u5c06\u5206\u9875\u63d2\u4ef6pageHelper\u5217\u5165\u517c\u5bb9\u5217\u8868\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bf9\u6b64issue\u8fdb\u884c\u652f\u6301\u3002\n\u5982\u679c\u60a8\u60f3\u7ee7\u7eed\u5bf9\u6b64issue\u8ffd\u8e2a\uff0c\u8bf7\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a\n1. Sharding-JDBC\u7248\u672c\u53f7\n2. \u88abpageHelper\u4fee\u6539\u4ee5\u540e\u7684SQL\n3. Sharding-JDBC\u7684info\u6267\u884c\u65e5\u5fd7\n\u6216\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u5168\u90e8\u4ee3\u7801\u4e5f\u53ef. \u7ecf\u6d4b\u8bd5\u8fd9\u5e94\u8be5\u662f1.5.0.M2\u7684bug\uff0c\u5df2\u4e8e1.5.0.M3\u4e2d\u4fee\u590d\u3002. \u8fd9\u4e2a\u662f1.4.x\u7684\u7248\u672c\u4e48\uff1f\n\u7531\u4e8e1.5.0.M2\u5df2\u7ecf\u53d1\u5e03\uff0c\u56e0\u6b64\u4e4b\u524d\u7684\u7248\u672c\u5df2\u4e0d\u5728\u7ef4\u62a4\uff0c\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\u8bd5\u4e00\u4e0b\u5427\u3002\n\u53e6\u5916\uff0c\u8fd9\u91cc\u597d\u50cf\u505a\u5206\u597d\u7684\u5e93*\u5206\u597d\u7684\u8868\u7684\u64cd\u4f5c\u662f\u5bf9\u7684\u3002\u5982\u679c\u6709\u5efa\u8bae\u6b22\u8fce\u63d0\u51fa\uff0c\u5e94\u8be5\u5982\u4f55\u505a\u624d\u80fd\u51cf\u5c11SQL\u7684\u6570\u91cf\uff1f\n20 \u591a\u4e2aid \uff0c\u751f\u6210\u4e86156 \u4e2asql \u8bed\u53e5 \u6211\u9700\u8981\u77e5\u9053\u4f60\u7684\u5206\u7247\u89c4\u5219\u662f\u600e\u4e48\u914d\u7f6e\u7684\u3002\n\u4e0d\u8fc7\u63d0\u5230\u7684SelectSingleTableTest.assertSelectWithIn \u53ef\u80fd\u786e\u5b9e\u6709\u95ee\u9898\uff0c\u6211\u5148\u8c03\u7814\u4e00\u4e0b\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u770b\u770b. \u6211\u4ed4\u7ec6\u770b\u4e86\u4e00\u4e0b\u4ee3\u7801\u3002\u8fd9\u91cc\u786e\u5b9e\u6709\u4f18\u5316\u7684\u7a7a\u95f4\u3002\u4f46\u76ee\u524d\u6765\u770b\uff0c\u9020\u6210\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u5206\u7247\u89c4\u5219\u8bbe\u7f6e\u4e0d\u5408\u7406\u5bfc\u81f4\u3002\n\u7528SelectSingleTableTest.assertSelectWithIn\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e3e\u4f8b\uff0c\u5b83\u7684\u5206\u5e93\u548c\u5206\u8868\u89c4\u5219\u90fd\u662forder_id\uff0c\u662f\u6309\u7167\u5947\u5076\u5206\u7247\u7684\u3002\u4f20\u8fdb\u53bb\u7684\u4e09\u4e2a\u503c\u662f1\uff0c2\uff0c100.\u56e0\u6b64\u65e0\u8bba\u662f\u5206\u5e93\u8fd8\u662f\u5206\u8868\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e24\u4e2a\u8bb0\u5f55\uff08ds_0,ds_1\u548corder_0,order_1\uff09\u3002\u7531\u4e8e\u5206\u5e93\u548c\u5206\u8868\u7b56\u7565\u662f\u5b8c\u5168\u5206\u5f00\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u80fd\u7528\u5206\u5e93*\u5206\u8868\u7684\u7ed3\u679c\u6765\u53d6\u503c\u3002\u9020\u6210\u7684\u540e\u679c\u662f\u591a\u8bbf\u95ee\u4e861\u6b21db\uff0c\u4f46\u6570\u636e\u672c\u8eab\u6ca1\u6709\u9519\u8bef\u3002\n\u5982\u679c\u9700\u8981\u4fee\u6539\uff0c\u5219\u9700\u8981\u5c06\u5206\u5e93\u548c\u5206\u8868\u89c4\u5219\u4e00\u4f53\u5316\uff0c\u6210\u4e3a\u4e00\u4e2a\u5206\u5e93+\u5206\u8868\u7684\u89c4\u5219\uff0c\u8fd9\u6837\u624d\u80fd\u7cbe\u786e\u7684\u8fd4\u56de3\u6761\u6570\u636e\uff0c\u4f46\u4f5c\u4e3a\u4f7f\u7528\u7684\u7528\u6237\u6765\u8bf4\uff0c\u5b9e\u73b0\u5206\u5e93\u5206\u8868\u89c4\u5219\u7684\u96be\u5ea6\u5c31\u5927\u5927\u589e\u52a0\u4e86\uff0c\u5f97\u4e0d\u507f\u5931\u3002\n\u8fd9\u4e2a\u8bdd\u9898\u8bf4\u56de\u6765\uff0c\u5982\u679c\u4f7f\u7528user_id\u5206\u5e93\uff0corder_id\u5206\u8868\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u56e0\u4e3a\u4fee\u6539\u6574\u4f53\u7684\u5206\u5e93\u5206\u8868\u7b56\u7565\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u5982\u4f55\u8bbe\u8ba1\uff0c\u5f71\u54cd\u8303\u56f4\u4ee5\u53ca\u7528\u6237\u4f7f\u7528\u4f53\u9a8c\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u8fd9\u79cd\u6743\u8861\u662f\u589e\u52a0\u4e86\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u6b21\u6570\u6765\u5c4f\u853d\u81ea\u5b9a\u4e49\u5206\u5e93\u5206\u8868\u7b56\u7565\u7684\u590d\u6742\u5ea6\uff08\u5f53\u7136\u4ec5\u7528\u4e8e\u5206\u5e93\u548c\u5206\u8868\u7528\u540c\u4e00\u5206\u7247\u952e\u7684\u60c5\u51b5\uff0c\u4e0d\u540c\u5206\u7247\u952e\u662f\u6ca1\u4e8b\u7684\uff09\u3002\n\u56e0\u6b64\u8fd9\u4e2aissue\u6211\u5148\u5173\u95ed\u4e86\uff0c\u540e\u7eed\u9700\u8981\u63d0\u5347\u5e94\u8be5\u662f\u4e00\u4e2a\u5927\u7248\u672c\u7684\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u5230\u65f6\u5019\u518d\u8ba8\u8bba\u3002\u5f53\u7136\u5982\u6709\u66f4\u597d\u7684\u60f3\u6cd5\uff0c\u6b22\u8fce\u5728\u8fd9\u91cc\u7ee7\u7eed\u8ba8\u8bba\u3002\n\u8c22\u8c22. \u5e76\u4e0d\u662f\u9519\u7684\uff0c\u7ed3\u679c\u6ca1\u6709\u9519\u3002\n\u8fd9\u79cd\u6743\u8861\u65b9\u5f0f\u867d\u7136\u6709\u6027\u80fd\u635f\u8017\uff0c\u4f46\u589e\u52a0\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u5206\u7247\u7b56\u7565\u7684\u53cb\u597d\u6027\u3002\u6709\u5f97\u5fc5\u6709\u5931\uff0c\u6bcf\u79cd\u8bbe\u8ba1\u90fd\u6709\u81ea\u5df1\u7684\u521d\u8877\u3002\n90%\u5e94\u8be5\u90fd\u662f\u6309\u7167\u4e00\u4e2aid \u5206\u5e93\u5206\u8868\uff0c\u8fd9\u79cd\u6982\u7387\u6211\u4e0d\u77e5\u662f\u5982\u4f55\u5f97\u51fa\u7684\u3002\u81f3\u5c11\u6211\u89c1\u5230\u7684\u5206\u5e93+\u5206\u8868\u90fd\u662f\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u3002\u6bd4\u5982\u6309\u7167\u65f6\u95f4\u5206\u5e93\uff0c\u4e3b\u952e\u5206\u8868\u3002\n\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u5957\u5206\u5e93+\u5206\u8868\u5728\u4e00\u8d77\u7684\u5206\u7247\u7b56\u7565\uff0c\u548c\u76ee\u524d\u5206\u5e93\u548c\u5206\u8868\u72ec\u7acb\u7684\u5206\u7247\u7b56\u7565\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u770b\u770b\u54ea\u79cd\u66f4\u5bb9\u6613\u88ab\u7ec8\u7aef\u7528\u6237\u7406\u89e3\uff0c\u54ea\u79cd\u53ef\u4ee5\u66f4\u5bb9\u6613\u7684\u5199\u6210inline\u8868\u8fbe\u5f0f. \u53c8\u8003\u8651\u4e86\u4e00\u4e0b\uff0c\u4ee5SelectSingleTableTest.assertSelectWithIn\u4e3e\u4f8b\uff0c\u5176\u5b9eds0.order_1\u548cds1.order_0\u6839\u636e\u8def\u7531\u89c4\u5219\uff0c\u90fd\u662f\u4e0d\u4f1a\u6709\u6570\u636e\u7684\uff0c\u56e0\u6b64\uff0c\u5e94\u8be5\u5728\u5206\u7247\u7b56\u7565\u65f6\uff0c\u5c31\u4e0d\u914d\u8fd9\u4e24\u4e2a\u8868\u3002\u6b63\u786e\u7684\u914d\u6cd5\u5e94\u8be5\u662f\u4ec5\u914d\u7f6eds0.order_0\u548cds1.order_1\u3002\u8fd9\u6837\u4e24\u6b21\u8bbf\u95ee\u5c31\u591f\u4e86\u3002. \u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u57281.5.0.M2\u4fee\u590d\u4e86\nduplicate with #239 . sharding-jdbc\u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u7b80\u6d01\u6e05\u6670\u3002\n\u4e0d\u60f3\u8ba9\u4f7f\u7528\u8005\u4f7f\u7528\u65f6\u533a\u731c\u6d4b\u4ec0\u4e48\u6761\u4ef6\u4e0b\u652f\u6301\u4ec0\u4e48\u4e1c\u897f\uff0c\u8fd9\u6837\u6392\u5217\u7ec4\u5408\u592a\u591a\uff0c\u592a\u8fc7\u590d\u6742\u3002\n\u8fd9\u4e0d\u7b26\u5408sharding-jdbc\u7684\u8bbe\u8ba1\u521d\u8877\u3002\n\u56e0\u6b64or\u5728\u4efb\u4f55\u6761\u4ef6\u4e0b\u90fd\u4e0d\u652f\u6301\uff0c\u8bf7\u7406\u89e3. \u7cbe\u529b\u6709\u9650\uff0c\u6211\u4eec\u53ea\u7ef4\u62a4\u6700\u65b0\u7248\u672c\u3002\u76ee\u524d1.5.0.M2\u5df2\u7ecf\u53d1\u5e03\uff0c1.4.2\u4e0d\u518d\u7ef4\u62a4\uff0c\u8bf7\u5347\u7ea7\u81f3\u6700\u65b0\u7248\u672c\u518d\u5c1d\u8bd5\u4e00\u4e0b\u3002\n\u53e6\u5916\uff0c\u76ee\u524d\u7684\u65e5\u5fd7\u53ea\u662fjstack\uff0c\u770b\u4e0d\u5230\u83b7\u53d6\u4e0d\u5230\u8fde\u63a5\u7684\u65e5\u5fd7\u3002\u800c\u4e14\u91cd\u73b0\u6761\u4ef6\u4e5f\u4e0d\u591f\u5145\u5206\uff0c\u6211\u4eec\u65e0\u6cd5\u5904\u7406\u3002\u5982\u679c\u60f3\u7ee7\u7eed\u8ffd\u8e2a\u8fd9\u4e2aissue\uff0c\u8bf7\u63d0\u4f9b\u5168\u90e8\u65e5\u5fd7\u4ee5\u53ca\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u3002. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u6211\u5173\u95ed\u4e86\u3002\n\u4e0b\u6b21\u518d\u63d0issue\u65f6\u8bf7\u591a\u5173\u6ce8\uff0c\u800c\u4e0d\u662f\u6ca1\u6709\u63cf\u8ff0\u6e05\u695a\u7684\u60c5\u51b5\u4e0b\u5c31\u4e0d\u7ba1\u4e86\uff0c\u8c22\u8c22\u5408\u4f5c\u3002. fixed at 3.0.0.M1. fixed at 1.5.0.M4. fixed at 1.5.0.M3. HintManager and Connection is not same lifecycle. If want release HintManager, just call HintManager.close(), or use try with resources, put HintManager and Connection in same try block. \u76ee\u524d\u4e0d\u652f\u6301\uff0c\u6240\u6709\u7684sql\u4e2d\u7684\u8868\u90fd\u9700\u8981\u914d\u7f6e\uff0c\u4e0d\u7136\u65e0\u6cd5\u627e\u5230\u6570\u636e\u6e90\u3002\u5982\u679c\u4e0d\u914d\u7f6e\u7684\u8868\u4f1a\u4ece\u9ed8\u8ba4\u6570\u636e\u6e90\u627e\uff0c\u53ef\u4ee5\u914d\u7f6e\u4e0a\u9ed8\u8ba4\u6570\u636e\u6e90. \u662f\u4e0d\u662f\u56e0\u4e3a\u4f60\u7684\u8868\u4e0d\u5728\u9ed8\u8ba4\u6570\u636e\u6e90\u91cc. fixed at 1.5.0.M4. \u7ecf\u5b9e\u9645\u6d4b\u8bd5\u53d1\u73b0\uff0c\nsql\nSELECT 1.321312FE100\nMySQL\u4f1a\u5c06\u5176\u89e3\u6790\u4e3aSELECT 1.321312(\u6570\u5b57) FE100(\u522b\u540d)\u3002\u56e0\u6b64\u73b0\u5728\u7684\u505a\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\u4f46\u8fd9\u91cc\u786e\u5b9e\u6709\u4e00\u4e2abug\uff0clexer\u4f1a\u5c06\u5176\u89e3\u6790\u4e3aSELECT 1.321312F(\u6570\u5b57) E100(\u522b\u540d)\uff0c\u56e0\u4e3a\u7ed3\u5c3e\u7684F\uff0clexer\u4f1a\u8ba4\u4e3a\u662f\u6d6e\u70b9\u6570\u7684\u7ed3\u675f\u7b26\u3002\n\u4f46\u8fd9\u79cd\u60c5\u51b5\u975e\u5e38\u5c11\u89c1\uff0c\u4e5f\u975e\u6807\u51c6\u7528\u6cd5\uff0c\u56e0\u6b64\u5c31\u4e0d\u6539\u4e86\u3002. \u4e0d\u652f\u6301sql\u4e2d\u5305\u542b\u5197\u4f59\u62ec\u53f7\nsql\nSELECT i.* FROM t_order o JOIN t_order_item i ON o.order_id=i.order_id WHERE (o.user_id BETWEEN ? AND ?) AND (o.order_id BETWEEN ? AND ?) order by o.order_id ASC\n\u6539\u4e3a\nsql\nSELECT i.* FROM t_order o JOIN t_order_item i ON o.order_id=i.order_id WHERE o.user_id BETWEEN ? AND ? AND o.order_id BETWEEN ? AND ? order by o.order_id ASC\n\u5373\u53ef. \u76ee\u524d\u5e76\u672a\u6253\u7b97\u652f\u6301last_insert_id(). \u8bf7\u63d0\u4f9b tableStrategy\u8fd9\u4e2aclass\u3002\n\u5efa\u8bae\u5347\u7ea7\u52301.5.0.m3\uff0c\u7136\u540e\u53d1\u9001\u8fc7\u6765sharding-jdbc\u7684info\u6267\u884c\u65e5\u5fd7\uff0c\n\u6216\u8005\u76f4\u63a5\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u3001\u53ef\u8fd0\u884c\u7684demo. \u65e2\u7136\u65b0\u7248\u672c\u5df2\u89e3\u51b3\uff0c\u6b22\u8fce\u4f7f\u7528\u65b0\u7248\u672c. \u80fd\u5426\u5347\u7ea7\u81f31.5.0.M3\u518d\u8bd5\u4e00\u4e0b\uff0c\u7cbe\u529b\u6709\u9650\uff0c\u4e4b\u524d\u7684\u7248\u672c\u4e0d\u5728\u7ef4\u62a4\n\u6216\u8005\u63d0\u4f9b\u53ef\u91cd\u73b0\u3001\u53ef\u8fd0\u884c\u7684\u4ee3\u7801. \u5e94\u8be5\u662f\u5427\uff0c\u65e2\u7136\u4f60\u6d4b\u51fa\u6765\u4e86\u3002\n\u4e0d\u8fc7\u65e2\u7136\u65b0\u7248\u672c\u5df2\u89e3\u51b3\uff0c\u6b22\u8fce\u4f7f\u7528\u65b0\u7248\u672c. \u6b22\u8fce\u76f4\u63a5pr\u3002\u53e6\u5916\u8bf7\u6ce8\u610f\u4e0b\uff0cpr\u8bf7\u63d0\u5728\u5f53\u524d\u5f00\u53d1\u7684\u5206\u652f\uff0c\u800c\u975emaster\u3002\n\u770b\u60a8\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u57fa\u4e8e\u65e7\u7248\u672c\u7684\uff0c\u8bf7\u5c06pr\u63d0\u5728\u6700\u8fd1\u7248\u672c\u5427\u3002\n\u975e\u5e38\u611f\u8c22\u3002. merged at 1.5.0.m4. \u8bf7\u60a8\u6839\u636e\u9879\u76ee\u6700\u65b0\u7684\u7ed3\u6784\u63d0\u4ea4pr\u5427\u3002\n\u76ee\u524d\u81ea\u589e\u4e3b\u952e\u7684\u63d2\u4ef6\u90fd\u5728sharding-jdbc-plugin\u8fd9\u4e2amodule\u4e2d\uff0c\u5305\u540d\u662fcom.dangdang.ddframe.rdb.sharding.plugin.keygen\u3002\nsharding-jdbc-id-generator-parent\u8fd9\u4e2amodule\u518d\u65b0\u7ed3\u6784\u4e2d\u5df2\u7ecf\u5220\u9664\u4e86\u3002\n. \u611f\u8c22\u60a8\u8d21\u732e\u4ee3\u7801. 1. \u662f\u7684\u3002\u88absharding-jdbc\u7ba1\u7406\u7684\u6570\u636e\u6e90\u5bf9\u4efb\u4f55\u8868\u90fd\u662f\u4e00\u81f4\u5bf9\u5f85\uff0c\u65e0\u8bba\u662f\u5426\u5206\uff0c\u90fd\u9700\u8981\u914d\u3002\n2. \u8bf7\u9605\u8bfb\u6587\u6863\uff0cBindingTable\u90e8\u5206\u3002. \u90fd\u662f\u5fc5\u987b\u914d\u7684\uff0c1.4\u4e5f\u4e00\u6837\uff0c\u9664\u975e\u7528\u4e86default-datasource\u3002\u4e0d\u8fc71.4\u4e0d\u592a\u4e25\u8c28\uff0c\u53ef\u80fd\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u914d\u4e5f\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u884c\u4e3a\u5374\u4e0d\u4e00\u5b9a\u5bf9\u30021.5\u505a\u4e86\u5b8c\u6574\u6027\u6821\u9a8c\u3002. \u5148\u4e0d\u652f\u6301\u4e86\uff0c\u6bd4\u8f83\u96be\u505a\u3002\u4ee5\u540e\u6709\u673a\u4f1a\u518d\u652f\u6301. \u8bf7\u4f7f\u75281.5.0.M3\u8bd5\u4e00\u4e0b\u5427\u3002\u5e94\u8be5\u5df2\u7ecf\u4fee\u590d\u4e86. \u8bf7\u53c2\u7167example\u5427. \u80fd\u5426\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u6216thread dump\u4fe1\u606f. \u597d\u7684\uff0c\u591a\u8c22\u5efa\u8bae\uff0c\u4e0b\u4e2a\u7248\u672c\u505a. \u8fd9\u4e2a\u65e5\u5fd7\u770b\u8d77\u6765\u5f88\u5947\u602a\u7684\u3002\n[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]\n\u6ca1\u6709\u4efb\u4f55\u538b\u529b\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u62d2\u7edd\u8bf7\u6c42\u5462\uff1f\u76ee\u524d\u7684\u7ebf\u7a0b\u6c60\u4f7f\u7528\u7684LinkedBlockingQueue\u7f13\u51b2\u8bf7\u6c42\uff0c\u4e0d\u4f1a\u5728\u6ca1\u6709\u538b\u529b\u7684\u60c5\u51b5\u4e0b\u62d2\u7edd\u8bf7\u6c42\u3002\n\u8fd9\u4e2a\u4e8b\u60c5\u6211\u60f3\u8fd8\u9700\u8981\u4f60\u63d0\u4f9b\u4e00\u4e0b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\u624d\u597d\u5b9a\u4f4d. \u7ecf\u9a8c\u8bc1\uff0c\u6b64\u5f02\u5e38\u662f\u8fdb\u7a0b\u5173\u95ed\u65f6\u4ecd\u7136\u5728\u63a5\u6536\u8bf7\u6c42\u6240\u81f4\uff0c\u5e76\u975esharding-jdbcd\u6b63\u5e38\u8fd0\u884c\u65f6\u7684\u5f02\u5e38\uff0c\u56e0\u6b64\u5e76\u65e0\u53c2\u8003\u4ef7\u503c\u3002\u5148\u5173\u95ed\u4e86\u3002. \u8fd9\u91cc\u6587\u6863\u5199\u9519\u4e86\uff0c\u5b57\u7b26\u4e32\u9700\u8981\u52a0\u5f15\u53f7\uff0c\u53ea\u6709\u5206\u7247key\u4f5c\u4e3a\u53d8\u91cf\uff0c\u53ef\u4ee5\u4e0d\u7528\u52a0\u5f15\u53f7\u3002\u6211\u66f4\u65b0\u4e0b\u6587\u6863\u3002\u591a\u8c22\u6307\u51fa\u3002. fixed at 1.5.1. fixed at 3.x. duplicated with #501 . fixed at 1.5.1. please give a example for sql. fixed at 1.5.1. \u8bf7\u5c06SQL\u548cinfo\u65e5\u5fd7\u8d34\u51fa\u6765. select for update\u662f\u652f\u6301\u7684\uff0c\u7531\u4e8e\u770b\u4e0d\u5230sql\uff0c\u521d\u6b65\u5224\u65ad\u662fsharding-jdbc\u5bf9sql\u672c\u8eab\u4e0d\u652f\u6301\u6240\u81f4. \u4e0d\u652f\u6301or\uff0c\u8bf7\u5148\u9605\u8bfb\u6587\u6863. \u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528hint\u5f3a\u5236\u4e3b\u5e93\u7684\u65b9\u5f0f\u8fbe\u6210\u3002\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8bfb\u5199\u5206\u79bb\u8fd8\u9700\u8981\u5f00\u542f\u4e8b\u52a1\uff0c\u8fd9\u6837\u7684\u6027\u80fd\u8fd8\u4e0d\u5982\u4e0d\u505a\u8bfb\u5199\u5206\u79bb\u3002. fixed at 1.5.1. fixed at 1.5.1. fixed at 1.5.1. \u8bf7\u81ea\u884c\u9605\u8bfbfaq\u6587\u6863. fixed at 1.5.1. fixed at 1.5.2. \u611f\u8c22\u8d21\u732e\u4ee3\u7801. insert\u540c\u6837\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002example\u4e2d\u6709\u6b63\u5e38\u4f7f\u7528\u7684\u6848\u4f8b\u3002. \u76ee\u524d\u7684pr\u6709\u51b2\u7a81\uff0c\u8bf7\u5148\u89e3\u51b3\u4e00\u4e0b\u3002\n\u53e6\u5916\uff0c\u6211\u4eec\u6240\u6709\u7684pr\u90fd\u5fc5\u987b\u5728\u5f00\u53d1\u5206\u652f\u63d0\u4ea4\uff0c\u4e0a\u6b21\u6b63\u597d\u8d76\u5728\u53d1\u5305\u4e4b\u524d\uff0c\u56e0\u6b64\u7279\u522b\u5408\u5e76\u8fc7\u6765\u7684\u3002\n\u8bf7\u5c06\u51b2\u7a81\u89e3\u51b3\u540e\u5728\u5f00\u53d1\u5206\u652f\u63d0\u4ea4pr\u5427. \u611f\u8c22\u8d21\u732e\u4ee3\u7801. \u6ca1\u6709\u914d\u7f6e\u5206\u5e93\u5206\u8868\u7b56\u7565\u5bfc\u81f4\u7684\u3002\n\u62a5\u9519\u4fe1\u606f\u5df2\u7ecf\u8bf4\u660e\u4e86\uff1aCannot find table rule and default data source with logic table: 't_order_0'. fixed at 1.5.2. fixed at 1.5.2. \u8bf7\u9605\u8bfb\u914d\u7f6e\u624b\u518c. sharding-jdbc\u7684\u914d\u7f6e\u662f\u5e0c\u671b\u5c3d\u91cf\u6e05\u6670\u3002\u5bf9\u4e8e\u4e0d\u914d\u7f6e\u7684\u8868\uff0c\u4e0d\u4f1a\u8fdb\u884c\u81ea\u52a8\u7684\u731c\u6d4b\u6027\u8d28\u7684\u8def\u7531. \u6b64\u529f\u80fd\u5e94\u8be5\u662f\u4ece1.0.0\u7248\u672c\u5f00\u59cb\u5c31\u652f\u6301\u7684\u3002\u4f46\u662f\u6709\u4e24\u4e2a\u6ce8\u610f\u4e8b\u9879\u3002\n1. db_1.t_order \u548c db_0.t_user\u8d70\u7684\u662f\u7b1b\u5361\u5c14\u79ef\uff0c\u6027\u80fd\u8f83\u5dee\n2. sharding-jdbc\u7684\u524d\u63d0\u662f\u6c34\u5e73\u5206\u7247\uff0cdb_0\u548cdb_1\u90fd\u5fc5\u987b\u540c\u65f6\u5b58\u5728t_order\u548ct_user. \u8fd9\u4e2a\u5f02\u5e38\u662f\u6570\u636e\u5e93\u629b\u51fa\u6765\u7684\u5427\u3002Unknown column 'playplayer_id' in 'on clause'\n\u68c0\u67e5\u4e00\u4e0b\u5efa\u8868\u8bed\u53e5\u5427\u3002\n\u597d\u50cf\u62a5\u9519\u7684SQL\u4fe1\u606f\u548c\u4f60\u8d34\u51fa\u6765\u7684SQL\u4e0d\u540c\uff0c\u53ef\u4ee5\u6253\u5f00sql.show\uff0c\u5c06sharding-jdbc\u7684info\u4fe1\u606f\u8d34\u51fa\u6765\u770b\u770b\uff0c\u662f\u4e0d\u662fSQL\u6539\u5199\u65f6\u6709\u9519\u8bef\n. fixed at 1.5.2. \u4e0d\u652f\u6301\u5197\u4f59\u62ec\u53f7\uff0c\u8bf7\u9605\u8bfb\u76f8\u5173\u6587\u6863. fixed at 1.5.2. \u5206\u9875\u5bf9\u4e8esql\u6539\u5199\u662f\u6ca1\u6709\u9519\u7684\u3002\u53ef\u4ee5\u7f51\u4e0a\u641c\u7d22\u76f8\u5173\u8d44\u6599\u3002\nissue\u6211\u5173\u95ed\u4e86\u3002. \u652f\u6301. \u539f\u6765\u662f\u4e0d\u5141\u8bb8insert\u5230\u591a\u8868\u7684\u3002\u4f46\u8003\u8651\u52301.5.x\u4e4b\u540e\u5c06\u8981\u505a\u7684\u5c0f\u8868\u5e7f\u64ad\uff0c\u5b57\u5178\u8868\u7684\u66f4\u65b0\u548c\u63d2\u5165\u5e94\u8be5\u662f\u5141\u8bb8insert\u5230\u591a\u8868\u7684\u3002\n\u56e0\u6b64\u5c06\u8fd9\u91cc\u7684\u9a8c\u8bc1\u53bb\u6389\u4e86\uff0c\u5b8c\u5168\u6839\u636e\u5206\u7247\u7b56\u7565\u786e\u5b9a\u662finsert\u5165\u5355\u8868\u8fd8\u662f\u591a\u8868\u3002. fixed at 1.5.2. \u4e00\u76f4\u53ef\u4ee5\u8bbf\u95ee. \u4e0d\u652f\u6301LAST_INSERT_ID(). fixed at 1.5.3. \u6570\u636e\u5e93\u6cbb\u7406\u65b9\u9762\u5c06\u4f1a\u57281.6.0\u7edf\u4e00\u505a\u3002\u5148\u5173\u95ed\u4e86\uff0c\u73b0\u5728\u6682\u65f6\u4e0d\u4f1a\u505a. fixed at 1.5.3. fixed at 1.5.3. fixed at 1.5.3. dup with #351 \n\u5efa\u8bae\u63d0issue\u4e4b\u524d\u5148\u770b\u4e00\u4e0bissue\u5217\u8868. fixed at 1.5.4. \u8bf7\u5bf9\u81ea\u5df1\u63d0\u4f9b\u7684pr\u8d1f\u8d23\u3002\n\u8bf7\u4e0d\u8981\u968f\u610f\u6d6a\u8d39\u516c\u5171\u8d44\u6e90\uff0c\u8c22\u8c22\u5408\u4f5c\u3002. \u67e5\u51fa\u6765\u7684\u6570\u636e\u6ca1\u9519\u5427\uff1f. \u4fe1\u606f\u4e0d\u8db3\uff0c\u8bf7\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u3002\n\u6216\u8005\u63d0\u4f9b\u5168\u90e8\u7684sql.show\u65e5\u5fd7\u3001ShardingRule\u914d\u7f6e\u3001SQL\u4ee5\u53ca\u8c03\u7528SQL\u7684\u4ee3\u7801\u7247\u6bb5. \u8bf7\u4e00\u6b21\u6027\u5c06\u6240\u9700\u4fe1\u606f\u63d0\u4f9b\u5b8c\u5584\u5427\u3002\u8fd9\u6837\u6c9f\u901a\u6210\u672c\u592a\u9ad8\uff0c\u4e00\u5929\u5c31\u8fd9\u4e48\u8fc7\u53bb\u4e86\u3002. \u8bf7\u53c2\u89c1\u4e4b\u524d\u7684\u4fe1\u606f\uff1a\n\u4fe1\u606f\u4e0d\u8db3\uff0c\u8bf7\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u3002\n\u6216\u8005\u63d0\u4f9b\u5168\u90e8\u7684sql.show\u65e5\u5fd7\u3001ShardingRule\u914d\u7f6e\u3001SQL\u4ee5\u53ca\u8c03\u7528SQL\u7684\u4ee3\u7801\u7247\u6bb5\n\u8bf7\u4e00\u6b21\u6027\u63d0\u4f9b\u6240\u9700\u4fe1\u606f\uff0c\u4e0d\u7136\u5b9e\u5728\u4e0d\u6613\u5b9a\u4f4d. \u60a8\u8fd9\u6837\u7684\u4ee3\u7801\u7247\u6bb5\u5bf9\u4e8e\u6211\u4eec\u5b9a\u4f4dbug\u5e76\u65e0\u5b9e\u8d28\u7528\u9014\u3002\u8bf7\u6309\u7167\u4e4b\u524d\u4ea4\u6d41\u6240\u5199\u3002\u63d0\u4f9b\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\u3002\n\u6700\u597d\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4f9b\u91cd\u73b0\u7684demo\uff0c\u5e76\u5c06\u4ee3\u7801\u653e\u5728guthub\u4e0a\uff0c\u5c06\u8fde\u63a5\u4ea4\u7ed9\u6211\u4eec\u3002\n\u65f6\u95f4\u7cbe\u529b\u6709\u9650\uff0c\u8bf7\u5927\u5bb6\u5404\u53f8\u5176\u804c\u3002\n\u6211\u4eec\u8d1f\u8d23\u4fee\u6539bug\uff0c\u8bf7\u60a8\u8d1f\u8d23\u5c06bug\u4ee5\u6700\u4f4e\u7684\u7406\u89e3\u6210\u672c\u91cd\u73b0\u5728\u6211\u4eec\u9762\u524d\uff0c\u8c22\u8c22\u5408\u4f5c\u3002. \u7531\u4e8e\u60a8\u6ca1\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5e76\u81ea\u884c\u5173\u95ed\u4e86issue\u3002\n\u56e0\u6b64\u8fd9\u4e2aissue\u6211\u7b97\u4e3ainvalid\u4e86. dup #370 . \u4fe1\u606f\u4e0d\u8db3\uff0c\u8bf7\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u3002\n\u6216\u8005\u63d0\u4f9b\u5168\u90e8\u7684sql.show\u65e5\u5fd7\u3001ShardingRule\u914d\u7f6e\u3001SQL\u4ee5\u53ca\u8c03\u7528SQL\u7684\u4ee3\u7801\u7247\u6bb5\n\u5982\u679c\u53ea\u770b\u5b57\u9762\u4e0a\u7684\u610f\u601d\uff0c1.5.3\u662f\u652f\u6301\u975e\u5206\u7247\u5e76\u914d\u7f6edefault-data-source\u67e5\u8be2\u7684\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u63cf\u8ff0\u4e0d\u8db3\u4ee5\u65ad\u5b9aissue\u7684\u5145\u8981\u6761\u4ef6\u3002. \u65e2\u7136\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u57281.5.3\u89e3\u51b3\u4e86\uff0c\u6211\u5c31\u5173\u95ed\u4e86\u3002\ndup with ISSUE #351. \u8bf7\u63d0\u4f9b\u53ef\u4f7f\u7528maven\u6253\u5305\uff0c\u5e76\u76f4\u63a5\u7528main\u65b9\u6cd5\u8fd0\u884c\u7684\u53ef\u91cd\u73b0demo. \u8bf7\u4f7f\u75281.5\u53ca\u5176\u4ee5\u4e0a\u7248\u672c\uff0c\u4e4b\u524d\u7684\u7248\u672c\u5df2\u4e0d\u7ef4\u62a4\u3002. \u8bf7\u53c2\u89c1\uff1ahttp://shardingjdbc.io/docs/01-start/faq/ \u7b2c12\u4e2a\u95ee\u9898. Sharding-JDBC\u53ef\u4ee5\u652f\u6301\u8fd4\u56de\u539f\u751f\u7684\u81ea\u589e\u4e3b\u952e\u3002\u4f46\u539f\u751f\u81ea\u589e\u4e3b\u952e\u6709\u4f7f\u7528\u9650\u5236\uff0c\u5373\u4e0d\u80fd\u5c06\u539f\u751f\u81ea\u589e\u4e3b\u952e\u540c\u65f6\u4f5c\u4e3a\u5206\u7247\u952e\u4f7f\u7528\u3002\n\u7531\u4e8eSharding-JDBC\u5e76\u4e0d\u77e5\u6653\u6570\u636e\u5e93\u7684\u8868\u7ed3\u6784\uff0c\u800c\u539f\u751f\u81ea\u589e\u4e3b\u952e\u662f\u4e0d\u5305\u542b\u5728\u539f\u59cbSQL\u4e2d\u5185\u7684\uff0c\u56e0\u6b64Sharding-JDBC\u65e0\u6cd5\u5c06\u8be5\u5b57\u6bb5\u89e3\u6790\u4e3a\u5206\u7247\u5b57\u6bb5\u3002\u5982\u81ea\u589e\u4e3b\u952e\u975e\u5206\u7247\u952e\uff0c\u5219\u65e0\u9700\u5173\u6ce8\uff0c\u53ef\u6b63\u5e38\u8fd4\u56de\uff1b\u82e5\u81ea\u589e\u4e3b\u952e\u540c\u65f6\u4f5c\u4e3a\u5206\u7247\u952e\u4f7f\u7528\uff0cSharding-JDBC\u65e0\u6cd5\u89e3\u6790\u5176\u5206\u7247\u503c\uff0c\u5bfc\u81f4SQL\u8def\u7531\u81f3\u591a\u5f20\u8868\uff0c\u4ece\u800c\u5f71\u54cd\u5e94\u7528\u7684\u6b63\u786e\u6027\u3002\n\u800c\u539f\u751f\u81ea\u589e\u4e3b\u952e\u8fd4\u56de\u7684\u524d\u63d0\u6761\u4ef6\u662fINSERT SQL\u5fc5\u987b\u6700\u7ec8\u8def\u7531\u81f3\u4e00\u5f20\u8868\uff0c\u56e0\u6b64\uff0c\u9762\u5bf9\u8fd4\u56de\u591a\u8868\u7684INSERT SQL\uff0c\u81ea\u589e\u4e3b\u952e\u5219\u4f1a\u8fd4\u56de\u96f6\u3002\n\u793a\u4f8b\u4e2d\uff0c\u6b63\u662f\u7531\u4e8e\u5206\u7247\u952e\u540c\u65f6\u4e3a\u81ea\u589e\u4e3b\u952e\u5bfc\u81f4\uff0c\u8bf7\u77e5\u6653\u3002. fixed at 1.5.4. sharding-jdbc\u662f\u9700\u8981\u6c34\u5e73\u6269\u5c55\u7684\u3002db1\u91cc\u6709carInfo\uff0cdb2\u91cc\u6ca1\u6709carInfo\uff0c\u5199\u4e00\u6761sql\u67e5\u8be2db1\u548cdb2\uff0c\u5e76\u4e14sql\u4e2d\u5305\u542bcarInfo\uff0c\u8fd9\u79cd\u573a\u666fsjdbc\u4e0d\u652f\u6301\u3002. \u8bf7\u5148\u8bd5\u4e00\u4e0b1.5.x\u662f\u5426\u6709\u95ee\u9898. \u597d\u7684\uff0cspring\u4e8b\u52a1\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u76f4\u758f\u4e8e\u68b3\u7406\uff0c\u4f1a\u5728\u672a\u6765\u68b3\u7406. fixed at 3.0.0.M2. order by  \uff1f\u8fd9\u6837\u7684\u8bed\u53e5\u5728\u672a\u6765\u4f1a\u89e3\u6790\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301. \u76f4\u63a5\u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u4e3a\u4ec0\u4e48\u4f1a\u6709t_order_0\u8fd9\u6837\u7684\u8868\u540d\u79f0\n\u76f4\u63a5\u7528\u8bfb\u5199\u5206\u79bb\u7684\u8bdd\uff0c\u65e0\u9700\u914d\u7f6esharding rule\uff0c\u6211\u4eec\u8fd1\u671f\u4f1a\u63d0\u4f9b\u66f4\u52a0\u6e05\u6670\u7684demo\u3002\n\u6211\u611f\u89c9\u662f\u914d\u7f6e\u7684\u9519\u8bef\uff0c\u5982\u679c\u89c9\u5f97\u6ca1\u95ee\u9898\u53ef\u4ee5\u5173\u95ed\u6b64issue\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u7ee7\u7eed\u8ba8\u8bba. \u4ec5\u8bfb\u5199\u5206\u79bb\u662f\u65e0\u9700\u914d\u7f6esharding rule\u7684\uff0c\u770b\u60a8\u7684\u914d\u7f6e\u4f3c\u4e4e\u4ecd\u7136\u662f\u5206\u5e93\u5206\u8868+\u8bfb\u5199\u5206\u79bb\uff0c\n\u800c\u4e14\u597d\u50cf\u5206\u5e93\u5206\u8868\u5e76\u672a\u914d\u7f6e\u6b63\u786e\uff0c\u6ca1\u6709\u914d\u7f6e\u5206\u7247\u7b56\u7565. fixed at 1.5.4. \u8bf7\u63d0\u4f9b\u4e00\u4e0b\u4e24\u4e2a\u6761\u4ef6\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\n1. \u53ef\u91cd\u73b0\u7684\u80fd\u76f4\u63a5\u8fd0\u884c\u7684\u4ee3\u7801\n2. sql.show\u65e5\u5fd7\u3001\u5206\u7247\u89c4\u5219\u914d\u7f6e\u3001sql\u8bed\u53e5\u6267\u884c\u4ee3\u7801\u7247\u6bb5\n. \u5982\u679c\u4ecd\u65e7\u65e0\u6cd5\u91cd\u73b0\uff0c\u6b64issue\u5c06\u5728\u4e0b\u5468\u5173\u95ed. \u5df2\u7ecf\u5728qq\u7fa4\u4e2d\u6c9f\u901a\u8fc7\uff0c\u786e\u8ba4\u65e0\u6cd5\u91cd\u73b0. \u56e0\u4e3a\u4f60\u7684\u6d4b\u8bd5\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u56e0\u6b64insert\u6570\u636e\u7684\u7edd\u5bf9\u503c\u5f88\u5feb\u3002\n\u5bf9\u4e8e\u8fd9\u6761insert sql\u7684\u89e3\u6790\u4ee5\u53ca\u8def\u7531\u635f\u8017\u57280.6ms\u5de6\u53f3\uff0c\u800cinsert\u7684\u64cd\u4f5c\u4ec5\u97001ms\uff0c\u56e0\u6b64\u770b\u8d77\u6765\u635f\u8017\u7387\u9ad8\u8fbe60%\u3002\n\u4e00\u822c\u7ebf\u4e0a\u6570\u636e\u5e93\uff0c\u9700\u8981\u5206\u5e93\u5206\u8868\u7684\u573a\u666f\uff0cinsert\u572815ms\u5de6\u53f3\u662f\u6bd4\u8f83\u5bb9\u6613\u63a5\u53d7\u7684\uff0c\u8fd9\u68370.6ms\u7684\u89e3\u6790+\u8def\u7531\u7684\u635f\u8017\u7387\u5c31\u53ea\u67094%\u4e86\u3002\n\u56e0\u4e3a\u89e3\u6790sql\u6240\u6d88\u8017\u7684\u65f6\u95f4\u662f\u5b9a\u503c\uff0c\u56e0\u6b64\u9700\u8981\u6839\u636e\u573a\u666f\u624d\u80fd\u51b3\u5b9a\u8fd9\u4e2a\u635f\u8017\u7387\u662f\u5426\u5408\u7406\u3002\n\u5355\u7eaf\u7684\u6d4b\u8bd5\u7a7a\u6570\u636e\u5e93\u7684insert\u4ef7\u503c\u5e76\u4e0d\u9ad8\u3002\n\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u6570\u636e\u5e93\u4e2d\u670920\u4ebf\u6570\u636e\uff0c\u518dinsert 2\u4e07\u6761\u7684\u635f\u8017\u7387\uff0c\u5c31\u4e0d\u662f\u8fd9\u6837\u5b50\u4e86. \u539f\u56e0\u662f\uff1a\u4f7f\u7528Mybatis\u65f6\u6846\u67b6\u8c03\u7528Connection.getMetaData()\u65f6\u91ca\u653e\u8fde\u63a5\u4e0d\u6b63\u786e\u5bfc\u81f4\u7684\u95ee\u9898. fixed at 1.5.4. \u8bf7\u8ba4\u771f\u9605\u8bfb\u6587\u6863\u3002\u8be5\u914d\u7f6e\u4e3a\u4e3asql.show. fixed at 1.5.4.1. \u8bfb\u5199\u5206\u79bb\u662f\u4e24\u4e2a\u5e93\uff0c\u6211\u4eec\u76ee\u524d\u8fd8\u6ca1\u6709\u8003\u8651\u8fc7\u5f00\u542f\u4e00\u822c\u4e8b\u52a1\u5e94\u8be5\u5982\u4f55\u8fd0\u884c\u3002\u5982\u679c\u60f3\u7528\u4e8b\u52a1\uff0c\u8bf7\u4f7f\u7528\u5206\u5e03\u5f0f\u4e8b\u52a1\u3002\n\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u5efa\u8bae\u4f7f\u7528\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u56e0\u6b64\u8bf7\u4ece\u8bbe\u8ba1\u89d2\u5ea6\u8003\u8651\u8bfb\u5199\u5206\u79bb\u662f\u5426\u771f\u7684\u9700\u8981ACID\u4e8b\u52a1\uff0c\u8fd8\u662f\u4f7f\u7528BASE\u4e8b\u52a1\u8865\u507f\u673a\u5236\u6765\u5904\u7406. we have no plan to support special sql features. fixed at 2.0.0.m1. fixed at 2.0.0.m1. \u4e0d\u652f\u6301\u8fd9\u6837\u7684sql\u3002sharding jdbc\u7528\u4e8e\u5904\u7406\u9762\u5411\u4e92\u8054\u7f51\u7684\u6d77\u91cf\u6570\u636e\u3002\u8bf7\u5148\u786e\u5b9a\u4f60\u7684sql\u662f\u5426\u6709\u53ef\u80fd\u548c\u5fc5\u8981\u8dd1\u5728\u57fa\u4e8e\u4e24\u4ebf\u6570\u636e\u7684\u67e5\u8be2\u3002\u76f8\u4fe1\u8d35\u516c\u53f8\u7684dba\u4e0d\u4f1a\u540c\u610f\u8fd9\u6837\u7684sql\u901a\u8fc7\u5427. \u53c2\u52a0faq\u7b2c10\u4e2a\u95ee\u9898\uff0c\u6211\u60f3\u5728\u8fd9\u4e2a\u573a\u666f\u540c\u6837\u9002\u7528\u3002\nshardingjdbc.io/docs/01-start/faq/. \u7531\u4e8e\u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u76ee\u524d\u7684\u4fe1\u606f\u5e76\u4e0d\u8db3\u4ee5\u5b9a\u4f4d\u95ee\u9898\u3002\u56e0\u6b64\u5148\u5173\u95ed\u4e86\u3002\u5982\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u8bf7\u518dreopen\u6b64issue. \u76ee\u524d\u4e0d\u652f\u6301\u6279\u91cf\u63d2\u5165\uff0c\u6587\u6863\u4e2d\u5df2\u660e\u786e\u63d0\u53ca\u3002\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u8bf7\u52ff\u518d\u6d4b\u8bd5\u65e2\u7136a\u573a\u666f\u4e0d\u652f\u6301\uff0c\u662f\u5426b\u573a\u666f\u4f1a\u652f\u6301\u3002\u8fd9\u57fa\u672c\u5c5e\u4e8e\u65e0\u7528\u529f\uff0c\u5373\u4f7f\u5076\u7136\u652f\u6301\u4e5f\u4f1a\u5f53\u4f5cbug\uff0c\u6309\u7167\u6821\u9a8c\u4e0d\u4e25\u683c\u5904\u7406. \u8bf7\u8ba4\u771f\u9605\u8bfb\u6587\u6863\u540e\u518d\u63d0\u95ee\uff0c\u8ba9\u95ee\u9898\u66f4\u6709\u610f\u4e49. \u76ee\u524d\u65e0\u8ba1\u5212. fixed at 2.0.0.m1. \u4e0d\u652f\u6301\u8fd9\u6837\u7684\u5b50\u67e5\u8be2\uff0c\u5173\u4e8e\u4f55\u79cd\u5b50\u67e5\u8be2\u652f\u6301\u8bf7\u9605\u8bfb\u6587\u6863. \u8bf7\u8be6\u7ec6\u9605\u8bfbhttp://shardingjdbc.io/docs/00-overview/contribution/\n\u518d\u63d0\u4ea4pr\u3002\u8bf7\u91cd\u70b9\u5173\u6ce8\u4ee5\u4e0b\u51e0\u70b9\uff1a\n1. \u8bf7\u4e8e\u5f53\u524d\u5f00\u53d1\u5206\u652f\u63d0\u4ea4pr\uff0cmaster\u4e3a\u6700\u540e\u4e00\u4e2a\u53d1\u5e03\u7684tag\u7684\u7248\u672c\uff0c\u4e0d\u63a5\u53d7pr\n2. \u8bf7\u5c06checkstyle\u7b49\u4ee3\u7801\u98ce\u683c\u8c03\u6574\u81f3\u6ca1\u6709\u8b66\u544a\u7684\u72b6\u6001\n3. \u8bf7\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b. I create a issue for that:\nhttps://github.com/shardingjdbc/sharding-jdbc/issues/398. \u76ee\u524d\u6ca1\u6709string\u7c7b\u578b\u7684\u5c5e\u6027\u914d\u7f6e\uff0c\u4ec5\u6709int\u548cboolean\u4e24\u79cd\uff0c\u56e0\u6b64\u6ca1\u5fc5\u8981\u589e\u52a0\u5bf9string\u7684\u5904\u7406. fixed at 2.0.0.m1. \u8bf7\u8ba4\u771f\u9605\u8bfb\u6587\u6863\u3002http://shardingjdbc.io/docs/01-start/faq/. \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u4f18\u96c5\u9000\u51fa\u3002\u5982\u679c\u7528\u7528\u6237\u8fdb\u7a0b\uff0csjdbc\u5c06\u6c38\u8fdc\u65e0\u6cd5\u4f18\u96c5\u5173\u95ed\u3002. \u4e0d\u652f\u6301\u5bf9\u5206\u7247\u5b57\u6bb5\u8fdb\u884c\u4fee\u6539\uff0c\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u6570\u636e\u8fc1\u79fb. \u8bf7\u9605\u8bfbfaq\u6587\u6863http://shardingjdbc.io/docs/01-start/faq/\n\u7b2c\u516b\u4e2a\u95ee\u9898. fixed at 2.0.0.M2. \u8fd9\u79cd\u9700\u6c42\u6211\u4eec\u6682\u65f6\u4e0d\u8003\u8651\uff0c\u8bf7\u7406\u89e3. \u65e0\u5206\u7247\u952e\u5373\u5168\u8def\u7531\uff0c\u4e1a\u52a1\u65b9\u9762\u7684\u8bbe\u8ba1\u548c\u8003\u91cf\u4e0d\u5728\u8ba8\u8bba\u8303\u56f4\u5185\u3002\u8bf7\u7406\u89e3. fixed at 2.0.0.M2. \u8fd9\u91cc\u7684\u4ee3\u7801\u662f\u53c2\u7167\u4e4b\u524d\u7684druid\u5199\u7684\u3002\u5f53\u65f6\u6ca1\u6ce8\u610f\u770b\uff0c\u4ed4\u7ec6\u4e00\u770b\u786e\u5b9e\u4e0d\u5408\u7406\uff0c\u6211\u4fee\u6539\u4e00\u4e0b. \u95ee\u98981\uff1a\u5df2\u4fee\u6539\u4e3areturn ch <= 32 && EOI != ch || ch >= 0x7F && ch <= 0xA0;\n\u95ee\u98982\uff1a\u5224\u65ad\u662f\u5426\u662f\u7a7a\u683c\u5e76\u4e0d\u5305\u542b\u884c\u7ed3\u675f\u7b26\n\u95ee\u98983\uff1aA0\u540e\u9762\u4e0d\u662f\u7a7a\u683c. fixed at 2.0.0.M2. 0x1a\u662funix\u7684eof\u6807\u5fd7\nhttps://stackoverflow.com/questions/13582804/why-can-windows-not-read-beyond-the-0x1a-eof-character-but-unix-can. \u4e0d\u652f\u6301\u8fd9\u79cd\u5b50\u67e5\u8be2\uff0c\u8bf7\u8ba4\u771f\u9605\u8bfb\u6587\u6863. \u6211\u8bd5\u4e86\u4e00\u4e0b\u4e0d\u80fd\u91cd\u73b0\uff0c\u662f\u4e0d\u662f\u4f60oracle\u9a71\u52a8\u7684\u95ee\u9898\uff0c\u6211\u4f7f\u7528\u7684\u9a71\u52a8\u662f\uff1a\nxml\n        <dependency>\n            <groupId>com.oracle</groupId>\n            <artifactId>ojdbc14</artifactId>\n            <version>10.2.0.3.0</version>\n        </dependency>\n\u8bf7\u63d0\u4f9b\u4e00\u4e0b\u4f60\u7684\u9a71\u52a8\u3002\nPS\uff1a\u5e26date\u7c7b\u578b\u6392\u5e8f\u7684\u6d4b\u8bd5\u7528\u4f8b\u5df2\u6dfb\u52a0\uff0c\u5728https://github.com/shardingjdbc/sharding-jdbc/commit/0f190d470e1237d6bf2dc12128d3216e0f282c38. \u8bf7\u6838\u5bf9\u6b63\u786e\u7684\u7248\u672c\u540e\u518d\u4f7f\u7528. diplicate with #375. \u652f\u6301\uff0c\u4f46\u6548\u7387\u53d6\u51b3\u4e8e\u600e\u4e48\u7528\u3002\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863. \u7531\u4e8eDruid\u8fde\u63a5\u6c60\u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u56e0\u6b64\u5bf9\u4e8e\u540c\u4e00\u5e93\u4e0a\u7684\u591a\u4e2a\u5206\u8868\uff0c\u91c7\u7528\u7684\u662f\u5355\u7ebf\u7a0b\u8bbf\u95ee\u3002\n\u672a\u6765\u4f1a\u505a\u63d0\u5347\uff0c\u589e\u52a0\u914d\u7f6e\u9879\uff0c\u8ba9\u4f7f\u7528\u65b9\u51b3\u5b9a\u662f\u5426\u5f00\u542f\u591a\u7ebf\u7a0b\u3002\n\u672a\u6765\u4fee\u6539\u65b9\u6848\uff1a\n\u914d\u7f6e\u662f\u5426\u540c\u4e00\u5e93\u7684\u591a\u8868\u91c7\u7528\u4e0d\u540c\u7684\u8fde\u63a5\u3002true\uff0c\u5219\u5f00\u542f\u591a\u7ebf\u7a0b\uff0c\u7f3a\u70b9\u662f\u540c\u5e93\u7684\u591a\u8868\u65e0\u6cd5\u4fdd\u6301\u5728\u4e00\u4e2aacid\u4e8b\u52a1\u4e2d\uff1bfalse\u5219\u540c\u5e93\u7684\u591a\u8868\u91c7\u7528\u4e00\u4e2a\u8fde\u63a5\uff0c\u4e32\u884c\u6267\u884c\uff08\u5373\u76ee\u524d\u7684\u65b9\u5f0f\uff09\u3002. \u8c22\u8c22\u63d0\u4f9b\u8fd9\u4e48\u6e05\u6670\u7684\u5f02\u5e38\u5206\u6790\u3002\nfixed at 2.0.0.M2. \u76ee\u524d\u7684\u4fee\u6539\u65b9\u5f0f\u5e76\u975e\u6700\u4f18\uff0c\u662f\u5728\u6539\u5199\u65f6\u5224\u65ad\u662f\u5426\u4e3a\u5173\u952e\u5b57\uff0c\u662f\u7684\u8bdd\u5219\u52a0\u4e0a\u8f6c\u4e49\u7b26\u3002\n\u672a\u6765\u5e94\u8be5\u6539\u4e3a\u5728\u89e3\u6790\u65f6\u8bb0\u5f55\u4e0b\u539fidentifier\uff0c\u8fd9\u6837\u4ece\u517c\u5bb9\u6027\u548c\u6027\u80fd\u4e0a\u90fd\u4f1a\u597d\u4e00\u4e9b\u3002\n\u672a\u6765\u4f1a\u518d\u66f4\u65b0\u3002. \u4e8b\u52a1\u95ee\u9898\uff0c\u8bfb\u5199\u5206\u79bb\u95ee\u9898\uff0c\u73af\u5883\u770b\u9519\u4e86\u7684\u95ee\u9898\u7b49\u3002\u8bf7\u4ece\u81ea\u5df1\u7684\u4ee3\u7801\u548c\u73af\u5883\u4e2d\u67e5\u627e\u539f\u56e0\u5427\u3002. Thank you for reminder and  the pull request. We will pay attention to avoid to use mockito internal API in future. . duplicate with #404 . fixed at 2.0.0.M2. duplicate with #290 . \u8bf7\u63cf\u8ff0\u7684\u8db3\u591f\u6e05\u6670\uff0c\u5e76\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684demo. \u7531\u4e8e\u672a\u8bf4\u660e\u7406\u7531\u81ea\u884c\u5173\u95ed\u95ee\u9898\uff0c\u56e0\u6b64\u8ba4\u4e3a\u8be5\u95ee\u9898\u5c5e\u4e8e\u65e0\u6548\u95ee\u9898\u3002. \u5173\u4e8e\u95ee\u9898\uff0c\u8bf7\u9605\u8bfb\u6587\u6863\uff1ahttp://shardingjdbc.io/docs/01-start/faq/ \u7b2c9\u4e2a\u95ee\u9898\u7684\u56de\u7b54\n\u5173\u4e8e\u5165\u7fa4\uff1a\u7fa4\u4e2d\u662f\u5b9e\u540d\u5236\u4ea4\u6d41\uff0c\u60a8\u5165\u7fa4\u65f6\u672a\u63d0\u4f9b\u516c\u53f8\u540d\u79f0\uff0c\u62d2\u7edd\u60a8\u5165\u7fa4\u4e5f\u660e\u786e\u5199\u4e86\u62d2\u7edd\u7406\u7531\uff0c\u5982\u6709\u5165\u7fa4\u9700\u6c42\uff0c\u8bf7\u63d0\u4f9b\u516c\u53f8\u540d\u79f0\u3002. \u5df2\u6b63\u5f0f\u5408\u5e76\u5165\u5f00\u53d1\u5206\u652f\uff0c\u611f\u8c22\u4fca\u96c4\u8f9b\u82e6\u7684\u5de5\u4f5c\u3002. \u6211\u4eec\u5e0c\u671b\u4f7f\u7528shading-jdbc\u7684\u6570\u636e\u5e93\u90fd\u662f\u6c34\u5e73\u6269\u5c55\u7684\uff0c\u5373\u6bcf\u4e2a\u5e93\u7684\u6570\u636e\u5e93\u8868\u7ed3\u6784\u548c\u540d\u79f0\u90fd\u5b8c\u5168\u4e00\u6837\u3002\n\u5982\u679c\u975e\u6c34\u5e73\u6269\u5c55\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7075\u6d3b\u7684\u5206\u7247\u7b56\u7565\u5b9e\u73b0\uff0c\u4f46\u590d\u6742\u5ea6\u8f83\u9ad8\uff0cin\u67e5\u8be2\u4e0d\u80fd\u7528\u7b49\uff0c\u9700\u8981\u7ed3\u5408\u6539\u5199\u540e\u7684sql\u65ad\u5b9a\u3002\n\u7531\u4e8e\u4e0d\u63a8\u8350\u8fd9\u4e48\u4f7f\u7528\uff0c\u56e0\u6b64\u8fd9\u4e2aissue\u6211\u5c31\u5173\u4e86. \u4e0d\u652f\u6301UNION\uff0c\u8be6\u60c5\u8bf7\u9605\u8bfb\u6587\u6863. \u8bf7\u63d0\u4f9bsql. \u770b\u8d77\u6765\u53ef\u80fd\u662f\u4e2a\u89e3\u6790sql\u7684bug\uff0c\u6211\u4eec\u770b\u4e00\u4e0b. \u4e0d\u652f\u6301\u5197\u4f59\u62ec\u53f7\uff0c\u5c06SQL\u6539\u4e3a\uff1a\nsql\nSELECT\nSUM(sales.saleroom) AS saleroom,\nshop.sys_org_code AS orgCode,\nd.departname AS department,\nd.parentdepartid AS parentdepartid,\nd.ID AS departId\nFROM\nec_sales AS sales\nLEFT JOIN ec_shop shop ON sales.shop_id = shop.shop_id\nLEFT JOIN t_s_depart d ON \nd.org_code = shop.sys_org_code \nWHERE\nshop.sys_org_code LIKE CONCAT('','${sqlParam.orgCode}','%' )\nAND\ndata_date >= #{sqlParam.startTime}\nAND\ndata_date <= #{sqlParam.endTime}\n\u5373\u53ef. \u53ef\u4ee5\u4f7f\u7528hint\u5206\u7247. @chenhaifeng2016 m1,m2\u7b49\u5747\u5c5e\u4e8e\u91cc\u7a0b\u7891\u7248\u672c\uff0c\u6b63\u5f0f\u4e0a\u7ebf\u7b49\u7b49\u5f852.0.0\u6b63\u5f0f\u7248\u53d1\u5e03. fixed at 2.0.0.M3. 1. \u5df2\u7ecf\u7acb\u9879\uff0c\u8bf7\u53c2\u89c1issue #439\n2. \u5df2\u7ecf\u7acb\u9879\uff0c\u8bf7\u53c2\u89c1issue #290 \n3. \u8bf7\u8be6\u7ec6\u8bf4\u660e\uff0c\u5e94\u8be5\u662f\u53ef\u4ee5\u7684\n4. \u8bf7\u9605\u8bfbfaq\u7b2c9\u4e2a\u95ee\u9898\uff1ahttp://shardingjdbc.io/docs/01-start/faq/\n5. \u5206\u7247\u7b56\u7565\u548c\u5206\u7247\u952e\u662f\u5e94\u7528\u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u7684\uff0c\u4e0esharding-jdbc\u65e0\u5173\uff0csharding-jdbc\u53ea\u63d0\u4f9b\u5206\u7247\u7684\u5e73\u53f0\n6. \u8bf7\u9605\u8bfb\u8bfb\u5199\u5206\u79bb\u6587\u6863\uff0c\u4e0d\u652f\u6301\u9879\u90e8\u5206\uff1ahttp://shardingjdbc.io/docs/02-guide/master-slave/\n\u5173\u4e8e\u6700\u540e\u7684\u5efa\u8bae\uff0c\u6211\u4eec\u53ea\u662f\u5fe0\u5b9e\u7684\u5b9e\u73b0\u4e86snowflake\u7b97\u6cd5\uff0c\u4e0d\u4f1a\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002\u5206\u5e03\u5f0f\u4e3b\u952e\u751f\u6210\u7b56\u7565\u53ef\u4ee5\u81ea\u5df1\u5b9a\u5236\u3002\u518d\u6b21\u91cd\u7533\uff0csharding-jdbc\u53ea\u63d0\u4f9b\u5e73\u53f0\uff0c\u5404\u79cd\u9700\u8981\u5df2\u9884\u7559\u63a5\u53e3\uff0c\u6216\u7b97\u6cd5\u5b9e\u73b0\uff0c\u8bf7\u81ea\u884c\u6269\u5c55\u3002\n\u9664\u4e86\u7b2c\u4e09\u4e2a\u95ee\u9898\u672a\u786e\u5b9a\uff0c\u5176\u4ed6\u95ee\u9898\u6587\u6863\u548cissue\u4e2d\u90fd\u5df2\u63d0\u53ca\u3002\u56e0\u6b64issue\u5148\u5173\u95ed\u4e86\u3002\u7b2c\u4e09\u4e2a\u95ee\u9898\u8bf7\u518d\u8bd5\u8bd5\uff0c\u82e5\u6709\u95ee\u9898\uff0c\u8bf7\u72ec\u7acb\u63d0\u4ea4issue\uff0c\u5e76\u53c2\u7167issue\u63d0\u4ea4\u683c\u5f0f\u586b\u5145\u6240\u9700\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e8e\u5b9a\u4f4d\u3002. skipUntil\u7684\u4ee3\u7801\uff1a\n```java\npublic void skipUntil(final TokenType... tokenTypes) {\n    Set<TokenType> tokenTypeSet = Sets.newHashSet(tokenTypes);\n    tokenTypeSet.add(Assist.END);\n    while (!tokenTypeSet.contains(lexer.getCurrentToken().getType())) {\n        lexer.nextToken();\n    }\n}\n\n```\n\u5e94\u8be5\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\u6d88\u8017cpu\u7684\u64cd\u4f5c. \u957f\u65f6\u95f4\u672a\u8ddf\u8fdb\u53cd\u9988\u3002\n\u6211\u4eec\u81ea\u5df1\u5206\u6790\u4ee3\u7801\u627e\u4e0d\u5230\u4ec0\u4e48\u53ef\u4f18\u5316\u7684\u7a7a\u95f4\u4e86\uff0c\u56e0\u6b64\u6b64issue\u6211\u5173\u95ed\u4e86. duplicate with #436. \u8fd9\u91cc\u7684\u4f7f\u7528\u662f\u6709\u95ee\u9898\u7684\u3002\u65e2\u7136\u4f7f\u7528\u4e86\u81ea\u589e\u4e3b\u952e\uff0c\u5728sql\u4e2d\u5c31\u4e0d\u5e94\u8be5\u5728\u5199id\uff0c\u9053\u7406\u4e0emysql\u7684autoincrement\u76f8\u540c\u3002\n\u56e0\u6b64\n```sql\nINSERT INTO traffic (\nname, createTime\n)\nVALUES (\n{name,jdbcType=VARCHAR},\n{createTime,jdbcType=TIMESTAMP}\n)\n```\n\u624d\u662f\u6b63\u786e\u7684. \u8fd9\u91cc\u786e\u5b9e\u62a5\u9519\u4fe1\u606f\u4e0d\u592a\u660e\u786e\uff0c\u4f46\u662f\u7531\u4e8e\u914d\u7f6e\u4e86\u81ea\u589e\u4e3b\u952e\u5374\u6ca1\u4f20\u503c\uff0c\uff0c\u653e\u5230mybatis\u4e5f\u662f\u4e0d\u80fd\u8fd0\u884c\u7684. \u4e0d\u652f\u6301\uff0cschema\u5e94\u8be5\u4ea4\u7531\u5206\u7247\u7b56\u7565\u5904\u7406\uff0csharding jdbc\u5c06\u6240\u6709\u7684\u5305\u542b\u7684\u6570\u636e\u6e90\u5f53\u6210\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90. \u5206\u7247\u7b56\u7565\u662f\u5e94\u7528\u5f00\u53d1\u65b9\u81ea\u5df1\u5199\u7684\uff0c\u4ee3\u7801\u5f88\u7075\u6d3b\uff0c\u5982\u4f55\u5206\u7247\u90fd\u53ef\u4ee5. \u8bf7\u81ea\u884c\u8d1f\u8d23\u4f9d\u8d56\u7684\u52a0\u8f7d\u6b63\u786e. \u4e0d\u652f\u6301. \u8fd9\u6837\u7684sql\u4e0d\u9002\u5408\u8dd1\u5728\u9700\u8981\u5206\u7247\u7684\u4e92\u8054\u7f51\u6570\u636e\u5e93\u5728\u7ebf\u67e5\u8be2\u4e2d\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u96c6\u4e2d80%\u7684\u7cbe\u529b\u5904\u740620%\u7684\u573a\u666f\u3002\u56e0\u6b64\u4e0d\u652f\u6301\u8fd9\u79cd\u67e5\u8be2\u3002. \u4e0d\u652f\u6301\u8fd9\u6837\u7684\u5b50\u67e5\u8be2\u3002\u8be6\u60c5\u8bf7\u9605\u8bfb\u6587\u6863. fixed at 2.0.0.M3. \u62a5\u9519\u4fe1\u606f\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0cinline\u8868\u8fbe\u5f0f\u683c\u5f0f\u914d\u7f6e\u9519\u8bef. \u8fd9\u662fmybatis\u4f7f\u7528\u7684\u95ee\u9898\uff0c\u62a5\u9519\u4fe1\u606f\u4e0esharding-jdbc\u65e0\u5173\uff0c\u53ea\u662f\u900f\u4f20\u4e86mybatis\u7684stack trace\uff0c\u56e0\u6b64\u5173\u95ed\u4e86\u3002\u8bf7\u67e5\u627emybatis\u76f8\u5173\u7684\u89e3\u51b3\u529e\u6cd5\u3002. \u00a0\u5206\u7247\u7b56\u7565\u662f\u5e94\u7528\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u7684\uff0c\u7075\u6d3b\u5ea6\u5f88\u9ad8\uff0c\u53ea\u8981\u80fd\u7528java\u63cf\u8ff0\u51fa\u6765\u7684\u7b97\u6cd5\u90fd\u652f\u6301. 1.x \u4e0d\u53ef\u4ee5\n2.x\u7684\u914d\u7f6e\u52a8\u6001\u5316\u529f\u80fd\u53ef\u4ee5. duplicate with #452 . \u52a8\u6001\u8868\u7684actual-data-node\u4e0d\u7528\u5199. \u770b\u9519\u8bef\u4fe1\u606f\u662f\u6ca1\u6709\u628a\u5206\u5e93\u5206\u8868rule\u914d\u7f6e\u6b63\u786e\uff0c\u5728sql\u4e2d\u65e2\u6ca1\u627e\u5230\u5206\u7247\u9700\u8981\u7684\u8868\uff0c\u4e5f\u6ca1\u6709default datasource\uff0c\u548c\u662f\u4e0d\u662foracle\u89c6\u56fe\u6ca1\u5173\u7cfb. \u5206\u7247\u7b97\u6cd5\u662f\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u6839\u636e\u4ec0\u4e48\u5206\u7247\u4e0a\u4e0b\u6587\uff0c\u8fd4\u56de\u54ea\u4e2a\u8868\u540d\uff0c\u90fd\u53d6\u51b3\u4e8e\u5206\u7247\u7b97\u6cd5. \u5b9e\u4f8b\u521b\u5efa\u9500\u6bc1\u5f88\u9891\u7e41\uff0c\u4e00\u4e2aYGC\u4e5f\u80fd\u89e3\u51b3\u3002\u8bf7\u95ee\u662f\u5426\u771f\u7684\u4ea7\u751fFGC\uff0c\u5f71\u54cd\u4e1a\u52a1\u4e86\uff1f\u8131\u79bb\u4e0a\u4e0b\u6587\u7684\u6570\u636e\u5e76\u6ca1\u6709\u610f\u4e49\u3002\u8bf7\u63d0\u4f9b\u8fd0\u884c\u4e86\u591a\u4e45\uff0c\u8fdb\u884c\u4e86\u51e0\u6b21FGC\uff0c\u51e0\u6b21YGC\uff0c\u6bcf\u6b21\u95f4\u9694\u591a\u5c11\uff0c\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u7b49\u7efc\u5408\u6307\u6807\u3002. sql\u7684char\u7531\u4e8e\u6ca1\u6709\u5339\u914d\u5355\u5f15\u53f7\uff0c\u5e76\u672a\u5173\u95ed\u3002\u6070\u597dsql\u4e2d\u7684\u4e0b\u4e00\u4e2achar\u53c8\u662f\u6c49\u5b57\uff0c\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u95ee\u9898\u51fa\u73b0\u3002\nsql\u793a\u4f8b\uff1a\nsql\nUPDATE product p SET p.title='Title's',s.description='\u4e2d\u6587' WHERE p.product_id=?. fix at 2.0.0.M4. \u540c\u6837\u4e0d\u652f\u6301. 1. OR\u8def\u7531\u5e76\u4e0d\u7b80\u5355\uff0c\u4e0eand\u548c\u5404\u79cd\u62ec\u53f7\u4e2d\u4f18\u5148\u7ea7\uff0c\u5e76\u4e0d\u662f\u5168\u8def\u7531\u5c31\u80fd\u89e3\u51b3\u7684\u3002\u9700\u8981\u62c6\u4e3a\u65cb\u8f6c\u6811\u89e3\u6790\u624d\u53ef\u4ee5\n2. \u5197\u4f59\u62ec\u53f7\u662f\u540c\u7406\uff0c\u9700\u8981\u89e3\u6790\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811\u3002\u76ee\u524d\u4e0d\u89e3\u6790\u5197\u4f59\u62ec\u53f7\uff0c\u6574\u4e2a\u89e3\u6790\u4e0a\u4e0b\u6587\u662f\u5e73\u5c42\u7684\u3002\u52a0\u4e0a\u62ec\u53f7\uff0cand\u548cor\uff0c\u9700\u8981AST\u3002\u5177\u4f53\u7406\u8bba\u8bf7\u770b\u7f16\u8bd1\u539f\u7406\u4f1a\u597d\u4e00\u4e9b. duplicate with #290 . \u76ee\u524d\u4e0d\u652f\u6301\nduplicate with #290 . \u8bf7\u63d0\u4f9b\u6570\u636e\u5e93\u8868\u7ed3\u6784\uff0c\u5206\u7247\u7b56\u7565\u914d\u7f6e\u4ee5\u53casql.show\u7684\u76f8\u5173\u65e5\u5fd7. \u6ca1\u6709\u8bbe\u7f6e\u5206\u7247\u952e\uff0c\u6240\u4ee5\u5168\u5e93+\u5168\u8868\u66f4\u65b0\uff0c\u8fd9\u4e2a\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\u5982\u679c\u60f3\u66f4\u65b0\u5355\u8868\uff0c\u9700\u8981\u5728where\u6761\u4ef6\u4e2d\u52a0\u4e0atoUser\u8fd9\u4e2a\u5206\u7247\u952e\u624d\u53ef\u4ee5\u3002. \u8bf7\u63d0\u4f9b\u6570\u636e\u5e93\u8868\u7ed3\u6784\uff0c\u5206\u7247\u7b56\u7565\u914d\u7f6e\u4ee5\u53casql.show\u7684\u76f8\u5173\u65e5\u5fd7. \u4f60\u7684sql \uff1a select * from table where field1 = 1\n\u5e76\u672a\u5206\u9875\u3002\u7531\u4e8e\u957f\u65f6\u95f4\u672a\u53cd\u9988\uff0c\u800c\u4e14\u8fd9\u4e9b\u57fa\u672c\u6d4b\u8bd5\u6211\u4eec\u90fd\u6709\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8bf7\u968f\u610f\u53c2\u8003\u3002\u56e0\u6b64\u8fd9\u4e2aissue\u6211\u5173\u95ed\u4e86\u3002. duplicate with #290 #439 . \u591a\u8c22\u80fd\u627e\u5230\u9690\u85cf\u8fd9\u4e48\u6df1\u7684bug\u3002\nfixed at 2.0.0.M4. \u8bf7\u5148\u9605\u8bfb\u6587\u6863. finished  at 2.0.2. \u4f7f\u75281.x\u7684\u52a8\u6001\u8868\u62162.x\u7684\u914d\u7f6e\u52a8\u6001\u5316. \u81ea\u5df1\u5efa\u4e00\u4e2atrans_log\u7684schema\u5373\u53ef\uff0c\u8868\u7ed3\u6784\u4f1a\u81ea\u52a8\u521b\u5efa\u597d. \u6211\u4eec\u5bf9\u4e8eAPI\u8fdb\u884c\u8c03\u6574\u662f\u7ecf\u8fc7\u8003\u8651\u7684\uff0c2.x\u4e0d\u4f1a\u4e3a\u4e86\u517c\u5bb91.x\u800c\u589e\u52a0\u989d\u5916\u7684API\uff0c\u56e0\u6b64\u8fd9\u4e2apr\u6211\u5c31\u4e0d\u5408\u5e76\u4e86. \u662f\u6587\u6863\u5fd8\u4e86\u6539\u4e86\uff0c\u6211\u4eec\u6539\u4e00\u4e0b\uff0c\u8c22\u8c22\u63d0\u9192. \u8bf7\u63d0\u4f9b\u5177\u4f53\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ee5\u53ca\u62a5\u9519\u4fe1\u606f\u3002\n\u6211\u4ece\u60a8\u63d0\u4f9b\u7684\u4fe1\u606f\u5e76\u672a\u770b\u5230\u4efb\u4f55\u9519\u8bef\uff0corder\u548corder_item\u8868\u76842016\u548c2017\u90fd\u662f\u5339\u914d\u5bf9\u5e94\u7684. \u8bf7\u81ea\u884cgoogle\u4e00\u4e0b\u9519\u8bef\u4fe1\u606fThe error occurred while setting parameters\n\u8fd9\u662fmybatis\u548csql\u7684\u53c2\u6570\u4e0d\u5339\u914d\uff0c\u9519\u8bef\u4e0esharding-jdbc\u65e0\u5173\u3002\n\u53e6\u5916\uff0c\u591a\u8bf4\u4e00\u53e5\uff0c\u8bf7\u95ee\u8fd9\u4e2a\u5206\u7247\u7b56\u7565\u7684\u914d\u7f6e\u662f\u4ec0\u4e48\u610f\u601d\uff1a\ndataSource.t_order_${2016..2018}\u548cdataSource.t_order_item_${2016..2017}\nt_order_item\u65e0\u97002018\u5e74\u7684\u6570\u636e\uff1f\nsharding-jdbc\u662f\u6c34\u5e73\u6269\u5c55\u7684\u5206\u5e93\u5206\u8868\u4e2d\u95f4\u4ef6\u3002. \u54e6\uff0c\u660e\u767d\u4e86\u3002\u8fd9\u4e2a\u662f\u914d\u7f6e\u4e86BindingTableRule\u5bfc\u81f4\u3002BindingTable\u7684\u610f\u601d\u662f\u4e24\u7ec4\u8868\u7684\u5206\u7247\u89c4\u5219\u5fc5\u987b\u5b8c\u5168\u4e00\u81f4\u624d\u53ef\u4ee5\u3002\n\u4f60\u7684\u793a\u4f8b\u4e2d\u6240\u8868\u8fbe\u7684\u610f\u601d\uff0c\u662f\u4e24\u7ec4\u8868\u7684\u5206\u7247\u89c4\u5219\u4e0d\u4e00\u81f4\uff0c\u56e0\u6b64\u5c31\u4e0d\u5e94\u8be5\u914d\u7f6eBindingTableRule\u3002\u5220\u9664BindingTableRule\u5e94\u8be5\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u67e5\u8be2\u6548\u7387\u8f83\u4f4e\uff0c\u4f1a\u91c7\u53d6\u7b1b\u5361\u5c14\u79ef\u67e5\u8be2\n. \u4e24\u7ec4\u5206\u7247\u89c4\u5219\u4e0d\u540c\u7684\u8868\uff0c\u4e0d\u5e94\u8be5\u914d\u7f6eBindingTableRule\nat io.shardingjdbc.core.rule.BindingTableRule.getBindingActualTable(BindingTableRule.java:76). \u8bf7\u95ee\u539f\u59cbsql\u662f\u5426\u5c31\u5f88\u8017\u65f6\uff0c\u8fd9\u4e2a\u548csharding-jdbc\u8fd9\u4e00\u5c42\u9762\u6709\u5173\u7cfb\u4e48\uff1f. \u957f\u65f6\u95f4\u65e0\u53cd\u9988\uff0c\u4fe1\u606f\u4e0d\u8db3\uff0c\u8be5issue\u5173\u95ed. \u8bf7\u63d0\u4f9binline\u8868\u8fbe\u5f0f\u4f9b\u6211\u4eec\u8c03\u8bd5. \u53e6\u5916\uff0c1024\u4e2a\u6570\u636e\u5206\u7247\u662f\u5426\u6709\u5fc5\u8981\uff0c\u8bf7\u95ee\u662f\u4ec0\u4e48\u7ea7\u522b\u7684\u4e1a\u52a1\uff1f. \u8bf7\u95ee\u4e3a\u4ec0\u4e48\u8981\u5206\u8fd9\u4e48\u591a\u5e93\uff1f. \u786e\u5b9e\u6211\u4eec\u6ca1\u6709\u8bd5\u8fc7\u8fd9\u4e48\u957f\u7684inline\u8868\u8fbe\u5f0f\uff0c\u4f46\u662finline\u8868\u8fbe\u5f0f\u7684\u521d\u59cb\u5316\u662f\u4e00\u6b21\u6027\u7684\uff0c\u65f6\u95f4\u7a0d\u5fae\u957f\u4e00\u70b9\u4e5f\u8fd8\u53ef\u4ee5\u63a5\u53d7\u3002\u73b0\u5728\u7684\u8017\u65f6\u662f\u591a\u4e45\uff1f. \u6211\u5c1d\u8bd5\u4f18\u5316\u4e0b\u5427\uff0c\u5982\u679c\u662fgroovy\u89e3\u6790\u957f\u5b57\u7b26\u4e32\u672c\u6765\u5c31\u6162\uff0c\u6211\u5c31\u6682\u65f6\u6ca1\u529e\u6cd5\u4e86\u3002\u6211\u5148\u770b\u770b\u5728\u8bf4. \u62b1\u6b49\uff0c\u6055\u6211\u5b64\u964b\u5be1\u95fb\uff0c\u4e4b\u524d\u6ca1\u542c\u8bf4\u8fc7\u8fd9\u4e2a\u6570\u636e\u5e93\u3002\u6211\u60f3\u5e94\u8be5\u662f\u4e0d\u652f\u6301\u7684\u5427\u3002. \u76ee\u524d\u4ec5\u652f\u6301 =\uff0cin \u548cbetween\u3002\u6211\u4eec\u4e0d\u8ba4\u4e3a\u4ee5\u4ec5\u5927\u4e8e\u6216\u4ec5\u5c0f\u4e8e\u4f5c\u4e3a\u5206\u7247\u952e\u7684\u8fd0\u7b97\u7b26\u9002\u5408\u9700\u8981\u5206\u5e93\u5206\u8868\u7684SQL\u3002\u56e0\u6b64\u6682\u65f6\u4e0d\u6253\u7b97\u8003\u8651. \u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u57282.0.0.M3\u4e2d\u5df2\u4fee\u590d\uff1ahttps://github.com/shardingjdbc/sharding-jdbc/issues/436\u3002\n\u8bf7\u786e\u5b9a\u662f\u5426\u60a8\u4f7f\u7528\u7684\u7248\u672c\u5e76\u975e2.0.0.M3\u7684\u6b63\u5f0f\u53d1\u5e03\u7248\u3002\n\u5982\u679c\u786e\u8ba42.0.0.M3\u786e\u5b9e\u6709\u95ee\u9898\uff0c\u6211\u4eec\u518d\u4fee\u590d. \u8bf7\u63d0\u4f9b\u4e00\u4e0b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5b9a\u4f4d\u4e00\u4e0b. fixed at 2.0.1. sql\u6539\u5199\u4f1a\u6539\u4e3a0\uff0c\u4f46\u5f52\u5e76\u65f6\u4f1a\u63091\u5f52\u5e76\u3002\u8fd9\u4e2a\u4e0d\u662fbug\u3002\n\u5173\u4e8e\u4e3a\u4ec0\u4e48\u53d6\u7684\u6570\u636e\u4e0d\u5bf9\uff0c\u5230\u6709\u53ef\u80fd\u662fbug\u3002\u8bf7\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\u4ee5\u4fbf\u6211\u4eec\u5b9a\u4f4d. fixed at 2.0.1. fixed at 2.0.1. \u76ee\u524d\u4e0d\u652f\u6301\uff0c\u66f4\u591a\u4fe1\u606f\u8bf7\u9605\u8bfb\u6587\u6863. \u8bf7\u9605\u8bfbfaq\uff1ahttp://shardingjdbc.io/docs/01-start/faq/\n\u7b2c6\u4e2a\u95ee\u9898. \u8bf7\u9605\u8bfbfaq\uff1ahttp://shardingjdbc.io/docs/01-start/faq/\n\u7b2c8\u4e2a\u95ee\u9898. \u6ca1\u6709\u7406\u7531\u800c\u81ea\u884c\u5173\u95ed\u7684issue\uff0c\u6309\u7167invalid\u5904\u7406. \u6682\u65f6\u6ca1\u6709. \u4f60\u597d\uff0c\u7f51\u9875\u6253\u4e0d\u5f00. \u76ee\u524d\u8fd8\u4e0d\u652f\u6301. \ud83d\udc4d \u5173\u6ce8\u4e2d. fixed at 3.0.0.M1. \u8fd9\u4e2a\u662fsql\u672c\u8eab\u7684\u95ee\u9898\u5427\uff0c\u4e0d\u4f7f\u7528sharding jdbc\u4e5f\u4f1a\u51fa\u73b0\u6570\u636e\u91cd\u590d\uff1f. \u8fd9\u4e2a\u53ef\u80fd\u6682\u65f6\u6ca1\u529e\u6cd5\n\u662f\u5426\u53ef\u4ee5\u770b\u770b\u68b3\u7406sql\u7684\u53ef\u80fd\u6027\uff0c\u5728\u9700\u8981\u5206\u5e93\u5206\u8868\u8fd9\u6837\u6570\u91cf\u7ea7\u7684db\u4e2d\u4f7f\u75283\u4e2a\u5173\u8054\u67e5\u8be2\uff0c\u5e94\u8be5\u4e5f\u662f\u4e92\u8054\u7f51\u516c\u53f8\u7981\u6b62\u7684\u8303\u7574\u3002. \u914d\u7f6ebinding table\u5373\u53ef. \u8bf7\u63d0\u4f9b\u7248\u672c\u53f7\uff0c\u62a5\u9519\u65e5\u5fd7\uff0c\u914d\u7f6e\u4ee3\u7801\u548csql\n. \u770b\u62a5\u9519\u662fuser_id\u4e0d\u5141\u8bb8\u4e3anull\uff0c\u8fd9\u662f\u6570\u636e\u5e93\u5e95\u5c42\u629b\u51fa\u6765\u7684\u3002\u4e0esharding jdbc\u65e0\u5173\u3002\u8bf7\u81ea\u884c\u786e\u8ba4user id\u4e0d\u4e3anull. \u8bf7\u9605\u8bfbfaq. duplicate with #496. \u4e0d\u652f\u6301\u8fd9\u6837\u7684sql. This feature is finished by #737. sharding jdbc\u662fjdbc\u534f\u8bae\uff0c\u4e0e\u4e1a\u52a1\u65e0\u5173\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u8003\u8651. \u672a\u8bf4\u660e\u4efb\u4f55\u539f\u56e0\u81ea\u884c\u5173\u95ed\u7684issue\u6309\u7167invalid\u5904\u7406. \u8fd9\u4e2a\u5e76\u65e0\u51b3\u5b9a\u7684\u5bf9\u4e0e\u9519\uff0c\u6211\u8ba4\u4e3a\u6253\u5370\u65e5\u5fd7\u591a\u4e00\u4e9b\u4e5f\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\u56e0\u6b64\u5148\u4e0d\u4fee\u6539\u4e86. \u770b\u8d77\u6765\u597d\u50cf\u662f\u4e2abug\uff0c\u4e0d\u8fc7\u60a8\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0d\u8db3\u4ee5\u91cd\u73b0\u3002\n\u8bf7\u63d0\u4f9b\u53ef\u4ee5\u91cd\u73b0\u7684\u4ee3\u7801. \u8bf7\u5c06\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u63d0\u4ea4\u81f3github\uff0c\u5e76\u5c06\u94fe\u63a5\u53d1\u9001\u8fc7\u6765\uff0c\u8c22\u8c22. \u76ee\u524d\u7684\u4fe1\u606f\u96be\u4e8e\u91cd\u73b0\uff0c\u8bf7\u5c06\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u63d0\u4ea4\u81f3github\uff0c\u5e76\u5c06\u94fe\u63a5\u53d1\u9001\u8fc7\u6765\uff0c\u8c22\u8c22. \u914d\u7f6esql.show\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u9605\u8bfb\u6587\u6863. \u8bf7\u9605\u8bfb\u6587\u6863\u7684faq\u90e8\u5206. duplicate with #492. duplicate with #286 . \u5206\u7247\u7b97\u6cd5\u90fd\u662f\u81ea\u5b9a\u4e49\u7684\uff0cjava\u4ee3\u7801\u60f3\u600e\u4e48\u5199\u90fd\u53ef\u4ee5\u3002\n\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u89c1example. \u770b\u62a5\u9519\u4fe1\u606f\uff0c\u5e94\u8be5\u662f\u4f60\u81ea\u884c\u5b9e\u73b0\u7684\u7b97\u6cd5\u7c7bcom.ly.core.algorithm.PreciseModuloDatabaseShardingAlgorithm\u6ca1\u63d0\u4f9bpublic\u7684\u65e0\u53c2\u6784\u9020\u5668\u6240\u81f4. fixed at 2.0.2. fixed at 2.0.2. \u8fd9\u4e2aissue\u57282.0.2\u5e76\u672a\u6539\u5b8c\u5584\uff0c2.0.2\u7248\u672c\u4e2d\uff0c\u53ea\u6709\u4ec5\u8bfb\u5199\u5206\u79bb\u53ef\u4ee5\u8fc7\u6ee4\u4ece\u5e93\u7684ddl\uff0c\u5206\u7247+\u8bfb\u5199\u5206\u79bb\u5e76\u4e0d\u80fd\u8fc7\u6ee4ddl. fixed at 2.0.3. \u6709\u63d0\u4f9bdefault data source\uff0c\u66f4\u591a\u8be6\u60c5\u8bf7\u9605\u8bfb\u6587\u6863. finished at 2.0.2. \u8fd9\u79cd\u6392\u5e8f\u65e0\u6cd5\u652f\u6301\uff0c\u9700\u8981\u5168\u5e93\u8868\u626b\u63cf\u4e86\uff0c\u5728\u5206\u7247\u7684\u6570\u636e\u5e93\u4e2d\u6267\u884c\u8fd9\u6837\u7684sql\uff0c\u65e0\u5f02\u4e8e\u6740\u6b7b\u7cfb\u7edf\u3002\nsharding-jdbc\u662f\u9762\u5411\u4e92\u8054\u7f51\u573a\u666f\u7684\u5b9e\u65f6\u5728\u7ebf\u4e1a\u52a1\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bf9\u8fd9\u6837\u7684\u67e5\u8be2\u8fdb\u884c\u652f\u6301\uff0c\u8bf7\u77e5\u6653. \u652f\u6301\uff0c\u8bf7\u9605\u8bfb\u6587\u6863\u548c\u53c2\u8003example. \u8fd9\u4e2apr\u4e0esharding-jdbc\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u4e0d\u5408\u5e76\u4e86. \u8bf7\u53c2\u8003example\nhttps://github.com/shardingjdbc/sharding-jdbc-example/tree/dev/sharding-jdbc-spring-boot-example/sharding-jdbc-spring-boot-data-mybatis-example. xxx.datasource.sharding.tablerule.names\u5e76\u975esharding jdbc\u6240\u63d0\u4f9b\u7684spring boot starter\u3002\n\u76ee\u524d\u7684\u89e3\u51b3\u65b9\u6848\uff08\u4e8c\u9009\u4e00\uff09\uff1a\n1. \u53c2\u8003\u4f8b\u5b50\uff0c\u4f7f\u7528sharding jdbc\u63d0\u4f9b\u7684spring boot starter\n2. \u81ea\u884c\u7f16\u7801\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u51b3\u76f8\u5173\u95ee\u9898\n\u76ee\u524dissue\u63cf\u8ff0\u7684\u5185\u5bb9\u662f\u91c7\u7528\u7684\u89e3\u51b3\u65b9\u6848\u4e8c\uff0c\u662fspring boot\u7684\u4f7f\u7528\u95ee\u9898\uff0c\u4e0esharding jdbc\u672c\u8eab\u5e76\u65e0\u5173\u7cfb\uff0c\u56e0\u6b64\u5c31\u4e0d\u5728\u6b64\u8ba8\u8bba\u4e86\n  . \u56e0\u4e3a\u6bcf\u4e2a\u8868\u90fdcount 1\uff0c\u7136\u540e\u505a\u4e86\u7d2f\u52a0\u805a\u5408\u3002\n\u6211\u4e0d\u786e\u5b9a\u8fd9\u6837\u505a\u662f\u5426\u5408\u7406\uff0c\u4f46\u6211\u4e5f\u60f3\u95ee\u4e00\u4e0bcount(1)\u4f7f\u7528\u5728\u4ec0\u4e48\u4e1a\u52a1\u573a\u666f\uff1f\n. \u6211\u6ca1\u6709\u5f04\u6e05\u695a\u4e0a\u4e0b\u6587\uff0c\u8bf7\u63d0\u4f9b\u5206\u7247\u7b56\u7565\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u7684ddl\u8bed\u53e5\u4ee5\u53ca\u6570\u636e\u5e93\u76f8\u5173\u8bb0\u5f55 . \u770bsql\u7684\u610f\u601d\u5e94\u8be5\u662ft_session_info\u4e0et_session_info_ext\u7684\u5206\u7247\u7b56\u7565\u4e00\u81f4\uff1f\u662f\u5426\u5fd8\u8bb0\u914dBindingTableRule\u4e86\uff1f. \u8bf7\u63d0\u4f9b\u5206\u7247\u7b56\u7565\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u7684ddl\u8bed\u53e5\u4ee5\u53ca\u6570\u636e\u5e93\u76f8\u5173\u8bb0\u5f55\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u91cd\u73b0\u95ee\u9898\u5e76\u4fee\u6539. \u6211\u770b\u6bcf\u5f20\u8868\u7684\u6570\u636e\u91cf\u5e94\u8be5\u5f88\u5c0f\uff0c\u80fd\u5426\u5c06insert\u8bed\u53e5\u4e5f\u8d34\u51fa\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u91cd\u73b0\u95ee\u9898\u4e86. \u53ef\u4ee5\u4f7f\u7528orchestration\u6a21\u5757\uff0c\u5c06\u914d\u7f6e\u4fe1\u606f\u5b58\u5165zk\u6216etcd\uff0c\u542c\u8fc7\u4fee\u6539\u5206\u7247\u7b56\u7565\u8fbe\u5230\u52a8\u6001\u4fee\u6539ActualDataNodes\u7684\u80fd\u529b. \u5982\u679c\u4e0d\u4f7f\u7528zk\u548cetcd\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u5728\u5206\u5e03\u5f0f\u7684\u573a\u666f\u4e0b\u914d\u7f6e\u4fee\u6539\u7edf\u4e00\u751f\u6548\uff0c\u56e0\u6b64\u4e00\u5b9a\u9700\u8981\u4e00\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u624d\u53ef\u4ee5. \u8bf7\u63d0\u4f9b\u7248\u672c\u4fe1\u606f\u4ee5\u53ca\u62a5\u9519\u4fe1\u606f. \u5e94\u8be5\u662fspring\u4f7f\u7528\u7684\u95ee\u9898\uff0c\u6ca1\u6709\u914d\u7f6e\u4e8b\u52a1\u7684spring\u5e94\u8be5\u4e0d\u4f1a\u63d0\u4ea4\u5bf9\u6570\u636e\u7684\u4fee\u6539\u3002\n. \u611f\u5174\u8da3\u7684\u8bdd\u7ee7\u7eed\u7cbe\u70bc\u4ee3\u7801\uff0c\u6700\u7ec8\u5c31\u4f1a\u5408\u5e76\u5230\u4e3b\u5e72. \u6ca1\u7ecf\u8fc7\u4efb\u4f55\u89e3\u91ca\u81ea\u5df1\u5173\u95edissue\uff0c\u89c6\u4e3a\u65e0\u6548\u95ee\u9898\uff0c\u8bf7\u77e5\u6089. fixed at 2.0.3. fixed at 2.0.2. 1. \u7cbe\u529b\u6709\u9650\uff0c\u76ee\u524d\u5148\u4e0d\u652f\u6301blob\u548cclob\u7b49\n2. \u4e0d\u662fsharding jdbc\u7684\u95ee\u9898. \u4e0d\u652f\u6301db\u7684\u81ea\u589e\u4e3b\u952e\uff0c\u5982\u679c\u6267\u610f\u8981\u4f7f\u7528\uff0csharding-jdbc\u5c31\u4e0d\u5bf9\u7ed3\u679c\u8fdb\u884c\u8ddf\u8fdb\u4e86\u3002\u7cbe\u529b\u6709\u9650\uff0c\u671b\u7406\u89e3. \u8bf7\u95ee\u80fd\u5426\u63d0\u4f9bpr\uff0c\u8c22\u8c22\u5566. \u8bf7\u95eepr\u4e3a\u4ec0\u4e48\u5173\u4e86. \u4f60\u597d\uff0c\u6211\u6ca1\u6709\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u610f\u601d\n\u662fselect\u4e4b\u524d\u9700\u8981\u5148\u901a\u8fc7create table\u5efa\u8868\u4e48\uff1f. \u63d0\u95ee\u8005\u957f\u65f6\u95f4\u65e0\u8ddf\u8fdb\uff0c\u4ece\u95ee\u9898\u63cf\u8ff0\u770b\u5e94\u8be5\u662f\u7406\u89e3\u95ee\u9898\uff0c\u5e76\u975esharding jdbc\u7684bug\uff0c\u56e0\u6b64\u5173\u95ed\u4e86. \u6211\u6ca1\u6709\u770b\u61c2\uff0c\u80fd\u5426\u5728\u68b3\u7406\u4e00\u4e0b\u95ee\u9898. \u597d\u50cf\u662f\u7528order id\u5206\u7247\uff0c\u7136\u540e\u6309\u7167id\u5220\u9664\u662f\u5427\n\u770b\u63cf\u8ff0\u662f\u628a\u76f8\u5173id\u7684\u6570\u636e\u5220\u4e86\uff1f\u8fd9\u4e2a\u662f\u7b26\u5408\u9884\u671f\u7684\u5427. \u8fd9\u662f\u6b63\u786e\u7684\u884c\u4e3a\u5427. delete order where id = 1;\u7136\u540e\u628a\u6240\u6709\u7684id=1\u7684\u90fd\u5220\u4e86\uff0c\u96be\u9053\u4e0d\u662f\u671f\u671b\u884c\u4e3a\u4e48\uff1f\n\u5982\u679c\u4e0d\u662f\uff0c\u671f\u671b\u884c\u4e3a\u662f\u4ec0\u4e48. \u8fd9\u662f\u4e1a\u52a1\u884c\u4e3a\uff0csharding-jdbc\u53ea\u662f\u5fe0\u5b9e\u6267\u884csql\u800c\u5df2\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u9488\u5bf9\u4e1a\u52a1\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\uff0c\u671b\u7406\u89e3. \u8bf7\u9605\u8bfb\u6587\u6863\u4e2d\u7684\u4e0d\u652f\u6301SQL\u5217\u8868\uff0c\u4e0d\u652f\u6301\u5b50\u67e5\u8be2. \u6211\u6709\u70b9\u6ca1\u7406\u89e3\u3002\nt1\u7b49\u5f85db1\u7684\u9501\uff0ct2\u7b49\u5f85db2\u7684\u9501\uff0c\u4e92\u76f8\u4e0d\u5e72\u6270\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6b7b\u9501. T1\u4e2d\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u62ff\u5230db2\u884c\u7ea7\u9501\uff0c\u662f\u4e3a\u4ec0\u4e48\uff1ft1\u4e0d\u662f\u53ea\u548cdb1\u76f8\u5173\u4e48. \u80fd\u5426\u628a\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u63d0\u4ea4\u5230github\u4e0a\uff0c\u5e76\u4e14\u628a\u94fe\u63a5\u53d1\u8fc7\u6765\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u3002\n\u76ee\u524d\u7684\u4ee3\u7801\u7247\u6bb5\u770b\u4e0d\u5230\u5168\u8c8c\uff0c\u8c22\u8c22. \u7531\u4e8e\u6700\u8fd1\u8f83\u5fd9\uff0c\u76f4\u5230\u4eca\u5929\u624d\u6709\u65f6\u95f4\u7ec6\u770b\u4e00\u4e0b\u8fd9\u4e2aissue\u3002\n\u6211\u5bf9\u8fd9\u4e2aissue\u8fd8\u662f\u6709\u7591\u95ee\uff0c\u8bf7\u95ee\uff0c\u6240\u8c13\u7684\u6b7b\u9501\uff0c\u662fjdbc\u672c\u6765\u5c31\u6b7b\u9501\uff0c\u8fd8\u662f\u4f7f\u7528sharding jdbc\u5bfc\u81f4\u7684\u6b7b\u9501\u3002\u5982\u679c\u662f\u540e\u8005\uff0c\u662f\u6839\u636e\u4ec0\u4e48\u6765\u786e\u5b9a\u7684\uff1f\n\u56e0\u4e3a\u6211\u770b\u5404\u4f4d\u7684\u8ba8\u8bba\uff0c\u4f3c\u4e4e\u6709\u4e9b\u504f\u5dee\uff0c\u6bd4\u5982\u6709\u4eba\u8bf4\uff0c\u5148delete\u5c31\u6ca1\u4e8b\uff0c\u6709\u4eba\u8bf4\u662f\u56e0\u4e3adelete\u592a\u6162\u5bfc\u81f4\u7684db\u9501\u3002\u8fd9\u4e9b\u5176\u5b9e\u548csharding jdbc\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0csharding jdbc\u4e5f\u65e0\u6cd5\u505a\u4efb\u4f55\u4fee\u6539\uff0c\u8fd9\u662f\u81ea\u5df1\u7684\u5e94\u7528\u7684\u95ee\u9898\u3002\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u660e\u786eissue\uff0c\u8fd8\u662f\u9700\u8981\u6709\u76f8\u5173\u95ee\u9898\u7684\u540c\u5b66\u5c06\u6b64\u95ee\u9898\u660e\u786e\u4e0b\uff0c\u8c22\u8c22\u3002\n@dongweizhao \u53e6\u5916\uff0c\u8bf7\u786e\u8ba4\u4e0b\uff0c\u4e0d\u4f7f\u7528sharding jdbc\u4e0d\u4f1a\u6b7b\u9501\u4e48\uff1f. \u660e\u767d\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u4e0d\u662f\u548c#422\u662f\u7c7b\u4f3c\u7684\uff1f\u9700\u8981\u901a\u8fc7\u591a\u4e2a\u8fde\u63a5\u6765\u5904\u7406\uff0c\u4ee5\u63d0\u5347\u6027\u80fd\u548c\u907f\u514d\u9501\u3002\u4f46\u95ee\u9898\u662f\uff0c\u4ec5\u5206\u8868\u65e0\u6cd5\u4fdd\u8bc1\u540c\u4e00\u4e8b\u52a1\n\u6709\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u601d\u8def\u4e48\uff0c\u53ef\u4ee5\u8ba8\u8bba\u8ba8\u8bba. fixed at #1186 . \u8c22\u8c22\u5efa\u8bae\u3002\n\u6211\u4eec\u4f1a\u5c3d\u91cf\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u76ee\u524d\u6d4b\u8bd5\u8986\u76d6\u738780%\u4ee5\u4e0a\uff0c\u5e94\u8be5\u662f\u5df2\u77e5\u5f00\u6e90\u9879\u76ee\u4e2d\u6d4b\u8bd5\u8986\u76d6\u7387\u6bd4\u8f83\u9ad8\u7684\uff08\u5927\u90e8\u5206\u90fd\u662f20%\uff09\n\u6211\u4eec\u672a\u6765\u4e5f\u4f1a\u5bf9\u4ee3\u7801\u66f4\u591a\u7684\u5355\u5143\u6d4b\u8bd5. \b\u90fd\u652f\u6301\u3002\u8bf7\u53c2\u89c1example. \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u5e26\u6709\u81ea\u589e\u4e3b\u952e\u7684example. \u5e94\u8be5\u662f\u522b\u540d\u5bfc\u81f4\u7684\u591a\u4f59\u7684\u8865\u5217\u5bfc\u81f4\u7684\u95ee\u9898. fixed at 2.0.2. \u80fd\u5426\u63d0\u4f9bpr\u548c\u76f8\u5173\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1f. \u53ef\u4ee5\u7684\u8bdd\u8fd8\u662f\u63d0\u4ea4\u4e00\u4e2apull request\u5427\u3002\u5f00\u6e90\u91cd\u5728\u53c2\u4e0e. fixed at 2.0.2. \u5df2\u7ecf\u5173\u95ed\u7684issue\uff0c\u529f\u80fd\u5f53\u7136\u662f\u5df2\u5b9e\u73b0\u3002\u8bf7\u9605\u8bfb\u6587\u6863\uff0c\u67e5\u8be2sql.show\u76f8\u5173\u5173\u952e\u5b57. duplicate with #563 . \u8bf7\u63d0\u4f9b\u53ef\u4f9b\u91cd\u73b0\u7684\u4ee3\u7801\u81f3github\uff0c\u5e76\u5c06\u8fde\u63a5\u53d1\u9001\u81f3\u8fd9\u91cc. \u8bf7\u5c06\u53ef\u8fd0\u884c\u7684\u4ee3\u7801\u4ee5\u53ca\u5efa\u8868\u8bed\u53e5\u63d0\u4ea4\u81f3\u60a8github\u7684\u79c1\u4ebarepo\uff0c\u6211\u4eec\u65e0\u6cd5\u6839\u636e\u4ee3\u7801\u7247\u6bb5\u91cd\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\n\u53e6\u5916\uff0c1.x\u7248\u672c\u5df2\u7ecf\u4e0d\u518d\u66f4\u65b0\uff0c\u80fd\u5426\u4f7f\u75282.x\u7248\u672c\u91cd\u73b0\u6b64\u95ee\u9898\uff1f. \u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863\u3002\u4e0d\u652f\u6301sql\u90e8\u5206. \u8c22\u8c22\u8d21\u732e\u4ee3\u7801. \u76ee\u524d\u8003\u8651\uff0c\u5373\u4f7f\u5927\u91cf\u7684new Tokenizer\u7684\u671d\u751f\u5915\u706d\u7684\u5bf9\u8c61\uff0c\u4e5f\u662f\u8fdb\u884c\u901f\u5ea6\u5f88\u5feb\u7684young gc\uff0c\u5e94\u8be5\u4e0d\u4f1a\u5bfc\u81f4full gc\uff0c\u8fdb\u800c\u5927\u5e45\u5f71\u54cd\u6027\u80fd\u3002\n\u56e0\u6b64\uff0c\u4e0d\u4f7f\u7528new\uff0c\u800c\u662f\u590d\u7528Tokenizer\uff0c\u662f\u5426\u6709\u76f8\u5173\u7684\u6027\u80fd\u6d4b\u8bd5\u62a5\u544a\uff0c\u80fd\u786e\u5b9a\u5e26\u6765\u4e86\u6027\u80fd\u7684\u63d0\u5347\uff1f. \u5e76\u65e0\u672c\u8d28\u63d0\u5347\u5c31\u5148\u4e0d\u5408\u5e76\u4fee\u6539\u6838\u5fc3\u7684\u4ee3\u7801\u4e86. \u8fd9\u4e2apr\u5bfc\u81f4\u5728travis\u7684\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u6709\u901a\u8fc7\uff0c\u9700\u8981\u5148\u8ba9\u6d4b\u8bd5\u8dd1\u901a\u5427. \u53e6\u5916\u6211\u60f3\u95ee\u4e00\u4e0b\u8fd9\u4e2a\u4fee\u6539\u80fd\u5bf9\u6027\u80fd\u5e26\u6765\u4ec0\u4e48\u63d0\u5347\u4e48\uff1f\u662f\u5426\u6709\u76f8\u5173\u6570\u636e\u4f5c\u4e3a\u652f\u6491\uff1f. \u4fee\u6539\u6838\u5fc3\u5f88\u5bb9\u6613\u51fa\u95ee\u9898\u3002\u5982\u679c\u5e76\u65e0\u672c\u8d28\u63d0\u5347\u7684\u8bdd\uff0cissue\u5148\u5173\u95ed\u5566\u3002. To prevent columns or alias use MySQL\u2018s key words.. fixed at 2.0.2. \u60a8\u5e76\u672a\u63d0\u4f9b\u7248\u672c\u53f7\u3002\u8fd9\u4e2abug\u5df2\u7ecf\u4fee\u590d\uff0c\u5e94\u8be5\u662f\u4f7f\u7528\u7684\u7248\u672c\u6bd4\u8f83\u65e7\u5bfc\u81f4. \u8bf7\u5148\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863\uff0c\u5982\u65e0\u5145\u8db3\u65f6\u95f4\uff0c\u8bf7\u81f3\u5c11\u9605\u8bfb\u4e0bfaq. \u6211\u6ca1\u6709\u7406\u89e3\u4f60\u7684\u610f\u601d\uff0c\u80fd\u5426\u63d0\u4f9b\u7248\u672c\u53f7\uff0c\u62a5\u9519\u4fe1\u606f\uff0csql\uff0c\u8868\u7ed3\u6784\uff0c\u8868\u6570\u636e\uff0c\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u6267\u884c\u4ee3\u7801\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002. \u8fd9\u786e\u5b9e\u662f\u95ee\u9898\uff0c\u4f46\u662f\u7531\u4e8e\u7cbe\u529b\u6709\u9650\uff0c\u6211\u4eec\u65e0\u6cd5\u5c06\u8fd9\u6837\u7684SQL\u89e3\u6790\u5168\u90e8\u5b9e\u73b0\u3002\n\u8bf7\u6807\u51c6\u5316\u81ea\u5df1\u7684SQL\uff0c\u6211\u4eec\u76ee\u524d\u6682\u65f6\u65e0\u8ba1\u5212\u4fee\u6539\u3002. \u5982\u679c\u6709\u5174\u8da3\uff0c\u4e5f\u6b22\u8fce\u63d0\u4ea4pr. \u6211\u6ca1\u6709\u7406\u89e3\u4f60\u7684\u610f\u601d\uff0c\u80fd\u5426\u63d0\u4f9b\u7248\u672c\u53f7\uff0c\u62a5\u9519\u4fe1\u606f\uff0csql\uff0c\u8868\u7ed3\u6784\uff0c\u8868\u6570\u636e\uff0c\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u6267\u884c\u4ee3\u7801\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\n\u8bf7\u5c3d\u91cf\u5728\u63d0\u4ea4issue\u65f6\u8bf4\u660e\u767d\u4e0a\u4e0b\u6587\uff0c\u4ee5\u53ca\u586b\u5199\u6211\u4eec\u63d0\u4f9b\u7684\u4fe1\u606f\u6a21\u677f\uff0c\u8c22\u8c22. ExecutorEngine\u662fsharding jdbc\u5185\u90e8\u4f7f\u7528\u7684\u7c7b\uff0c\u4e0d\u63d0\u4f9b\u5916\u90e8\u670d\u52a1\u3002\u5916\u56f4\u670d\u52a1\u90fd\u5728api\u5305\u4e2d\u3002\n\u6211\u4e0d\u786e\u5b9a\u8fd9\u4e2aissue\u662f\u5426\u6709\u4ef7\u503c\u82b1\u8d39\u7cbe\u529b\u4fee\u6539\u3002\n\u80fd\u5426\u786e\u5b9a\u4e00\u4e0b\uff0c\u5728sharding jdbc\u7684\u4f7f\u7528\u4e2d\uff0c\u800c\u4e0d\u662f\u5916\u90e8\u81ea\u884c\u4f7f\u7528\uff0c\u662f\u5426\u6709\u95ee\u9898?\n. \u53ef\u5426\u63d0\u4f9bpull request. \u611f\u8c22\u63d0\u4f9b\u4ee3\u7801. \u5e94\u7528\u4ee3\u7801\u5bfc\u81f4\u7684\u4e3b\u952e\u51b2\u7a81\uff0c\u8bf7\u81ea\u884c\u89e3\u51b3. \u5e94\u8be5\u662f\u4e4b\u524d\u6539\u7684\u4e00\u4e2aissue\u5e76\u6ca1\u6709\u5b8c\u5168\u60f3\u6e05\u695a\uff0c\u8fd9\u4e2abug\u4e0b\u4e00\u7248\u672c\u4f1a\u4fee\u590d. \u7ecf\u8fc7\u6392\u67e5\uff0c\u8fd9\u662f\u4f7f\u7528\u65b9\u7684\u95ee\u9898\u3002\n\u4e0a\u9762\u7684@neo37927 \u540c\u5b66\u63d0\u51fa\u7684\u4ee3\u7801\u548c\u6b64issue\u6ca1\u6709\u5173\u7cfb\u3002\u4ee3\u7801\u4e2d\u7684\u8f6c\u4e3a\u5c0f\u5199\u662f\u4f9blogic table\u5224\u65ad\u4f7f\u7528\uff0c\u662f\u8ba9logic\u65e0\u8bba\u662f\u5927\u5199\u8fd8\u662f\u5c0f\u5199\uff0c\u90fd\u80fd\u5339\u914d\u5230sharding rule\u3002\n\u5173\u4e8e\u6b64\u95ee\u9898\uff0c\u7531\u4e8e\u4f7f\u7528\u65b9\u914d\u7f6eacutalDataNode\u4f7f\u7528\u7684\u662f\u5c0f\u5199\uff0c\u56e0\u6b64\u6539\u5199\u5b8c\u7684\u771f\u5b9e\u8868\u540d\u79f0\u4e3a\u5c0f\u5199\u3002\u5982\u679c\u5c06acutalDataNode\u914d\u7f6e\u4e3a\u5927\u5199\uff0c\u90a3\u4e48\u6539\u5199\u5b8c\u7684\u771f\u5b9e\u8868\u540d\u79f0\u81ea\u7136\u4e3a\u5927\u5199\u3002. We should make clear with rule here.\nIf use default data source or use database sharding only, the actual data nodes can absent, the default value is all real data sources + low case real table names.\nIt is a problem if data base is case sensitive, the solution is configure the actual data nodes for now.. \u80fd\u5426\u63d0\u4f9b\u5177\u4f53\u914d\u7f6e\u3002yaml\u7684\u6807\u51c6\u914d\u7f6e\u662f\u53ef\u4ee5\u6362\u884c\u4e48\uff1f\u80fd\u5426\u63d0\u4f9b\u76f8\u5173\u7684\u53c2\u8003\u4fe1\u606f. \u611f\u8c22\u63d0\u4f9b\u53c2\u8003\u610f\u89c1\u3002\u80fd\u5426\u63d0\u4f9bpull request\uff0c\u4f7f\u60a8\u6210\u4e3asharding-jdbc\u7684\u8d21\u732e\u8005\u3002\n\u8c22\u8c22. fixed at 2.0.3. \u611f\u8c22\u63d0\u4f9b\u5efa\u8bae\u3002\u8fd9\u4e2a\u5efa\u8bae\u5f88\u6709\u4ef7\u503c\u3002\u6211\u4eec\u5bf9\u67d4\u6027\u4e8b\u52a1\u63d0\u5347\u65f6\u4f1a\u53c2\u8003\u8fd9\u4e2a\u5efa\u8bae\u53bb\u505a\u3002\n\u76ee\u524d\u67d4\u6027\u4e8b\u52a1\u6682\u65f6\u65e0\u66f4\u65b0\u8ba1\u5212\uff0c\u53ef\u80fd\u8981\u7b49\u51e0\u4e2a\u8fed\u4ee3\u540e\u518d\u8bf4\u3002\u56e0\u6b64\u5982\u679c\u60a8\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5173\u7684pr\uff0c\u8c22\u8c22. BASE transaction will re-design at 3.1.0, so this issue is expired. thank you very much. 1.5.x\u7248\u672c\u662f\u4e0d\u53ef\u4ee5\u7684\u3002\n2.x\u7248\u672c\u52a8\u6001\u8868\u5df2\u7ecf\u53d6\u6d88. \u4f60\u597d\uff0c\u6211\u82b1\u4e86\u4e24\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u628a\u6240\u6709\u7684example\u90fd\u8fc7\u4e86\u4e00\u904d\uff0c\u6ca1\u6709\u53d1\u73b0\u4f60\u8bf4\u7684\u95ee\u9898\u3002\n\u5982\u679c\u4f60\u8ba4\u4e3a\u4ecd\u7136\u6709\u95ee\u9898\uff0c\u8bf7\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\u5e76reopen\u8fd9\u4e2aissue\uff0c\u4f9b\u6211\u4eec\u91cd\u73b0\uff0c\u8c22\u8c22. duplicate with #522. \u611f\u8c22\u63d0\u4f9b\u4f8b\u5b50\uff0c\u6211\u4eec\u518d\u8bd5\u4e00\u4e0b. \u6211\u770b\u4e00\u4e00\u4e0b\u62a5\u9519\u4fe1\u606f\uff0c\u5e76\u4e0d\u662f\u53ea\u8bfb\u7684\u5e93\u4e0d\u80fd\u5199\u5165\u8fd9\u6837\u7684\u9519\u8bef\uff0c\n\u800c\u662f\u4f60\u6dfb\u52a0\u7684order_no\u6dfb\u52a0\u91cd\u590d\uff0c\n\u8fd9\u4e2aorder_no\u6dfb\u52a0\u91cd\u590d\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u662f\u4e3b\u5e93\u62a5\u51fa\u6765\u7684\u8fd8\u4f1a\u4ece\u5e93\uff1f\n\u4f60\u7684\u8bfb\u5199\u5206\u79bb\u662f\u600e\u4e48\u914d\u7f6e\u7684\uff1f\u8bf7\u8d34\u51fa\u6765\u770b\u770b\n. \u8bfb\u5199\u5206\u79bb\u914d\u7f6e\u4e00\u4e2a\u6570\u636e\u6e90\u8fd9\u79cd\u660e\u663e\u9519\u8bef\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5c31\u4e0d\u6539\u4e86\u3002. duplicate with #522. \u611f\u8c22\u8d21\u732e\u4ee3\u7801. \u8c22\u8c22\u8d21\u732e\u4ee3\u7801\u3002\n\u8fd9\u4e2apr\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u7528\u4e8e\u89e3\u6790\u5173\u952e\u8bcd\u662f\u4e48\uff1f\u6211\u89c9\u5f97\u53ef\u4ee5\u628aselect\u548cupdate\u7684sql\u5408\u4e8c\u4e3a\u4e00\uff0c\u5c31\u662f\u4e3a\u4e86\u770b\u5173\u952e\u8bcd\u5982\u4f55\u5206\u8bcd\u5c31\u597d\u4e86\u3002lexer\u5c5e\u4e8e\u8bcd\u6cd5\u89e3\u6790\uff0c\u65e0\u9700\u5173\u6ce8\u662fselect\u8fd8\u662fupdate\u3002\n\u56e0\u6b64\u8fd9\u4e2a\u6d4b\u8bd5\u4e5f\u6ca1\u6709\u4f7f\u6d4b\u8bd5\u8986\u76d6\u7387\u63d0\u5347\u3002\n\u6240\u4ee5\uff0c\u54b1\u4eec\u53ef\u4ee5\u63a2\u8ba8\u4e0b\uff0c\u5199\u54ea\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u66f4\u597d\u4e9b\u3002. \u975e\u5e38\u6b22\u8fce\u4f60\u7684\u53c2\u4e0e\u3002lexer\u7684\u5173\u6ce8\u70b9\u662f\u8bcd\u6cd5\u89e3\u6790\u5bf9\u5c31\u53ef\u4ee5\uff0c\u65e0\u9700\u5173\u6ce8\u662f\u4ec0\u4e48sql\u3002sql\u7684\u8bed\u6cd5\u89e3\u6790\u5728parser\u91cc\u9762\u3002\n\u6240\u4ee5\u5c3d\u91cf\u589e\u52a0\u4e9blexer\u7684\u5404\u79cd\u8bcd\u6cd5\u89e3\u6790\u573a\u666f\u6bd4\u8f83\u597d\uff0c\u6bd4\u5982\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5404\u79cd\u5b57\u5178\u7b49\u7b49\u3002. \u8fd9\u4e2a\u662f\u6b63\u786e\u7684\u3002\n\u56e0\u4e3asharding jdbc\u5c06sql\u89e3\u6790\u5206\u4e3a\u8bcd\u6cd5\u89e3\u6790\u548c\u8bed\u6cd5\u89e3\u6790\uff0clexer\u662f\u8bcd\u6cd5\u89e3\u6790\uff0c\u53ea\u662f\u5c06sql\u6839\u636e\u5b57\u5178\u62c6\u5206\u4e3a\u4e00\u4e2a\u4e2a\u7684\u8bcd\uff0c\u4e0d\u4e00\u5b9a\u5b8c\u5168\u51c6\u786e\u3002\u5728\u8bed\u6cd5\u89e3\u6790\u4e2d\uff0c\u624d\u4f1a\u9488\u5bf9\u4e0a\u4e0b\u6587\u8fdb\u884c\u5904\u7406. \u4e0d\u652f\u6301\u8fd9\u6837\u7684\u5b50\u67e5\u8be2\uff0c\u8bf7\u5148\u9605\u8bfb\u6587\u6863. \u8c22\u8c22\u5e2e\u5fd9\u5206\u6790\u95ee\u9898\uff0c\u80fd\u5426\u76f4\u63a5\u63d0\u4ea4pull request\uff0c\u60a8\u5c06\u6210\u4e3asharding jdbc\u7684\u8d21\u732e\u8005. \u4e0d\u8fc7\u6211\u4e5f\u770b\u5230\u4e86\u8fd9\u7bc7\u5e16\u5b50\uff1ahttps://stackoverflow.com/questions/34469258/oracle-jdbc-batch-execution-doesnt-return-actual-count-of-affected-rows\n\u91cc\u9762\u8bf4oracle\u5bf9\u4e8epreparestatement\u8fd4\u56de-2\u8868\u793a\u6210\u529f\u3002\u56e0\u6b64\u6211\u4e0d\u786e\u5b9a\u8fd9\u6837\u6539\u5c31\u80fd\u89e3\u51b3\u95ee\u9898\u3002\n\u4f46\u662f\u60a8\u7684\u8fd9\u79cd\u4fee\u6539\u65b9\u5f0f\u81f3\u5c11\u4e0d\u4f1a\u5bf9\u4ee3\u7801\u672c\u8eab\u4ea7\u751f\u5f71\u54cd\u3002\n\u8fd9\u4e2a\u9700\u8981\u786e\u5b9a\u4e0b\uff0c\u662f\u4e0d\u662foracle\u7279\u5b9a\u7248\u672c\u7684\u9a71\u52a8\u624d\u4f1a\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898. \u65e2\u7136\u662foracle\u672c\u8eab\u7684\u95ee\u9898\uff0c\u4e0esharding jdbc\u65e0\u5173\u4e86. oracle\u7684getUpdateCount\u8fd4\u56de-2\u662f\u6b63\u786e\u884c\u4e3a\uff0c\u8fd9\u662foracle\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u7684\u3002\u56e0\u6b64\u8fd9\u91ccsharding jdbc\u53ea\u662f\u7ef4\u6301\u4e86oracle\u7684\u539f\u8c8c\uff0c\u672a\u505a\u4fee\u6539\u800c\u5df2\u3002\n\u6211\u4e0d\u5efa\u8baesharding jdbc\u53bb\u53d8\u66f4\u539f\u751fjdbc\u7684\u884c\u4e3a. \u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\u3002\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\u3002\n. duplicate with #522. \u6211\u4eec\u518d\u6700\u540e\u590d\u73b0\u4e00\u6b21\u5427. \u6267\u884csharding-jdbc-spring-boot-data-mybatis-example\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efaschema\uff0c\u8fd9\u4e2aschema\u662f\u4f60\u6839\u636eexample\u4e2d\u63d0\u4f9b\u7684\u521b\u5efa\u7684\uff1f\u8fd9\u4e2aschema\u91cc\u9762\u662f\u5305\u542b\u4ece\u5e93\u7684\u5efa\u8868schema\u7684\u3002\n\u8bf7\u786e\u5b9a\u4e0b\u8fd9\u4e2a\u4ece\u5e93\u662f\u5982\u4f55\u521b\u5efa\u51fa\u6765\u7684\uff0c\u662f\u4e0d\u662f\u901a\u8fc7\u590d\u5236schema\u521b\u5efa\u7684\uff1f. \u8bf7\u63d0\u4f9bmysql\u8bfb\u5199\u5206\u79bb\u914d\u7f6e. \u8bf7\u95ee\u8fd9\u6b21\u6ca1\u6709\u51fa\u73b0order_no\u5df2\u7ecf\u5b58\u5728\u7684exception\u4e48?\n\u4e4b\u524d\u7684exception\u662f\u5982\u4f55\u51fa\u73b0\u7684\uff1f. \u4f60\u597d\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06example\u5b8c\u6574\u7684\u8fd0\u884c\u4e86\u4e00\u904d\uff0c\u4ee3\u7801\u4e5f\u8fc7\u4e86\u4e00\u904d\uff0c\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u4e0e\u7cbe\u529b\uff0c\u4f46\u5e76\u65e0\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u8fd9\u662f\u60a8\u81ea\u8eab\u73af\u5883\u7684\u95ee\u9898\u3002\n\u8bf7\u4e0d\u8981\u5c31\u6b64\u95ee\u9898\u518d\u53cd\u590d\u63d0\u4ea4issue\u4e86\uff0c\u8c22\u8c22\u4f60\u7684\u914d\u5408\u4e0e\u7406\u89e3\u3002. \u62b1\u6b49\uff0c\u6211\u4eec\u5b9e\u5728\u65e0\u6cd5\u91cd\u73b0\uff0c\u5982\u679c\u60a8\u89c9\u5f97\u6709\u95ee\u9898\uff0c\u6b22\u8fce\u63d0\u4f9bpr. \u6211\u4eec\u5c3d\u91cf\u5c06\u4f7f\u7528\u8005\u63d0\u51fa\u7684issue\u91cd\u73b0\u5e76\u4fee\u6539bug\uff0c\u4f46\u4e5f\u8bf7\u4f60\u6362\u4f4d\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u771f\u5982\u4f60\u6240\u8bf4\uff0c\u7528\u4e86example\u5c31\u80fd\u91cd\u73b0\uff0c\u6211\u4eec\u4e4b\u524d\u6539\u7684issue\uff0c\u4ee5\u53ca\u6211\u4eec\u8fde\u7eed\u8bd5\u4e86\u8fd9\u4e48\u591a\u6b21\uff0c\u90fd\u662f\u5728\u505a\u4ec0\u4e48\u5462\uff1f\n\u6211\u8ba4\u4e3a\u8981\u4e0d\u5c31\u662f\u6709\u4ec0\u4e48\u5173\u952e\u4fe1\u606f\u4f60\u548c\u6211\u4eec\u5e76\u672a\u53d1\u73b0\uff0c\u8981\u4e0d\u5c31\u662f\u4f60\u7684\u6570\u636e\u5e93\u73af\u5883\u6216sharding jdbc\u7684\u7248\u672c\u6709\u95ee\u9898\u3002\n\u6211\u4eec\u90fd\u662f\u7a0b\u5e8f\u5458\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u4e00\u4ef6\u7b80\u5355\u7684\u5f88\u660e\u663e\u7684\u4e8b\u60c5\u6765\u56de\u626f\u76ae\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u672a\u91cd\u73b0\uff0c\u662f\u771f\u7684\u6ca1\u6709\u91cd\u73b0\u3002sharding jdbc\u662f\u5927\u5bb6\u7684\uff0c\u6ca1\u5fc5\u8981\u4e3a\u4e86\u9690\u85cfbug\u800c\u505a\u4e8b\u60c5. duplicate with #522. \u8fd9\u4e2apr\u6211\u8fd8\u4e0d\u80fd\u5408\u5e76\uff0c\u8fd9\u5757\u4ee3\u7801\u7684\u4fee\u6539\u65e0\u6cd5\u89e3\u51b3oracle\u66f4\u65b0\u6761\u6570\u8fd4\u56de\u4e0d\u6b63\u786e\u7684\u95ee\u9898\u3002\u9700\u8981\u5bf9\u7167\u7248\u672c\uff0c\u4ee5\u53caoracle\u5b98\u65b9\u6587\u6863\u6765\u786e\u5b9agetUpdateCount\u7684\u6b63\u786e\u884c\u4e3a\u624d\u53ef\u4ee5. duplicate with #600 . duplicate with #522 . \u5bf9\u4e8e\u4e92\u8054\u7f51\u5e94\u7528\u6765\u8bf4\uff0c\u66f4\u52a0\u503e\u5411\u4e8e\u5c06\u8ba1\u7b97\u653e\u5165\u5e94\u7528\u800c\u975e\u6570\u636e\u5e93\u3002\n\u6211\u4eec\u7cbe\u529b\u6709\u9650\uff0c\u65e0\u6cd5\u5c0680%\u7684\u7cbe\u529b\u653e\u5728\u4f59\u4e0b\u768420%\u9700\u6c42\u4e0a\u3002\n\u56e0\u6b64\u6211\u4eec\u6682\u65f6\u65e0\u6cd5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\n\u5982\u679c\u4f60\u6709\u5174\u8da3\u548c\u65f6\u95f4\uff0c\u6b22\u8fce\u63d0\u4f9bpr\u3002. \u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\u3002\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\u3002. \u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\u3002\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\u3002. \u8bf7\u5c1d\u8bd52.x\u7684\u7a33\u5b9a\u7248\u672c\u30021.5\u4e4b\u524d\u7684\u7248\u672c\u4e0e\u73b0\u5728\u7684sharding jdbc\u57fa\u672c\u4e0d\u662f\u4e00\u4e2a\u4ea7\u54c1\u4e86. Sorry, IDC is unstable recently, we have already transfer to a new IDC.. \u4e0d\u5355\u4f8b\uff0c\u800c\u662f\u5c06threadlocal copy\u5230\u76ee\u6807\u7ebf\u7a0b\u662f\u4e0d\u662f\u66f4\u597d\u4e00\u4e9b\n\u5355\u4f8b\u53ef\u80fd\u8fd8\u9700\u8981\u68b3\u7406\u4e00\u4e0b\u5bf9\u76ee\u524dhint\u7684\u76f8\u5173\u5f71\u54cd\u3002. \u597d\u7684\uff0c\u611f\u8c22\u8d21\u732e\u4ee3\u7801\u3002\u53ea\u63d0\u4f9bget\u5bf9\u539f\u6765\u7a0b\u5e8f\u903b\u8f91\u5e94\u8be5\u6ca1\u6709\u5f71\u54cd\u3002\u6211\u76f4\u63a5\u5408\u5e76\u4e86. \u53ef\u4ee5\uff0c\u5206\u7247\u7b56\u7565\u662f\u81ea\u5df1\u5199\u7684\uff0c\u7075\u6d3b\u6027\u5f88\u9ad8\uff0c\u591a\u5c11\u4e2a\u5206\u533a\u7ef4\u5ea6\u90fd\u53ef\u4ee5\u3002. finished at 2.0.3. \u8fd9\u4e2axml\u5e94\u8be5\u8fd8\u9700\u8981\u8ba8\u8bba\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n\u7f3a\u5c11sharding rule\u7684\u914d\u7f6e\u7ef4\u5ea6\uff0c\u5305\u62ec\u4ec5\u5206\u5e93\u3001\u4ec5\u5206\u8868\u3001\u53c8\u5206\u5e93\u53c8\u5206\u8868\u3001\u5305\u542bdefault data source\u3001\u4ec5\u8bfb\u5199\u5206\u79bb\u3001\u4ec5\u5206\u5e93+\u8bfb\u5199\u5206\u79bb\u3001\u4ec5\u5206\u8868+\u8bfb\u5199\u5206\u79bb\u3001\u5206\u5e93\u5206\u8868+\u8bfb\u5199\u5206\u79bb\u3001\u4f7f\u7528Hint\u7684\u8bfb\u5199\u5206\u79bb\u3002\nstatement=\"true\" preparestatement=\"true\"\u8fd9\u4e24\u4e2a\u4e2a\u4eba\u8ba4\u4e3a\u53ef\u4ee5\u4e0d\u9700\u8981\u914d\u7f6e\uff0c\u56e0\u4e3a\u8fd9\u662f\u6d4b\u8bd5\u7528\u4f8b\u5fc5\u987b\u8dd1\u7684\u9879\u76ee\nexecute\u548cexecuteQuery\u4ee5\u53caexecute\u548cexecuteUpdate\u7684SQL\u662f\u4e00\u7ec4\uff0c\u5e94\u8be5\u6ca1\u6709\u5fc5\u8981\u914d\u7f6e\u4e24\u5957\u3002\u6d4b\u8bd5\u6846\u67b6\u5e94\u8be5\u6839\u636eSQL\u7684\u7c7b\u578b\u81ea\u52a8\u5224\u65ad\u662f\u6267\u884cexecute\u548cexecuteQuery\uff0c\u8fd8\u662fexecute\u548cexecuteUpdate\uff0c\u4e24\u4e24\u4e00\u7ec4\nSQL\u53c2\u6570\u5982\u4f55\u4f20\u9012\u9700\u8981\u660e\u786e\ncheck\u7684order=ture\u4e0d\u592a\u7406\u89e3\u662f\u4ec0\u4e48\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u662f\u65e0\u9700\u68c0\u67e5\u987a\u5e8f\u7684\u4e48\ninit\u6570\u636e\u5982\u4f55\u4e0e\u8fd9\u4e2axml\u4e00\u4f53\u5316\n\u7f3a\u5931parse context\u65ad\u8a00\n\n\u56e0\u6b64\uff0c\u6211\u611f\u89c9\u4e00\u4e2axml\u7684\u4f2a\u4ee3\u7801\u53ef\u80fd\u5927\u81f4\u662f\uff1a\nxml\n<asserts sharding-rule-config=\"xxx\">\n    <assert id=\"\" init-data-file=\"xxx\" expected-data-file=\"xxx\">\n        <sql></sql>\n        <parameters>\n            <parameter value=\"1\" type=\"int\">\n            <parameter value=\"test\" type=\"String\">\n        </parameters>\n        <parse-context>\n            <table />\n            <select-items />\n            <order-by-items />\n            <group-by-items />\n            ... other context\n        </parse-context>\n    <assert/>\n</asserts>. \u56de\u7b54\u4e00\u4e0b\u4e0a\u9762\u7684\u95ee\u9898\uff1a\n\u6b65\u9aa41\u548c\u6b65\u9aa46\u5e94\u8be5\u662f\u4e00\u4f53\u5316\u7684\u4e00\u90e8\u5206\uff0c\u6211\u89c9\u5f97\u5728\u8bbe\u8ba1\u65f6\u81f3\u5c11\u9700\u8981\u8003\u8651\u3002\n\u56e0\u6b64\u4e0a\u9762\u63d0\u5230\u7684\u7b2c1\u70b9\uff0c\u5c31\u662f\u589e\u52a0sharding rule \u548c init data \u6587\u4ef6\u7684\u5f15\u7528\u3002\n\u7b2c3\u70b9\uff0c\u662f\u6b63\u786e\u7684\u3002\n\u7b2c4\u70b9\uff0c\u7ef4\u6301\u73b0\u72b6\u6211\u89c9\u5f97\u5c31\u53ef\u4ee5\uff0c\u76ee\u524d\u662f\u7528%s\u5360\u4f4d\uff0c\u7136\u540e\u66ff\u6362\u4e3a\uff1f\u6216\u8005\u662f\u771f\u5b9e\u7684\u503c\u3002\n\u7b2c5\u70b9\uff0c\u6211\u89c9\u5f97\u90fd\u5e94\u8be5\u65ad\u8a00\u987a\u5e8f\uff0c\u4e0d\u7136\u65ad\u8a00\u662f\u4e0d\u4e25\u8c28\u7684\u3002\n\u7b2c7\u70b9\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0bSQLParsingEngineTest\uff0c\u8fd9\u4e2a\u76ee\u524d\u5c31\u662f\u7528\u4e8e\u65ad\u8a00\u89e3\u6790\u4e0a\u4e0b\u6587\u7684\u3002\u76ee\u524d\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u662f\u65ad\u8a00\u4e0d\u4e25\u8c28\uff0c\u5e76\u6ca1\u6709\u65ad\u8a00\u5168\uff0c\u53e6\u4e00\u4e2a\u662f\u6ca1\u6709\u548c\u6574\u5408\u6d4b\u8bd5\u4e00\u4f53\u5316\u3002\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e24\u4e2a\u9700\u6c42\u9700\u8981\u8ba8\u8bba\n1. \u5bf9\u4e8estatement\u548cpreparedStaement\u8fd9\u4e2a\u7ef4\u5ea6\u8fd8\u9700\u8981\u589e\u52a0\u4e00\u4e2a\uff0c\u5c31\u662f\u5728jdbc url\u94fe\u63a5\u91cc\u589e\u52a0\u4e86useServerPrepStmts=true\u7684prepareStatement\u7684\u6267\u884c\u3002\n2. \u9664\u4e86\u5bf9\u76ee\u524d\u7684sharding-jdbc\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8fd8\u9700\u8981\u53ef\u4ee5\u542f\u52a8sharding-jdbc-server\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5168\u5957\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5728sharding-jdbc-server\u67b6\u6784\u4e0b\u9700\u8981\u518d\u81ea\u52a8\u5316\u8fd0\u884c\u4e00\u904d\u3002. Integrate test engine's folder structure\uff1a\nintegrate\n  -- config\n      -- ${rule-name}.{db-type}.yaml    (+)\n  -- init\n      -- ${db-name}.xml                 (+)\n  -- expected\n      -- ${expected-name}.xml           (+)\n  -- assert\n      -- dql\n          -- ${assert-type}.xml         (+)\n      -- dml\n          -- ${assert-type}.xml         (+)\n      -- ddl\n          -- ${assert-type}.xml         (+)\n      -- tcl\n          -- ${assert-type}.xml         (+)\n      -- dal\n          -- ${assert-type}.xml         (+)\nrule-name enum: sharding-tables, sharding-databases, sharding-databases-tables, master-slave, master-slave-sharding-tables, master-slave-sharding-databases, master-slave-sharding-databases-tables.\nassert-type example: simple-select, group-by-select, update, create, etc.. xml example for init & expected:\nxml\n<dataset>\n    <metadata>\n        <table name=\"t_order\">\n            <cloumn name=\"order_id\" type=\"int\" />\n            <cloumn name=\"user_id\" type=\"int\" />\n            <cloumn name=\"status\" type=\"varchar\" />\n        </table>\n    </metadata>\n    <data>\n        <t_order order_id=\"1600\" user_id=\"16\" status=\"init\" />\n        <t_order order_id=\"1601\" user_id=\"16\" status=\"init\" />\n        <t_order order_id=\"2600\" user_id=\"26\" status=\"init\" />\n        <t_order order_id=\"2601\" user_id=\"26\" status=\"init\" />\n        <t_order_item item_id=\"160001\" order_id=\"1600\" user_id=\"16\" status=\"init\" />\n        <t_order_item item_id=\"160002\" order_id=\"1600\" user_id=\"16\" status=\"init\" />\n        <t_order_item item_id=\"160101\" order_id=\"1601\" user_id=\"16\" status=\"init\" />\n        <t_order_item item_id=\"160102\" order_id=\"1601\" user_id=\"16\" status=\"init\" />\n        <t_order_item item_id=\"260001\" order_id=\"2600\" user_id=\"26\" status=\"init\" />\n        <t_order_item item_id=\"260002\" order_id=\"2600\" user_id=\"26\" status=\"init\" />\n        <t_order_item item_id=\"260101\" order_id=\"2601\" user_id=\"26\" status=\"init\" />\n        <t_order_item item_id=\"260102\" order_id=\"2601\" user_id=\"26\" status=\"init\" />\n    </data>\n</dataset>. xml example for assert: \n```xml\n\n\nselect order_id,user_id from t_order where order_id in (%s,%s,%s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n                ...\n            \n\n\n<assert id=\"test2\" expected-data-file=\"xxx.xml\" expected-update-count=\"1\">\n    <sql>update t_order set user_id = 10111 where order_id = %s</sql>\n    <expected-sql>select order_id,user_id from t_order where order_id = %s</expected-sql>\n    <parameters>\n        <parameter value=\"1000\" type=\"int\"/>\n    </parameters>\n    <parse-context>\n        ...\n    </parse-context>\n</assert>\n\n\n```\nLoad init-data automatically.. # All Tasks\nFeature\n\n[x] XML driven\n[x] Enviroment initialization\n[x] XML assertion\n[x] Parameterize test engine\n[x] Configurable for db type and sharding rule type\n\nAssertion\nDQL\n\n[x] Column metadata\n[x] Data row\n\nDML\n\n[x] Column metadata\n[x] Data row\n[x] Update count\n[x] Insert\n[x] Insert batch\n[x] Insert with generated key\n[ ] Insert batch with generated key\n[x] Update\n[x] Delete\n\nDDL\n\n[x] Column metadata\n[x] Index metadata\n[x] Create table\n[x] Create index\n[x] Drop table\n[ ] Drop index\n[x] Alter table\n[x] Truncate table\n\nDCL\n\n[x] Run\n[ ] Assertion\n\nTCL\n\n[ ] Run\n[ ] Assertion\n\nDAL\n\n[ ] Show databases\n[ ] Show tables\n[ ] desc/describe\n\nTest Cases\nDQL\n\n[x] H2\n[x] MySQL\n[x] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nDML\n\n[x] H2\n[x] MySQL\n[x] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nDDL\n\n[x] H2\n[x] MySQL\n[x] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nDCL\n\n[x] H2\n[x] MySQL\n[x] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nTCL\n\n[ ] H2\n[ ] MySQL\n[ ] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nDAL\n\n[ ] H2\n[ ] MySQL\n[ ] PostgreSQL\n[ ] Oracle\n[ ] SQLServer\n\nTest Dimension\nSharding Rule\n\n[x] db\n[x] tbl\n[x] dbtbl_masterslave\n[x] masterslave\n\nConfig\n\n[x] yaml\n[ ] java\n[ ] spring namespace\n[ ] spring boot\n\nSharding Strategy\n\n[x] standard\n[ ] inline\n[ ] complex\n[ ] hint\n\nDatasource Pool\n\n[x] DBCP\n[x] HikariCP\n\nProject\nSharding-JDBC\n\n[x] execute with statement\n[x] executeQuery with statement\n[x] executeUpdate with statement\n[x] execute with prepared statement\n[x] executeQuery with prepared statement\n[x] executeUpdate with prepared statement\n[x] executeBatch with prepared statement\n[ ] executeUpdate with statement for generate key\n[ ] executeBatch with statement for generate key\n\nSharding-Proxy\n\n[ ] JDBC connect MySQL for COM_QUERY\n[ ] Netty connect MySQL for COM_QUERY\n[ ] JDBC connect MySQL with XA for COM_QUERY\n[ ] JDBC connect MySQL for COM_PREPARE\n[ ] Netty connect MySQL for COM_PREPARE\n[ ] JDBC connect MySQL with XA for COM_PREPARE\n\nOptimize\n\n[ ] Enviroment optimize, use meaningful SQL\n\n[ ] Remove dbunit\n. For DCL test engine:\n\n\nCreate authority xml to init env\n\nRemove init-sql and clean-sql on assertion xml\nRename data-init.xml to dataset.xml\n\nUse @Before and @After to init env. Enhancement for #1009:\n\n\nMove package io.shardingsphere.dbtest.cases.authority to io.shardingsphere.dbtest.env.authority.\n\nAdjust authority.xml, make it consist with schema.xml, use tow 2 type to define sql types, and use <sql>xxx</sql>to replace <sql content=\"xxx\" />.\nConsider move ${sharding_rule_type}\\authority.xml to root folder, because content of all authority.xml are same.\nUse raw JDBC to init auth env.\nInvestigate exception print when drop user.. \u611f\u8c22@CharlesMaster\u5171\u540c\u5b8c\u6210\u7ffb\u8bd1\u5de5\u4f5c. done. finished\uff0c prepare to publish. done\uff0c upgrade hugo to 3.x version. \u4eac\u4e1c\u767d\u6761\u5b9e\u6218\uff1ahttps://mp.weixin.qq.com/s/4ehcDu6L_iNbxVtg4zyKSg. \u60a8\u7684\u95ee\u9898\u6587\u6863\u4e2d\u90fd\u6709\uff0c\u6211\u5c31\u4e0d\u518d\u5355\u72ec\u56de\u7b54\u4e86\uff0c\u8c22\u8c22\u7406\u89e3. fixed at 2.1.0. fixed at 2.1.0. fixed at 3.0.0.M1. \u53ef\u4ee5\u4f7f\u7528hint. Yes, I accept it is not always zero costs if complicated SQL in legacy code, \"zero costs\" is the final objective.\nI will change the doc to \"compatible with JDBC and ORM frameworks\" for now. Thank you for suggestion.. \u591a\u8c22\u5173\u5fc3\uff0c\u5df2\u7ecf\u4fee\u590d. I create 2 teams for Committers and Contributors. add https://github.com/shardingjdbc/sharding-jdbc/blob/dev/Organization.md. \u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed. \u8fd9\u4e2a\u95ee\u9898\u662f\u4e0d\u662f\u5e76\u6ca1\u6709\u5904\u7406\u5b8c\u5168\u3002\n\u76ee\u524d\u7c98\u5305\u7684\u53ef\u80fd\u6027\uff1a\n\u4e00\u6b21\u9001\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684mysql packet\uff0c\u548c\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684packet\n\u4e00\u6b21\u9001\u4e86\u591a\u4e2a\u5b8c\u6574\u7684mysql packet\uff0c\u548c\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684packet\n\u4e00\u6b21\u884c\u4e86\u5c11\u4e8e\u4e00\u4e2a\u5b8c\u6574\u7684mysql packet\n\n\u76ee\u524d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e94\u8be5\u53ef\u4ee5\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u4f46\u90a3\u4e2a\u4e0d\u5b8c\u6574\u7684packet\u4e5f\u5c31\u4e22\u5f03\u4e86\u3002\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u548c\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u8fd9\u79cd\u6539\u52a8\u662f\u5426\u90fd\u65e0\u6cd5\u5904\u7406\u3002\n\u5efa\u8bae\u7684\u6539\u6cd5\uff1a\n1. \u6839\u636e\u6bcf\u4e2apayload length\u8bfb\u53d6\u76f8\u5e94\u5b57\u8282\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u52a0\u5165out\uff08\u4e00\u6b21\u53d1\u9001\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2apacket\uff09\n2. \u7f13\u5b58\u6700\u540e\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684packet\uff0c\u7528\u4e8e\u4e0b\u6b21\u63a5\u6536\u5269\u4e0b\u4e00\u534apacket\u65f6\u4f7f\u7528\n. \u672a\u6765\u6253\u7b97\u652f\u6301\u591alogic schema\u652f\u6301\u7684\uff0c\u76ee\u524d\u6682\u65f6\u5148\u628aserver\u8dd1\u7a33\u5b9a\u4e86\uff0c\u4e0b\u4e2a\u7248\u672c\u4f1a\u5bf9\u8fd9\u91cc\u8fdb\u884c\u5347\u7ea7. \u4ee3\u7801\u7247\u6bb5\u770b\u4e0d\u51fa\u5168\u8c8c\uff0c\u5982\u679c\u6709\u9700\u8981\u8ba8\u8bba\u7684\uff0c\u8bf7\u63d0\u4f9b\u591a\u4e00\u70b9\u4fe1\u606f\u5427. \u5bf9\u4e8esharding jdbc\u6765\u8bf4\uff0c\u73b0\u5728\u662f\u6ca1\u6709\u4e0d\u9700\u8981\u5206\u5e93\u5206\u8868\u7684\u60c5\u51b5\uff0c\u5b83\u90fd\u662f\u4f7f\u7528\u4e00\u4e2a\u903b\u8f91\u6570\u636e\u6e90\u3002\u672a\u6765\u53ef\u80fd\u4f1a\u8003\u8651\u5168\u9762\u652f\u6301or\uff0c\u56e0\u6b64\uff0c\u6211\u89c9\u5f97\u73b0\u5728\u82b1\u8d39\u7cbe\u529b\u5728\u900f\u4f20\u4e0a\u9762\uff0c\u53ef\u80fd\u4e0d\u592a\u503c\u5f97. duplicate with #501 . \u6539\u6e90\u7801\u5427. \u7531\u4e8espring boot 2.0\u521a\u521a\u53d1\u5e03\uff0c\u6211\u4eec\u6682\u65f6\u6ca1\u9700\u6c42\u4e5f\u6ca1\u7cbe\u529b\u53bb\u5347\u7ea7\u3002\u56e0\u6b64\u5982\u679c\u793e\u533a\u7684\u5c0f\u4f19\u4f34\u6709\u611f\u5174\u8da3\u7684\u6b22\u8fce\u8ba4\u9886. I will update the roadmap soon. COMMUNICATION AND PARTICIPATION is just translated from Chinese version\uff0c I will rewrite this page later.\nI plan move all COMMUNICATION content outside the  docs. Docs only for how to use sharding-jdbc. I want create a new part to show COMMUNICATION, HOW TO CONTRIBUTE and USING COMPANIES. The link maybe display on the website homepage is better.. Finished remove competition table from intro page. Finished update roadmap. please ignore find-bug's warn. Please reopen the issue if you want discuss further.. We do not test for  geography and jsonb data type. \nIf use them for sharding columns, sharding-jdbc cannot support; If use them for non-sharding  columns, maybe fine.\nIf you interested, cloud you just test them? Thank you.. We don't consider about some special data types indeed.\nWe can enhance some one in future. If you interested on this, welome give us a pull request.. fixed at 3.0.0.M1. \u901a\u8fc7jdbc\u53ef\u4ee5\u83b7\u53d6\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e48\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u53ef\u4ee5\u8bd5\u8bd5sharding jdbc\u80fd\u5426\u53d6\u5230\uff1f. ok, this is a enhancement. we will do it on next release.\nOr you can give us a pull request if you want.. fixed at 3.0.0.M1. I see the error in your log:\njdbcUrl is required with driverClassName.\nI think you miss to configure the properties for jdbcUrl, it not a sharding jdbc problem.. OK\uff0c At github, you can only re-open your own issues if you closed them yourself.\nI will reopen that issue.\nBy the way, the standard process is really important. Our proposal is collaborate this open source project with community, so we need a clear rule.. #501 is still opening. The status of finished features should be closed. Please reference issue template, provide source code to be reproduce. Thank you.. no response for long time, close it for now. please faq\uff1ahttp://shardingjdbc.io/docs_cn/01-start/faq/\n. duplicate with #571. please do not use schema.table. @meta-life please provide a demo to reproduce it. no response for very long time, just close it.. please read document: faq. java.lang.UnsupportedOperationException: Cannot support Multiple-Table\nI don\u2018t know your context, please summit a issue reference our issue guide. we need all infomation on that. Cannot support update more than one table in update SQL.\nPlease try to understand, not any SQL in distribute databases are all supported. Some SQL in distribute database are performance nightmare.\n. we don't have this feature now. Thank you for your contribution. I reviewed the codes and give some suggestion:\n\nPlease revise your code reference code convention: http://shardingjdbc.io/community/en/02-contribute/convention/\nPlease review your code reference checkstyle, the template is in sharding-jdbc/src/resources/dd_checks.xml.\nPlease remove all commits, javadoc(test case do not need javadoc)  and all Chinese words.\nPlease fill all SQL type for your assert.xml to make sure test engine is correct, for example: DQL,DQM,DDL,TCL,DAL\nMissing some assert at parse context(for example missing condition assert here), please check SQLStatement and his child class to make sure all properties we need to assert.\nStill need to consider about how to assert DML,DDL, TCL and DAL. expected-data-file only for DQL and DML.\n\nFinally, fill all test case for xml (can do it after merged).. duplicated with #623 . \u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\u3002\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed. Thanks for your feed back. There is problem here, will cause derive column error. we will fix it next release.. reported by #645 . fixed at 3.0.0.M1. I checkout the code, you are correct. we should add @EqualsAndHashCode on other SelectItem.\nCloud you test on this and submit a pull request for us? welcome to be a contributor.. Thank you for contribute codes. expired for now, just close it. fixed at 3.0.0.M1. sharding-proxy still in dev, will provide it after stable version released.. We plan release m1 after 2 month later. Excuse me, but we don't want compare with other similar production.  . expired. please read document:http://shardingjdbc.io/docs_en/01-start/faq/ or http://shardingjdbc.io/docs_cn/01-start/faq/, 8th question . finished on that. yes, please read document for more details. finished. fixed at 2.1.0. duplicate with #652. please close this pr, and submit a new pr to branch issue_601. Code review suggestions:\n\n\nI want make sure why did not use original String skipParentheses(final SQLStatement sqlStatement) for this case. I think it is suitable here. Is it nessesary to add a new method public void skipParentheses()?\n\n\nPlease add a test case for this. You can add sql test case on sharding-jdbc/sharding-jdbc/sharding-sql-test/src/main/resources/sql/dql/select.xml, and add parse context assert on sharding-jdbc/sharding-jdbc/sharding-core/src/test/resources/parser/select.xml. Test cases is really important to prove your change is correct.\n\n\nPlease also add integrate test case. You can add it on sharding-jdbc/sharding-jdbc/sharding-jdbc-core/src/test/resources/integrate/assert/select.xml. More code review suggestions:\n\n\nI consider for this pull request carefully, the pr is incorrect now. \nPlease notice sharding-jdbc has a concept for logic index, use force index should add a index token in parser module, and rewrite index token to real index name on rewrite module.\nPlease reference AbstractCreateParser and SQLRewriteEngine. Thank you for contribute, some suggestions:\n\n\nfor code this.lexerEngine, just remove this., we use lexerEngine directly in the normal.\n\n\ninstead lexerEngine.skipIfEqual(new TokenType[]{MySQLKeyword.FORCE} to lexerEngine.skipIfEqual(MySQLKeyword.FORCE), we use Varargs here. Same as lexerEngine.skipIfEqual(new TokenType[]{MySQLKeyword.INDEX}\n\n\nyou can inline if (skipIfForce) {, just like if (lexerEngine.skipIfEqual(MySQLKeyword.FORCE) && lexerEngine.skipIfEqual(MySQLKeyword.INDEX)) {\n\n\nremove unnecessary empty line for TableReferencesClauseParser line 141.\n\n\nisLogicIndex method on class ShardingRule, maybe can simplify, like:\n\n\njava\npublic boolean isLogicIndex(final String logicIndexName, final String logicTableName) {\n    return logicIndexName.equals(getTableRule(logicTableName).getLogicIndex());\n}\nThat's it. After finish test case, i will merge it. Thank you.. I resolve conflict for it, but test case cannot pass. please fix test case first.. Closed. reason just ref #1893. duplicate #652 . please fix test case first. Because of use SPI cannot simplify current KeyGenerator process, and it will add a new progress for add KeyGenerator class to META-INF/services/xxx, it is more complicated than before. So I don't want merge this pr and just close it for now.. I don't get your point. why you need open router API, that is a internal API. And all custimized behaviour should configure by sharding strategy, isn't it?. Please make all discussion and opinion public. If you cannot provide more details, we can not serve for you.\nAs my understanding, sharding strategy is totally enough, we want make all api simplify and clearly, we don't want provide meaningless api to increase end-users understanding cost.. Sharding-JDBC should use on horizontal database sharding. It is not suitable for scenario which table name is different for each database. Some suggestion for code review:\n\n\nFor code conventions, break rule for Indent (including blank lines) is consistent with the previous line.\n\n\nNo test case, cloud you add some test case for them\n\n\nWe want to know how to use it for end-users. Could you also provide a pull request for example?  (https://github.com/shardingjdbc/sharding-jdbc-example/tree/dev/sharding-jdbc-orchestration-example & https://github.com/shardingjdbc/sharding-jdbc-example/tree/dev/sharding-jdbc-orchestration-spring-example). Use WeakHashMap to avoid out of memory. fixed at 3.0.0.M1. fixed at 3.0.0.M1. Code review suggestion:\nin class Conditions, use a object to instead of List<List<Condition>> orConditions, such as List<OrConditions>, and rename Condition to AndCondition is better?\n. Code review suggestions:\n\n\nClass OrConditions and AndConditions should be final.\n\nLine 63 of OrConditions, add final for the second parameter index.\nLine 63 of OrConditions, maybe can simplify:\n\njava\npublic Optional<Condition> find(final Column column, final int index) {\n        Optional<AndConditions> andConditions = get(index);\n        return andConditions.isPresent() ? andConditions.get().find(column) : Optional.<Condition>absent();\n    }\n\nLine 78 of OrConditions, add final for  parameter index.\nLine 87 and 89 of OrConditions, javadoc is incorrect, should be: Adjust and conditions is empty or not.\nLine 31 of Conditions, use @NoArgsConstructor instead of @RequiredArgsConstructor.\nLine 56 of AndConditions, cloud you just return if you find the result, maybe do not need loop all remain elements.\nLine 72 of AndConditions, add final for  parameter index.\nLine 81 and 83 of AndConditions , javadoc is incorrect, should be: Adjust conditions is empty or not.\nLine 61 of ConditionAssert, use private instead of public.\nLine 56 and 65 of ConditionAssert,  before assert optional.get, use assertThat(isPresent) first.\n\nPlease use English for your pull request title, content and commit comments.. I don't think run example can cause this issue, please provide source code. \u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed. \u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed. please reference http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd. duplicate with #609 . That's good. use zookeeper version range to improve compatibility. Code review suggestion: \n\n\nCondition 111\u884c\uff0cgetValues\u65b9\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u6539\u4e3apublic\uff1f\n\nConditions 61\u884c\u548c72\u884c\u7684find\u65b9\u6cd5\uff0c\u53ea\u6709\u6d4b\u8bd5\u5728\u4f7f\u7528\uff0c\u662f\u5426\u53ef\u4ee5\u5220\u9664\uff1f\nParsingSQLRouter 193\u884cgetShardingConditions\u65b9\u6cd5\u7684\u521b\u5efaresult\u7684\u903b\u8f91\u6709\u70b9\u6df7\u4e71\uff0c\u662f\u5426\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u76f4\u63a5new ShardingConditions\uff1f\u800c\u4e0d\u662f\u8ba9\u5176\u6709\u53ef\u80fd\u8fd4\u56denull\u3002\u5982\u65e0\u7279\u6b8a\u7406\u7531\uff0csj\u7684\u4ee3\u7801\u4e2d\u4e0d\u5141\u8bb8\u8fd4\u56denull\uff0c\u4e0d\u5e94\u7528null\u505a\u5224\u65ad\uff0c\u5982\uff1aParsingSQLRouter\u7684139\u884c\nShardingConditions 35\u884c\uff0cgeneratedKey\u65e0\u5904\u8c03\u7528\uff0c\u662f\u505a\u4ec0\u4e48\u7684\uff1f\nShardingConditions 38\u884c\uff0c\u4e0d\u5e94\u4e3ashardingConditions\u63d0\u4f9bget\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u8bbf\u95ee\u90fd\u5df2\u7ecf\u88ab\u5c01\u88c5\u3002\nShardingConditions 38\u884c\uff0c\u8c03\u7528get\u65b9\u6cd5\uff0c\u4e0d\u80fd\u4f7f\u7528LinkedList\nParsingSQLRouter 212\u884c\uff0c\u4e0d\u7528\u76f4\u63a5\u8c03\u7528andCondition.getConditions().isEmpty()\uff0c\u800c\u662f\u4f7f\u7528andCondition.isEmpty()\uff0c\u7531\u6b64\u63a8\u65ad\uff0candCondition.getConditions()\u662f\u5426\u4e0d\u5e94\u63d0\u4f9b\uff1f\nParsingSQLRouter 216\uff0c265\u884c\uff0c\u4e0d\u8981\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528Map.Entry\uff0c\u76f4\u63a5import Map.Entry\uff0c\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528Entry\u5373\u53ef\nParsingSQLRouter 224\u884c\uff0c\u4e0d\u8981return\uff0c\u8003\u8651\u91cd\u6784\u4e3a\u522b\u7684\u65b9\u5f0f\nParsingSQLRouter 252\uff0c279\uff0c293\uff0c303\u884c checkstyle\u672a\u901a\u8fc7\uff0c\u53c2\u6570\u9700\u8981\u52a0final\nParsingSQLRouter 253\u884c\uff0cnew LinkedHashMap<>()\u5728\u5df2\u77e5size\u7684\u60c5\u51b5\u4e0b\u672a\u8bbe\u7f6esize\u5927\u5c0f\uff0c\u5e94\u8be5\u4e3anew LinkedHashMap<>(andCondition.getConditions().size(), 1)\nParsingSQLRouter 255\u884c\uff0c\u4e0d\u8981\u4f7f\u7528null == result.get(each.getColumn())\u8fdb\u884cmap\u5224\u65ad\uff0c\u4ee3\u66ff\u4e3aresult.containsKey(each.getColumn())\nParsingSQLRouter 210\u884c\uff0cgetShardingCondition\u7b49\u5927\u91cf\u65b9\u6cd5\u9700\u8981\u8003\u8651\u65b0\u5efa\u5bf9\u8c61\uff0c\u63d0\u53d6\u5230ParsingSQLRouter\u4e4b\u5916\nParsingSQLRouter 288\uff0c311\u884c\uff0c\u8003\u8651\u4e0d\u8981\u4f7f\u7528null\uff0c\u8003\u8651\u4f7f\u7528ForeverFalseShardingCondition\nParsingSQLRouter 221\u884c\uff0c\u4e3a\u4ec0\u4e48\u4f7f\u7528Objects.equal\uff0c\u8003\u8651\u76f4\u63a5\u4f7f\u7528ShardingOperator.EQUAL == each.getOperator()\nStandardRoutingEngine 56\u884c\uff0c\u5220\u9664\u53c2\u6570parameters\uff0c\u8fd9\u4e2a\u6784\u9020\u5668\u6ca1\u7528\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u4e86\uff0c\u7528@RequiredArgsConstructor\u5373\u53ef\nStandardRoutingEngine 169\u884c checkstyle\u672a\u901a\u8fc7\uff0c\u53c2\u6570\u9700\u8981\u52a0final\nStandardRoutingEngine 109\u884c getShardingValues\uff0c\u6574\u4e2a\u65b9\u6cd5\u5c42\u7ea7\u592a\u591a\uff0c\u5e94\u5408\u7406\u4f7f\u7528\u536b\u8bed\u53e5\uff0c\u5982\uff1a111\u884c\u6539\u4e3aif (shardingConditions.isEmpty()) {\nreturn\uff1b\n}\nStandardRoutingEngine 115\u884c\uff0c\u4e0d\u8981\u4f7f\u7528Objects.equal,logicTableName\u4e0d\u53ef\u80fd\u4e3anull\nShardingCondition\u5c01\u88c5\u5c42\u7ea7\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u8003\u8651\u8981\u4e48\u5b8c\u5168\u653e\u5f00\uff0c\u901a\u8fc7getShardingValues().add\u6dfb\u52a0\uff0c\u8981\u4e48\u5168\u90e8\u5c01\u88c5\uff0c\u4e0d\u63d0\u4f9bgetShardingValues()\u65b9\u6cd5\nShardingConditions 77\u884c\uff0csize\u53ea\u88ab\u5185\u90e8\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u6389\uff0c\u5185\u90e8\u7528shardingConditions.size()\u5373\u53ef\nUnicastRoutingEngine 42\u884c\uff0csqlStatement\u6ca1\u7528\u53ef\u5426\u5220\u6389\uff1f\nUnicastRoutingEngine 53\u884c\uff0c\u7b49\u4e8e\u7684\u5224\u65ad\u90fd\u662f\u5e38\u91cf\u5728\u524d\uff0c\u5e94\u8be5\u4e3a1 == logicTables.size()\nUnicastRoutingEngine\u65b0\u52a0\u768459\u884c\u4e4b\u540e\u7684\u903b\u8f91\uff0c\u4e0d\u5e94\u653e\u5728UnicastRoutingEngine\u4e2d\u3002\u56e0\u4e3aUnicastRoutingEngine\u7684\u610f\u601d\u662f\u5355\u64ad\uff0c\u4e5f\u5c31\u662f\u9009\u4e2d\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u8def\u7531\u3002else\u7684\u65b0\u589e\u90e8\u5206\u5df2\u7ecf\u4e0d\u662f\u5355\u64ad\u3002\u56e0\u6b64\u8fd9\u91cc\u7684\u4ee3\u7801\u5fc5\u987b\u5265\u79bb\uff0c\u4e0d\u80fd\u653e\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u9700\u8981\u8003\u8651\u91cd\u65b0\u8bbe\u8ba1\nShardingRule\u4e2d\u65b0\u589e\u7684\u65b9\u6cd5findDataNodeByDataSourceAndLogicTable\uff0c\u9700\u8981\u8003\u8651\u4e0e\u672c\u6765\u5b58\u5728\u7684findDataNodeByLogicTable\u65b9\u6cd5\u590d\u7528\u3002\u6bd4\u5982\uff0c\u91cd\u6784findDataNodeByLogicTable\uff0c\u8ba9\u5176\u8c03\u7528findDataNodeByDataSourceAndLogicTable\n\u5c06ShardingRule\u4e2d\u7684findDataNodeByDataSourceAndLogicTable\u4e0efindDataNodeByLogicTable\u90fd\u6539\u540d\u4e3afindDataNode\u7684\u91cd\u8f7d\u65b9\u6cd5\n\n\u6700\u540e\uff0c\u5728\u4f60\u4fee\u6539\u8fc7\u7684\u7c7b\u540e\u9762\u52a0\u4e0a\u81ea\u5df1\u7684\u540d\u5b57\u5427\uff0c\u6bd4\u5982\uff0c\u539f\u6765\u7684\u6ce8\u91ca\uff1a\n```\n/\n * Sharding conditions.\n \n * @author zhangliang\n /\n\u6539\u4e3a\uff1a\n/\n * Sharding conditions.\n \n * @author zhangliang\n * @author your name\n /\n```\n. \u5f52\u7eb3\u4e00\u4e0b\u95ee\u9898\u5206\u7c7b\uff1a\n1. UnicastRoutingEngine\u7684\u8bbe\u8ba1\u95ee\u9898\uff0c\u76ee\u524d\u65b0\u589e\u7684\u903b\u8f91\u660e\u663e\u4e0d\u662f\u5355\u64ad\u4e86\uff0c\u8fd9\u4e2a\u65b0\u589e\u903b\u8f91\u4e0d\u80fd\u5199\u5728UnicastRoutingEngine\u4e2d\n2. genkey\u6ca1\u52a0\u5165sharding value\uff0c\u9700\u8981\u628a\u4ee3\u7801\u627e\u56de\uff0c\u5e76\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b\n3. sharding rule\u4e2d\u65b0\u589e\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u8003\u8651\u5982\u4f55\u4e0e\u539f\u6709\u65b9\u6cd5\u6574\u5408\n4. \u63d0\u4ea4\u4e4b\u524d\u518d\u7528checkstyle\u67e5\u4e00\u4e0b\u907f\u514d\u98ce\u683c\u95ee\u9898. fixed at 3.0.0.M1. fixed at 3.0.0.M1. \u8bf7\u95ee\u5b9e\u9645\u6d4b\u8bd5\u51fa\u95ee\u9898\u4e86\u4e48. No response for too long time, and we cannot reproduce it. Let me close it. Code review suggestions:\n1. Please follow code convenient, such as indent, for example: FrontendHandlerFactory line 33\n2. Please make sure checkstyle can pass, for example: MySqlFrontendHandler line 41 and line 42, should only have one blank line.\n3. Please don't rename ShardingProxy to ShardingNettyProxy\n4. Please don't rename MySQLFrontendHandler to MySqlFrontendHandler\n5. MySqlFrontendHandler line 48, use lombok @RequiredArgsConstructor instead of it.\n6. authPluginData of MySqlFrontendHandler is an important field which should use for auth, should not move to a local variable at method handshake.\n. Code review suggestions:\n\nPlease use original copyright on class NettyServerHandlerInitializer\nPlease append auth name on Class ShardingProxy\uff0c do not replace\nClass ShardingProxy line 38, remove comment of keyword netty\nRemove javadoc for private field on class ShardingProxy and MySQLFrontendHandler\nClass ShardingProxy line 67, use System.getProperty(xxx) to get OS info\nDonot use << on class ShardingProxy line 48 if unnessesary\nPlease extract same configuration to common place on class ShardingProxy line 94-116\nPlease append auth name on Class FrontendHandlerFactory\nClass FrontendHandlerFactory line 42, do not need use a new line\nClass FrontendHandlerFactory line 38, javadoc between param name and comments only can reserve one space\nClass MySQLFrontendHandler line 47, use final\nUse @RequiredArgsConstructor to replace current constructor on class MySQLFrontendHandler\nClass MySQLFrontendHandler line 52 and 52, only need one blank line\nClass MySQLFrontendHandler line 70, do not need use a new line\nClass MySQLFrontendHandler line 72-83, use current indent\nClass MySQLFrontendHandler line 72, @Override should keep a empty line\nio.shardingjdbc.proxy.frontend.netty.NettyServerHandlerInitializer maybe can rename to io.shardingjdbc.proxy.frontend.handler.ServerHandlerInitializer. duplicate with #621 . Please provide version. master slave module is coupling with JDBC, we plan to split it from JDBC layer, and will fix this issue at that time.. please read document first. duplicate #652 . cannot support redundancy brackets. yes, sharding strategies are user-defined, you can do every thing in java code or inline expression.. base transaction is not acid transaction, cannot support spring. I transfer this issue to #1497. For English only in future, other languages will not accept.. You may find solution on document, text below is from document:\n\nThis flag is unique in the Java process, and you should ensure that every process ID is different in distributed applications. The default value is 0, and can be configured by calling DefaultKeyGenerator.setWorkerId(\"xxxx\").\n. duplicated with #659 . I create a new issue #1496 to transfer this issue. For English only in future, other languages will not accept.. finished at 2.1.0. Cannot support brackets redundancy. Please read document before submit a issue, thank you.. we can't promise ACID transaction on distribute database, we just use BASE transaction.. fixed at 3.0.0.M1. We are glad to see you find the solution by yourself.. Sorry, we can not do on this way.\nWe must use parse engine to adjust table in SQL is in default datasource or not. If some syntax cannot support, we will throw an exception and terminate parse. So you said if in default datasource, then skip verify... is impassable.\nActually, we don'y have SQL verify phase, we just throw an exception when meet unsupported SQL.. Some scene is more complicated.  For example: \nsql\nselect distinct * from xxx\nwe need to parse distinct first, and then can know table. but we don't want parse sql any more because distinct is unsupported. SQL parsing cannot reversal.\nPlease discuss further in English, thank you.. Parse twice will cause performance issue. And I don't think parse table name only is necessary.\nWe can improve parse module for long-term plan, but should not add any temporary design.\n. Excuse me, let me lock this conversation. \nWe had never consider about using string search or parse more than 1 times to refactor sharding-sphere. \nWe prefer standard way to do middleware.. no plan to support aggregation nested sql for now. +1. @wu-sheng wu OK. Thank you for remind, I will update now.\n. Thanks for every voter, the vote is success and close now.\nWe received 39 agree, 1 abstain and zero disagree,  initial committers are all agreed.\nWe will begin procedure about rename.\nThank you very much.. please read doument first. Some suggestions:\n\nPlease make sure travis can pass all test cases before submit pull request.\nPlease don't comment any codes, just remove if code is useless. Comment codes is a temporary behaviour, should be forbided.. Code review suggestions:\nPlease avoid use import *, such as:\n\njava\nimport java.sql.*;\nPlease use checkstyle check your code before submit pull request.. yes, use base transaction for distribute db is better. no plan to support aggregation nested sql for now. fixed at 3.0.0.M1. glad to see you can find answer from document. Maybe it is better to use double master, switch between master and slave cannot guarantee data integrity. Double masters mean data will save every database sync. So I think  Double(or more) masters do not need switch, just disable broken database instance, and enable when it recover.. I think he topic has already finished. Let me close it.. Hope Sharding-Sphere be better on comnuinity. fixed at #825. fixed at 3.0.0.M1. +1. Thanks for everybody, vote finished. Welcome haifeng to join us.. please replace ${latest.release.version} to the version you wanted. http://mvnrepository.com/artifact/io.shardingjdbc. fixed at 3.0.0.M1. Thank you for the advice. You have already familiarized the source code, could you submit a pull request to fix them?. you should mvn install them from root pom. please continue to read more documents: http://shardingsphere.io/document/en/features/orchestration/orchestration/. cannot support, please refer document:\nhttp://shardingsphere.io/document/en/features/sharding/usage-standard/sql/. I think we can merge now, the code is fine. close without any reason, so I just put this issue as invalid. Thank you to contribute code, I will merge it soon. No, the scope of data replica is feature of database, but we focused on middleware.. fixed at #856. Because we will release version now, so I will do it after merged this time. Please make sure all rule of checkstyle can be passed. please read document carefully or take a look at example. finished at 3.0.0.M2. load case Insensitive config from database, and then do Case Sensitive or Case Insensitive is better. Thank you for find the solution, could you try to fix it and submit a pull request?. Code review:\nPlease follow http://shardingsphere.io/community/en/contribute/convention/\nThe rule is broken here: Please do not use import *. you can use getCause to get original exception. I don't think you need\nconfiguration different even using \n multiple region, please try to understand the example and try to configure them first. sharding sphere cannot do failover now. excuse me\uff0cbut please read documrnt first. before using it\uff0cyou' better to know which sql are unsupported.. http://shardingsphere.io/document/en/faq/. just create your table on oracle. thought your err msg we cannot find any useful info. Only info show us is ORA-00942: \u8868\u6216\u89c6\u56fe\u4e0d\u5b58\u5728\nso we don't know your current situation actually. Please provide more info. close by yourself without any reason, we just mark this issue as invalid. please read release notes, to make sure features are released at that version. yes, you can update config from reg center. but data migration should by yourself. http://mvnrepository.com/artifact/io.shardingsphere. associate with #609. duplicate with #897 . please ref example:\nhttps://github.com/sharding-sphere/sharding-sphere-example/tree/dev/sharding-jdbc-example/spring-namespace-example. Have you ref example already?\nWhere do you find official demo which using http://shardingjdbc.io/schema/shardingjdbc/sharding?. Thank you, we will fix official website soon. fixed at 3.0.0.M3. Do you mean master-slave?. maybe you can take a look at: http://shardingsphere.io/document/current/en/features/read-write-split/. do you mean use mybatis?\nSharding-sphere faced on SQL, JDBC and MySQL protocol , any ORM can support. If you have a look at release notes, maybe you can find which version can support which type of SQL. we only provide config for yaml format.\nSharding-Proxy is a standalone middleware, how to run together with Spring? . Thank you to remind us, will update road immediately.\nSUM(pv) / COUNT(uv) is not supported now.. done on dev branch. just like avg need rewrite to sum and count, and for every data node, accumulate  sum and count, finally divide together.\nSo if SQL include SUM(pv) / COUNT(uv), SQL should rewrite to SUM(pv) , COUNT(uv), and divide in merge module. finished at 3.0.0.M2. fixed at 3.0.0.M2. for checkstyle:\nhttps://github.com/sharding-sphere/sharding-sphere/commit/bbae27c59eebba9b4621213e97c774ce4f294333. \u8fd9\u4e2a\u6211\u4eec\u5c31\u6682\u65f6\u4e0d\u6253\u7b97\u505a\u4e86\uff0c\u592a\u4e2a\u6027\u5316\u7684\u9700\u6c42\uff0c\u76f8\u4fe199%\u7684\u7528\u6237\u7528\u4e0d\u5230\u3002\u5982\u679c\u9700\u8981\uff0c\u8bf7\u81ea\u884cfork\u5427. @limingwei \u62b1\u6b49\uff0c\u6211\u4eec\u662f\u4ee5\u4ea7\u54c1\u5316\u7684\u89d2\u5ea6\u53bb\u601d\u8003\u95ee\u9898\u7684\u3002\u8bf7\u95eeMySQL\u6216JDBC\u662f\u5426\u5305\u542b\u5931\u8d25\u5904\u7406\u7684\u7f16\u7a0b\u6269\u5c55\u70b9\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5f02\u5e38\u4ee5\u53ca\u6807\u51c6\u5316\u7684\u65b9\u5f0f\u53bb\u5b9e\u73b0\uff0c\u800c\u975e\u81ea\u884c\u6269\u5c55\u3002\n\u4e5f\u8bb8\u6bcf\u4e2a\u573a\u666f\u7684\u9700\u6c42\u4e0d\u540c\uff0c\u4f46\u8bf7\u5141\u8bb8\u6211\u4eec\u5c06\u4ea7\u54c1\u5f62\u6001\u4fdd\u6301\u5728\u6700\u7b80\u5316\u72b6\u6001\uff0c\u8c22\u8c22\u7406\u89e3\u3002. please provide error log. Pretty long time no response, and we cannot reproduce it, just close.. Pretty long time no response, and we cannot reproduce it, just close.. supported. i saw your example, where do you use sharding-sphere? in your pom, i cannot find any place to import sharding-sphere. finished at 3.0.0.M2. finished at 3.0.0.M2. sharding-jdbc is jdbc layer, orm layer is base on jdbc, our scope are focus on jdbc, not orm. duplicate with #919 . Excuse me, I just want to know, what do want do?. Excuse me, I just want to know, what do want do?. no, use like to sharding is pretty slow, and does not make sense, so we don't consider to support it. spring boot 2 cannot support underline on key. http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. dup with #965 . I cannot get your point, could you provide more details?. Hello, we prefer use english to discuss issue.\nIn this case, I suggest use sharding + master-slave. please have a look at example: \nhttps://github.com/sharding-sphere/sharding-sphere-example/blob/dev/sharding-jdbc-example/raw-jdbc-example/src/main/java/io/shardingsphere/example/jdbc/main/nodep/yaml/ShardingAndMasterSlaveTogether.java\n. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. If SQL don't include sharding-key, they just route to all data nodes. Any question here?. hello, we prefer use english to discuss issue.\nwe don't care the SQL that hibernate auto generated. We just care about if SQL include sharding-key, then route to correct data nodes; if SQL exclude sharding-key, then route to all data nodes.\nSo what I want to know is that any question here?\n. Very long time no response, and this question seems already have an answer. I just close it.. just have a look at http://shardingsphere.io/document/current/en/manual/sharding-proxy/configuration/, search proxy.mode. @wanghaoyuissun if you close the issue by yourself, please explain your reason, thank you.. not release yet, will release soon.. hello, we prefer use english to discuss issue.. No feedback any more, just close it.. please stop to do it, it will let us confuse.\n. hello, we prefer use english to discuss issue.. fixed at 3.0.0.M2. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. finished at 3.0.0.M2. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Sharding-sphere don't parse column if they are not sharding column. can we close this issue?. please use assertThat replace of assert. just make sure all test cases can be pass fisrtly. duplicate with #919. duplicate with #919. please provide all of test codes, you can put them on github and paste link here.. could you please put them on github and paste link here\uff1f. Thank you, we will investigate soon.. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. no schedule for now. Hi, Zheng.\nI fix a issue on this.\nIf we want add XADataSource to Atomikos, we must use method setXaDataSourceClassName, otherwise if we use method setXaDataSource, Atomikos will not set XaProperties, which will cause user, password and other properties can not set.. @zhfeng the SPI for sharding-sphere is finished now, any plan on narayana next?. fixed at 3.0.0.M2. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Thank you for contribute codes. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Dynamic table has already removed from 1.x version. In your report, you said you use 3.0.0, it is impossible. And 3.0.0 we are not release yet. . fixed at 3.0.0.M2. I think this it a bug, but we still need more investigate, because we don't have this test case.\nIf you want contribute a pull request, we really thank you. Please do it, thank you.. fixed at 3.0.0.M1. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. fixed at 3.0.0.M2. yes, it is a problem, thank you to find them.\nCould you provide a pull request to fix them?. thank you for contribute code. it is already register in https://github.com/sharding-sphere/sharding-sphere/issues/234. duplicate with  #1022. Thank you for contribute code. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. To report a bug, please reference the issue template, answer all questions.\nPlease note: \nFor bug report, please MUST provide the reproduce example codes (such as a github link).. No feedback any more, just close it.. What is the issue? I cannot get your point.\nWhy do you need sharding-jdbc's internal implementation? we never consider to public them.. No feedback any more, just close it.. I add some new tasks, let's support more DAL. I just refactor some places:\n\nMove proxy config from API package to other packages, we need keep API package clear.\nconfig object still little mess, because of reuse and decouple with core and orchestration module, I will continue to do this. (NOT FULLY FINISHED)\nMerge SHOW DATABASES's merge engine, make consist with Sharding-JDBC and Sharding-Proxy.\n. add example via https://github.com/sharding-sphere/sharding-sphere-example/pull/69. fixed at 3.0.0.M3. hello, please note, we don't support this SQL, just reference: http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. All pass, welcome XiaoHu Zhang join us. Hello, we prefer use english to discuss issue.\nFor bug report, we can keep it, but for question, we will close directly.. Hello, only english can use to discuss issue.. Is any relationship of this issue and #1105? @AIKiller. For English only, other languages will not accept.. Name of SQLElement should be a better name, such as PrepareStatemntUnit etc. Hello, only english can use to discuss issue.. Please provide more details for sql.show. By the way, for report a bug, we prefer you follow the issue template, and fill all required information.\n\nThe template is:\nFor English only, other languages we will close it directly.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere do you using?\nExpected behavior\nActual behavior\nReason analyze\nSteps to reproduce the behavior\nFor bug report, please MUST provide the reproduce example codes (such as a github link).\nplease fill it.. Hello, only english can use to discuss issue.. Do you want report a bug? or ask a question\uff1f. cloud you provide a pull request?. The feature is not urgent. We have no plan to update it. I just put it as volunteer wanted.. Unnecessary do that for us, and no body as a volunteer, I just close it. duplicate with #501. use != join tables do not make sense.\nThe NEP is replace to UnsupportedException on 3.0.0.M2. Please don't use 3.0.0.M2's config to 3.0.0.M1. Hello, only english can use to discuss issue.. duplicated with #1090 . For bug report, please MUST provide the reproduce example codes (such as a github link).. @zzzhangjian Hello, only english can use to discuss issue.. For bug report, please MUST provide the reproduce example codes (such as a github link).. could you explain why you close the issue that create by yourself without any reason?. just remove debug info like:\njava\nlog.debug(\"==========================================================\");. the root cause of exception is come from druid. It seems not cause by sharding-sphere, please check it again. I just close it.\nIf you still think this exception is caused by sharding-sphere anyway, please follow issue template, to provide all information we need.\n. Could you explain why create an issue, and close it by yourself without any reason?. Thank you for the performance test. \nCloud you try to analyze where is the bottleneck? memory, io, thread pool waiting or connection pool waiting?\n. support USE #608\nsupport SHOW #609\nsupport DESC #611\nsupport SHOW TABLE STATUS #1119. finished at 3.0.0.M1. transaction feature is for 3.1.0, in 3.0.0 is not stable, we have already remove it.. duplicated with #1116. could you fill necessary information follow in issue template\uff1f\nFor English only, other languages we will close it directly.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere do you using?\nWhich project do you using? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze\nSteps to reproduce the behavior\nFor bug report, please MUST provide the reproduce example codes (such as a github link).\n. fixed at 3.0.0.M3. It is already on the way. Sync to maven centre repo need 1-2 days generally.. finished at 3.0.0.M3. fixed at 3.0.0.M3. Hello, only english can use to discuss issue.. Hello, only english can use to discuss issue.. please fill the info of:\nSteps to reproduce the behavior\nFor bug report, please MUST provide the reproduce example codes (such as a github link).. I don't know  how to reproduce it, no database schema, no sharding rule configuration, no source code can be reproduce, so I cannot handle this. fixed at 3.0.0.M3. duplicate with #1116 . Hello, only english can use to discuss issue.. fixed at 3.0.0.M3. fixed at 3.0.0.M3. Hello, only english can use to discuss issue.. Cloud you follow issue template, fill necessary information below:\nWhich version of Sharding-Sphere do you using?\nWhich project do you using? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze\nSteps to reproduce the behavior\nFor bug report, please MUST provide the reproduce example codes (such as a github link).\n. @niuniu9631 Hello, only english can use to discuss issue.. duplicate with #1116. Thank you, codes are great. I just merge them now.. Cannot get uniformed table structure for pay_cmdy. \nThe exception tell you the reason.. what is your table sharding strategy?. @GitProBo Why the actual tables are uniformed?. Cloud you describe how to get this exception? when proxy start? or execute some SQL?. No feedback any more, just close it.. Sharding-sphere cannot know where is the table belong to if database not configure in sharding rule.. Hello, only english can use to discuss issue.. thank you very much. Cannot support brackets redundancy, FIY: http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. Could you explain why you close the issue so quickly that create by yourself without any reason?. Sharding-JDBC is a framework, upgrade means all application which use JDK7 and below versions cannot support any more. \nSo, just like @wu-sheng said, we need to recognize , it is really a big revolution for Sharding-JDBC, the legacy system maybe cannot run any more. . @wu-sheng ok, we just cancel vote now. We just do not upgrade jdk version. for sharding-sphere side, we can consider about only upgrade sharding-transaction module.\n@WillemJiang it is the best solution if saga can separate the actor module from the saga-core.. You may add it from reg center. Hello, only english can use to discuss issue.. http://shardingsphere.io/document/current/en/manual/sharding-jdbc/usage/orchestration/. If you meet some problems, please read the document carefully and try to run up the example firstly.\nIf document or example cannot resolve your problem, could you mind provide more details of your question which reference of our issue template.\nWe cannot answer your question during such less information.. Hello, only english can use to discuss issue.. No plan yet. you can check supported SQL here:\nhttp://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. we don't maintain 1.x any more, please upgrade. Hello, only english can use to discuss issue.. Guava event bus's performance is really low, I just call directly instead of event bus, the performance is fast 50%.\nSo I just use SPI to decouple, do not use event bus on online query.\nUse guava event bus:\nGuava event bus (nanos)  | SPI (nanos) | Get connection(Hikari) (nanos) |\n| -------------------------------- | --------------------------------- | ------------------- |\n| 814489                                         | 63190                                             | 345827                     |\nevent bus is slow than get connection!. full time spend for get 2 connection and post a event:\nuse guava event bus:\npost evert--------: ds_0---814489\nget connection---: ds_0---452882\nget connection---: ds_0---345827\ntotal-------------: ds_0---2847346\npost evert-----------: ds_1---792603\nget connection------: ds_1---459552\nget connection------: ds_1---303029\ntotal---------------- :ds_1---2819832\nuse SPI:\npost evert-----------: ds_0---63190\nget connection------:ds_0---618804\nget connection------:ds_0---469503\ntotal----------------:ds_0---1326277\npost evert-----------:ds_1---69040\nget connection------:ds_1---574488\nget connection------:ds_1---562666\ntotal-----------------:ds_1---1349838\n. could you explain why you close the issue so quickly that create by yourself without any reason?. Sharding-Sphere cannot do this. \nIf you modify sharding rule from 4 data nodes to 2 2 data nodes, does Sharding-Sphere need to drop addtional tables? how to deal with the remain data in those 2 data nodes?\nElastic data scaling is planning at 4.2.x, we will do the feature at that time.. Right now, Sharing-Sphere cannot support DQL with schema name. We just consider about skip to parse system schema.\nWe need to carding all system schema of MySQL, Oracle, PostgreSQL and SQLServer.. Hello, only english for discuss issue.. Could you follow the issue template and fill necessary information?  For my understanding, this issue has already fixed at #472.\nDo you really meet the case of connection leak? how to reproduce it?. No response any more, just close it.. expired, replace by #1205 . The problem is SQL request may route to multiple sharding tables on same database, and each SQL request may get part of database connection, and waiting to release by others.\nSo just sync get connection as a atomic operate, let one SQL request can hold whole database connection at once.\nfixed at 3.0.0.M3.. just close it, we need separate create connection and create statement. Architecture of Sharding-Proxy:\n\n. Released. We use projects and milestone to manage issue, so close this issue.. We use projects and milestone to manage issue, so close this issue.. We have already fixed problem in 3.0.0.M3-SNAPSHOT. you can modify configuration from zookeeper or etcd directly. duplicate with #1116. duplicate with #1176 . Hello, only english for discuss issue.. 1. What is the original SQL? I don't see any quotes in your SQL. \n2. What is the full exception tracing? I don't where the exception thrown, form Sharding-JDBC or PostgreSQL?\n3. How to reproduce it? What is your sharding rule configuration?\n4. What is the sql.show? We need that to know what is really happen.\nCloud you fill all information we need? . BASE transaction will refactor in future, just reference #1190\nSo I just close this issue for now.. duplicate with #698 . Hello, only english for discuss issue.. Hello, only english for discuss issue.. Duplicate with #1116 . fixed at 3.0.0. No feedback anymore, not enough information, cannot reproduce, I just close it and put it as invalid. this issue is reported by https://github.com/sharding-sphere/sharding-sphere-example/issues/46. We have no plan to support that now.\nhttp://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. Hello, only english for discuss issue.. Could you explain why you close the issue so quickly that create by yourself without any reason?. duplicate with #1116 . Hello, only english for discuss issue.. duplicated with #1116.\nThis is the 9th duplicated issue on this problem. Cloud you check issue list before you submit a new issue?. Thank your suggestion, we will consider about that.. But I need to confirm the precondition: \nHow does Sharding-Sphere know the actual-data-source if configuration absent?. What I mean is sharding rule configuration need to configure actual-data-nodes, it just like:\nds_0.tbl_0, ds_0.tbl_1, ds_1.tbl_0,ds_1.tbl_1\nIf config it automatically, how Sharding-Sphere to know the data source name is ds_0 or ds1?. We need discuss config first, just ignore how to implement it. For end-users, they don't care about how to implement, but care about how to config.. The problem is not all data sources are same. Maybe data source A and B config by table rule A, and data source C config by table rule B. \nWe can not assume all data sources must config for every tables.\nSo I just close this issue for now. fixed at 3.0.0.M4. Database name should support -. Sorry, I cannot understand. Cloud you organize your language again?\n. Some hint:\n1. What's mean of unified processing?\n2. I cannot understand how do you config it, maybe you can have a look on example first. The sharding algorithm is written by yourself, you can control it return correct actual tables as you want.\nYou can try to improve your table sharding algorithm, don't return all tables if create_date has accurate value.\nAnother hint I can provide, maybe you missing config of RangeShardingAlgorithm.. Could you provide your sharding config?. What is the content of com.dayi35.core.spot.common.sharding.algorithm.SingleKeyTableDateRangeShardingAlgorithm?. Your sharding algorithm is pretty strange, what's meaning of:\njava\nstartTime = new DateTime(startTime).plusMonths(1).dayOfMonth().withMinimumValue().secondOfDay().withMinimumValue().toDate();\nYou can try to debug what is your input param of rangeShardingValue, and why they return the result of table name that your don't needed.\nThe useless actual table names are returning by yourself via table algorithm.. Research why if rangeShardingValue is between 2017-08-01 and 2018-09-01, then return table12 and table1 in your table algorithm?\n. OK, I finally understand your point.\nIt does not support this feature when your use same column to sharding datasources and tables.\nBecause sharding algorithm of databases and tables are unrelated. If you want let table sharding result related data source sharding result, we have to change the API of sharding algorithm, merge table sharding algorithm and data source sharding algorithm as one, and return data node list. \nIt is hard to understand for end users, so we still use simple one to make config easy, but maybe cause more useless database query.. Cloud you provide reproduce codes on github and send the link here?. No response anymore, just close it.. Please provide all information we needed, you may follow the issue template.\nWe cannot understand your context because there is not enough information right now.. So, can you close the issue?. Please pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.. Question 1: yes\nQuestion 2: this issue is caused by springboot 2.x\nQuestion 3: yes. @cherrishccl If the answer is enough, cloud you close this issue?. We don't collect sharding-proxy independent. For sharding-sphere is at http://shardingsphere.io/community/en/company/. For hint, it will skip parser engine, so don't add  sharding key with condition.\nWhat is your proposal for ask this question?. Do you mean all tenants maybe save in the same table, and no tenant_id store in tables? Or even though the table has tenant_id field, but not in your query SQL?\nThrough your description, you can databases sharding as well, but fail on tables sharding, right?. I need to confirm: \nDoes hint support your scenario enough? \nIf not, what is your expectation? . No response more than 7 days, just close it.. We are not implement yet, becuase 3.0.0 is not released.\nYou can use sharding-opentracing now.\nWe will do it after 3.0.0 released. @joey168 If you remove null value like initSQL and poolName, is it ok?. @joey168 No, it is not a good idea. The exception is thrown from BoneCP, because BoneCP don't permit user sent null value for configFile. \nBut maybe other database pools can support null value as well.\nSkip null value is NOT Sharding-Sphere's responsibility, sent the original value to target data source pool is the best way here.\nChange the original behavior is bad practice. Sharding-Sphere JUST handle for distribute, it is not  a database combo.. hello, please read document before you submit issue, we don't support this SQL, just reference: http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. ShardingDataSource is not a public API, the public API is only at api package. \nSo we may change internal codes anytime.. Hello, only english for discuss issue.. Duplicated with #1116. Before submit a issue, we suggest you may search existing issues firstly.. Hello, only english for discuss issue.. Hello, we prefer discuss friendly. \nI don't think question Did you test before commited ? is friend enough.\nBut I still paste the document here: http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/ \nplease read them before submit issue, thank you\n. If you want use sharding-sphere to implement multi-tenancy, there are lots of way to do. \nBut how to implement a saas is a big topic, and it out of range of sharding-sphere.. duplicate with #1066. maybe google can help you.\ncan this article help you? https://blog.csdn.net/gjq246/article/details/77074611. Is the problem spring cloud cannot use placeholder or sharding-sphere cannot use placeholder?\nSpring cloud is out of range for us, so cloud you please try to locate the problem first?. Spring cloud is out of range for us, so cloud you please try to locate the problem first?. No response more than 7 days, I just close it.. @root1005214 Hi, what is your proposal to submit other people's code as a pull request?. thank you for contribute codes. Good suggestion, we will plan to do it soon. @boycai hi, we will release this feature at 3.1.0.M1. @boycai sorry, not for 3.1.0.M1, it should be include at 3.1.0. duplicate with #1686 . you can disable the crashed slave data source via reg center. Sharding-Sphere is provide solution for database, it can be a component of distribute env, and you can use other project to collaborate together. But talk whole solution is out of range for Sharding-Sphere.\nSo I just close this issue.. we need fix test case first. What is you proposal to submit this issue? the log is for zookeeper, I don't think it has any relationship with Sharding-Sphere.\nBy the way, the branch sharding-sphere-dev-3.1.0 is still in dev mode, we do not accept any bug on this branch. SQL is case sensitive or case insensitive use can config by database server. So we don't want case insensitive at any scenario. \nCase sensitive is best practice. Can you explain why you close the issue so quickly that create by yourself without any reason?. duplicate with #1285 . We use projects and milestone to manage issue, so close this issue.. did you finish this issue already\uff1f. Thank you for contribute the code. For spring boot starter, it is excellent. \nThis change is only for spring boot starter, do you mind we improve this feature in all places, include java config, yaml and spring namespace for Sharding-JDBC, and yaml for Sharding-Proxy?. And all of inline parser is in sharding rule. \nI suggest we can move data sources' inline expresstion to sharding rule, and then all of config type can support well.. finished by https://github.com/sharding-sphere/sharding-spring/pull/13. What's mean for Table 't_emp' already exists?\nis t_emp your own table?. We prefer github issue list to instead of IM. For English only, other languages will not accept.. you can use opentracing to trace and confirm multiple threads is corrected.\nhttp://shardingsphere.io/document/current/en/features/orchestration/apm/. you may read document first:\nhttp://shardingsphere.io/document/current/cn/features/sharding/principle/execute/. For English only, other languages will not accept.. For English only, other languages will not accept.. Before asking a question, make sure you have:\n\nGoogled your question.\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n. Hi, could you follow issue template and give us more information?\nThe template is:\n\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. please provide your SQL, log of show.sql and sharding rule configuration\nyou use spring and mybatis, we cannot locate only with exception.\nplease provide: Example codes for reproduce this issue (such as a github link).. For English only, other languages will not accept.. - Read documentation: Sharding-Sphere Doc.. For English only, other languages will not accept.. can you submit a pull request\uff1f. just follow https://github.com/sharding-sphere/sharding-sphere/blob/dev/.github/ISSUE_TEMPLATE/bug-report.md, and may try to submit a pull request. +1. @wu-sheng You are the prototype author for sharding-jdbc. Vote passed for PMC and initial committers.. Proposal for ASF: https://wiki.apache.org/incubator/ShardingSphereProposal. IPMC discuss mail list: https://lists.apache.org/thread.html/9eaddb1b3a071663a6b0a086f01b38513c6f237c711ce97826c200fd@%3Cgeneral.incubator.apache.org%3E. Vote mail list:\nhttps://lists.apache.org/thread.html/88beebeec1aec8c32d331a3957b9eaec5aeee3e4e1bb23664731d048@%3Cgeneral.incubator.apache.org%3E. With 7 +1 binding votes, 7 +1 non-binding votes and NO +/-0\nor -1 votes, this VOTE passes. \nBellow is a voting tally:\nBinding\n  Craig Russell\n  Justin Mclean\n  Willem Jiang\n  Matt Sicker\n  Dave Fisher\n  Benjamin Hindman\n  Roman Shaposhnik\nNon-binding\n   Sheng Wu\n   Xin Wang\n   Von Gosling\n   Bruno Mah\u00e9\n   Zhang Liang\n   XIAORUI Wang\n   Raja Sundaram Ganesan. TODO: \n1. Consider about use DataSourceConfiguration and reflection to generate data source.\n2. Use SPI instead of Guava event bus to process transaction for performance issue.\n3. Use SPI to load database driver.\nQuestions:\n1. Why choose TOMCAT_DBCP2 database connection pool by default XA transaction manger? Why not Atomikos?\n2. What is BackendDataSourceFactory, if it only related with XA, maybe we should rename it.\n3. XABackendDataSourceFactory is the main implantation of BackendDataSourceFactory,  maybe we can remove BackendDataSourceFactory. If you want create some test fixture on them, just use mock.\n4. JDBCBackendDataSourceFactory is not a sub class of BackendDataSourceFactory, here maybe need a little refactor.\n5. Why XABackendDataSourceConverter need to implements BackendDataSourceFactory?\n6. Maybe we should initial XA data source on startup, it can avoid sync. Maybe we can judge via SPI to know XA transaction manager is existed.\n7. XABackendDataSourceConverter has already in your source code, why need SPI to inject it?\nTo be discuss:\n1. Create XA data source will need 2 times for database connection, because we need to keep 2 types of data source map, any resolution to avoid it? If we use XA data source, but don't open XA transaction, is it possible work fine just like regular data source?\n. I just update the document, please refer: http://shardingsphere.io/document/current/cn/features/sharding/other-features/inline-expression/. I cannot reproduce. please read document, run example and try to understand it.\n\n\n. I wonder if use amazon aurora, do we really need to shard data by ourself anymore?. For English only, other languages will not accept.. Before asking a question, make sure you have:\n\nGoogled your question.\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.. If forbid full table scanning when don't have a shardig key, what is your expected for query result?. I don't think this is a good design. \n\nI suggest you can use tracing system to analyze your SQL, example: SkyWalking.\nIn future, we will support SQL of explain, it also can help you analyze your SQL. For English only, other languages will not accept.. duplicated with #1376 . yes, you can use sharding and master-slave mix. FYI: http://shardingsphere.io/document/current/en/manual/sharding-jdbc/configuration/. No plan yet. Yes, it support. Duplicated with #1381\nBefore ask question, cloud you prepare to do something follow the question template?\nTemplate:\nQuestion\nFor English only, other languages will not accept.\nBefore asking a question, make sure you have:\n\nGoogled your question.\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\n. Cloud you follow bug template to provide more details?\nTemplate:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. For English only, other languages will not accept.. That is a good suggestion, if clear MasterVisited after transaction finish, maybe next call will get dirty data, it cannot guarantee.\nFor thread scope, it can guarantee the user can get correct data submit by theirselves.\n . If no response more than 7 days and we cannot reproduce it on current information, we will close it.. duplicated with #1066. For English only, other languages will not accept.. For English only, other languages will not accept.. Not support now. the document maybe can help you\nhttp://shardingsphere.io/document/current/en/manual/sharding-jdbc/usage/hint/. I can't get your point. Did you mean if you don't comment the 3rd line, it works well; but if comment the 3rd line, it can't work , is it? . I don't understand, if don't comment code is correct, why do you comment it?. For English only, other languages will not accept.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Ok, we can provide a common object for data source pool configuration, has 2 properties(implement class and propertiesMap), then let XA transaction and yaml to use it. For English only, other languages will not accept.\n. What is your proposal? Do you want submit a bug or ask a question?  . Cloud you provide more details of this feature?. I check the source codes, only YAML configuration use class.forName to initial new instance of ShardingAlgorithm. For other configuration methods, such as java configuration, spring namespace and spring boot starter, they all use instance of ShardingAlgorithm, not class name. End-users can initialize whatever they like.\nFor YAML configuration, we cannot let user to initialize because of YAML standard.\nMaybe I can't get your point yet, but for my understanding, maybe refactor here is unnecessary.. ok, please try new version. For English only, other languages will not accept.\n. fixed at 3.0.1. For English only, other languages will not accept.\n. We will do it on 4.x by Multiple Data Replication.\nPlease ref our roadmap.\nSo I just close it for now.. duplicate with #1416. Tasks here:\n\n[x] Java configuration for broadcast-table\n[x] DDL & DML broadcast to every data source\n[x] DQL with join other tables do not need rewrite name of broadcast-table\n[x] DQL for  broadcast-table only just unicast one data node\n[x] Yaml configuration for broadcast-table\n[x] Spring namespace configuration for broadcast-table\n[x] Spring boot starter configuration for broadcast-table. Please show your config yaml. please provide both server yaml and config yaml . It looks like your config file is correct.\n\nCloud you describe how does this exception occur and what is the stack trace of exception?. any more details?. I cannot reproduce, this error message maybe not throw on this part of code.\nSo maybe you need try to find some hint for reproduce it. Hi, any update on this issue? . ok, i will try to reproduce it. Could you provide more details follow the template?\nTemplate:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. Hi, any update on this issue? we will close this issue after 2 days if no more response.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. finished. Can you provide the reason to trim this key? \nFor my understanding, this key is from spring boot properties, between key and values is properties file, it don't permit space.. ok, I get your point. thank you for contribute code. related with #686. Wonderful, all details are brief and clear. Closed. reason just ref #1893. Hi, this is meaningless. The bad pull request will let us confuse. for prevent broken the code, I just block you for now.. For English only, other languages will not accept.\n. SQL Statement for parsing is Shardinfg-Sphere's private object. End-users cannot get it.. Please provide more information like below:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. I cannot access the url  https://coding.net/u/Super-Alan/p/saga-transaction/git/blob/ms-tcc-zuul/config-sharding.yaml\nCould you mind put your sql and yaml on github? or just paste them as text?. ok, we will investigate soon. duplicate with #919 and already fixed at 3.0.0.M2. I think this issue is same with #1387, cloud we discuss there?. The previous version of sharding-jdbc's backend for SkyWalking is sharding by datetime.\nCould we use  previous sharding rule to do it for SkyWalking v6?. Any idea on that, maybe hash with spanId?. @deanbutcher89, Hi, can you explain why submit this pull request?. Meaningless pr make us confuse, so I just close this pr, and block you sometimes until you can use github correctly. Thank you.. # Sharding-Sphere on K8s Integration\nCurrent Solutions:\n\nHelm Chart\n\nThe simplest and most direct way to combine with K8s is to directly deploy a sharding-proxy with helm chart;\nLike:\nhelm install sharding-proxy\nThere are two ways to distribute helm charts of sharding-proxy, the first one of which is to provide a repo by the user himself through helm repo add sharding-sphere https://example.com/sharding-sphere-charts/stable/; \nthe second one is to submit chart to helm official to maintain it, and in this way, users can directly use  the command line helm search sharding-sphere.\nThe specific deployment also has many other options:\n1.1 daemonset, each node runs a proxy, all the business must visit the database through proxy, as native proxy is especially better to visit mysql (native k8s is not available currently, relevant bp exists but is not completed yet). The service finding problem is concerned here, on how to visit these proxies. First, it is unable to visit proxy without knowing the node IP. Second, it is also unable to visit through 127.0.0.1, which can only be used within a network namespace. So we can only generate a service for daemonset, and all the business can only access the database through VIP or DNS of that service.\n1.2 deployment, each user can use helm install to run a proxy according to their needs, and all their own business can only access the database through that, mainly through VIP or DNS; or they can install a deployment to scale out according to the load (better way). \n\nLong-Term Solution\n\nThis solution is tightly combined with k8s, and needs to develop the relevant controller, with a relatively long term. In addition, currently based on jvm, proxy has a relatively high cost. If it is taken as sidecar, each pod needs to consider the resource occupation situation of proxy besides its business. One good way is golang version proxy, which lightens proxy and makes it sidecar.\nThis way needs to make some adjustments to the structure of sharding-sphere, but does not clash with the first method. It is recommended to achieve that in steps: deploy helm chart first; then work on operators according to the feedback or develop some controllers to realize.. Cloud you try version 3.0.0?\nSNAPSHOT is only for debug, please don't report a bug with SNAPSHOT version. You find the reason, thank you. Could you submit a pull request?. Could you submit a pull request?. I want to discuss configuration of broadcast table. \n\nConsider about distribute PK, maybe is unnecessary. \nConsider about logic table name, broadcast table do not need shard tables, so maybe is unnecessary too.. For English only, other languages will not accept.. For English only, other languages will not accept.. ShardingSphere don't support multiple SQL in one JDBC statement. For English only, other languages will not accept.. duplicate with #1486 . For English only, other languages will not accept.. For English only, other languages will not accept.. For English only, other languages will not accept.. Hello, we are in apache incubator, so English is necessary.  FYI for Chinese: https://www.infoq.cn/articles/QLp8_ACHd0LtKWVsLJwt. For English only, other languages will not accept.. duplicated with #1376. Do not support case when now, please read document to find some information first. For English only, other languages will not accept.. Hello, we never released version 3.3.0 for sharding-jdbc. Not yet, will implement by #1240 . For English only, other languages will not accept.. Use #1599 to improve parsing module. Please check your code first, it maybe not caused by ShardingSphere.\n\nThe example of hint is fine, please reference on that. Or maybe you depth analysis on your issue, we cannot get your context on this description.\n. Can you provide more information\uff1f You can just fill the table below:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: Sharding-Sphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. Any reason for close this issue?. We have test case for this case.\nSo I think this issue is caused by other reason, it is probably configuration  error. Please try to find the real reason and maybe submit a new issue.. For English only, other languages will not accept.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. For English only, other languages will not accept.. For English only, other languages will not accept.. Below is sql.show segment:\nActual SQL: tbl ::: SELECT length.item_id password FROM t_order_item_0 length where length.item_id = ?  ::: [[100001]]\nIt contains parameters. Have you been read the document for about how to config ShardingSphere?. @baijifeilong Hi, could you close this issue?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. For English only, other languages will not accept.. Not yet\uff0cproxy don't have mysql local file, so we don't want support this feature now. The original logo\uff1a\n\n. Thank you for all the logo designed. I think this one is really good. We want choose this one.\nThank you everybody.\n\n. duplicate with #1550 . For English only, other languages will not accept.. For English only, other languages will not accept.. We have no plan to implement explain command now.\nCan you consider about provide a pull request to implement this?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. duplicate with #1467. For English only, other languages will not accept.. config issue, please try to understand config rule, make sure sharding algorithm result can match data source name. Cannot support case when. Please read document. For English only, other languages will not accept.. Cannot support subqueries, you may read document first. Your yaml format is error, please see example or document and try to verify it. duplicate with #1131. duplicated with #1131. Please read document first. http://shardingsphere.io/document/current/en/features/sharding/usage-standard/sql/. @baisijian Hi, if no response anymore, we will close this issue after 2 days. If no response more than 7 days and we cannot make decision by current information, we will close it.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Please open show.show and paste log here. Hi, this is not log ofsql.show, please read document  and paste show.show log here. Yes, please show your log. you can try to 3.1.0.M1. For English only, other languages will not accept.. Cannot support subquery. For English only, other languages will not accept.. What is your version of ShardingSphere?. The second point is really good, I just create new issue to process it dependent.. for 1st suggestion, I just add a static method setMaxTolerateTimeDifferenceMilliseconds() at \nDefaultKeyGenerator, user can adjust their expected threshold if they like, default value is zero.. Split XML by database type, each database has a independent XML configuration.\nEach database type has two XML: sql-statement-rule-definition.xml and extractor-rule-definition.xml. \nHas tow common xml for extractor-rule-definition and rule-rule-definition.\nFormat of sql-statement-rule-definition.xml :\nxml\n<sql-statement-rule-definition base-package=\"io.shardingsphere.core.parsing.antlr\" optimizer-base-package=\"optimizer.impl\">\n    <sql-statement-rule context=\"createTable\" sql-statement-class=\"xxx.XXXStatement\" extractor-rule-refs=\"xxx1, xxx2\" optimizer-class=\"XXX\" />\n   <!-- more sql-statement-rule-definition  -->\n</sql-statement-rule-definition>\nFormat of extractor-rule-definition.xml :\nxml\n<extractor-rule-definition extractor-base-package=\"io.shardingsphere.core.parsing.antlr.extractor.impl\">\n    <sql-segment-rule id=\"xxx\" extractor-class=\"XXX\" />\n   <!-- more extractor-rule-definition  -->\n</sql-segment-rule-definition>\nFormat of filler-rule-definition.xml :\nxml\n<filler-rule-definition sql-segment-base-package=\"io.shardingsphere.core.parsing.antlr.sql.segment\" filler-base-package=\"io.shardingsphere.core.parsing.antlr.filler.impl\">\n    <filler-rule sql-segment-class=\"XXX\" filler-class=\"XXX\" />\n   <!-- more filler-rule-definition  -->\n</filler-rule-definition>. For English only, other languages will not accept.. For English only, other languages will not accept.. What is your sharding rule?. All examples in here:\nhttps://github.com/sharding-sphere/sharding-sphere-example. Sharding strategy is written by java developers, you can dev them as you want. Please try to understand how to written Sharding strategy first, or use inline expression for simple situation mayby better.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. If not parsing SQL, how to ShardingSphere know this SQL is sharding or non-sharding?. If not parsing SQL, how to ShardingSphere know table user is not configure in sharding rule from your SQL?. If ShardingSphere can parse table name from subquery, why ShardingSphere don't support subquery directly?. ShardingSphere parse for one SQL only one time, if try to parse table one time, and then parse other segment, how do you consider about performance?. If it is a new problem, please create a new issue. Can I close this issue now?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Use maven shade cannot compile with IDEA, need to release shaded jar to maven centre repo.\nSo we decide if user find guava conflict, should shade by themselves.. Change random number of sequence offset between in [0, 7).. use vibrate instead of random sequence offset. For English only, other languages will not accept.\n. @leehom I cannot get your point. Hint is keep same lifecycle with connection, if connection closed, hint should be closed.\nCan you make an example for if user need hold hint even connection closed?\n\ni think, in some time, such as db connection pool, tm would not close the connection.\n\nIf connection did not close, hint also did not close automatically, user can close it by themselves. Any question here?\n\nfirst, shardingConnection.close would not be invoked, if Connection is managed by pool, then hint dosen't clear and keep in thread\n\nWhy? Whatever connection is managed by pool or not, they just use JDBC to call connection.close, will close hint together.\n\nsecond, hints would keep in the thread that managed by pool, and be shared by multi requests, that made things confused.\n\nI don't think so. Hint should not cross thread.\n. If no update any more, I will close this issue tomorrow.\n. > the point is connection don't close when it is managed by pool, and then thread isn't clear, hints is keeped in thread local\uff0cso hints is not clear.\nSharding-JDBC do not care the connection is closed or hold by pool, it just care the connection is closed logically.\nWhen user call close method, Sharding-JDBC will call close method of all data sources which it managed(for pool, it returned to pool; for raw jdbc, it closed, but it doesn't matter), the thread local is cleared.\nSo, any problem here? Or can you provide a example and paste github link here?. > the key is \u201cbecause of reusing the thread, it make the hints in the thread not being cleared\u201d\nHow to reusing the thread without connection closed? If user really meet this scene, user can call HintManager.close() method to clear hint info by themselves.\nShardingSphere provide to way to clear hint info.\n\nUser call HintManager.close()\nUser call connection.close()\n\nDo you want more way to clear hint info?\n. > for 2. User call connection.close()\uff0c it is another bug\uff0cdb connection is managed by pool too\uff0cconnection.close() should not be called when the db connection retrieved\nAs I said before: Sharding-JDBC do not care the connection is closed or hold by pool, it just care the connection is closed logically.\nWhen user call close method, Sharding-JDBC will call close method of all data sources which it managed(for pool, it returned to pool; for raw jdbc, it closed, but it doesn't matter). I still cannot get your point. I have already explain how to work for data source pool, is it clear?\nCan you provide a example and paste github link to explain what is the problem you met? . @leehom If no other question, can you close this issue?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. If the error cause is from user, ShardingSphere cannot do any more.\nThe most correct thing that ShardingSphere to do, it understand user's configuration and to it  correctly.\n. Hi, can you explain the reason to close issue by yourself without any reason?. For English only, other languages will not accept.. Hi, could you create a new issue by english?. blocked. blocked. blocked. For English only, other languages will not accept.. Please open show.show and paste log here. ShardingSphere only revert limit now, avg is not processed. \nIt is a good hint, we will fix it later.. Please read documents and understand examples first. For English only, other languages will not accept.. For English only, other languages will not accept.. For English only, other languages will not accept.. For English only, other languages will not accept.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. What's mean Single library multiple table strategy?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. I don't think so.\nIt is correct logic when if no sharding condition route all data nodes.\nThe logic is just like update sql without where condition.\nI don't think there is anther logic should do.\nHow do you think and what is your expected?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Cannot support Redundant parentheses\nhttp://shardingsphere.io/document/current/en/features/sharding/use-norms/sql/. For English only, other languages will not accept.. Hi, why you submit pull request for other people?. Do you have a look at the example?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. fixed at https://github.com/sharding-sphere/sharding-spring/pull/9. Please read and try to understand document first.\nWe can not exhaustive all business scenario for how to develop sharding strategy.\nSo I just close it.. @chinacode Thank you and welcome.. @xuminwlt Thank you and welcome.. Hi, can you fill necessary information below? . ## Bug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. duplicate with #1696. Hi all,\nIn current implementation for sharding-transaction-core, ShardingTransactionManager and ShardingTransactionEngine both define begin, commit & rollback methods which are duplicated.\nWe just remove ShardingTransactionManager, and let XA or Saga\u2018s provider to adapt it by themselves. For XATransactionManager , it doesn't need implements ShardingTransactionManager. Just care about XAShardingTransactionEngine is enough. We just add a new method to return TransactionManager from JTA is fine here.. For English only, other languages will not accept.. Closed. reason just ref #1893. For English only, other languages will not accept.. you can switch off metadata check via configuration. Can you fill some necessary information with template below?  . ## Bug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. Hi one table only can have one sharding rule.\nI don't think one table has two different rule is a good design. Can you provide all log of this exception, sharding rule configuration and table structure?. Can you provide all log of this exception and table structure?. Hi, can you provide table structure?. Hi, I don't think show partitions is a correct SQL.\nSo I just set this issue as invalid. Thank you very much, we will process it soon. It seems the only choice is upgrading to commons-codec 1.11, the last version of it.\nBut the problem:\nhttps://issues.apache.org/jira/projects/CODEC/issues/CODEC-225?filter=allopenissues\nis still exist in commons-codec 1.11, any suggestion?. For English only, other languages will not accept.. For English only, other languages will not accept.. For English only, other languages will not accept.. no. Hi, this is expected exception, please try to understand message of exception. @codefairy08 We should support this kind of SQL, it is a regression. ShardingSphere support it before.. FIY: https://shardingsphere.apache.org/document/current/en/features/sharding/use-norms/sql/\nsearch Available for not only sub-query of pagination. fixed at #1873. Not finished yet, it need to support route to multiple tables. I am sorry, but we can not promise it.\nIf you have requirement, do you mind try to submit a pull request?  . Hi, maybe document can help you:\nhttp://shardingsphere.apache.org/document/current/en/features/sharding/. Hi, we re-design the API, and we think user should not mix to use hint and other sharding strategy together, this is incorrect.\nSo please use the new API as well.. Cannot assign issue if your account is not in apache LDAP.\nPlease just submit pull request anyway. :). We have no plan to do it, anybody inserted on that maybe provide pull request.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. can not support it. Please submit to branch 3.1.0-SNAPSHOT. Hi, can you provide information we needed as below?. ## Bug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. So can I label this issue duplicated with #1774?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Hello, this is an excepted exception. We never supported this SQL. No idea if you don't want to use orchestration module and then still hope it can provide same feature . I saw this info from your jstack:\n\"Druid-ConnectionPool-Create-756222660\" #30 daemon prio=5 os_prio=0 tid=0x00007f1715a4b800 nid=0x1ad5 waiting on condition [0x00007f16e0094000]\n   java.lang.Thread.State: WAITING (parking)\n    at sun.misc.Unsafe.park(Native Method)\n    - parking to wait for  <0x00000000fd3197f0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\n    at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2443)\nDid you close your connection correctly?. For English only, other languages will not accept.. Hi, I think this issue should go to MySQL and PostgreSQL's github repo. This version is too old, it is out of service. For English only, other languages will not accept.. Please provide enough information, you can reference for question template. please fill necessary information like:\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. For English only, other languages will not accept.. Can you paste jstack info here. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. fixed at https://github.com/apache/incubator-shardingsphere-doc/commit/2400f71a73a76db1fe35303787880eea8edb8850. duplicated with #1784. you can develop customized sharding algorithm by yourself. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. if sql.show.simple=true, how to display?. Cloud you submit a pull request. For English only, other languages will not accept.. FYI: https://lists.apache.org/thread.html/f9ec4720b3bce7c63d22d6a6995d606f8016c5ba4b51973c1b3a0300@%3Cdev.shardingsphere.apache.org%3E. no. Hi, can you explain why use cglib is faster than jdk Invoke? \nany performance test or can you make sure jdk invoke is the performance bottleneck in which user scenario\uff1f . If not a performance bottleneck, I prefer do not add extra 3rd dependences in Sharding-JDBC. \nBecause of Sharding-JDBC is a jar which will deploy with user application, we should keep it lightweight.\n. useless for now, please ignore.\nThis is configuration never in document. We need to consider about interface of ShardingEncryptor.\nRight now is:\n```java\n    Object encrypt(Object plaintext);\nObject decrypt(Object ciphertext);\n\n```\nThe parameter for encrypt is plaintext, and return value is object, plaintext means the parameter is String. so, maybe should rename param name as plainValue, and return value will save into database,  string is a good return type.\nThe parameter for decrypt is ciphertext, it is returned from database, so string is good type. object of return type is fine.\n. duplicate with #1779 . ShardingSphere\u2019s config center is already released from version 2.0.0 more than one year. \nSource codes are in:\nhttps://github.com/apache/incubator-shardingsphere/tree/dev/sharding-orchestration/sharding-orchestration-reg. For English only, other languages will not accept.. @joooohnli \n1. Even create new data source first, expect change data source configuration but do not lost any requests is impossible on the data source switch moment. Create new data source first just can reduce  unavailable service time. \n2. Avoid double costs for database connection is possible by current implementation. If databases serve for lots of applications, double costs cannot be accepted.\n3. Consider about to implementation a impeccable function, current implementation is better.\nHow do you think?. > because the number of connections is related to sql query load, if the load keeps unchanged, the total connection number will keep unchanged since the new connections number increase while old connections number reduce.\nIt is incorrect, whether high or low query load, connection pool will hold connections. Create a new data source before close old data source should double cost of connections held by pool.. > 1. Actually it's possible, and Mycat is a good example.\nI don't want to talk about other product here. But I don't think other product can do it prefect. \nIf old data sources still process requests, when switch to new data sources, how to deal with old requests? \nIf old data sources do not process new requests, just finish remain requests, for new request during new data source creating, how to deal the requests on this duration? Maybe need to cache requests and replay them, but database middleware should not handle this.\\\nSo I don't think Do NOT Lost anything strictly is possible at the monment.\n\n\nThere are no double connections. initiating new datasource just need to create minimum connection (normally 1), then while new connection number increases, old connection number reduces. Finally,  extra cost of connection per datasource = 1 * application_number, which is acceptable I think.\n\n\nIf lots instances of application (for example: 1000 instances), even increase one connection is cannot accepted. Some kind of application just set maxActive is 3. increase one connection means increase more 33% costs.. 1. For the first picture, how to deal with insert, update and delete, we should not only consider about query. When user change configuration, the updated data still goto old data source, is it expected behavior? How does user to know the data persist into old database or new database?\n\nThat is an extreme example\n\nNo, it is not an extreme example, in my company (JD.com) , we do it like that way.\n\nBased on current implementation, if creating new datasource takes 10 seconds, the application will be unavailable in that 10 seconds.\n\nMaybe need to cache requests and replay them, but database middleware should not handle this.. > we have set a timeout to close old executeService and physical datasources, which is predictable. \nwhat's mean for predictable? still insert data to old data source? how to estimate how long to insert data to old data source? \nThere are 2 design, \n1. User don't know data is in old data source or new data source, and cannot get any exception to let end user know their transaction is failed.\n2. Throw an exception to tell user transaction is fail.\nWhich one is a good design? I prefer to tell user actual exception, and permit downstream framework to handle related exception, such as provide a cache to handle requests.\n\nBesides, except modifying datasource ip, there are many other scenes that would trigger a DataSourceChangedEvent, such as modify datasource account, queryTimeout, maxActive etc. \n\nI don't think we should guess user's behavior, only we should to do are returning truth to user.\nHow do you know user expect to change database ip or account configuration? As my understanding, a production database should not change their account frequently. \nIf ShardingSphere should separate account change and ip change, that is another story. this pull request is not enough now, we still need do more.\nAnd for the second problem, more cost of create 2 different data source, this solution cannot resolve yet.\nAs my understanding, this solution cannot resolve data insert/update/delete correctly, and will introduce new problem(more cost of connection). So I prefer do not change like this way.. > Again, we have set a timeout to close old executeService and physical datasources. If it can not be done, an exception will be thrown of course.\nShardingSphere don't have timeout to close old datasources right now,  and it is not in this PR.\n\nI did not guess, I do list sceneries. Adjusting datasource properties is common in production environment, do you agree.\n\nShardingSphere don't separate  ip setting and account setting right now,  and it is not in this PR.\n\nThis pr fixes issue of OrchestrationDataSource renewing, it's much suitable for someone if your deployed application number is less than hundred.\n\nWe should consider more, maybe should not accept a pull request to resolve some problem, but introduce a new problem.\nIf it just much suitable for someone if your deployed application number is less than hundred, It is a regression for thousands application instances. \nAny update?. relate #1427, need do it first. If no update any more, I will close this issue the day after tomorrow.. duplicated with #1753. Use SPI to handle SQL parser module\nSQL parser is kernel of ShardingSphere. They are all in sharding-core module now.\nFor different database dialect has different SQL parser, and it is not very easy to extension.\nSo we plan to define interface for SQL parser, and use SPI to import parser dialect. ShardingSphere dev group can implement MySQL, PostgreSQL, Oracle, SQLServer; community can implement other database, for example: DB2.\n. duplicate with #1753. For English only, other languages will not accept.. try to close metadata check. for version 3.1.0, it will disable metadata check by default. duplicate with #1688 . duplicate with #1688 . fixed with #1921. Sharding-Proxy use hikariCP, the data source pool param is same meaning with hikariCP.\nYou can check hikariCP for more info. Not released yet. We never want user to extent API. Java Vector is a bad example. It is depends on your customized RangeShardingAlgorithm, in your example, the generic of  RangeShardingAlgorithm is String, not Date. duplicated with #1828 . For English only, other languages will not accept.. duplicate with #1884. duplicate with #1688. They are not in apache repo. We need adjust on this module and cannot put into apache repo now. duplicate with #1819. For English only, other languages will not accept.. please read https://shardingsphere.apache.org/document/current/en/features/sharding/use-norms/sql/. already fixed at #1754. duplicate with #1819. For English only, other languages will not accept.. For English only, other languages will not accept.. For English only, other languages will not accept.. We need to consider about some new design to enhance route results. Sorry, we cannot. sharding-jdbc-spring-boot-starter is not include in Apache ShardingSphere.\n. For English only, other languages will not accept.. duplicated with #1877. I don't think use byte[] as a sharding key is good enough. \nIt maybe can run fine for customize algorithm, but can not work fine at inline expression.\nAdd byte[] as sharding key will broken some design.. Thank you very much. Can you make your words clear?. I don't test it, do you meet some problem if change it?. If no update, i will close this issue the day after tomorrow.\n. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. ShardingSphere need load tables's metadata.\nYour default table have big amount of tables, I think same problem occur if other framework need to load metadata, such hibernate.\nI tend to don't make this kind of problem as ShardingSphere's problem, what do you think?. > And I think \"DefaultTables\" should not include ShardingTables. In case default database includes ShardingTables.\nIf not include \"DefaultTables\", use input show tables will not display \"DefaultTables\". fixed at #1688. This problem cause by your customized algorithm use int to sharding, and sharding value in SQL is varchar.. duplicate with #1754. For English only, other languages will not accept.. What is your question?. If no other update, I will close this issue tomorrow.\n. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. What is your expected behaviour if sharding value is null?. ShradingSphere is not MySQL database middleware, it is a public databases middleware, we don't want to MySQL special on this product.\nManagement MySQL is another tool, I think user should separate them. Any suggestions?. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. What's mean 'no config rule table'?. No, we will public spi for SQL parser and database protocol at version 4.0.0.\nIf user want support other databases, they can implement spi and do it themselves . Have you been read document and try to example first?. Can you explain the reason to close issue by yourself?. Can you resolve the conflict first?. For English only, other languages will not accept.. Please answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. Please pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.. No, sharding strategy cannot exist together. duplicate with #1764. I don't want define one time query for database, sharing-jdbc is jdbc extension and sharding-proxy is database  extension.\nDefine a new concept need more discuss. \nWe prefer don't add new behaviour by default.\nFor batch job or some business query, the better way is dev this logic to business codes, not at ShardingSphere. We should keep ShardingSphere clear. For English only, other languages will not accept.. @jinjim Is it resolve your question\uff1f Can you close this issue\uff1f. Order by clause cannot support function calculate. reference for #1851. Support this SQL is unnecessary with sharding databases. Support INSERT SQL with expression in values is unnecessary with sharding databases. already fixed at #1791. Mulit-tenant is cloud or PAAS feature, ShardingSphere focus infra now, no plan to do this feature.\nMulit-tenant is additional feature based on ShardingSphere, if some one need it, cloud dev based on it.. Can you explain the reason for close this issue?. For English only, other languages will not accept.. Duplicate with #1722. Can you explain the reason for close this issue?. duplicated with #1885. duplicate with #2039. Can you explain the reason for close this issue?. @gongxings What's up?. Skip complex SQL parsing is not good way to solve the issue, the better solution is make complex SQL parsing accurate. \nSo we prefer make great efforts on SQL parsing, but not skip them on some special situation.. Provide another way may out of sharding sphere's scope. \nFor example, use 2 datasource, one with sharding sphere, other one without sharding sphere.. If user want use sharding sphere as not transparent model (eg. know they are using default data source), that is not sharding sphere's expected usage\n. The plan is do better for SQL parse.\nWe cannot afford all SQL parsed, why not join community to contribute codes? It is better than just waiting. . For English only, other languages will not accept.. Hello, the version 1.5.4.1 is too old, please use 3.x.\nBy the way, we will do first release of 4.x soon.. Out of service of this version, it is really too old.\nThe suggestion is upgrade to 3.x or 4.x version. Do not support subquery if not on single sharding data node.\nPlease note, we want focus SQL more make sense for sharding databases, not for all SQL. autoCommit is not a valid configuration item of Sharding-Proxy.\nFYI: https://shardingsphere.apache.org/document/current/en/manual/sharding-proxy/configuration/. Configuration item is defined by Sharding-Proxy.\nautoCommit is connection or JDBC URL's property, they are different. please follow Code Conventions:\nThe name of return value is result. catch exception should declare final, and please avoid variable to e, use ex to replace it.. internal method should have a blank line. only public method need javadoc. javadoc invalid. should add description and author, cannot leave author info only. between class definition and method should have a blank line. the first character of javadoc should be capitalization. javadoc invalid. should add description and author, cannot leave author info only\n. 1. If the class do not need extend for others, please make it final\n2. Java doc invalid, first character should be capitalization. please follow Code Conventions:\nThe name of return value is result. what's mean else return?. java doc invalid, missing description. java doc invalid. first character .... Please follow Code Conventions:\nThe name of unit value is each in for each sentence. why use lexerEngine here?. the name is too common, should rename. use lombok here. use guava's Preconditions here. SQL is keyword, should upper case in all comments. comment should update together with parameter name. SQl should be SQL. can not use system.out. can not commit comment codes. can not submit comment codes. Why comment here, should remove comment codes. Why comment here, should remove comment codes. Why comment here, should remove comment codes. Why comment here, should remove comment codes. default value should be The n power of 2, 128 is a better threshold. add javadoc here. variable counter should be count. Do not need @NoArgsConstructor because the class already has default no args constructor. Do not need @Getter because there is no field here. I don't think IgnoredChangedEvent is a good name, maybe IgnoredShardingOrchestrationEvent is better? same problem with java doc. I don't think SchemaAddChangedEvent is a good name, maybe SchemaAddedEvent is better? same problem with java doc. I don't think SchemaDeleteChangedEvent is a good name, maybe SchemaDeletedEvent is better? same problem with java doc. How about rename this method as createUpdatedEvent?. How about rename this method as createDeletedEvent?. use ternary operator here. use ternary operator here. consider about move this logic to a common place?. What's mean of this method? maybe change a new name is better. Why need to record existedSchemaNames here\uff1f. change Get schema Name. to Get schema name.. Change config node full path to configuration node full path, do not use abbreviate with javadoc\n. . If cannot match reg exp, and return \"\", what will happen?. change has or not to has data source configuration or not. change has or not to has rule configuration or not. When rename SchemaAddChangedEvent, don't forget rename variable and javadoc together. MasterSlaveRuleChangedEvent is really \"changed\", but for SchemaAddChangedEvent, it just \"added\", SchemaAddChanged is not a good english presentation. you can search \"tables:\\n\", some places use it. no blank line here. no blank line here. one more blank line here. one more blank line here. one more blank line here\n. one more blank line here. Why need private getter method?. do not use abbreviate with dsAlgorithmExpression, should be dataSourceAlgorithmExpression\n. do not use abbreviate with dsAlgorithmExpression, should be dataSourceAlgorithmExpression\n. Snowflake is one word, don't use camel case here. Upper case for first letter. Built in are two words, should camel case here. Built in are two words, should camel case here. return Optional to instead of null value. Should be WORKER_ID. Should be Properties, not need use ShardingProperties. Maybe we don't need getKeyGeneratorProperties method, setProperties is enough. Consider about rename method to setProperties, because the class name is KeyGenerator, related about context, setProperties is clear and meaningful.. Remove useless @NoArgsConstructor. How about use final class here?. We never use word for Builtin in our project, just reference master slave rule.\nHow about rename this class to KeyGeneratorType directly?. Move @Getter and @Setter to class level if all fields need getter and setter, even there is only one field.. Move @Getter and @Setter to class level if all fields need getter and setter, even there is only one field.. First char of javadoc should be upper case. First char of @return should be lower case. javadoc and @param should match. why not use uuid. maybe need a delimiter. what's mean cache? will clear later?. create new class named ResourceDataSource to deal with resource name, maybe is better than use getConnection and doGetConnection. So the name should not called as cached, is it?. what's mean of uid? should use more meaningful name here. what is full id? qualified name? . why data  type composite with tow uid? maybe should make code more clear here  . Can be final class or not?. Use assertNotNull here. Can be final class or not?. xml attribute and java filed is same, do not need add name here. Please avoid use abbreviation. Another question is what is Unique Id in SQL?. Try to find terminology word to instead of this, check qualified name is suitable or not. should not remove mysql, instead of provide is better. ",
    "ivywjhua": "\u57fa\u4e8eBASE\u505a\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u67d4\u6027\u4e8b\u52a1? \u8fd9\u4e2a\u548cNotify\u4e4b\u7c7b\u7684\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\u53ef\u4ee5\u7ed9\u4e2a\u53c2\u8003\u94fe\u63a5\u7814\u7a76\u4e00\u4e0b\u4e48\uff1f @terrymanu \n. ",
    "cnhans": "\u8bd5\u7528\u96be\u4f7f\u7528\uff0c\u4ee3\u7801\u4f7f\u7528\u4e86\u592a\u591a\u7b2c\u4e09\u65b9\uff0c\u8f6c\u7528mycat\uff01\n. ",
    "haocao": "parent pom\u5df2\u63d0\u4ea4\u5230maven\u4ed3\u5e93\u3002\n. \u5df2\u7ecf\u4e0a\u4f20\u8fc7\u4e86\nhttp://www.mvnrepository.com/artifact/com.dangdang/sharding-jdbc/1.1.0\nhttp://www.mvnrepository.com/artifact/com.dangdang/sharding-jdbc-core/1.1.0\nhttp://www.mvnrepository.com/artifact/com.dangdang/sharding-jdbc-config-yaml/1.1.0\nhttp://www.mvnrepository.com/artifact/com.dangdang/sharding-jdbc-config-spring/1.1.0\n. \u8bf7\u68c0\u67e5\u4e00\u4e0b\u8868\u8fbe\u5f0f\uff0cds_{user_id.longValue() % 2}\u5e94\u8be5\u4e3ads_${user_id.longValue() % 2}\n. duplicate with #256.  AbstractConnectionAdapter\u4e2d\u4f1a\u8bb0\u5f55setAutoCommit\u52a8\u4f5c\uff0c\u5f53ShardingConnection\u8c03\u7528getConnection\u65b9\u6cd5\u65f6\u4f1a\u8fdb\u884c\u52a8\u4f5c\u56de\u653e\u3002\n@Override\npublic final void setAutoCommit(final boolean autoCommit) throws SQLException {\n    this.autoCommit = autoCommit;\n    if (getConnections().isEmpty()) {\n        recordMethodInvocation(Connection.class, \"setAutoCommit\", new Class[] {boolean.class}, new Object[] {autoCommit});\n        return;\n    }\n    for (Connection each : getConnections()) {\n        each.setAutoCommit(autoCommit);\n    }\n}\n\n\u53ef\u4ee5\u8bd5\u4e00\u4e0bsharding-jdbc-example-mybatis\u8fd9\u4e2a\u9879\u76ee\uff0c\u573a\u666f\u5e94\u8be5\u548c\u4f60\u662f\u4e00\u6837\u7684\uff0c\u662f\u652f\u6301Spring\u4e8b\u52a1\u63a7\u5236\u7684\u3002 . Fixed in 1.5.0.M2. \u8bf7\u63d0\u4f9b\u5206\u5e93\u7b56\u7565\u53caproxool\u7684\u7248\u672c\uff0c\u6700\u597d\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684Example\u5de5\u7a0b\uff0c\u65b9\u4fbf\u5b9a\u4f4d\u95ee\u9898\uff0c\u8c22\u8c22\u3002. \u4f7f\u7528Proxool\u914d\u7f6e\u591a\u4e2a\u6570\u636e\u6e90\u65f6\uff0c\u5e94\u8be5\u4e3a\u6bcf\u4e2a\u6570\u636e\u6e90\u8bbe\u7f6ealias\uff0c\u56e0\u4e3aProxool\u5728\u4f7f\u7528\u8fde\u63a5\u65f6\u4f1a\u5224\u65ad\u8fde\u63a5\u6c60\u4e2d\u662f\u5426\u5305\u542b\u5df2\u5b58\u5728\u7684alias\uff0c\u4e0d\u914d\u7f6ealias\u4f1a\u9020\u6210\u6bcf\u6b21\u83b7\u53d6\u90fd\u53ea\u4ece\u4e00\u4e2a\u6570\u636e\u6e90\u4e2d\u83b7\u53d6\u8fde\u63a5\u3002\njava\n    if(!ConnectionPoolManager.getInstance().isPoolExists(this.alias)) {\n        this.registerPool();\n    }. \u8be6\u60c5\u53ef\u53c2\u89c1FAQ\uff1ahttp://dangdangdotcom.github.io/sharding-jdbc/01-start/faq/. \u8bf7\u63d0\u4f9b\u8be6\u7ec6\u7684\u51fa\u9519\u4fe1\u606f\u53caSQL\u3002. Mybatis\u7684mapper\u6587\u4ef6\u91cc\u9762\u662f\u5426\u914d\u7f6e\u4e86\u81ea\u589e\u4e3b\u952e\uff1a\nxml\n<insert id=\"insert\" useGeneratedKeys=\"true\" keyProperty=\"orderId\">\n        INSERT INTO t_order (\n          user_id, status\n        )\n        VALUES (\n        #{userId,jdbcType=INTEGER},\n        #{status,jdbcType=VARCHAR}\n        )\n    </insert>\n\u53ef\u53c2\u7167sharding-jdbc-example-mybatis\u8fd9\u4e2ademo\uff0c\u5bf9\u6bd4\u914d\u7f6e\u6709\u6ca1\u6709\u95ee\u9898\uff0c\u5982\u679c\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u5efa\u8bae\u63d0\u4f9b\u5b8c\u6574\u4ee3\u7801\uff0c\u4ee5\u4fbf\u8c03\u8bd5\u3002. \u7b2c\u4e8c\u4e2a\u6570\u636e\u6e90\u91cc\u53ea\u6709carPosition_1\uff0c\u6ca1\u6709carInfo\u3002\u56e0\u6b64\u5982\u679c\u5f53\u8def\u7531\u5230\u7b2c\u4e8c\u4e2a\u6570\u636e\u6e90\u65f6\uff0cselect b.company as company1 from carPosition_1 a left outer join carInfo b on a.carNo=b.carNo\u62a5\u9519\u662f\u6b63\u5e38\u7684\u3002\u5982\u679ccarInfo\u5c5e\u4e8e\u516c\u5171\u5e93\u7684\u8868\uff0c\u8bf7\u53c2\u8003example\u4e2d\u76f8\u5173\u914d\u7f6e\u3002. \u7531\u4e8e\u6570\u636e\u5e93user\u8868\u4e2d\u8be5\u5b57\u6bb5\u4e3aint(11) \u7c7b\u578b\uff0c\u56e0\u6b64\u6cdb\u578b\u6240\u5bf9\u5e94\u7684\u5206\u7247\u7c7b\u578b\u5e94\u4e3aInteger\uff0c\u5982\u679c\u9700\u8981\u914d\u7f6e\u4e3aLong\u7c7b\u578b\uff0c\u8bf7\u4fdd\u8bc1\u6570\u636e\u5e93\u8be5\u5b57\u6bb5\u7c7b\u578b\u4e3abigint\u3002. \u8bf7\u5728github\u4e0a\u63d0\u4f9b\u5b8c\u6574\u91cd\u73b0DEMO\uff0c\u4ee5\u4fbf\u8ddf\u8fdb\u8c03\u8bd5\u3002. \u8bf7\u5728github\u4e0a\u63d0\u4f9b\u5b8c\u6574\u91cd\u73b0DEMO\uff0c\u4ee5\u4fbf\u8ddf\u8fdb\u8c03\u8bd5\u3002. Duplicate with #452 . \u5e94\u8be5\u914d\u7f6e\u4e3aa_trace_his${0..3}. \u8bf7\u628a\u5b8c\u6574demo\u4ee3\u7801\u63d0\u4ea4\u5230github\u4e0a\u4ee5\u4fbf\u590d\u73b0. \u8bf7\u63d0\u4f9bdemo\u4ee3\u7801\u5230github\u4e0a\uff0c\u4ee5\u4fbf\u8ffd\u8e2a\u95ee\u9898\u3002. \u8bf7\u628a\u4ee3\u7801\u653e\u5230github\u4e0a\u3002. \u5728\u8bfb\u5199\u5206\u79bb\u7684\u6570\u636e\u6e90\u4e0d\u53ef\u80fd\u653e\u5230\u540c\u4e00\u4e2a\u4e8b\u52a1\u53bb\u5904\u7406\uff0c\u5bf9\u4e8e\u4e8b\u52a1\u95ee\u9898\uff0c\u672a\u6765\u7248\u672c\u4f1a\u8fdb\u4e00\u6b65\u68b3\u7406\u3002Duplicate with #372 . \u4e71\u7801\u95ee\u9898\u5e94\u8be5\u4e0esharding-jdbc\u6ca1\u6709\u5173\u7cfb\uff0c\u8bf7\u5148\u81ea\u5df1\u68c0\u67e5\uff0c\u8c22\u8c22\u3002. \u8bf7\u5148\u9605\u8bfb\u6587\u6863\u548cexample\u7406\u89e3\u5206\u7247\u7684\u542b\u4e49\uff0c\u5982\uff1ashardingDataSource_0.test_data_${0...2}\uff0c\u800c\u4e0d\u662fshardingDataSource_0.test_data_${categoryid}. \u7ecf\u6d4b\u8bd5\u89e3\u6790\u65f6\u95f4\u6b63\u5e38\nInlineExpressionParserTest\n@Test\n    public void assertEvaluateForLong() {\n        StringBuilder expression = new StringBuilder();\n        for (int i=0; i<1024; i++) {\n            expression.append(\"ds_\" + i/64 + \"\" + \".\" + \"t_user_\" + i + \",\");\n        }\n        Long begin = System.currentTimeMillis();\n        List expected = new InlineExpressionParser(expression.toString()).evaluate();\n        Long end = System.currentTimeMillis();\n        System.out.println(\"Evaluate method exhausted \" + (end - begin) + \"ms\");\n        assertThat(expected.size(), is(1024));\n        assertThat(expected, hasItems(\"ds_0.t_user_0\", \"ds_15.t_user_1023\"));\n    }\n\u8f93\u51fa\u7ed3\u679c\nEvaluate method exhausted 3253ms\n. \u611f\u8c22\u63d0\u4f9b\u4ee3\u7801\uff0c\u56e0\u4e3a\u4e24\u4e2a\u4ece\u5e93\u6570\u636e\u5e76\u4e0d\u4e00\u6837\uff0c\u4e00\u4e2a\u4ece\u5e93demo_ds_master_0_slave_0\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a\u4ece\u5e93demo_ds_master_0_slave_1\u4e00\u5171\u67096\u516d\u6761\u6570\u636e\uff0ct_order_0\u8868\u4e2d3\u6761\u6570\u636e\uff0ct_order_1\u8868\u4e2d1\u6761\u6570\u636e\uff0ct_order_2\u8868\u4e2d2\u6761\u6570\u636e\u3002\u5bf9\u4e8eRoundRobinMasterSlaveLoadBalanceAlgorithm\u7b97\u6cd5\uff0c\u6bcf\u6b21\u67e5\u8be2\u4f1a\u8f6e\u8be2slave\u4ece\u5e93\uff0c\u56e0\u6b64\u8f6e\u8be2\u51fa\u6765\u7684\u7ed3\u679c\u662fslave_0\u8f6e\u8be2\u4e24\u6b21\uff0c\u672a\u67e5\u5230\u6570\u636e\uff0cslave_1\u8f6e\u8be2\u4e00\u6b21\uff0c\u67e5\u8be2\u52301\u6761\u6570\u636e\u3002\u56e0\u6b64\u67e5\u8be2\u7ed3\u679c\u7b26\u5408\u7b97\u6cd5\u8bbe\u8ba1\uff0c\u7406\u8bba\u4e0a\u591a\u4e2a\u4ece\u5e93\u95f4\u5e94\u8be5\u662f\u5bf9\u7b49\u5173\u7cfb\uff0c\u6570\u636e\u5e94\u8be5\u662f\u4e00\u81f4\u7684\u3002. \u5e94\u8be5\u6ca1\u6709\u81ea\u884c\u521b\u5efabean\uff0cdataSources\u662f\u901a\u8fc7parserContext.getRegistry().getBeanDefinition(each)\u6784\u5efa\u51fa\u6765\u7684\u3002\njava\nprivate Map<String, BeanDefinition> parseDataSources(final Element element, final ParserContext parserContext) {\n        Element shardingRuleElement = DomUtils.getChildElementByTagName(element, ShardingDataSourceBeanDefinitionParserTag.SHARDING_RULE_CONFIG_TAG);\n        List<String> dataSources = Splitter.on(\",\").trimResults().splitToList(shardingRuleElement.getAttribute(ShardingDataSourceBeanDefinitionParserTag.DATA_SOURCE_NAMES_TAG));\n        Map<String, BeanDefinition> result = new ManagedMap<>(dataSources.size());\n        for (String each : dataSources) {\n            result.put(each, parserContext.getRegistry().getBeanDefinition(each));\n        }\n        return result;\n    }\n\n\u6240\u8c13\u7684inner datasource bean\u662f\u6307\u4ec0\u4e48\u5462\uff1f. \u611f\u8c22\u4e3asharding-jdbc\u63d0\u4f9b\u4ee3\u7801\uff0c\u4ee5\u4e0b\u662f\u6211\u4eec\u8fd9\u8fb9\u6d4b\u8bd5\u7684\u7ed3\u679c\uff1a\n\u5bf9\u4e8eSQL\uff1a\nsql\nSELECT * FROM t_order WHERE user_id = \uff1f OR order_id = \uff1f\nuser_id\u662f10\uff0corder_id\u662f1000\uff0c\u751f\u6210\u7ed3\u679c\u4e3a\uff1a\nlog\n[INFO ] 13:14:39.831 [main] Sharding-JDBC-SQL - Logic SQL: SELECT * FROM t_order WHERE user_id = ? OR order_id = ?\n[INFO ] 13:14:39.834 [main] Sharding-JDBC-SQL - Actual SQL: dataSource_tbl ::: SELECT * FROM t_order_0 WHERE user_id = ? OR order_id = ? ::: [10, 1000]\n\u6211\u4eec\u9884\u671f\u7684\u7ed3\u679c\u5e94\u8be5\u662f\u5bf9\u591a\u4e2a\u5206\u8868\u67e5\u8be2\uff0c\u800c\u76ee\u524d\u4ec5\u5bf9t_order_0\u8868\u8fdb\u884c\u4e86\u67e5\u8be2\uff0c\u8fd9\u5757\u903b\u8f91\u6709\u70b9\u513f\u95ee\u9898\uff0c\u8fd8\u9700\u8981\u518d\u5b8c\u5584\u4e00\u4e0b\u3002. \u7528\u4ec5\u5206\u8868\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u590d\u73b0\uff0c\u6211\u5199\u4e86\u6d4b\u8bd5\u7528\u4f8b\u653e\u5230\u4f60\u7684\u5206\u652f\u4e0a\u4e86\uff0c\u8bf7\u67e5\u770b\u3002. \u76ee\u524d\u7684\u4fe1\u606f\u96be\u4e8e\u91cd\u73b0\uff0c\u80fd\u5426\u5c06\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\u63d0\u4ea4\u81f3github\uff1f\u8c22\u8c22. \u8bf7\u63d0\u4ea4\u81f3https://github.com/shardingjdbc/sharding-jdbc/issues/234\n\u8c22\u8c22. \u6211\u4eec\u4f1a\u57282.0.2\u7248\u672c\u4e2d\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002. \u5df2\u5728\u6d4b\u8bd5\u7528\u4f8b\u91cc\u9762\u589e\u52a0\u76f8\u5173SQL\u6d4b\u8bd5\uff0c\u6682\u65f6\u672a\u53d1\u73b0\u95ee\u9898\uff0c\u80fd\u5426\u5e2e\u5fd9\u5728github\u4e0a\u5efa\u7acb\u4e00\u4e2a\u53ef\u4ee5\u91cd\u73b0\u95ee\u9898\u7684demo\uff0c\u8bf7\u4f7f\u7528https://github.com/shardingjdbc/sharding-jdbc-example\u4f5c\u4e3a\u57fa\u51c6\uff0c\u8c22\u8c22\u3002. Duplicate with #537.. \u76ee\u524d\u5b98\u65b9\u6587\u6863https://dev.mysql.com/doc/refman/5.7/en/delete.html\u4e2d\u5bf9\u4e8e\u522b\u540d\u7684\u4f7f\u7528\u4e3a\u591a\u8868\u5220\u9664\uff0c\u76ee\u524dSharding-JDBC\u8fd8\u65e0\u6cd5\u652f\u6301\u3002\u4ee5\u4e0b\u4e3aMySQL\u5355\u8868\u5220\u9664\u8bed\u6cd5\uff0c\u662f\u4e0d\u652f\u6301\u522b\u540d\u7684\u3002\nSingle-Table Syntax\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]. \u611f\u8c22\u63d0\u4f9b\u4ee3\u7801\uff0c\u9664\u4e86\u9759\u6001\u914d\u7f6e\u7684\u4ee3\u7801\u63d0\u793a\u5916\uff0c\u8fd8\u9700\u8981\u52a8\u6001\u5c5e\u6027\u7684\u4ee3\u7801\u63d0\u793a\uff0c\u5982\uff1a\nxml \nsharding.jdbc.datasource.ds_slave_1.type\nds_slave_1\u662f\u52a8\u6001\u7684\u3002. \u597d\u7684\uff0c\u4f46\u76ee\u524d\u7684\u4ee3\u7801\u63d0\u793asourceType\u5e94\u8be5\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u80fd\u5426\u53bb\u6389sourceType\u7684\u4ee3\u7801\u63d0\u793a\uff1f\nxml\n{\n      \"name\": \"sharding.jdbc.datasource\",\n      \"type\": \"java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>>\",\n      \"sourceType\": \"io.shardingjdbc.core.util.DataSourceUtil\"\n    }\n. \u53e6\u5916additional-spring-configuration-metadata.json\u4e2d\u662f\u5426\u5e94\u8be5\u53ea\u5305\u542b\u975e\u81ea\u52a8\u751f\u6210\u7684\u5c5e\u6027\u914d\u7f6e\uff1f\u76ee\u524d\u53d1\u73b0spring-configuration-metadata.json\u548cadditional-spring-configuration-metadata.json\u6587\u4ef6\u6709\u90e8\u5206\u91cd\u590d\u7684\u5185\u5bb9\uff0c\u8bf7\u6838\u5bf9\u5e76\u8c03\u6574additional-spring-configuration-metadata.json\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u8c22\u8c22\u3002\n. \u597d\u7684\uff0c\u4ee3\u7801\u5df2\u5408\u5e76\u3002. Thanks for your contribution,  but we also need wildcard prompt which  like sharding.jdbc.datasource.ds_slave_1.type, ds_slave_1 is a dynamic property.. \u8bf7\u63d0\u4f9b\u53ef\u4ee5\u91cd\u73b0\u95ee\u9898\u7684\u4ee3\u7801\uff0c\u8c22\u8c22\u3002. \u611f\u8c22\u53cd\u9988\uff0c\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86\u6587\u6863\uff0c\u5f3a\u8c03\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\u3002. \u8fd9\u4e2a\u6e90\u7801\u662fjava.util.Properties\u91cc\u9762\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u5728#521\u4e2d\u4fee\u590d\uff0c\u4f1a\u57282.0.2\u7248\u672c\u53d1\u5e03\u3002. FAQ\u5df2\u66f4\u65b0\uff0c\u8be6\u60c5\u53c2\u89c1http://shardingjdbc.io/docs/01-start/faq/. \u5df2\u5728\u6d4b\u8bd5\u7528\u4f8b\u91cc\u9762\u589e\u52a0\u76f8\u5173SQL\u6d4b\u8bd5\uff0c\u6682\u65f6\u672a\u53d1\u73b0\u95ee\u9898\uff0c\u80fd\u5426\u5728github\u4e0a\u5efa\u7acb\u4e00\u4e2a\u53ef\u4ee5\u91cd\u73b0\u95ee\u9898\u7684demo\uff1f\u8bf7\u4f7f\u7528https://github.com/shardingjdbc/sharding-jdbc-example\u4f5c\u4e3a\u57fa\u51c6\uff0c\u8c22\u8c22\u3002. \n\u6211\u4eec\u5df2\u6839\u636e\u63d0\u4f9b\u7684\u4f8b\u5b50\u642d\u5efa\u597d\u4e86\u73af\u5883\uff0c\u4f46\u5728\u6267\u884calterTableOrder\u5e76\u672a\u53d1\u73b0\u4efb\u4f55\u62a5\u9519\u4fe1\u606f\uff0c\u4e5f\u5e76\u672a\u5728slave\u6570\u636e\u6e90\u4e0a\u6267\u884c\u4efb\u4f55ddl\u8bed\u53e5\u3002\u5efa\u8bae\u91cd\u65b0\u521d\u59cb\u5316\u73af\u5883\u518d\u8bd5\u4e00\u4e0b\u3002. \u62b1\u6b49\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u7531\u4e8e\u6211\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u60a8\u7684\u4e0a\u4e0b\u6587\u5f15\u8d77\u7684\uff0c\u6211\u8fd9\u8fb9\u7684\u73af\u5883\u4e00\u5f00\u59cb\u662f\u4ec5\u8bfb\u5199\u5206\u79bb\u914d\u7f6e\uff0c\u6d4b\u8bd5\u9a8c\u8bc1\u6ca1\u6709\u95ee\u9898\uff0c\u540e\u6765\u53c8\u628a\u73af\u5883\u53d8\u4e3a\u771f\u5b9e\u8bfb\u5199\u5206\u79bb\u73af\u5883\uff0c\u6d4b\u8bd5\u9a8c\u8bc1\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u540e\u6765\u6839\u636e\u60a8\u63d0\u4f9b\u7684\u4ee3\u7801\uff0c\u5728\u771f\u5b9e\u8bfb\u5199\u5206\u79bb\u73af\u5883\u4e2d\u6d4b\u8bd5\u8bfb\u5199\u5206\u79bb+\u5206\u5e93\u5206\u8868\uff0c\u6ca1\u6709\u62a5\u9519\u3002\u4f46\u8fd8\u539f\u56de\u975e\u771f\u5b9e\u8bfb\u5199\u5206\u79bb\u73af\u5883\uff0c\u6d4b\u8bd5\u8bfb\u5199\u5206\u79bb+\u5206\u5e93\u5206\u8868\u786e\u5b9e\u5b58\u5728slave\u6570\u636e\u6e90\u4e2d\u6267\u884cddl\u8bed\u53e5\uff0c\u6211\u8fd9\u8fb9\u4f1a\u65b0\u5efa\u4e00\u4e2aissue\uff0c\u63cf\u8ff0\u6e05\u695a\u5177\u4f53\u7684\u573a\u666f\u3002. Duplicate with #795 . Could you please provide the problem sample code which based on https://github.com/shardingjdbc/sharding-jdbc-example and put it on github?\nJust put your complete project codes inside of sharding-jdbc-spring-boot-example/sharding-jdbc-spring-boot-data-mybatis-example, and we can run it to reproduce the problem. Thanks for your helps.\n@shulyLi @ypg521 \n. @ypg521 Thanks, just remind that don't push any sensitive data or codes into github.. Fixed in 3.0.0.M1. agree, yes, +1. Fixed, will be pushed into docker hub after release.. Sharding-Sphere has been known as a famous database middleware solution, and lots of companies used it in the production environment, hope Sharding-Spherebe better on community.. +1. Please check if your codes are newest and trying to recompile again.. Fixed, thanks for your correction.. agree, yes, +1. Just add more test cases, because we have some not finishSuccess case when running Integrate test case, so it should be labeled as enhancement.. +1. ",
    "Yaccc": "I overlooked the fact that the timeout period of 60s is newCachedThreadPool. In the case of knowing that there are indeed several connections, the resources will be wasted.\n. assign to me? @terrymanu . ",
    "pingww": "@terrymanu \uff0c\u6211\u6d4b\u4e86\u4e00\u4e0b\uff0c\u6709or\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u6ca1\u6709\u505agroupby\u3001avg\u7b49\u5206\u7ec4\u805a\u5408\u5904\u7406\uff1bor\u7684\u5904\u7406\u662f\u57fa\u4e8e\u4e0d\u5305\u542bor\u5904\u7406\u5668\u4e4b\u4e0a\u7684\uff1f\u8fd9\u4e2a\u54ea\u91cc\u4f53\u73b0\u7684\uff0c\u6ca1\u6709\u770b\u5230\u554a\n. MergeContext \u90fd\u662f\u5728MySQLSelectVisitor\u91cc\u9762\u751f\u6210\u7684\uff0cOR\u89e3\u6790\u6ca1\u6709\u4f7f\u7528\u8fd9\u4e2avisitor\uff0c\u6240\u4ee5\u5f52\u5e76\u4e0a\u4e0b\u6587\u4e3a\u7a7a\u3002 @hanahmily \n. \u4e0d\u8981\u610f\u601d\uff0c\u662f\u6211\u81ea\u5df1\u52a8\u6001\u6570\u636e\u6e90\u7ec4\u5185\u90e8\u5e76\u53d1\u95ee\u9898\uff0c\u4e0d\u8fc7\u4e00\u4e2a\u6570\u636e\u6e90\u53ea\u6709\u4e00\u4e2a\u8fde\u63a5\uff0c\u591a\u4e2a\u5206\u8868\u67e5\u8be2\u5e76\u53d1\u4e0a\u4e0d\u53bb\n. ",
    "hanahmily": "@pingww \u62b1\u6b49\u4e00\u5f00\u59cb\u6ca1\u6709\u597d\u597d\u7406\u89e3\u4f60\u7684\u95ee\u9898\u3002\u5176\u5b9esharding-jdbc\u5bf9or\u7684\u7ed3\u679c\u96c6\u5f52\u5e76\u4e0e\u5176\u4ed6\u5f52\u5e76\u65b9\u6cd5\u76f8\u540c\u3002\ncom.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement\n``` java\n    @Override\n    public ResultSet executeQuery() throws SQLException {\n        hasExecuted = true;\n        setCurrentResultSet(ResultSetFactory.getResultSet(new PreparedStatementExecutor(getContext().getExecutorEngine(), getRoutedPreparedStatements()).executeQuery(), getMergeContext()));\n        return getCurrentResultSet();\n    }\n...\nprivate List routeSQL(final List parameters) throws SQLException {\n        List result = new ArrayList<>();\n        SQLRouteResult sqlRouteResult = getContext().getSqlRouteEngine().route(sql, parameters);\n        MergeContext mergeContext = sqlRouteResult.getMergeContext();\n        mergeContext.setExecutorEngine(getContext().getExecutorEngine());\n        setMergeContext(mergeContext);\n        for (SQLExecutionUnit each : sqlRouteResult.getExecutionUnits()) {\n            PreparedStatement preparedStatement = generatePrepareStatement(getShardingConnection().getConnection(each.getDataSource()), each.getSql());\n            replayMethodsInvovation(preparedStatement);\n            setParameters(preparedStatement, parameters);\n            result.add(preparedStatement);\n        }\n        return result;\n    }\n```\n\u4e5f\u5c31\u662f\u4e0d\u7ba1\u5f53\u524dsql\u662f\u4ec0\u4e48\uff0c\u6d41\u7a0b\u90fd\u662f SqlRouterEngine-\u300bSQLExecutionUnit -\u300b ResultSetFactory \u3002\n\u5982\u679c\u4f60\u7684\u793a\u4f8b\u4e0d\u80fd\u6267\u884c\u5f52\u5e76\uff0c\u90a3\u4e48\u8bf7\u628a\u65e5\u5fd7\u7ea7\u522b\u8c03\u6574\u4e3atrace\u7136\u540e\u53d1\u51fa\u6765\uff0c\u6211\u518d\u8fdb\u884c\u8ddf\u8e2a\u3002\n\u8c22\u8c22\n. 1.\u7b2c\u4e00\u4e2a\u5728Intellj\u4e2d\u4f7f\u7528maven\u63d2\u4ef6\u53ef\u4ee5\u5355\u72ec\u52a0\u5165example,\u4e0d\u5e94\u8be5\u5728\u7236pom\u4e2d\u5305\u542b\u8be5module\n2.\u8bf7\u63d0\u4f9b\u63d0\u4f9b\u5b8c\u6574\u7684\u529f\u80fd\u66f4\u65b0\u3002\u76ee\u524d\u53ea\u5b9a\u4e49\u4e86\u65b0\u7684\u5f02\u5e38\u6784\u9020\u5668\uff0c\u800c\u6ca1\u6709\u4f7f\u7528\u8005\u3002\n. \u8fd9\u91cc\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u914d\u7f6e\u3002\u914d\u7f6e\u6ca1\u6709\u627e\u5230\u8def\u7531\u89c4\u5219\u540e\u7684\u884c\u4e3a\u3002\u6211\u89c9\u5f97\u8fd9\u4e2a\u914d\u7f6e\u9700\u8981\u5206\u7ea7\u522b\uff0c\u5e94\u8be5\u6709\u5168\u5c40\u914d\u7f6e\uff0c\u9488\u5bf9\u7279\u5b9a\u903b\u8f91\u8868\u7684\u914d\u7f6e\n. \u76ee\u524d\u65b0\u7248\u672c\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u5982\u679c\u6ca1\u6709shardingvalue\uff0c\u5c31\u8fd4\u56de\u6240\u6709\u5206\u7247\u8fd9\u4e2a\u903b\u8f91\u4e86\u3002\n. mysql\u9a71\u52a8\u4e2d\u7684setObject\u65b9\u6cd5\u5df2\u7ecf\u5bf9\u7c7b\u578b\u505a\u4e86\u8003\u8651\u3002\n\u4ee5\u4e0b\u4ee3\u7801\u6765\u81ea\uff1acom.mysql.jdbc.PreparedStatement\njava\npublic void setObject(int parameterIndex, Object parameterObj)\n            throws SQLException {\n        synchronized (checkClosed().getConnectionMutex()) {\n            if (parameterObj == null) {\n                setNull(parameterIndex, java.sql.Types.OTHER);\n            } else {\n                if (parameterObj instanceof Byte) {\n                    setInt(parameterIndex, ((Byte) parameterObj).intValue());\n                } else if (parameterObj instanceof String) {\n                    setString(parameterIndex, (String) parameterObj);\n                } else if (parameterObj instanceof BigDecimal) {\n                    setBigDecimal(parameterIndex, (BigDecimal) parameterObj);\n                } else if (parameterObj instanceof Short) {\n                    setShort(parameterIndex, ((Short) parameterObj).shortValue());\n                } else if (parameterObj instanceof Integer) {\n                    setInt(parameterIndex, ((Integer) parameterObj).intValue());\n                } else if (parameterObj instanceof Long) {\n                    setLong(parameterIndex, ((Long) parameterObj).longValue());\n                } else if (parameterObj instanceof Float) {\n                    setFloat(parameterIndex, ((Float) parameterObj).floatValue());\n                } else if (parameterObj instanceof Double) {\n                    setDouble(parameterIndex, ((Double) parameterObj).doubleValue());\n                } else if (parameterObj instanceof byte[]) {\n                    setBytes(parameterIndex, (byte[]) parameterObj);\n                } else if (parameterObj instanceof java.sql.Date) {\n                    setDate(parameterIndex, (java.sql.Date) parameterObj);\n                } else if (parameterObj instanceof Time) {\n                    setTime(parameterIndex, (Time) parameterObj);\n                } else if (parameterObj instanceof Timestamp) {\n                    setTimestamp(parameterIndex, (Timestamp) parameterObj);\n                } else if (parameterObj instanceof Boolean) {\n                    setBoolean(parameterIndex, ((Boolean) parameterObj)\n                            .booleanValue());\n                } else if (parameterObj instanceof InputStream) {\n                    setBinaryStream(parameterIndex, (InputStream) parameterObj, -1);\n                } else if (parameterObj instanceof java.sql.Blob) {\n                    setBlob(parameterIndex, (java.sql.Blob) parameterObj);\n                } else if (parameterObj instanceof java.sql.Clob) {\n                    setClob(parameterIndex, (java.sql.Clob) parameterObj);\n                } else if (this.connection.getTreatUtilDateAsTimestamp() && \n                    parameterObj instanceof java.util.Date) {\n                    setTimestamp(parameterIndex, new Timestamp(\n                    ((java.util.Date) parameterObj).getTime()));\n                } else if (parameterObj instanceof BigInteger) {\n                    setString(parameterIndex, parameterObj.toString());\n                } else {\n                    setSerializableObject(parameterIndex, parameterObj);\n                }\n            }\n        }\n    }\n. @wangda \u611f\u8c22\u60a8\u7684bug\u56de\u590d\uff0c1.0.1\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u8fdb\u884c\u4fee\u590d\n. \u76ee\u524dsql\u89e3\u6790\u90e8\u5206\u4e0d\u652f\u6301\u89e3\u6790sqlserver\u3002\u540e\u7eed\u4f1a\u9010\u6b65\u652f\u6301\n. \u540c\u65f6\u67e5\u8be2\u4e00\u4e2a\u6570\u636e\u6e90\u4e0a\u7684\u4e24\u4e2a\u5206\u8868\u4e0d\u4f1a\u62a5\u9519\u7684\u3002\u6d4b\u8bd5\u7528\u4f8bcom.dangdang.ddframe.rdb.integrate.db.SelectShardingDataBasesOnlyTest\u4e2d\u6709\u6d4b\u8bd5\u4e00\u4e2a\u6570\u636e\u6e90\u591a\u4e2a\u5206\u8868\u7684\u60c5\u51b5\u3002\u5982\u679c\u6709\u95ee\u9898\u8bf7\u7ed9\u51fa\u6d4b\u8bd5\u4ee3\u7801\u3002\u8c22\u8c22\n. @dachuanz \u5bf9 \u662f\u4e0d\u5206\u8868\u7684\u573a\u666f\nb005981e1918e767ccc0e92739abe22eaff1d958 \u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\n. \u8bf7\u66f4\u65b0\u5230\u6700\u65b0\u53d1\u5e03\u72481.1.0\uff0c\u76ee\u524dmaster\u5206\u652f\u4e0d\u4f1a\u62a5\u8be5\u9519\u8bef\u4e86\n. \u4ece\u95ee\u9898\u63cf\u8ff0\u4e0a\u770b\u4e0e #11 \u76f8\u4f3c\u3002\u8bf7\u4f7f\u7528master\u7684\u6700\u65b0\u7248\u672c\u518d\u6d4b\u8bd5\u4e00\u6b21\uff0c\u770b\u60c5\u51b5\u662f\u5426\u590d\u73b0\uff1f\u5982\u679c\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u8bf7\u60a8\u50cf #11 \u7684\u670b\u53cb\u4e00\u6837\u8bb2\u65e5\u5fd7\u7ea7\u522b\u8c03\u6574\u4e3atrace\uff0c\u5c06\u65e5\u5fd7\u7ed3\u679c\u8d34\u51fa\u6765\uff0c\u8c22\u8c22\u3002\n. \u76ee\u524d\u53ea\u652f\u6301insert into\n. @gfreezy \u4f60\u7684\u865a\u62df\u6876\u7684\u5206\u7247\u601d\u8def\u662f\u5f88\u597d\u7684\uff0c\u4e0ecouchbase\u7684vBucket\u601d\u8def\u5f88\u50cf\u3002\u5f53\u65f6\u76ee\u524d\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u6bcf\u6b21\u4f1a\u5207\u6362catalog\uff0c\u4f46\u662f\u76ee\u524d\u6b63\u5728\u4f7f\u7528Sharding-JDBC\u7684\u5de5\u7a0b\u4e00\u822c\u90fd\u662f\u76f4\u63a5\u914d\u7f6eMySQL\u7684url\u914d\u7f6edatabase\u540d\u5b57\u7684\uff0c\u800c\u6570\u636e\u6e90\u540d\u5b57\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u4e2a\u533a\u5206\u5e76\u4e0d\u4e0edatabase\u6709\u4efb\u4f55\u5173\u8054\u3002\n\u6211\u4eec\u6838\u5fc3\u7ef4\u62a4\u8fd9\u8fb9\u76ee\u524d\u89c4\u5212\u5728\u5c06catalog\u7eb3\u5165\u5230\u8fd9\u4e2a\u8def\u7531\u89c4\u5219\u91cc\u9762\u8fdb\u884c\u5b9e\u73b0\uff0c\u5355\u8fd9\u7275\u626f\u7684\u529f\u80fd\u5f88\u591a\uff0c\u9700\u8981\u6709\u4e00\u5b9a\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\n. \u9996\u5148\u5982\u679c\u4f7f\u7528maven\u547d\u4ee4\u884c\u662f\u53ef\u4ee5\u5b8c\u6210\u7f16\u8bd1\u548c\u7684\uff0c\u8fd9\u4e2atravis\u5df2\u7ecf\u8bc1\u660e\u4e86\u8fd9\u70b9\u3002\u90a3\u4e48\u5269\u4e0b\u7684\u539f\u56e0\u6211\u731c\u6d4b\u4f60\u662f\u4f7f\u7528IDE\u5de5\u5177\u65e0\u6cd5\u7f16\u8bd1\u901a\u8fc7\u3002\u5f00\u53d1\u4eba\u5458\u8fd9\u8fb9\u5206\u522b\u4f7f\u7528\u4e86IntelliJ IDEA\u548cEclipse\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u3002indy\u7f16\u8bd1\u7248\u662f\u9488\u5bf9jdk7\u4ee5\u4e0a\u7248\u672c\u7684\u6027\u80fd\u4f18\u5316\u7248\uff0c\u8bf7\u4fdd\u8bc1\u4f60\u7684ide\u53ef\u4ee5\u6b63\u786e\u8bc6\u522bclassifier\u8282\u70b9\u3002\n. \u5bf9\u4e8e\u7b2c\u4e00\u4e2a limit 1 offset 10 \u3002Sharding-JDBC\u662f\u652f\u6301\u7684\uff0c\u6211\u8bb2\u63d0\u4ea4\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\u53bb\u8bf4\u660e\u8fd9\u70b9\u3002\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd limit 100,-1\u76ee\u524dMySQL\u5df2\u7ecf\u4e0d\u652f\u6301\u4e86\u3002\nMySQL 5.5 select \u6587\u6863\n. \u5c06 #106 \u5408\u5e76\u8fdb\u6765\n. \u76ee\u524dsjdbc\u4e0d\u8bba\u662f\u8def\u7531\u5230\u51e0\u4e2a\u76ee\u6807\u8868\uff0climit\u5168\u90e8\u6539\u4e3a\u4e86\u4ece\u504f\u79fb\u91cf0\u5f00\u59cb\u3002\u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u76ee\u6807\u8868\u7684\u60c5\u51b5\uff0c\u5e94\u8be5\u4f18\u5316limit\uff0c\u4e5f\u5c31\u662f\u4e0d\u4fee\u6539limit\u540e\u9762\u7684\u504f\u79fb\u91cf\u3002\n\u8fd9\u4e2a\u7ef4\u62a4\u56e2\u961f\u540e\u7eed\u4f1a\u505a\u6539\u8fdb\uff0c\u5982\u679c\u60a8\u6709\u597d\u7684\u5b9e\u73b0\u65b9\u6cd5\u4e5f\u6b22\u8fce\u63d0pull request\n. @a15238219309 \u662f\u591a\u8868\u5173\u8054\u66f4\u65b0\u5417\uff1f\n. \u672c\u5408\u5e76\u5230 #195 . @coveralls \u8c22\u8c22\u4f60\u7684\u63d0\u4ea4\u3002\u4e0b\u6b21\u63d0\u4ea4\u65f6\uff0c\u6ce8\u610f\u63d0\u4ea4\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u8986\u76d6\u7387\u4e0d\u8db3\u54e6\n. \u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6bd4\u8f83pipeline\u6539\u9020\u4e4b\u524d\u7684\u8001\u7248\u672c\uff0c\u5f53\u65f6\u5bf9\u4e8e\u7a7aResultSet\u5217\u8868\u6ca1\u6709\u4efb\u4f55\u6821\u9a8c\u3002\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u672c\uff0c\u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\n. \u5408\u5e76\u5230 #36 \n. @xuchanggen \u76ee\u524d\u4e0d\u652f\u6301@@IDENTITY \u83b7\u53d6\u6700\u540e\u4e00\u6b21\u6267\u884c\u7684\u503c\u3002\u539f\u56e0\u662fSJDBC\u4e0d\u652f\u6301\u81ea\u589e\u957f\u5b57\u6bb5\uff0c\u800c@@IDENTITY\u5176\u5b9e\u662f\u4e3a\u4e86\u81ea\u589e\u957f\u5b57\u6bb5\u670d\u52a1\u7684\u3002\n\u800c\u60a8\u622a\u56fe\u4e2d\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\u6570\u636e\u63d2\u5165\uff0c\u8fd9\u5e94\u8be5\u4e0d\u9700\u8981@@IDENTITY\u7684\u5e2e\u52a9\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2a\u503c\u3002\nSJDBC\u7ecf\u8fc7\u4e3b\u8981\u7ef4\u62a4\u4eba\u5458\u5185\u90e8\u7684\u8ba8\u8bba\uff0c\u89c9\u5f97\u5e94\u8be5\u901a\u8fc7\u5b9e\u73b0\u7edf\u4e00\u751f\u6210\u5206\u5e03\u5f0f\u5e8f\u5217\u7684\u65b9\u5f0f\u6765\u652f\u6301\u4e3b\u952e\u751f\u6210\u6216\u5e8f\u5217\u751f\u6210\u8fd9\u6837\u7684\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5b9e\u73b0\u81ea\u589e\u5e8f\u5217\u6765\u8fbe\u5230\u8be5\u76ee\u7684\u3002\n\u6545\u76ee\u524d\u6ca1\u6709\u5b9e\u73b0@@IDENTITY\u5fc5\u8981\uff0c\u4e5f\u6ca1\u6709\u76f8\u5173\u8ba1\u5212\u8981\u652f\u6301\u3002\n. \u95ee\u98981\uff1a\u8bf7\u63d0\u4f9b\u6bcf\u5f20\u8868\u7684\u6570\u636e\uff0c\u4ec5\u51ed\u63cf\u8ff0\u6211\u5e76\u4e0d\u80fd\u590d\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\n\u95ee\u98982\uff1a\u8fd9\u662fsjdbc\u7684\u7279\u6027\uff0csjdbc\u4e0d\u652f\u6301\u8de8\u6570\u636e\u5e93\u7684join\uff0c\u6545\u53ea\u80fdjoin\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u5185\u90e8\u7684\u8868\n. @deeplyloving \u8fd9\u4e24\u4e2a\u95ee\u9898\u5f52\u7ed3\u8d77\u6765\u5c31\u662fsjdbc\u5e76\u4e0d\u652f\u6301\u8de8\u5e93\u7684\u8868\u94fe\u63a5\u3002\u4e5f\u5c31\u662ftest3\u65e0\u6cd5\u4e0edb1\u4e2d\u7684\u8868\u505a\u94fe\u63a5\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f5c\u4e3a\u65b0\u529f\u80fd\u540e\u7eed\u5b9e\u73b0\u3002\n. #131 \u5408\u5e76\u8fdb\u6765. @wangkang007 \u8bf7\u53d1\u9001\u4e00\u4e0bsql\u7684\u5199\u6cd5\uff0c\u8fd8\u6709\u4f60\u7684\u5206\u7247\u7684\u7b56\u7565\uff0c\u8c22\u8c22\n. @super11892235 \u672c\u6b21\u4fee\u6539\u907f\u514d\u4e86\u53cd\u590d\u89e3\u6790SQL\u3002\u4f46\u662f\u5982\u679c\u4e00\u6b21\u6279\u91cf\u6267\u884c\u8fc7\u591a\uff0c\u8fd8\u662f\u4f1a\u6709oom\u7684\u98ce\u9669\u3002\u539f\u56e0\u662fsjdbc\u5185\u90e8\u7684\u4e00\u4e9b\u72b6\u6001\u4e5f\u9700\u8981\u8fdb\u884c\u4fdd\u7559\n. \u8fd9\u4e2a\u672c\u8eab\u662f\u4e2abug\uff0c\u4f46\u662f\u9488\u5bf9\u60a8\u7684\u8fd9\u79cd\u64cd\u4f5c\u6211\u5efa\u8bae\u4f7f\u7528HintManager\u7684setMasterRouteOnly\uff0c\u5c06\u4e00\u4e9b\u5217\u64cd\u4f5c\u90fd\u6307\u5411\u4e3b\u5e93\u3002\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1dml\u64cd\u4f5c\u4f1a\u88ab\u5373\u65f6\u67e5\u8be2\u5230\u3002\n\u9488\u5bf9\u8fd9\u4e2abug\u7684\u4fee\u6539\u4e3a\uff0c\u7b2c\u4e00\u6b21\u9047\u5230dml\u64cd\u4f5c\u540e\uff0c\u4f1a\u5c06\u4e4b\u540e\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4fdd\u6301\u5728\u4e3b\u5e93\u4e0a\u3002dml\u64cd\u4f5c\u4e4b\u524d\u5982\u679c\u6709dql\u64cd\u4f5c\uff0c\u90a3\u4e48\u4f1a\u4ece\u4ece\u5e93\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\n. \u56e0\u4e3aalgorithm-expression\u4f7f\u7528\u7684Groovy\u8868\u8fbe\u5f0f\uff0c\u4f60\u4e3e\u5f97\u573a\u666f\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u4e3aalgorithm-expression=\"ds_${id.longValue() % 2}\"\u3002\u8fd9\u5c31\u662f\u4f7f\u7528Groovy\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u4e0d\u9700\u8981\u518d\u4f7f\u7528String.format\u65b9\u6cd5\u4e86\u3002\n\u57fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u672c\u6b21\u7684PR\u6211\u5c31\u76f4\u63a5\u5173\u95ed\u4e86\n. \u8fd9\u662f\u4e24\u4e2a\u95ee\u9898\uff1a\n1.\u5bf9\u4e8eautocommit\u5f3a\u5236\u8bbe\u7f6e\u4e3atrue\u7684\u610f\u601d\u662f\uff1a\u67d4\u6027\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e8b\u52a1\u6846\u67b6\uff0c\u5bf9\u4e8ebed\u6765\u8bf4\u5c31\u662f\u91cd\u8bd5\uff0c\u6240\u4ee5\u8bbe\u7f6e\u4e3atrue\u662f\u5408\u7406\u7684\uff0c\u5bf9\u4e8etcc\u6765\u8bf4\uff0ctry confirm \u548c cancel\u6bcf\u4e00\u6b65\u90fd\u662f\u4e00\u53e5sql\uff0c\u4e14\u6267\u884c\u5b8c\u6210\u5c31\u9700\u8981\u63d0\u4ea4\u3002\u6545\u8fd9\u91cc\u8bbe\u7f6eautocommit\u4e3atrue\uff1b\n2.\u7b2c\u4e8c\u4e2a\u786e\u5b9e\u662f\u4e2abug\uff0c\u611f\u8c22\uff01\n. \u8fd9\u662fsjdbc\u6ca1\u6709\u9075\u5faajdbc\u89c4\u8303\u5bfc\u81f4\u7684bug @yackl \u60a8\u53d1\u73b0\u7684bug\u975e\u5e38\u597d \u800c\u4e14\u53cd\u9988\u7684\u5f88\u8be6\u7ec6 \u611f\u8c22\u3002\n. \u56e0\u4e3aa\u8868\u5728where\u6761\u4ef6\u4e2d\u6ca1\u6709\u4efb\u4f55\u7684\u6761\u4ef6\uff0c\u50cf\u8fd9\u53e5sql\u4e2d\u7684 b.id=1000 a.bid = b.id \u90a3\u4e48a.bid\u4e5f\u5e94\u8be5\u662f1000\uff0c\u8fd9\u79cd\u4f20\u9012\u5173\u7cfbsjdbc\u662f\u4e0d\u652f\u6301\u7684\u3002\u4f60\u9700\u8981\u663e\u793a\u7684\u53bb\u6307\u5b9aa.bid=1000\n. \u60a8\u4f7f\u7528\u7684\u7248\u672c\u662f1.3.1\u5427\uff1f\u8fd9\u4e2abug\u57281.3.2-SNAPSHOT\u4e2d\u5df2\u7ecf\u4fee\u590d\u4e86\u3002\n. \u9ed8\u8ba4\u6570\u636e\u6e90\u662f\u4e2a\u515c\u5e95\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u8868\u5b9e\u5728\u4e0d\u77e5\u9053\u53bb\u54ea\u91cc\u8def\u7531\u4e86\uff0c\u5c31\u53bb\u9ed8\u8ba4\u6570\u636e\u6e90\u91cc\u9762\u627e\u3002\u800c\u4f60\u5982\u679c\u4e0d\u914d\u7f6edataSourceNames\uff0c\u90a3\u4e48\u8bf4\u660e\u4f60\u7684\u8fd9\u4e2a\u903b\u8f91\u8868\u6563\u6b65\u5728\u6240\u6709\u7684\u6570\u636e\u6e90\u5185\uff0c\u90a3\u4e48\u81ea\u7136\u4e5f\u5305\u542b\u9ed8\u8ba4\u6570\u636e\u6e90\u5185\u3002\n. \u60a8\u597d \u8fd9\u4e2a\u95ee\u9898\u76ee\u524d\u65e0\u6cd5\u590d\u73b0 \u8bf7\u4f7f\u7528\u6700\u65b0\u7684\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff0c\u8bf7\u5728\u8c03\u8bd5MySQLSelectVisitor.visit(final MySqlSelectGroupByExpr x)\u65b9\u6cd5\uff0c\u89c2\u5bdf\u662f\u5426\u751f\u6210\u4e86groupColumns\u5217\u8868\u4e2d\u7684\u5bf9\u8c61\u3002\n. \u5982\u679c\u8fd8\u6709\u95ee\u9898\u7ed9\u90ae\u4ef6\u7ec4\u53d1\u90ae\u4ef6\u5427. \u8fd8\u662f\u8fd9\u6837\u7684 \u6587\u6863\u91cc\u9762\u4e5f\u6709\u63cf\u8ff0\u3002\u540e\u7eed\u53ef\u80fd\u6539\u9020\u6210 \u5c06order_id=1\u8fd9\u4e2a\u6761\u4ef6\u4f20\u9012\u7ed9sub_order\uff0c\u8fd9\u6837\u9009\u54ea\u4e2a\u662f\u4e3b\u8868\u4e5f\u5c31\u6ca1\u5173\u7cfb\u4e86\n. \u8fd9\u4e2a\u65b9\u6848\u662f\u6709\u7684\n1. \u5982\u679c\u4f7f\u7528limit\uff0c \u524d\u63d0\u662f\u8981\u5047\u8bbe\u5404\u4e2a\u5206\u7247\u6570\u636e\u662f\u5747\u5300\u7684\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5408\u7406\u63a8\u65ad\u6bcf\u4e2a\u5206\u7247\u53ef\u4ee5\u8df3\u8fc7\u56fa\u5b9a\u7684\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u63d0\u53d6\u7684\u6570\u636e\u91cf\u3002\n2. \u4e0d\u7528limit\uff0c\u5206\u9875\u7684\u65f6\u5019\u4f7f\u7528\u7279\u5b9a\u5b57\u6bb5\uff08\u6bd4\u5982\u4f7f\u7528\u521b\u5efa\u65f6\u95f4\uff09\u6392\u5e8f\uff0c\u7136\u540e\u5206\u9875\u70b9\u4f7f\u7528\u8be5\u5b57\u6bb5\u3002\u8fd9\u6837\u6bcf\u4e00\u9875\u63d0\u53d6\u7684\u6570\u636e\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n. \u53ef\u4ee5\u5c06\u8fd9\u4e2a\u95ee\u9898\u5199\u6210\u6587\u6863\u5206\u4eab\u51fa\u6765. \u629b\u5f02\u5e38\u662f\u4e00\u4e2a\u4e3b\u610f\u3002\u4e0d\u8fc7\u6211\u503e\u5411\u4e8e\u5c06\u8fd9\u79cd\u884c\u4e3a\u505a\u6210\u4e00\u4e2a\u914d\u7f6e\uff0c\u7ed9\u4e00\u4e2a\u5168\u5c40\u914d\u7f6e\u5e94\u8be5\u5c31\u8db3\u591f\u4e86\n. \u5408\u5e76\u5230 #109 . \u8be5\u95ee\u9898\u4e0e #36 \u76f8\u540c\uff0c\u5df2\u7ecf\u57281.3.2\u7248\u672c\u4e2d\u5f97\u5230\u4e86\u4fee\u590d \n. \u76ee\u524dparser\u6a21\u5757\u6b63\u5728\u505a\u6bd4\u8f83\u5927\u7684\u8c03\u6574 \u4f1a\u503e\u5411\u4e8e\u4f7f\u7528\u7236\u5bf9\u8c61\u6765\u5b9e\u73b0 \u800c\u4e0d\u662f\u4f7f\u7528SQLServer\u76f8\u5173\u7684\u5bf9\u8c61\u3002\u6545\u672c\u6b21PR\u5173\u95ed\u6389\n. sjdbc\u7684api\u4e2d\uff0c\u53ea\u6709ShardingDataSource\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5176\u4ed6api\u5747\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u6545\u8bf7\u4f7f\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\u4fdd\u62a4\u673a\u5236\u3002\n. \u6ca1\u6709\u5206\u5e93\u5206\u8868\u7684\u8868\u9700\u8981\u914d\u7f6e\u9ed8\u8ba4\u6570\u636e\u6e90\uff0cDataSourceRule\u4e2d\u914d\u7f6edefaultDataSourceName\n. \u4f7f\u7528 #162 #163 #164 #165 \u8fd9\u56db\u4e2aissue\u6765\u5b9e\u73b0\n. \u8be5\u65b9\u6cd5\u5728\u4e3b\u6d41\u6570\u636e\u5e93\u9a71\u52a8\u4e2d\u4e00\u822c\u90fd\u662f\u663e\u793a\u58f0\u660e\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6570\u636e\u5e93\u4e0e\u8be5\u5b57\u7b26\u4e32\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a\n- H2 : \"H2\"\n- MySQL : \"MySQL\"\n- Oracle \uff1a\"Oracle\"\n- SQLServer \uff1a\"Microsoft SQL Server\"\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u53ea\u6709\u5fae\u8f6f\u7684SQLServer\u8f83\u4e3a\u7279\u6b8a\u3002\n\u5bf9\u4e8eIBM\u7684DB2\u60c5\u51b5\u8f83\u4e3a\u590d\u6742\uff0c\u4ece\u9a71\u52a8\u7684\u6e90\u4ee3\u7801\u770b\u8be5\u503c\u4e0d\u662f\u663e\u793a\u58f0\u660e\u800c\u662f\u4ece\u6570\u636e\u5e93\u52a8\u6001\u83b7\u53d6\u7684\u3002\u4ecejdbc\u9a71\u52a8\u6587\u6863\u4e2d\u770b\u53d6\u503c\u53ef\u80fd\u7531\u4e8e\u5b89\u88c5\u7684\u5e73\u53f0\u4e0d\u540c\u800c\u4e0d\u540c\u3002\n\u6545sjdbc\u9488\u5bf9DB2\u5c06\u4f7f\u7528\u5176\u201cDB2 for Linux, UNIX, and Windows on Linux on x86\u201d\u5e73\u53f0\u4e0a\u7684\u540d\u5b57\"DB2\"\n. \u8bf7\u5982#153 \u4e00\u6837\u63d0\u4ea4\u8be6\u7ec6\u7684\u65e5\u5fd7 \u5426\u5219\u6ca1\u6709\u529e\u6cd5\u95ee\u9898\u5206\u6790 \n. \u5bf9\u4e8ePreparedStatement\u7684\u7f13\u5b58\u5bfc\u81f4\u7684\u95ee\u9898\n. \u4ece\u65e5\u5fd7\u4e0a\u770b\uff0c\u8fd9\u6b21\u67e5\u8be2\u6700\u7ec8\u6267\u884c\u4e864\u53e5sql\uff0c\u6570\u636e\u6e90\u53ea\u6709\u4e00\u4e2adataSource\nsql\nSELECT t_user_order_0.user_id, t_user_kind_0.kind_id, t_user_order_0.order_id, t_user_order_0.remark, t_user_kind_0.type , t_user_order_0.create_time FROM t_user_order_0 LEFT JOIN t_user_kind_0 ON t_user_order_0.user_id = t_user_kind_0.user_id WHERE t_user_order_0.user_id > ? AND t_user_order_0.user_id < ? ORDER BY user_id\nsql\nSELECT t_user_order_1.user_id, t_user_kind_0.kind_id, t_user_order_1.order_id, t_user_order_1.remark, t_user_kind_0.type , t_user_order_1.create_time FROM t_user_order_1 LEFT JOIN t_user_kind_0 ON t_user_order_1.user_id = t_user_kind_0.user_id WHERE t_user_order_1.user_id > ? AND t_user_order_1.user_id < ? ORDER BY user_id\nsql\nSELECT t_user_order_0.user_id, t_user_kind_1.kind_id, t_user_order_0.order_id, t_user_order_0.remark, t_user_kind_1.type , t_user_order_0.create_time FROM t_user_order_0 LEFT JOIN t_user_kind_1 ON t_user_order_0.user_id = t_user_kind_1.user_id WHERE t_user_order_0.user_id > ? AND t_user_order_0.user_id < ? ORDER BY user_id\nsql\nSELECT t_user_order_0.user_id, t_user_kind_0.kind_id, t_user_order_0.order_id, t_user_order_0.remark, t_user_kind_0.type , t_user_order_0.create_time FROM t_user_order_0 LEFT JOIN t_user_kind_0 ON t_user_order_0.user_id = t_user_kind_0.user_id WHERE t_user_order_0.user_id > ? AND t_user_order_0.user_id < ? ORDER BY user_id\n\u7ed3\u679c\u662f\u8fd9\u56db\u53e5sql\u7ed3\u679c\u7684\u5408\u96c6\uff0c\u4f60\u53ef\u4ee5\u770b\u4e00\u4e0b \u8fd9\u56db\u4e2asql\u7684\u7ed3\u679c\u5206\u522b\u662f\u5426\u6b63\u786e\u3002\n. \u65e5\u5fd7\u7684\u7b2c\u4e00\u53e5\u662f\u4f20\u5165\u7684sql\uff0ccount()\u4f60\u6ca1\u5199\u4e2d\u95f4\u7684*\uff0c\u5e94\u8be5\u5bfc\u81f4\u5e95\u5c42\u6570\u636e\u5e93\u62a5\u9519\u4e86\u5427\u3002\n. \u7ecf\u8fc7\u6211\u4eec\u524d\u671f\u7684\u538b\u529b\u6d4b\u8bd5\uff0c\u5927\u7ea670\u4e2a\u5217\u7684\u8d85\u957fselect\u8bed\u53e5\u7684\u89e3\u6790\u4e0d\u4f1a\u8d85\u8fc750ms\uff0c\u5f53\u7136\u8fd9\u662f\u5728\u4e00\u53f0hp\u7684pc\u670d\u52a1\u5668\u4e0a\u83b7\u5f97\u7684\u7ed3\u679c\u3002\u5927\u90e8\u5206sql\u8bed\u53e5\u90fd\u4e0d\u4f1a\u8fd9\u4e48\u957f\uff0c\u6545\u6211\u4eec\u89c9\u5f97\u5bf9\u89e3\u6790\u7ed3\u679c\u7684\u7f13\u5b58\u4e5f\u4e0d\u592a\u4f1a\u52a0\u5feb\u6574\u4e2a\u6d41\u7a0b\u3002\u6240\u4ee5\u4f60\u8bf4\u7684\u5f88\u89e3\u6790\u5f88\u8017\u65f6\u8fd9\u4e2a\u95ee\u9898\uff0c\u80fd\u8fdb\u4e00\u6b65\u4e3e\u4f8b\u6765\u8bf4\u660e\u5417\uff1f\n\u5f53\u7136\uff0c\u5982\u679c\u524d\u9762\u7684\u5047\u8bbe\u88ab\u8ba4\u4e3a\u662f\u9519\u8bef\u7684\uff0c\u662f\u53ef\u4ee5\u589e\u52a0\u4f60\u8bf4\u7684\u90a3\u79cd\u7f13\u5b58\u65b9\u6848\u7684\u3002\u9700\u8981\u5173\u6ce8retention\u7684\u76f8\u5173\u95ee\u9898\u5c31\u53ef\u4ee5\u4e86\u3002\n. limit 10,20\u7684\u610f\u601d\u662f\u504f\u79fb\u91cf\u4ece10\u5f00\u59cb \u53d620\u6761\u6570\u636e\u3002\u6240\u4ee5\u8fd4\u56de20\u6761\u6570\u636e\u662f\u6b63\u5e38\u7684\u3002\u6bcf\u4e2a\u5206\u7247\u5728\u63d0\u53d6\u6570\u636e\u7684\u65f6\u5019\u504f\u79fb\u91cf\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u4f46\u662fsjdbc\u4f1a\u81ea\u52a8\u4ece\u7b2c10\u6761\u6570\u636e\u5f00\u59cb\u8f93\u51fa\uff0c\u7136\u540e\u8f93\u51fa20\u8c03\u6570\u636e\u3002\n\u5982\u679c\u4f60\u89c9\u5f97\u6709\u56f0\u96be\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2asql\u7684\u6570\u636e\u8d34\u51fa\u6765\uff0c\u7136\u540e\u518d\u5bf9\u6bd4\u6700\u7ec8\u7ed3\u679c\u89c2\u5bdf\u4e00\u4e0b\u3002\n. \u751f\u621064bit\u7684\u4e3b\u952e\uff0c\u53ef\u4ee5\u63d2\u5165\u7684MySQL\u7684bigint\u7c7b\u578b\u7684\u5b57\u6bb5\u5185\n\n. druid\u7684\u6570\u636e\u6e90\u7684stat\u8fd9\u79cdfilter\u5728\u5e76\u53d1\u4f7f\u7528\u540c\u4e00\u4e2aconnection\u94fe\u63a5\u65f6\u6ca1\u6709\u8003\u8651\u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\uff0c\u6545\u9020\u6210\u591a\u4e2a\u7ebf\u7a0b\u4fee\u6539filter\u4e2d\u7684\u72b6\u6001\u5f02\u5e38\u3002\n\u6539\u9020\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u8003\u8651\u5230mysql\u9a71\u52a8\u5728\u6267\u884cstatement\u65f6\u5bf9\u540c\u4e00\u4e2aconnection\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u94fe\u63a5\u7684\u4f1a\u8bdd\u662f\u4e32\u884c\u6267\u884c\u7684\u3002\u6545\u5728sjdbc\u7684executor\u5bf9\u4e8e\u591a\u7ebf\u7a0b\u6267\u884c\u7684\u60c5\u51b5\u4e5f\u8fdb\u884c\u4e86\u9488\u5bf9\u6570\u636e\u5e93\u94fe\u63a5\u7ea7\u522b\u7684\u540c\u6b65\u3002\u6545\u8be5\u65b9\u6848\u4e0d\u4f1a\u964d\u4f4esjdbc\u7684\u6027\u80fd\u3002\n\u540c\u65f6jdk1.7\u7248\u672c\u7684\u540c\u6b65\u91c7\u7528\u4e86\u9501\u5347\u7ea7\u6280\u672f\uff0c\u5728\u78b0\u649e\u8f83\u4f4e\u7684\u60c5\u51b5\u4e0b\u5f00\u9500\u4e5f\u662f\u5f88\u5c0f\u7684\u3002\n. \u5e94\u8be5\u662f\u5e95\u5c42\u7684\u8fde\u63a5\u6c60\u62a5\u9519\uff0c\u5728 #166 \u4e2d\u5df2\u7ecf\u4fee\u590d\u7c7b\u4f3c\u95ee\u9898\u3002\u4f7f\u7528\u6700\u65b0\u7684\u4ee3\u7801\u770b\u4e00\u4e0b\u8fd8\u6709\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \n. \u6069 \u8fd9\u6837\u5e94\u8be5\u53ef\u4ee5\u4e86\n. slave\u662f\u7684\u8fde\u63a5\u6570\u662f\u5e95\u5c42\u7684\u8fde\u63a5\u6c60\u63a7\u5236\u7684\uff0csjdbc\u6ca1\u6709\u505a\u989d\u5916\u76d1\u63a7\u3002\u5982\u679c\u8fd8\u89c9\u5f97\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u5c06\u4f60\u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u8fd8\u6709\u4f60\u662f\u5982\u4f55\u89c2\u5bdf\u8fde\u63a5\u6570\u8d85\u8fc7\u9884\u671f\u7684\u63d0\u4f9b\u51fa\u6765\n. \u5173\u95ed \u5982\u6709\u95ee\u9898\u8bf7\u53d1\u90ae\u4ef6\u7ec4\u8be2\u95ee. \u8bf7\u5c06\u4f7f\u7528\u7684\u7248\u672c\uff0c\u914d\u7f6e\u6587\u4ef6\uff0c\u65e5\u5fd7\u7b49\u8be6\u7ec6\u4fe1\u606f\u63d0\u4f9b\u51fa\u6765\n. \u4ece\u95ee\u9898\u4e0a\u770b\u4f60\u8fd9\u6bb5\u914d\u7f6e\u6ca1\u6709\u751f\u6548 \u6570\u636e\u6e90\u6ca1\u6709\u751f\u6210\u3002\u9996\u5148\u68c0\u67e5\u4e00\u4e0bspring\u73af\u5883\u9700\u8981\u5f15\u5165\u8be5\u4f9d\u8d56\nxml\n<dependency>\n    <groupId>com.dangdang</groupId>\n    <artifactId>sharding-jdbc-config-spring</artifactId>\n    <version>1.3.3</version>\n</dependency>\n\u540c\u65f6\u53c2\u7167spring\u914d\u7f6e\u6587\u6863\u4e2d\u63cf\u8ff0\u8fdb\u884c\u914d\u7f6e\uff0c\u540c\u65f6\u4f60\u4e5f\u53ef\u4ee5\u53c2\u8003ShardingJDBC\u96c6\u6210MyBatis\u7684\u4f8b\u5b50\n\u53e6\u5916\uff0c\u5982\u679c\u4e0d\u5206\u5e93\u3002\u53ef\u4ee5\u53ea\u914d\u7f6e\u4e00\u4e2a\u5e95\u5c42\u6570\u636e\u6e90\u5c31\u53ef\u4ee5\u4e86\uff0c\u5177\u4f53\u6587\u6863\u4e2d\u7ed9\u7684\u4f8b\u5b50\u662f\u5206\u5e93\u548c\u5206\u8868\u90fd\u6709\u7684\u3002\u4f60\u4ed4\u7ec6\u770b\u4e00\u4e0b\n. \u5982\u679c\u65b9\u4fbf\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684\u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u4e00\u4e0b\u3002\u518d\u5e2e\u4f60\u5b9a\u4f4d\u4e00\u4e0b\u95ee\u9898\u3002\n. \u4e0b\u9762\u8fd9\u6bb5\u914d\u7f6e\u7684\u6709\u95ee\u9898\uff1a\n``` xml\n \n\n\n\n\n\n\n```\ndatasource_01\u5e94\u8be5\u662f\u4e00\u4e2abean\u7684id\uff0c\u4ece\u4f60\u914d\u7f6e\u7684\u4e0a\u4e0b\u6587\u770b\u5e94\u8be5\u914d\u7f6e\u4e3adefaultDatasource\n. \u5173\u95ed \u5982\u6709\u95ee\u9898\u8bf7\u53d1\u9001\u90ae\u4ef6\u7ec4\u8be2\u95ee. \u5bf9 \u662f\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u751f\u6210\u7684\n. \u65f6\u95f4\u4f4d\u53ef\u4ee5\u7528160\u5e74\uff0c\u6211\u89c9\u5f97\u6ca1\u4ec0\u4e48\u5fc5\u8981\u6539\u53d8\u3002\u4f46\u662f\u80fd\u591f\u8c03\u6574\u8c03\u6574\u4f4d\u6570\u8fd8\u662f\u4e00\u4e2a\u80fd\u529b\u589e\u5f3a\n. @malong983 \u65e5\u5fd7\u8981\u63d0\u4ea4\u5168\uff0c\u76ee\u524d\u7684\u4fe1\u606f\u4e0d\u8db3\u4ee5\u5b9a\u4f4d\u95ee\u9898\uff0c\u53ef\u4ee5\u9644\u52a0\u4e00\u4e2a\u6587\u4ef6\u3002\u6216\u8005\u76f4\u63a5debug MasterSlaveDataSource.java\u768469\u884c\u4ee3\u7801\uff0c\u89c2\u5bdfupdate\u7684\u65f6\u5019\u53c8\u6ca1\u8d70masterDataSource\n. \u4e3b\u5e93\u914d\u7f6e\u9519\u8bef\u5bfc\u81f4\u7684\u95ee\u9898\n. @githublaohu \u8fd9\u4e2a\u4e3b\u8981\u662fPreparedStatementExecutor.executeBatch\u7684\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e0d\u51c6\u786e\u3002\n\u4e3b\u8981\u539f\u56e0\u662f\u6279\u91cf\u6267\u884c\u7684\u65f6\u5019\u662f\u591a\u4e2asql\uff0c\u6bd4\u5982\uff1a\norder\u8868\u7684order_id\u5355\u6570\u8def\u7531\u5230 order_1 \u53cc\u6570\u8def\u7531\u5230order_0\nupdate ... from order where order in (?,?) \n\u6b64\u65f6\u6279\u91cf\u6267\u884c\u4e24\u6b21\n1. 1,2\n1. 4,6\n\u6d4b\u8bd5\u8fd4\u56de\u503c\u5e94\u8be5\u662f[2\uff0c2] \u4f46\u5b9e\u9645\u53ef\u80fd\u662f[1,1,2]\u3002\u56e0\u4e3asjdbc\u4f1a\u628a\u540c\u4e00\u4e2a\u8868\u7684\u6279\u91cf\u6267\u884c\u653e\u5230\u4e00\u4e2apreparedstatement\u4e2d\uff0c\u6240\u4ee5[1,2] [4,6]\u662f\u4e00\u4e2apreparedstatement(order_0)\uff0c [1,2]\u662f\u53e6\u4e00\u4e2aprepared statement\uff08order_1\uff09. PreparedStatement\u7684batch\u7684\u8bed\u53e5\u662f\u9884\u7f16\u8bd1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u67e5\u8be2a\u662f\u67e5\u8be2\uff0cb\u662f\u6dfb\u52a0\u3002batch\u64cd\u4f5c\u9488\u5bf9\u7684\u662f\u4e00\u4e2a\u8bed\u53e5\u7684\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u70b9\u5e94\u8be5\u662f\u6ca1\u9519\u7684\u3002\u60a8\u53ef\u4ee5\u518d\u4ed4\u7ec6\u770b\u770b. \u597d\u7684\uff0c\u60f3\u597d\u6539\u9020\u601d\u8def\u540e\uff0c\u5728\u8fd9\u91cc\u56de\u590d\u4e00\u4e0b\uff0c\u54b1\u4eec\u8ba8\u8bba\u597d\u65b9\u6848\u518d\u52a8\u624b\u3002\u8c22\u8c22. \u975e\u5e38\u597d\u7684\u5b9e\u73b0\uff01\u8d5e\u4e00\u4e2a\u3002\n\u4f46\u662f\u8bbe\u8ba1\u4e0a\u53c8\u4e00\u4e2a\u95ee\u9898\uff1a\u62bd\u8c61\u7c7b\u4e2d\u590d\u5236\u7c98\u8d34\u4e86CommonIdGenerator\u5927\u90e8\u5206\u4ee3\u7801\uff0c\u8fd9\u6837\u662f\u6ca1\u5fc5\u8981\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u7ec4\u5408\u6a21\u5f0f\uff0c\u628aCommonIdGenerator\u653e\u5165\u90a3\u4e09\u4e2a\u65b0\u7684\u5b9e\u73b0\u7c7b\u4e2d\u3002\n\u53e6\u5916\uff0cHost\u7684\u751f\u6210\u5668\u7684\u6d4b\u8bd5\u7528\u4f8b\u5728\u6211\u7684mac\u62a5\u9519\uff0c\u6211\u8fd8\u6ca1\u770b\u539f\u56e0\uff0c\u4f30\u8ba1\u8fd9\u5c31\u662f\u5bfc\u81f4\u4f60\u8986\u76d6\u7387\u4e0b\u964d\u7684\u539f\u56e0\u3002\n\u6700\u540e\uff0c\u6211\u660e\u5929\u4f1a\u53d1\u4e00\u4e2a\u5f00\u53d1\u89c4\u8303\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u518d\u53c2\u7167\u91cc\u9762\u7684\u5185\u5bb9\u5bf9\u7ec6\u8282\u628a\u63a7\u3002\n. \u8fd9\u6837\u7684\u76ee\u524d\u8fd8\u65e0\u6cd5\u5bf9Oracle\u505a\u652f\u6301\uff0c\u6211\u4eec\u76ee\u524d\u7684\u5de5\u4f5c\u5728\u91cd\u6784Parser\u6a21\u5757\u3002\u6545\u5728\u91cd\u6784\u4e4b\u524d\u4e0d\u4f1a\u5bf9MySQL\u4ee5\u5916\u7684\u6570\u636e\u5e93\u7ed9\u4e0e\u652f\u6301\u3002\u656c\u8bf7\u671f\u5f85\n. \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u201cSELECT LAST_INSERT_ID()\u201d\u8bed\u6cd5\u6765\u8fd4\u56de\u751f\u6210\u7684\u4e3b\u952e\uff0c\u8bf7\u770bMybatis\u7684\u4f8b\u5b50\u6765\u8fd4\u56de\u751f\u6210\u7684\u4e3b\u952e\u3002. \u76ee\u524d\u4f60\u7684\u8fd9\u4e2a\u60f3\u6cd5\u662f\u505a\u4e86\u4e24\u5c42\u6620\u5c04\uff0c\u7b2c\u4e00\u5c42\u5176\u5b9e\u662f\u4e00\u4e2a\u7ebf\u6027\u9012\u589e\uff0c\u7b2c\u4e8c\u5c42\u662f\u4e00\u4e2ahash\u5747\u5300\u3002\u8fd9\u6837\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff0c\u53ef\u4ee5\u6a2a\u5411\u6269\u5c55\u6709\u80fd\u4fdd\u8bc1\u6570\u636e\u5206\u5e03\u5747\u5300\u3002\u601d\u60f3\u4e0e\u8fd9\u7bc7\u6587\u7ae0\u6bd4\u8f83\u63a5\u8fd1\u4e00\u79cd\u652f\u6301\u81ea\u7531\u89c4\u5212\u65e0\u987b\u6570\u636e\u8fc1\u79fb\u548c\u4fee\u6539\u8def\u7531\u4ee3\u7801\u7684Sharding\u6269\u5bb9\u65b9\u6848\u3002\n\u5173\u4e8e\u7b97\u6cd5\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\n1. hash\u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u8981\u5bf9\u9ad8\u4f4d\u548c\u4f4e\u4f4d\u5206\u522b\u5bf9\u5e94\u5206\u5e93\u548c\u5206\u8868\uff1f\u53ef\u4ee5\u62ff\u540c\u4e00\u4e2ahash\u503c\u53bb\u6620\u5c04\u561b\uff1f\n1. hash\u540e\u53ef\u4ee5\u505amod\u8fd0\u7b97\u561b\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u914d\u7f6e\u4f1a\u8f83\u4e3a\u65b9\u4fbf\n\u5173\u4e8eyaml\u914d\u7f6e\u6709\u51e0\u4e2a\u95ee\u9898\uff1a\n1. \u5982\u679c\u914d\u7f6e\u7684\u65f6\u5019\u752816\u8fdb\u5236\uff0c\u90a3\u4e48\u5c31\u592a\u4e0d\u660e\u786e\u4e86\u3002\u53ef\u4ee5\u8003\u8651redis cluster\u7684\u505a\u6cd5\uff0c\u7528\u5341\u8fdb\u5236\u6570\u53bb\u914d\u7f6e\u3002\u800c\u4e14\u8981\u914d\u7f6e\u8303\u56f4\uff0c\u800c\u4e0d\u662f\u53ea\u914d\u7f6e\u5206\u5272\u6570\u3002\n1. \u4e0d\u8981\u7528\u6570\u503c\u5f53\u505akey\u3002\u4e14\u6570\u636e\u8981\u660e\u786e\n\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u4e0b\u914d\u7f6e\uff1a\nyaml\n2016-10-31T17:00:00:\n      0x0000:\n        database: db0\n        tables:\n          0x0000: t_snowflake_hash_0\n          0x8000: t_snowflake_hash_1\n\u5e94\u8be5\u914d\u7f6e\u4e3a\uff1a\nyaml\ntimeRange: less than 2016-10-31T17:00:00\ndatabases:\n    - databaseRange: less than 32768\n       database: db0\n       tables:\n           - tableRange: less than  32768\n              tableName: t_snowflake_hash_0\n           - tableRange: less than MAXVALUE\n              tableName: t_snowflake_hash_1\n\u5173\u4e8e\u52a8\u6001\u8868\u7684\u95ee\u9898\uff0c\u7531\u4e8e\u4f60\u5b9e\u73b0\u7684\u53ea\u662f\u4e00\u4e2a\u7b97\u6cd5\u3002\u5176\u5b9e\u4e0d\u7528\u8003\u8651\u4f7f\u7528\u4f60\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4eba\u662f\u5426\u4f7f\u7528\u52a8\u6001\u8868\u6216\u4e0d\u662f\u52a8\u6001\u7684\u8868\u3002\n\u6700\u540edemo\u6211\u770b\u4e86\u4e00\u4e0b \uff0cGuava\u5b9e\u73b0\u4e86murmur3_32 \u7b97\u6cd5\uff0c\u8fd9\u5c31\u4e0d\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e86. 1.1 \u6211\u7406\u89e3\u4e86\u7531\u4e8e\u4f60\u662f\u8303\u56f4\u6620\u5c04\uff0c\u6240\u4ee5\u9700\u8981hash\u503c\u4e0d\u540c\u3002\n1.2 \u6b63\u5982\u4f60\u8bf4\uff0crange\u4f1a\u66f4\u52a0\u7075\u6d3b\uff0c\u8fd9\u5957\u914d\u7f6e\u7684\u7b97\u6cd5\u9002\u7528\u6027\u66f4\u5f3a\u3002\n\u4ee5\u4e0a\u4e24\u70b9\u6211\u6bd4\u8f83\u8d5e\u540c\n2.1 \u6211\u5e0c\u671b\u80fd\u6bd4\u8f83\u660e\u786e\u7684\u8fdb\u884c\u914d\u7f6e\uff0c\u7528\u6237\u4f7f\u7528\u4e0d\u8981\u6709\u6b67\u4e49\u4ea7\u751f\u3002\u6240\u4ee5\u6211\u8fd8\u662f\u575a\u6301\u7528range\u914d\u7f6e\n2.2 \u786e\u5b9ekey\u5c31\u662fbean\u4e2d\u7684\u5b57\u6bb5. 2.0\u7248\u672c\u540e\u7ed3\u6784\u53d1\u751f\u53d8\u5316\uff0c\u6545\u653e\u5f03\u8be5\u7248\u672c\u5408\u5e76. \u5206\u5e93\u5206\u8868\u662f\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u5982\u679c\u53ea\u5206\u5e93\uff0c\u5206\u8868\u7b56\u7565\u914d\u7f6e\u4e2d\u5217\u540d\u968f\u4fbf\u914d\u7f6e\uff0c\u7b97\u6cd5\u914d\u7f6e\u4e3aNoneDatabaseShardingAlgorithm. \u4f1a\u7684\uff0c\u8fd9\u4e2a\u60c5\u51b5\u53eb\u505a\u5168\u8def\u7531. \u8fd9\u4e2a\u7b97\u6cd5\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\uff0c\u76ee\u524d\u6ca1\u6709\u63d0\u4f9b\u5305\u88c5\u7b97\u6cd5. \u57fa\u672c\u8bbe\u8ba1\u6ca1\u6709\u95ee\u9898\uff0c\u6211\u89c9\u5f97\u5e94\u8be5\u628a\u5f53\u524d\u8fdb\u7a0b\u7684\u4e3b\u673a\u540d+\u8fdb\u7a0b\u7f16\u53f7\u5199\u5165\u4e34\u65f6\u8282\u70b9\u3002\u65e2\u53ef\u4ee5\u8c03\u8bd5\uff0c\u4e5f\u53ef\u4ee5\u4ee3\u66ffctime\u4f5c\u4e3a\u8282\u70b9\u662f\u5426\u88ab\u8986\u76d6\u7684\u6807\u5fd7\u3002\n\u53e6\u5916\uff0c\u9700\u8981\u8003\u8651\u591a\u8fdb\u7a0b\u5e76\u53d1\u83b7\u53d6id\u7684\u60c5\u51b5\uff0c\u589e\u52a0\u76f8\u5173\u5224\u65ad\u3002. 2.0\u7248\u672c\u540e\uff0c\u5185\u90e8\u7ed3\u6784\u53d1\u751f\u53d8\u5316\uff0c\u6545\u653e\u5f03\u8be5\u7248\u672c\u5408\u5e76. @xydonne \u5982\u679c\u4fdd\u8bc1\u6d4b\u8bd5\u8986\u76d6\u7387\u6ca1\u6709\u4e0b\u964d \u5c31\u53ef\u4ee5\u63d0\u4ea4pull request\u3002\u6211\u5c06\u5728pr\u4e2d\u505acode review. \u76ee\u524d\u4e0d\u652f\u6301dual\u865a\u62df\u8868\u8fd9\u79cd\u60c5\u51b5. dual \u8868\u64cd\u4f5c\u5176\u5b9e\u90fd\u662f\u4e00\u4e9b\u7b97\u6cd5\u3002\u4f5c\u4e3asjdbc\u7684\u5b9a\u4f4d\u6765\u8bf4\u4e0d\u592a\u9002\u5408\u53bb\u5b9e\u73b0\u3002\u800c\u4e14\u4e5f\u6ca1\u6709\u53bb\u5b9e\u73b0\u51fd\u6570\u7684\u5fc5\u8981\u3002\u8fd9\u4e9b\u64cd\u4f5c\u5e94\u8be5\u5728\u5e94\u7528\u4e2d\u53bb\u5b8c\u6210\u3002\n\u5173\u4e8e\u4e3b\u952e\u751f\u6210sjdbc\u5df2\u7ecf\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5173\u6ce8\u4e00\u4e0b\u76f8\u5173\u6587\u6863\u3002. #93 \u63d0\u5230\u8fd9\u4e2a\u529f\u80fd\uff0c\u662f\u5c06join\u4e8eupdate\u7ec4\u5408\u3002\nupdate\u6587\u6863\u63cf\u8ff0\u8be5\u529f\u80fd\u5177\u4f53\u8868\u73b0\u3002\n\u5b9e\u73b0\u8be5\u529f\u80fd\u53ef\u4ee5\u4f9d\u8d56\u4e8eselect\u7684\u5b9e\u73b0\u3002\u4f46\u8be5\u529f\u80fd\u4f7f\u7528\u8303\u56f4\u4e0d\u5927\uff0c\u4f18\u5148\u7ea7\u8f83\u4f4e\u3002\n. issue\u4e0d\u63a5\u53d7\u5e2e\u52a9\u95ee\u9898 \u8bf7\u5c06\u914d\u7f6e\u95ee\u4ef7 \u65e5\u5fd7\u53d1\u5230\u90ae\u4ef6\u7ec4\u4e2d. \u5df2\u7ecf\u4fee\u6539. \u90e8\u5206\u8868\u7684\u9879\u76ee\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6570\u636e\u6e90\u3002\u914d\u7f6eShardingRule\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u914d\u7f6e\u67d0\u4e00\u4e2a\u6570\u636e\u6e90\u662f\u9ed8\u8ba4\u6570\u636e\u6e90\u3002\n\u4f7f\u7528spring\u7684\u914d\u7f6e \u914d\u7f6eactual-table\u7684\u65f6\u5019\u53ef\u4ee5\u7528inline\u8868\u8fbe\u5f0f\uff1at_order${0..99}\u3002\u8fd9\u6837100\u5f20\u8868\u5c31\u914d\u7f6e\u597d\u4e86\u3002\n\u6700\u540e \u76ee\u524dissue\u4e0d\u63a5\u53d7\u95ee\u9898\u54a8\u8be2\u4e86\u3002\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u52a0qq\u7fa4\uff0c\u6216\u53d1\u9001\u90ae\u4ef6\u5230sharding_jdbc@groups.163.com. \u8bf7\u53d1\u9001debug\u7ea7\u522b\u65e5\u5fd7\u5230\u90ae\u4ef6\u7ec4\uff0cissue\u91cc\u9762\u53ea\u80fd\u53d1\u9001\u4e00\u4e9b\u786e\u5b9a\u7684bug. \u540e\u7eed\u8ba1\u5212\u662f\u5f00\u53d1\u8fd0\u7ef4\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7248\u672c\uff0c\u76ee\u524d\u5efa\u8bae\u4f7f\u7528sjdbc\u81ea\u5df1\u5f00\u53d1\u4e00\u4e2aserver\u3002\u524d\u6bb5\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9brest\u63a5\u53e3\u6765\u67e5\u8be2\u6570\u636e. sjdbc\u7684dbname\u4ee3\u8868\u7684\u662fshardingrule\u4e2d\u914d\u7f6e\u7684datasourcerule\u540d\u5b57\uff0c\u4e5f\u5c31\u662f\u90a3\u4e2amap\u6620\u5c04\u7684\u540d\u5b57\u3002\u5e76\u4e0d\u662f\u6570\u636e\u5e93schema\u7684\u540d\u5b57\u3002\n\u53e6\u5916\uff0c\u8fd9\u4e2a\u5730\u65b9\u7684bug\u5728\u4e8e\u5bf9\u4e8e\u8fd9\u79cd\u9519\u8bef\u63d0\u793a\u4e0d\u53cb\u597d\uff0c\u5e76\u5e94\u8be5\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u800c\u662f\u5e94\u8be5\u629b\u51fa\u66f4\u6709\u610f\u4e49\u7684\u5f02\u5e38\u3002. java\n    public final boolean visit(final SQLPropertyExpr x) {\n        //\u5bf9\u4e8ein\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684parent\u662fnull\uff0c\u6240\u4ee5\u6ca1\u6709\u89e3\u6790\u51fa\u6765\u3002\n        if (!(x.getParent() instanceof SQLBinaryOpExpr) && !(x.getParent() instanceof SQLSelectItem)) {\n            return super.visit(x);\n        }\n        if (!(x.getOwner() instanceof SQLIdentifierExpr)) {\n            return super.visit(x);\n        }\n        String tableOrAliasName = ((SQLIdentifierExpr) x.getOwner()).getLowerName();\n        if (getParseContext().isBinaryOperateWithAlias(x, tableOrAliasName)) {\n            return super.visit(x);\n        }\n        printToken(tableOrAliasName);\n        print(\".\");\n        print(x.getName());\n        return false;\n    }\n. \u8bf7\u4f7f\u75281.0.12\u7248\u672c. \u8fd9\u4e9b\u4fe1\u606f\u76ee\u524d\u90fd\u662f\u5185\u90e8\u4f7f\u7528\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u53bb\u521b\u5efa\u8868\u3002\u800c\u4e14sjdbc\u7684\u7406\u5ff5\u5c31\u662f\u8f7b\u91cf\u7ea7\u7684\uff0cddl\u64cd\u4f5c\u5e94\u8be5\u4f7f\u7528\u8fd0\u7ef4\u624b\u52a8\u53bb\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7a0b\u5e8f\u53bb\u5b9e\u73b0. \u8bf7\u53d1\u9001\u90ae\u4ef6\u5230\u5230\u90ae\u4ef6\u7ec4\u4e2d. sjdbc\u4f1a\u6839\u636esql\u4e2d\u6570\u503c\u7684\u957f\u5ea6 \u81ea\u52a8\u5c06\u5176\u8bc6\u522b\u4e3aint\u6216\u8005long\u3002\u8fd9\u91cc\u5982\u679c\u53ef\u4ee5\u5c06\u6cdb\u578b\u58f0\u660e\u4e3aNumber\u7c7b\u578b\uff0c\u6765\u4fdd\u8bc1\u517c\u5bb9\u6027\u3002. agree,yes,+1. +1 Welcome my former boss . Welcome,+1 . Welcome,+1 . +1. zk\u4e2d\u8ddf\u8282\u70b9\u5e94\u8be5\u662f\u201csharding-jdbc\u201d\uff0c\u4e14\u8fd9\u4e2a\u8ddf\u8282\u70b9\u662f\u53ef\u914d\u7f6e\u7684\u3002. \u5c06\u6839\u8282\u70b9\u52a0\u5230namespace\u4e2d\uff0c\u8fd9\u6837\u540e\u7eed\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e0d\u5173\u5fc3\u8fd9\u4e2a\u8ddf\u8282\u70b9\u4e86. \u8fd9\u4e2a\u90e8\u5206\u4e3a\u4ec0\u4e48\u8981clear ZooDefs.Ids.CREATOR_ALL_ACL\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff1f\n\u53e6\u5916\uff0c\u76f4\u63a5\u4f7f\u7528ZooDefs.Ids.CREATOR_ALL_ACL\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f. lock\u5e94\u8be5\u505a\u6210\u5c40\u90e8\u53d8\u91cf. \u5bf9client\u7684\u8bbf\u95ee\u9700\u8981\u5224\u65ad\u7a7a\u6307\u9488\uff0c\u76ee\u524d\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u53d1\u73b0\u63a7\u5236\u53f0\u51fa\u73b0\u7a7a\u6307\u9488\u5f02\u5e38. \u56e0\u4e3aorderIdSet\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u4e24\u90e8\u64cd\u4f5c\u5e94\u8be5\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528. \u4e0d\u8981\u4f7f\u7528\u6362\u884c\u7b26\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684\u3002\u4f7f\u7528\u9017\u53f7\u7b49\u901a\u7528\u5206\u9694\u7b26\u5373\u53ef. namespace\u8bbe\u7f6e\u4e3a /sharding-jdbc/appName. \u5e94\u8be5\u53ea\u4f7f\u7528node\u8282\u70b9\uff0c/node/n-1 ,/nodes/n-2 \u3002\u8fd9\u4e9b\u540e\u7f00\u5c31\u662forderIdSet\u4ee3\u8868\u7684\u90a3\u4e9b\u6570\u5b57\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e0ezk\u672c\u8eab\u7684sequence\u8282\u70b9\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u8ba9\u719f\u6089zk\u7684\u4eba\u611f\u89c9\u6bd4\u8f83\u8212\u670d. \u6b64\u65f6\u53d1\u73b0node\u91cd\u590d\u4e86\uff0c\u5e94\u8be5\u5148\u5c06CommonSelfIdGenerator\u8bbe\u7f6e\u4e3a\u4e0d\u53ef\u8bbf\u95ee\u3002\u9632\u6b62\u5728doRegister\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u91cd\u590d\u7684id\u3002. namespace\u53ea\u8981\u8bbe\u7f6e\u4e3asharding-jdbc\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b50\u8282\u70b9\u7ee7\u7eed\u521b\u5efa\u3002. ",
    "bohrqiu": "\n\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5305\u542b\u5462\uff1f\n\u6709\u4f7f\u7528\u8005\uff0c\u91cd\u8f7d\u7684\u5440\n. 1. Properties\u5bf9\u8c61\u63d0\u4f9b\u7684\u80fd\u529b\u8d85\u8fc7\u4e86\u573a\u666f\u9700\u8981\u7684\uff0c\n\u6539\u6210map\u53ef\u4ee5\u89e3\u51b3\u7684\u3002\n\nProperties properties=new Properties();\n   properties.put(\"metrics.enable\",true);\nproperties#put\u65b9\u6cd5\u53c2\u6570\u7b7e\u540d\u4e3aObject,Object\uff0c\u6cdb\u578b\u7684\u7406\u89e3\u6210\u672c\u5e94\u8be5\u6bd4\u8f83\u4f4e\uff0c\n. ",
    "wangda": "\u5206\u5e93\u5206\u8868\u7684\uff0c\u5982\u679c\u8868\u4e2d\u6709\u81ea\u589e\u5b57\u6bb5\uff0c\u4e5f\u662f\u6709\u8fd9\u4e2a\u9700\u6c42\u7684\u3002\n. \u7279\u5fae\u667a\u80fd http://www.trawe.cn. agree, yes, +1. ",
    "JimmyLincole": "+1\uff0c\u4e5f\u6709\u8fd9\u6837\u7684\u9700\u6c42\n. ",
    "bwzhang2011": "@hanahmily, \u80fd\u5426\u63d0\u4f9b\u4e00\u4e0b\u601d\u8def\u548c\u8303\u4f8b\u3002\n. @terrymanu, \u597d\u7684\uff0c\u521a\u624d\u5df2\u7ecf\u6307\u51fa\u4e86\u6211\u4eec\u8fd9\u8fb9\u7528\u7684DRUID\u7684\u7248\u672c\u8981\u9ad8\u4e8e1.0.12\uff08\u6bd4\u59821.0.16\u7b49\uff09\uff1b\u6b64\u5916\uff0c\n\u6211\u6ce8\u610f\u5230MySQLSelectVisitor\u7c7b\u4e2d\u5f15\u7528\u7684MySqlSelectGroupByExpr\uff08\u53731.0.12\u7248\u672c\u7684\uff09\u4e0e1.0.17\uff08\u5f53\u524dG.A\u7248\u672c\uff09\u7684MySqlOrderingExpr\u5185\u5bb9\u57fa\u672c\u662f\u8fd1\u4f3c\u7684\u2014\u2014\u5373\u66ff\u6362\u6210\u8be5\u7c7b\u540e\u4e0d\u4f1a\u62a5\u9519\u2014\u2014\u4ecedruid\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u8be5\u7c7b\u4e3b\u8981\u6d89\u53ca\u7684\u4ecd\u7136\u662forder\u7684\u5904\u7406\uff08\u5347\u5e8f\u548c\u964d\u5e8f\uff09\u56e0\u6b64druid\u624d\u4f1a\u5c06\u5176\u505a\u4e86\u66ff\u4ee3\u7684\uff08\u731c\u6d4b\uff09\u3002\u540e\u7eed\u6211\u4f1a\u6253\u4e00\u4e2apatch\u7684\u5305\u653e\u5230\u672c\u5730\u7684maven(\u6d4b\u8bd5\u4e00\u4e0b\u5176\u4ed6\u7684\u662f\u5426\u80fd\u4e0e\u5f53\u524d\u7684DRUID\u517c\u5bb9\uff09\u2014\u2014shard jdbc\u4e5f\u53ef\u4ee5\u591a\u4e00\u4e9b\u5206\u652f\n. \u8865\u5145\uff1a\u6211\u5347\u7ea7\u4e86DRUID\u7684\u4f9d\u8d56\u52301.0.17\uff0c\u53c2\u8003https://github.com/dangdangdotcom/sharding-jdbc/issues/24 \u7684\u6539\u52a8\u3002\u5c1a\u4e0d\u6e05\u695a\u662f\u5426\u662f\u56e0\u4e3adruid\u4f9d\u8d56\u7684\u6539\u52a8\u9020\u6210\u7684\uff0c\u82e5\u4e0d\u662f\u90a3\u4e48insert\u90e8\u5206\u662f\u5426\u6709\u5f3a\u5236\u9700\u6307\u660esharding column\u7684\u8981\u6c42\n. @terrymanu, \u6211\u5c1d\u8bd5\u4e86\u5305\u542b\u6709transaction\u7684\u5206\u652f\uff081.0.1-SNAPSHOT\uff09\uff0c\u7136\u540e\u7f16\u8bd1\u8fd9\u4e2a\u7248\u672c\u7684sharding-jdbc-core\uff0c\u53d1\u73b0\u6d4b\u8bd5\u662f\u901a\u8fc7\u7684\u3002\u4f46\u5207\u6362\u52301.0.1\u7684\u6b63\u5f0f\u7248\u5219\u629b\u51fa\u4e0a\u9762\u7684\u9519\u8bef\u4e86\u3002\n. @hanahmily, \u611f\u8c22\u66f4\u65b0\u56de\u590d\uff08\u4ee5\u53ca\u4e0d\u65ad\u6539\u8fdb\uff09\uff0c\u540e\u7eed\u5c06\u66f4\u65b0\u52301.1.0\u7248\u672c\n. @terrymanu,  any update with such issue ?\n. @hanahmily, \u8fd9\u4e2aBUG\u4e0b\u4e2a\u7248\u672c\uff081.3.2\uff09\u80fd\u5426\u4fee\u590d\u554a\n. ",
    "elite360022": "\u5168\u5c40\u552f\u4e00\u4e3b\u952e\u751f\u6210\n. ",
    "sam2099": "sorry\uff0c miss\n. ",
    "dachuanz": "\u6211\u6dfb\u52a0\u4e86postgresql \u652f\u6301\n. \u662f\u4e0d\u662f\u4e0d\u505a\u5206\u8868\uff1f\n. \u770b\u9519\u4e86\uff0c\u4e0d\u597d\u610f\u601d\n. ",
    "gfreezy": "\nsetCatalog \u573a\u666f\u662f\uff1a\n   \u5728\u8bbe\u8ba1\u5206\u5e93\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4ee5\u540e\u65b9\u4fbf\u6269\u5c55\uff0c\u4f1a\u4f7f\u7528\u6bd4\u8f83\u5927\u7684\u5207\u7247\uff0c\u6bd4\u5982\u62c6\u5206\u4e3a 4096 \u4e2ashard\u3002\u4f46\u662f\u521d\u671f\u7684\u6570\u636e\u91cf\u5e76\u4e0d\u4f1a\u5f88\u5927\uff0c\u6bd4\u5982\u7528 16 \u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u673a\u5668\u8dd11\u4e2a\u6570\u636e\u5e93\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u653e 256 \u4e2a db\u3002\u6309\u7167\u73b0\u6709\u7684\u4e00\u4e2adb\u4e00\u4e2a\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2aworker\u5c31\u8981\u7528\u6389\u6570\u636e\u5e93256\u4e2a\u8fde\u63a5\uff0c\u968f\u4fbf\u8d77\u51e0\u5341\u4e2aworker\uff0c\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6570\u5c31\u6ee1\u4e86\u3002\n\u8fd9\u4e2a\u4e0d\u662f\u5f88\u4e86\u89e3\nsetSchema \u662f PG \u7684\u5417\uff1f\u5bf9 PG \u4e0d\u4e86\u89e3\uff0c\u53ea\u6d4b\u8bd5\u4e86 MySQL\n. \u5e94\u8be5\u600e\u4e48\u4fee\uff0c\u53ef\u4ee5\u5927\u6982\u89e3\u91ca\u4e0b\u5417\uff0c\u6211\u53ef\u4ee5\u6765\u6539. druid \u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e2abug\uff0c\u53ef\u4ee5\u5c06 sjdbc \u7684 druid \u4f9d\u8d56\u5347\u7ea7\u5417\n\nhttps://github.com/alibaba/druid/commit/3cf7cdf59b9c46850cdc7620141a4da54f4b228d. \u4e0b\u53a8\u623f http://www.xiachufang.com. ",
    "YoReay": "\u975e\u5e38\u62b1\u6b49\uff01\n. ",
    "coveralls": "\nCoverage remained the same at 85.445% when pulling 631b939dafe32dffd7d9a83049ffb98b803083e1 on sam2099:master into 4b9b8c8d301c9f1a62c42c1c0c399358b0dcc159 on dangdangdotcom:master.\n. \nCoverage remained the same at 85.445% when pulling 631b939dafe32dffd7d9a83049ffb98b803083e1 on sam2099:master into 4b9b8c8d301c9f1a62c42c1c0c399358b0dcc159 on dangdangdotcom:master.\n. \nCoverage remained the same at 85.445% when pulling 631b939dafe32dffd7d9a83049ffb98b803083e1 on sam2099:master into 4b9b8c8d301c9f1a62c42c1c0c399358b0dcc159 on dangdangdotcom:master.\n. \nCoverage decreased (-1.3%) to 91.394% when pulling 912f426624ac45ea724115bd0566e0d25398a5c1 on ziscloud:master into e1bbc5c9cd0e0939e2249725bc66f9b4727e9c4d on dangdangdotcom:master.\n. \nCoverage decreased (-1.4%) to 91.282% when pulling bf94644108ec77e06794d4ccb96efe87a0558239 on ziscloud:master into e1bbc5c9cd0e0939e2249725bc66f9b4727e9c4d on dangdangdotcom:master.\n. \nCoverage decreased (-1.9%) to 90.715% when pulling 86cc6aff7289ab277b0d2c39cd97da63bd3f0e7e on ziscloud:master into e1bbc5c9cd0e0939e2249725bc66f9b4727e9c4d on dangdangdotcom:master.\n. \nCoverage decreased (-0.05%) to 92.082% when pulling 0e524de5a429a3596946767474777bf7f1cc54ee on ziscloud:master into e46365647a38afc207905d2d906f454ba1876dc4 on dangdangdotcom:master.\n. \nCoverage decreased (-0.08%) to 92.977% when pulling 0cae3de36d8deada2806c9fb5cff23277593e5b4 on ziscloud:master into 28a3ed2f502751bb4b89fe4f7c5e78e4fce9aae7 on dangdangdotcom:master.\n. \nCoverage decreased (-0.08%) to 92.977% when pulling 0cae3de36d8deada2806c9fb5cff23277593e5b4 on ziscloud:master into 28a3ed2f502751bb4b89fe4f7c5e78e4fce9aae7 on dangdangdotcom:master.\n. \nCoverage decreased (-0.08%) to 92.977% when pulling 0cae3de36d8deada2806c9fb5cff23277593e5b4 on ziscloud:master into 28a3ed2f502751bb4b89fe4f7c5e78e4fce9aae7 on dangdangdotcom:master.\n. \nCoverage decreased (-0.08%) to 92.977% when pulling 0cae3de36d8deada2806c9fb5cff23277593e5b4 on ziscloud:master into 28a3ed2f502751bb4b89fe4f7c5e78e4fce9aae7 on dangdangdotcom:master.\n. \nCoverage remained the same at 93.174% when pulling 637eb8e3bde9652d458140ab18a5423c9d06ef06 on wudongpo:master into 86732af709c3ecae3242aadb0deb692b8c94c6b9 on dangdangdotcom:master.\n. \nCoverage remained the same at 93.174% when pulling 3d7e185a9f2cb9a77a2290d417752b149f3242bd on xydonne:master into d2bfbcfc9d604582de79c7bb6cd33915e9f7a4de on dangdangdotcom:master.\n. \nCoverage decreased (-0.1%) to 93.064% when pulling 4ab73d09275caf25f0af53d51fa30b950ced08dd on jinfei21:master into 77c4e6c441c2f6d8ecb474c7d6ada91f7a73468e on dangdangdotcom:master.\n. \nCoverage remained the same at 93.207% when pulling 00d5dbca94f80547b86de050dbccd6b84b9fc9bd on sd4324530:master into fe49c45d74f4c21ca2f5bc6ec2882684176b38c4 on dangdangdotcom:master.\n. \nCoverage increased (+0.004%) to 93.158% when pulling a66815937c634268d016578f017a266604b1b4d1 on lpn520:master into c97a233e647c1791d0dd5b051d951f7c0db0b4d0 on dangdangdotcom:master.\n. \nCoverage increased (+0.01%) to 93.219% when pulling f63f70aa92ff2717c7ea07b39e8f28d1867df978 on bingoohuang:master into 2c2fc98c848eb09f7df2f3bb359bca11cd2ea0e7 on dangdangdotcom:master.\n. \nCoverage increased (+0.01%) to 93.219% when pulling f63f70aa92ff2717c7ea07b39e8f28d1867df978 on bingoohuang:master into 2c2fc98c848eb09f7df2f3bb359bca11cd2ea0e7 on dangdangdotcom:master.\n. \nCoverage remained the same at 93.192% when pulling 910ca00da5a5772f0b6806535a324a3b0c393ec8 on sam2099:master into 577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed on dangdangdotcom:master.\n. \nCoverage decreased (-4.2%) to 89.003% when pulling d0541612f2d4ede4feda836cfca1646297740729 on cnJun:master into 438f02f426aec350669256b5e305ed4b9f58ae28 on dangdangdotcom:master.\n. \nCoverage remained the same at 93.418% when pulling 48318d5d6f8a1e19bc28062e1e25d282f6ce8d6f on jammyjaccy:master into 2ce5309e448abdbe1d64292877836dc8744e555a on dangdangdotcom:master.\n. \nCoverage decreased (-4.3%) to 89.418% when pulling 387f5045d46c4ef4dfbade218a445c9d070e9422 on xydonne:master into 5a416373309429b9ad02c507a2e8723196d81e95 on dangdangdotcom:master.\n. \nCoverage decreased (-4.3%) to 89.418% when pulling 659c42e394530319cc93954d668bce2c9335733c on xydonne:master into 5a416373309429b9ad02c507a2e8723196d81e95 on dangdangdotcom:master.\n. \n\nCoverage increased (+0.03%) to 93.748% when pulling 1ad2ad8c6bfe3d049bddf37bf896887c93abfc68 on xydonne:id-generator/192 into de6bf4f674d5ea45ed36acb8747a0aed5cf7346a on dangdangdotcom:master.\n. \n\nCoverage increased (+0.02%) to 93.769% when pulling 14f31838a418043f0b97971d0af30964975440cb on xydonne:id-generator/191 into 0b8fd82fbce1f416c8771d74591f01da841b3ce9 on dangdangdotcom:master.\n. \n\nCoverage decreased (-0.006%) to 93.734% when pulling 0799b8f13d1ffedd9e29bb7a81fac4f1a4042aed on StormAll:210 into ab78772d4e30e69cddc95a7b893fe750b52f2323 on dangdangdotcom:master.\n. \n\nCoverage increased (+0.02%) to 93.759% when pulling 3dab47ebf7744c635f1b35dc58d5063e434d35d3 on StormAll:210 into ab78772d4e30e69cddc95a7b893fe750b52f2323 on dangdangdotcom:master.\n. \n\nCoverage increased (+0.01%) to 93.775% when pulling ae8d5c5cf8cfe388b1f5d88ec7a5ba64763ac7fb on iamhuzl:merger/215 into 32b350d6f0bd4b1e63cc8d58b4935c816eb40860 on dangdangdotcom:master.\n. \n\nCoverage decreased (-4.0%) to 89.836% when pulling 8d0e8d3de268c53858c1fee29688a476262d2406 on xydonne:id-generator/190 into 5d599c41dd50c51c2d66b3960863441abf642de9 on dangdangdotcom:1.4.2.\n. \n\nCoverage decreased (-4.0%) to 89.836% when pulling 6b880cb2085c661711b0d61dc985191f6c810d88 on xydonne:id-generator/190 into 5d599c41dd50c51c2d66b3960863441abf642de9 on dangdangdotcom:1.4.2.\n. \n\nCoverage decreased (-4.0%) to 89.836% when pulling f4e8d941543ee85463dffb22329838fda749c703 on xydonne:id-generator/190 into 5d599c41dd50c51c2d66b3960863441abf642de9 on dangdangdotcom:1.4.2.\n. \n\nCoverage decreased (-4.05%) to 89.757% when pulling a73e8f954b070f71287e5b19089bc4ccaa3dee2f on xydonne:id-generator/190 into 5d599c41dd50c51c2d66b3960863441abf642de9 on dangdangdotcom:1.4.2.\n. \n\nCoverage decreased (-0.002%) to 93.88% when pulling bb8af7902d7312b5fe3c6cc21064aff8b5240ab7 on yzl14141141:master into b17c85e3aa1ce80bda36997cdca2dca62d82fcd6 on dangdangdotcom:master.\n. \n\nCoverage increased (+0.08%) to 85.964% when pulling e5b738edbec09627dd254e52944983aff6637ac0 on boddiguo:master into e8d495592159b6573e89ebef09286be1a82d2eea on dangdangdotcom:1.5.0.M3-SNAPSHOT.\n. \n\nCoverage increased (+0.08%) to 85.614% when pulling 846b24ac750c7846b2b9fb72628056d2967e0cc7 on boddiguo:master into 8bdbfa6f3da5931be9df62037cae3b8ed1be91eb on dangdangdotcom:1.5.0.M3-SNAPSHOT.\n. \n\nCoverage remained the same at 85.891% when pulling d7be3a9a8bc5f4bbeea200b2aa6e49e10c4565ef on DogFc:master into eda7204596b24b471e19dde7b1eedff74a5c9e92 on dangdangdotcom:1.5.0.M4-SNAPSHOT.\n. \n\nCoverage remained the same at 85.891% when pulling f5d40257ed5f00e24f7160139978eac3986b1a73 on DogFc:1.5.0.M4-SNAPSHOT into eda7204596b24b471e19dde7b1eedff74a5c9e92 on dangdangdotcom:1.5.0.M4-SNAPSHOT.\n. \n\nCoverage remained the same at 86.035% when pulling 3fed4d4f83b5a6b8a7d3aca03323bf486cd0a877 on alleiming:master into d6ac50704f5e45beeeded09a4f0b160c7320b993 on dangdangdotcom:master.\n. \n\nCoverage remained the same at 86.035% when pulling 3fed4d4f83b5a6b8a7d3aca03323bf486cd0a877 on alleiming:master into d6ac50704f5e45beeeded09a4f0b160c7320b993 on dangdangdotcom:master.\n. \n\nCoverage decreased (-0.03%) to 86.001% when pulling 3a00d604ae798e295c6077d7fbf874448a44c8c4 on adamswanglin:issue#322 into d6ac50704f5e45beeeded09a4f0b160c7320b993 on dangdangdotcom:master.\n. \n\nCoverage decreased (-0.03%) to 88.33% when pulling 21c326939bce09f5d0ec73f45563e85807bf986a on YunaiV:1.5.2-SNAPSHOT into c96a91e76cbce11bb24bbd5802cfb23c7ca3d95c on dangdangdotcom:1.5.2-SNAPSHOT.\n. \n\nCoverage decreased (-0.01%) to 88.316% when pulling f90a17f676809a5a73c7ebbeb87cb415e1985255 on adamswanglin:1.5.2-SNAPSHOT into e16f6eec7ac49b10160fba931f841c2cbe79cc31 on dangdangdotcom:1.5.2-SNAPSHOT.\n. \n\nCoverage remained the same at 90.542% when pulling 4b163d78fcee4ef01929c706493775c824c9d54f on guangyun1013:1.5.3-SNAPSHOT into ffddd4f114db03501904480bb59cf0cf4767a19d on dangdangdotcom:1.5.3-SNAPSHOT.\n. \n\nCoverage remained the same at 90.542% when pulling d2520408c59fd1dc87ea56336960a705dbe0da39 on guangyun1013:1.5.3-SNAPSHOT into ffddd4f114db03501904480bb59cf0cf4767a19d on dangdangdotcom:1.5.3-SNAPSHOT.\n. \n\nCoverage decreased (-0.2%) to 90.295% when pulling ae716d6ab2f9310dbc67d088507041fe780f471c on guangyun1013:1.5.3-SNAPSHOT into ffddd4f114db03501904480bb59cf0cf4767a19d on dangdangdotcom:1.5.3-SNAPSHOT.\n. \n\nCoverage decreased (-0.3%) to 90.254% when pulling 1ae817ff48d8caebb8b5d31c146f7eaacd7965d7 on guangyun1013:1.5.3-SNAPSHOT into ffddd4f114db03501904480bb59cf0cf4767a19d on dangdangdotcom:1.5.3-SNAPSHOT.\n. \n\nCoverage remained the same at 90.254% when pulling 2365a46add742db42527e15b2fd478004d895244 on leeyazhou:master into 5ad49031f6036ebb83b335af61837b271eabf1d8 on dangdangdotcom:master.\n. \n\nCoverage remained the same at 90.254% when pulling 3fa583d65e81fe06e07e87f018b09ae3b1a5890e on yue530tom:master into 5ad49031f6036ebb83b335af61837b271eabf1d8 on dangdangdotcom:master.\n. \n\nCoverage remained the same at 84.846% when pulling e49ea18f8d0afbfddc5b5e570c19655023620108 on yue530tom:2.0.0.M1 into 9a0a0a2ec362a43b4586a1c0b4cd8f4302f8dc5e on dangdangdotcom:2.0.0.M1.\n. \n\nCoverage decreased (-0.3%) to 84.107% when pulling 189f1233301e1175ef72836d9c98848938c4266b on guangyun1013:2.0.0.M1 into be72ba8da7f5d6d6b76213890bbcc98fcaae4beb on shardingjdbc:2.0.0.M1.\n. \n\nCoverage decreased (-0.3%) to 84.107% when pulling c5cdb5ea642aa632956577f61b2c90c314404b6f on guangyun1013:2.0.0.M1 into be72ba8da7f5d6d6b76213890bbcc98fcaae4beb on shardingjdbc:2.0.0.M1.\n. \n\nCoverage remained the same at 84.639% when pulling 22259a9c9683742a5f7fa444553278b9050a01fc on guangyun1013:2.0.0.M1 into a89c95a07c77722cbe86a79802d253a70636ef85 on shardingjdbc:2.0.0.M1.\n. \n\nCoverage remained the same at 84.601% when pulling 5a49c676f6a947057e0c1077c24c9aa165c99b8b on wu-sheng:patch-1 into 897ac01c52c657134ca8975dc83d4c4dff106f99 on shardingjdbc:master.\n. \n\nCoverage decreased (-0.01%) to 84.586% when pulling 80770ca8590ebd71fe74452172637859443ad76b on hanahmily:master into f08802776975af250b20023b2d855ff7aad36914 on shardingjdbc:master.\n. \n\nCoverage remained the same at 84.586% when pulling 1b062ca57e75d9ac8c5ab4f477fbaa6c0c0a9c66 on TimvdLippe:mockito-internal into d5c1ff12ca51b50df1f2e6d33395bffeaf8f3c71 on shardingjdbc:master.\n. \n\nCoverage increased (+0.06%) to 83.685% when pulling 213e5ce50c95dec6fdf8b3abb89dfcfa7c6fc7bc on guangyun1013:2.0.0.M2-SNAPSHOT into c7047c959777e6a1792daa10fc75be2ddac0c141 on shardingjdbc:2.0.0.M2-SNAPSHOT.\n. \n\nCoverage increased (+0.08%) to 83.709% when pulling 525cd85ea55f3203d052e097b75c7242aedcecb0 on guangyun1013:2.0.0.M2-SNAPSHOT into c7047c959777e6a1792daa10fc75be2ddac0c141 on shardingjdbc:2.0.0.M2-SNAPSHOT.\n. ## Pull Request Test Coverage Report for Build 4833\n\n0 of 3 (0.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.02%) to 22.726%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/stream/MemoryStrictlyExecuteEngine.java | 0 | 3 | 0.0%\n | **Total:** | **0** | **3** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationMasterSlaveDataSourceFactoryBean.java | 1 | 66.67% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4832: |  0.02% |\n| Covered Lines: | 8114 |\n| Relevant Lines: | 35703 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4864\n\n68 of 135 (50.37%)  changed or added relevant lines in 14 files are covered.\n11 unchanged lines in 5 files lost coverage.\nOverall coverage decreased (-0.05%) to 65.952%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/SpringShardingDataSource.java | 0 | 1 | 0.0%\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/OrchestrationShardingDataSourceFactory.java | 2 | 4 | 50.0%\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/OrchestrationMasterSlaveDataSourceFactory.java | 2 | 4 | 50.0%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java | 1 | 3 | 33.33%\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationListenerManager.java | 6 | 9 | 66.67%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java | 2 | 7 | 28.57%\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationShardingDataSource.java | 8 | 22 | 36.36%\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationMasterSlaveDataSource.java | 20 | 36 | 55.56%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java | 2 | 24 | 8.33%\n | **Total:** | **68** | **135** | **50.37%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationMasterSlaveDataSourceFactoryBean.java | 1 | 66.67% |\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationListenerManager.java | 1 | 58.54% |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java | 2 | 15.79% |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java | 3 | 13.46% |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java | 4 | 71.43% |\n | **Total:** | **11** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4860: |  -0.05% |\n| Covered Lines: | 8366 |\n| Relevant Lines: | 12685 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4865\n\n0 of 11 (0.0%)  changed or added relevant lines in 3 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.01%) to 65.987%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java | 0 | 6 | 0.0%\n | **Total:** | **0** | **11** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationMasterSlaveDataSourceFactoryBean.java | 1 | 66.67% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4860: |  -0.01% |\n| Covered Lines: | 8379 |\n| Relevant Lines: | 12698 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4873\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.02%) to 66.097%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/ShardingProxy.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 76.81% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4868: |  0.02% |\n| Covered Lines: | 8391 |\n| Relevant Lines: | 12695 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4899\n\n5 of 7 (71.43%)  changed or added relevant lines in 4 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-2.8%) to 63.565%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacket.java | 1 | 2 | 50.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/text/query/ComQueryPacket.java | 1 | 2 | 50.0%\n | **Total:** | **5** | **7** | **71.43%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4894: |  -2.8% |\n| Covered Lines: | 8074 |\n| Relevant Lines: | 12702 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4927\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage increased (+0.05%) to 64.294%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 76.81% |\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationShardingDataSourceFactoryBean.java | 1 | 66.67% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4926: |  0.05% |\n| Covered Lines: | 8236 |\n| Relevant Lines: | 12810 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4937\n\n13 of 13 (100.0%)  changed or added relevant lines in 2 files are covered.\n4 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.004%) to 64.416%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 4 | 73.91% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4936: |  0.004% |\n| Covered Lines: | 8244 |\n| Relevant Lines: | 12798 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4952\n\n4 of 9 (44.44%)  changed or added relevant lines in 4 files are covered.\n16 unchanged lines in 8 files lost coverage.\nOverall coverage increased (+0.03%) to 64.455%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/CacheClient.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/strategy/UsualStrategy.java | 2 | 6 | 33.33%\n | **Total:** | **4** | **9** | **44.44%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/strategy/TransactionContendStrategy.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/retry/RetryThread.java | 1 | 53.66% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/BaseClientFactory.java | 1 | 53.33% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/cache/PathTree.java | 2 | 81.4% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/ClientFactory.java | 2 | 51.85% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/section/ZookeeperEventListener.java | 2 | 66.67% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 75.41% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/BaseClient.java | 4 | 64.29% |\n | **Total:** | **16** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4949: |  0.03% |\n| Covered Lines: | 8160 |\n| Relevant Lines: | 12660 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4950\n\n13 of 22 (59.09%)  changed or added relevant lines in 1 file are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.1%) to 64.275%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java | 13 | 22 | 59.09%\n | **Total:** | **13** | **22** | **59.09%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 78.26% |\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationMasterSlaveDataSourceFactoryBean.java | 1 | 66.67% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4949: |  -0.1% |\n| Covered Lines: | 8204 |\n| Relevant Lines: | 12764 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4955\n\n67 of 94 (71.28%)  changed or added relevant lines in 12 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.3%) to 64.096%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java | 3 | 4 | 75.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationMasterSlaveDataSourceFactory.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationMasterSlaveDataSourceFactory.java | 3 | 4 | 75.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 5 | 12 | 41.67%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/jdbc/orchestration/config/OrchestrationType.java | 0 | 7 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/OrchestrationBeanDefinitionParser.java | 39 | 49 | 79.59%\n | **Total:** | **67** | **94** | **71.28%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 76.81% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/jdbc/orchestration/config/OrchestrationType.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4949: |  -0.3% |\n| Covered Lines: | 8055 |\n| Relevant Lines: | 12567 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4959\n\n25 of 31 (80.65%)  changed or added relevant lines in 2 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.003%) to 63.951%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/WhereClauseParser.java | 23 | 29 | 79.31%\n | **Total:** | **25** | **31** | **80.65%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertDuplicateKeyUpdateClauseParser.java | 2 | 86.96% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4958: |  -0.003% |\n| Covered Lines: | 7944 |\n| Relevant Lines: | 12422 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4969\n\n41 of 68 (60.29%)  changed or added relevant lines in 10 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.02%) to 63.971%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationMasterSlaveDataSourceFactory.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationSpringShardingDataSource.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationSpringMasterSlaveDataSource.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationShardingDataSource.java | 0 | 7 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/RegBeanDefinitionParser.java | 15 | 22 | 68.18%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationMasterSlaveDataSource.java | 0 | 7 | 0.0%\n | **Total:** | **41** | **68** | **60.29%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4966: |  -0.02% |\n| Covered Lines: | 7935 |\n| Relevant Lines: | 12404 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4972\n\n12 of 26 (46.15%)  changed or added relevant lines in 8 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.02%) to 63.946%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationMasterSlaveDataSourceFactory.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationMasterSlaveDataSource.java | 2 | 5 | 40.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationShardingDataSource.java | 4 | 8 | 50.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 0 | 5 | 0.0%\n | **Total:** | **12** | **26** | **46.15%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/cache/PathResolve.java | 1 | 93.75% |\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 50.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4970: |  -0.02% |\n| Covered Lines: | 7935 |\n| Relevant Lines: | 12409 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4973\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 63.979%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4970: |  0.02% |\n| Covered Lines: | 7936 |\n| Relevant Lines: | 12404 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4978\n\n0 of 10 (0.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.05%) to 63.898%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationMasterSlaveDataSourceFactory.java | 0 | 5 | 0.0%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/datasource/OrchestrationShardingDataSourceFactory.java | 0 | 5 | 0.0%\n | **Total:** | **0** | **10** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4977: |  -0.05% |\n| Covered Lines: | 7940 |\n| Relevant Lines: | 12426 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4980\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.922%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/BaseClient.java | 3 | 64.29% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4979: |  -0.02% |\n| Covered Lines: | 7943 |\n| Relevant Lines: | 12426 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5066\n\n55 of 91 (60.44%)  changed or added relevant lines in 11 files are covered.\n5 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.0009%) to 63.037%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 4 | 5 | 80.0%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/SQLExecuteEventListener.java | 13 | 15 | 86.67%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/RootInvokeEventListener.java | 6 | 9 | 66.67%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java | 20 | 23 | 86.96%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/GetConnectionEventListener.java | 0 | 7 | 0.0%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/CloseConnectionEventListener.java | 0 | 8 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 0 | 12 | 0.0%\n | **Total:** | **55** | **91** | **60.44%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 70.49% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 1 | 0.0% |\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/GetConnectionEventListener.java | 3 | 0.0% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5062: |  -0.0009% |\n| Covered Lines: | 7961 |\n| Relevant Lines: | 12629 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5051\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 63.038%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5047: |  0.02% |\n| Covered Lines: | 7963 |\n| Relevant Lines: | 12632 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5084\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 62.993%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5083: |  0.0% |\n| Covered Lines: | 7973 |\n| Relevant Lines: | 12657 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5089\n\n3 of 3 (100.0%)  changed or added relevant lines in 3 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 62.982%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5088: |  -0.02% |\n| Covered Lines: | 7971 |\n| Relevant Lines: | 12656 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5090\n\n343 of 445 (77.08%)  changed or added relevant lines in 14 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.7%) to 63.656%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/executor/BatchPreparedStatementExecutor.java | 99 | 100 | 99.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteTemplate.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/event/executor/SQLExecutionEventFactory.java | 0 | 3 | 0.0%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/executor/PreparedStatementExecutor.java | 69 | 73 | 94.52%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/prepare/SQLExecutePrepareTemplate.java | 0 | 5 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/routing/BatchRouteUnit.java | 0 | 5 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 6 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 0 | 8 | 0.0%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingStatement.java | 42 | 52 | 80.77%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatement.java | 69 | 80 | 86.25%\n | **Total:** | **343** | **445** | **77.08%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5088: |  0.7% |\n| Covered Lines: | 8090 |\n| Relevant Lines: | 12709 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5096\n\n71 of 71 (100.0%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.1%) to 63.545%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5095: |  -0.1% |\n| Covered Lines: | 8041 |\n| Relevant Lines: | 12654 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5097\n\n19 of 19 (100.0%)  changed or added relevant lines in 1 file are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 63.699%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5095: |  0.03% |\n| Covered Lines: | 8105 |\n| Relevant Lines: | 12724 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5099\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.653%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5095: |  -0.02% |\n| Covered Lines: | 8089 |\n| Relevant Lines: | 12708 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5113\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.02%) to 63.582%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/UpdateSetItemsClauseParser.java | 1 | 89.66% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5108: |  0.02% |\n| Covered Lines: | 8059 |\n| Relevant Lines: | 12675 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5111\n\n0 of 23 (0.0%)  changed or added relevant lines in 3 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.1%) to 63.466%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java | 0 | 18 | 0.0%\n | **Total:** | **0** | **23** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5108: |  -0.1% |\n| Covered Lines: | 8057 |\n| Relevant Lines: | 12695 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5121\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 63.429%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5119: |  0.02% |\n| Covered Lines: | 8051 |\n| Relevant Lines: | 12693 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5130\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 63.314%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5129: |  0.02% |\n| Covered Lines: | 8039 |\n| Relevant Lines: | 12697 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5131\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 63.298%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5129: |  0.0% |\n| Covered Lines: | 8037 |\n| Relevant Lines: | 12697 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5139\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n3 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.1%) to 63.43%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 73.77% |\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/SQLExecuteEventListener.java | 1 | 87.5% |\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/RootInvokeEventListener.java | 1 | 64.29% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5138: |  0.1% |\n| Covered Lines: | 8034 |\n| Relevant Lines: | 12666 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5177\n\n1021 of 1904 (53.62%)  changed or added relevant lines in 163 files are covered.\n66 unchanged lines in 22 files lost coverage.\nOverall coverage decreased (-2.006%) to 63.702%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dal/use/UseParserFactory.java | 0 | 1 | 0.0%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/base/servicecomb/SagaExecutionComponentHolder.java | 13 | 14 | 92.86%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/base/SagaTransactionManager.java | 14 | 15 | 93.33%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationMasterSlaveDataSourceFactory.java | 3 | 4 | 75.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacket.java | 5 | 6 | 83.33%\n| sharding-orchestration/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java | 4 | 5 | 80.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/config/yaml/ProxyYamlRuleConfiguration.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/ShowDatabasesMergedResult.java | 7 | 8 | 87.5%\n| sharding-jdbc/src/main/java/io/shardingsphere/core/executor/BatchPreparedStatementExecutor.java | 75 | 76 | 98.68%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/ResponseHandlerFactory.java | 0 | 1 | 0.0%\n | **Total:** | **1021** | **1904** | **53.62%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/expression/BasicExpressionParser.java | 1 | 92.45% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 1 | 0.0% |\n| sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java | 1 | 86.96% |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/UpdateSetItemsClauseParser.java | 1 | 89.66% |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/NettyBackendHandler.java | 2 | 3.85% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertDuplicateKeyUpdateClauseParser.java | 2 | 86.96% |\n | **Total:** | **66** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4855: |  -2.006% |\n| Covered Lines: | 8215 |\n| Relevant Lines: | 12896 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5144\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.415%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 70.49% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5142: |  -0.02% |\n| Covered Lines: | 8034 |\n| Relevant Lines: | 12669 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5146\n\n2 of 7 (28.57%)  changed or added relevant lines in 4 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.408%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java | 0 | 2 | 0.0%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/GetConnectionEventListener.java | 0 | 3 | 0.0%\n | **Total:** | **2** | **7** | **28.57%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 70.49% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5142: |  -0.02% |\n| Covered Lines: | 8035 |\n| Relevant Lines: | 12672 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5179\n\n20 of 56 (35.71%)  changed or added relevant lines in 4 files are covered.\n6 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.02%) to 63.668%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 0 | 36 | 0.0%\n | **Total:** | **20** | **56** | **35.71%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/hint/ShardingKey.java | 5 | 0.0% |\n | **Total:** | **6** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5175: |  -0.02% |\n| Covered Lines: | 8061 |\n| Relevant Lines: | 12661 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5182\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n13 unchanged lines in 5 files lost coverage.\nOverall coverage decreased (-0.1%) to 63.588%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/Condition.java | 1 | 86.67% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/Conditions.java | 2 | 45.45% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/OrCondition.java | 2 | 84.21% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/AndCondition.java | 6 | 70.83% |\n | **Total:** | **13** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5175: |  -0.1% |\n| Covered Lines: | 8047 |\n| Relevant Lines: | 12655 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5186\n\n1 of 3 (33.33%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.0007%) to 63.535%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-sql-test/src/main/java/io/shardingsphere/test/sql/SQLCasesLoader.java | 1 | 3 | 33.33%\n | **Total:** | **1** | **3** | **33.33%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertValuesClauseParser.java | 1 | 96.72% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5185: |  0.0007% |\n| Covered Lines: | 8048 |\n| Relevant Lines: | 12667 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5217\n\n12 of 12 (100.0%)  changed or added relevant lines in 2 files are covered.\n20 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.03%) to 62.778%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/api/HintManager.java | 1 | 94.12% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/prepare/SQLExecutePrepareTemplate.java | 19 | 0.0% |\n | **Total:** | **20** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5211: |  -0.03% |\n| Covered Lines: | 8109 |\n| Relevant Lines: | 12917 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5246\n\n31 of 32 (96.88%)  changed or added relevant lines in 2 files are covered.\n4 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.02%) to 62.859%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/hint/HintManagerHolder.java | 27 | 28 | 96.43%\n | **Total:** | **31** | **32** | **96.88%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/hint/HintManagerHolder.java | 1 | 94.29% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 70.49% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5243: |  -0.02% |\n| Covered Lines: | 8061 |\n| Relevant Lines: | 12824 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5245\n\n1 of 7 (14.29%)  changed or added relevant lines in 3 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 62.831%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/config/ProxyContext.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java | 0 | 5 | 0.0%\n | **Total:** | **1** | **7** | **14.29%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 70.49% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5243: |  -0.04% |\n| Covered Lines: | 8060 |\n| Relevant Lines: | 12828 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5268\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.008%) to 63.189%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5267: |  0.008% |\n| Covered Lines: | 7927 |\n| Relevant Lines: | 12545 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5297\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.288%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5296: |  -0.02% |\n| Covered Lines: | 7923 |\n| Relevant Lines: | 12519 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5300\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.008%) to 63.312%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5298: |  0.008% |\n| Covered Lines: | 7926 |\n| Relevant Lines: | 12519 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5302\n\n5 of 5 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.04%) to 63.323%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5301: |  0.04% |\n| Covered Lines: | 7930 |\n| Relevant Lines: | 12523 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5312\n\n11 of 29 (37.93%)  changed or added relevant lines in 9 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 63.273%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/other/YamlServerConfiguration.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationService.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/config/ProxyContext.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/config/yaml/ProxyYamlServerConfiguration.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/config/yaml/ProxyYamlConfigurationLoader.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 3 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/statement/MasterSlaveStatement.java | 6 | 14 | 42.86%\n | **Total:** | **11** | **29** | **37.93%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 72.13% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5304: |  -0.03% |\n| Covered Lines: | 7930 |\n| Relevant Lines: | 12533 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5307\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 63.304%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5304: |  0.0% |\n| Covered Lines: | 7925 |\n| Relevant Lines: | 12519 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5311\n\n2855 of 5386 (53.01%)  changed or added relevant lines in 240 files are covered.\n33 unchanged lines in 15 files lost coverage.\nOverall coverage decreased (-0.3%) to 63.385%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/api/algorithm/sharding/ListShardingValue.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/api/algorithm/sharding/PreciseShardingValue.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/api/algorithm/sharding/RangeShardingValue.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dal/DALMergeEngine.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 5 | 6 | 83.33%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java | 73 | 74 | 98.65%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/util/DataSourceUtil.java | 22 | 23 | 95.65%\n| sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingsphere/shardingjdbc/spring/namespace/parser/ShardingStrategyBeanDefinition.java | 25 | 26 | 96.15%\n| sharding-opentracing/src/main/java/io/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java | 26 | 27 | 96.3%\n | **Total:** | **2855** | **5386** | **53.01%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/OrderItem.java | 1 | 82.61% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/prepare/SQLExecutePrepareTemplate.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertValuesClauseParser.java | 1 | 96.72% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/Condition.java | 1 | 86.67% |\n| sharding-core/src/main/java/io/shardingsphere/core/event/ShardingEventType.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/event/ShardingEventBusInstance.java | 2 | 0.0% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **33** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5178: |  -0.3% |\n| Covered Lines: | 8086 |\n| Relevant Lines: | 12757 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5317\n\n0 of 51 (0.0%)  changed or added relevant lines in 5 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.002%) to 63.263%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/DataSourceParameterConverter.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/DefaultConfigurationRepresenter.java | 0 | 7 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/MasterSlaveConfigurationRepresenter.java | 0 | 11 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/ShardingConfigurationRepresenter.java | 0 | 11 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/DataSourceParameterRepresenter.java | 0 | 21 | 0.0%\n | **Total:** | **0** | **51** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/MasterSlaveConfigurationRepresenter.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/ShardingConfigurationRepresenter.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5315: |  -0.002% |\n| Covered Lines: | 7930 |\n| Relevant Lines: | 12535 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5319\n\n13 of 75 (17.33%)  changed or added relevant lines in 9 files are covered.\n4 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.2%) to 63.05%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/NettyBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 8 | 11 | 72.73%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaUnicastBackendHandler.java | 0 | 7 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 0 | 21 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java | 0 | 28 | 0.0%\n | **Total:** | **13** | **75** | **17.33%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 3 | 71.43% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5318: |  -0.2% |\n| Covered Lines: | 7931 |\n| Relevant Lines: | 12579 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5337\n\n8 of 25 (32.0%)  changed or added relevant lines in 6 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 63.37%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/yaml/YamlOrchestrationConfiguration.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationService.java | 0 | 4 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java | 8 | 16 | 50.0%\n | **Total:** | **8** | **25** | **32.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 3 | 70.49% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5336: |  -0.04% |\n| Covered Lines: | 7977 |\n| Relevant Lines: | 12588 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5343\n\n3 of 3 (100.0%)  changed or added relevant lines in 3 files are covered.\n3 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.02%) to 63.37%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/cache/PathTree.java | 1 | 81.4% |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 70.49% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5338: |  -0.02% |\n| Covered Lines: | 7977 |\n| Relevant Lines: | 12588 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5341\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.008%) to 63.394%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/cache/PathTree.java | 1 | 81.4% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5338: |  0.008% |\n| Covered Lines: | 7980 |\n| Relevant Lines: | 12588 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5346\n\n0 of 5 (0.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 63.639%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 5 | 0.0%\n | **Total:** | **0** | **5** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 73.77% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5345: |  -0.03% |\n| Covered Lines: | 8009 |\n| Relevant Lines: | 12585 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5350\n\n5 of 52 (9.62%)  changed or added relevant lines in 8 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.1%) to 63.493%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 2 | 3 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 2 | 4 | 50.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/ShardingSchema.java | 0 | 8 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/rule/OrchestrationShardingRule.java | 0 | 10 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/rule/OrchestrationMasterSlaveRule.java | 0 | 11 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 14 | 0.0%\n | **Total:** | **5** | **52** | **9.62%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/cache/PathResolve.java | 1 | 93.75% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5349: |  -0.1% |\n| Covered Lines: | 8009 |\n| Relevant Lines: | 12614 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5355\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.008%) to 63.517%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 1 | 73.77% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5352: |  -0.008% |\n| Covered Lines: | 8012 |\n| Relevant Lines: | 12614 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5361\n\n0 of 8 (0.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.03%) to 63.413%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/PreparedStatementExecutorWrapper.java | 0 | 7 | 0.0%\n | **Total:** | **0** | **8** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5360: |  -0.03% |\n| Covered Lines: | 8011 |\n| Relevant Lines: | 12633 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5369\n\n0 of 3 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.003%) to 63.47%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 3 | 0.0%\n | **Total:** | **0** | **3** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5367: |  0.003% |\n| Covered Lines: | 8008 |\n| Relevant Lines: | 12617 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5370\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 63.491%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5367: |  0.02% |\n| Covered Lines: | 8010 |\n| Relevant Lines: | 12616 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5379\n\n4 of 12 (33.33%)  changed or added relevant lines in 7 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 63.475%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-native-zookeeper/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/natived/NativeZookeeperRegistryCenter.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-native-zookeeper/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/natived/client/zookeeper/ClientFactory.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-native-zookeeper/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/natived/client/zookeeper/strategy/TransactionContendStrategy.java | 0 | 6 | 0.0%\n | **Total:** | **4** | **12** | **33.33%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-native-zookeeper/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/natived/client/zookeeper/base/Holder.java | 2 | 72.13% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5368: |  -0.02% |\n| Covered Lines: | 8008 |\n| Relevant Lines: | 12616 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5406\n\n9 of 14 (64.29%)  changed or added relevant lines in 2 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.01%) to 63.404%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java | 3 | 4 | 75.0%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManagerSPILoader.java | 6 | 10 | 60.0%\n | **Total:** | **9** | **14** | **64.29%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java | 1 | 94.44% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5316: |  0.01% |\n| Covered Lines: | 8091 |\n| Relevant Lines: | 12761 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5387\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 65.444%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5385: |  0.0% |\n| Covered Lines: | 7371 |\n| Relevant Lines: | 11263 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5390\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 65.444%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5389: |  0.0% |\n| Covered Lines: | 7371 |\n| Relevant Lines: | 11263 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5392\n\n0 of 23 (0.0%)  changed or added relevant lines in 5 files are covered.\n4 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.07%) to 65.375%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/config/OrchestrationType.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 5 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 0 | 15 | 0.0%\n | **Total:** | **0** | **23** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 4 | 0.0% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5391: |  -0.07% |\n| Covered Lines: | 7371 |\n| Relevant Lines: | 11275 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5404\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 65.392%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5403: |  0.0% |\n| Covered Lines: | 7371 |\n| Relevant Lines: | 11272 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5409\n\n4 of 4 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 65.392%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5407: |  0.0% |\n| Covered Lines: | 7371 |\n| Relevant Lines: | 11272 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5419\n\n85 of 127 (66.93%)  changed or added relevant lines in 15 files are covered.\n6 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.03%) to 63.361%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/xa/XABackendDataSourceFactory.java | 8 | 9 | 88.89%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceParameterFactory.java | 2 | 3 | 66.67%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceReflector.java | 7 | 8 | 87.5%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/convert/PoolType.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/ProxyDatasourceType.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/StatementExecuteUnit.java | 0 | 2 | 0.0%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManagerSPILoader.java | 3 | 6 | 50.0%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java | 5 | 9 | 55.56%\n | **Total:** | **85** | **127** | **66.93%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java | 1 | 20.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/StatementExecuteUnit.java | 4 | 0.0% |\n | **Total:** | **6** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5408: |  -0.03% |\n| Covered Lines: | 8145 |\n| Relevant Lines: | 12855 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5442\n\n49 of 54 (90.74%)  changed or added relevant lines in 13 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.08%) to 63.443%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java | 0 | 1 | 0.0%\n| sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/XADataSourceFactory.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/ProxyPoolType.java | 0 | 2 | 0.0%\n | **Total:** | **49** | **54** | **90.74%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-reg/src/main/java/io/shardingsphere/orchestration/reg/newzk/client/zookeeper/base/Holder.java | 2 | 72.13% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5421: |  0.08% |\n| Covered Lines: | 8162 |\n| Relevant Lines: | 12865 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5449\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 66.965%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5448: |  0.0% |\n| Covered Lines: | 7472 |\n| Relevant Lines: | 11158 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5457\n\n326 of 824 (39.56%)  changed or added relevant lines in 112 files are covered.\n25 unchanged lines in 18 files lost coverage.\nOverall coverage increased (+3.5%) to 66.979%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/api/ConfigMapContext.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/UpdateSetItemsClauseParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 25 | 26 | 96.15%\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/masterslave/YamlMasterSlaveRuleConfiguration.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-etcd/src/main/java/io/shardingsphere/orchestration/reg/etcd/internal/watcher/EtcdWatchStreamObserver.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/curator/CuratorZookeeperExceptionHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-base/sharding-transaction-base-saga/src/main/java/io/shardingsphere/transaction/manager/base/executor/SagaSQLExecuteCallback.java | 0 | 1 | 0.0%\n | **Total:** | **326** | **824** | **39.56%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/token/SchemaToken.java | 1 | 66.67% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 1 | 52.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingRuleConfiguration.java | 1 | 66.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 56.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/NettyBackendHandler.java | 1 | 4.08% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/masterslave/YamlMasterSlaveRuleConfiguration.java | 1 | 55.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/token/IndexToken.java | 1 | 66.67% |\n | **Total:** | **25** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5443: |  3.5% |\n| Covered Lines: | 7724 |\n| Relevant Lines: | 11532 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5458\n\n274 of 394 (69.54%)  changed or added relevant lines in 46 files are covered.\n8 unchanged lines in 4 files lost coverage.\nOverall coverage decreased (-0.05%) to 66.979%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/xa/XABackendDataSourceFactory.java | 8 | 9 | 88.89%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-base/sharding-transaction-base-saga/src/main/java/io/shardingsphere/transaction/manager/base/SagaTransactionManager.java | 20 | 21 | 95.24%\n| sharding-transaction/sharding-transaction-base/sharding-transaction-base-saga/src/main/java/io/shardingsphere/transaction/manager/base/servicecomb/SagaExecutionComponentHolder.java | 13 | 14 | 92.86%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceParameterFactory.java | 2 | 3 | 66.67%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceReflector.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/ProxyPoolType.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/StatementExecuteUnit.java | 0 | 2 | 0.0%\n | **Total:** | **274** | **394** | **69.54%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java | 1 | 20.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java | 2 | 10.84% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/StatementExecuteUnit.java | 4 | 0.0% |\n | **Total:** | **8** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5452: |  -0.05% |\n| Covered Lines: | 7724 |\n| Relevant Lines: | 11532 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5461\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.06%) to 66.923%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java | 1 | 11.84% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5460: |  -0.06% |\n| Covered Lines: | 7569 |\n| Relevant Lines: | 11310 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5469\n\n15 of 70 (21.43%)  changed or added relevant lines in 13 files are covered.\n4 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.04%) to 66.965%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/util/DataSourceConverter.java | 2 | 4 | 50.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 4 | 7 | 57.14%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 3 | 7 | 42.86%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationListenerManager.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/util/DataSourceConverter.java | 0 | 4 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 0 | 5 | 0.0%\n | **Total:** | **15** | **70** | **21.43%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 1 | 50.0% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 56.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 2 | 0.0% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5467: |  0.04% |\n| Covered Lines: | 7563 |\n| Relevant Lines: | 11294 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5478\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 67.069%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/PreparedStatementExecutorWrapper.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5477: |  0.0% |\n| Covered Lines: | 7566 |\n| Relevant Lines: | 11281 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5487\n\n710 of 848 (83.73%)  changed or added relevant lines in 69 files are covered.\n295 unchanged lines in 48 files lost coverage.\nOverall coverage increased (+0.5%) to 67.722%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/ast/AbstractParseTreeBuilder.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/MySQLStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/OracleStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/PostgreStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/SQLServerStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/factory/ParseTreeFactory.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/AddPrimaryKeyVisitor.java | 17 | 18 | 94.44%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/CreatePrimaryKeyVisitor.java | 14 | 15 | 93.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/IndexNameVisitor.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/ModifyColumnVisitor.java | 11 | 12 | 91.67%\n | **Total:** | **710** | **848** | **83.73%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacket.java | 1 | 98.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-sql-test/src/main/java/io/shardingsphere/test/sql/SQLCasesLoader.java | 2 | 77.55% |\n | **Total:** | **295** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5479: |  0.5% |\n| Covered Lines: | 8128 |\n| Relevant Lines: | 12002 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5483\n\n26 of 77 (33.77%)  changed or added relevant lines in 12 files are covered.\n4 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+0.7%) to 67.833%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 8 | 9 | 88.89%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 6 | 7 | 85.71%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/rule/OrchestrationMasterSlaveRule.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 0 | 3 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationListenerManager.java | 0 | 4 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/ListenerFactory.java | 0 | 4 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 0 | 7 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 8 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/ShardingSchema.java | 0 | 8 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 14 | 0.0%\n | **Total:** | **26** | **77** | **33.77%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/ShardingSchema.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationListenerManager.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 1 | 10.77% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/ListenerFactory.java | 1 | 0.0% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5481: |  0.7% |\n| Covered Lines: | 7579 |\n| Relevant Lines: | 11173 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5486\n\n10 of 23 (43.48%)  changed or added relevant lines in 5 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 67.818%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 10 | 0.0%\n | **Total:** | **10** | **23** | **43.48%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 1 | 10.45% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5485: |  -0.02% |\n| Covered Lines: | 7580 |\n| Relevant Lines: | 11177 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5494\n\n710 of 848 (83.73%)  changed or added relevant lines in 69 files are covered.\n186 unchanged lines in 37 files lost coverage.\nOverall coverage decreased (-0.1%) to 67.715%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/ast/AbstractParseTreeBuilder.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/MySQLStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/OracleStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/PostgreStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/SQLServerStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/parser/factory/ParseTreeFactory.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/AddPrimaryKeyVisitor.java | 17 | 18 | 94.44%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/CreatePrimaryKeyVisitor.java | 14 | 15 | 93.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/IndexNameVisitor.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/ModifyColumnVisitor.java | 11 | 12 | 91.67%\n | **Total:** | **710** | **848** | **83.73%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-sql-test/src/main/java/io/shardingsphere/test/sql/SQLCasesLoader.java | 2 | 77.55% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/LexerEngine.java | 2 | 88.52% |\n | **Total:** | **186** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5489: |  -0.1% |\n| Covered Lines: | 8121 |\n| Relevant Lines: | 11993 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5496\n\n54 of 85 (63.53%)  changed or added relevant lines in 12 files are covered.\n232 unchanged lines in 42 files lost coverage.\nOverall coverage decreased (-0.04%) to 67.776%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/bootstrap/ShardingBootstrap.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/atomikos/AtomikosTransactionManager.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/spi/transaction/xa/SPIDataSourceMapConverter.java | 9 | 11 | 81.82%\n| sharding-transaction/sharding-transaction-api/src/main/java/io/shardingsphere/transaction/handler/ShardingTransactionHandlerAdapter.java | 0 | 4 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java | 1 | 11 | 9.09%\n| sharding-core/src/main/java/io/shardingsphere/spi/transaction/ShardingTransactionHandlerRegistry.java | 0 | 13 | 0.0%\n | **Total:** | **54** | **85** | **63.53%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/LexerEngine.java | 2 | 88.52% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLDropIndexParser.java | 2 | 0.0% |\n | **Total:** | **232** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5489: |  -0.04% |\n| Covered Lines: | 8146 |\n| Relevant Lines: | 12019 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5492\n\n1 of 9 (11.11%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.01%) to 67.825%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 0 | 4 | 0.0%\n | **Total:** | **1** | **9** | **11.11%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/prepare/SQLExecutePrepareTemplate.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5489: |  0.01% |\n| Covered Lines: | 7572 |\n| Relevant Lines: | 11164 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5522\n\n30 of 287 (10.45%)  changed or added relevant lines in 32 files are covered.\n52 unchanged lines in 18 files lost coverage.\nOverall coverage decreased (-0.4%) to 67.324%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 9 | 10 | 90.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigMapListenerManager.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 1 | 3 | 33.33%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/instance/InstanceStateListenerManager.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceStateListenerManager.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 0 | 4 | 0.0%\n | **Total:** | **30** | **287** | **10.45%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/RenameColumnVisitor.java | 1 | 92.86% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 1 | 37.14% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/mysql/MySQLAddIndexVisitor.java | 1 | 88.89% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 45.71% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/sqlserver/SQLServerDropIndexVisitor.java | 1 | 50.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/IndexNameVisitor.java | 1 | 88.89% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/sqlserver/SQLServerAddIndexVisitor.java | 1 | 85.71% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/AddPrimaryKeyVisitor.java | 1 | 94.44% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/RenameIndexVisitor.java | 2 | 85.71% |\n | **Total:** | **52** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5512: |  -0.4% |\n| Covered Lines: | 8093 |\n| Relevant Lines: | 12021 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5534\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n13 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.006%) to 67.806%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 13 | 58.18% |\n | **Total:** | **13** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5533: |  -0.006% |\n| Covered Lines: | 8092 |\n| Relevant Lines: | 11934 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5535\n\n30 of 296 (10.14%)  changed or added relevant lines in 32 files are covered.\n31 unchanged lines in 8 files lost coverage.\nOverall coverage decreased (-0.5%) to 67.361%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 9 | 10 | 90.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 1 | 2 | 50.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigMapListenerManager.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 1 | 3 | 33.33%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/instance/InstanceStateListenerManager.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceStateListenerManager.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 0 | 4 | 0.0%\n | **Total:** | **30** | **296** | **10.14%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 1 | 37.14% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 1 | 0.0% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 36.36% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antler/phrase/visitor/ColumnDefinitionVisitor.java | 1 | 90.91% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java | 5 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/NettyBackendHandler.java | 5 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 5 | 2.44% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java | 12 | 19.05% |\n | **Total:** | **31** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5533: |  -0.5% |\n| Covered Lines: | 8082 |\n| Relevant Lines: | 11998 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5546\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 35.999%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5545: |  0.0% |\n| Covered Lines: | 13411 |\n| Relevant Lines: | 37254 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5554\n\n14 of 19 (73.68%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.01%) to 36.05%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 1 | 3 | 33.33%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLBuilder.java | 0 | 3 | 0.0%\n | **Total:** | **14** | **19** | **73.68%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLBuilder.java | 1 | 81.82% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5550: |  0.01% |\n| Covered Lines: | 13443 |\n| Relevant Lines: | 37290 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5560\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+32.06%) to 68.106%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5556: |  32.06% |\n| Covered Lines: | 8168 |\n| Relevant Lines: | 11993 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5568\n\n2 of 45 (4.44%)  changed or added relevant lines in 2 files are covered.\n4 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+0.7%) to 68.134%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 2 | 43 | 4.65%\n | **Total:** | **2** | **45** | **4.44%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/OracleStatementAdvancedParser.java | 1 | 87.5% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/PostgreStatementAdvancedParser.java | 1 | 87.5% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/MySQLStatementAdvancedParser.java | 1 | 87.5% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/SQLServerStatementAdvancedParser.java | 1 | 87.5% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5558: |  0.7% |\n| Covered Lines: | 8174 |\n| Relevant Lines: | 11997 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5570\n\n856 of 1336 (64.07%)  changed or added relevant lines in 146 files are covered.\n189 unchanged lines in 47 files lost coverage.\nOverall coverage increased (+0.4%) to 67.397%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/bootstrap/ShardingBootstrap.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/ast/ParseTreeBuilderFactory.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/MySQLStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/OracleStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/PostgreStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/dialect/SQLServerStatementAdvancedParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/ColumnDefinition.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/mysql/MySQLAlterTableStatement.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/visitor/phrase/ColumnDefinitionVisitor.java | 10 | 11 | 90.91%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/visitor/phrase/IndexNameVisitor.java | 8 | 9 | 88.89%\n | **Total:** | **856** | **1336** | **64.07%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLBuilder.java | 1 | 81.82% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLTruncateTableParser.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/ListenerFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleTruncateTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLAlterTableParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLAlterTableParser.java | 1 | 0.0% |\n | **Total:** | **189** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5459: |  0.4% |\n| Covered Lines: | 8248 |\n| Relevant Lines: | 12238 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5571\n\n16 of 16 (100.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.1%) to 68.195%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 1 | 80.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5569: |  0.1% |\n| Covered Lines: | 8178 |\n| Relevant Lines: | 11992 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5572\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.057%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5569: |  0.0% |\n| Covered Lines: | 8158 |\n| Relevant Lines: | 11987 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5579\n\n2 of 2 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.25%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5578: |  0.0% |\n| Covered Lines: | 8192 |\n| Relevant Lines: | 12003 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5582\n\n91 of 103 (88.35%)  changed or added relevant lines in 18 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.2%) to 68.437%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 13 | 14 | 92.86%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/extractor/DataSourceParameterFactory.java | 3 | 4 | 75.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManager.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/PoolType.java | 0 | 3 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 2 | 6 | 33.33%\n | **Total:** | **91** | **103** | **88.35%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5578: |  0.2% |\n| Covered Lines: | 8235 |\n| Relevant Lines: | 12033 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5591\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.614%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5590: |  0.0% |\n| Covered Lines: | 8303 |\n| Relevant Lines: | 12101 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5599\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.558%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5598: |  0.0% |\n| Covered Lines: | 8277 |\n| Relevant Lines: | 12073 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5600\n\n332 of 403 (82.38%)  changed or added relevant lines in 50 files are covered.\n3 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+1.4%) to 68.763%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/visitor/SQLStatementType.java | 17 | 18 | 94.44%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/visitor/statement/dialect/postgresql/PostgreSQLDropIndexVisitor.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 13 | 14 | 92.86%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/extractor/DataSourceParameterFactory.java | 3 | 4 | 75.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManager.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java | 4 | 6 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/PoolType.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/AlterTableStatement.java | 5 | 8 | 62.5%\n | **Total:** | **332** | **403** | **82.38%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-transaction/sharding-transaction-base/sharding-transaction-base-saga/src/main/java/io/shardingsphere/transaction/base/handler/SagaShardingTransactionHandler.java | 1 | 86.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 1 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5574: |  1.4% |\n| Covered Lines: | 8495 |\n| Relevant Lines: | 12354 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5607\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.558%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5606: |  0.0% |\n| Covered Lines: | 8277 |\n| Relevant Lines: | 12073 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5612\n\n13 of 95 (13.68%)  changed or added relevant lines in 28 files are covered.\n3 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.04%) to 68.597%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 1 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/AuthenticationOrchestrationListener.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/ConfigMapOrchestrationListener.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/DataSourceOrchestrationListener.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/PropertiesOrchestrationListener.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/RuleOrchestrationListener.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/listener/DataSourceStateOrchestrationListener.java | 0 | 2 | 0.0%\n | **Total:** | **13** | **95** | **13.68%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 1 | 7.14% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 1 | 0.0% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5611: |  0.04% |\n| Covered Lines: | 8279 |\n| Relevant Lines: | 12069 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5613\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.558%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5611: |  0.0% |\n| Covered Lines: | 8277 |\n| Relevant Lines: | 12073 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5619\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.595%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5618: |  0.0% |\n| Covered Lines: | 8276 |\n| Relevant Lines: | 12065 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5624\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.587%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5623: |  0.0% |\n| Covered Lines: | 8275 |\n| Relevant Lines: | 12065 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5628\n\n2 of 2 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 68.612%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5625: |  0.02% |\n| Covered Lines: | 8278 |\n| Relevant Lines: | 12065 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5634\n\n325 of 450 (72.22%)  changed or added relevant lines in 96 files are covered.\n8 unchanged lines in 8 files lost coverage.\nOverall coverage increased (+0.1%) to 68.883%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/api/config/SagaConfiguration.java | 9 | 10 | 90.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/api/OrchestrationShardingDataSourceFactory.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/LogicSchema.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-base/sharding-transaction-base-saga/src/main/java/io/shardingsphere/transaction/revert/RevertEngineImpl.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/event/transaction/base/SagaTransactionEvent.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/ast/SQLASTParserFactory.java | 12 | 14 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerAddIndexExtractHandler.java | 0 | 2 | 0.0%\n | **Total:** | **325** | **450** | **72.22%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 1 | 7.14% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 1 | 39.47% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 1 | 3.03% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/ShardingSchema.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/MasterSlaveSchema.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java | 1 | 75.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java | 1 | 0.0% |\n | **Total:** | **8** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5603: |  0.1% |\n| Covered Lines: | 8514 |\n| Relevant Lines: | 12360 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5637\n\n6 of 8 (75.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.1%) to 68.737%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/service/DataSourceService.java | 0 | 2 | 0.0%\n | **Total:** | **6** | **8** | **75.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5636: |  0.1% |\n| Covered Lines: | 8300 |\n| Relevant Lines: | 12075 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5644\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n18 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+0.07%) to 68.805%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/spi/transaction/xa/SPIDataSourceMapConverter.java | 2 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/spi/root/SPIRootInvokeHook.java | 4 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/spi/parsing/SPIParsingHook.java | 6 | 42.86% |\n| sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java | 6 | 0.0% |\n | **Total:** | **18** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5638: |  0.07% |\n| Covered Lines: | 8311 |\n| Relevant Lines: | 12079 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5642\n\n31 of 36 (86.11%)  changed or added relevant lines in 12 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.03%) to 68.764%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/root/SPIRootInvokeHook.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/ShardingTransactionalResource.java | 0 | 3 | 0.0%\n | **Total:** | **31** | **36** | **86.11%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5638: |  0.03% |\n| Covered Lines: | 8306 |\n| Relevant Lines: | 12079 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5646\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 68.805%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5645: |  0.0% |\n| Covered Lines: | 8311 |\n| Relevant Lines: | 12079 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5650\n\n182 of 222 (81.98%)  changed or added relevant lines in 37 files are covered.\n5 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.1%) to 69.006%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerAddPrimaryKeyExtractHandler.java | 11 | 12 | 91.67%\n| sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/root/SPIRootInvokeHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/mysql/MySQLChangeColumnExtractHandler.java | 13 | 15 | 86.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/AlterTableStatement.java | 7 | 9 | 77.78%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/OrchestrationListenerManager.java | 0 | 2 | 0.0%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/service/DataSourceService.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/phrase/ColumnDefinitionPhraseExtractor.java | 11 | 14 | 78.57%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 3 | 0.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/ShardingTransactionalResource.java | 0 | 3 | 0.0%\n | **Total:** | **182** | **222** | **81.98%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/AlterTableStatement.java | 1 | 68.42% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/OrchestrationListenerManager.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/mysql/MySQLChangeColumnExtractHandler.java | 2 | 80.0% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5639: |  0.1% |\n| Covered Lines: | 8565 |\n| Relevant Lines: | 12412 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5651\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.7%) to 69.542%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5649: |  0.7% |\n| Covered Lines: | 8400 |\n| Relevant Lines: | 12079 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5655\n\n22 of 25 (88.0%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 69.489%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 4 | 7 | 57.14%\n | **Total:** | **22** | **25** | **88.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/dialect/XAPropertyFactory.java | 1 | 85.71% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5653: |  0.03% |\n| Covered Lines: | 8420 |\n| Relevant Lines: | 12117 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5673\n\n41 of 55 (74.55%)  changed or added relevant lines in 9 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.2%) to 69.992%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingRuleConfiguration.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/ShardingRule.java | 12 | 14 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/TableRule.java | 0 | 10 | 0.0%\n | **Total:** | **41** | **55** | **74.55%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5667: |  0.2% |\n| Covered Lines: | 8532 |\n| Relevant Lines: | 12190 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5658\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.3%) to 69.795%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5657: |  0.3% |\n| Covered Lines: | 8457 |\n| Relevant Lines: | 12117 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5660\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 69.795%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5659: |  0.0% |\n| Covered Lines: | 8457 |\n| Relevant Lines: | 12117 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5661\n\n5 of 28 (17.86%)  changed or added relevant lines in 5 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.1%) to 69.684%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/root/SPIRootInvokeHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/bootstrap/ShardingBootstrap.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/spi/NewInstanceServiceLoader.java | 4 | 21 | 19.05%\n | **Total:** | **5** | **28** | **17.86%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/bootstrap/ShardingBootstrap.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5659: |  -0.1% |\n| Covered Lines: | 8461 |\n| Relevant Lines: | 12142 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5664\n\n2 of 2 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.1%) to 69.807%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5663: |  0.1% |\n| Covered Lines: | 8476 |\n| Relevant Lines: | 12142 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5670\n\n231 of 257 (89.88%)  changed or added relevant lines in 31 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.2%) to 69.99%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/AddPrimaryKeyExtractHandler.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/ColumnDefinitionExtractHandler.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/CreatePrimaryKeyExtractHandler.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/IndexNameExtractHandler.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameColumnExtractHandler.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/TableNameExtractHandler.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/TableNamesExtractHandler.java | 8 | 9 | 88.89%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerAddPrimaryKeyExtractHandler.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/result/ColumnDefinitionExtractResult.java | 33 | 34 | 97.06%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameIndexExtractHandler.java | 6 | 8 | 75.0%\n | **Total:** | **231** | **257** | **89.88%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5667: |  0.2% |\n| Covered Lines: | 8578 |\n| Relevant Lines: | 12256 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5671\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.9%) to 70.664%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5667: |  0.9% |\n| Covered Lines: | 8580 |\n| Relevant Lines: | 12142 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5689\n\n12 of 13 (92.31%)  changed or added relevant lines in 2 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.009%) to 71.027%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-spring/src/main/java/io/shardingsphere/transaction/aspect/ShardingTransactionalAspect.java | 10 | 11 | 90.91%\n | **Total:** | **12** | **13** | **92.31%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/hint/HintManagerHolder.java | 1 | 94.12% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5685: |  0.009% |\n| Covered Lines: | 8742 |\n| Relevant Lines: | 12308 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5683\n\n18 of 18 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.01%) to 71.004%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5676: |  -0.01% |\n| Covered Lines: | 8730 |\n| Relevant Lines: | 12295 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5680\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.018%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5676: |  0.0% |\n| Covered Lines: | 8738 |\n| Relevant Lines: | 12304 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5684\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.018%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5682: |  0.0% |\n| Covered Lines: | 8738 |\n| Relevant Lines: | 12304 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5692\n\n232 of 336 (69.05%)  changed or added relevant lines in 51 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.3%) to 70.71%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/ColumnDefinitionExtractHandler.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameColumnExtractHandler.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameTableExtractHandler.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/TableNamesExtractHandler.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerAddIndexExtractHandler.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerDropIndexExtractHandler.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/fillor/ColumnDefinitionHandlerResultFiller.java | 32 | 33 | 96.97%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/PreparedStatementExecutorWrapper.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 0 | 1 | 0.0%\n | **Total:** | **232** | **336** | **69.05%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java | 1 | 21.05% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 1 | 3.23% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5691: |  -0.3% |\n| Covered Lines: | 8802 |\n| Relevant Lines: | 12448 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5706\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\n7 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+0.4%) to 71.063%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/filler/TableJoinHandlerResultFiller.java | 1 | 40.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/filler/ColumnDefinitionHandlerResultFiller.java | 1 | 96.88% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/filler/AbstractHandlerResultFiller.java | 2 | 71.43% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/AlterTableStatement.java | 3 | 73.68% |\n | **Total:** | **7** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5701: |  0.4% |\n| Covered Lines: | 8836 |\n| Relevant Lines: | 12434 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5709\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.054%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5708: |  0.0% |\n| Covered Lines: | 8832 |\n| Relevant Lines: | 12430 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5710\n\n2 of 17 (11.76%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.06%) to 70.997%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java | 1 | 12 | 8.33%\n | **Total:** | **2** | **17** | **11.76%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5708: |  -0.06% |\n| Covered Lines: | 8832 |\n| Relevant Lines: | 12440 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5711\n\n2 of 76 (2.63%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.4%) to 70.636%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/util/OperatorUtils.java | 0 | 24 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/ConditionExtractHandler.java | 0 | 50 | 0.0%\n | **Total:** | **2** | **76** | **2.63%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5708: |  -0.4% |\n| Covered Lines: | 8833 |\n| Relevant Lines: | 12505 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5721\n\n127 of 143 (88.81%)  changed or added relevant lines in 11 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.7%) to 71.302%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 59 | 60 | 98.33%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/ComQueryPacket.java | 2 | 3 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/MethodInvocation.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/FrontendHandler.java | 2 | 5 | 40.0%\n | **Total:** | **127** | **143** | **88.81%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5719: |  0.7% |\n| Covered Lines: | 9019 |\n| Relevant Lines: | 12649 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5729\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.379%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5728: |  0.0% |\n| Covered Lines: | 9008 |\n| Relevant Lines: | 12620 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5743\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.303%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5742: |  0.0% |\n| Covered Lines: | 8972 |\n| Relevant Lines: | 12583 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5868\n\n603 of 662 (91.09%)  changed or added relevant lines in 46 files are covered.\n18 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+1.5%) to 71.891%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/ColumnDefinitionsExtractor.java | 12 | 13 | 92.31%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/ColumnSegmentExtractor.java | 13 | 14 | 92.86%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/FromWhereExtractor.java | 57 | 58 | 98.28%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/engnie/TableJoinFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/LimitExtractor.java | 21 | 23 | 91.3%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/OrderByExtractor.java | 26 | 28 | 92.86%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/segment/order/OrderByItemSegment.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/ColumnDefinitionExtractor.java | 11 | 14 | 78.57%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/sql/statement/dql/MySQLSelectExtractor.java | 83 | 86 | 96.51%\n | **Total:** | **603** | **662** | **91.09%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 1 | 86.6% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/GroupByClauseParser.java | 3 | 80.56% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/SelectStatement.java | 4 | 88.81% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java | 10 | 78.75% |\n | **Total:** | **18** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5864: |  1.5% |\n| Covered Lines: | 9522 |\n| Relevant Lines: | 13245 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5749\n\n16 of 16 (100.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.01%) to 71.317%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 1 | 95.76% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5746: |  0.01% |\n| Covered Lines: | 8981 |\n| Relevant Lines: | 12593 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5751\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.01%) to 71.306%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5750: |  -0.01% |\n| Covered Lines: | 8971 |\n| Relevant Lines: | 12581 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5755\n\n13 of 26 (50.0%)  changed or added relevant lines in 10 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.06%) to 71.255%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/DALStatementExtractor.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/dialect/postgresql/PostgreSQLShowExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/SQLParsingEngine.java | 1 | 3 | 33.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/engnie/ShowParamSegmentFiller.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/engine/dialect/postgresql/ShowParamExtractor.java | 0 | 5 | 0.0%\n | **Total:** | **13** | **26** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 3 | 96.26% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5750: |  -0.06% |\n| Covered Lines: | 8981 |\n| Relevant Lines: | 12604 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5759\n\n46 of 213 (21.6%)  changed or added relevant lines in 17 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.8%) to 70.474%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/token/AggregationDistinctToken.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/selectitem/AggregationDistinctSelectItem.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/selectitem/DistinctSelectItem.java | 2 | 4 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 10 | 14 | 71.43%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 15 | 19 | 78.95%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/SelectStatement.java | 10 | 14 | 71.43%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 0 | 6 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 11 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/row/QueryRow.java | 0 | 19 | 0.0%\n | **Total:** | **46** | **213** | **21.6%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5758: |  -0.8% |\n| Covered Lines: | 8989 |\n| Relevant Lines: | 12755 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5764\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 63.483%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5383: |  0.0% |\n| Covered Lines: | 8009 |\n| Relevant Lines: | 12616 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5766\n\n2 of 9 (22.22%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.03%) to 70.446%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 2 | 9 | 22.22%\n | **Total:** | **2** | **9** | **22.22%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5765: |  -0.03% |\n| Covered Lines: | 9010 |\n| Relevant Lines: | 12790 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5774\n\n26 of 30 (86.67%)  changed or added relevant lines in 4 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.05%) to 70.529%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 19 | 22 | 86.36%\n | **Total:** | **26** | **30** | **86.67%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5772: |  0.05% |\n| Covered Lines: | 9032 |\n| Relevant Lines: | 12806 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5776\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 70.505%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5772: |  0.02% |\n| Covered Lines: | 9019 |\n| Relevant Lines: | 12792 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5778\n\n73 of 83 (87.95%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.04%) to 70.491%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 21 | 22 | 95.45%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/FrontendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 8 | 0.0%\n | **Total:** | **73** | **83** | **87.95%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5777: |  -0.04% |\n| Covered Lines: | 9037 |\n| Relevant Lines: | 12820 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5797\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\n23 unchanged lines in 7 files lost coverage.\nOverall coverage decreased (-0.04%) to 70.439%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/DataSourceOrchestrationListener.java | 3 | 55.56% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/listener/DataSourceStateOrchestrationListener.java | 3 | 50.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/listener/InstanceStateOrchestrationListener.java | 3 | 40.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/AuthenticationOrchestrationListener.java | 3 | 50.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/PropertiesOrchestrationListener.java | 3 | 50.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/ConfigMapOrchestrationListener.java | 4 | 44.44% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/listener/RuleOrchestrationListener.java | 4 | 50.0% |\n | **Total:** | **23** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5790: |  -0.04% |\n| Covered Lines: | 9012 |\n| Relevant Lines: | 12794 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5798\n\n1 of 2 (50.0%)  changed or added relevant lines in 2 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.003%) to 70.436%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/LogicSchema.java | 0 | 1 | 0.0%\n | **Total:** | **1** | **2** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/LogicSchema.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5795: |  -0.003% |\n| Covered Lines: | 9013 |\n| Relevant Lines: | 12796 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5800\n\n80 of 87 (91.95%)  changed or added relevant lines in 17 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.1%) to 70.554%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaUnicastBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 26 | 27 | 96.3%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 0 | 2 | 0.0%\n | **Total:** | **80** | **87** | **91.95%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5799: |  0.1% |\n| Covered Lines: | 9045 |\n| Relevant Lines: | 12820 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5838\n\n27 of 40 (67.5%)  changed or added relevant lines in 13 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.002%) to 70.428%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaUnicastBackendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 7 | 12 | 58.33%\n | **Total:** | **27** | **40** | **67.5%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaUnicastBackendHandler.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5836: |  0.002% |\n| Covered Lines: | 8988 |\n| Relevant Lines: | 12762 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5833\n\n23 of 26 (88.46%)  changed or added relevant lines in 10 files are covered.\n105 unchanged lines in 23 files lost coverage.\nOverall coverage decreased (-0.4%) to 70.376%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/dialect/postgresql/PostgreSQLResetParamExtractor.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/dialect/postgresql/PostgreSQLSetParamExtractor.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 8 | 9 | 88.89%\n | **Total:** | **23** | **26** | **88.46%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/PropertiesChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/ConfigMapChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/listener/DataSourceStateChangedListener.java | 1 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/TCLParserFactory.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/listener/InstanceStateChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/AuthenticationChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/DataSourceChangedListener.java | 1 | 83.33% |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 1 | 50.62% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/create/table/AbstractCreateTableParser.java | 5 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/drop/table/AbstractDropTableParser.java | 5 | 0.0% |\n | **Total:** | **105** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5815: |  -0.4% |\n| Covered Lines: | 8987 |\n| Relevant Lines: | 12770 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5849\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n187 unchanged lines in 37 files lost coverage.\nOverall coverage decreased (-0.4%) to 70.381%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/PropertiesChangedListener.java | 1 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/dialect/postgresql/PostgreSQLShowExtractor.java | 1 | 75.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/ConfigMapChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/listener/DataSourceStateChangedListener.java | 1 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/TCLParserFactory.java | 1 | 0.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/listener/InstanceStateChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/AuthenticationChangedListener.java | 1 | 80.0% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/config/listener/DataSourceChangedListener.java | 1 | 83.33% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/SQLStatementType.java | 1 | 95.24% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/engine/dal/DALStatementExtractor.java | 1 | 0.0% |\n | **Total:** | **187** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5815: |  -0.4% |\n| Covered Lines: | 8968 |\n| Relevant Lines: | 12742 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5827\n\n3 of 18 (16.67%)  changed or added relevant lines in 6 files are covered.\n25 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.04%) to 70.857%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/netty/ServerHandlerInitializer.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 2 | 9 | 22.22%\n | **Total:** | **3** | **18** | **16.67%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 8 | 48.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 16 | 10.64% |\n | **Total:** | **25** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5826: |  0.04% |\n| Covered Lines: | 9057 |\n| Relevant Lines: | 12782 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5834\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.05%) to 70.915%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5831: |  0.05% |\n| Covered Lines: | 9058 |\n| Relevant Lines: | 12773 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5899\n\n13 of 48 (27.08%)  changed or added relevant lines in 13 files are covered.\n206 unchanged lines in 27 files lost coverage.\nOverall coverage decreased (-2.5%) to 67.895%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/netty/ServerHandlerInitializer.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecuteEngine.java | 3 | 7 | 42.86%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 0 | 7 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/util/ListeningExecutorServiceUtil.java | 0 | 14 | 0.0%\n | **Total:** | **13** | **48** | **27.08%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dal/DALStatement.java | 1 | 87.5% |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/listener/DataSourceStateChangedListener.java | 1 | 85.71% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 1 | 50.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java | 1 | 94.44% |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/metadata/table/ShardingTableMetaData.java | 2 | 66.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java | 2 | 71.43% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 3 | 86.73% |\n | **Total:** | **206** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5840: |  -2.5% |\n| Covered Lines: | 9119 |\n| Relevant Lines: | 13431 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5847\n\n9 of 25 (36.0%)  changed or added relevant lines in 5 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 70.343%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/rule/OrchestrationMasterSlaveRule.java | 7 | 8 | 87.5%\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/service/DataSourceService.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/MasterSlaveSchema.java | 0 | 5 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/ShardingSchema.java | 0 | 6 | 0.0%\n | **Total:** | **9** | **25** | **36.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/MasterSlaveSchema.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5843: |  -0.04% |\n| Covered Lines: | 8973 |\n| Relevant Lines: | 12756 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5852\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 70.381%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5843: |  0.0% |\n| Covered Lines: | 8968 |\n| Relevant Lines: | 12742 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5875\n\n65 of 70 (92.86%)  changed or added relevant lines in 12 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.009%) to 71.84%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/util/DataSourceConverter.java | 5 | 10 | 50.0%\n | **Total:** | **65** | **70** | **92.86%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5874: |  -0.009% |\n| Covered Lines: | 9508 |\n| Relevant Lines: | 13235 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5879\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 72.034%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5878: |  0.0% |\n| Covered Lines: | 9600 |\n| Relevant Lines: | 13327 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5890\n\n27 of 31 (87.1%)  changed or added relevant lines in 9 files are covered.\n7 unchanged lines in 3 files lost coverage.\nOverall coverage remained the same at 72.363%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/AbstractBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/ComQueryBackendHandlerFactory.java | 5 | 8 | 62.5%\n | **Total:** | **27** | **31** | **87.1%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/SQLStatementType.java | 2 | 91.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 4 | 46.81% |\n | **Total:** | **7** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5889: |  0.0% |\n| Covered Lines: | 9612 |\n| Relevant Lines: | 13283 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5893\n\n28 of 32 (87.5%)  changed or added relevant lines in 9 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.4%) to 72.363%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/AbstractBackendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/ComQueryBackendHandlerFactory.java | 5 | 8 | 62.5%\n | **Total:** | **28** | **32** | **87.5%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5891: |  0.4% |\n| Covered Lines: | 9612 |\n| Relevant Lines: | 13283 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5894\n\n184 of 261 (70.5%)  changed or added relevant lines in 22 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.1%) to 71.817%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/impl/GroupByExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/impl/OrderByExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/util/ExtractorUtils.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/OrderByFiller.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/optimizer/impl/dql/dialect/mysql/MySQLSelectOptimizer.java | 4 | 6 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/impl/ExpressionExtractor.java | 26 | 30 | 86.67%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/ExpressionFiller.java | 38 | 44 | 86.36%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/impl/dql/AbstractSelectStatementExtractor.java | 0 | 8 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/segment/impl/FromWhereExtractor.java | 27 | 36 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/FromWhereFiller.java | 28 | 39 | 71.79%\n | **Total:** | **184** | **261** | **70.5%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5891: |  -0.1% |\n| Covered Lines: | 9635 |\n| Relevant Lines: | 13416 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5902\n\n69 of 70 (98.57%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.1%) to 68.036%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-spring/src/main/java/io/shardingsphere/transaction/handler/JpaTransactionManagerHandler.java | 14 | 15 | 93.33%\n | **Total:** | **69** | **70** | **98.57%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5900: |  0.1% |\n| Covered Lines: | 9172 |\n| Relevant Lines: | 13481 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5904\n\n14 of 26 (53.85%)  changed or added relevant lines in 11 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.08%) to 67.973%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/optimizer/impl/dql/dialect/mysql/MySQLSelectOptimizer.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/selectitem/AggregationDistinctSelectItem.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/AggregationDistinctQueryResult.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/selectitem/DistinctSelectItem.java | 2 | 7 | 28.57%\n | **Total:** | **14** | **26** | **53.85%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/registry/state/service/DataSourceService.java | 2 | 66.67% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5900: |  0.08% |\n| Covered Lines: | 9126 |\n| Relevant Lines: | 13426 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5913\n\n6 of 123 (4.88%)  changed or added relevant lines in 9 files are covered.\n4 unchanged lines in 3 files lost coverage.\nOverall coverage remained the same at 67.896%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/TableFiller.java | 5 | 8 | 62.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/SelectClauseExtractor.java | 0 | 5 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/ExpressionFiller.java | 0 | 8 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ExpressionExtractor.java | 0 | 12 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/FromWhereExtractor.java | 0 | 13 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 0 | 20 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/SelectClauseFiller.java | 0 | 26 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/FromWhereFiller.java | 0 | 30 | 0.0%\n | **Total:** | **6** | **123** | **4.88%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/FromWhereFiller.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/TableFiller.java | 1 | 58.82% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/FromWhereExtractor.java | 2 | 2.82% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5912: |  0.0% |\n| Covered Lines: | 9185 |\n| Relevant Lines: | 13528 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5926\n\n123 of 176 (69.89%)  changed or added relevant lines in 29 files are covered.\n5 unchanged lines in 2 files lost coverage.\nOverall coverage remained the same at 73.065%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/ComQueryBackendHandlerFactory.java | 16 | 17 | 94.12%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java | 6 | 7 | 85.71%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/executor/UserExecutorGroup.java | 7 | 9 | 77.78%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 1 | 3 | 33.33%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/TransactionType.java | 1 | 5 | 20.0%\n| sharding-core/src/main/java/io/shardingsphere/core/util/ReflectiveUtil.java | 0 | 6 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 4 | 18 | 22.22%\n| sharding-core/src/main/java/io/shardingsphere/core/util/ShardingExecutorService.java | 0 | 19 | 0.0%\n | **Total:** | **123** | **176** | **69.89%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 4 | 49.06% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5925: |  0.0% |\n| Covered Lines: | 9874 |\n| Relevant Lines: | 13514 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5927\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.5%) to 71.908%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5925: |  -0.5% |\n| Covered Lines: | 9402 |\n| Relevant Lines: | 13075 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5931\n\n7 of 15 (46.67%)  changed or added relevant lines in 4 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.04%) to 72.568%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/protocol/StringLenencBinaryProtocolValue.java | 2 | 3 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/TextResultSetRowPacket.java | 2 | 3 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/MySQLPacketPayload.java | 0 | 6 | 0.0%\n | **Total:** | **7** | **15** | **46.67%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5929: |  -0.04% |\n| Covered Lines: | 9547 |\n| Relevant Lines: | 13156 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5933\n\n87 of 99 (87.88%)  changed or added relevant lines in 14 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage increased (+0.04%) to 72.647%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/util/ShardingExecutorService.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/UnicastSchemaBackendHandler.java | 4 | 6 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/constant/PoolType.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 0 | 6 | 0.0%\n | **Total:** | **87** | **99** | **87.88%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/util/ShardingExecutorService.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5929: |  0.04% |\n| Covered Lines: | 9577 |\n| Relevant Lines: | 13183 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5936\n\n24 of 43 (55.81%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.007%) to 72.6%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 24 | 43 | 55.81%\n | **Total:** | **24** | **43** | **55.81%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5935: |  -0.007% |\n| Covered Lines: | 9581 |\n| Relevant Lines: | 13197 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5938\n\n65 of 71 (91.55%)  changed or added relevant lines in 11 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.008%) to 72.608%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/swap/DefaultDataSourceSwapper.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/ShowShardingCTLMergedResult.java | 0 | 2 | 0.0%\n| sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/swap/DataSourceSwapperRegistry.java | 17 | 20 | 85.0%\n | **Total:** | **65** | **71** | **91.55%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/generic/OKPacket.java | 2 | 91.3% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5937: |  0.008% |\n| Covered Lines: | 9606 |\n| Relevant Lines: | 13230 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5940\n\n44 of 107 (41.12%)  changed or added relevant lines in 27 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.3%) to 72.358%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/registry/impl/tcl/dialect/sqlserver/SQLServerSetVariableExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleSetVariableParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLSetVariableParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/begin/BeginParserFactory.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/commit/CommitParserFactory.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/rollback/RollbcakParserFactory.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/begin/BeginParser.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/commit/CommitParser.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/rollback/RollbackParser.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/dialect/mysql/MySQLAutoCommitExtractor.java | 7 | 11 | 63.64%\n | **Total:** | **44** | **107** | **41.12%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 1 | 69.64% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5939: |  -0.3% |\n| Covered Lines: | 9646 |\n| Relevant Lines: | 13331 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5964\n\n9 of 9 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.006%) to 71.667%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5963: |  0.006% |\n| Covered Lines: | 9440 |\n| Relevant Lines: | 13172 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5973\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.676%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5970: |  0.0% |\n| Covered Lines: | 9434 |\n| Relevant Lines: | 13162 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5989\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.677%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5988: |  0.0% |\n| Covered Lines: | 9432 |\n| Relevant Lines: | 13159 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5990\n\n3 of 5 (60.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.004%) to 71.673%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractStatementAdapter.java | 3 | 5 | 60.0%\n | **Total:** | **3** | **5** | **60.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5988: |  -0.004% |\n| Covered Lines: | 9435 |\n| Relevant Lines: | 13164 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5995\n\n8 of 16 (50.0%)  changed or added relevant lines in 4 files are covered.\n18 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.2%) to 71.468%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-core/src/main/java/io/shardingsphere/transaction/core/handler/ShardingTransactionHandlerAdapter.java | 0 | 4 | 0.0%\n| sharding-transaction/sharding-transaction-reg/sharding-transaction-reg-api/src/main/java/io/shardingsphere/transaction/api/ShardingTransactionHandlerRegistry.java | 0 | 4 | 0.0%\n | **Total:** | **8** | **16** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/spi/NewInstanceServiceLoader.java | 18 | 23.08% |\n | **Total:** | **18** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5994: |  -0.2% |\n| Covered Lines: | 9408 |\n| Relevant Lines: | 13164 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 5992\n\n3 of 12 (25.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.02%) to 71.654%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 2 | 11 | 18.18%\n | **Total:** | **3** | **12** | **25.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5988: |  -0.02% |\n| Covered Lines: | 9434 |\n| Relevant Lines: | 13166 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6001\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.005%) to 71.367%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6000: |  -0.005% |\n| Covered Lines: | 9409 |\n| Relevant Lines: | 13184 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6005\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.369%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6004: |  0.0% |\n| Covered Lines: | 9410 |\n| Relevant Lines: | 13185 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6007\n\n59 of 70 (84.29%)  changed or added relevant lines in 7 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.4%) to 71.745%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/FromWhereExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 45 | 54 | 83.33%\n | **Total:** | **59** | **70** | **84.29%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/FromWhereFiller.java | 2 | 83.02% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6004: |  0.4% |\n| Covered Lines: | 9504 |\n| Relevant Lines: | 13247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6018\n\n67 of 75 (89.33%)  changed or added relevant lines in 21 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.6%) to 72.328%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dal/set/SetParserFactory.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 12 | 14 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dal/set/SetParser.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/parser/SQLStatementType.java | 0 | 3 | 0.0%\n | **Total:** | **67** | **75** | **89.33%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6009: |  0.6% |\n| Covered Lines: | 9582 |\n| Relevant Lines: | 13248 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6011\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.745%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6009: |  0.0% |\n| Covered Lines: | 9504 |\n| Relevant Lines: | 13247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6016\n\n3 of 3 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.004%) to 71.749%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6013: |  0.004% |\n| Covered Lines: | 9506 |\n| Relevant Lines: | 13249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6022\n\n11 of 16 (68.75%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.001%) to 72.331%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/constant/properties/ShardingProperties.java | 11 | 16 | 68.75%\n | **Total:** | **11** | **16** | **68.75%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/constant/properties/ShardingProperties.java | 1 | 85.37% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6021: |  -0.001% |\n| Covered Lines: | 9586 |\n| Relevant Lines: | 13253 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6026\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.01%) to 72.321%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-transaction/sharding-transaction-reg/sharding-transaction-reg-xa/src/main/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManager.java | 1 | 97.3% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6025: |  -0.01% |\n| Covered Lines: | 9584 |\n| Relevant Lines: | 13252 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6030\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.06%) to 72.258%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6029: |  -0.06% |\n| Covered Lines: | 9551 |\n| Relevant Lines: | 13218 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6034\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 72.258%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6032: |  0.0% |\n| Covered Lines: | 9551 |\n| Relevant Lines: | 13218 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6036\n\n22 of 33 (66.67%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.003%) to 72.26%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java | 0 | 5 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 0 | 6 | 0.0%\n | **Total:** | **22** | **33** | **66.67%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6035: |  0.003% |\n| Covered Lines: | 9555 |\n| Relevant Lines: | 13223 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6042\n\n7 of 12 (58.33%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.09%) to 72.352%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 7 | 12 | 58.33%\n | **Total:** | **7** | **12** | **58.33%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6040: |  0.09% |\n| Covered Lines: | 9562 |\n| Relevant Lines: | 13216 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6047\n\n16 of 25 (64.0%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 72.325%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 11 | 20 | 55.0%\n | **Total:** | **16** | **25** | **64.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 1 | 82.64% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6044: |  -0.03% |\n| Covered Lines: | 9573 |\n| Relevant Lines: | 13236 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6051\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 72.367%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6050: |  0.02% |\n| Covered Lines: | 9564 |\n| Relevant Lines: | 13216 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6074\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 72.507%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6073: |  0.0% |\n| Covered Lines: | 9531 |\n| Relevant Lines: | 13145 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6087\n\n39 of 45 (86.67%)  changed or added relevant lines in 4 files are covered.\n7 unchanged lines in 2 files lost coverage.\nOverall coverage increased (+0.002%) to 72.508%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 6 | 0.0%\n | **Total:** | **39** | **45** | **86.67%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/connection/MasterSlaveConnection.java | 2 | 25.0% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 5 | 33.33% |\n | **Total:** | **7** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6076: |  0.002% |\n| Covered Lines: | 9545 |\n| Relevant Lines: | 13164 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6085\n\n2 of 2 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.004%) to 72.507%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6083: |  0.004% |\n| Covered Lines: | 9531 |\n| Relevant Lines: | 13145 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6090\n\n5 of 9 (55.56%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.006%) to 72.507%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 2 | 6 | 33.33%\n | **Total:** | **5** | **9** | **55.56%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6089: |  -0.006% |\n| Covered Lines: | 9547 |\n| Relevant Lines: | 13167 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6096\n\n33 of 39 (84.62%)  changed or added relevant lines in 8 files are covered.\n4 unchanged lines in 4 files lost coverage.\nOverall coverage increased (+0.01%) to 72.505%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/SelectClauseFiller.java | 12 | 13 | 92.31%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 5 | 7 | 71.43%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 0 | 2 | 0.0%\n | **Total:** | **33** | **39** | **84.62%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/SelectClauseFiller.java | 1 | 93.88% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/AbstractSelectParser.java | 1 | 98.04% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/optimizer/impl/dql/dialect/mysql/MySQLSelectOptimizer.java | 1 | 98.73% |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 1 | 0.0% |\n | **Total:** | **4** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6094: |  0.01% |\n| Covered Lines: | 9567 |\n| Relevant Lines: | 13195 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6109\n\n19 of 38 (50.0%)  changed or added relevant lines in 6 files are covered.\n13 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.07%) to 73.545%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 12 | 19 | 63.16%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/AggregationDistinctQueryResult.java | 0 | 10 | 0.0%\n | **Total:** | **19** | **38** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 13 | 84.47% |\n | **Total:** | **13** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6108: |  -0.07% |\n| Covered Lines: | 9555 |\n| Relevant Lines: | 12992 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6116\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\n62 unchanged lines in 15 files lost coverage.\nOverall coverage decreased (-0.5%) to 73.042%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/revoke/RevokeUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/grant/GrantUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/drop/DropUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/create/CreateUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/alter/AlterUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/rename/RenameUserParserFactory.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/deny/DenyUserParserFactory.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/drop/DropUserParser.java | 3 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/rename/RenameUserParser.java | 3 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/alter/AlterUserParser.java | 3 | 0.0% |\n | **Total:** | **62** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6114: |  -0.5% |\n| Covered Lines: | 9475 |\n| Relevant Lines: | 12972 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6123\n\n40 of 40 (100.0%)  changed or added relevant lines in 14 files are covered.\n63 unchanged lines in 16 files lost coverage.\nOverall coverage decreased (-0.5%) to 73.036%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/revoke/RevokeUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/grant/GrantUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/drop/DropUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/create/CreateUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/alter/AlterUserParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/dialect/mysql/MySQLChangeColumnExtractor.java | 1 | 83.33% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/rename/RenameUserParserFactory.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/deny/DenyUserParserFactory.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/drop/DropUserParser.java | 3 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/rename/RenameUserParser.java | 3 | 0.0% |\n | **Total:** | **63** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6115: |  -0.5% |\n| Covered Lines: | 9472 |\n| Relevant Lines: | 12969 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6124\n\n2 of 2 (100.0%)  changed or added relevant lines in 1 file are covered.\n39 unchanged lines in 14 files lost coverage.\nOverall coverage decreased (-0.3%) to 72.686%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/savepoint/SavepointParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/rollback/RollbcakParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/commit/CommitParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/set/transaction/SetTransactionParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/begin/BeginParserFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/rollback/RollbackParser.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/savepoint/SavepointParser.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/set/transaction/SetTransactionParser.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/begin/BeginParser.java | 2 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/tcl/commit/CommitParser.java | 2 | 0.0% |\n | **Total:** | **39** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6122: |  -0.3% |\n| Covered Lines: | 9383 |\n| Relevant Lines: | 12909 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6125\n\n27 of 31 (87.1%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.05%) to 72.988%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 25 | 29 | 86.21%\n | **Total:** | **27** | **31** | **87.1%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6122: |  -0.05% |\n| Covered Lines: | 9433 |\n| Relevant Lines: | 12924 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6129\n\n7 of 8 (87.5%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.04%) to 72.73%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/SelectClauseFiller.java | 3 | 4 | 75.0%\n | **Total:** | **7** | **8** | **87.5%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6128: |  0.04% |\n| Covered Lines: | 9396 |\n| Relevant Lines: | 12919 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6146\n\n26 of 41 (63.41%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 72.724%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/definition/column/RenameColumnDefinitionExtractor.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/definition/table/RenameTableExtractor.java | 3 | 4 | 75.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/RenameTableFiller.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/ddl/RenameColumnFiller.java | 8 | 10 | 80.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 0 | 10 | 0.0%\n | **Total:** | **26** | **41** | **63.41%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6145: |  0.002% |\n| Covered Lines: | 9420 |\n| Relevant Lines: | 12953 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6147\n\n2 of 2 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 72.724%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6145: |  0.002% |\n| Covered Lines: | 9388 |\n| Relevant Lines: | 12909 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6172\n\n12 of 20 (60.0%)  changed or added relevant lines in 8 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 72.296%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/row/QueryRow.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/SelectStatement.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 0 | 2 | 0.0%\n | **Total:** | **12** | **20** | **60.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6171: |  0.02% |\n| Covered Lines: | 9350 |\n| Relevant Lines: | 12933 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6178\n\n6 of 13 (46.15%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.04%) to 72.319%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java | 0 | 7 | 0.0%\n | **Total:** | **6** | **13** | **46.15%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6177: |  -0.04% |\n| Covered Lines: | 9348 |\n| Relevant Lines: | 12926 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6214\n\n1 of 60 (1.67%)  changed or added relevant lines in 4 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.08%) to 72.917%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/AggregationDistinctQueryResult.java | 0 | 11 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/AggregationDistinctQueryMetaData.java | 0 | 47 | 0.0%\n | **Total:** | **1** | **60** | **1.67%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6212: |  -0.08% |\n| Covered Lines: | 9337 |\n| Relevant Lines: | 12805 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6211\n\n44 of 264 (16.67%)  changed or added relevant lines in 21 files are covered.\n16 unchanged lines in 10 files lost coverage.\nOverall coverage decreased (-0.4%) to 72.55%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/util/ChannelUtils.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/ResponseHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/ShowDatabasesBackendHandler.java | 5 | 8 | 62.5%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/admin/initdb/ComInitDbPacket.java | 6 | 9 | 66.67%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/FrontendHandler.java | 2 | 6 | 33.33%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/MasterSlaveSchema.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/ShardingSchema.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLQueryResult.java | 0 | 5 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 5 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/netty/ServerHandlerInitializer.java | 0 | 7 | 0.0%\n | **Total:** | **44** | **264** | **16.67%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/ResponseHandler.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 1 | 37.04% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/netty/ServerHandlerInitializer.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/schema/MasterSlaveSchema.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 2 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java | 2 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/NettyBackendHandler.java | 2 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 2 | 40.74% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLQueryResult.java | 2 | 0.0% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/FrontendHandler.java | 2 | 22.73% |\n | **Total:** | **16** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6210: |  -0.4% |\n| Covered Lines: | 9359 |\n| Relevant Lines: | 12900 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6219\n\n107 of 123 (86.99%)  changed or added relevant lines in 9 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.08%) to 73.042%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java | 82 | 98 | 83.67%\n | **Total:** | **107** | **123** | **86.99%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6218: |  0.08% |\n| Covered Lines: | 9372 |\n| Relevant Lines: | 12831 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6224\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.006%) to 72.985%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java | 1 | 44.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6223: |  -0.006% |\n| Covered Lines: | 9364 |\n| Relevant Lines: | 12830 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6228\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 72.985%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6227: |  0.0% |\n| Covered Lines: | 9364 |\n| Relevant Lines: | 12830 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6240\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.04%) to 73.03%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6238: |  0.04% |\n| Covered Lines: | 9369 |\n| Relevant Lines: | 12829 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6242\n\n14 of 25 (56.0%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+1.1%) to 74.167%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/DistinctQueryResult.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 9 | 0.0%\n | **Total:** | **14** | **25** | **56.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6241: |  1.1% |\n| Covered Lines: | 9523 |\n| Relevant Lines: | 12840 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6258\n\n12 of 13 (92.31%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 74.678%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 9 | 10 | 90.0%\n | **Total:** | **12** | **13** | **92.31%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6255: |  0.02% |\n| Covered Lines: | 9785 |\n| Relevant Lines: | 13103 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6262\n\n9 of 9 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.8%) to 75.515%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6259: |  0.8% |\n| Covered Lines: | 9900 |\n| Relevant Lines: | 13110 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6278\n\n141 of 175 (80.57%)  changed or added relevant lines in 20 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.2%) to 75.767%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java | 6 | 7 | 85.71%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-2pc-xa/src/main/java/io/shardingsphere/transaction/xa/jta/connection/ShardingXAConnectionFactory.java | 3 | 4 | 75.0%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-2pc-xa/src/main/java/io/shardingsphere/transaction/xa/jta/datasource/ShardingXADataSource.java | 13 | 14 | 92.86%\n| sharding-core/src/main/java/io/shardingsphere/core/util/ReflectiveUtil.java | 0 | 3 | 0.0%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-2pc-xa/src/main/java/io/shardingsphere/transaction/xa/handler/XAShardingTransactionHandler.java | 30 | 33 | 90.91%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-2pc-xa/src/main/java/io/shardingsphere/transaction/xa/jta/datasource/XADataSourceFactory.java | 7 | 10 | 70.0%\n| sharding-transaction/sharding-transaction-core/src/main/java/io/shardingsphere/transaction/core/handler/ShardingTransactionHandlerAdapter.java | 4 | 7 | 57.14%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java | 10 | 15 | 66.67%\n| sharding-transaction/sharding-transaction-core/src/main/java/io/shardingsphere/transaction/core/loader/ShardingTransactionHandlerRegistry.java | 0 | 6 | 0.0%\n | **Total:** | **141** | **175** | **80.57%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/util/ReflectiveUtil.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6276: |  0.2% |\n| Covered Lines: | 10024 |\n| Relevant Lines: | 13230 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6279\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 75.594%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6276: |  0.0% |\n| Covered Lines: | 9921 |\n| Relevant Lines: | 13124 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6290\n\n37 of 58 (63.79%)  changed or added relevant lines in 6 files are covered.\n13 unchanged lines in 4 files lost coverage.\nOverall coverage decreased (-0.05%) to 75.729%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/keygen/KeyGeneratorType.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingRuleConfiguration.java | 2 | 11 | 18.18%\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlTableRuleConfiguration.java | 3 | 14 | 21.43%\n | **Total:** | **37** | **58** | **63.79%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/TransactionBackendHandler.java | 1 | 92.31% |\n| sharding-transaction/sharding-transaction-core/src/main/java/io/shardingsphere/transaction/core/TransactionOperationType.java | 2 | 0.0% |\n| sharding-transaction/sharding-transaction-core/src/main/java/io/shardingsphere/transaction/core/handler/ShardingTransactionHandlerAdapter.java | 3 | 66.67% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java | 7 | 77.48% |\n | **Total:** | **13** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6285: |  -0.05% |\n| Covered Lines: | 10056 |\n| Relevant Lines: | 13279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6295\n\n4 of 6 (66.67%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 75.702%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java | 4 | 6 | 66.67%\n | **Total:** | **4** | **6** | **66.67%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6294: |  0.002% |\n| Covered Lines: | 10051 |\n| Relevant Lines: | 13277 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6307\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 75.888%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6304: |  0.01% |\n| Covered Lines: | 10046 |\n| Relevant Lines: | 13238 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6310\n\n5 of 5 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 75.905%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6309: |  0.01% |\n| Covered Lines: | 10049 |\n| Relevant Lines: | 13239 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6311\n\n7 of 7 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.009%) to 75.901%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6309: |  0.009% |\n| Covered Lines: | 10047 |\n| Relevant Lines: | 13237 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6327\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n34 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.05%) to 75.949%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java | 4 | 5.26% |\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 11 | 70.83% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java | 19 | 0.0% |\n | **Total:** | **34** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6320: |  0.05% |\n| Covered Lines: | 10045 |\n| Relevant Lines: | 13226 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6342\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 76.02%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6341: |  0.0% |\n| Covered Lines: | 10027 |\n| Relevant Lines: | 13190 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6347\n\n30 of 32 (93.75%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.1%) to 76.159%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingRuleConfiguration.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlTableRuleConfiguration.java | 1 | 2 | 50.0%\n | **Total:** | **30** | **32** | **93.75%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6346: |  0.1% |\n| Covered Lines: | 10037 |\n| Relevant Lines: | 13179 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6348\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 76.041%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6346: |  0.0% |\n| Covered Lines: | 10026 |\n| Relevant Lines: | 13185 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6362\n\n3783 of 4535 (83.42%)  changed or added relevant lines in 370 files are covered.\n78 unchanged lines in 37 files lost coverage.\nOverall coverage increased (+7.4%) to 76.397%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java | 16 | 17 | 94.12%\n| sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/result/DistinctQueryResult.java | 56 | 57 | 98.25%\n| sharding-core/src/main/java/io/shardingsphere/core/keygen/generator/SnowflakeKeyGenerator.java | 39 | 40 | 97.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ColumnSegmentExtractor.java | 15 | 16 | 93.75%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/TableNameExtractor.java | 19 | 20 | 95.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ddl/column/ColumnDefinitionExtractor.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ddl/column/RenameColumnDefinitionExtractor.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ddl/constraint/OutlinePrimaryKeyExtractor.java | 13 | 14 | 92.86%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ddl/constraint/dialect/sqlserver/SQLServerAddPrimaryKeyExtractor.java | 16 | 17 | 94.12%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ddl/index/IndexNameExtractor.java | 2 | 3 | 66.67%\n | **Total:** | **3783** | **4535** | **83.42%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java | 1 | 6.67% |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/AndCondition.java | 1 | 94.44% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 1 | 38.1% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 1 | 35.0% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/api/OrchestrationShardingDataSourceFactory.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 1 | 84.62% |\n| sharding-core/src/main/java/io/shardingsphere/core/constant/properties/ShardingProperties.java | 1 | 85.37% |\n| sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/src/main/java/io/shardingsphere/orchestration/reg/zookeeper/curator/CuratorZookeeperRegistryCenter.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/AbstractSelectParser.java | 1 | 98.04% |\n | **Total:** | **78** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 5654: |  7.4% |\n| Covered Lines: | 10296 |\n| Relevant Lines: | 13477 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6364\n\n16 of 25 (64.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 76.14%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCClassDetermine.java | 16 | 23 | 69.57%\n | **Total:** | **16** | **25** | **64.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6357: |  0.02% |\n| Covered Lines: | 10049 |\n| Relevant Lines: | 13198 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6366\n\n12 of 12 (100.0%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 76.137%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6357: |  0.01% |\n| Covered Lines: | 10025 |\n| Relevant Lines: | 13167 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6371\n\n33 of 37 (89.19%)  changed or added relevant lines in 9 files are covered.\n3 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.007%) to 76.226%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/io/shardingsphere/transaction/xa/jta/datasource/SingleXADataSource.java | 4 | 5 | 80.0%\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 7 | 10 | 70.0%\n | **Total:** | **33** | **37** | **89.19%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java | 3 | 51.02% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6370: |  0.007% |\n| Covered Lines: | 10029 |\n| Relevant Lines: | 13157 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6373\n\n9 of 16 (56.25%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.001%) to 76.22%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/type/unicast/UnicastRoutingEngine.java | 2 | 9 | 22.22%\n | **Total:** | **9** | **16** | **56.25%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6370: |  0.001% |\n| Covered Lines: | 10042 |\n| Relevant Lines: | 13175 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6375\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 76.226%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6374: |  0.0% |\n| Covered Lines: | 10029 |\n| Relevant Lines: | 13157 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6419\n\n10 of 10 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.007%) to 76.21%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6418: |  0.007% |\n| Covered Lines: | 10222 |\n| Relevant Lines: | 13413 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6425\n\n14 of 14 (100.0%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 76.21%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6420: |  0.0% |\n| Covered Lines: | 10222 |\n| Relevant Lines: | 13413 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6470\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\n58 unchanged lines in 6 files lost coverage.\nOverall coverage increased (+0.06%) to 75.043%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/util/DataSourceConverter.java | 2 | 93.1% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 4 | 64.29% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java | 5 | 6.45% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 12 | 32.5% |\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java | 15 | 24.39% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java | 20 | 0.0% |\n | **Total:** | **58** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6458: |  0.06% |\n| Covered Lines: | 10109 |\n| Relevant Lines: | 13471 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6463\n\n20 of 28 (71.43%)  changed or added relevant lines in 15 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.004%) to 74.944%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 1 | 2 | 50.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java | 2 | 3 | 66.67%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java | 6 | 9 | 66.67%\n | **Total:** | **20** | **28** | **71.43%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6461: |  -0.004% |\n| Covered Lines: | 10098 |\n| Relevant Lines: | 13474 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6476\n\n53 of 54 (98.15%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.9%) to 75.543%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 25 | 26 | 96.15%\n | **Total:** | **53** | **54** | **98.15%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6353: |  0.9% |\n| Covered Lines: | 9915 |\n| Relevant Lines: | 13125 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6497\n\n3 of 3 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.4%) to 75.365%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6485: |  0.4% |\n| Covered Lines: | 10166 |\n| Relevant Lines: | 13489 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6493\n\n8 of 16 (50.0%)  changed or added relevant lines in 5 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 74.893%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/spi/parsing/SPIParsingHook.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/router/masterslave/ShardingMasterSlaveRouter.java | 0 | 7 | 0.0%\n | **Total:** | **8** | **16** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/RouteUnit.java | 1 | 50.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6490: |  -0.02% |\n| Covered Lines: | 10109 |\n| Relevant Lines: | 13498 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6503\n\n54 of 58 (93.1%)  changed or added relevant lines in 13 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.08%) to 75.426%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/dml/UpdateSetWhereExtractor.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java | 0 | 3 | 0.0%\n | **Total:** | **54** | **58** | **93.1%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6500: |  0.08% |\n| Covered Lines: | 10221 |\n| Relevant Lines: | 13551 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6506\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 75.426%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6505: |  0.0% |\n| Covered Lines: | 10221 |\n| Relevant Lines: | 13551 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6509\n\n17 of 17 (100.0%)  changed or added relevant lines in 7 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.03%) to 75.454%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6507: |  0.03% |\n| Covered Lines: | 10230 |\n| Relevant Lines: | 13558 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6508\n\n24 of 24 (100.0%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.004%) to 75.43%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6507: |  0.004% |\n| Covered Lines: | 10223 |\n| Relevant Lines: | 13553 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6512\n\n14 of 29 (48.28%)  changed or added relevant lines in 7 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.02%) to 75.431%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/bootstrap/ShardingBootstrap.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 5 | 8 | 62.5%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/router/masterslave/ShardingMasterSlaveRouter.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/spi/rewrite/SPIRewriteHook.java | 6 | 14 | 42.86%\n | **Total:** | **14** | **29** | **48.28%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6511: |  -0.02% |\n| Covered Lines: | 10236 |\n| Relevant Lines: | 13570 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6514\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 75.433%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6513: |  0.002% |\n| Covered Lines: | 10237 |\n| Relevant Lines: | 13571 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6516\n\n9 of 9 (100.0%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.06%) to 75.486%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6515: |  0.06% |\n| Covered Lines: | 10248 |\n| Relevant Lines: | 13576 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6520\n\n46 of 52 (88.46%)  changed or added relevant lines in 17 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 75.492%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/MasterSlaveSQLRewriteEngine.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 9 | 12 | 75.0%\n | **Total:** | **46** | **52** | **88.46%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6519: |  0.0% |\n| Covered Lines: | 10251 |\n| Relevant Lines: | 13579 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6529\n\n8 of 9 (88.89%)  changed or added relevant lines in 8 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 75.43%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 0 | 1 | 0.0%\n | **Total:** | **8** | **9** | **88.89%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6528: |  0.0% |\n| Covered Lines: | 10223 |\n| Relevant Lines: | 13553 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6534\n\n36 of 51 (70.59%)  changed or added relevant lines in 11 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 75.394%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCBackendDataSource.java | 2 | 4 | 50.0%\n| sharding-transaction/sharding-transaction-core/src/main/java/org/apache/shardingsphere/transaction/ShardingTransactionManagerEngine.java | 16 | 18 | 88.89%\n| sharding-transaction/sharding-transaction-core/src/main/java/org/apache/shardingsphere/transaction/core/ResourceDataSource.java | 0 | 5 | 0.0%\n| sharding-transaction/sharding-transaction-core/src/main/java/org/apache/shardingsphere/transaction/core/ResourceIDGenerator.java | 0 | 5 | 0.0%\n | **Total:** | **36** | **51** | **70.59%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-transaction/sharding-transaction-core/src/main/java/org/apache/shardingsphere/transaction/ShardingTransactionManagerEngine.java | 1 | 80.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6533: |  -0.04% |\n| Covered Lines: | 10228 |\n| Relevant Lines: | 13566 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6532\n\n19 of 32 (59.38%)  changed or added relevant lines in 11 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.008%) to 75.437%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 5 | 7 | 71.43%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/SQLJudgeEngine.java | 2 | 5 | 40.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java | 3 | 6 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/MasterSlaveSQLRewriteEngine.java | 0 | 3 | 0.0%\n | **Total:** | **19** | **32** | **59.38%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/util/SQLUtil.java | 1 | 92.31% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6530: |  0.008% |\n| Covered Lines: | 10221 |\n| Relevant Lines: | 13549 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6536\n\n14 of 17 (82.35%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 75.396%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/XAShardingTransactionManager.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/connection/XAConnectionFactory.java | 0 | 1 | 0.0%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/connection/dialect/PostgreSQLXAConnectionWrapper.java | 2 | 3 | 66.67%\n | **Total:** | **14** | **17** | **82.35%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6535: |  0.002% |\n| Covered Lines: | 10232 |\n| Relevant Lines: | 13571 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6538\n\n36 of 42 (85.71%)  changed or added relevant lines in 16 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 75.414%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/expression/AliasExpressionParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dql/SelectItemFiller.java | 2 | 4 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/UpdateSetItemsClauseParser.java | 0 | 2 | 0.0%\n | **Total:** | **36** | **42** | **85.71%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6537: |  0.02% |\n| Covered Lines: | 10248 |\n| Relevant Lines: | 13589 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6540\n\n3 of 3 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.004%) to 75.418%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6539: |  0.004% |\n| Covered Lines: | 10250 |\n| Relevant Lines: | 13591 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6543\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 75.418%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6541: |  0.0% |\n| Covered Lines: | 10250 |\n| Relevant Lines: | 13591 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6553\n\n12 of 13 (92.31%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.5%) to 76.322%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/SQLExecuteTemplate.java | 0 | 1 | 0.0%\n | **Total:** | **12** | **13** | **92.31%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6551: |  0.5% |\n| Covered Lines: | 10363 |\n| Relevant Lines: | 13578 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6550\n\n30 of 31 (96.77%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.4%) to 75.828%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/expression/ExpressionExtractor.java | 2 | 3 | 66.67%\n | **Total:** | **30** | **31** | **96.77%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/spi/NewInstanceServiceLoader.java | 1 | 91.67% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6545: |  0.4% |\n| Covered Lines: | 10308 |\n| Relevant Lines: | 13594 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6566\n\n0 of 3071 (0.0%)  changed or added relevant lines in 158 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-14.08%) to 62.305%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/frontend/common/executor/CommandExecutorSelector.java | 0 | 1 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/runtime/metadata/ProxyTableMetaDataConnectionManager.java | 0 | 1 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/transport/postgresql/packet/command/query/binary/PostgreSQLBinaryStatementParameterType.java | 0 | 1 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/connection/ConnectionStatus.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/execute/response/ExecuteQueryResponse.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/recognizer/impl/H2Recognizer.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java | 0 | 2 | 0.0%\n| sharding-proxy-postgresql/src/main/java/org/apache/shardingsphere/shardingproxypg/backend/text/transaction/SkipBackendHandler.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **3071** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6562: |  -14.08% |\n| Covered Lines: | 10370 |\n| Relevant Lines: | 16644 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6565\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 76.402%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6563: |  0.0% |\n| Covered Lines: | 10370 |\n| Relevant Lines: | 13573 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6578\n\n37 of 39 (94.87%)  changed or added relevant lines in 6 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.08%) to 62.414%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/yaml/sharding/YamlTableRuleConfiguration.java | 1 | 3 | 33.33%\n | **Total:** | **37** | **39** | **94.87%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/yaml/sharding/YamlTableRuleConfiguration.java | 1 | 59.09% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6577: |  0.08% |\n| Covered Lines: | 10410 |\n| Relevant Lines: | 16679 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6590\n\n17 of 21 (80.95%)  changed or added relevant lines in 2 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.1%) to 62.495%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/connection/dialect/MySQLXAConnectionWrapper.java | 5 | 6 | 83.33%\n| sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/XADataSourceFactory.java | 12 | 15 | 80.0%\n | **Total:** | **17** | **21** | **80.95%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/yaml/dumper/impl/ShardingRuleConfigurationYamlDumper.java | 1 | 94.12% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6589: |  0.1% |\n| Covered Lines: | 10446 |\n| Relevant Lines: | 16715 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6626\n\n100 of 829 (12.06%)  changed or added relevant lines in 79 files are covered.\n5 unchanged lines in 5 files lost coverage.\nOverall coverage decreased (-2.5%) to 60.373%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCBackendDataSource.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/common/FrontendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/common/FrontendHandlerFactory.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/runtime/GlobalRegistry.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/runtime/schema/ShardingSchema.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/codec/PacketCodecFactory.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/ComStmtPreparePacket.java | 1 | 2 | 50.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/generic/ErrPacket.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/generic/OKPacket.java | 0 | 1 | 0.0%\n | **Total:** | **100** | **829** | **12.06%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/common/netty/ServerHandlerInitializer.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/generic/OKPacket.java | 1 | 85.71% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/netty/client/response/mysql/MySQLResponseHandler.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/netty/client/BackendNettyClientChannelInitializer.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/generic/ErrPacket.java | 1 | 83.33% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6625: |  -2.5% |\n| Covered Lines: | 10520 |\n| Relevant Lines: | 17425 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6631\n\n120 of 175 (68.57%)  changed or added relevant lines in 38 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.001%) to 73.268%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/command/CommandResponsePackets.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/generic/DatabaseFailurePacket.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/MySQLQueryComStmtExecutePacket.java | 19 | 20 | 95.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/MySQLComPacketQuery.java | 3 | 4 | 75.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/MySQLColumnDefinition41Packet.java | 3 | 5 | 60.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/MySQLComStmtPreparePacket.java | 3 | 5 | 60.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/query/QueryBackendHandler.java | 0 | 3 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java | 6 | 9 | 66.67%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/netty/client/response/mysql/MySQLResponseHandler.java | 0 | 8 | 0.0%\n | **Total:** | **120** | **175** | **68.57%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/generic/DatabaseFailurePacket.java | 1 | 50.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/netty/client/response/mysql/MySQLQueryResult.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6630: |  -0.001% |\n| Covered Lines: | 10522 |\n| Relevant Lines: | 14361 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6645\n\n130 of 168 (77.38%)  changed or added relevant lines in 11 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.005%) to 73.249%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java | 20 | 21 | 95.24%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java | 20 | 21 | 95.24%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetMetaData.java | 2 | 4 | 50.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java | 74 | 77 | 96.1%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/encrypt/ShardingEncryptorEngine.java | 6 | 10 | 60.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java | 1 | 7 | 14.29%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 9 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/command/query/DataHeaderPacket.java | 0 | 11 | 0.0%\n | **Total:** | **130** | **168** | **77.38%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/command/query/DataHeaderPacket.java | 1 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6644: |  -0.005% |\n| Covered Lines: | 10550 |\n| Relevant Lines: | 14403 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6651\n\n23 of 38 (60.53%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.02%) to 73.234%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/encrypt/encryptor/imp/AESShardingEncryptor.java | 16 | 21 | 76.19%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/netty/NettyDatabaseCommunicationEngine.java | 0 | 9 | 0.0%\n | **Total:** | **23** | **38** | **60.53%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6650: |  -0.02% |\n| Covered Lines: | 10572 |\n| Relevant Lines: | 14436 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6673\n\n4 of 4 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.004%) to 73.246%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6672: |  0.004% |\n| Covered Lines: | 10565 |\n| Relevant Lines: | 14424 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6675\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 73.242%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6672: |  0.0% |\n| Covered Lines: | 10563 |\n| Relevant Lines: | 14422 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6686\n\n1 of 4 (25.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.01%) to 73.357%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 3 | 0.0%\n | **Total:** | **1** | **4** | **25.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6683: |  -0.01% |\n| Covered Lines: | 10581 |\n| Relevant Lines: | 14424 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6687\n\n11 of 11 (100.0%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.004%) to 73.363%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6683: |  -0.004% |\n| Covered Lines: | 10579 |\n| Relevant Lines: | 14420 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6692\n\n107 of 116 (92.24%)  changed or added relevant lines in 16 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.2%) to 73.587%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/OptimizeEngineFactory.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/context/condition/Conditions.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 71 | 74 | 95.95%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/EncryptColumnPlaceholder.java | 18 | 21 | 85.71%\n | **Total:** | **107** | **116** | **92.24%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6690: |  0.2% |\n| Covered Lines: | 10687 |\n| Relevant Lines: | 14523 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6697\n\n14 of 16 (87.5%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.005%) to 73.578%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dql/SelectItemFiller.java | 10 | 12 | 83.33%\n | **Total:** | **14** | **16** | **87.5%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6695: |  0.005% |\n| Covered Lines: | 10688 |\n| Relevant Lines: | 14526 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6746\n\n4 of 12 (33.33%)  changed or added relevant lines in 4 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.03%) to 75.33%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/ComQueryBackendHandlerFactory.java | 1 | 2 | 50.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/GUICompatibilityBackendHandler.java | 0 | 2 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/command/query/DataHeaderPacket.java | 0 | 5 | 0.0%\n | **Total:** | **4** | **12** | **33.33%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6745: |  -0.03% |\n| Covered Lines: | 10657 |\n| Relevant Lines: | 14147 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6748\n\n5 of 6 (83.33%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.007%) to 75.337%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/ComQueryBackendHandlerFactory.java | 5 | 6 | 83.33%\n | **Total:** | **5** | **6** | **83.33%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6747: |  0.007% |\n| Covered Lines: | 10661 |\n| Relevant Lines: | 14151 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6752\n\n192 of 218 (88.07%)  changed or added relevant lines in 19 files are covered.\n101 unchanged lines in 2 files lost coverage.\nOverall coverage decreased (-0.6%) to 74.64%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 11 | 12 | 91.67%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/EncryptWhereColumnPlaceholder.java | 9 | 10 | 90.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/InsertValuesToken.java | 47 | 49 | 95.92%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/PreparedStatementRoutingEngine.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 59 | 65 | 90.77%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 3 | 15 | 20.0%\n | **Total:** | **192** | **218** | **88.07%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 2 | 63.33% |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dml/InsertFiller.java | 99 | 6.36% |\n | **Total:** | **101** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6751: |  -0.6% |\n| Covered Lines: | 10625 |\n| Relevant Lines: | 14235 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6763\n\n61 of 141 (43.26%)  changed or added relevant lines in 11 files are covered.\n5 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.2%) to 74.447%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 17 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/QueryResultMetaData.java | 0 | 26 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/StreamQueryResult.java | 0 | 34 | 0.0%\n | **Total:** | **61** | **141** | **43.26%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 1 | 0.0% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java | 1 | 91.43% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetMetaData.java | 3 | 26.92% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6760: |  -0.2% |\n| Covered Lines: | 10605 |\n| Relevant Lines: | 14245 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6766\n\n22 of 42 (52.38%)  changed or added relevant lines in 5 files are covered.\n2 unchanged lines in 2 files lost coverage.\nOverall coverage increased (+0.05%) to 74.501%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/insert/InsertOptimizeEngine.java | 20 | 22 | 90.91%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/QueryResultMetaData.java | 2 | 6 | 33.33%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 5 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/StreamQueryResult.java | 0 | 5 | 0.0%\n | **Total:** | **22** | **42** | **52.38%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java | 1 | 10.26% |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/QueryResultMetaData.java | 1 | 65.63% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6764: |  0.05% |\n| Covered Lines: | 10635 |\n| Relevant Lines: | 14275 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6789\n\n2 of 64 (3.13%)  changed or added relevant lines in 13 files are covered.\n5 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.07%) to 74.224%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 1 | 2 | 50.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/ConnectionScopeBinaryStatementRegistry.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLStringBinaryProtocolValue.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacket.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/text/PostgreSQLDataRowPacket.java | 0 | 1 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLFrontendEngine.java | 0 | 4 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java | 0 | 5 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/handshake/PostgreSQLParameterStatusPacket.java | 0 | 9 | 0.0%\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/PostgreSQLCommandPacketType.java | 0 | 11 | 0.0%\n | **Total:** | **2** | **64** | **3.13%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLCommandExecutor.java | 1 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/PostgreSQLCommandPacketType.java | 2 | 0.0% |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/bind/PostgreSQLComBindPacket.java | 2 | 0.0% |\n | **Total:** | **5** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6788: |  -0.07% |\n| Covered Lines: | 10640 |\n| Relevant Lines: | 14335 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6787\n\n6 of 7 (85.71%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.03%) to 74.406%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/EncryptWhereColumnPlaceholder.java | 0 | 1 | 0.0%\n | **Total:** | **6** | **7** | **85.71%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6786: |  0.03% |\n| Covered Lines: | 10640 |\n| Relevant Lines: | 14300 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6796\n\n13 of 21 (61.9%)  changed or added relevant lines in 4 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 74.297%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 0 | 8 | 0.0%\n | **Total:** | **13** | **21** | **61.9%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 1 | 65.52% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6795: |  0.03% |\n| Covered Lines: | 10652 |\n| Relevant Lines: | 14337 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6797\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 74.267%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLFrontendEngine.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6795: |  0.0% |\n| Covered Lines: | 10644 |\n| Relevant Lines: | 14332 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6803\n\n21 of 21 (100.0%)  changed or added relevant lines in 5 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 74.298%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6801: |  0.02% |\n| Covered Lines: | 10664 |\n| Relevant Lines: | 14353 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6814\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.03%) to 74.569%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6813: |  0.03% |\n| Covered Lines: | 10673 |\n| Relevant Lines: | 14313 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6818\n\n191 of 192 (99.48%)  changed or added relevant lines in 7 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.3%) to 74.851%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java | 1 | 2 | 50.0%\n | **Total:** | **191** | **192** | **99.48%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6816: |  0.3% |\n| Covered Lines: | 10834 |\n| Relevant Lines: | 14474 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6821\n\n35 of 101 (34.65%)  changed or added relevant lines in 19 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.3%) to 74.28%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/api/config/encryptor/EncryptRuleConfiguration.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/MemoryQueryResult.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/StreamQueryResult.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/yaml/config/encrypt/YamlEncryptRuleConfiguration.java | 0 | 2 | 0.0%\n| sharding-proxy/sharding-proxy-core/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rule/EncryptTableRule.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/executor/sql/execute/result/QueryResultMetaData.java | 7 | 12 | 58.33%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java | 6 | 12 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/encrypt/ShardingEncryptorEngine.java | 4 | 11 | 36.36%\n | **Total:** | **35** | **101** | **34.65%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6820: |  -0.3% |\n| Covered Lines: | 10683 |\n| Relevant Lines: | 14382 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6832\n\n307 of 325 (94.46%)  changed or added relevant lines in 15 files are covered.\n55 unchanged lines in 4 files lost coverage.\nOverall coverage decreased (-0.07%) to 74.61%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ExpressionExtractor.java | 19 | 20 | 95.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/dml/DeleteFromWhereExtractor.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/dml/UpdateWhereExtractor.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java | 9 | 11 | 81.82%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/dml/InsertExtractor.java | 64 | 67 | 95.52%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/dml/InsertFiller.java | 101 | 105 | 96.19%\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/AbstractFromWhereExtractor.java | 53 | 59 | 89.83%\n | **Total:** | **307** | **325** | **94.46%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java | 1 | 81.25% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/condition/Conditions.java | 3 | 18.18% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertDuplicateKeyUpdateClauseParser.java | 15 | 30.43% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 36 | 16.28% |\n | **Total:** | **55** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6805: |  -0.07% |\n| Covered Lines: | 9938 |\n| Relevant Lines: | 13320 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6848\n\n1 of 2 (50.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.003%) to 74.391%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-transport/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java | 1 | 2 | 50.0%\n | **Total:** | **1** | **2** | **50.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6847: |  -0.003% |\n| Covered Lines: | 10838 |\n| Relevant Lines: | 14569 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6837\n\n1 of 4 (25.0%)  changed or added relevant lines in 3 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.005%) to 74.241%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-core/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacket.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/MasterSlaveSchema.java | 0 | 2 | 0.0%\n | **Total:** | **1** | **4** | **25.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/sharding-proxy-core/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/parse/PostgreSQLComParsePacket.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6835: |  -0.005% |\n| Covered Lines: | 10831 |\n| Relevant Lines: | 14589 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6854\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 74.308%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6853: |  0.0% |\n| Covered Lines: | 10817 |\n| Relevant Lines: | 14557 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6855\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 74.308%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6853: |  0.0% |\n| Covered Lines: | 10817 |\n| Relevant Lines: | 14557 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6856\n\n1 of 17 (5.88%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.08%) to 74.228%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/TextProtocolBackendHandlerFactory.java | 1 | 2 | 50.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ExplainSQLBackendHandler.java | 0 | 15 | 0.0%\n | **Total:** | **1** | **17** | **5.88%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6853: |  -0.08% |\n| Covered Lines: | 10818 |\n| Relevant Lines: | 14574 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6859\n\n7 of 565 (1.24%)  changed or added relevant lines in 16 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-2.7%) to 71.758%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptDefaultOptimizeEngine.java | 0 | 1 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/api/EncryptDataSourceFactory.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/OptimizeEngineFactory.java | 0 | 3 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/api/yaml/YamlEncryptDataSourceFactory.java | 0 | 12 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 5 | 18 | 27.78%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java | 0 | 14 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/EncryptSQLParsingEngine.java | 0 | 16 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/connection/EncryptConnection.java | 0 | 27 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 0 | 47 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/EncryptDataSource.java | 0 | 47 | 0.0%\n | **Total:** | **7** | **565** | **1.24%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6857: |  -2.7% |\n| Covered Lines: | 10811 |\n| Relevant Lines: | 15066 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6862\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.005%) to 74.509%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6861: |  0.005% |\n| Covered Lines: | 10809 |\n| Relevant Lines: | 14507 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6863\n\n26 of 28 (92.86%)  changed or added relevant lines in 3 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.01%) to 74.493%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java | 22 | 24 | 91.67%\n | **Total:** | **26** | **28** | **92.86%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6861: |  -0.01% |\n| Covered Lines: | 10803 |\n| Relevant Lines: | 14502 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6869\n\n99 of 101 (98.02%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.865%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaData.java | 2 | 4 | 50.0%\n | **Total:** | **99** | **101** | **98.02%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6868: |  0.0% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15120 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6871\n\n0 of 29 (0.0%)  changed or added relevant lines in 3 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.1%) to 71.623%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/ShardingCTLBackendHandlerFactory.java | 0 | 2 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/explain/ShardingCTLExplainParser.java | 0 | 9 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/explain/ShardingCTLExplainBackendHandler.java | 0 | 18 | 0.0%\n | **Total:** | **0** | **29** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/ShardingCTLBackendHandlerFactory.java | 1 | 28.57% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6868: |  -0.1% |\n| Covered Lines: | 10805 |\n| Relevant Lines: | 15086 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6875\n\n0 of 4 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.01%) to 71.713%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java | 0 | 4 | 0.0%\n | **Total:** | **0** | **4** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6874: |  -0.01% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15152 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6876\n\n5 of 14 (35.71%)  changed or added relevant lines in 6 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 71.746%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/common/netty/FrontendChannelInboundHandler.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLCommandExecutor.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLCommandExecutor.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/connection/ResourceSynchronizer.java | 2 | 8 | 25.0%\n | **Total:** | **5** | **14** | **35.71%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6874: |  0.02% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15145 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6888\n\n16 of 34 (47.06%)  changed or added relevant lines in 12 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.003%) to 71.726%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 1 | 2 | 50.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-bootstrap/src/main/java/org/apache/shardingsphere/shardingproxy/Bootstrap.java | 0 | 1 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 0 | 4 | 0.0%\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchemas.java | 0 | 4 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/routing/BatchRouteUnit.java | 0 | 5 | 0.0%\n | **Total:** | **16** | **34** | **47.06%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6885: |  0.003% |\n| Covered Lines: | 10860 |\n| Relevant Lines: | 15141 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6909\n\n1 of 10 (10.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.02%) to 71.785%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchemas.java | 1 | 10 | 10.0%\n | **Total:** | **1** | **10** | **10.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6908: |  -0.02% |\n| Covered Lines: | 10851 |\n| Relevant Lines: | 15116 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6916\n\n91 of 119 (76.47%)  changed or added relevant lines in 29 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 70.763%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dml/InsertFiller.java | 1 | 2 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/column/ColumnSegment.java | 2 | 3 | 66.67%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/CommonExpressionSegment.java | 6 | 7 | 85.71%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/EqualsValueExpressionSegment.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/FunctionExpressionSegment.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/PropertyExpressionSegment.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/SubquerySegment.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/context/condition/Condition.java | 7 | 8 | 87.5%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/EncryptColumnToken.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/SQLToken.java | 0 | 1 | 0.0%\n | **Total:** | **91** | **119** | **76.47%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java | 1 | 78.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6915: |  -0.03% |\n| Covered Lines: | 10865 |\n| Relevant Lines: | 15354 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6922\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\n6 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 71.076%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java | 6 | 84.21% |\n | **Total:** | **6** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6921: |  -0.04% |\n| Covered Lines: | 10773 |\n| Relevant Lines: | 15157 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6923\n\n7 of 8 (87.5%)  changed or added relevant lines in 3 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.004%) to 71.122%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/close/MySQLComStmtClosePacketExecutor.java | 0 | 1 | 0.0%\n | **Total:** | **7** | **8** | **87.5%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/close/MySQLComStmtClosePacketExecutor.java | 2 | 0.0% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6921: |  0.004% |\n| Covered Lines: | 10787 |\n| Relevant Lines: | 15167 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6935\n\n4 of 4 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.002%) to 71.042%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6934: |  0.002% |\n| Covered Lines: | 10782 |\n| Relevant Lines: | 15177 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6942\n\n4 of 4 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.008%) to 71.029%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6941: |  -0.008% |\n| Covered Lines: | 10778 |\n| Relevant Lines: | 15174 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6951\n\n488 of 544 (89.71%)  changed or added relevant lines in 30 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.6%) to 71.639%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/KeyGeneratorBeanDefinitionParser.java | 9 | 10 | 90.0%\n| sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/ShardingStrategyBeanDefinition.java | 25 | 26 | 96.15%\n| sharding-spring/sharding-transaction-spring/src/main/java/org/apache/shardingsphere/transaction/handler/JpaTransactionManagerHandler.java | 14 | 15 | 93.33%\n| sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java | 20 | 22 | 90.91%\n| sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/EncryptorBeanDefinitionParser.java | 14 | 16 | 87.5%\n| sharding-spring/sharding-transaction-spring/src/main/java/org/apache/shardingsphere/transaction/aspect/ShardingTransactionalAspect.java | 47 | 49 | 95.92%\n| sharding-spring/sharding-transaction-spring-boot-starter/src/main/java/org/apache/shardingsphere/transaction/spring/boot/ShardingTransactionConfiguration.java | 10 | 15 | 66.67%\n| sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java | 34 | 44 | 77.27%\n| sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/util/PropertyUtil.java | 21 | 37 | 56.76%\n| sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/util/PropertyUtil.java | 21 | 37 | 56.76%\n | **Total:** | **488** | **544** | **89.71%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6950: |  0.6% |\n| Covered Lines: | 11266 |\n| Relevant Lines: | 15726 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6957\n\n87 of 265 (32.83%)  changed or added relevant lines in 36 files are covered.\n44 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.7%) to 71.047%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java | 4 | 5 | 80.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SelectClauseFiller.java | 5 | 6 | 83.33%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/statement/impl/ShowParamFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/segment/impl/OrConditionFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/InsertFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/rule/registry/ParsingRuleRegistry.java | 33 | 34 | 97.06%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/SQLStatementFillerEngine.java | 5 | 7 | 71.43%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SelectItemFiller.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/ddl/CommonTableFiller.java | 0 | 3 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SubqueryFiller.java | 0 | 4 | 0.0%\n | **Total:** | **87** | **265** | **32.83%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/netty/FrontendChannelInboundHandler.java | 10 | 0.0% |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendEngine.java | 15 | 26.09% |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLFrontendEngine.java | 19 | 0.0% |\n | **Total:** | **44** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6956: |  -0.7% |\n| Covered Lines: | 11293 |\n| Relevant Lines: | 15895 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6965\n\n19 of 20 (95.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 71.75%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/ItemsToken.java | 0 | 1 | 0.0%\n | **Total:** | **19** | **20** | **95.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6963: |  0.02% |\n| Covered Lines: | 11274 |\n| Relevant Lines: | 15713 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6981\n\n1 of 2 (50.0%)  changed or added relevant lines in 2 files are covered.\n21 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.01%) to 71.11%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/command/CommandExecutorTask.java | 0 | 1 | 0.0%\n | **Total:** | **1** | **2** | **50.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 5 | 0.0% |\n| sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/PostgreSQLColumnDescription.java | 5 | 0.0% |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 11 | 88.89% |\n | **Total:** | **21** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6977: |  -0.01% |\n| Covered Lines: | 11305 |\n| Relevant Lines: | 15898 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6987\n\n11 of 28 (39.29%)  changed or added relevant lines in 7 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 71.119%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/dql/SubqueryExtractor.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptOrConditionFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/segment/impl/OrConditionFiller.java | 0 | 1 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/expression/ExpressionExtractor.java | 0 | 2 | 0.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java | 4 | 8 | 50.0%\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java | 0 | 8 | 0.0%\n | **Total:** | **11** | **28** | **39.29%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6986: |  0.01% |\n| Covered Lines: | 11308 |\n| Relevant Lines: | 15900 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6990\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n9 unchanged lines in 3 files lost coverage.\nOverall coverage increased (+0.09%) to 71.217%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java | 1 | 90.0% |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java | 1 | 0.0% |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCBackendDataSource.java | 7 | 64.0% |\n | **Total:** | **9** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6989: |  0.09% |\n| Covered Lines: | 11315 |\n| Relevant Lines: | 15888 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 6994\n\n4 of 4 (100.0%)  changed or added relevant lines in 1 file are covered.\n8 unchanged lines in 2 files lost coverage.\nOverall coverage increased (+0.05%) to 71.221%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java | 2 | 90.0% |\n| sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java | 6 | 0.0% |\n | **Total:** | **8** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6991: |  0.05% |\n| Covered Lines: | 11317 |\n| Relevant Lines: | 15890 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7015\n\n4 of 4 (100.0%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.119%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7013: |  0.0% |\n| Covered Lines: | 11298 |\n| Relevant Lines: | 15886 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7025\n\n8 of 9 (88.89%)  changed or added relevant lines in 2 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.006%) to 71.14%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/segment/impl/OrConditionFiller.java | 7 | 8 | 87.5%\n | **Total:** | **8** | **9** | **88.89%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7024: |  0.006% |\n| Covered Lines: | 11307 |\n| Relevant Lines: | 15894 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7018\n\n3 of 3 (100.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 71.134%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7017: |  0.01% |\n| Covered Lines: | 11301 |\n| Relevant Lines: | 15887 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7026\n\n2 of 2 (100.0%)  changed or added relevant lines in 1 file are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.0008%) to 71.134%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/close/MySQLComStmtCloseExecutor.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7024: |  0.0008% |\n| Covered Lines: | 11299 |\n| Relevant Lines: | 15884 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7083\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n249 unchanged lines in 19 files lost coverage.\nOverall coverage increased (+0.6%) to 71.252%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/sharding/query/QueryOptimizeEngine.java | 1 | 95.74% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/dml/insert/AbstractInsertParser.java | 1 | 90.91% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptDefaultOptimizeEngine.java | 1 | 0.0% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/dml/insert/InsertStatement.java | 2 | 75.0% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertValuesClauseParser.java | 2 | 96.3% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java | 3 | 87.74% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 4 | 89.91% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/OptimizeEngineFactory.java | 4 | 37.5% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 6 | 20.0% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 9 | 85.19% |\n | **Total:** | **249** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7062: |  0.6% |\n| Covered Lines: | 11188 |\n| Relevant Lines: | 15702 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7080\n\n122 of 167 (73.05%)  changed or added relevant lines in 26 files are covered.\n8 unchanged lines in 6 files lost coverage.\nOverall coverage increased (+0.2%) to 71.252%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptDefaultOptimizeEngine.java | 0 | 1 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 2 | 3 | 66.67%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 18 | 19 | 94.74%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptInsertFiller.java | 0 | 2 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/dml/insert/InsertStatement.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java | 0 | 2 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 0 | 3 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 2 | 5 | 40.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/InsertFiller.java | 1 | 9 | 11.11%\n | **Total:** | **122** | **167** | **73.05%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/EncryptSQLRewriteEngine.java | 1 | 0.0% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 1 | 0.0% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java | 1 | 0.0% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 1 | 0.0% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/InsertFiller.java | 2 | 8.22% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 2 | 89.47% |\n | **Total:** | **8** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7079: |  0.2% |\n| Covered Lines: | 11188 |\n| Relevant Lines: | 15702 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7086\n\n123 of 171 (71.93%)  changed or added relevant lines in 29 files are covered.\n255 unchanged lines in 17 files lost coverage.\nOverall coverage remained the same at 71.252%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptDefaultOptimizeEngine.java | 0 | 1 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 2 | 3 | 66.67%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 18 | 19 | 94.74%\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/MySQLCommandExecutorFactory.java | 0 | 1 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptInsertFiller.java | 0 | 2 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/dml/insert/InsertStatement.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java | 0 | 2 | 0.0%\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/execute/MySQLComStmtExecuteExecutor.java | 0 | 2 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java | 0 | 3 | 0.0%\n | **Total:** | **123** | **171** | **71.93%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/sharding/query/QueryOptimizeEngine.java | 1 | 95.74% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/dml/insert/AbstractInsertParser.java | 1 | 90.91% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/InsertValuesClauseParser.java | 2 | 96.3% |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java | 3 | 87.74% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java | 4 | 89.91% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/OptimizeEngineFactory.java | 4 | 37.5% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java | 9 | 85.19% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java | 9 | 73.49% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java | 10 | 81.71% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 12 | 0.0% |\n | **Total:** | **255** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7085: |  0.0% |\n| Covered Lines: | 11188 |\n| Relevant Lines: | 15702 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7088\n\n37 of 58 (63.79%)  changed or added relevant lines in 7 files are covered.\n3 unchanged lines in 3 files lost coverage.\nOverall coverage decreased (-0.01%) to 71.241%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/ShardingEncryptorEngine.java | 0 | 3 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 1 | 4 | 25.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java | 9 | 15 | 60.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 0 | 9 | 0.0%\n | **Total:** | **37** | **58** | **63.79%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/ShardingEncryptorEngine.java | 1 | 28.57% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/sharding/insert/InsertOptimizeEngine.java | 1 | 98.48% |\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/routing/type/standard/StandardRoutingEngine.java | 1 | 65.52% |\n | **Total:** | **3** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7085: |  -0.01% |\n| Covered Lines: | 11187 |\n| Relevant Lines: | 15703 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7102\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 71.217%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7101: |  0.0% |\n| Covered Lines: | 11191 |\n| Relevant Lines: | 15714 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7105\n\n46 of 46 (100.0%)  changed or added relevant lines in 8 files are covered.\n127 unchanged lines in 30 files lost coverage.\nOverall coverage decreased (-0.9%) to 73.68%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dml/insert/InsertParserFactory.java | 1 | 66.67% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dml/delete/DeleteParserFactory.java | 1 | 66.67% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLInsertSetClauseParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dml/update/UpdateParserFactory.java | 1 | 66.67% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/LexerEngine.java | 1 | 86.89% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/SelectParserFactory.java | 1 | 66.67% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/ExpressionParserFactory.java | 1 | 75.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLSelectListClauseParser.java | 1 | 0.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/dialect/h2/H2Lexer.java | 1 | 80.0% |\n| sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLOrderByClauseParser.java | 1 | 0.0% |\n | **Total:** | **127** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 6840: |  -0.9% |\n| Covered Lines: | 9823 |\n| Relevant Lines: | 13332 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7121\n\n5 of 38 (13.16%)  changed or added relevant lines in 9 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage decreased (-0.09%) to 69.975%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-parser/sharding-core-parser-common/src/main/java/org/apache/shardingsphere/core/parsing/antlr/rule/registry/ParsingRuleRegistry.java | 3 | 4 | 75.0%\n| sharding-core/sharding-core-parser/sharding-core-parser-common/src/main/java/org/apache/shardingsphere/core/parsing/parser/sql/SQLParserFactory.java | 0 | 1 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java | 0 | 1 | 0.0%\n| sharding-core/sharding-core-parser/sharding-core-parser-common/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/SQLStatementFillerEngine.java | 0 | 2 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 0 | 3 | 0.0%\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java | 0 | 5 | 0.0%\n| sharding-core/sharding-core-parser/sharding-core-parser-common/src/main/java/org/apache/shardingsphere/core/parsing/antlr/rule/registry/EncryptParsingRuleRegistry.java | 0 | 6 | 0.0%\n| sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/rewrite/EncryptSQLRewriteEngine.java | 0 | 14 | 0.0%\n | **Total:** | **5** | **38** | **13.16%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-parser/sharding-core-parser-common/src/main/java/org/apache/shardingsphere/core/parsing/antlr/rule/registry/EncryptParsingRuleRegistry.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7120: |  -0.09% |\n| Covered Lines: | 11014 |\n| Relevant Lines: | 15740 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7137\n\n1 of 1 (100.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.003%) to 52.025%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7136: |  0.003% |\n| Covered Lines: | 8194 |\n| Relevant Lines: | 15750 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7150\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 20.132%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7149: |  0.0% |\n| Covered Lines: | 8187 |\n| Relevant Lines: | 40667 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7152\n\n0 of 1 (0.0%)  changed or added relevant line in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 20.107%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/command/CommandExecutorTask.java | 0 | 1 | 0.0%\n | **Total:** | **0** | **1** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7151: |  0.0% |\n| Covered Lines: | 8188 |\n| Relevant Lines: | 40722 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7208\n\n0 of 7 (0.0%)  changed or added relevant lines in 2 files are covered.\n1 unchanged line in 1 file lost coverage.\nOverall coverage increased (+0.02%) to 51.908%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dql/item/FunctionSelectItemSegmentExtractor.java | 0 | 3 | 0.0%\n| sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/common/segment/impl/dql/SelectItemFiller.java | 0 | 4 | 0.0%\n | **Total:** | **0** | **7** | **0.0%** | \n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dql/item/FunctionSelectItemSegmentExtractor.java | 1 | 0.0% |\n | **Total:** | **1** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7206: |  0.02% |\n| Covered Lines: | 8176 |\n| Relevant Lines: | 15751 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7170\n\n0 of 9 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage decreased (-0.001%) to 20.069%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java | 0 | 9 | 0.0%\n | **Total:** | **0** | **9** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7169: |  -0.001% |\n| Covered Lines: | 8170 |\n| Relevant Lines: | 40709 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7194\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 73.68%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7108: |  0.0% |\n| Covered Lines: | 9823 |\n| Relevant Lines: | 13332 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7198\n\n0 of 2 (0.0%)  changed or added relevant lines in 1 file are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.02%) to 51.888%\n\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/encrypt/segment/impl/EncryptInsertFiller.java | 0 | 2 | 0.0%\n | **Total:** | **0** | **2** | **0.0%** | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7193: |  0.02% |\n| Covered Lines: | 8176 |\n| Relevant Lines: | 15757 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7202\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 51.888%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7201: |  0.0% |\n| Covered Lines: | 8176 |\n| Relevant Lines: | 15757 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 7203\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 51.888%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 7201: |  0.0% |\n| Covered Lines: | 8176 |\n| Relevant Lines: | 15757 |\n\n\ud83d\udc9b  - Coveralls\n. ",
    "jiang2015": "\u5efa\u8bae\u4ee3\u7801\u683c\u5f0f\u5316\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4e0d\u662f\u592a\u7d2f\u3002\n. @terrymanu \n. \u8fd9\u4e2a\u95ee\u9898\u6709\u597d\u7684\u89e3\u51b3\u65b9\u6848\u6216\u8005\u601d\u8def\u4e86\u5417\n. ",
    "huangyiminghappy": "\u529f\u80fd\u5f88\u68d2\uff0c\u4f46\u662f\u597d\u50cf\u4f8b\u5b50\u4e0d\u591f\u5b8c\u6574. ",
    "dzxiang": "\u5927\u5bb6\u90fd\u6ca1\u6709\u78b0\u5230\u8fc7\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\n. \u5728\uff1acom.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter\u4e2d\u4e34\u65f6\u6253\u4e86\u4e00\u4e2a\u5c0f\u8865\u4e01\uff1a\n    private void setParameter(final int index, final Object x) throws SQLException {\n        int extendedSize = index - parameters.size();\n        if (extendedSize > 1) {\n            while (--extendedSize > 0) {\n                parameters.add(null);\n            }\n        }\n        if(x instanceof java.io.StringReader){\n            Reader reader = (Reader)x;\n            BufferedReader r = null;\n            StringBuilder b = new StringBuilder();\n            String line;\n            try {\n                r = new BufferedReader(reader);\n                boolean first = true;\n                String ls = System.getProperty(\"line.separator\");\n                while((line=r.readLine())!=null) {\n                    if(first) first = false;\n                    else b.append(ls);\n                    b.append(line);\n                }\nString y = b.toString();\n            parameters.add(index - 1,y);\n        } catch (IOException e) {\n            e.printStackTrace();\n            throw new SQLException(e);\n        } finally{\n            if(r!=null){\n                try {\n                    r.close();\n                } catch (IOException e) {}\n            }\n        }\n    }\n    else{\n        parameters.add(index - 1, x);   \n    }\n}\n. \u6211\u7528\u7684\u662fV1.2.0\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u8ddf#71\u53f7BUG\u6709\u5173\uff0c\u6211\u4ee5\u4e3aSJ\u5c06\u5206\u9875\u7684\u6570\u636e\u504f\u79fb\u91cf\u6539\u4e3a0\uff0c\u9700\u8981\u81ea\u5df1\u5728\u4e1a\u52a1\u5c42\u9762\u5206\u9875\u3002\n. \u6211\u4e5f\u78b0\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u5076\u5c14\u4f1a\u51fa\u73b0\uff0c\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u53c8\u6ca1\u95ee\u9898\u3002. ### The error occurred while setting parameters\nSQL: select ID, TP_ID from t_member WHERE (  APP_ID = ?   and GROUP_ID = ? )  limit ?,?\nCause: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\nat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:122)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:113)\nat sun.reflect.GeneratedMethodAccessor333.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:497)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:386)\n... 24 common frames omitted\n\nCaused by: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\n    at java.util.ArrayList.rangeCheck(ArrayList.java:653)\n    at java.util.ArrayList.get(ArrayList.java:429)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.util.ParameterList.set(ParameterList.java:82)\n    at com.dangdang.ddframe.rdb.sharding.parser.result.merger.Limit.replaceParameters(Limit.java:71)\n    at com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(SQLRouteEngine.java:105)\n    at com.dangdang.ddframe.rdb.sharding.router.PreparedSQLRouter.route(PreparedSQLRouter.java:56)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeSQL(ShardingPreparedStatement.java:162)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:112)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:62)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:78)\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:303)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:154)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:134)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:120)\n    ... 29 common frames omitted\n=========\nsjdbc-1.3.3+mybatis+springmvc\u51fa\u73b0\u8fd9\u4e2a\u5f02\u5e38\uff0c\u4e0d\u662f\u6bcf\u6b21\u90fd\u80fd\u91cd\u73b0\u3002\n\u7528sjdbc-1.3.2\u7684\u65f6\u5019\u6ca1\u6709\u51fa\u8fc7\u8fd9\u4e2a\u5f02\u5e38\uff0csjdbc-1.4.0\u548csjdbc-1.3.3\u5747\u51fa\u73b0\u3002. @ben1247 \uff0c\u53ef\u4ee5\u786e\u4fe1\u8fd9\u662f\u4e00\u4e2aBUG,\u80fd\u5426\u63d0\u4ea4\u4e00\u4e2aDEBUG\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u6211\u8fd9\u8fb9\u672c\u5730\u6d4b\u8bd5\u6ca1\u51fa\u73b0\u8fc7\uff0c\u751f\u4ea7\u73af\u5883\u6709\u51fa\u73b0\uff0c\u4f46\u4fee\u6539\u65e5\u5fd7\u7ea7\u522b\u8981\u7b49\u4e0b\u4e00\u6b21\u66f4\u65b0\u3002. \u5317\u4eac\u771f\u4fe1\u8ba4\u77e5\u79d1\u6280\u6709\u9650\u516c\u53f8  http://www.zhenxinsafe.com/. ",
    "hzlzz": "\u6211\u4e5f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898 \u8bf7\u95ee\u6709\u89e3\u51b3\u65b9\u6848\u5417\n. \u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u4e0d\u52a0\u4e8b\u7269\u7684\u65f6\u5019\u80fd\u6b63\u5e38\u62ff\u5230\u5bf9\u5e94\u7684ds,\u52a0\u5165\u4e8b\u7269\u540e\u6309\u7b2c\u4e00\u6761sql\u6761\u4ef6\u53d6ds,\u4ee3\u7801\u5982\u4e0b\n   @Transactional\n    public Integer updateStatus(Integer orderId) {\n        Order order = orderMapper.selectByOrderId(orderId);\n        order.setStatus(\"UPDATE\");\n        return orderMapper.updateByPrimaryKeySelective(order);\n    }\n\u4e0d\u52a0\u4e8b\u7269\u7684\u65f6\u5019\u80fd\u66f4\u65b0\u4e3b\u5e93\u8bb0\u5f55\uff0c\u52a0\u4e0a\u4e8b\u7269\u540e\u53ea\u6709\u4ece\u5e93\u8bb0\u5f55\u88ab\u66f4\u65b0\n. ",
    "billForgithub": "\u6211\u4e5f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\n. ",
    "duran-zhu": "\u4fee\u590d\u8fd9\u4e2abug\u7684\u4ee3\u7801\u4f1a\u5bfc\u81f4\u4f7f\u7528mybatis\u81ea\u589eid\u51fa\u9519\u3002\n\u5728insert\u8bed\u53e5\u540e\uff0c\u6267\u884cselect last_insert_id() from dual\u51fa\u73b0\u7a7a\u6307\u9488\u95ee\u9898\u3002\n. ",
    "shuohao": "\u6211\u4e5f\u9047\u5230\u4e86 \u8bf7\u95ee\u8fd9\u4e2a\u73b0\u5728\u5982\u4f55\u89e3\u51b3\u554a. \u5bf9 jdbctype\u4e3alongvarchar\u5c31\u4f1a\u62a5\u8fd9\u4e2a\u9519. ",
    "familyYuAndBo": "3.0\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c#{reqMsg,jdbcType=LONGVARCHAR}\n\u5982\u679c\u662f\u975e\u57fa\u7840\u7c7b\u578b\uff0cmysql\u7684jdbc\u9a71\u52a8\u8c03\u7528\u4e86\ncom.mysql.cj.AbstractQueryBindings#setObject\ncom.mysql.cj.AbstractQueryBindings#setSerializableObject\nstringReader\u4e0d\u80fd\u5e8f\u5217\u5316\uff0c\u629b\u51fa\u5f02\u5e38\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: Invalid argument value: java.io.NotSerializableException. ",
    "shenmimoon": "\n3.0\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c#{reqMsg,jdbcType=LONGVARCHAR}\n\u5982\u679c\u662f\u975e\u57fa\u7840\u7c7b\u578b\uff0cmysql\u7684jdbc\u9a71\u52a8\u8c03\u7528\u4e86\ncom.mysql.cj.AbstractQueryBindings#setObject\ncom.mysql.cj.AbstractQueryBindings#setSerializableObject\nstringReader\u4e0d\u80fd\u5e8f\u5217\u5316\uff0c\u629b\u51fa\u5f02\u5e38\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: Invalid argument value: java.io.NotSerializableException\n\n+1. ",
    "koaal": "\u662f\u6211\u6d4b\u8bd5\u4ee3\u7801\u7684\u95ee\u9898\uff0cFutures.get()\u786e\u5b9e\u4e3a\u963b\u585e\uff0c\u4e0d\u5b58\u5728\u4e0a\u8ff0\u95ee\u9898\u3002\n. \u7248\u672c1.1.0\n. ",
    "fw2003": "\u8bf7\u95ee\u8fd9\u4e2aBUG\u57281.4.1\u4e0a\u4fee\u590d\u4e86\u4e48. \u8fd9\u4e2a\u95ee\u9898\u5728\u4e8eExecutorEngine\u4e2d\u6240\u4f7f\u7528\u7684\u7ebf\u7a0b\u6c60\u91c7\u7528\u7684\u662f\u9ed8\u8ba4\u7684\u4efb\u52a1\u62d2\u7edd\u7b56\u7565\uff0c\u89e6\u53d1\u540e\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u5efa\u8bae\u53ef\u4ee5\u8ba9\u7528\u6237\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u7ebf\u7a0b\u6c60\u6216\u8005\u6307\u5b9a\u4e3aCallerRunsPolicy\npublic ExecutorEngine(final ShardingProperties shardingProperties) {\n        int executorMinIdleSize = shardingProperties.getValue(ShardingPropertiesConstant.EXECUTOR_MIN_IDLE_SIZE);\n        int executorMaxSize = shardingProperties.getValue(ShardingPropertiesConstant.EXECUTOR_MAX_SIZE);\n        long executorMaxIdleTimeoutMilliseconds = shardingProperties.getValue(ShardingPropertiesConstant.EXECUTOR_MAX_IDLE_TIMEOUT_MILLISECONDS);\n        executorService = MoreExecutors.listeningDecorator(MoreExecutors.getExitingExecutorService(\n                new ThreadPoolExecutor(executorMinIdleSize, executorMaxSize, executorMaxIdleTimeoutMilliseconds, TimeUnit.MILLISECONDS, new SynchronousQueue())));\n    }. ",
    "Ericj100": "```\n\n\n\n<tx:annotation-driven transaction-manager=\"transactionManager\" />\n\n```\n\u5c11\u914d\u7f6e\u4e86\u4e8b\u52a1\u7ba1\u7406\u5bfc\u81f4\u7684\n. ",
    "coderew": "\u6211\u4e5f\u9047\u5230\u4e86\u76f8\u540c\u7684\u9519\u8bef\uff0c\u8bf7\u95ee\u5982\u4f55\u89e3\u51b3. ",
    "duomu": "\u6211\u4e5f\u9047\u5230\u540c\u6837\u7684\u95ee\u9898\u4e86\uff0c\u6c42\u95ee\u600e\u4e48\u89e3\u51b3\uff1f\n\u76f4\u63a5\u6d4f\u89c8\u5668\u8bbf\u95eehttp://www.dangdang.com/schema/ddframe/rdb/rdb.xsd\uff0c\u8df3\u5230\u5f53\u5f53\u7f51\u53bb\u4e86\uff0c\u6839\u672c\u6ca1\u6709xsd\u6587\u4ef6. \u6c42\u95ee\u600e\u4e48\u81ea\u5df1\u914d\u7f6e\u547d\u540d\u7a7a\u95f4\uff1f\u96be\u9053\u662f\u81ea\u5df1\u628axsd\u53d1\u5e03\u5230\u7f51\u4e0a\uff0c\u7136\u540e\u518d\u914d\u6210\u65b0\u7684\u5730\u5740\uff1f. \u6dfb\u52a0\u4e86\u8fd8\u662f\u62a5\u9519\u5440. ",
    "ivanhuang0757": "hello\uff0cI try to use sharding-jdbc1.3.0 to oralce11g,but it throw a exception.Is it support other database??can u tell m how to resolve this exception?\nException in thread \"main\" java.lang.ClassCastException: com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor cannot be cast to com.alibaba.druid.sql.dialect.oracle.visitor.OracleASTVisitor\n    at com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleSelect.accept0(OracleSelect.java:58)\n    at com.alibaba.druid.sql.ast.SQLObjectImpl.accept(SQLObjectImpl.java:40)\n    at com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLASTOutputVisitor.java:770)\n    at com.alibaba.druid.sql.ast.statement.SQLSelectStatement.accept0(SQLSelectStatement.java:58)\n    at com.alibaba.druid.sql.ast.SQLObjectImpl.accept(SQLObjectImpl.java:40)\n    at com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine.parse(SQLParseEngine.java:66)\n    at com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.parseSQL(SQLRouteEngine.java:72)\n    at com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.route(SQLRouteEngine.java:67)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeSQL(ShardingPreparedStatement.java:165)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeIfNeed(ShardingPreparedStatement.java:160)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.getRoutedPreparedStatements(ShardingPreparedStatement.java:140)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:95)\n    at com.dangdang.ddframe.rdb.sharding.example.jdbc.Main.printSimpleSelect(Main.java:60)\n    at com.dangdang.ddframe.rdb.sharding.example.jdbc.Main.main(Main.java:46)\n. ",
    "Cjie2000": "\nOnly support MySQL\n. ",
    "chenhz2284": "ModuloTableShardingAlgorithm.java.txt\nModuloDatabaseShardingAlgorithm.java.txt\nMain.java.txt\n. \n\u62a5\u9519\u4fe1\u606f\u5982\u56fe\n. Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n    at java.util.ArrayList.rangeCheck(ArrayList.java:635)\n    at java.util.ArrayList.get(ArrayList.java:411)\n    at java.util.Collections$UnmodifiableList.get(Collections.java:1211)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.AbstractShardingResultSet.(AbstractShardingResultSet.java:46)\n    at com.dangdang.ddframe.rdb.sharding.merger.iterator.IteratorResultSet.(IteratorResultSet.java:35)\n    at com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.getResultSet(ResultSetFactory.java:66)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeQuery(ShardingStatement.java:99)\n    at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:452)\n    at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:402)\n    at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:468)\n    at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:478)\n    at org.springframework.jdbc.core.JdbcTemplate.queryForList(JdbcTemplate.java:518)\n    at test.Main.main(Main.java:156)\n. bm\u51fa\u9519\u7684\u7248\u672c\u662f1.1.0\n. ",
    "jinfei21": "\u62a5\u9519\u7684\u4fe1\u606f\u53ef\u4e0d\u53ef\u8d34\u51fa\u6765\u4e00\u4e0b\u3002\n. ",
    "xuchanggen": "\n. \n. TableRule.builder(\"t_user\").actualTables(Arrays.asList(\"t_user_0\", \"t_user_1\", \"t_user_2\"));\u5b9e\u9645\u6709\u4e09\u5f20\u8868\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u90fd\u5f80t_user_1\u8868\u4e2d\u5199\u4e86\u3002getShardingDataSource()\u6362\u6210\u539f\u751f\u7684\uff0c\u6570\u636e\u4e0d\u4f1a\u76f8\u540c\u3002\nps = conn.prepareStatement(sql);\u653e\u5165for\u5faa\u73af\u4e2d\u6b63\u5e38\uff0c\u4f1a\u6b63\u5e38\u5f80\u4e09\u5f20\u8868\u91cc\u9762\u5199\uff01\n. \n\u671f\u671b\u80fd\u591f\u652f\u6301\u8fd9\u4e2aSELECT @@IDENTITY\n. \u8c22\u8c22\uff01 @hanahmily \n. ",
    "deeplyloving": "@hanahmily     \u91cd\u73b0\u95ee\u9898\u5f88\u7b80\u5355\u3002\u53ea\u8981\u505a \u5206\u5e93 \u5206\u8868\u3002 \u7528 \u5b9e\u4f53\u8868 \u5173\u8054\u67e5\u8be2 \u865a\u62df\u8868\u3002\nsjdbc\u4e0d\u652f\u6301\u8de8\u6570\u636e\u5e93\u7684join?  \u865a\u62df\u8868\u4e4b\u95f4\u7684 join \u662f\u5426\u8de8\u5e93\uff1f\n. ",
    "yangl": "@haocao  3Q,\u5df2\u5173\u95ed\uff01\u6211\u7684\u9519\n. @haocao  \u8fd8\u54a8\u8be2\u4e00\u4e0b\uff0c\u60f3\u6309uid\u6700\u540e\u7b2c\u4e09\u4f4d\u6765\u5206\u5e93\uff0c\u8868\u8fbe\u5f0f\u600e\u4e48\u5199\u5462\uff1f\nds_${user_id.longValue() % 1000 / 100}\n\u8fd9\u6837\u5b50\u4e0d\u652f\u6301\u5462\uff01\n. das_${(uid.longValue() % 1000).intdiv(100)}\n\u539f\u6765\u662f\u8fd9\u6837\u5b50\u54c8\n. \u8865\u5145\u4e00\u4e0btrace\uff1a\n[2016-07-04 09:53:12.229] [INFO] [main] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [328] Bean '(inner bean)#68dd39d2' of type [class java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n[2016-07-04 09:53:12.241] [INFO] [main] [o.s.s.c.ThreadPoolTaskExecutor] [165] Initializing ExecutorService \n[2016-07-04 09:53:12.241] [INFO] [main] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [328] Bean 'taskExecutor' of type [class org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n[2016-07-04 09:53:12.242] [INFO] [main] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] [328] Bean 'taskExecutor' of type [class org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n[2016-07-04 09:53:14.219] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-1 - Started.\n[2016-07-04 09:53:15.620] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-2 - Started.\n[2016-07-04 09:53:17.148] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-3 - Started.\n[2016-07-04 09:53:17.999] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-4 - Started.\n[2016-07-04 09:53:18.953] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-5 - Started.\n[2016-07-04 09:53:19.838] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-6 - Started.\n[2016-07-04 09:53:20.847] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-7 - Started.\n[2016-07-04 09:53:21.721] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-8 - Started.\n[2016-07-04 09:53:22.566] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-9 - Started.\n[2016-07-04 09:53:23.478] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-10 - Started.\n[2016-07-04 09:53:24.758] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-11 - Started.\n[2016-07-04 09:53:25.578] [INFO] [main] [c.z.h.HikariDataSource] [93] HikariPool-12 - Started.\n[2016-07-04 09:53:27.247] [INFO] [main] [c.c.c.c.CouchbaseCore] [115] CouchbaseEnvironment: {sslEnabled=false, sslKeystoreFile='null', sslKeystorePassword=false, sslKeystore=null, bootstrapHttpEnabled=true, bootstrapCarrierEnabled=true, bootstrapHttpDirectPort=8091, bootstrapHttpSslPort=18091, bootstrapCarrierDirectPort=11210, bootstrapCarrierSslPort=11207, ioPoolSize=4, computationPoolSize=4, responseBufferSize=16384, requestBufferSize=16384, kvServiceEndpoints=1, viewServiceEndpoints=1, queryServiceEndpoints=1, searchServiceEndpoints=1, ioPool=NioEventLoopGroup, coreScheduler=CoreScheduler, eventBus=DefaultEventBus, packageNameAndVersion=couchbase-java-client/2.3.0 (git: 2.3.0, core: 1.3.0), dcpEnabled=false, retryStrategy=BestEffort, maxRequestLifetime=75000, retryDelay=ExponentialDelay{growBy 1.0 MICROSECONDS, powers of 2; lower=100, upper=100000}, reconnectDelay=ExponentialDelay{growBy 1.0 MILLISECONDS, powers of 2; lower=32, upper=4096}, observeIntervalDelay=ExponentialDelay{growBy 1.0 MICROSECONDS, powers of 2; lower=10, upper=100000}, keepAliveInterval=30000, autoreleaseAfter=2000, bufferPoolingEnabled=true, tcpNodelayEnabled=true, mutationTokensEnabled=false, socketConnectTimeout=1000, dcpConnectionBufferSize=20971520, dcpConnectionBufferAckThreshold=0.2, dcpConnectionName=dcp/core-io, callbacksOnIoPool=false, disconnectTimeout=25000, requestBufferWaitStrategy=com.couchbase.client.deps.com.lmax.disruptor.BlockingWaitStrategy@443af394, queryTimeout=75000, viewTimeout=75000, kvTimeout=2500, connectTimeout=5000, dnsSrvEnabled=false}\n[2016-07-04 09:53:28.188] [INFO] [cb-io-1-1] [c.c.c.c.n.Node] [115] Connected to Node 113.31.82.188\n[2016-07-04 09:53:28.954] [INFO] [cb-computations-1] [c.c.c.c.c.ConfigurationProvider] [115] Opened bucket ywz_das_cache\n[2016-07-04 09:53:29.073] [WARN] [main] [c.c.c.c.e.CoreEnvironment] [145] More than 1 Couchbase Environments found (2), this can have severe impact on performance and stability. Reuse environments!\n[2016-07-04 09:53:29.078] [INFO] [main] [c.c.c.c.CouchbaseCore] [115] CouchbaseEnvironment: {sslEnabled=false, sslKeystoreFile='null', sslKeystorePassword=false, sslKeystore=null, bootstrapHttpEnabled=true, bootstrapCarrierEnabled=true, bootstrapHttpDirectPort=8091, bootstrapHttpSslPort=18091, bootstrapCarrierDirectPort=11210, bootstrapCarrierSslPort=11207, ioPoolSize=4, computationPoolSize=4, responseBufferSize=16384, requestBufferSize=16384, kvServiceEndpoints=1, viewServiceEndpoints=1, queryServiceEndpoints=1, searchServiceEndpoints=1, ioPool=NioEventLoopGroup, coreScheduler=CoreScheduler, eventBus=DefaultEventBus, packageNameAndVersion=couchbase-java-client/2.3.0 (git: 2.3.0, core: 1.3.0), dcpEnabled=false, retryStrategy=BestEffort, maxRequestLifetime=75000, retryDelay=ExponentialDelay{growBy 1.0 MICROSECONDS, powers of 2; lower=100, upper=100000}, reconnectDelay=ExponentialDelay{growBy 1.0 MILLISECONDS, powers of 2; lower=32, upper=4096}, observeIntervalDelay=ExponentialDelay{growBy 1.0 MICROSECONDS, powers of 2; lower=10, upper=100000}, keepAliveInterval=30000, autoreleaseAfter=2000, bufferPoolingEnabled=true, tcpNodelayEnabled=true, mutationTokensEnabled=false, socketConnectTimeout=1000, dcpConnectionBufferSize=20971520, dcpConnectionBufferAckThreshold=0.2, dcpConnectionName=dcp/core-io, callbacksOnIoPool=false, disconnectTimeout=25000, requestBufferWaitStrategy=com.couchbase.client.deps.com.lmax.disruptor.BlockingWaitStrategy@6210666c, queryTimeout=75000, viewTimeout=75000, kvTimeout=2500, connectTimeout=5000, dnsSrvEnabled=false}\n[2016-07-04 09:53:29.316] [INFO] [cb-io-5-1] [c.c.c.c.n.Node] [115] Connected to Node 113.31.82.188\n[2016-07-04 09:53:29.383] [INFO] [cb-computations-5] [c.c.c.c.c.ConfigurationProvider] [115] Opened bucket ywz_bc_use\n[2016-07-04 09:53:30.227] [DEBUG] [main] [c.u.d.p.m.b.B.insertLog] [139] ==>  Preparing: INSERT IGNORE INTO balance_log ( appkey, uid, u_accural, business_id, base_accural, type, trade_time, create_time, ucash_value ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) \n[2016-07-04 09:53:30.262] [DEBUG] [main] [c.u.d.p.m.b.B.insertLog] [139] ==> Parameters: key(String), 123457181(String), 2000(Long), migratetoU-1467597210097(String), 0(Long), 0(Integer), 2016-07-04 09:53:30.174(Timestamp), 2016-07-04 09:53:30.174(Timestamp), 0(BigDecimal)\n[2016-07-04 09:53:30.278] [DEBUG] [main] [c.d.d.r.s.p.SQLParserFactory] [63] Logic SQL: INSERT IGNORE INTO balance_log (\n        appkey,\n        uid,\n        u_accural,\n        business_id,\n        base_accural,\n        type,\n        trade_time,\n        create_time,\n        ucash_value\n        )\n        VALUES\n        (\n        ?,\n        ?,\n        ?,\n        ?,\n        ?,\n        ?,\n        ?,\n        ?,\n        ?\n        )\n[2016-07-04 09:53:30.365] [TRACE] [main] [c.d.d.r.s.p.SQLParserFactory] [65] Get com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlInsertStatement SQL Statement\n[2016-07-04 09:53:31.592] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1 visit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlInsertStatement\n[2016-07-04 09:53:31.593] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1 visit argument: INSERT IGNORE INTO balance_log (appkey, uid, u_accural, business_id, base_accural\n    , type, trade_time, create_time, ucash_value)\nVALUES (?, ?, ?, ?, ?\n    , ?, ?, ?, ?)\n[2016-07-04 09:53:31.781] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.785] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: appkey\n[2016-07-04 09:53:31.786] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.790] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.792] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.793] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey\n[2016-07-04 09:53:31.794] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.795] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: uid\n[2016-07-04 09:53:31.795] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.795] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.796] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.796] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid\n[2016-07-04 09:53:31.797] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.798] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: u_accural\n[2016-07-04 09:53:31.800] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.801] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.802] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.802] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural\n[2016-07-04 09:53:31.803] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.804] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: business_id\n[2016-07-04 09:53:31.804] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.817] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.818] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.821] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id\n[2016-07-04 09:53:31.823] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.825] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: base_accural\n[2016-07-04 09:53:31.827] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.828] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.831] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.832] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id, base_accural\n[2016-07-04 09:53:31.836] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.838] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: type\n[2016-07-04 09:53:31.839] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.839] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.840] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.841] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id, base_accural , type\n[2016-07-04 09:53:31.842] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.844] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: trade_time\n[2016-07-04 09:53:31.845] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.847] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.851] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.852] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id, base_accural , type, trade_time\n[2016-07-04 09:53:31.853] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.854] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: create_time\n[2016-07-04 09:53:31.855] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.856] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.869] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.869] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id, base_accural , type, trade_time, create_time\n[2016-07-04 09:53:31.870] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.870] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument: ucash_value\n[2016-07-04 09:53:31.873] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[2016-07-04 09:53:31.875] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.876] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.877] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO [Token(balance_log)] (appkey, uid, u_accural, business_id, base_accural , type, trade_time, create_time, ucash_value\n[2016-07-04 09:53:31.932] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [75]   1   2 visit node: class com.alibaba.druid.sql.ast.statement.SQLInsertStatement$ValuesClause\n[2016-07-04 09:53:31.952] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [76]   1   2 visit argument:  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n[2016-07-04 09:53:31.956] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLInsertStatement$ValuesClause\n[2016-07-04 09:53:31.957] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.958] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1   2 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.958] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1   2 endVisit SQL: INSERT IGNORE INTO Token(balance_log) VALUES (?, ?, ?, ?, ? , ?, ?, ?, ?)\n[2016-07-04 09:53:31.959] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [81]   1 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlInsertStatement\n[2016-07-04 09:53:31.960] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [82]   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.960] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [83]   1 endVisit condition: ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})\n[2016-07-04 09:53:31.961] [TRACE] [main] [c.d.d.r.s.p.v.VisitorLogProxy] [84]   1 endVisit SQL: INSERT IGNORE INTO Token(balance_log) VALUES (?, ?, ?, ?, ? , ?, ?, ?, ?)\n[2016-07-04 09:53:31.962] [DEBUG] [main] [c.d.d.r.s.p.SQLParseEngine] [74] Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=balance_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[ConditionContext(conditions={Condition.Column(columnName=uid, tableName=balance_log)=Condition(column=Condition.Column(columnName=uid, tableName=balance_log), operator==, values=[123457181]), Condition.Column(columnName=trade_time, tableName=balance_log)=Condition(column=Condition.Column(columnName=trade_time, tableName=balance_log), operator==, values=[2016-07-04 09:53:30.174])})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\n[2016-07-04 09:53:31.963] [DEBUG] [main] [c.d.d.r.s.p.SQLParseEngine] [75] Parsed SQL: INSERT IGNORE INTO Token(balance_log) VALUES (?, ?, ?, ?, ? , ?, ?, ?, ?)\n[2016-07-04 09:53:31.982] [TRACE] [main] [c.d.d.r.s.r.s.SingleTableRouter] [169] Before database sharding balance_log routes db names: [bc_0, bc_1] sharding columns: [uid] sharding values: [ShardingValue(logicTableName=balance_log, columnName=uid, value=123457181, values=[], valueRange=null)]\n[2016-07-04 09:53:53.749] [TRACE] [main] [c.d.d.r.s.r.s.SingleTableRouter] [173] After database sharding balance_log result: [bc_0]\n[2016-07-04 09:53:53.750] [TRACE] [main] [c.d.d.r.s.r.s.SingleTableRouter] [169] Before table sharding balance_log routes db names: [DataNode(dataSourceName=bc_0, tableName=SHARDING_JDBC DYNAMIC_TABLE_PLACEHOLDER), DataNode(dataSourceName=bc_1, tableName=SHARDING_JDBC DYNAMIC_TABLE_PLACEHOLDER)] sharding columns: [trade_time] sharding values: [ShardingValue(logicTableName=balance_log, columnName=trade_time, value=2016-07-04 09:53:30.174, values=[], valueRange=null)]\n[2016-07-04 09:54:04.585] [TRACE] [main] [c.d.d.r.s.r.s.SingleTableRouter] [173] After table sharding balance_log result: [balance_log_20160704]\n[2016-07-04 09:54:04.594] [TRACE] [main] [c.d.d.r.s.r.SQLExecutionUnit] [43] route sql to db: [bc_0] sql: [INSERT IGNORE INTO balance_log_20160704 (appkey, uid, u_accural, business_id, base_accural , type, trade_time, create_time, ucash_value) VALUES (?, ?, ?, ?, ? , ?, ?, ?, ?)]\n[2016-07-04 09:54:04.595] [DEBUG] [main] [c.d.d.r.s.r.SQLRouteEngine] [103] final route result:[SQLExecutionUnit(dataSource=bc_0, sql=INSERT IGNORE INTO balance_log_20160704 (appkey, uid, u_accural, business_id, base_accural , type, trade_time, create_time, ucash_value) VALUES (?, ?, ?, ?, ? , ?, ?, ?, ?))]\n[2016-07-04 09:54:04.595] [DEBUG] [main] [c.d.d.r.s.r.SQLRouteEngine] [104] merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null)\n[2016-07-04 09:54:16.801] [DEBUG] [main] [c.u.d.p.m.b.B.insertLog] [139] <==    Updates: 1\n[2016-07-04 09:54:16.823] [INFO] [Thread-17] [o.s.c.s.GenericApplicationContext] [982] Closing org.springframework.context.support.GenericApplicationContext@4d8539de: startup date [Mon Jul 04 09:53:11 CST 2016]; root of context hierarchy\nDisconnected from the target VM, address: '127.0.0.1:55424', transport: 'socket'\nProcess finished with exit code 0\n. \u628agroovy\u7684\u4e09\u5143\u8868\u8fbe\u5f0f\u6539\u4e3aif else\u6b63\u5e38\u4e86\uff01\uff01\uff01\nalgorithm-expression=\"bc_${(uid.longValue()%100) > 49?1:0}\"\n\u6539\u6210\u5982\u4e0b\uff1a\n algorithm-expression=\"bc_${if(uid.longValue()%100>49){1}else{0}}\"\n. @hanahmily  \u80fd\u770b\u4e0b\u8fd9\u4e2agroovy\u7684\u95ee\u9898\u5417\uff1f\u548c\u4e09\u5143\u64cd\u4f5c\u7b26\u7684\u4f18\u5148\u7ea7\u6ca1\u5173\u7cfb\nalgorithm-expression=\"bc_${(uid.longValue()%100) > 49?1:0}\"\nalgorithm-expression=\"bc_${((uid.longValue()%100) > 49)?1:0}\"\n\u90fd\u4e0d\u884c\uff01\n. \u5efa\u8bae\u76f4\u63a5\u628adruid\u66f4\u6539\u5305\u540d\u7136\u540e\u6253\u5305\u8fdbsjdbc\u4e2d\uff0c\u53c2\u89c1maven-shade-plugin. \u5e94\u8bd5\u662f\u8fd9\u4e2a\u7c7b\u7684com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractStatementAdapter.java\u7684getUpdateCount()\u5f97\u6539\u4e0b\u54c8\n. ",
    "afredlyj": "\u8fd9\u4e2a\u95ee\u9898\uff0c\u5df2\u7ecf\u786e\u8ba4\u662fbug\u4e86\u5417\uff1f\u5f71\u54cd\u5e94\u8be5\u86ee\u5927\u7684\u5427\n. @itbright-cn \u5f3a\u5236\u8d70\u4e3b\u5e93\uff0c\u80fd\u6ee1\u8db3\u4f60\u7684\u4e1a\u52a1\u573a\u666f\u5417\uff1f\u5982\u679c\u8981\u5f3a\u5236\u8d70\u4e3b\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528HintManager\u3002. \u7248\u672c 1.4.2 \u6b63\u5e38\uff0c1.5.4.1\u548c2.0.0.M3 \u5f02\u5e38. \u539f\u56e0\u548chttps://github.com/sharding-sphere/sharding-sphere/issues/899\u4e00\u6837\uff0c\u914d\u7f6e\u4e86\u8bfb\u5199\u5206\u79bb\uff0cfor update \u8def\u7531\u5230\u4ece\u5e93\uff0c\u5bfc\u81f4\u540e\u7eed\u7684update\u83b7\u53d6\u9501\u8d85\u65f6\uff0c\u6682\u65f6\u7528HintManager\u5f3a\u5236\u8d70\u4e3b\u5e93\u3002. ",
    "linpn": "1\u3001\u5728\u5206\u5e93\u5206\u8868\u89c4\u5219\u7684algorithm-expression\u91cc\u4f1a\u7528\u5230\uff0c\u6bd4\u5982\uff0c\u5206\u5e93\u8981\u683c\u5f0f\u5316\u4e3a\uff1adb_01, db_02\uff0c\u5f97\u7528\u5230String.format\u3002\n2\u3001\u4e24\u4e2aformat\uff0c\u7b2c\u4e00\u4e2a\u662f\u4e0d\u7528\u4f20\u503c\uff0c\u683c\u5f0f\u5316\u672c\u8eab\uff1b\u7b2c\u4e8c\u4e2a\u662f\u53ef\u4ee5\u4f20\u8fdb\u53bb\u503c\u3002\u5982\uff1aalgorithm-expression=\"ds_${id.format('%02d',id.longValue() % 2)}\"  \u3002\n3\u3001\u5c31\u4e24\u4e2a\u65b9\u6cd5\uff0c\u76f4\u63a5\u770b\u6ce8\u91ca\u5c31\u597d\u4e86\u3002\n. ",
    "bingoohuang": "\u5176\u5b9e\u6211\u672c\u6ca1\u60f3\u53bb\u5347\u7ea7Druid\u7248\u672c\uff0c\u53ea\u662f\u6211\u4eec\u4e4b\u524d\u90fd\u7528\u7684\u662fDruid\u7684\u6570\u636e\u6e90(com.alibaba.druid.pool.DruidDataSource)\uff0c\u7ed3\u679c\u5f53\u524dsharding-jdbc\u4e2ddruid\u7248\u672c\u7684\u6570\u636e\u6e90\u6709bug\uff0c\u65b0\u7248\u672c\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u65b0\u7248\u672c\u7684SQL\u89e3\u6790api\u6709\u53d8\u5316\u3002Druid\u9664\u4e86SQL\u89e3\u6790\u4e4b\u5916\uff0c\u8fd8\u6709\u6570\u636e\u6e90\uff0c\u73b0\u5728\u4e24\u8005\u4e0d\u80fd\u517c\u5f97\u554a\u3002\n. ",
    "liuchangit": "\u6211\u4eec\u4e5f\u9047\u5230\u540c\u6837\u95ee\u9898\uff0c\u60f3\u5347\u7ea7druid\u7248\u672c\u3002\u6709\u6ca1\u6709fork\u554a\uff1f. ",
    "bcllemon": "\u8fd9\u4e2a\u7248\u672c\u8fd8\u6ca1\u6709\u53d1\u5e03\u5427\uff1f\n. ",
    "tietang": "\u4f46\u662f\uff0c\u6211\u7684\u7591\u95ee\u662f\uff1a\ndefaultDatabaseStrategy:\nshardingColumns: user_id\nalgorithmExpression: ds_${user_id.longValue() % 2}\n\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u4e0d\u662f\u5df2\u7ecf\u53ef\u4ee5\u8ba1\u7b97\u51fa\u901a\u8fc7\u6570\u636e\u6e90\u540d\u79f0\u4e86\u4e48\uff0c\u90a3\u4e48\u901a\u8fc7\u540d\u79f0\u5c31\u53ef\u4ee5\u5728\u6240\u6709\u6570\u636e\u6e90\u91cc\u9762\u5339\u914d\u554a\uff1f\n. \u5ba2\u5982\u4e91 http://www.keruyun.com. ",
    "jingshouyan": "\u53ef\u80fd\u662fgroup by \u5217\u88ab\u8bbe\u7f6e\u4e86\u522b\u540d\u540e\u5c31\u65e0\u6cd5\u8bc6\u522b\u4e86\n. @Test\n    public void dbTest(){\n        for (int i = 0; i < 10; i++) {\n            User user = new User();\n            user.setUsername(\"zhangsan_\"+String.format(\"%08d\",i));\n            user.setBirthday(\"2017/07/01\");\n            user.forCreate();\n            userDao.insert(user);\n        }\n        List users = userDao.query(null);\n        System.out.println(users.size());\n    }\n\u5b57\u5178\u8868\u63d2\u5165\u4f7f\u7528\u5c0f\u8868\u5e7f\u64ad\uff0c\u67e5\u8be2\u96be\u9053\u8fd8\u6709\u7279\u6b8a\u7684\u6280\u6cd5\uff1f\u666e\u901a\u67e5\u8be2\u4f1a\u6709\u91cd\u590d\u7684\u6570\u636e. sorry,I forget to set TableRuleConfiguration.\nTableRuleConfiguration config = new TableRuleConfiguration();\n        config.setLogicTable(\"REPLYNOTICE_INFO\");\n        config.setActualDataNodes(\n                \"default.REPLYNOTICE_INFO\"\n        );\nwhen i set TableRuleConfiguration ,it working properly. ",
    "pan289091315": "\u73b0\u5728\u8fd8\u6709\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\u600e\u4e48\u6211\u8fd9\u91cc\u597d\u50cf\u590d\u73b0\u4e0d\u4e86\uff1f\n. ",
    "liyichengcheng": "\u4e0d\u7528limit\uff0c\u5206\u9875\u7684\u65f6\u5019\u4f7f\u7528\u7279\u5b9a\u5b57\u6bb5\uff08\u6bd4\u5982\u4f7f\u7528\u521b\u5efa\u65f6\u95f4\uff09\u6392\u5e8f\uff0c\u7136\u540e\u5206\u9875\u70b9\u4f7f\u7528\u8be5\u5b57\u6bb5\u3002\u8fd9\u6837\u6bcf\u4e00\u9875\u63d0\u53d6\u7684\u6570\u636e\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\u7528\u521b\u5efa\u65f6\u95f4\u6392\u5e8f\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5404\u5206\u8868\u7684\u6570\u636e\u5747\u5300\u554a\uff0c\u53ef\u80fd\u67d0\u4e00\u6bb5\u5f88\u957f\u65f6\u95f4\u63d2\u5165\u7684\u6570\u636e\u90fd\u5728\u4e00\u4e2a\u5206\u8868\u3002. \u5982\u679c\u662f\u67e5\u8be2\u5012\u6570\u9875\u7684\u8bdd\uff0c\u5176\u5b9e\u4e0d\u7528 \u201c\u67e5\u8be2\u5168\u91cf\u7684\u7ed3\u679c\u96c6\uff0c\u7136\u540e\u79fb\u52a8\u6e38\u6807\u5230\u6700\u540e\u4e00\u9875\u201d\uff0c\u628a order by asc \u6539\u6210 desc, \u6216\u8005 \u628a desc \u6539 asc \u53d6\u524d\u51e0\u9875\u5c31\u53ef\u4ee5\u4e86. ",
    "Glowdable": "\u54e5\uff0c\u6211\u771f\u6ca1\u6709\u627e\u5230\u6587\u6863\u3002\n\u8fd9\u4e2a\u9879\u76ee\u6211\u53ea\u770b\u5230\u4e24\u4e2a\u6587\u6863\uff1a\nhttps://github.com/dangdangdotcom/sharding-jdbc\nhttps://github.com/dangdangdotcom/sharding-jdbc/wiki\n\u91cc\u9762\u90fd\u6ca1\u6709\u4ecb\u7ecd\u5982\u4f55\u7f16\u8bd1\u554a\n\u6211\u8fd8\u5728infoq\u4e0a\u9762\u770b\u5230\u4e86\u4f60\u7684\u56de\u590d\uff0c\u8bf4\u662f\u8fd9\u91cc\u6709\u6587\u6863\nhttp://dangdangdotcom.github.io/elastic-job/sourceCodeGuide.html\n\u4f46\u662f\u627e\u4e0d\u5230\u8fd9\u4e2a\u9875\u9762\n\u591a\u8c22\n. ",
    "Beyondeclipse": "\u5176\u4ed6\u7684\u65b9\u6cd5\u5982execute\u4e5f\u6709\u7c7b\u4f3c\u95ee\u9898\u3002\n. ",
    "WangBuEr": "\u914d\u7f6e\u95ee\u9898\uff0c\u5df2\u89e3\u51b3\n. ",
    "jasonzhouxf": "\u4f7f\u7528\u7684\u662ftag 1.3.1 \u7248\u672c\uff0c\u770b\u5230master\u4e0a\u9762\u4ee3\u7801\u662f\u4e0d\u4e00\u81f4\u7684\u3002\u662f\u5426\u53ef\u4ee5\u518d\u6253\u4e00\u4e2atag\uff1f\n. \u5347\u7ea7\u5230master 1.3.2-SNAPSHOT\u7248\u672c\uff0c\u95ee\u9898\u89e3\u51b3\n. ",
    "zengyintian": "\u6dfb\u52a0\u4f9d\u8d56 sharding-jdbc-config-spring\n. ",
    "topno3rpg": "\u7f16\u8bd1\u901a\u8fc7\u4e86 - -\u3002\n. ",
    "huzichi": "\u8fd9\u4e2a\u5c5e\u4e8e\u4e1a\u52a1\u903b\u8f91\uff0c\u6846\u67b6\u4e00\u822c\u4e0d\u8003\u8651\n. ",
    "Jakye": "\u6539\u4e3ainner join\u7ed3\u679c\u6b63\u5e38\n. \u77e5\u9053\u539f\u56e0\u4e86\uff0c\u56e0\u4e3a\u6211\u662f\u4e24\u5f20\u8868\u5206\u522b\u90fd\u662f\u6309user_id\u5947\u5076\u5206\u7247\uff0c\u539f\u6765logic \u8868t_user_order\u4e0et_user_kind\u5bf9\u5e94actual \u8868t_user_order_0\u3001t_user_order_1\u3001t_user_kind_1\u3001t_user_kind_0\uff0c\u800c\u6211\u7684sql\u662fleft join\u4f46 where \u6761\u4ef6 user_id\u5728\u4e00\u4e2a\u8303\u56f4\u4e2d\uff0c\u56e0\u6b64\u65e0\u6cd5\u8def\u7531\u5230\u5177\u4f53\u8868\uff0c\u6700\u540et_user_order_0\u4e0et_user_kind_1 left join\uff0ct_user_order_0\u4e0et_user_kind_0 left join \uff0ct_user_order_1\u4e0et_user_kind_1left join\uff0ct_user_order_1\u4e0et_user_kind_0 left join\uff0c\u5176\u4e2dt_user_order_0\u4e0et_user_kind_1 left join \uff0c\u7531\u4e8euser_id\u5728t_user_order_0\u4e3a\u5076\u6570\u800c\u5728t_user_kind_1\u4e3a\u5947\u6570\uff0c\u5bfc\u81f4 left join\u7684\u7ed3\u679c\u4e3a\u4e2d\u6765\u81eat_user_kind_1\u7684\u7ed3\u679c\u4e3a\u7a7a\uff0c\u540c\u6837t_user_order_1\u4e0et_user_kind_0 left join\u4e5f\u4f1a\u4ea7\u751f\u8fd9\u79cd\u7ed3\u679c\u3002\u6240\u4ee5\u5728 \u7528join\u65f6\uff0c\u5e94\u907f\u514d\u4f7f\u7528 left join  \u800c\u7528 inner join\n. ",
    "yuanwhy": "\u9879\u76ee\u4e2d\u7684sharding-jdbc-example-jdbc\u7684\u7b2c\u4e00\u4e2aprintSimpleSelect\u7684sql\u8bed\u53e5 SELECT i.* FROM t_order o JOIN t_order_item i  ON o.order_id=i.order_id WHERE o.user_id=? AND o.order_id=? \u89e3\u6790\u5c31\u6bd4\u8f83\u6162\uff0c\u6211\u5728mac pro\u4e0a\u6267\u884c\u89e3\u6790\u9700\u8981200ms\u5de6\u53f3\uff0c\u6211\u6539\u6210run\u6a21\u5f0f\uff0clog\u4e3ainfo\u7ea7\u522b\uff0c\u8ba1\u7b97\u7684\u65f6\u95f4\u4e5f\u6ca1\u4f4e\u4e8e170ms\uff0c\u8fd9\u79cd\u6bd4\u8f83\u590d\u6742\u7684sql\u53ef\u80fd\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u592a\u5e38\u89c1\uff0c\u6309\u7167\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u53ef\u80fd\u786e\u5b9e\u4e0d\u7528\u592a\u5173\u5fc3\uff1b\u540e\u7eed\u6709\u4f18\u5316\u4f1a\u6301\u7eed\u5173\u6ce8\uff0c\u8c22\u8c22\u89e3\u7b54 @hanahmily \n. @shanleiyang \u65b0\u7248\u672c\u597d\u50cf\u6ca1\u8fd9\u4e2a\u95ee\u9898. ",
    "yangyongh": "\u8c03\u8bd5\u65e5\u5fd7\u5982\u4e0b\uff1a\n11:43:47.400 [http-nio-8080-exec-7] DEBUG o.m.s.t.SpringManagedTransaction - JDBC Connection [com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection@71aa558c] will not be managed by Spring\n11:43:47.400 [http-nio-8080-exec-7] DEBUG c.s.l.s.dao.FaultLogDAO.getFaultLogs - ==>  Preparing: select * from b_fault_log WHERE device_id in (5,6,7,8,9,10,12,13,14) limit ?,? \n11:43:47.401 [http-nio-8080-exec-7] DEBUG c.s.l.s.dao.FaultLogDAO.getFaultLogs - ==> Parameters: 5(Integer), 20(Integer)\n11:43:47.401 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.parser.SQLParserFactory - Logic SQL: select * from b_fault_log WHERE  device_id in (5,6,7,8,9,10,12,13,14) limit ?,?\n11:43:47.401 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.parser.SQLParseEngine - Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=b_fault_log, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[ConditionContext(conditions={Condition.Column(columnName=device_id, tableName=b_fault_log)=Condition(column=Condition.Column(columnName=device_id, tableName=b_fault_log), operator=IN, values=[5, 6, 7, 8, 9, 10, 12, 13, 14], valueIndices=[])})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=Limit(offset=5, rowCount=20, offsetParameterIndex=Optional.of(0), rowCountParameterIndex=Optional.of(1))))\n11:43:47.401 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.parser.SQLParseEngine - Parsed SQL: SELECT * FROM [Token(b_fault_log)] WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?\n11:43:47.402 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.router.SQLRouteEngine - final route result:[SQLExecutionUnit(dataSource=ds1, sql=SELECT * FROM b_fault_log_0 WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?, sqlBuilder=SELECT * FROM [Token(b_fault_log_0)] WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?), SQLExecutionUnit(dataSource=ds1, sql=SELECT * FROM b_fault_log_1 WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?, sqlBuilder=SELECT * FROM [Token(b_fault_log_1)] WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?), SQLExecutionUnit(dataSource=ds0, sql=SELECT * FROM b_fault_log_0 WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?, sqlBuilder=SELECT * FROM [Token(b_fault_log_0)] WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?), SQLExecutionUnit(dataSource=ds0, sql=SELECT * FROM b_fault_log_1 WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?, sqlBuilder=SELECT * FROM [Token(b_fault_log_1)] WHERE device_id IN (5, 6, 7, 8, 9, 10, 12, 13, 14) LIMIT ?, ?)]\n11:43:47.402 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.router.SQLRouteEngine - merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=Limit(offset=5, rowCount=20, offsetParameterIndex=Optional.of(0), rowCountParameterIndex=Optional.of(1)))\n11:43:47.404 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.ShardingResultSets$WrapperResultSet - 790383559 join pipeline\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.ShardingResultSets$WrapperResultSet - 241388400 join pipeline\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.ShardingResultSets$WrapperResultSet - 1146082875 join pipeline\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.ShardingResultSets$WrapperResultSet - 1357792754 join pipeline\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.merger.ResultSetFactory - Sharding-JDBC: Sharding result sets type is 'MULTIPLE'\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.p.r.IteratorReducerResultSet - 501313115 join pipeline\n11:43:47.405 [http-nio-8080-exec-7] DEBUG c.d.d.r.s.m.p.c.LimitCouplingResultSet - 164466268 join pipeline\n11:43:47.409 [http-nio-8080-exec-7] DEBUG c.s.l.s.dao.FaultLogDAO.getFaultLogs - <==      Total: 20\n11:43:47.410 [http-nio-8080-exec-7] DEBUG org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530919b6]\n. \u8c22\u8c22\uff0c\u8c22\u8c22\uff01\n\u662f\u6211\u7684\u9519\u8bef\uff0c\u6211\u6df7\u6dc6\u4e86limit\u7684\u7528\u6cd5\u3002 \n. ",
    "life300131": "\u8fd9\u4e2a\u6211\u4e5f\u6709\u7591\u60d1\uff0c\u540e\u6765\u660e\u767d\u4e86\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\uff0c\u8fd9\u4e2asharding-jdbc\u7684\u65b0\u7248\u672c\u505a\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u5728\u5355\u5e93\u5355\u8868\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u662f\u6b63\u5e38\u7684limit\n. \u4eac\u4e1c\u91d1\u878d-\u804c\u80fd\u7814\u53d1\u90e8-\u8d22\u52a1\u7814\u53d1\u7ec4. ",
    "0x0010": "\u521a\u521a\u624d\u53d1\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u5220\u9664\u4e86\u3002\n. +1. ",
    "lanmo": "\u5982\u679c\u4f7f\u7528mybatis \u6807\u7b7e\u4f7f\u7528\nuseGeneratedKeys=\"true\" keyProperty=\"id\"\n\u5e76\u4e0d\u80fd\u83b7\u53d6\u5230\u81ea\u589e\u7684\u4e3b\u952eid\u503c. \u5347\u7ea7\u52301.5.0.M3 \u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u4e5f\u5c31\u662f\u4ee5\u524d\u7684\u7248\u672c\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u662f\u5417\uff1f. \u5347\u7ea7\u52301.5.0.M3 \u95ee\u9898\u5df2\u89e3\u51b3\uff0c\u4e5f\u5c31\u662f\u4ee5\u524d\u7684\u7248\u672c\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u662f\u5417\uff1f. ",
    "maojiawei": "MasterSlaveDataSource \u6211\u60f3\u5355\u72ec\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e\u6e90\u53ef\u4ee5\u5417\n. \u611f\u8c22\u56de\u7b54 \n. ",
    "ethanlamzs": "\n\n\n\n\n\n```\n\n\n\n\n\n\n \u5b9a\u4e49\u8bfb\u5199\u5206\u79bb\u6570\u636e\u6e90, \u8bfb\u5199\u5206\u79bb\u6570\u636e\u6e90\u5b9e\u73b0\u4e86DataSource\u63a5\u53e3, \u53ef\u76f4\u63a5\u5f53\u505a\u6570\u636e\u6e90\u5904\u7406 \n\n\n\n\n\n\n\n\n\n```\n. ",
    "gavenpeng": "\u662f\u901a\u8fc7lombok.Getter \u6765\u7684\uff1f\n. ",
    "githublaohu": "\u8fd9\u4e2a\u6211\u63a5\u4e86\uff0c\u80fd\u544a\u8bc9\u6211\u4e00\u4e2a\u5207\u5165\u70b9\u5417\uff1f\n\u7136\u540e\u8fd9\u4e2a\u95ee\u9898\u662f \u56e0\u4e3a\u5206\u8868\u95ee\u9898\u9020\u6210\u7684\u5417\u5417\uff1f. \u6709\u6ca1\u6709\u91cd\u73b0\u4ee3\u7801\uff1f. \u597d\u7684\uff0c\u6536\u5230\uff0c\u6211\u5148\u628a\u73af\u5883\u642d\u5efa\u597d\u3002 @hanahmily . \u6211\u770b\u4e86\uff0c PreparedStatementExecutor.executeBatch \u5230\u6267\u884c sql\u8bed\u53e5\uff0c\u5e94\u8be5\u4e0d\u662fPreparedStatementExecutor.executeBatch\u7684\u9519\uff0c\u800c\u662f \u8def\u7531\u751f\u6210sql\u7684\u95ee\u9898\u5427\u3002. executeBatch \u4f7f\u7528\u591a\u7ebf\u7a0b\u6267\u884c\uff0c\u662f\u4e0d\u662f\u4f1a\u6709\u95ee\u9898\uff0c\n\u5982\u679c \u6279\u5904\u7406 \u7684\u8bed\u53e5\u6709\u6267\u884c\u5173\u7cfb\n\u6bd4\u5982  \u6279\u5904\u7406 a\u662f\u6dfb\u52a0\uff0cb\u662f\u67e5\u8be2\u3002\u5982\u679c\u591a\u7ebf\u7a0b\u6267\u884c\uff0ca\u6dfb\u52a0\u6bd4b\u67e5\u8be2\u6267\u884c\u6162\uff0c\u90a3\u4e0d\u51fa\u73b0\u810f\u6570\u636e\u4e86\uff1f. \u770b\u4e86\uff0c\u628a PreparedStatement \u7684  executeBatch \u540e\u9762\u7684\u6240\u6709\u90fd\u770b\u5b8c\u4e86\u3002\nupdate\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u662f100%\u80fd\u5f97\u5230\u4e86\uff0c\u4e5f\u627e\u5230\u7684\uff0c\u83b7\u5f97\u5f02\u6b65\u8fd4\u56de\u7684\u4ee3\u7801\uff0c\n\u6240\u4ee5\u611f\u89c9\u662f  \u8def\u7531\u65b9\u9762\u7684\u9519\u8bef\u3002\n\u6211\u627e\u65f6\u95f4\uff0c\u642d\u5efa\u6d4b\u8bd5\u3002. \u4e0d\u597d\u610f\u601d\uff0c\u7ec8\u4e8e\u5fd9\u8fc7\u6765\u4e86\uff0c\n\u73af\u5883\u642d\u5efa\u597d\uff0c\u5df2\u7ecf\u5728\u8c03\u8bd5\u3002\u95ee\u9898\u611f\u89c9\u662f\u5b9a\u4f4d\u5230\u4e86\u3002\n\u8fd9\u4e2a\u661f\u671f\u5e94\u8be5\u53ef\u4ee5\u51fa\u89e3\u51b3\u65b9\u6848\u3002. \u95ee\u9898\u5df2\u7ecf\u627e\u5230\uff0c\u662frote\u5206sql\u3002\nPreparedStatement ps = conn.prepareStatement(\"update t_order set status = ? where order_id in (?,?,?,?)\" );\n           ps.setString( 1 , \"lao\" );\n           ps.setInt( 2 , 1101 );\n           ps.setInt( 3 , 1102 );\n           ps.setInt( 4 , 1001 );\n           ps.setInt( 5 , 1003 );\n\u5e94\u8be5\u662f \u5206\u4e09\u6761 sql \u8bed\u53e5\uff0c\u7136\u540e\u5206\u4e86\u56db\u6761\u51fa\u6765\u4e86\uff0c\u6709\u4e00\u6761\u91cd\u590d\u6267\u884c. \u6279\u91cfinstet \u80fd\u89e3\u6790\u51fa\u6765\u5417\uff1f. \u54e5\u4eec\uff0c\u725b\u5934\u4e0d\u5bf9\u9a6c\u5634\u554a\u3002. \u8fd9\u4e2aissues\u7684\u95ee\u9898\u662f\uff0cinsert\u89e3\u6790\u4e0e\u8def\u7531\u7684\u95ee\u9898\u3002\nsharding-jdbc\u652f\u6301\u4e24\u6bb5\u63d0\u4ea4\u554a. \u5982\u679c\u4e0d\u652f\u6301\u4e24\u6bb5\u63d0\u4ea4\uff0csharding-jdbc\u80fd\u4e0a\u6b63\u5f0f\u73af\u5883\n\u4e24\u6bb5\u63d0\u4ea4\uff0c\u975e\u5e38\u7b80\u5355\uff0c\u9700\u8981\u7ea0\u7ed3\u5417\uff1f. AbstractConnectionAdapter \n\u770b\u4e0b\u8fd9\u4e2a\u7c7b\u5427. \u8fd8\u662f\u591a\u7ebf\u7a0b\u5427\uff0c\u4fdd\u8bc1\u6d41\u7a0b\u7684\u7b80\u5355\u6027\u3002\n\u4e00\u5e93\u591a\u8868\uff0c\u5728\u6027\u80fd\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4f18\u52bf\u3002\u53ea\u662f\u4e00\u79cd\u8fc7\u6e21\u9636\u6bb5\u3002\u6ca1\u5fc5\u8981\u4e3a\u4e00\u4e2a\u8fc7\u6e21\u9636\u6bb5\u3002\u591a\u5b9e\u73b0\u4e00\u4e2a\u6d41\u7a0b\u3002\n. \u62b1\u6b49\uff0c\u6211\u8fd8\u662f\u6ca1\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u6b7b\u9501................ \u5927\u6982\u7406\u89e3\u4e86\u3002\n\u4e8b\u52a1\u4e00\uff0c\u4fee\u6539A\uff0cB\u5206\u7247\u6570\u636e\uff0c\u6709\u7ebf\u7a0b1\uff0c\u7ebf\u7a0b2\uff0c\u4e8b\u52a1\u4e8c\uff0c\u4e5f\u4fee\u6539A\uff0cB\u5206\u7247\u6570\u636e\u3002\u7ebf\u7a0b3\uff0c\u7ebf\u7a0b\u56db\n\u56e0\u4e3a\u662f\u591a\u7ebf\u7a0b\uff0c\n\u7ebf\u7a0b1\uff0c\u9501\u4f4fA\u5206\u7247\u6570\u636e\u3002\u7ebf\u7a0b2\u7b49\u5230 B\u5206\u7247\u9501\n\u7ebf\u7a0b3\uff0c\u9501\u4f4fB\u5206\u7247\u6570\u636e\u3002\u7ebf\u7a0b4\u7b49\u5f85 A\u5206\u7247\u9501\u3002\n\u8fd9\u6837\u51fa\u73b0\u4e86\u6b7b\u9501\u73b0\u8c61\u3002\n\u8fd9\u4e2a\u60f3\u5148\u5728\u5206\u5e03\u5f0f\u7684\u60c5\u51b5\u4e0b\u3002\u597d\u50cf\u662f\u65e0\u89e3\u7684\u3002\n\u5305\u62ecmysql xa\u3002\n. ",
    "lyg123": "\u5982\u679c\u81ea\u5df1\u5728sharding-jdbc\u4e0a\u52a0oracle\u7684\u652f\u6301\uff0c\u5e94\u8be5\u4ece\u54ea\u91cc\u5165\u624b. ",
    "QingHui653": "\n. ",
    "xydonne": "1.1 hash\u90e8\u5206\uff0c\u62ff\u540c\u4e00\u4e2ahash\u503c\u53bb\u6620\u5c04\u3002\u4f1a\u5bfc\u81f4\u6bd4\u5982\u5e93\u7684range\uff080-100\uff09\uff0c\u5e93\u4e0b\u8868\u7684range\uff080-65535\uff09\uff0c\u56e0\u4e3a\u5e93\u548c\u8868\u7684hash\u6620\u5c04\u76f8\u540c\uff0c\u4f1a\u5bfc\u81f4\u8868\u4e2d\u53ea\u67090-100\u6709\u6570\u636e\uff0c101-65535\u65e0\u6570\u636e\u3002\n1.2 hash\u540e\u53ef\u4ee5\u505amod\u8fd0\u7b97\u3002\n\u56e0\u4e3a\u5206\u5e93\u5206\u8868\u672c\u8eab\u5c31\u662f\u86ee\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u4e3a\u4e86\u51cf\u8f7b\u4e86\u8ba4\u77e5\u8d1f\u62c5\u548c\u9009\u62e9\u6210\u672c\u3002\u5f53\u65f6\u7684\u601d\u8def\u662f\u201cThere should be one-- and preferably only one --obvious way to do it.\u201d\nrange\u548cmod\u7684\u9009\u62e9\u4e0a\uff0crange\u7684\u5206\u7247\u81ea\u7531\u5ea6\u66f4\u5927\u3002\u5982\u679c\u8981\u505a\u5e93\u7684\u62c6\u5206\u548c\u5408\u5e76\uff0c\u76f8\u5bf9mod\u66f4\u6613\u7406\u89e3\u3002\n\u5f3a\u5236\u7528\u6237\u914d\u7f6e\u6240\u6709\u5e93\uff0c\u4ee5\u53ca\u6240\u6709\u5e93\u4e0b\u7684\u6240\u6709\u8868\u3002\u662f\u56e0\u4e3a\u901a\u8fc7\u8868\u8fbe\u5f0f\u7b97\u8868\uff0c\u867d\u7136\u914d\u7f6e\u7b80\u5355\uff0c\u4f46\u5bf9\u7528\u6237\u5efa\u7acb\u7684\u8868\uff0c\u547d\u540d\u4e0a\u6709\u8981\u6c42\u3002\n2.1 yaml\u914d\u7f6e\uff0c\u519916\u8fdb\u5236\uff0c10\u8fdb\u5236\uff0c2\u8fdb\u5236\u90fd\u884c\uff0c\u6700\u7ec8\u90fd\u4f1a\u88c5\u6362\u6210Integer\u300216\u8fdb\u5236\u786e\u5b9e\u4e0d\u76f4\u89c2\u3002\nrange\u914d\u7f6e\u4e0a\uff0c\u914d\u7f6e\u8303\u56f4\u4e0e\u914d\u7f6e\u5206\u5272\u6570\u90fd\u884c\u3002\u4e2a\u4eba\u89c9\u5f97\u914d\u7f6erange\uff0c\u53ef\u4ee5\u5bf9\u7528\u6237\u7684range\u914d\u7f6e\u8fdb\u884c\u6821\u9a8c\uff1b\u914d\u7f6e\u5206\u5272\u66f4\u7b80\u5355\uff0c\u600e\u4e48\u914d\u90fd\u5bf9\uff0c\u4f46\u7f3a\u4e4f\u6821\u9a8c\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u662f\u7528\u6237\u60f3\u8981\u7684\u5206\u7247\u3002\n2.2 \u8fd9\u70b9\u786e\u5b9e\uff0c\u5f53\u65f6\u6574\u4e2a\u914d\u7f6e\u5c31\u662f\u4e2aMap>>> hash\nYAML\u89c4\u8303\u91cc\uff0c\u662f\u4e0d\u662f\u5e94\u8be5\u65b0\u5efa\u4e00\u4e2aBean\uff0ckey\u5c31\u662fBean\u4e2d\u4e00\u4e2a\u5b57\u6bb5\uff1f\nmurmur3\u7684\u7b97\u6cd5\uff0c\u9700\u8981\u6539\u6210guava\u7684. \u597d\uff0c\u662f\u5e94\u5f53\u628a\u5f53\u524d\u8fdb\u7a0b\u7684\u4e3b\u673a\u540d+IP+\u8fdb\u7a0b\u7f16\u53f7\u5199\u5165\u4e34\u65f6\u8282\u70b9\u3002\n\u8282\u70b9\u88ab\u8986\u76d6\u7684\u6807\u5fd7\u7ee7\u7eed\u7528ctime\u597d\u4e86\uff0c\u76f8\u5bf9\u7cbe\u51c6\uff0c\u5224\u65ad\u4e0a\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519. \u91cd\u65b0\u4fee\u6539\u4e86\u8bbe\u8ba1\n\u539f\u8282\u70b9\u4fee\u6539\u4e3a\n/snowflake/dubbo.application.name/node/0\n/snowflake/dubbo.application.name/node/1\n\u65b0\u589e\u914d\u7f6e\u8282\u70b9\n/snowflake/dubbo.application.name/config/order\n\u914d\u7f6e\u8282\u70b9order\u503c\u4e3a\u8282\u70b9\u521b\u5efa\u7684\u987a\u5e8f,FIFO,\u9ed8\u8ba4\u503c\u4e3a[0,1,2,3...1022,1023]\n\u5e94\u5bf9\u9ad8\u5e76\u53d1,\u4f1a\u5728\u6ce8\u518c\u65f6\u5148\u5bf9/snowflake/dubbo.application.name\u8282\u70b9\u52a0\u9501,\u7b49\u6ce8\u518c\u5b8c,\u91ca\u653e\u9501.\n\u6ce8\u518c\u8282\u70b9\u65f6,\u4eceorder\u8282\u70b9\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386,\u5982\u679c\u8282\u70b9\u8fd8\u672a\u88ab\u6ce8\u518c,\u5219\u83b7\u53d6\u8282\u70b9\u503c\u8fdb\u884c\u6ce8\u518c.\n\u6ce8\u518c\u65f6,\u5c06\u5f53\u524d\u7684ip,hostName,pid\u5199\u5165\u9700\u8981\u6ce8\u518c\u7684\u8282\u70b9\n\u5f53\u7b2c\u4e00\u4e2a\u8282\u70b9\u6ce8\u518c\u540e,order\u8282\u70b9\u7684\u503c\u53d8\u4e3a[1,2,3,4...1022,1023,0]\n\u53c2\u89c1:\nhttps://github.com/xydonne/sharding-jdbc/tree/id-generator/190\n\u5df2\u63d0\u4ea4PR. @hanahmily \u5df2\u53c2\u8003HostNameIdGenerator\u7684\u4fee\u6539\uff0c\u5df2\u63d0\u4ea4PR\u3002. \u5df2\u5b8c\u6210\uff0c\u7528\u4e86PowerMock\u6765mock\u9759\u6001\u65b9\u6cd5\u3002\nhttps://github.com/xydonne/sharding-jdbc/tree/id-generator/192. @hanahmily  \u65b0\u589e\u5185\u5bb9\uff0c\u6d4b\u8bd5\u8986\u76d6\u7387100%\uff0c\u5df2\u63d0\u4ea4PR\u3002. \u6709\u4e2a\u95ee\u9898\uff0c/sharding-jdbc/appName\u8282\u70b9\u4e00\u5f00\u59cb\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6\u8bbe\u7f6e\u4e3anamespace\u4f1a\u62a5\u9519\u3002\n\u800c\u521b\u5efa/sharding-jdbc/appName\u8282\u70b9\u9700\u8981\u521d\u59cb\u5316client\u3002\n\u9700\u8981\u6539\u6210\n1.\u521d\u59cb\u5316namespace\u4e3anull\u7684client1\n2.\u521b\u5efa/sharding-jdbc/appName\u8282\u70b9\n3.\u521d\u59cb\u5316namespace\u4e3a/sharding-jdbc/appName\u8282\u70b9\u7684client2\n\u66f4\u52a0\u5197\u4f59\uff0c\u4e0d\u5982\u591a\u4e9b\u4e2anamespace\u5b57\u6bb5. \u5df2\u6539\n\u76f4\u63a5\u4f7f\u7528ZooDefs.Ids.CREATOR_ALL_ACL\u66f4\u7b80\u5355\uff0c\u4f1a\u6dfb\u52a0\u9ed8\u8ba4\u7684\u6743\u9650\u3002\n\u5982\u679c\u76f4\u63a5\u4f7f\u7528\uff0c\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4e5f\u53ef\u4ee5\u53bb\u6389\u4e86\u3002\nacls.add(new ACL(ZooDefs.Perms.ALL, new Id(\"world\", \"anyone\")));. \u5df2\u6539. \u5df2\u6539. \u5df2\u6539. \u5f53\u65f6\u8bbe\u8ba1\u4e0a\u5141\u8bb8\u91cd\u590d\uff0c\u4e24\u4e2a\u65b9\u9762\u539f\u56e0\n1.\u91cd\u590d\u4e86mysql\u4f1a\u62a5\u4e3b\u952e\u91cd\u590d\u5f02\u5e38\uff0c\u4e0d\u4f1a\u6709\u810f\u6570\u636e\u95ee\u9898\u3002\n2.\u5982\u679c\u4e0d\u5141\u8bb8\u91cd\u590d\uff0c\u90a3\u5f53\u4e0ezookeeper\u65ad\u5f00\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u4e5f\u5e94\u8be5\u8bbe\u7f6eCommonSelfIdGenerator\u4e3a\u4e0d\u53ef\u8bbf\u95ee\u3002\u4f1a\u5bfc\u81f4zk\u6302\u4e86IdGenerator\u5c31\u4e0d\u53ef\u8bbf\u95ee\u3002\n\u6240\u4ee5\u5f53\u65f6\u8ba4\u4e3a\uff0c\u4e0ezookeeper\u5efa\u7acb\u8fde\u63a5\u4e0e\u91cd\u8fde\u63a5\u8fc7\u7a0b\u4e2d\uff0c\u662f\u5141\u8bb8\u751f\u6210\u7684\u4e3b\u952e\u91cd\u590d\u7684\u3002. \u8bbe\u8ba1\u65f6\u8ba4\u4e3a\uff0c\u4e0ezookeeper\u5efa\u7acb\u8fde\u63a5\u4e0e\u91cd\u8fde\u63a5\u8fc7\u7a0b\u4e2d\uff0c\u5141\u8bb8\u751f\u6210\u7684\u4e3b\u952e\u91cd\u590d\u7684\u3002\n\u4f46\u53c8\u60f3\u5c3d\u53ef\u80fd\u4e0d\u8ba9\u4e3b\u952e\u91cd\u590d\n\u6240\u4ee5\u4f1a\u5728/sharding-jdbc/app-name/config/order\u4ee5\u5148\u8fdb\u5148\u51fa\u7684\u65b9\u5f0f\u5b58\u50a8\u751f\u6210\u7684workId\uff0c\u53d6\u5f97\u65f6\u5019\uff0c\u5c3d\u91cf\u83b7\u53d6\u751f\u6210\u65f6\u95f4\u6bd4\u8f83\u65e9\u5e76\u4e14\u672a\u88ab\u4f7f\u7528\u7684workId\u3002\n\u539f\u6765\u7684order\u503c\u4e3a[4,5,6...1023,0,1,2,3],\u6b64\u65f64\u53f7\u8282\u70b9\u672a\u88ab\u4f7f\u7528,\u5219\u8bbe\u7f6e4\u4f4dworkId,\u4fee\u6539order\u503c\u4e3a[5,6...1023,0,1,2,3,4]\n\u5bf9\u5e94\u540e\u9762\u7684\u64cd\u4f5c\nsetData().forPath(\"/sharding-jdbc/app-name/config/order\", orderIdSet.toString().getBytes())\n\u6b64\u5904\u4f1a\u7528\u5230orderIdSet\uff0c\u5e94\u8be5\u662f\u6709\u4f5c\u7528\u7684. \u8fd9\u4e2a\u6ca1\u770b\u61c2\u3002\n\u539f\u6765\u662f\"/sharding-jdbc/app-name/node/1\"\uff0c\u9700\u8981\u6539\u6210\u201c/sharding-jdbc/node/app-name-1\u201d\u8fd9\u6837\u4e48\uff1f\n\u4e4b\u524d\u662f\u628a\u9501\u7ed1\u5b9a\u5230\"/sharding-jdbc/app-name\u201d\uff0c\u8fd9\u6837\u4e0d\u540capp\u95f4\uff0c\u7528\u7684\u662f\u4e0d\u540c\u7684\u9501\u3002\n\u5982\u679c\u7ed1\u5b9a\u5230\u201c/sharding-jdbc/node\u201d\uff0c\u4e0d\u540capp\u95f4\u7684\u9501\u7528\u7684\u5c31\u53d8\u6210\u540c\u4e00\u4e2a\u4e86\u3002\u53ef\u80fd\u8fd8\u5f97\u4fee\u6539\u9501\u7684\u5904\u7406\u65b9\u5f0f. ",
    "BreakT": "\u5965 \u597d\u7684 \u8c22\u8c22\u60a8\u7684\u89e3\u7b54. ",
    "limingwei": "\u662f\u7684 \u662f\u7684 \u662f\u7684. \u5176\u5b9e\u6211\u4e5f\u89c9\u5f97\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u6709\u7528\u7684\uff0c\u6709\u9700\u8981\u7684. \u770b\u6765\u4e0d\u662f\u6211\u4e00\u4e2a\u4eba\u8fd9\u6837\u60f3. \u6216\u8005\u53ef\u4ee5\u628a\u8fd9\u4e2a\u529f\u80fd\u505a\u6210\u4e00\u4e2a\u5f00\u5173\uff0c\u9ed8\u8ba4\u5173\u95ed\u5457. \u8fd9\u4e2a\u5982\u679c\u505a\u4e86\uff0c\u5c31\u662f\u63d0\u5347\u4ea7\u54c1\u6613\u7528\u6027\uff0c\u964d\u4f4e\u95e8\u69db\u554a. \u770b\u770b  \u770b\u770b\n\u6709\u8fd9\u79cd\u60f3\u6cd5\u7684\u4eba  \u771f\u7684\u5f88\u591a\n\u4e5f\u8bb8\u8fd9\u90e8\u5206\u4eba\uff0c\u6bd4\u5982\u6211\uff0c\u6280\u672f\u6c34\u5e73\u4e0d\u591f\uff0c\u601d\u60f3\u4e0d\u591f\u5148\u8fdb\n\u4f46\uff0c\u7684\u786e\u6709\u4e0d\u5c11\u6bd4\u4f8b\u7684\u4eba\u662f\u8fd9\u6837\u60f3\u7684\u554a. Diao\uff0c\u4eca\u5929\u4e0a\u5348\u624d\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd8\u4ee5\u4e3a\u662f\u6211\u81ea\u5df1\u7684\u539f\u56e0\uff0c\u4e5f\u6ca1\u6df1\u7a76. \n\n. \u5728\u672c\u5730\u5c1d\u8bd5\u7684\u65f6\u5019\uff0c\u5927\u6982\u6539\u5230\u4e86\u8fd9\u4e24\u4e2a\u5730\u65b9. \u54c8\u54c8\u54c8  \u5f88\u591a\u4e8b\u60c5\u8bc1\u660e\uff0c\u4e5f\u8bb8\u771f\u7684\u9700\u8981\u6709\u4e00\u4e2a EasyMode. \u4e2a\u4eba\u89c1\u89e3\n\u8fd9\u4e1c\u897f\u5e94\u8be5\u505a\uff0c\u56e0\u4e3a\u53ef\u4ee5\u964d\u4f4e\u8001\u9879\u76ee\u63a5\u5165\u6210\u672c\uff1b\n\u7528hint\u53c8\u4e0d\u662f\u4e00\u4e2a\u5168\u5c40\u7684\u65b9\u6848\uff1b\n\u800c\u53ea\u8981\u5b9e\u73b0\u4e86\uff0c\u5185\u90e8\u5b9e\u73b0\u7684\u4ee3\u7801\u8d28\u91cf\u5565\u7684\uff0c\u4e34\u65f6\u8bbe\u8ba1\u5565\u7684\uff0c\u5f00\u53d1\u7ec4\u540e\u9762\u53ef\u4ee5\u9010\u6b65\u6d88\u5316\uff0c\u6027\u80fd\u5565\u7684\uff0c\u56e0\u4e3a\u6709\u7f13\u5b58\u6240\u4ee5\u5e94\u8be5\u5176\u5b9e\u8fd8\u597d\uff1b\n\u5bf9\u4f7f\u7528\u8005\u7684\u65e0\u611f\u63a5\u5165\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u7528\u6237\u4f53\u9a8c\n\u8f6f\u4ef6\u4e0d\u50cf\u786c\u4ef6\uff0c\u4e0d\u9700\u8981\u6ca1\u505a\u5230\u5b8c\u7f8e\u5c31\u4e0d\u5f00\u53d1\u5e03\u4f1a\uff0c\u53ef\u4ee5\u5148\u62ff\u51fa\u6765\u518d\u4f18\u5316\u7684. \u5982\u679c\u4ee5\u6269\u5c55\u7684\u8eab\u4efd\uff0c\u7528\u4e00\u4e2a\u522b\u7684SQL\u89e3\u6790\u5668\u591a\u89e3\u6790\u4e00\u904d\uff0c\u662f\u4e0d\u662f\u5c31\u8bf4\u5f97\u8fc7\u53bb\u4e86\u5462. \u4f7f\u52b2\u5411\u5f00\u53d1\u7ec4\u8bc1\u660e\u8fd9\u4e2a\u9700\u6c42\u7684\u6b63\u5f53\u6027\u5fc5\u8981\u6027\uff0c\u4e5f\u8bb8\u5c31\u63d0\u524d\u6392\u671f\u5b9e\u73b0. #290 . \u662f\n\u4e2d\u592e\u4ed3\u5e93\uff08\u5750\u6807\u53d8\u4e86\uff0chttp://search.maven.org/#artifactdetails%7Cio.shardingsphere%7Csharding-jdbc%7C3.0.0.M1%7Cjar\uff09. \u9700\u6c42\u4e0d\u80fd\u8bf4\u662f\u4e0d\u5408\u7406\u7684\u3002\n\u8bbe\u8ba1\u53ef\u80fd\u4e0d\u8be5\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u3002\nFilter Chain \u6a21\u5f0f\u5e94\u8be5\u662f\u4e2a\u4e0d\u9519\u7684\u65b9\u6848\u3002alibaba/druid Filter. \u6269\u5c55\u70b9\u662f\u4e2a\u597d\u4e1c\u897f. \u4ffa\u89c9\u7740\u5427\uff0c\n\u597d\u7684\u6269\u5c55\u70b9\u8bbe\u8ba1\u4e0d\u4f1a\u589e\u52a0\u590d\u6742\u5ea6\uff0c\u751a\u81f3\u6709\u53ef\u80fd\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\u5916\u90e8\u4f7f\u7528\u8005\u751a\u81f3\u4f1a\u8bef\u7528\u6269\u5c55\u70b9\uff0c\u53ef\u80fd\u6269\u5c55\u51fa\u4e00\u4e9b\u7a00\u5947\u53e4\u602a\u7684\u4e1c\u897f\uff0c\u4f46\u8fd9\u4e0d\u662f\u6269\u5c55\u70b9\u7684\u9505\u3002\n\u6807\u51c6\u5316\uff0c\u5fae\u5185\u6838\uff0c\u751a\u81f3\u628a\u4e00\u4e9b\u66fe\u7ecf\u653e\u5728\u6838\u5fc3\u91cc\u9762\u7684\u4e1c\u897f\uff0c\u632a\u51fa\u6765\uff0c\u653e\u5230\u6269\u5c55\u91cc\u9762\uff0c\u662f\u4e00\u4e2a\u503c\u5f97\u8003\u8651\u7684\u9009\u62e9\u3002. -1. ",
    "ben1247": "\u8d5e\u4e00\u4e2a\uff5e. @dzxiang \u6700\u65b0\u7248\u672c\u76841.4.1 \u6d9b\u54e5\u5df2\u7ecf\u4fee\u590d\u4e86\u8be5\u95ee\u9898\uff0c\u6211\u8fd9\u8fb9\u5df2\u7ecf\u6ca1\u6709\u8fd9\u4e2a\u9519\u4e86. ",
    "monkey-an": "\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\uff1a\u5c06\u8868\u53d6\u4e00\u4e2a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u522b\u540d\u3002. ",
    "liushaoming": "\u591a\u8c22\u3002. ",
    "ijiaojian": "\u8c01\u80fd\u63cf\u8ff0\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u4e48\uff1f  \u6211\u4e5f\u9047\u5230\u4e86\uff0c\u66f4\u6362\u4e86\u7248\u672c\u540e\u95ee\u9898\u6ca1\u6709\u4e86\u3002. @terrymanu   \u4e0d\u9700\u8981\u5206\u8868\u7684\u8868\u4e5f\u9700\u8981\u914d\u7f6eTableRule\uff0c\u8bf7\u95ee\u8fd9\u4e2a\u8bbe\u8ba1\u662f\u51fa\u4e8e\u4ec0\u4e48\u8003\u8651\u5462 \uff1f \u56e0\u4e3a\u57281.5.0\u4e4b\u524d\u7684\u7248\u672c\u662f\u4e0d\u9700\u8981\u914d\u7f6eTableRule\u7684. @terrymanu   \u770b\u5230\u5f00\u6e90\u4e2d\u56fd\u5e16\u5b50\u91cc\u9762\u4f60\u4eec\u5199\u76841.5.0.M3\u7248\u672c\u4f1a\u652f\u6301or\u67e5\u8be2\uff0c \u76ee\u524d\u6211\u4f7f\u7528\u76841.5.0.M3\u7248\u672c \uff0c\u4f3c\u4e4e\u8fd8\u662f\u4e0d\u652f\u6301or\u67e5\u8be2\u5462\nSQLParser.java\nprivate void parseConditions(final SQLStatement sqlStatement) {\n        do {\n            parseComparisonCondition(sqlStatement);\n        } while (skipIfEqual(DefaultKeyword.AND));\n        if (equalAny(DefaultKeyword.OR)) {\n            throw new SQLParsingUnsupportedException(getLexer().getCurrentToken().getType());\n        }\n    }. ",
    "liyong7514": "\u8bf7\u63cf\u8ff0\u4e00\u4e0b \u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4e5f\u9047\u5230\u4e86\u3002. ",
    "acseed": "\n@ben1247 \uff0c\u53ef\u4ee5\u786e\u4fe1\u8fd9\u662f\u4e00\u4e2aBUG,\u80fd\u5426\u63d0\u4ea4\u4e00\u4e2aDEBUG\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u6211\u8fd9\u8fb9\u672c\u5730\u6d4b\u8bd5\u6ca1\u51fa\u73b0\u8fc7\uff0c\u751f\u4ea7\u73af\u5883\u6709\u51fa\u73b0\uff0c\u4f46\u4fee\u6539\u65e5\u5fd7\u7ea7\u522b\u8981\u7b49\u4e0b\u4e00\u6b21\u66f4\u65b0\u3002\n\n\u8fd9\u4e2a\u5faa\u73af\u5220\u9664\u6709\u95ee\u9898\uff0c \u6211\u8fd9\u8fb9\u5728\u6709subQuery\u7684\u65f6\u5019\u51fa\u73b0\uff0c \nremove\u4e4b\u540e\u4e0b\u6807\u5c31\u53d8\u4e86\uff0c \u8fd8\u62ff\u4e4b\u524d\u7684\u4e0b\u6807remove\u5c31\u51fa\u95ee\u9898\u4e86\n\u4ee3\u7801\u4f4d\u7f6e\uff1aSelectStatement.resetLimitTokens\nfor (int each : toBeRemovedIndexes) {\n            sqlTokens.remove(each);\n }. \u8fd9\u4e2a\u5faa\u73af\u5220\u9664\u6709\u95ee\u9898\uff0c \u6211\u8fd9\u8fb9\u5728\u6709subQuery\u7684\u65f6\u5019\u51fa\u73b0\uff0c\nremove\u4e4b\u540e\u4e0b\u6807\u5c31\u53d8\u4e86\uff0c \u8fd8\u62ff\u4e4b\u524d\u7684\u4e0b\u6807remove\u5c31\u51fa\u95ee\u9898\u4e86\n\u4ee3\u7801\u4f4d\u7f6e\uff1aSelectStatement.resetLimitTokens\nfor (int each : toBeRemovedIndexes) {\nsqlTokens.remove(each);\n}. fix  \u5728foreach \u6309\u7167\u4e0b\u6807\u5220\u9664\u4f1a\u5bfc\u81f4\u8d8a\u754c. resetLimitTokens fix remove bug. > 1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\n\n\nWhy not respond my comment before?\n   \n\nit is not just simplify the code,  the original code do lead to a bug, the \"toBeRemovedIndexes\"  is the index to remove,  but after sqlTokens remove the first, the index in sqlTokens is changed, this may cause java.lang.IndexOutOfBoundsException,  when select sql has subQuery, the bug occurs, you try. > > 1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\n\n\nWhy not respond my comment before?\n   \n\nit is not just simplify the code,  the original code do lead to a bug, the \"toBeRemovedIndexes\"  is the index to remove,  but after sqlTokens remove the first, the index in sqlTokens is changed, this may cause java.lang.IndexOutOfBoundsException,  when select sql has subQuery, the bug occurs, you try\n\n\nit is my fault not to respond your comment before, sorry. ",
    "zhaoxp1": "\u7ebf\u4e0b\u73af\u588320\u4e2a\u7ebf\u7a0b\uff0c\u5355\u673a\u6267\u884c\u4e86\u4e0b\uff0c\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u751f\u4ea7\u73af\u5883\u6709\u4e0b\u9762\u7684\u5f02\u5e38\uff0c\u95ee\u4e0b\u662f\u540c\u4e00\u4e2a\u95ee\u9898\u5f15\u53d1\u7684\u5417\uff1f\uff08\u6ce8\uff1a\u4f7f\u7528Sharding-JDBC\u7248\u672c: 1.4.0\uff09\nSQL:   select                                 id,   sid,   car_type,   city_id,   user_id,   outer_id,   point_type,   point,   used_point,   status,                  exp_date,   outer_str_id,   ext,   modify_version,   create_time,   update_time                           from   t_driver_score_log               where   sid   =   ?      order   by   create_time   desc               limit   ?,?\nCause:   java.lang.IndexOutOfBoundsException:   Index:   1,   Size:   1\nat   org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\nat   org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:122)\nat   org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:113)\nat   sun.reflect.GeneratedMethodAccessor72.invoke(Unknown   Source)\nat   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat   java.lang.reflect.Method.invoke(Method.java:498)\nat   org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:358)\n...   47   more\n\nCaused   by:   java.lang.IndexOutOfBoundsException:   Index:   1,   Size:   1\n    at   java.util.ArrayList.rangeCheck(ArrayList.java:653)\n    at   java.util.ArrayList.get(ArrayList.java:429)\n    at   com.dangdang.ddframe.rdb.jdbc.util.ParameterList.set(ParameterList.java:74)\n    at   com.dangdang.ddframe.rdb.parser.result.merger.Limit.replaceParameters(Limit.java:56)\n    at   com.dangdang.ddframe.rdb.router.SQLRouteEngine.routeSQL(SQLRouteEngine.java:90). ",
    "StormAll": "\u6b63\u5728\u5904\u7406\u6b64issue\n\u5927\u81f4\u4fee\u6539\u601d\u8def\uff1a\n1\u3001\u5728SQLBuilder\u4e2d\u5bf9SQL\u7247\u6bb5\u589e\u52a0\u662f\u5426\u662f\u989d\u5916\u589e\u52a0\u7684\u6807\u8bc6\n2\u3001\u5728SQLRouteEngine\u7684routeSQL\u65b9\u6cd5\uff0c\u6839\u636e\u8def\u7531\u7ed3\u679c\uff0c\u5904\u7406\u989d\u5916\u589e\u52a0\u7684SQL\u7247\u6bb5\n. ",
    "biakia": "\u7ecf\u8fc7\u6d4b\u8bd5\uff0cShardingConnection\u786e\u5b9e\u652f\u6301\u4e8b\u52a1\uff0c\u4e4b\u524d\u6d4b\u8bd5\u6709\u95ee\u9898\u662f\u56e0\u4e3aSpring\u4e8b\u52a1\u914d\u7f6e\u6709\u95ee\u9898\uff0c\u8c22\u8c22\uff01. ",
    "qiaosonghz": "\u672c\u5730\u505a\u4e86\u5f00\u53d1\u81ea\u6d4b\uff0c \u8ba1\u5212\u6625\u8282\u524d\u63d0\u4ea4pull request\u3002\n\u548c\u5f20\u54e5\u505a\u4e86\u6c9f\u901a\uff0c\u9884\u8ba1\u4eae\u54e5\u8282\u540e\u8bc4\u4f30merge\u3002. \u57fa\u4e8esharding-jdbc1.4.1 \u7248\u672c\u589e\u52a0\u56fa\u5b9a\u5bbd\u5ea6\u652f\u6301\uff0c \u5728\u516c\u53f8\u5185\u90e8\u5df2\u4e0a\u7ebf\u5e76\u8fd0\u884c3\u5468\u5de6\u53f3\uff0c\u6bd4\u8f83\u7a33\u5b9a\u3002. ",
    "spartajet": "\u6211\u81ea\u5df1\u7684\u95ee\u9898\uff0c\u5df2\u7ecf\u89e3\u51b3\uff0c\u4e0d\u597d\u610f\u601d\u3002. ",
    "vainly": "\u95ee\u9898\u5df2\u89e3\u51b3\uff0c\uff0c\u662f\u8868\u8def\u7531\u914d\u7f6e\u65f6\u914d\u7f6e\u9519\u4e86\u3002. ",
    "Jacob201311": "are you sure?. ",
    "cr6588": "where\u540e\u9762\u9700\u8981\u52a0user_id\u6761\u4ef6. \u4f60\u90fd\u4f7f\u7528\u591a\u952e\u6570\u636e\u5e93\u5206\u7247\u4e3a\u4f55ModuloDatabaseShardingAlgorithm\u5b9e\u73b0\u7684\u662fSingleKeyDatabaseShardingAlgorithm\u63a5\u53e3\uff0c\u5e94\u8be5\u662fMultipleKeysDatabaseShardingAlgorithm. ",
    "git-chenhao": "\u4e0a\u6d77\u5b9a\u83f1\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8+http://www.qbaolive.com/. ",
    "fengjianquan9527": "\u4e0a\u6d77\u4e5d\u8109\u4fe1\u606f\u6280\u672f\u6709\u9650\u516c\u53f8(\u4e1c\u65b9\u8f66\u8054)+http://www.dongfang789.com. ",
    "zhaoming-mike": "sharding \u62fc\u5199\u9519\u4e86\u54e6\uff01. ",
    "wu191287278": "\u89c6\u89c9\u4e2d\u56fd https://500px.me. ",
    "xuminwlt": "\u8db3\u8bb0 http://www.fotoplace.cc. \u597d\u7684\uff0c\u4eae\u54e5\uff0c\u4eca\u5929\u665a\u4e9b\u65f6\u5019\u6211\u8c03\u8bd5\u4e00\u4e0b\u3002\n\u4eae\u54e5\u5df2\u7ecf\u63d0\u4ea4\u4e86\u65b0\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u53d1\u73b0\u5e94\u8be5\u662fsql\u6539\u5199\u7684bug. agree, yes, +1. An want to make it.. I test the code from project sharding-spring/sharding-jdbc-spring-boot-starter, It's already support by spring environment.\nconfig\n```\nsharding.jdbc.datasource.names=ds_master,ds_slave_${random.int(2)}\n```\ncode result\nString prefix = \"sharding.jdbc.datasource.\";\n        String dataSources = environment.getProperty(prefix + \"names\");\nthen dataSources print\n- ds_master,ds_slave_0\nor\n- ds_master,ds_slave_1\nConfig in spring boot will prepare some default propertySources like this\n\nPlaceholder ${some.propertie.names} is also supported.\nMaybe I don't get the issue's mean.. I have commit a PR to sharding-spring.. use cglib will ignore the access level, invoke unit test throw -> IllegalArgumentException, different with the jdk invoke -> IllegalAccessException, ignore or replace it?\n@Test(expected = IllegalAccessException.class)\n    @SneakyThrows\n    public void assertInvokeFailure() {\n        JdbcMethodInvocation actual = new JdbcMethodInvocation(JdbcMethodInvocation.build(String.class, String.class.getDeclaredMethod(\"indexOfSupplementary\", int.class, int.class)), new Object[] {1, 1});\n        actual.invoke(\"\");\n    }. @terrymanu I change my test in JMH env at 1.8, the invoke is almost the same to fastMethod, or better, i agree that  it's not the performance  bottleneck in which user scenario, i'll do more try. thanks.\nThe test code\n```\n@OutputTimeUnit(TimeUnit.MILLISECONDS)\n    @BenchmarkMode(Mode.AverageTime)\n    @Benchmark\n    @SneakyThrows\n    public void jdk() {\n        PreparedStatement preparedStatement = new PreparedStatement();\n        for (int i = 0 ;i <= 10000 ; i++) {\n            JdbcMethodInvocation actual = new JdbcMethodInvocation(PreparedStatement.class.getMethod(\"setObject\", int.class, Object.class), new Object[] {1, 100});\n            actual.invoke(preparedStatement);\n        }\n    }\n@OutputTimeUnit(TimeUnit.MILLISECONDS)\n@BenchmarkMode(Mode.AverageTime)\n@Benchmark\n@SneakyThrows\npublic void cgilib() {\n    PreparedStatement preparedStatement = new PreparedStatement();\n    for (int i = 0 ;i <= 10000 ; i++) {\n        JdbcFastMethodInvocation actual = new JdbcFastMethodInvocation(JdbcFastMethodInvocation.build(PreparedStatement.class, PreparedStatement.class.getMethod(\"setObject\", int.class, Object.class)), new Object[] {1, 100});\n        actual.invoke(preparedStatement);\n    }\n}\n\n```\nThe JMH result\n```\nJMH version: 1.19\nVM version: JDK 1.8.0_101, VM 25.101-b13\nVM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/bin/java\nVM options: -Didea.launcher.port=7537 -Didea.launcher.bin.path=/Applications/IntelliJ IDEA 15.app/Contents/bin -Dfile.encoding=UTF-8\nWarmup: 10 iterations, 1 s each\nMeasurement: 10 iterations, 1 s each\nTimeout: 10 min per iteration\nThreads: 1 thread, will synchronize iterations\nBenchmark mode: Average time, time/op\nBenchmark: me.j360.tools.ref.MethodInoveBenchmark.cgilib\nRun progress: 0.00% complete, ETA 00:00:40\nFork: 1 of 1\nWarmup Iteration   1: 17.867 ms/op\nWarmup Iteration   2: 5.198 ms/op\nWarmup Iteration   3: 3.838 ms/op\nWarmup Iteration   4: 3.848 ms/op\nWarmup Iteration   5: 3.705 ms/op\nWarmup Iteration   6: 3.739 ms/op\nWarmup Iteration   7: 3.726 ms/op\nWarmup Iteration   8: 3.870 ms/op\nWarmup Iteration   9: 4.008 ms/op\nWarmup Iteration  10: 4.075 ms/op\nIteration   1: 4.639 ms/op\nIteration   2: 4.027 ms/op\nIteration   3: 4.513 ms/op\nIteration   4: 4.916 ms/op\nIteration   5: 4.685 ms/op\nIteration   6: 5.879 ms/op\nIteration   7: 4.482 ms/op\nIteration   8: 4.685 ms/op\nIteration   9: 6.009 ms/op\nIteration  10: 4.347 ms/op\nResult \"me.j360.tools.ref.MethodInoveBenchmark.cgilib\":\n  4.818 \u00b1(99.9%) 0.966 ms/op [Average]\n  (min, avg, max) = (4.027, 4.818, 6.009), stdev = 0.639\n  CI (99.9%): [3.852, 5.784] (assumes normal distribution)\nJMH version: 1.19\nVM version: JDK 1.8.0_101, VM 25.101-b13\nVM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/bin/java\nVM options: -Didea.launcher.port=7537 -Didea.launcher.bin.path=/Applications/IntelliJ IDEA 15.app/Contents/bin -Dfile.encoding=UTF-8\nWarmup: 10 iterations, 1 s each\nMeasurement: 10 iterations, 1 s each\nTimeout: 10 min per iteration\nThreads: 1 thread, will synchronize iterations\nBenchmark mode: Average time, time/op\nBenchmark: me.j360.tools.ref.MethodInoveBenchmark.jdk\nRun progress: 50.00% complete, ETA 00:00:21\nFork: 1 of 1\nWarmup Iteration   1: 5.571 ms/op\nWarmup Iteration   2: 4.945 ms/op\nWarmup Iteration   3: 4.338 ms/op\nWarmup Iteration   4: 4.210 ms/op\nWarmup Iteration   5: 4.345 ms/op\nWarmup Iteration   6: 4.241 ms/op\nWarmup Iteration   7: 4.247 ms/op\nWarmup Iteration   8: 4.315 ms/op\nWarmup Iteration   9: 4.319 ms/op\nWarmup Iteration  10: 4.264 ms/op\nIteration   1: 4.257 ms/op\nIteration   2: 4.541 ms/op\nIteration   3: 4.273 ms/op\nIteration   4: 4.280 ms/op\nIteration   5: 4.319 ms/op\nIteration   6: 4.295 ms/op\nIteration   7: 4.374 ms/op\nIteration   8: 4.387 ms/op\nIteration   9: 4.318 ms/op\nIteration  10: 4.353 ms/op\nResult \"me.j360.tools.ref.MethodInoveBenchmark.jdk\":\n  4.340 \u00b1(99.9%) 0.125 ms/op [Average]\n  (min, avg, max) = (4.257, 4.340, 4.541), stdev = 0.083\n  CI (99.9%): [4.215, 4.465] (assumes normal distribution)\nRun complete. Total time: 00:00:41\nBenchmark                    Mode  Cnt  Score   Error  Units\nMethodInoveBenchmark.cgilib  avgt   10  4.818 \u00b1 0.966  ms/op\nMethodInoveBenchmark.jdk     avgt   10  4.340 \u00b1 0.125  ms/op\n. close the method access check\nresult:\nBenchmark                    Mode  Cnt  Score   Error  Units\nMethodInoveBenchmark.cgilib  avgt   10  5.268 \u00b1 0.924  ms/op\nMethodInoveBenchmark.jdk     avgt   10  2.438 \u00b1 0.140  ms/op\n```. ",
    "kingcodeyu": "\u6df1\u5733\u5c0f\u725b\u5728\u7ebfhttps://www.xiaoniu88.com/. ",
    "duerlatter": "\u4e2d\u7b56\u8f66\u7a7a\u95f4 http://www.zcckj.com . agree, yes, +1. ",
    "zhikaichen123": "TCL http://yq.tclo2o.cn. ",
    "zackwrj": "\u98df\u8681\u517d\u7f51\u7edc http://www.41soo.com. ",
    "chinacode": "\u6df1\u5733\u7537\u8863\u5e93\u79d1\u6280\u6709\u9650\u516c\u53f8 https://www.nanyiku.com/. +1. i want to do it . ",
    "yiwugou": "\u4e49\u4e4c\u8d2d http://www.yiwugou.com. \u5bf9\u7684 \u5c31\u662f\u7c7b\u4f3c druid filter. ",
    "FlorentinoWen": "\u5e7f\u897f\u58ee\u65cf\u81ea\u6cbb\u533a\u56fd\u571f\u8d44\u6e90\u4fe1\u606f\u4e2d\u5fc3 + z.gxdlr.gov.cn. ",
    "Anricx": "\u6df1\u5733\u5e02\u795e\u5dde\u8def\u8def\u901a\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8 https://660pp.com. sharding-jdbc-example-mybatis.zip\n\u8bf7\u53c2\u8003\u3002. \u7531\u4e8e\u5e95\u5c42\u89e3\u6790ResultSetMetaData\u65f6\u5c06\u67e5\u8be2\u4e2d\u7684\u2018\u2019\u7b26\u53f7\u53bb\u6389\u4e86\uff0c\u6240\u4ee5\u5728this.labelAndIndexMap\u4e2d\u4e16\u7eaa\u5b58\u50a8\u7684\u5217\u540d\u53d8\u6210\u4e86 COUNT(status) , \u5b9e\u9645\u5728AbstractMemoryResultSetMerger\u4e2dgetValue\u65b9\u6cd5\u5728\u4ecethis.labelAndIndexMap\u53d6\u5bf9\u5e94\u5217\u65f6\u4f7f\u7528\u7684\u5217\u540d\u4e3a\u67e5\u8be2SQL\u4e2d\u7684 COUNT(status`) \u5bfc\u81f4\u672a\u627e\u5230\u5217\u89e6\u53d1\u4e86\u9519\u8bef\u3002\n\n\u5f53\u7136SQL\u5e94\u8be5\u8fd9\u91cc\u52a0\u4e0a\u522b\u540d\uff0c\u5c31\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u9519\u8bef\u3002\n\u6211\u4ee5\u4e3a\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u6216\u8bb8\u662f\u5728SQLUtil.getExactlyValue\u4e2d\u5982\u679c\u662f\u805a\u5408\u51fd\u6570\u4e2d\u7684\u662f\u5426\u5c31\u53ef\u4ee5\u8003\u8651\u4e0d\u8981\u79fb\u9664\u7279\u6b8a\u7b26\u53f7\uff1f\u5c3d\u91cf\u5728\u6700\u7ec8\u5c06\u7ed3\u679c\u96c6\u8fd4\u56de\u6700\u7ec8\u5b57\u6bb5\u624d\u505a\u8f6c\u6362\u3002. ok english is good. not as bug?. default with mysql's configuration, and support custom settings.. \n",
    "komawei": "\u6df1\u5733\u5e02\u8d62\u5bb6\u670d\u9970\u6709\u9650\u516c\u53f8 http://www.eeka.cn/. \u6211\u7ed9[BD_Dictionary \u914d\u4e0a\u4e86\u5206\u8868\u7b56\u7565\u4e4b\u540e\uff0c\u62a5\u9519\u6d88\u5931\u3002\n\u610f\u601d\u662frdb:default-table-strategy  \u6ca1\u6709\u751f\u6548\uff1f\n\u4ee5\u4e0b\u662f\u6211\u52a0\u4e0a\u7684\u914d\u7f6e\uff1a\n\n. \u9ed8\u8ba4\u6570\u636e\u6e90\u6211\u4e5f\u914d\u4e0a\u4e86\uff1a\n\u4e0d\u8fc7\u8fd8\u662f\u62a5\u8fd9\u4e2a\u9519. \u4e5f\u5728\u7684\uff0c\u73b0\u5728\u662f\u6211\u6bcf\u4e2a\u8868\u90fd\u914d\u4e0a\u4e86\u4e0d\u9700\u8981\u5206\u8868\u7684\u7b56\u7565\uff0c\u624d\u4e0d\u62a5\u9519\u4e86. =\u3002=\n\u6211\u6ca1\u8bf4\u8fd9\u6837\u6539\u5199\u6709\u9519\uff0c\u53ea\u662f\u60f3\u95ee\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u53d6\u7b2c100000\u9875\u7684\u65f6\u5019\uff0cSQL\u4f1a\u88ab\u6539\u5199\u4e3a0, 100010\uff0c\n\u8fd9\u6837\u4e0d\u4f1a\u5185\u5b58\u6ea2\u51fa\u5417\n. @terrymanu \u6c42\u89e3\u7b54\uff0c \u6211\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u80fd\u5728\u591a\u5206\u7247\u7684\u60c5\u51b5\u4e0b\u5b9a\u4f4d\u5230\u6bd4\u5982\u7b2c10000\u9875\u7684\u6700\u540e\u4e00\u6761\u6570\u636e\u7684ID. ",
    "hubigsea": "\u4e2d\u901a\u5feb\u9012\u80a1\u4efd\u6709\u9650\u516c\u53f8  http://www.zto.com/. ",
    "Breggor": "\u522b\u5403\u80d6 http://www.biechipang.net/index.html. ",
    "yekairush": "\u534e\u590f\u4fe1\u8d22https://www.huaxiafinance.com/. ",
    "lihbing": "\u4f60\u6211\u91d1\u878dhttps://www.niiwoo.com/. ",
    "15827071127": "CIBN\u5fae\u89c6\u542c\uff08\u539f\u5168\u805a\u5408\uff09http://www.91vst.com/. ",
    "baidan": "\u4e94\u8c37\u56fe\u50cf http://www.5grain.com/. ",
    "aloxc": "\u5929\u6daf\u793e\u533a http://www.tianya.cn \u4f7f\u7528\u7248\u672c1.5.0. ",
    "xiaoliqiang": "oppo  http://www.oppo.com. ",
    "bingzhilanmo": "\u8d27\u8f66\u5e2e http://www.huochebang.com/. ",
    "slatonwu": "\u9996\u6c7d\u7ea6\u8f66   http://www.01zhuanche.com/. ",
    "aseaday": "\u4e0a\u6d77\u5357\u6f6e\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8 https://ruff.io. ",
    "zjqwll": "\u6d59\u6c5f\u80b2\u4f53\u79d1\u6280\u6709\u9650\u516c\u53f8 http://www.tvlongmao.com. \u6d59\u6c5f\u80b2\u4f53\u79d1\u6280\u6709\u9650\u516c\u53f8 http://www.tvlongmao.com. ",
    "jklliang": "\u6d77\u5c14\u91d1\u878d\u63a7\u80a1\u96c6\u56e2-\u6d77\u5c14\u6d88\u8d39\u91d1\u878d www.haiercash.com  870558761\u6c42\u8fdbqq\u7fa4. \u80fd\u591f\u786e\u5b9a\u662fbug\u5bfc\u81f4\n\u8ddf\u8e2a\u4e86oracle\u9a71\u52a8\u7684OraclePreparedStatement\u662f\u80fd\u591f\u8fd4\u56de\u66f4\u65b0\u6761\u6570\u7684\uff0c\u4f46\u662f\u5f53\u6267\u884c\u5b8cPreparedStatementExecutor\u4e2dcallback\u65b9\u6cd5\u540eOraclePreparedStatement\u4e2d\u7684noMoreUpdateCounts\u6539\u6210\u4e86true,\u6539\u6210true\u4e4b\u540e\uff0c\u5c31\u4e0d\u4f1a\u8fd4\u56de\u6761\u6570\u4e86\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u627e\u5230\u4ec0\u4e48\u5730\u65b9\u5bf9noMoreUpdateCounts\u6267\u884c\u4e86\u4fee\u6539\n```\n/\n     * Execute SQL.\n     \n     * @return return true if is DQL, false if is DML\n     /\n    public boolean execute() {\n        List result = executorEngine.executePreparedStatement(sqlType, preparedStatementUnits, parameters, new ExecuteCallback() {\n        @Override\n        public Boolean execute(final BaseStatementUnit baseStatementUnit) throws Exception {\n            return ((PreparedStatement) baseStatementUnit.getStatement()).execute();\n        }\n    });\n    if (null == result || result.isEmpty() || null == result.get(0)) {\n        return false;\n    }\n    return result.get(0);\n}\n\n. bug\u89e3\u51b3\n![default](https://user-images.githubusercontent.com/20180064/35551186-fa9ba6c4-05c8-11e8-834f-24c23fcad1a0.png)\n. AbstractStatementAdapter \u4fee\u6539\u4e3a\u5982\u4e0b\u95ee\u9898\u89e3\u51b3\n@Override\n    public final int getUpdateCount() throws SQLException {\n        long result = 0;\n        boolean hasResult = false;\n        for (Statement each : getRoutedStatements()) {\n            // update 0130\n            int updateCount = each.getUpdateCount();\n            if (updateCount > -1) {\n                hasResult = true;\n            }\n            result += updateCount;\n        }\n        if (result > Integer.MAX_VALUE) {\n            result = Integer.MAX_VALUE;\n        }\n        return hasResult ? Long.valueOf(result).intValue() : -1;\n    }\n```. \u55ef\uff0c\u662f\u7684\uff0coracle\u9a71\u52a8\u7248\u672c\u662f\u53ef\u80fd\u6709\u95ee\u9898\uff0c\u6211\u4f7f\u7528\u7684oracle\u9a71\u52a8\u662f ojdbc6 11g,\u7531\u4e8e\u6ca1\u6709\u73b0\u6210\u768412c\u6216\u662f10g\u7684\u6570\u636e\u5e93\uff0c\u8fd8\u6ca1\u6709\u5bf9\u5176\u5b83\u7248\u672c\u8fdb\u884c\u6d4b\u8bd5\u3002. \u5176\u5b83\u7248\u672c\uff0c\u6211\u89c9\u5f97\u53ea\u662f\u53ef\u80fd\u6709\u95ee\u9898\uff0cojdbc6 11g\u662f\u76ee\u524d\u6700\u5e38\u7528\u7684\u9a71\u52a8\u7248\u672c\uff0c\u5176\u5b83\u7248\u672c\u662f\u5426\u4e5f\u8fd9\u6837\uff0c\u6211\u56de\u5934\u6d4b\u8bd5\u4e00\u4e0b\u3002sharding jdbc \u5e94\u8be5\u5bf9ojdbc6 11g\u8fdb\u884c\u652f\u6301\u3002. ",
    "TaXueWWL": "\u9ad8\u9633\u6377\u8fc5\u4fe1\u606f\u6280\u672f\u6709\u9650\u516c\u53f8  http://www.19pay.com.cn/. ",
    "xiaofuhao": "\u6211\u7231\u5361  www.51credit.com. ",
    "lianzhichao": "\u4e0a\u6d77\u4e3d\u4eba\u4e3d\u5986 http://www.lrlz.com/    qq : 915697213 \u6c42\u8fdb\u7fa4. ",
    "huisongyang": "\u4e2d\u901a\u5feb\u9012 www.zto.com. ",
    "firebata": "\u9ed1\u80e1\u5b50\u6e38\u620f  www.bbgameonline.com. ",
    "loysen": "\u6d59\u6c5f\u4f17\u5320\u4fe1\u606f\u6280\u672f\u6709\u9650\u516c\u53f8+http://www.youx.mobi/. ",
    "linminqin": "\u968f\u624b\u8bb0 www.sui.com. ",
    "xunzhaotianhe": "\u7f8e\u5229\u91d1\u878d https://www.mljr.com/. \u7f8e\u5229\u91d1\u878d\u8fd9\u51e0\u4e2a\u5b57\u6211\u4e0a\u6b21\u5199\u9519\u4e86\uff0c\u5199\u6210\u4e86\u201c\u7f8e\u4e3d\u91d1\u878d\u201d\uff0c\u73b0\u5728sj\u5b98\u7f51-\u793e\u533a-\u91c7\u7528\u516c\u53f8 \u8fd9\u91cc\u663e\u793a\u7684\u662f\u201c\u7f8e\u4e3d\u91d1\u878d\u201d\uff0c\u53ef\u4ee5\u4fee\u6539\u6210\u201c\u7f8e\u5229\u91d1\u878d\u201d\u5417\uff0c\u8c22\u8c22. \u5929\u6cb3\u7684\u535a\u5ba2 \uff1ahttps://my.oschina.net/u/3775437/blog. ",
    "sunnykaka": "\u56e2\u8d37\u7f51 https://www.tuandai.com. ",
    "ofdata": "\u4eac\u4e1c\u5546\u57ce\u6d77\u5916\u7ad9 https://www.jd.ru https://www.joybuy.com. ",
    "sixizi": "\u4eac\u4e1c\u91d1\u878d+http://jr.jd.com. ",
    "weilp": "\u8d85\u7ea7\u84dd\u9886\u7f51\u7edc\u79d1\u6280\u670d\u52a1\u6709\u9650\u516c\u53f8  http://www.chaojilanling.cn. ",
    "liunianmoshi": "\u6613\u8f66\u7f51 http://www.yiche.com  \u8d44\u8baf. ",
    "tristaZero": "@liunianmoshi \u611f\u8c22\u652f\u6301\uff0c\u5df2\u52a0\u5165\u4f7f\u7528\u516c\u53f8\u5217\u8868~. @weilp \u611f\u8c22\u652f\u6301\uff0c\u5df2\u52a0\u5165~\u4f7f\u7528\u516c\u53f8\u5217\u8868. @zichuangyang \u6b22\u8fce\u52a0\u5165~\n\u5df2\u52a0\u5165 \u4f7f\u7528\u516c\u53f8\u5217\u8868. \u6b22\u8fce\u4f7f\u7528~\u5df2\u7ecf\u5165\u4f7f\u7528\u516c\u53f8\u5217\u8868\uff01 @bai020 . Welcome here, Thanks for using SS\uff01 @eaglewa . Welcome and thanks for joining us. @JiXiaodong \nYour company now is in End users' List. Welcome and thanks for joining us. @markflyfly \nYour company now is in End users' List. @jack-zdl Hi, sir. Your company now is added to End users' List. Thanks for your attention.. @cxdhefei  Hi, sir. Welcome to join us, Your company now is added to End users' List.. @lfg777 @tianbin1001 @life300131 @wyzssw @linkgo8391 @starcwang \nWelcome here. Your company is now in our user list.. > \u5927\u641c\u8f66- https://www.souche.com/zh/\n@liweifengwf \nWelcome~. @clin2y Hi, welcome~\nYour company is now in our user list.. @fg0711 @zhuchao941 welcome~. agree, yes, +1. +1. Hi, @zy425407824, I write doSharding and throw self-defined exception using 3.0.0.M1, but i can not get SQLException, can you give me more detail about your issue? What's more, when try it using 3.0.0.M2, i can get my defined exception.. Hi, @zy425407824 Some tests have been given, if you have any problems, please contact me, Thanks.. @zhangfeibiao hi, now i focus on this issuse. Did you join in your Wechat group? Please contact with trista on Wechat group, so we can talk more, thanks a lot.. Hi, @zhangfeibiao So far, I haven't received your friend request yet, so i can not get detail about your issue. But, i tried to reappear your problem. \nThat is, there are two tables t1 and t2, without sharding rule but existed in the same default datasource, and i use the SQL of select * from t1 left join t2 on t1.order_id = t2.order_id to do query. The result is the expected one.\nThe difference between yours and mine is the vesion of Sharding-JDBC. Also i read the related code of the Version 1.5.3, if my case is same with yours, i think Sharding-JDBC of Ver.1.5.3 will cause this problem, but Ver 3.0.0.M1 will not.\nSo i suggest you to use Sharding-JDBC with latest version. Thanks a lot, if any problem, please let me know.. Please refer to #1004, Thanks a lot.. All done.. duplicate with #919.\n. @olderzhou \nHi, sir. After we analyze your problem, we decide to fix this problem and give an enhancement for Sharding Orchestration. \nThe reason of a boom of connection is as follows:\n The new datasources will be created using the minIdle configuration of datasources in registry when new instance is online.\n The old datasources are not be closed when configuration in registry is updated.\nPlease refer to the issue #1150 , #1151 to solve this issue.\nAny problems, please contact us.\nP.S. Can you edit the title of this issue in English? Thanks.\n. done.. @zsf513 Hi, can you provide more details about this issue?\nHow is your config about sharding? What database do you use? Or, can we talk on Wechat?. When the DataSourceName configured  is different with the actual database name, the statement 'SHOW COLUMNS FROM tbl_name [FROM db_name] ' will get error. This is because the sharding SQLBuilder can not can the actual database name to replace the defualt database name.\nSo, this enhancement will analyze JDBC Url to get the actual database name to replace the  defualt database name.. fixed in Support authorization parsing for Sharding core #996.. @jinruin Hi, can you give me some code of your steps described above? what's the meaning of transaction? Is it that you use transaction of JDBC?. Thanks for your comment, and M2 is coming soon.\nIf you have a problem, please submit an issue.\n@HanYL-coder \n. To config props for MasterSlave rule, not just for Sharding rule, we need to do work as follows:\nAdd modules in Sharding core.\nSupport it in Sharding JDBC and Yaml.\nSupport it in Spring namespace.\nSupport it in Spring boots.\nSupport it in Sharding Proxy.\nSupport to store the props config in registry.\n\n. fixed it.. fixed it at #1039 . all done.. @dongweizhao Thanks for your issue, we have fixed this problem in 3.0.0.M2, and also some modules are optimized to capture excpetions.. please refer to ISSUE #1004.. Here is second bug,\nSharding Proxy can not catch exceptions except for SystemException and SQLException, therefore other exceptions will make command window froze.. Thank you for your reply.. After investigating, Our parser can parse out the logic table name, and when do routing, we will push all tables that do not been configured in configuration to default data source. If you do not configure default data source either, an error will appear.. When the following dependencies are configured togather, the latter will be invalid. Please remove the \nformer to use orchestration-spring-boot.\n```\n\nio.shardingsphere\nsharding-jdbc-spring-boot-starter\n${shardingsphere.version}\n\n\nio.shardingsphere\nsharding-jdbc-orchestration-spring-boot-starter\n${shardingsphere.version}\n\n``. agree, yes, +1. Hi, @will-xlz Did this execption happen everytime? If the data of datas column is small, will this problem happen?\nCan you provide any code examples for us ? I try to simulate your environment, but this problem can not reoccur.\nOr can you use our [example project](https://github.com/sharding-sphere/sharding-sphere-example) to make this exception reappreared?. Hi, @mzmzo . Why don't you use this one ?\nsharding.jdbc.datasource.ds_0.url=jdbc:sqlserver://dev.database.chinacloudapi.cn;DatabaseName`=sharding;sendStringParametersAsUnicode=false\nPlease refer to \nhttps://docs.microsoft.com/en-us/sql/connect/jdbc/connection-url-sample?view=sql-server-2017\nP.S This problem will be optimized in 3.0.0.M4.. @mzmzo Thanks for your issue, we fix it in #1336. Please use 3.0.0.M5. @tblueprint Hi, this problem has been fixed, the issue is #1311.\nPlease use the latest version of sharding-sphere-example to run.. @feelwing1314 Hi, thanks for your pr. In my opinion, your pr is a great enhancement for sharding-spring-boot, but now sharding-spring is an independent sub-project as sharding-spring, so can you create a new pr for sharding-spring with the detail of this pr?\nIn addtion, my suggestion for this pr are as follows:\n  Please extract a new function to get dataSourceList\n  Instead of creating two classes ofSpringBootShardingInlineTest and SpringBootMasterSlaveInlineTest, can you move assertWithShardingDataSource() to SpringBootShardingTest and move assertWithMasterSlaveDataSource() toSpringBootMasterSlaveTest? Of cource, they need new function names.. @feelwing1314 Hi, is there any problem to make this pr available? If so, please contact me. \nMoreover, i do not know whether you are interested in another requirement presented by ShardingSphere community, which is related to this one, i.e, The Sharding configuration of springboot can support not only inline expression, but springboot placeholder, e.g, person.age=${random.int}.\nJust do it in your own pace, welcome subscribe our dev mail list, so we can talk more.. Hi, please check your configuration here:\ndefault-database-strategy:\n      inline:\n        sharding-column: user_id\n        algorithm-expression: ds-$->{user_id % 2}\n    binding-tables: \n    tables:\n      t_emp:\n        actual-data-nodes: ds-default.t_emp\n        key-generator-column-name: eid. @weichaocst Hi, please refer to  the orchestration chapter on our official website.. +1. @caixinning @zhfeng Hi, thanks for your reference url, protocal patttern is added in  #1377 .. More tasks are as follows:\n\n[x] Remove DataSourceParameter from orchestration module.\n[x] Make sharding and masterSlave stored consistently in orchestration.\n[x] Make jdbc and proxy stored consistently in orchestration.\n[x] Delete YamlRuleConfiguration.\n[x] Delete ProxyDisabledStateEventBusEvent.\n[x] Fix the bug that authentication configuration is not watched.\n[x] Fix the bug that when read configuration from registry, orchestrationFacade can not be initialized well.\n[x] Fix the bug that when update one certain schema, proxy will clear all schemas.\n[x] Revoke the API of meta for shardingSchema\n[x] Disable master database can not be permiteed.\n[x] ConfigMap can be used in proxy.\n[x] Modify api for RuleConfiguration(?).\n[x] Make configMap and configuration watched togather(?).. @Lange-Li \nHi, when you set masterRouteOnly = true manually, will you want to set it to false afterwards\uff1f. Basic DISTINCT syntaxes have been supported now, here is  the detail of Support SQL. Any suggestion, please contact us.. Hi, maybe @Setter can be remove, can you check it again?\n@Setter\n @Getter\n private boolean masterRouteOnly;. @loxp Good job.\n@terrymanu Please merge this PR, thanks a lot.. @JpressProjects  Hi, can you give me more detail about this issue? What are you going to do when you get other datatype of generatedKey\uff1fMaybe you want to store this generatedKey in database in the VARCHAR datatype?. @JpressProjects Thanks for your reply, now we are going to make this interface to be,\npublic interface KeyGenerator {\n    Comparable<?> generateKey();\n}\nDo you think that will be better ?. @yangpancode Hi, sir thanks for your issue, we have fixed this problem in our next version on December 20th.\n\n@terrymanu Please set the label of this issue to fixed or solved.. @chinacode \nHi, welcome. You can do it at your own pace, but can you give us an approximate finish time? . Thanks @xuminwlt to raise PR#13 to finish this task, and it was merged already.. @xuminwlt Hi, do you want to accept this task? And you can do it by your own pace, but can you tell us an approximate finish time?. @xuminwlt  Thanks for your PR#13, and it was merged already.. Bug Description:\nThe use of Sharding-JDBC in projects equipped with iBATIS+HikariCP will lead to exception in 30 minutes after the project starts:\ncom.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.\nCause Analysis:\nAs initializing, Sharding-JDBC will save a copy of DatabaseMetaData citation through some connection in database connection pool. Since the default maxLifetime value of HikariCP is 1800000 (30 minutes), the connection will be taken back by the connection pool after 30 minutes. Also, iBATIS checks DatabaseMetaData before each query, if it still acquires DatabaseMetaData through that connection, the above exception will appear.. Hi, thanks  for your issue. This error occurs because column row of order_item_goods_out is a keyword for antlr parsing of MySQL. We will fix this bug in next version, if you want to avoid this situation, please change the column name of row.\n@codefairy08 , please keep you updated here.. This problem has been fixed in 4.0.0.M1-SNAPSHOT.. Hi, @joooohnli \nFor the first exception, please notice the urls of za_blacklist_s and za_blacklist_m are same, when za_blacklist_s datasource is closed, the  za_blacklist_m datasource definitely closed as well.\nFor the second exception, can your provide more detail? Do you create OrchestrationShardingDataSource? And what do you do to make program throw this exception?. Thanks for your reply. @joooohnli \nFirstly, two of those exception are throwed in different situation, right?\nSecondly, let's check the launch step for the second exception,\n1. Start A instance by YamlOrchestrationShardingDataSourceFactory.createDataSource(yamlFile) and upload the config to ZK.\n2. Start B instance by YamlOrchestrationShardingDataSourceFactory.createDataSource(yamlFile)  with the uploaded config from A\n3. Second exception happened\nIs it right\uff1f. @joooohnli Thanks for your reply, we have fixed the second problem. For the first one, maybe it is not a bug, but an optimization. We will consider do it latter, but really welcome you to raise a pr for the first one, can you join us?. Can you give us some examples about this issue? I can not make it recurring.\n@andyzhx . Hi, in DemoApplicationTests getByUserId(), do you use the following configuration?\nsharding:\n  jdbc:\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&characterEncoding=utf8&useSSL=false\n        username: root\n        password:\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true&characterEncoding=utf8&useSSL=false\n        username: root\n        password:\n    config:\n      sharding:\n        tables:\n          t_order:\n            key-generator-column-name: id\n        props:\n          sql.show: true\n      masterslave:\n        name: ds_ms\n        master-data-source-name: ds0\n        slave-data-source-names: ds1\n        load-balance-algorithm-type: round_robin\n      props:\n        sql:\n          show: true\nIf you just want to use Read-write splitting, here is  the correct cconfiguration:\nsharding:\n  jdbc:\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&characterEncoding=utf8&useSSL=false\n        username: root\n        password:\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true&characterEncoding=utf8&useSSL=false\n        username: root\n        password:\n    config:\n      masterslave:\n        name: ds_ms\n        master-data-source-name: ds0\n        slave-data-source-names: ds1\n        load-balance-algorithm-type: round_robin\n      props:\n        sql:\n          show: true\nBut when i modify your configuration, i also get this exception:\n```\njava.lang.IllegalStateException: Failed to load ApplicationContext\nat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)\nat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)\nat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)\nat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)\nat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\nat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\nat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\nat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\nat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\n\nCaused by: java.lang.ClassCastException: java.lang.NoClassDefFoundError cannot be cast to [Ljava.lang.Object;\n    at org.springframework.boot.context.properties.EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar.lambda$collectClasses$1(EnableConfigurationPropertiesImportSelector.java:83)\n    at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:267)\n    at java.util.LinkedList$LLSpliterator.forEachRemaining(LinkedList.java:1235)\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n    at org.springframework.boot.context.properties.EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar.collectClasses(EnableConfigurationPropertiesImportSelector.java:85)\n    at org.springframework.boot.context.properties.EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar.getTypes(EnableConfigurationPropertiesImportSelector.java:78)\n    at org.springframework.boot.context.properties.EnableConfigurationPropertiesImportSelector$ConfigurationPropertiesBeanRegistrar.registerBeanDefinitions(EnableConfigurationPropertiesImportSelector.java:70)\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:358)\n    at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:357)\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:145)\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)\n    at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328)\n    at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)\n    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)\n    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)\n    at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:139)\n    at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\n    at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)\n    ... 24 more\n```. @andyzhx . Hi, thanks for your pr.\nThis pr will reduce the number of exceptions during renewing datasources. But it will also make connections become double during datasource switching. Moreover, if there is a number limit for connections, new datasouce can not be created probably. Which one do you think is better for the production environment?\nThis issue will tell you more, i am waiting for your reply.. @zouxiaoming2000 \nHi, i speculate you mistake this setting item.\nIf you set sharding.jdbc.config.orchestration.overwrite to false, the local configuration will not be written to registry, and the shardingSphere will start up with local config.  if you want to use the configuration from regsitry, you only need to write the configuration of zookeeper into configuration file.. @xiaoxing598 \nHere is exmaple.\nHow to use your customized sharding statergy? Please refer to:\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.preciseAlgorithmClassName=io.shardingsphere.example.algorithm.PreciseModuloShardingTableAlgorithm. @wayne0zhang which version do you use?\nIn latest version, i.e.,4.0.0.M1-SNAPSHOT,\n```\npackage org.apache.shardingsphere.core.routing.type.standard;\nprivate List getTableShardingValuesFromHint() {\n        return getRouteValues(HintManagerHolder.getTableShardingValues(logicTableName));\n    }\n```\nWe get shardingValues from HintManagerHolder, where user puts shardingValues. And then we will pass shardingValues to doSharding() in HintShardingAlgorithm, and calculate the target tables by calling doSharding() in HintShardingAlgorithm.\nTherefore, shardingColumns in HintShardingStrategy will not be used, but doSharding() in HintShardingAlgorithm will be called anyway.. @wayne0zhang  I am sorry, but we will release our next version of Apache in this or next month, and then you can find it in Maven. Thanks for your attention.. Please support configuration file, and your core JAVA source code that can show\nhow you use PreparedStatement.addBatch() and PreparedStatement.executeBatch(). If you execute a simple INSERT VALUES() by using this configuration, is it ok?\nBy the way, can you provide more exception log? I have no idea of how it happens.\nIf you are free, can you try to debug it?\n. @maxiaoxian . If refer to other event names, e.g. MasterSlaveRuleChangedEvent, AuthenticationChangedEvent, maybe SchemaAddChangedEvent can make all names in the consistent format.. If refer to other event names, e.g. MasterSlaveRuleChangedEvent, AuthenticationChangedEvent, maybe this name can make all names in the consistent format.. Because we need to distinguish existed schemas and new one, which will be treated differently.. Please refer to other event names, e.g.PropertiesChangedEvent, ShardingRuleChangedEvent.. It is renamed to isOwnCompleteConfigurations, is't ok\uff1f. Please refer other event names.. return IgnoredChangedEvent in createShardingOrchestrationEvent(final DataChangedEvent event). More discussions here.. It is only used here, what do your mean of common place?. If we refer to other event names, e.g. MasterSlaveRuleChangedEvent, DataSourceChangedEvent, maybe IgnoredChangedEvent is better?. Because i want those methods only to be used by its outer class.. ",
    "zichuangyang": "\u5317\u4eac\u4e91\u5e90\u79d1\u6280\u6709\u9650\u516c\u53f8 www.cloudansys.com. ",
    "bai020": "\u54d4\u54e9\u54d4\u54e9\u5f39\u5e55\u7f51\uff0chttps://www.bilibili.com/\n\u54d4\u54e9\u54d4\u54e9(\u309c-\u309c)\u3064\u30ed\u5e72\u676f~-bilibili. ",
    "eaglewa": "\u767e\u59d3\u7f51+http://www.baixing.com/. ",
    "JiXiaodong": "\u6bcf\u65e5\u4f18\u9c9c\u4fbf\u5229\u8d2d www.imrfresh.com. ",
    "markflyfly": "\u5154\u5c55\uff0c\u5feb\u901f\u5236\u4f5cH5\u5e73\u53f0  www.rabbitpre.com. @tristaZero thanks too!. ",
    "jack-zdl": "\u7b56\u8d62\u5e73\u53f0 https://www.cypfintech.com/. ",
    "cxdhefei": "\u79d1\u5927\u8baf\u98de http://www.iflytek.com/.  I have the same problem as you @olderzhou \uff0cDistributed deployment will emerge\uff01\uff01. +1. ",
    "anjingxz": "\u4eac\u4e1c\u5927\u6570\u636e\u4e0e\u667a\u80fd\u4f9b\u5e94\u94fe\u4e8b\u4e1a\u90e8. ",
    "lferic": "\u597d\u672a\u6765\u57f9\u4f18\u7814\u53d1\u90e8+\u57f9\u4f18\u4e1a\u52a1\u7cfb\u7edf. ",
    "theagechen": "\u5317\u4eac\u822a\u5929\u957f\u5cf0\u79d1\u6280\u5de5\u4e1a\u96c6\u56e2\u6709\u9650\u516c\u53f8  +  http://www.ascf.com.cn/n4194536/index.html. ",
    "joey168": "\u4e1c\u839e\u5e02\u5927\u6613\u4ea7\u4e1a\u94fe\u670d\u52a1\u6709\u9650\u516c\u53f8 https://www.dayi35.com. @terrymanu When is 3.0.0M3 pushed to Maven warehouse? thanks. ok,thank you for the answer!. looking forward to the official version of 3.0.0. thank you!!. the use of cross year queries will involve full table query, although it does not affect query results in the end, but it consumes many meaningless query\n1.like query 2017-08-01 to 2018-09-01 data\n2.database sharding rule return ds-2017 and ds-2018\n3.table sharding rule return table1 to table12\nactual query statement\n```sql\nselect * from ds-2017.table1 where create_date between 2017-08-01 and 2018-09-01\n....\nselect * from ds-2017.table12 where create_date between 2017-08-01 and 2018-09-01\nselect * from ds-2018.table1 where create_date between 2017-08-01 and 2018-09-01\n....\nselect * from ds-2018.table12 where create_date between 2017-08-01 and 2018-09-01\n```\nshould return\n```sql\nselect * from ds-2017.table8 where create_date between 2017-08-01 and 2018-09-01\n....\nselect * from ds-2017.table12 where create_date between 2017-08-01 and 2018-09-01\nselect * from ds-2018.table1 where create_date between 2017-08-01 and 2018-09-01\n....\nselect * from ds-2018.table9 where create_date between 2017-08-01 and 2018-09-01\n```\ncan an algorithm be added to control the corresponding relationship between the data source and the table at the same time?\nlike return:\njava\npublic String doSharding(Collection<String> collection, PreciseShardingValue<Date> preciseShardingValue) {\n        Map<String, List> result = [{ds2017, [table8....,table12]}, {ds2018, [table1.....,table9]}]\n        return result;\n}\nI don't know if I have made myself clear, thank you!. thank you for the answer!\nmy RangeShardingAlgorithm config It's effective\nyou can provide database sharding by year and table sharding by month algorithm demo?\nthank you very much!. the problem is cross year query are not normal,cross year the tables of all data sources will be returned uniformly.. this my sharding config thak you!\nxml\n<!--\u5206\u5e93\u5206\u8868\u7b56\u7565\u914d\u7f6e-->\n    <!--\u914d\u7f6e\u5206\u5e93\u7b56\u7565\uff08\u901a\u8fc7\u521b\u5efa\u65f6\u95f4\u8fdb\u884c\u6570\u636e\u5212\u5206-->\n    <bean id=\"preciseDateDatabaseShardingAlgorithm\" class=\"com.dayi35.core.spot.common.sharding.algorithm.SingleKeyDatabaseDatePreciseShardingAlgorithm\" />\n    <bean id=\"rangeDateDatabaseShardingAlgorithm\" class=\"com.dayi35.core.spot.common.sharding.algorithm.SingleKeyDatabaseDateRangeShardingAlgorithm\" />\n    <sharding:standard-strategy id=\"databaseShardingStrategy\" sharding-column=\"create_date\" precise-algorithm-ref=\"preciseDateDatabaseShardingAlgorithm\" range-algorithm-ref=\"rangeDateDatabaseShardingAlgorithm\"/>\n    <!--\u914d\u7f6e\u5206\u8868\u7b56\u7565\uff08\u901a\u8fc7\u521b\u5efa\u65f6\u95f4\u8fdb\u884c\u6570\u636e\u5212\u5206\uff09-->\n    <bean id=\"preciseDateTableShardingAlgorithm\" class=\"com.dayi35.core.spot.common.sharding.algorithm.SingleKeyTableDatePreciseShardingAlgorithm\" />\n    <bean id=\"rangeDateTableShardingAlgorithm\" class=\"com.dayi35.core.spot.common.sharding.algorithm.SingleKeyTableDateRangeShardingAlgorithm\" />\n    <sharding:standard-strategy id=\"tableShardingStrategy\" sharding-column=\"create_date\" precise-algorithm-ref=\"preciseDateTableShardingAlgorithm\" range-algorithm-ref=\"rangeDateTableShardingAlgorithm\"/>\n    <!--\u6784\u9020\u5206\u5e03\u5f0f\u4e3b\u952e\u751f\u6210\u7b97\u6cd5-->\n    <bean id=\"generateKeyAlgorithm\" class=\"com.dayi35.core.spot.common.sharding.keygen.DefaultKeyGenerator\"></bean>\n    <!--\u6784\u5efashardingDataSource-->\n    <sharding:data-source id=\"shardingDataSource\">\n        <!--\u8bbe\u7f6e\u6570\u636e\u6e90-->\n        <sharding:sharding-rule data-source-names=\"dataSource,ds-2017\" default-data-source-name=\"dataSource\">\n            <!--\u8bbe\u7f6e\u5206\u8868\u89c4\u5219\uff0c\u903b\u8f91\u8868\u548c\u771f\u5b9e\u8868\u7684\u5bf9\u5e94\u5173\u7cfb\u4ee5\u53ca\u5206\u5e93\u5206\u8868\u7684\u7b56\u7565-->\n            <sharding:table-rules>\n                <sharding:table-rule logic-table=\"finance_account_log\" database-strategy-ref=\"databaseShardingStrategy\" table-strategy-ref=\"tableShardingStrategy\" />\n                <!--<rdb:generate-key-column column-name=\"log_id\" column-key-generator-class=\"com.fiidee.eagle.framework.base.rdb.sharding.keygen.DefaultKeyGenerator\"/>-->\n            </sharding:table-rules>\n        </sharding:sharding-rule>\n        <sharding:props>\n            <prop key=\"sql.show\">true</prop>\n        </sharding:props>\n    </sharding:data-source>\n    <orchestraion:sharding-data-source id=\"shardingDatabasesTablesDataSource\" data-source-ref=\"shardingDataSource\" registry-center-ref=\"regCenter\" overwrite=\"true\" />. thank you for the answer!\ndatabalse algorithm:\n```java\n@Override\n    public Collection doSharding(Collection collection, RangeShardingValue rangeShardingValue) {\n        Collection result = new LinkedHashSet<>(collection.size());\n        DateFormat sdf = new SimpleDateFormat(datePattern);\n        Range ranges = rangeShardingValue.getValueRange();\n        Date startTime = ranges.lowerEndpoint();\n        Date endTime = ranges.upperEndpoint();\n    while (startTime.getTime() <= endTime.getTime()) {\n        //\u5224\u65ad\u662f\u5426\u4e3a\u5f53\u524d\u5e74\u4efd\uff0c\u5982\u679c\u4e3a\u5f53\u524d\u5e74\u4efd\u5219\u8fd4\u56de\u9ed8\u8ba4\u6570\u636e\u6e90\n        if(new DateTime().getYear() == new DateTime(startTime).getYear()) {\n            result.add(defaultDateSource);\n        } else {\n            result.add(namePrefix + separator + sdf.format(startTime));\n        }\n        //\u52a0\u4e0a\u4e00\u5e74\u540e\u91cd\u65b0\u8bbe\u7f6e\u8d77\u59cb\u65f6\u95f4\n        startTime = new DateTime(startTime).plusYears(1).monthOfYear().withMinimumValue().dayOfMonth().withMinimumValue().secondOfDay().withMinimumValue().toDate();\n    }\n\n    if(CollectionUtils.isEmpty(result)) {\n        throw new UnsupportedOperationException();\n    }\n\n    return result;\n}\n\n```\ntable algorithm:\n```java\n@Override\n    public Collection doSharding(Collection collection, RangeShardingValue rangeShardingValue) {\n        Collection result = new LinkedHashSet<>(collection.size());\n        Range ranges = rangeShardingValue.getValueRange();\n        Date startTime = ranges.lowerEndpoint();\n        Date endTime = ranges.upperEndpoint();\n    while (startTime.getTime() <= endTime.getTime()) {\n        result.add(rangeShardingValue.getLogicTableName() + separator + new DateTime(startTime).toString(datePattern));\n        //\u52a0\u4e0a\u4e00\u4e2a\u6708\u540e\u91cd\u65b0\u8bbe\u7f6e\u8d77\u59cb\u65f6\u95f4\n        startTime = new DateTime(startTime).plusMonths(1).dayOfMonth().withMinimumValue().secondOfDay().withMinimumValue().toDate();\n    }\n\n    if(CollectionUtils.isEmpty(result)) {\n        throw new UnsupportedOperationException();\n    }\n\n    return result;\n}\n\n```. rangeShardingValue is: begin date is 2017-08-01 end date is 2018-09-01\nbecause my table is divided by month, so my loop determines the name of the table that needs to be returned, Is there any problem with my place?\nthank you very much!\n. I understand that it is necessary to return 2017-08-01 and 2018-09-01 all table\n2017 year return talbe8 table9 table10 table11 table12\n2018 year return table1 table2..... table9\ncollection put merge return table1.....table12\nif year between my algorithm how to return?\nthank you very much!. thank you for the answer\uff01\uff1a\uff09. I found a problem, zookeeper node can't null value\nlike:\ninitSQL:\npoolName:\n.......\nbut the zookeeper node use orchestration center overwrite to zookeeper\nmaybe it is orchestration center overwrite local data no processing null values\nthis may be a bug\nthank you!. but my in zookeeper delete the empty value my application normal start\ni debugger the source code in YAML.load(dataSourceMapYamlString) exist empty value throw exception\nyou can use above zookeeper data string to test YAML.load method\nthank you for answer this question!. @terrymanu yes my remove null value applicatioin success start. @beckhampu @terrymanu ok,thank you for taking the time to check this question\n I suggest datasource to yaml string ignore null value then yaml string to datasource no problem. ",
    "haroldjiang": "\u5927\u5bb6\u7528sharding-jdbc\u591a\u8fd8\u662fsharing-proxy\u591a\u554a. \u6709\u6ca1\u6709\u5728\u751f\u4ea7\u73af\u5883\u7528sharing-proxy\u7684. we have a singular system need to transport to multi-tenant saas by combine some tenant's schema into one . but all of sqls have no tenantid within it.even though we can use sharding-proxy to do the database route,after sql have been sent to the specific destinate table of  database schema,it will return all tenant's data in that  table(we are using mysql). for now,all tenants have their own database schema and tables with same table name.\nno tenant_id store in tables and has no tenant_id field in your query SQL.. ",
    "starcwang": "\u4e00\u70b9\u8d44\u8baf https://www.yidianzixun.com/. @terrymanu Can I update the actual-data-nodes dynamically in a schedule job?. > I think you can do it with spring-config\nI don't understand....how to update actual-data-nodes dynamically... ",
    "linkgo8391": "\u676d\u5dde\u5f00\u8bfe\u5566\u6559\u80b2http://www.kaike.la/. ",
    "wyzssw": "\u6ef4\u6ef4\u5c0f\u6854\u8f66\u670d https://www.didiglobal.com. ",
    "tianbin1001": "\u4eac\u4e1c\u91d1\u878d-\u4f01\u4e1a\u91d1\u878d\u7814\u53d1\u90e8-\u4f01\u4e1a\u878d\u8d44\u7814\u53d1\u7ec4. agree, yes, +1. ",
    "lfg777": "\u62cd\u62cd\u8d37-https://www.ppdai.com. ",
    "pinebud": "\u706b\u5e01\u8d44\u8baf-https://www.huobiinfo.com. ",
    "fy401": "\u74dc\u5b50\u4e8c\u624b\u8f66-https://www.guazi.com. ",
    "clin2y": "\u8702\u7f51\u4f9b\u5e94\u94fe-https://www.newbeescm.com/ \u667a\u6167\u96f6\u552e. ",
    "liweifengwf": "\u5927\u641c\u8f66- https://www.souche.com/zh/. ",
    "fg0711": "\u6d77\u5178\u8f6f\u4ef6  http://www.hydee.cn. ",
    "zhuchao941": "\u70b9\u6211\u8fbe https://www.dianwoda.com/. @dale19900108 \u4f60\u8bf4\u7684\u8fd9\u4e2a\u6211\u4ece\u6587\u6863\u91cc\u5b8c\u5168\u65e0\u6cd5\u8bfb\u51fa\u6765\u3002\u6211\u7684\u7406\u89e3\u662f databaseShardingStrategy \u53ea\u662f \u5206\u5e93\u7b56\u7565\uff0c\u800cTableShardingStrategy\u624d\u662f\u5206\u8868\u7b56\u7565\u3002\u6240\u4ee5\u80fd\u52b3\u70e6\u5927\u81f4\u8bb2\u4e0b\u8fd9\u4e2a\u7ed3\u6784\uff0c\u6216\u8005\u7ed9\u8d34\u4e2a\u6709\u7528\u7684\u94fe\u63a5\u5426\uff1f. @dale19900108 \u4e0d\u5bf9\u5427\uff0c\u6211\u7684\u9700\u6c42\u6ca1\u6709\u5206\u8868\uff0c\u4f46\u662f\u6709\u5206\u5e93\u554a\uff0cTableRule\u5230\u5e95\u662f\u600e\u4e48\u6837\u7684\u5b9a\u4f4d\u5462. \u5e76\u4e14\u6628\u5929\u770b\u7684\u65f6\u5019\uff0c\u6211\u53d1\u73b0\u5728\u6784\u5efaShardingRule\u8fd9\u4e2a\u7684\u65f6\u5019\uff0c\u65e2\u6709databaseShardingStrategy\uff0c\u4f46\u662fTableRule\u91cc\u4e5f\u6709databaseShardingStrategy\u3002\u8fd9\u53c8\u662f\u4ec0\u4e48\u89c4\u5219. @dale19900108 \u5012\u662f\u4e0d\u7528\u8054\u5408\uff0c\u53ea\u662f\u5206\u5e93\uff0c\u4e0d\u505a\u5206\u8868\u3002\u90a3\u54b1\u4eec\u8d77\u6b65\u5dee\u4e0d\u591a\u4e48\u3002\u3002\u54c8\u54c8. This is the output of avg function: \n2018-12-17 22:58:27,689 INFO  [main] Sharding-Sphere-SQL:log:71 Logic SQL: select avg(id) from `order` where shardx=4 and id = 1\n2018-12-17 22:58:27,689 INFO  [main] Sharding-Sphere-SQL:log:71 SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=order, alias=Optional.absent())]), conditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=shardx, tableName=order), operator=EQUAL, positionValueMap={0=4}, positionIndexMap={})])])), sqlTokens=[ItemsToken(isFirstOfItemsSpecial=false, items=[COUNT(id) AS AVG_DERIVED_COUNT_0 , SUM(id) AS AVG_DERIVED_SUM_0 ]), TableToken(skippedSchemaNameLength=0, originalLiterals=`order`)], parametersIndex=0)), containStar=false, selectListLastPosition=15, groupByLastPosition=0, items=[AggregationSelectItem(type=AVG, innerExpression=(id), alias=Optional.absent(), derivedAggregationSelectItems=[AggregationSelectItem(type=COUNT, innerExpression=(id), alias=Optional.of(AVG_DERIVED_COUNT_0), derivedAggregationSelectItems=[], index=-1), AggregationSelectItem(type=SUM, innerExpression=(id), alias=Optional.of(AVG_DERIVED_SUM_0), derivedAggregationSelectItems=[], index=-1)], index=-1)], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null)\n2018-12-17 22:58:27,690 INFO  [main] Sharding-Sphere-SQL:log:71 Actual SQL: shard2 ::: select avg(id) , COUNT(id) AS AVG_DERIVED_COUNT_0 , SUM(id) AS AVG_DERIVED_SUM_0 from `order` where shardx=4 and id = 1\nThis is output the output of order by\n2018-12-17 23:09:40,926 INFO  [main] Sharding-Sphere-SQL:log:71 Logic SQL: select id from `order` where id = 358308545499776512 and shardx = 4 order by place_tm\n2018-12-17 23:09:40,926 INFO  [main] Sharding-Sphere-SQL:log:71 SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=order, alias=Optional.absent())]), conditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=shardx, tableName=order), operator=EQUAL, positionValueMap={0=4}, positionIndexMap={})])])), sqlTokens=[ItemsToken(isFirstOfItemsSpecial=false, items=[place_tm AS ORDER_BY_DERIVED_0 ]), TableToken(skippedSchemaNameLength=0, originalLiterals=`order`)], parametersIndex=0)), containStar=false, selectListLastPosition=10, groupByLastPosition=0, items=[CommonSelectItem(expression=id, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(place_tm), orderDirection=ASC, nullOrderDirection=ASC, index=-1, alias=Optional.of(ORDER_BY_DERIVED_0))], limit=null, subQueryStatement=null)\n2018-12-17 23:09:40,926 INFO  [main] Sharding-Sphere-SQL:log:71 Actual SQL: shard2 ::: select id , place_tm AS ORDER_BY_DERIVED_0 from `order` where id = 358308545499776512 and shardx = 4 order by place_tm\nshardx is the sharding key, and both route to a single data node \nthe sql is just for the test, ignore the bad logic~. ",
    "paco277853071": "\u901f\u73c2\u667a\u80fd-http://www.supersoco.com/. ",
    "chenshun131": "\u6b66\u6c49\u91d1\u5eb7\u9ad8\u79d1\u6280\u6709\u9650\u516c\u53f8-http://www.kingcome.cn/ -\u9910\u996e. ",
    "org-hejianhui": "\u6c5f\u82cf\u4e2d\u8fb0\u8f6f\u4ef6\u79d1\u6280\u6709\u9650\u516c\u53f8-http://jszcrj.com/. ",
    "zjcnb": "\u5c0f\u7ea2\u5507\u79d1\u6280\u7f51\u7edc\u6709\u9650\u516c\u53f8-https://www.xiaohongchun.com/. I just wrote it down, and I'm going to update it\nhttps://github.com/zjcnb/sharding-sphere. hi\uff0c @jmbkeyes \nAccording to what you said\n i have try it with use USE INDEX for mysql , i don't met exception.\n\n my sharding-jdbc version is : 3.1.0 \n my sql is :  SELECT * FROM lsj_zjc_user USE INDEX (code_index) WHERE code = #{code}(simple sql)\nmy mysql index is : code_index_lsj_zjc_user0(code) and code_index_lsj_zjc_user1(code)\nyou can Improved your sharding version try it again\uff01\n\n. I think you can do it with spring-config. you can debug this class\uff1aYamlTableRuleConfiguration build(). ",
    "Mkeeper6": "\u6597\u9c7c https://www.douyu.com/. ",
    "llliusong": "\u676d\u5dde\u5eb7\u5e15\u65af\u79d1\u6280\u6709\u9650\u516c\u53f8-http://www.compasshz.com/. ",
    "Myshiner": "sharding-proxy\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u63a7\u5236\u89c4\u5219\u5417\uff1f\n\u6bd4\u5982\uff1a\u4e22\u5f03\u67e5\u8be2\u4e2d\u6ca1\u6709where\u6761\u4ef6\u7684\u8bed\u53e5\n3.x\u7684\u6587\u6863\u4e2d\u6ca1\u6709\u8fd9\u4e9b\u914d\u7f6e. \u70b9\u77f3\u7ecf\u7eac-https://www.okayzhihui.com/ -\u667a\u6167\u6559\u80b2. ",
    "drtrang": "\u6211\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u8865\u5145\u4e00\u4e0b\u573a\u666f\u3002\n\u4ee3\u7801\u4e2d\u624b\u52a8\u58f0\u660e\u4e86 dataSourceMap\uff0cMap \u91cc\u5b58\u653e\u4e86\u6240\u6709\u7684 DataSource\uff0c\u4f46\u662f\u5728\u521b\u5efa dataSource \u65f6\u5e76\u6ca1\u6709\u6ce8\u5165\u6211\u58f0\u660e\u7684 dataSourceMap\uff0c\u800c\u662f\u4f7f\u7528\u7684 Spring \u81ea\u8eab\u751f\u6210\u7684 Map\u3002\n```java\n@Bean\n@ConfigurationProperties(\"spring.datasource.druid.huanan\")\npublic DruidDataSource huananDataSource() {\n    return new DruidMultiDataSource();\n}\n@Bean\n@ConfigurationProperties(\"spring.datasource.druid.xinan\")\npublic DruidDataSource xinanDataSource() {\n    return new DruidMultiDataSource();\n}\n@Bean\n@Primary\npublic Map dataSourceMap(List druidDataSourceList) {\n    // \u8be5 Bean \u6ca1\u6709\u521d\u59cb\u5316\n    return druidDataSourceList.stream()\n            .collect(Collectors.toMap(DruidDataSource::getName, Function.identity()));\n}\n@Bean\n@Primary\npublic DataSource dataSource(Map dataSourceMap, DatabaseShardingStrategy databaseShardingStrategy) {\n    // \u8fd9\u91cc\u7684 dataSourceMap \u5e76\u4e0d\u662f\u4e0a\u9762\u58f0\u660e\u7684 Map\uff0c\u800c\u662f Spring \u81ea\u5df1\u751f\u6210\u7684\n    DataSourceRule dataSourceRule = new DataSourceRule(dataSourceMap, \"common\");\n    TableRule housedelTableRule = createTableRule(\"sh_housedel\", dataSourceRule);\n    List tableRules = Arrays.asList(housedelTableRule);\n    ShardingRule shardingRule = ShardingRule.builder()\n            .dataSourceRule(dataSourceRule)\n            .tableRules(tableRules)\n            .databaseShardingStrategy(databaseShardingStrategy)\n            .build();\n    return ShardingDataSourceFactory.createDataSource(shardingRule);\n}\n```. @terrymanu  \u6069\uff0c\u662f Spring \u7684\u95ee\u9898\uff0c\u8ddf SJ \u6ca1\u5173\u7cfb\u3002. ",
    "beibeii": "\u8fd9\u4e2abug\u4f1a\u628a\u673a\u5668\u5185\u5b58\u5403\u5149\uff0coom. ",
    "ManderLS": "\u8fd9\u4e2a\u95ee\u98981.3.1\u7684\u65f6\u5019 \u6211\u4e5f\u9047\u5230\u4e86 \u4f46\u662f\u5347\u7ea7\u4e861.4.2\u4e4b\u540e  \u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86. ",
    "leojames": "1.4.2\u4f9d\u7136\u6ca1\u6709\u89e3\u51b3\uff0c\u770b\u4e86\u6e90\u7801\u6211\u6539\u4e86\u4e00\u4e0bMerge\u7684\u4ee3\u7801\u89e3\u51b3\u4e86\u3002\n\u6211\u4e0a\u4f20\u4e0b\u4ee3\u7801\u5427 \nResultSetFactory.java.zip\n. \u9002\u7528\u4e8e1.4.2\u7248\u672c  \u76ee\u524d\u7ebf\u4e0a\u8fd9\u4e2aBUG\u5df2\u7ecf\u4fee\u590d\u4e86 \u4f60\u4eec\u4e0b\u4e2a\u7248\u672c\u4e5f\u4e00\u8d77\u53d1\u5e03\u4e0b\u5427. ",
    "javaeedll": "leojames \u8fd9\u4e2a\u9002\u7528\u4e8e\u54ea\u4e2a\u7248\u672c\uff1f. ",
    "begincode": "mybatis \u4f7f\u7528\u7684 defaultExecutorType  is REUSE. ",
    "dale19900108": "\u5728\u6784\u5efashardingRule\u7684\u65f6\u5019\uff0c\u4f60\u7684\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u7528\u4f7f\u7528databaseShardingStrategy\u4e86\u3002\u76f4\u63a5\u7528tableRule\u5c31\u53ef\u4ee5 \u3002\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u5b50\nShardingRule shardingRule = ShardingRule.builder()\n                .dataSourceRule(getDataSourceRule())\n                .tableRules(Arrays.asList(orderTableRule,ticketTableRule))\n                .build();. @zhuchao941 ,http://dangdangdotcom.github.io/sharding-jdbc/02-guide/sharding/\n\u4e2d\u6587\u6587\u6863\u7684\u4f4d\u7f6e\u3002\n\u5206\u5e93\u5206\u8868\u7684\u610f\u601d\u662f\uff0c\u6839\u636e\u67d0\u4e2a\u5b57\u6bb5\u6765\u9009\u62e9\u5bf9\u5e94\u7684\u8868\u6216\u8005\u662f\u6570\u636e\u5e93\u3002\u9009\u62e9\u89c4\u5219\u5c31\u662fXXXShardingStrategy\n\u4f46\u662f\uff0c\u4f60\u7684\u8fd9\u4e2a\u9700\u6c42\u662f\u6570\u636e\u6ca1\u6709\u5206\u5e93/\u5206\u8868\uff0c\u53ea\u662f\u6563\u843d\u5728\u4e24\u4e2a\u5e93\u91cc\u3002\u6240\u4ee5\uff0c\u5c31\u4e0d\u7528\u5206\u5e93\u5206\u8868\u7b56\u7565\u5440\u3002\u53ea\u9700\u8981\u6dfb\u52a0\u8868\u89c4\u5219\u5c31\u884c\u3002\u4e2a\u4eba\u7406\u89e3\uff0ctablerule\u53ea\u662f\u6570\u636e\u5e93\u548c\u8868\u7ed3\u6784\u7684\u5bf9\u5e94\u5173\u7cfb\u3002. \u6211\u4e5f\u662f\u51c6\u5907\u7528\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u3002\u6628\u5929\u5f00\u59cb\u7684\u5c1d\u8bd5\u5b66\u4e60\u4f7f\u7528\u7684\u3002\u8fd9\u4e24\u4e2a\u7b56\u7565\u5e94\u8be5\u662fapi\u90fd\u76f8\u540c\u3002\u6240\u4ee5\u6df7\u7528\u4e86\u4e5f\u6ca1\u4e8b\u3002\u4f46\u662f\u5bb9\u6613\u5f15\u8d77\u6b67\u4e49\uff0c\u6211\u662f\u8fd9\u4e48\u7406\u89e3\u7684\u3002. \u4f60\u7684\u9700\u6c42\u8ddf\u6211\u5dee\u4e0d\u591a\u54ce\uff0c\u90fd\u662f\u6ca1\u5206\u8868\uff0c\u76f8\u5f53\u4e8e\u65b0\u8d77\u4e2a\u6570\u636e\u5e93\u8ddf\u539f\u6765\u4e00\u6837\u3002\u60f3\u505a\u4e24\u4e2a\u6570\u636e\u5e93\u7684\u8054\u5408\u67e5\u8be2\u3002\u5bf9\u5427 \u3002.     @zhuchao941  \uff0c\u79c1\u804a\u6211\u4e0b\uff0c\u4e00\u8d77\u7814\u7a76\u4e0b\u5457\uff1f. \u5df2\u7ecf\u627e\u5230\uff0cclose. duplicate with #239\n\u4f46\u662f\u8c8c\u4f3c1.5.0\u8fd8\u6ca1\u89e3\u51b3 \uff1f . \u4e86\u89e3\u4e86\uff0c\u786e\u5b9e\u662f\u652f\u6301select for update \uff0c\u9047\u5230\u7684\u95ee\u9898\u662f\u5728\u6d4b\u8bd5\u8bfb\u5199\u5206\u79bb\u65f6\u5019\u4ea7\u751f\u7684\u3002\u5728\u4e00\u4e2a\u6ca1\u6709\u4e8b\u52a1\u58f0\u660e\u7684\u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u662f\u67e5\u8be2\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4e00\u4e2a\u5e26\u4e8b\u52a1\u7684select for update\u3002\n\u671f\u671b\u662f\uff1a\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u67e5\u8be2\u5e94\u8be5\u843d\u5728\u4e3b\u5e93\u4e0a\uff0c\u5b9e\u9645\u4e0a\u3002select for update\u5374\u843d\u5230\u4ece\u5e93\u3002\u9501\u4e5f\u9501\u5728\u4e86\u4ece\u5e93\u4e0a\u3002. ",
    "chubinzheng": "tableRuleList.add(new TableRule.TableRuleBuilder(\"t_order\").actualTables(Arrays.asList(\"t_order\")).dataSourceRule(dataSourceRule).build());\n\u8fd9\u662f\u6211\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u53ea\u5206\u5e93\u4e0d\u5206\u8868. ",
    "boothsun": "\u9047\u5230\u540c\u6837\u95ee\u9898\uff0c\u5f88\u5751\u5440. ",
    "cnderrick": "@terrymanu  \u8bfb\u5e93\u548c\u5199\u5e93\u95f4\u6570\u636e\u7684\u540c\u6b65\u5b58\u5728\u4e00\u4e2a\u65f6\u95f4\u5dee\uff0c\u67d0\u4e9b\u5199\u573a\u666f\u4e0b\u4fee\u6539\u6570\u636e\u524d\u9700\u8981\u67e5\u8be2\u662f\u5426\u5df2\u5b58\u5728\u6216\u8005\u4e0d\u5b58\u5728\u76f8\u5173\u5185\u5bb9\u3002\u5982\u679c\u8d70\u8bfb\u5e93\u67e5\u8be2\u518d\u5220\u9664\u4e3b\u5e93\u6570\u636e\u4f1a\u5b58\u5728\u6982\u7387\u5bfc\u81f4\u6570\u636e\u5728\u6781\u77ed\u65f6\u95f4\u5185\u4e0d\u4e00\u81f4\uff1b\u611f\u89c9\u4f60\u4eec\u5728\u5e95\u5c42\u5b9e\u73b0\u4e0a\u5e94\u8be5\u662f\u5224\u65ad\u4e86sql\u7684\u7c7b\u578b\uff0c\u7136\u540e\u51b3\u5b9a\u8d70\u8bfb\u5e93\u8fd8\u662f\u5199\u5e93\u3002\u5728\u4e00\u4e2a\u5199\u4e8b\u52a1\u524d\u7684\u67e5\u8be2\u8d70\u5199\u5e93\u662f\u5426\u53ef\u4ee5\u7528\u6ce8\u89e3\u58f0\u660e\u4e0b\uff0c\u6bd5\u7adfjdbc\u7684\u6267\u884c\u662f\u5728\u52a8\u6001\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f1a\u77e5\u9053\uff0c\u65e0\u6cd5\u9884\u77e5\u672a\u6765\uff0c\u901a\u8fc7\u4e00\u4e2a\u6807\u8bb0\u4f4d\u6765\u544a\u8bc9sharding-jdbc\u8fd9\u91cc\u662f\u7279\u6b8a\u7684\u903b\u8f91\uff0c\u4e0d\u8fc7\u8fd9\u6837\u53c8\u8ddfsharding-jdbc\u7684\u521d\u8877\u76f8\u6096\u4e86\uff0c\u539f\u672c\u662f\u8981\u505a\u4e00\u5c42\u900f\u660e\u7684\u975e\u4fb5\u5165\u5f0f\u5e95\u5c42\u6846\u67b6\uff0c\u6211\u4e5f\u6ca1\u6709\u60f3\u5230\u66f4\u6210\u719f\u7684\u5b9e\u73b0\u63d0\u8bae\u4ec5\u4f9b\u53c2\u8003\u3002\u76ee\u524d\u6211\u662f\u5728\u4e1a\u52a1\u5c42\u505a\u7684\u903b\u8f91\u5904\u7406\uff0c\u5728\u5199\u5e93\u4ee3\u7801\u4e2d\u5b9e\u73b0\u4e00\u5957\u8bfb\u5199\u5e93\u903b\u8f91\uff0c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u60a8\u8bf4\u7684\uff1a\u201c\u8fd8\u662f\u8bfb\u5199\u5206\u79bb\u5c31\u4e0d\u5e94\u8be5\u652f\u6301\u4e8b\u52a1\uff1f\u201d\uff0c\u6211\u6ca1\u592a\u61c2\u662f\u4f1a\u5f15\u53d1\u4ec0\u4e48\u95ee\u9898\u5417\u3002. @terrymanu  db\u7684\u5206\u7247\u5728where\u8bed\u53e5\u4e2d\u52a0\u4e0asharding-key\u662f\u6ca1\u9519\u7684\uff0c\u56e0\u4e3a\u4e0d\u60f3\u6bcf\u5f20\u8868\u90fd\u4e2d\u52a0\u4e0a\u8fd9\u4e2asharding-key\u505a\u5197\u4f59\u5b57\u6bb5\uff0c\u5c31\u53ea\u80fd\u7528\u5f3a\u5236\u8def\u7531\uff0c\u4f46\u5176\u5b9e\u6211\u60f3\u7528\u7684\u662f\u81ea\u52a8\u5206\u8868\u529f\u80fd\u3002\u6240\u4ee5\u6700\u540e\u6539\u4e3a\u7528spring\u7684\u52a8\u6001\u6570\u636e\u6e90\u6765\u63a7\u5236\u5206\u5e93\uff0csharding-jdbc\u4f5c\u81ea\u52a8\u5206\u8868\u7528\u3002. ",
    "LilyBlooper": "@haocao \u8bf7\u95ee\u5982\u4f55\u6253\u5f00\u8fd9\u9879\u914d\u7f6e\uff0c\u672c\u5730\u6309\u7167log4j debug\u7b56\u7565\u65e0\u6cd5\u770b\u5230\u3002\n\u662f\u4e0d\u662f\u9700\u8981\u4f9d\u8d56skywalk \u8fd9\u5957 apm\u7cfb\u7edf\uff1f\n\u6211\u770b\u4e86 1.5.0.M2 \uff0c\u6ca1\u6709\u53d1\u73b0\u76f8\u5173\u63d0\u793a\u6216\u8005\u6587\u6863\u4f4d\u7f6e. ",
    "letian313": "\u6211\u540e\u7eed\u518d\u8ddf\u8fdb\u4e0b\u770b\u54ea\u4e2a\u5730\u65b9\u51fa\u7684\u95ee\u9898\uff0c\u4ece\u5f53\u524d\u7684\u6d4b\u8bd5\u7ed3\u679c\u4e0a\u770b\uff0c\u7528druid \u548c proxool \u57281.3.3\u7248\u672c\u662f\u90fd\u6ca1\u95ee\u9898\u7684\uff0cproxool \u57281.4.2\u7248\u672c\u4e0a\u6d4b\u8bd5\u51fa\u7684\u95ee\u9898. ",
    "beckhampu": "@Beyondeclipse \uff0c\u80fd\u63d0\u4f9b\u6d4b\u8bd5\u4ee3\u7801\u5417\uff1f\u6211\u8fd9\u8fb9\u5e76\u6ca1\u6709\u91cd\u73b0\u6b64\u95ee\u9898\u3002transaction_log\u7684id\u53d6\u7684\u662fDML\u7684\u6267\u884c\u4e8b\u4ef6ID\uff0c\u5982\u679c\u4e0d\u662f\u91cd\u590d\u6d88\u8d39\u6bcf\u6761sql\u7684\u6267\u884c\u4e8b\u4ef6\u662f\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590dID\u7684\u3002. @Beyondeclipse ,\u7ecf\u8fc7\u9a8c\u8bc1\u6ca1\u53d1\u73b0transaction_log\u4e3b\u952e\u91cd\u590d\u7684\u95ee\u9898\uff0c\u4f46\u53d1\u73b0\u5b58\u5728transaction_log\u5165\u5e93\u65f6parameters\u4e3a\u7a7a\u7684\u95ee\u9898\u3002\u5f53\u524d\u7248\u672c\u6b64\u95ee\u9898\u5df2\u89e3\u51b3\u3002. Please refer to #1046  for the solution. Ok, thanks for reminding me. I'll pay attention next time. Here are some coding details.\nAbout config loading:\n1\u3001Load the 'config-*.yaml' file to get all the sharding rule configuration of schmal.\n2\u3001Load the server.yaml file to get orchestration, proxyAuthority, and props configurations.\n3\u3001Add new class ProxyContext. It initialized at startup, saves the all global configurations and maintains the relationship between schema and RuleRegistry.\nAbout front handler:\n1\u3001The field schema is added to FrontHandler to save the current schema selected by the user.\n2\u3001Check and save schema When received HandshakeResponse41Packet,like 'mysql -u root -proot -h 127.0.0.1 -P3307 sharding_db'.\nAbout execute command:\n1\u3001COM_INIT_DB: check and change the schema.\n2\u3001COM_FIELD_LIST: get RuleRegistry from the schema and construct the BackendHandler.\n3\u3001COM_QUERY: get RuleRegistry from the schema and construct the BackendHandler.\n4\u3001COM_STMT_PREPARE: get RuleRegistry from the schema and construct the SqlParsingEngine.\n5\u3001COM_STMT_EXECUTE\uff1aget RuleRegistry from the schema and construct the BackendHandler.\nAbout sql parsing\uff1a\n1\u3001Adjust MySQLUseParser to get schema when parsing sql 'use db'.\n2\u3001Adjust SQLJudgeEngine to get schema when parsing sql 'use db'.\nAbout JDBCBackendHandler:\n1\u3001According to the sql routing result, get and change the schema if returning UseStatement.\n2\u3001According to the merge reult, use ProxyShowDatabasesMergedResul instead of ShowDatabasesMergedResult.\nAbout NettyBackendHandler:\n1\u3001Each schema stars a BackendNettyClient.\n2\u3001Add new class BackendNettyClientManager.It maintains the relationship between schema and BackendNettyClient.\n3\u3001According to the sql judge result, get and change the schema if returning UseStatement.\n4\u3001Modify method 'mergeDQLorDAL', use ProxyShowDatabasesMergedResul instead of ShowDatabasesMergedResult.\nAbout orchestration:\n1\u3001config/proxy/rule: save the sharding rules for all schemas.\n2\u3001config/proxy/server: save the global configuration in the server.yaml file\n3\u3001state/datasources: add datasource node like 'schema.dbName',such as 'sharding_db.ds0'. Supported SQL\nuse db_name\nshow databases\nUnsupported SQL\nselect database()\nselect * from db_name.tbl_name\n. agree, yes, +1. @joey168 \uff0cwhich version of Sharding-Sphere do you using?. @joey168 \uff0cHave you solved your problem\uff1fI don't think the field null value is the point to the problem. \nMy zookeeper datasource string also has null value field.\n. @joey168 @terrymanu , I found the cause of this problem. It due to the BoneCPDataSource. When Parse the datasource yaml string and produce the BoneCPDataSource object , the BoneCPDataSource throw NPE   because the field 'configFile' is null.\nHere is the code of BoneCPDataSource:\npublic void setConfigFile(String configFile) {\n        this.configFile = checkNotNull(configFile);\n    }\npublic static <T> T checkNotNull(T reference) {\n    if (reference == null) {\n      throw new NullPointerException();\n    }\n    return reference;\n  }. +1. @amanxu ,Thanks for your issue, we will fix this problem.. @amanxu \uff0cthe reason for this problem is that when setting the parameters, the parameters obtained from SQLUnit are empty\u3002So my pr\uff08#1406\uff09 set the parameters when building SQLUnit \u3002You can refer to the PreparedStatementExecutorWrapper.createStatement () method.. ",
    "tistyzc": "should i call \n\"com.dangdang.ddframe.rdb.sharding.keygen.DefaultKeyGenerator.generateKey()\"?\n. ",
    "jiangyilong": "\u6211\u4f7f\u7528\u4e86 \u81ea\u589e\u4e3b\u952e\n```xml\n\n        insert into chat_content (\n        content\n        )\n        values (\n        #{content}\n    )\n</insert>\n\n```\n\u6211\u53bb\u6389\u4e86\u786e\u5b9e\u53ef\u4ee5\u4e86\u3002 \u4f46\u662f\u57281.4.0\u7248\u672c\u90fd\u662f\u652f\u6301\u7684\u3002\u8fd9\u4e2a\u7248\u672c\u80fd\u5426\u4e5f\u652f\u6301\uff0c\u5373\u4f7f\u5199\u4e86\u4e5f\u884c\u3002 \u56e0\u4e3a\u73b0\u5728\u9879\u76ee\u4e0a\u6240\u6709\u63d2\u5165\u6570\u636e\u7684\u5730\u65b9\u90fd\u8fd9\u4e48\u5199\u4e86\u3002. ",
    "amikehero": "\u5df2\u7ecf\u627e\u5230\uff0c\u4f4d\u4e8e\nsharding-jdbc/sharding-jdbc-config-parent/sharding-jdbc-config-spring/src/main/resources/META-INF/namespace/rdb.xsd\n. ## \u4e0d\u652f\u6301\u62ec\u53f7\u4e2d\u5e26\u6709\u591a\u9879or\u6761\u4ef6\nWhich version of Sharding-Jdbc do you using?\n1.5.0.M1\nExpected behavior\n\u652f\u6301\u975e\u5206\u8868\u5b57\u6bb5 \u591a\u9879or\u6761\u4ef6\u7684\u89e3\u6790\nError querying database.  Cause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.\nThe error may exist in file [/home/gzUp/tomcat-dev-1/webapps/notify-system-webapp/WEB-INF/classes/mappers/DBrefusedetailMapper.xml]\nThe error may involve DBrefusedetailMapper.selectCountByParam-Inline\nThe error occurred while setting parameters\nSQL: select count(*) as totalCount,   sum(CONVERT(trans_amount,DECIMAL)) as totalAcc   from t_sysnotice_refusedetail   where 1=1        and trans_init_time >= ?    and trans_init_time <= ?                                   and trans_type in      (        ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     )                         and (cust_id = ?    or expander_cust_id = ?    or acquirer_cust_id = ?    or operator_cust_id = ?    or platform_cust_id = ?    )\nCause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.\n2017-07-10 15:39:54.925 | [DubboServerHandler-10.0.0.184:20803-thread-196] ERROR com.unionpay.notify.dao.impl.RefuseTransDaoImpl - selectRefuseTrans Exception:nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.\nThe error may exist in file [/home/gzUp/tomcat-dev-1/webapps/notify-system-webapp/WEB-INF/classes/mappers/DBrefusedetailMapper.xml]\nThe error may involve DBrefusedetailMapper.selectByParam-Inline\nThe error occurred while setting parameters\nSQL: select * from t_sysnotice_refusedetail   where 1=1        and trans_init_time >= ?    and trans_init_time <= ?                                   and trans_type in      (        ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     )                         and (cust_id = ?    or expander_cust_id = ?    or acquirer_cust_id = ?    or operator_cust_id = ?    or platform_cust_id = ?    )       order by trans_init_time DESC,id DESC limit ?,?\nCause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.\n. ## \u4e0d\u8fdb\u884c\u5206\u8868\u7684\u8868\u4e2d\u542b\u6709or\u6761\u4ef6\uff0c\u5e94\u8be5\u652f\u6301\u53bb\u9ed8\u8ba4\u7684\u6570\u636e\u6e90\n\u5bf9\u4e8e\u4e0d\u8fdb\u884c\u5206\u8868\u7684\u8868\u4e2d\u542b\u6709or\u6761\u4ef6\uff0c\u5e94\u8be5\u9700\u8981\u652f\u6301\u53bb\u9ed8\u8ba4\u6570\u636e\u6e90\u3002\u5426\u5219\u4f7f\u7528sharding-jdbc\u540e\uff0c\u5bf9\u4e8e\u4e0d\u8fdb\u884c\u5206\u8868\u7684\u8868\u4f1a\u51fa\u73b0\u5f88\u591a \u4e0d\u5fc5\u8981\u7684\u9650\u5236\u3002\n\u8bf7\u95ee\uff0c\u4e0d\u8fd9\u6837\u5b9e\u73b0\u662f\u56e0\u4e3a\u89e3\u6790\u6709\u56f0\u96be\u8fd8\u662f\u6709\u5176\u4ed6\u539f\u56e0\u3002\nError querying database.  Cause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.\nThe error may exist in file [/home/gzUp/tomcat-dev-1/webapps/notify-system-webapp/WEB-INF/classes/mappers/DBrefusedetailMapper.xml]\nThe error may involve DBrefusedetailMapper.selectCountByParam-Inline\nThe error occurred while setting parameters\nSQL: select count(*) as totalCount,   sum(CONVERT(trans_amount,DECIMAL)) as totalAcc   from t_sysnotice_refusedetail   where 1=1        and trans_init_time >= ?    and trans_init_time <= ?                                   and trans_type in      (        ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     ,       ?     )                         and (cust_id = ?    or expander_cust_id = ?    or acquirer_cust_id = ?    or operator_cust_id = ?    or platform_cust_id = ?    )\nCause: com.dangdang.ddframe.rdb.sharding.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'OR'.. \u4eae\u54e5\uff0c\u6d4b\u8bd5\u7528\u7684\uff0c\u6570\u636e\u6ca1\u6709\u9519\u3002\u662f\u53bb\u5230\u4e86\u4e24\u4e2a\u6570\u636e\u5e93\u3002\n\u6211\u4e4b\u524d\u7406\u89e3\u662f\u53ea\u5206\u8868\u4e0d\u5206\u5e93\u7684\u53ea\u4f1a\u53bb\u5230\u9ed8\u8ba4\u6570\u636e\u5e93\uff0c\u73b0\u5728\u770b\u6765\u662f\u6211\u7406\u89e3\u6709\u8bef\u3002. ",
    "lulonglong": "\u8fd9\u4e2a\u914d\u7f6e\u5927\u4e86\u8fd8\u662f\u4f1a\u5076\u5c14\u51fa\u9519\uff0c\u89e3\u51b3\u4e0d\u4e86\u6839\u672c\u95ee\u9898\u3002\u589e\u52a0\u53ef\u914d\u7f6e\u7684\u7f13\u5b58\u961f\u5217\u662f\u4e00\u4e2a\u53ef\u9009\u65b9\u6848. ",
    "hadix-lin": "\u6211\u8ba4\u4e3a\u7528\"\u8bbe\u8ba1\u51c6\u5219\"\u6765\u56de\u590d\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u513f\u7275\u5f3a.\u4e2d\u95f4\u4ef6\u7684\u76ee\u6807\u662f\u4e3a\u4e86\u7b80\u5316\u4e1a\u52a1\u5f00\u53d1\u4eba\u5458\u7684\u8d1f\u62c5.\u4efb\u4f55\u4e00\u4e2a\u4e1a\u52a1\u7cfb\u7edf\u90fd\u53ef\u80fd\u4f7f\u7528\u90e8\u5206\u5206\u8868\u7684\u7b56\u7565,\u8fd9\u662f\u4e2a\u57fa\u672c\u9700\u6c42.\u5982\u679c\u4e3a\u4e86\u4f7f\u7528\u4e2d\u95f4\u4ef6\u4e0d\u53ef\u907f\u514d\u8981\u8fdb\u884c\u590d\u6742\u7684\u591a\u6570\u636e\u6e90\u7ba1\u7406,\u8fd9\u5c31\u589e\u52a0\u8d1f\u62c5\u4e86.\n\u53e6\u5916\u7cfb\u7edf\u4e2d\u53ef\u80fd\u4f7f\u7528\u4e86\u4e00\u4e9b\u57fa\u4e8e\u52a8\u6001\u626b\u63cf\u7684\u673a\u5236,\u626b\u63cf\u8303\u56f4\u5e76\u4e0d\u5bb9\u6613\u6839\u636e\u6570\u636e\u6e90\u5212\u5206.\u5f3a\u5236\u7528\u6237\u4f7f\u7528\u591a\u6570\u636e\u6e90\u53ef\u80fd\u5f15\u53d1\u5176\u4ed6\u7684\u6613\u7528\u6027\u95ee\u9898.\n\u8fd8\u6709\u4f7f\u7528\u4e3a\u4ec0\u4e48\u5206\u8868\u5c31\u4e0d\u652f\u6301OR\u4e86?\b1.4.2\u8fd8\u652f\u6301\u554a.. \u6211\u89c9\u5f97\u505a\u5de5\u5177\u652f\u6301,\u5e94\u8be5\u4fdd\u8bc1\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u589e\u5f3a\u80fd\u529b\u53ea\u5f15\u5165\u4f4e\u6210\u672c\u8d1f\u62c5,\u4f7f\u7528\u539f\u59cb\u80fd\u529b\u4e0d\u9700\u8981\u989d\u5916\u6210\u672c,\u4e14\u5c3d\u91cf\u4fdd\u8bc1\u63d0\u4f9b\u539f\u59cb\u80fd\u529b.\n\u4f8b\u5982sharding-jdbc\u63d0\u4f9b\u7684\u5206\u8868\u5206\u5e93\u80fd\u529b\u5c5e\u4e8e\u589e\u5f3a\u80fd\u529b,\u53ef\u4ee5\u8ba9\u5f00\u53d1\u4eba\u5458\u505a\u989d\u5916\u7684\u914d\u7f6e\u5de5\u4f5c.\u4f46\u662f\u5f00\u53d1\u4eba\u5458\u8981\u4f7f\u7528\u539f\u59cb\u7684\u65b9\u5f0f\u8bbf\u95ee\u5355\u8868\u65f6\u5c5e\u4e8e\u539f\u59cb\u80fd\u529b,\u56e0\u8be5\u4e0d\u53d7\u589e\u5f3a\u529f\u80fd\u7684\u5f71\u54cd\u65e0\u8d1f\u62c5\u4f7f\u7528.. ",
    "aaa87621990": "\u660e\u663e\u4e0d\u5408\u7406\uff0c\u5206\u5f00\u6570\u636e\u6e90\uff0c\u4f60\u6765\u7ed9\u6211\u4fdd\u8bc1transcation\u54e6\uff0c\u5c31\u7b97\u662f\u5e95\u5c42\u53ef\u4ee5\u7528\u540c\u4e00\u4e2atransaction\uff0c\u4e5f\u4e0d\u7b26\u5408\u8bbe\u8ba1\u539f\u5219\uff0c\u5f92\u589e\u5f00\u53d1\u4eba\u5458\u4ee3\u7801\uff0c\u4e1a\u52a1\u573a\u666f\u91cc\u4e0d\u5206\u8868\u7684table\u4f60\u5b8c\u5168\u53ef\u4ee5\u5728shardingjdbc\u5185\u90e8\u81ea\u884c\u7ed5\u5f00\uff0c\u76f4\u63a5\u4ea4\u4e88\u6570\u636e\u5e93\u6267\u884c\uff0c\u4e3a\u4e86\u4e00\u5f20\u5206\u8868\uff0c\u628a99\u5f20\u90e8\u4e0d\u5206\u8868\u7684table\u5168\u8981\u6309\u7167\u4f60\u7684\u6a21\u5f0f\u6765\u5904\u7406\uff0c\u4f60\u89c9\u5f97\u5408\u7406\u5417\uff1f. \u641e\u4e86\u4e00\u5929\u7ec8\u4e8e\u641e\u5b9a\u4e86\uff0c\u6539\u6210\u7f16\u7a0b\u65b9\u5f0f\u8c03\u7528\uff0c\u4e0d\u7528starter\u65b9\u5f0f\n. @jixiaod  \u4f60\u4ec0\u4e48\u95ee\u9898. @jixiaod \n\u6539\u6210\u7f16\u7a0b\u65b9\u5f0f\u8c03\u7528\u554a\uff0c\u4f60\u770b\u770b shardingjdbc\u7684\u6587\u6863\uff0c \u90a3\u91cc\u6709\u7f16\u7a0b\u65b9\u5f0f\u600e\u4e48\u8c03\u7528\uff0c\u4f60\u53ea\u8981\u901a\u8fc7shardingjdbc return \u4e00\u4e2a datasource\u5c31\u53ef\u4ee5\u4e86 \u8fd9\u4e2adatasource\u5c31\u53ef\u4ee5\u5f53\u6210\u4e00\u4e2abean\u88abboot\u81ea\u52a8\u6ce8\u5165\u4f7f\u7528. ",
    "alicgq": "\u8fd9\u89e3\u6cd5  \u592a\u6ca1\u8ffd\u6c42\u4e86. ",
    "youjiannuo": "\u65e2\u7136\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\uff0c\u5e94\u8be5\u662f\u7ed9\u5f00\u53d1\u4eba\u5458\u51cf\u5c11\u4ee3\u7801\u91cf\uff0c\u53cd\u800c\u9609\u5272\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u81ea\u5e26\u7684\u5b57\u6bb5\uff0c\u7ed9\u6211\u4eec\u5e26\u6765\u52a0\u5927\u66f4\u5927\u7684\u903b\u8f91\u5904\u7406\uff0c\u90a3\u4f60\u8fd9\u6837\u7684\u7b2c\u4e09\u65b9\u5de5\u5177\u8fd8\u6709\u610f\u4e49. ",
    "jianbinJava": "\u8fd8\u662f\u89e3\u51b3\u4e0d\u4e86,\u5e94\u8be5\u4e0d\u662fdefault-datasource \u7684\u95ee\u9898,\u662f\u627e\u4e0d\u5230\u6307\u5b9a\u8868\u7684\u5206\u8868\u7b56\u7565\u7684\u95ee\u9898..\n\u6211\u76ee\u524d\u53ea\u505a\u8bfb\u5199\u5206\u79bb,\u672a\u5bf9\u4efb\u4f55\u8868\u505a\u5206\u8868\u7b56\u7565..\n. ",
    "Ah39": "\u6b63\u5e38\u7684\u5206\u5e93\u5206\u8868\uff0c\u4e00\u4e2aid\u53ef\u4ee5\u786e\u5b9a\u5e93\u548c\u8868\uff0c\u8fd9\u6837\u505a\u8868*\u5e93\u4ea4\u8fd0\u7b97\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\n\u6b63\u5e38\u60c5\u51b5\uff0c20\u591a\u4e2aid\uff0c\u6700\u591a20\u591a\u4e2asql \u3002\u4e00\u4e2aid\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u662f\u54ea\u4e00\u4e2a\u5e93\uff0c\u54ea\u4e00\u4e2a\u8868\u3002. \u5982\u679c\u4f7f\u7528user_id\u5206\u5e93\uff0corder_id\u5206\u8868\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u79cd\u60c5\u51b5\u6709\u591a\u5c11\uff1f\uff1f\uff1f\n90%\u5e94\u8be5\u90fd\u662f\u6309\u7167\u4e00\u4e2aid \u5206\u5e93\u5206\u8868\u3002\u4e3a\u4e86\u5c11\u6570\u60c5\u51b5\uff0c\u8fd9\u6837\u8bbe\u8ba1\u662f\u5f88\u4e0d\u5408\u7406\u7684\u3002\n\u6309user_id\u5206\u5e93\uff0corder_id\u5206\u8868\uff0c\u4e5f\u4e0d\u5e94\u8be5\u662f\u7528\u4ea4\u8fd0\u7b97\u300220\u4e2a\uff08user_id ,order_id ) \u6700\u591a\u53ea\u4f1a\u4ea7\u751f20\u4e2asql \u8bed\u53e5\u3002\n\u4e00\u5bf9 userid \u548c order_id \u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5e93\u548c\u8868\u7684\u3002\u800c\u4e0d\u662f\u5148\u62ffuserid \u786e\u5b9a\u6240\u6709\u7684\u5e93\uff0c\u518d\u62fforder_id \u786e\u5b9a\u6240\u6709\u7684\u8868\uff0c\u518d\u505a\u4ea4\u8fd0\u7b97\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff1a\u65e0\u8bba\u4efb\u4f55\u60c5\u51b5\uff0c\u4ea4\u8fd0\u7b97\u90fd\u662f\u9519\u8bef\u7684\u3002. \u770b\u6765\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd8\u662f\u6ca1\u6709\u4fee\u590d\u554a. ShardingConnection getMetaData 3.0.0.M2 \u7248\u672c\u8fd8\u662f\u4f1a\u53bb\u83b7\u53d6\u8fde\u63a5\u3002. \u6709\u53ef\u80fd\u9020\u6210getMetaData  \u83b7\u53d6\u7684\u8fde\u63a5 \u4e0d\u80fd\u6b63\u786e\u91ca\u653e.",
    "yinjw": "\u6025\u9700\u8be5\u529f\u80fd\uff0c\u5faa\u73af\u65b0\u589e\u6570\u636e\u592a\u6162\u4e86 . ",
    "tian6318": "\u4eae\u54e5\u8fd9\u4e48\u68d2\u73b0\u5728\u652f\u6301\u6279\u91cf\u6267\u884c\u7684\u8bed\u53e5\u4e86\uff1f. \u8fd9\u8fb9\u6211\u4f7f\u7528\u7684\uff0c1.5.4 \u7248\u672c. ",
    "igool": "\u8bf7\u95ee\u73b0\u5728\u8981\u652f\u6301\u6279\u91cf\u7684\u8bdd\uff0c\u53ea\u80fd\u5355\u72ec\u66f4\u65b0\u8fd9\u51e0\u4e2a\u7c7b\u5417\uff1f\u6709\u6ca1\u6709\u5206\u652f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff1f. ",
    "Comven": "@terrymanu \u5efa\u8bae\u4eae\u54e5\u4f18\u5148\u8003\u8651\u4e0b\u652f\u6301\u900f\u4f20\u65b9\u5f0f\u6267\u884csql\uff0c\u8fd9\u6837sharding-jdbc\u77ed\u65f6\u95f4\u4e0d\u652f\u6301\u6279\u91cfinsert\u65b9\u5f0f\u4e5f\u80fd\u591f\u901a\u8fc7\u900f\u4f20\u65b9\u5f0f\uff0c\u5b8c\u6210\u5355\u4e00\u7269\u7406\u8868\u7684\u6279\u91cfinsert\uff0c\u6bd5\u7adf\u5728\u6570\u636e\u91cf\u8f83\u5927\u7684\u65f6\u5019\u6279\u91cfinsert\u6267\u884c\u6548\u7387\u6bd4\u4e00\u6761\u4e00\u6761\u7684\u63d2\u5165\u597d\u592a\u591a\u3002. ",
    "wgou": "\u5efa\u8bae\u4eae\u54e5\u4f18\u5148\u8003\u8651\u4e0b\u652f\u6301\u900f\u4f20\u65b9\u5f0f\u6267\u884csql\uff0c\u8fd9\u6837sharding-jdbc\u77ed\u65f6\u95f4\u4e0d\u652f\u6301\u6279\u91cfinsert\u65b9\u5f0f\u4e5f\u80fd\u591f\u901a\u8fc7\u900f\u4f20\u65b9\u5f0f\uff0c\u5b8c\u6210\u5355\u4e00\u7269\u7406\u8868\u7684\u6279\u91cfinsert\uff0c\u6bd5\u7adf\u5728\u6570\u636e\u91cf\u8f83\u5927\u7684\u65f6\u5019\u6279\u91cfinsert\u6267\u884c\u6548\u7387\u6bd4\u4e00\u6761\u4e00\u6761\u7684\u63d2\u5165\u597d\u592a\u591a\u3002.     connection = DataSourceUtils.getConnection(dataSource);\n            statement = connection.prepareStatement(sql);\n            int rows = 0,count = 0;\n            for(RebBusiLedgerDO busi : busiLedger){\n                int idx =1;\n                statement.setString(idx++, busi.getContractNo());\n                statement.setString(idx++, busi.getSupplierCode());\n                statement.setString(idx++, busi.getBusiNo());\n                statement.setString(idx++, busi.getLedgerNo());\n                statement.setInt(idx++, busi.getStatus());\n                statement.setString(idx++, busi.getLedgerNo());\n                statement.addBatch();\n                count++;rows++;\n                if (count % 5000 == 0) {\n                    statement.executeBatch();\n                    count = 0;\n                   }\n               }\n            if (count != 0) {\n                statement.executeBatch();\n            }\n2.1\u4ee5\u4e0b\u7248\u672c \u6309\u7167\u5206\u8868\u89c4\u5219\u62c6\u5206N\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u505a\u8fd9\u79cd\u6279\u91cf\u4e0d\u662f\u5f88\u5b8c\u7f8e\u4e48\uff1f. \u672a\u6765\u8fd9\u4e2a\u65b9\u6848\u76f8\u5f53\u76f8\u5f53\u503c\u5f97\u671f\u5f85\uff0c\u5e0c\u671b\u5c3d\u5feb\u80fd\u51fa\u6765\u5c31\u5b8c\u7f8e\u4e86\u3002. \u6211\u660e\u767d\u60a8\u7684\u610f\u601d\uff0c\u800c\u4e14\u6211\u5728\u505a\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd9\u4e2a\u53c2\u6570\u4e5f\u6ca1\u6709\u586b\u5199\uff0c\u6240\u4ee5\u63d2\u5165\u66f4\u65b0\u5220\u9664\u90fd\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u6211\u67e5\u8be2\u7684\u65f6\u5019\u6211\u770b\u5230\u7684sql\u8bed\u53e5\u662fselect * from category \u8fd9\u8868\uff0c\u4e0d\u4f1a\u4ece\u5176\u4ed6\u8868\u67e5\u8be2\uff0c\u8fd9\u4e2a\u600e\u4e48\u7834\uff1f\n\u914d\u7f6e=========\n\n\nsharding:table-rules\n\n\nsharding:binding-table-rules\n\n\n\n\n\u540c\u95ee\u3001\u3001. \u8bf7\u95ee\u4e0d\u4f7f\u7528spring boot \u5462\uff1f \u5728properties\u4e2d\u914d\u7f6e xxx.datasource.sharding.tablerule1.actualDataNodes=db_${0..1}.t1_${[0, 5]}\n\u5728spring.xml \u4e2d\u4f7f\u7528 ${xxx.datasource.sharding.tablerule1.actualDataNodes} \u51fa\u9519\u600e\u4e48\u5904\u7406\uff1f\n\u80fd\u4e0d\u80fd\u628a\u89e3\u6790\u5668\u4e2d $ \u5224\u65ad\u6362\u6210\u522b\u7684. releases \u4e2d\u6ca1\u67092.1\u7248\u672c\u30022.1.0 \u7248\u672c\u4efb\u7136\u5728dev\u5206\u652f\u7ee7\u7eed\u5f00\u53d1\u4e2d\uff0c\u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5bf92.1.0\u5c01\u7248\u5462\uff1f. ",
    "lazio579": "insert\u591a\u6761\u8bed\u53e5\uff0c\u6309\u9053\u7406\u662f\u9700\u8981\u5206\u5e03\u5f0f\u4e8b\u52a1\u914d\u5408\u7684\uff0c\u5982\u679c\u4e0d\u5acc\u5f03\u7f51\u6613\u4e2d\u95f4\u4ef6\u7684\u8bdd\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6211\u4eec\u7684\uff1ahttps://github.com/Lede-Inc/cetus. \u6279\u91cf\u63d2\u5165\uff0c\u5982\u679c\u6d89\u53ca\u5230\u591a\u4e2a\u5206\u5e93\uff0c\u5f53\u7136\u9700\u8981\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e86\n. \u5728\u54ea\u513f\u652f\u6301\uff0c\u6211\u6ca1\u6709\u53d1\u73b0\u6709\u4efb\u4f55xa\u7684\u673a\u5236. \u5b98\u65b9\u4e5f\u53ea\u662f\u8bf4\uff1a\nBASE Transaction\n\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\n. ",
    "PrimaryKey3610": "insert into test\n( A , B , C , D)VALUES('\u8fd9\u662f\u7b2c0A','\u8fd9\u662f\u7b2c0B','\u8fd9\u662f\u7b2c0C','\u8fd9\u662f\u7b2c0D'), ('\u8fd9\u662f\u7b2c1A','\u8fd9\u662f\u7b2c1B','\u8fd9\u662f\u7b2c1C','\u8fd9\u662f\u7b2c1D'), ('\u8fd9\u662f\u7b2c2A','\u8fd9\u662f\u7b2c2B','\u8fd9\u662f\u7b2c2C','\u8fd9\u662f\u7b2c2D');\nDisconnected from the target VM, address: '127.0.0.1:63898', transport: 'socket'\n2018-03-21 17:15:08.299 ERROR 15844 --- [           main] c.alibaba.druid.filter.stat.StatFilter   : merge sql error, dbType mysql, sql : insert into test_0\n( A , B , C , D, id)VALUES, 183266118457098240);\ncom.alibaba.druid.sql.parser.ParserException: syntax error, expect ')', pos 46, line 2, column 28, token COMMA\n\u8fd9\u662f\u4e3a\u5565\u554a? \u662f\u6309\u7167\u6279\u91cf\u683c\u5f0f\u6765\u7684\u554a\n.                 InsertStatement insertStatement = (InsertStatement)new SQLParsingEngine(DatabaseType.MySQL, insertSQL, shardingRule).parse();\n \u8fd9\u6837\u5199\u5e76\u6ca1\u6709\u66f4\u65b0. \u8fd9\u53e5\u4ee3\u7801\u662fInsertStatementParserTest.java\u4e2d\u627e\u5230\u7684.. ",
    "dingmengyang": "\u6211\u53c2\u7167example\u90a3\u7684springboot\u9879\u76ee\u914d\u7f6e\uff0c\u6279\u91cf\u63d2\u5165\u8fd8\u662f\u4e0d\u884c\u3002\n\nio.shardingjdbc\nsharding-jdbc-core-spring-boot-starter\n2.0.3\n\n\u9700\u89812.1.0\u5417\uff1f\uff08maven\u4e0a\u73b0\u5728\u53ea\u80fd\u83b7\u53d62.0.3\u7248\u672c\u7684\uff09. ",
    "codehorde": "\u53ea\u652f\u6301\u5f88\u7b80\u5355\u7684sql\u8bed\u6cd5\uff0c\u867d\u7136\u6709dialect\u4f46\u5f88\u591a\u8bed\u6cd5\u90fd\u4e0d\u652f\u6301. ",
    "ratyzhang": "@terrymanu \u4eae\u54e5\nINSERT INTO t_table_yymmdd (xx, xx,....M) VALUES\n(xx,xx,....M),\n(xx,xx,....M),\n(xx,xx,....M)\n....N\n\u5f53M(\u5b57\u6bb5\u6570)N(\u8bb0\u5f55\u6570)\u6bd4\u8f83\u5927\uff0c\u8fdb\u884c\u5206\u8868\u64cd\u4f5c\u65f6\uff0c\u598250020\u65f6\uff0csql\u6267\u884c\u975e\u5e38\u6162\uff0c\u57fa\u672c\u4e0a\u5361\u6b7b\u4e86\u3002\u6839\u636edebug \u5e94\u8be5\u95ee\u9898\u51fa\u5728 sqlRoute \u548c sqlParse \u8fd9\u5757\u3002\u8bf7\u786e\u8ba4\u3002\u5907\u6ce8\uff1a\u7248\u672c\u4e3a3.1.0. ",
    "dexvo": "\u8bf7\u6559\u4e00\u4e0b\u5bf9\u4e8e\u540c\u4e00\u4e2a\u6570\u636e\u6e90\u4e2d\u7684\u4e0d\u540c\u7684\u8868\u53ef\u4ee5\u914d\u7f6e\u4e0d\u540c\u7684table strategy\u5417\uff1f. ",
    "DogFc": "\u53d1\u73b0\u4e00\u4e2a\u6211\u601d\u8def\u4e0a\u7684\u95ee\u9898\uff0c\u65e0\u8bba\u662f\u76f8\u52a0IP\u6bb5\u7684\u65b9\u6cd5\uff0c\u8fd8\u662f\u7528IP\u540e10\u4f4d\u751f\u6210worker\u7684\u65b9\u6cd5\uff0c\u6700\u591a\u4e5f\u53ea\u80fd\u6ee1\u8db31024\u53f0worker\u3002\n\u56e0\u6b64\u6211\u7684\u65b9\u6cd5\u5e76\u6ca1\u6709\u66f4\u9ad8\u7a0b\u5ea6\u7684\u4f18\u5316\uff0c\u53cd\u800c\u5728\u8fd0\u7ef4\u5206\u914d\u673a\u5668IP\u7684\u65f6\u5019\uff0c\u63a7\u5236IP\u540e\u5341\u4f4d\u4e0d\u540c\u6bd4\u63a7\u5236\u6574\u4e2aIP\u6bb5\u76f8\u52a0\u4e0d\u540c\u66f4\u76f4\u89c2\u4e00\u70b9\u3002\n^-^.... \u55ef\u55ef \u597d\u7684. ^-^. ",
    "iswu2013": "\u8fd9\u4e48\u5feb\uff0c\u8c22\u8c22\uff01\u8fd9\u5c31\u8bd5\u8bd5. DataSourceConfig \u5e94\u8be5\u600e\u6837\u914d\u7f6e\u5462\uff1f\u73b0\u5728\u6570\u636e\u4e00\u6b21\u53d6\u51fa\u6765\u4e86\u3002\u4e0b\u9762\u662f\u6211\u7684\u914d\u7f6e\u6587\u4ef6\npackage com.uranus.fans.data.provider.config;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.sql.DataSource;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport com.alibaba.druid.pool.DruidDataSource;\nimport com.dangdang.ddframe.rdb.sharding.api.ShardingDataSourceFactory;\nimport com.dangdang.ddframe.rdb.sharding.api.rule.DataSourceRule;\nimport com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule;\nimport com.dangdang.ddframe.rdb.sharding.api.rule.TableRule;\nimport com.dangdang.ddframe.rdb.sharding.api.strategy.table.TableShardingStrategy;\nimport com.mysql.jdbc.Driver;\n@Configuration\npublic class DataSourceConfig {\n    @Bean\n    public DataSource getDataSource() {\n        return buildDataSource();\n    }\nprivate DataSource buildDataSource() {\n    // \u8bbe\u7f6e\u5206\u5e93\u6620\u5c04\n    Map<String, DataSource> dataSourceMap = new HashMap<>(1);\n    // \u6dfb\u52a0\u4e24\u4e2a\u6570\u636e\u5e93ds_0,ds_1\u5230map\u91cc\n    dataSourceMap.put(\"uranus_fans\", createDataSource(\"uranus_fans\"));\n    // \u8bbe\u7f6e\u9ed8\u8ba4db\u4e3ads_0\uff0c\u4e5f\u5c31\u662f\u4e3a\u90a3\u4e9b\u6ca1\u6709\u914d\u7f6e\u5206\u5e93\u5206\u8868\u7b56\u7565\u7684\u6307\u5b9a\u7684\u9ed8\u8ba4\u5e93\n    // \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5e93\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u5206\u5e93\u7684\u8bdd\uff0cmap\u91cc\u53ea\u653e\u4e00\u4e2a\u6620\u5c04\u5c31\u884c\u4e86\uff0c\u53ea\u6709\u4e00\u4e2a\u5e93\u65f6\u4e0d\u9700\u8981\u6307\u5b9a\u9ed8\u8ba4\u5e93\uff0c\u4f462\u4e2a\u53ca\u4ee5\u4e0a\u65f6\u5fc5\u987b\u6307\u5b9a\u9ed8\u8ba4\u5e93\uff0c\u5426\u5219\u90a3\u4e9b\u6ca1\u6709\u914d\u7f6e\u7b56\u7565\u7684\u8868\u5c06\u65e0\u6cd5\u64cd\u4f5c\u6570\u636e\n    DataSourceRule dataSourceRule = new DataSourceRule(dataSourceMap);\n\n    // \u8bbe\u7f6e\u5206\u8868\u6620\u5c04\uff0c\u5c06t_order_0\u548ct_order_1\u4e24\u4e2a\u5b9e\u9645\u7684\u8868\u6620\u5c04\u5230t_order\u903b\u8f91\u8868\n    // 0\u548c1\u4e24\u4e2a\u8868\u662f\u771f\u5b9e\u7684\u8868\uff0ct_order\u662f\u4e2a\u865a\u62df\u4e0d\u5b58\u5728\u7684\u8868\uff0c\u53ea\u662f\u4f9b\u4f7f\u7528\u3002\u5982\u67e5\u8be2\u6240\u6709\u6570\u636e\u5c31\u662fselect * from\n    // t_order\u5c31\u80fd\u67e5\u5b8c0\u548c1\u8868\u7684\n    TableRule orderTableRule = TableRule.builder(\"fans\").actualTables(Arrays.asList(\"fans_0\", \"fans_1\", \"fans_2\", \"fans_3\", \"fans_4\", \"fans_5\", \"fans_6\", \"fans_7\", \"fans_8\", \"fans_9\"))\n            .dataSourceRule(dataSourceRule).build();\n\n    // \u5177\u4f53\u5206\u5e93\u5206\u8868\u7b56\u7565\uff0c\u6309\u4ec0\u4e48\u89c4\u5219\u6765\u5206\n    ShardingRule shardingRule = ShardingRule.builder().dataSourceRule(dataSourceRule)\n            .tableRules(Arrays.asList(orderTableRule))\n            .tableShardingStrategy(new TableShardingStrategy(\"id\", new ModuloTableShardingAlgorithm()))\n            .build();\n\n    DataSource dataSource = ShardingDataSourceFactory.createDataSource(shardingRule);\n\n    return dataSource;\n}\n\n/**\n * \n * @param dataSourceName\n * @return\n */\nprivate static DataSource createDataSource(final String dataSourceName) {\n    // \u4f7f\u7528druid\u8fde\u63a5\u6570\u636e\u5e93\n    DruidDataSource result = new DruidDataSource();\n    result.setDriverClassName(Driver.class.getName());\n    result.setUrl(String.format(\"jdbc:mysql://localhost:3306/%s?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8\", dataSourceName));\n    result.setUsername(\"root\");\n    result.setPassword(\"wujinsong\");\n    return result;\n}\n\n}\n. \u597d\u7684\uff0c\u591a\u8c22\uff01. ",
    "WangLiangChina": "\u5df2\u7ecf\u8bbe\u7f6e\u8fc7tomcat\u7684\u8fde\u63a5\u4ee5\u53ca\n executor.min.idle.size: 10\n  executor.max.size: 50\n  executor.max.idle.timeout.millisecond: 60000\n. \u8fd9\u4e2a\u95ee\u9898\u5728\u538b\u529b\u975e\u5e38\u5c0f\uff08\u5f00\u53d1\u671f\u95f4\u4f1a\u7ecf\u5e38\u9047\u5230\uff09\uff0c\u573a\u666f\u662f\u91c7\u7528user_id\u4e3a\u5206\u5e93\u4f4d\uff0c\u7136\u540e\u5df2\u6708\u4efd\u5206\u8868\uff0c\u7136\u540e\u53ea\u5e26user_id\u6761\u4ef6\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u3002. \n\u5927\u5bb6\u597d\uff0c\u5f88\u62b1\u6b49\uff0c\u6700\u8fd1\u5728\u5916\u9762\u51fa\u5dee\uff0c\u4e0d\u80fd\u53ca\u65f6\u63d0\u4f9b\u652f\u6301\u3002\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u5173\u4e8e\u963b\u585e\u5bf9\u63a5\u7b56\u7565\uff0c\u6211\u91cd\u5199\u8fc7spring\u8fd9\u4e2a\u8bbe\u7f6e\u7684\uff0c\u4f46\u662f\u5f53\u65f6\u665a\u4e0a\u5bf9\u6e90\u7801\u57cb\u70b9\u5230\u6e90\u7801\u538b\u6d4b\u4f9d\u7136\u4f1a\u51fa\u95ee\u9898\u3002\nSent from my Samsung Galaxy smartphone.\n-------- Original message --------\nFrom: \u5f20\u4eae notifications@github.com\nDate: 8/2/17 15:26 (GMT+08:00)\nTo: dangdangdotcom/sharding-jdbc sharding-jdbc@noreply.github.com\nCc: Liang Wang wanglianglike@outlook.com, Author author@noreply.github.com\nSubject: Re: [dangdangdotcom/sharding-jdbc] sharing java.util.concurrent.RejectedExecutionException (#306)\n\u597d\u7684\uff0c\u591a\u8c22\u5efa\u8bae\uff0c\u4e0b\u4e2a\u7248\u672c\u505a\n\u2015\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/dangdangdotcom/sharding-jdbc/issues/306#issuecomment-319591075, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYqzK_kv92e-6FmLJbH0hhUPxBlbIIYeks5sUCTBgaJpZM4OnqVz.\n. ",
    "LiZhenNet": "SQL\u8bed\u53e5\u9650\u5236\n\u4e0d\u652f\u6301DDL\u8bed\u53e5\n\u6709\u9650\u652f\u6301\u5b50\u67e5\u8be2\n\u4e0d\u652f\u6301HAVING\n\u4e0d\u652f\u6301OR\uff0cUNION \u548c UNION ALL\n\u4e0d\u652f\u6301\u7279\u6b8aINSERT\nhttp://dangdangdotcom.github.io/sharding-jdbc/01-start/limitations/. ",
    "ghost": "\u4e0d\u9700\u8981\u5206\u5e93\u5206\u8868\u7684\u8868\u4e3a\u4f55\u4e5f\u4e0d\u652f\u6301OR\uff0c\u80fd\u4e0d\u80fd\u5bf9\u9ed8\u8ba4\u7684\u6570\u636e\u6e90\u652f\u6301OR\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u7528\u5355\u72ec\u5b9e\u73b0\u52a8\u6001\u6570\u636e\u6e90. I mean \"each\" should be trimmed, as developers may set the k/v like this: \nnames = db0,     db1, db2\nand datasource name(s) can't be found without trimming \"each\". ",
    "sleepingpig": "Is it still unsupported for Sharding-JDBC 3.x?\n. ",
    "denghc0607": "SELECT\n    j.ID,\n    j. STATUS,\n    j.JOB_USER,\n    j.TYPE,\n    j.JOB_LEVEL,\n    j.JOB_CREATETIME,\n    j.SHARDTIME,\n    j.BEFORE_USER,\n    j.EXE_USER,\n    r.RELEASEDATE,\n    r.INNERCODE,\n    r.TITLE,\n    r.SECONDTITLE,\n    r.MEDIASOURCE\nFROM\n    table1 j,\n    table2 r\nWHERE\n    j.ID = r.JOB_ID\nAND j.JOB_USER IN (\n    50063730,\n    1,\n    1645,\n    2,\n    3206,\n    50032273,\n    50020450,\n    2066,\n    50086076\n)\nAND j.TYPE <> 1\nAND j. STATUS IN (1, 5, 6)\nORDER BY\n    SHARDTIME DESC,\n    JOB_LEVEL DESC\n@terrymanu  like this , thank you !!. - \u6069\uff0c\u6211\u505a\u4e86\u8c03\u6574\uff0c\u4e0d\u5bf9\u5206\u7247\u5b57\u6bb5\u8fdb\u884c\u5904\u7406\uff0c\u53ea\u505a\u8def\u7531\u7528\uff0c\u4f46\u662f1.5.4.1\u7248\u672c\u7684\u5206\u9875\u5e94\u8be5\u662f\u6709\u95ee\u9898\u7684\uff0c\u6211\u5728\u7a7a\u768411\u6708\u4efd\u548c12\u6708\u4efd\u4e24\u5f20\u7a7a\u8868\u4e2d\u5206\u522b\u63d2\u5165\u4e24\u6761\u6570\u636e\uff08UPDTIME\u7b26\u5408\u5206\u7247\u7b56\u7565\uff09\uff0c\u67e5\u8be2sql\u8bed\u53e5\u5982\u4e0b:\n        select ID from resourcetable where UPDTIME > '2017-11-01' AND UPDTIME < '2017-12-31'  order by UPDTIME desc limit 0,2\n\n\u67e5\u51fa\u67654\u6761\u7ed3\u679c\u3002\u800c\u5c1d\u8bd5\u4e861.5.3\u67e5\u51fa\u9884\u671f\u7684\u4e24\u6761\u7ed3\u679c\u3002. ",
    "YunaiV": "\ud83d\ude08 \u53c8\u591a\u4e86\u4e00\u4e2a\u53ef\u4ee5\u64b8\u535a\u5ba2\u7684\u70b9. \ud83d\ude1c \u7b49\u6211\u5728\u628a\u60f3\u7814\u7a76\u7684elastic-job \u548c tidb \u7814\u7a76\u4e86\uff0c\u8ddf\u7740\u4eae\u54e5\u5b66\u4e60\uff0c\u4e5f\u7ed9sjdbc \u591a\u591a\u8d21\u732e\u3002\u73b0\u5728\u529f\u529b\u6bd4\u8f83\u6d45\u663e\u54c8\u3002. agree, yes, +1. ",
    "ypg521": "\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u8fd9\u8fb9\u7684\u7ed3\u6784\u662f1\u4e3b\u4e24\u4ece\u7684\u8bfb\u5199\u5206\u79bb\u3002 \u5728\u5f00\u542f\u4e8b\u7269\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u5f53\u524d\u4e8b\u7269\u5185\u7684\u8bfb\u5199\u90fd\u8981\u8d70\u4e3b\u5e93\u3002\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5b9e\u65f6\u6027\u3002\n. @terrymanu   \u8fd8\u9ebb\u70e6\u6709\u7a7a\u7684\u65f6\u5019\u7ed9\u4e2a\u56de\u590d. \u6211\u4e5f\u53d1\u73b0\u6709\u540c\u6837\u7684\u95ee\u9898\uff0c\u6211\u7684\u7248\u672c\u53f7\u662f sharding-jdbc-spring-boot-starter 2.0.0.M3. OK\uff0cAt Weekend. I must BanZhuan today. But The result is always hit a same DB If you have 2 slave DB. @shulyLi    mybatis\u5728\u7b2c\u4e8c\u6b21\u83b7\u53d6connection\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u662fStatement.getConnection()\uff1b \u6211\u7406\u89e3\u7684\u662fStatement\u5728\u7b2c\u4e8c\u6b21\u83b7\u53d6connection\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u9700\u8981getDataSource\u7684\uff1b \u62b1\u6b49\u6211\u82f1\u8bed\u4e0d\u597d\u3002. @terrymanu @haocao  @shulyLi   the  sample code  :  https://github.com/ypg521/sharding-jdbc-demo .. ",
    "moxingwang": "\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u540c\u6837\u4e5f\u9047\u5230\uff0c\u5efa\u8bae\u628ahint\u505a\u51fa\u4e00\u4e2a\u6ce8\u89e3\uff0c\u65b9\u4fbf\u8c03\u7528\u8005\u4f7f\u7528\u3002. \u770b\u6e90\u7801dataSourceMap.remove(each.getMasterDataSourceName());\uff0cdataSourceMap\u88abremove\u6389\u4e86\uff0c\u4e0d\u660e\u767d\u6211\u7684\u914d\u7f6e\u54ea\u91cc\u4e0d\u5bf9\n` public ShardingRule build(final Map dataSourceMap) throws SQLException {\n        Preconditions.checkNotNull(dataSourceMap, \"dataSources cannot be null.\");\n        Preconditions.checkArgument(!dataSourceMap.isEmpty(), \"dataSources cannot be null.\");\n        processDataSourceMapWithMasterSlave(dataSourceMap);\n        Collection tableRules = new LinkedList<>();\n        for (TableRuleConfiguration each : tableRuleConfigs) {\n            tableRules.add(each.build(dataSourceMap));\n        }\n        ShardingStrategy defaultDatabaseShardingStrategy = null == defaultDatabaseShardingStrategyConfig ? null : defaultDatabaseShardingStrategyConfig.build();\n        ShardingStrategy defaultTableShardingStrategy = null == defaultTableShardingStrategyConfig ? null :  defaultTableShardingStrategyConfig.build();\n        KeyGenerator keyGenerator = KeyGeneratorFactory.newInstance(null == defaultKeyGeneratorClass ? DefaultKeyGenerator.class.getName() : defaultKeyGeneratorClass);\n        return new ShardingRule(dataSourceMap, defaultDataSourceName, tableRules, bindingTableGroups, defaultDatabaseShardingStrategy, defaultTableShardingStrategy, keyGenerator);\n    }\nprivate void processDataSourceMapWithMasterSlave(final Map<String, DataSource> dataSourceMap) throws SQLException {\n    for (MasterSlaveRuleConfiguration each : masterSlaveRuleConfigs) {\n        dataSourceMap.put(each.getName(), MasterSlaveDataSourceFactory.createDataSource(dataSourceMap, each, Collections.<String, Object>emptyMap()));\n        dataSourceMap.remove(each.getMasterDataSourceName());\n        for (String slaveDataSourceName : each.getSlaveDataSourceNames()) {\n            dataSourceMap.remove(slaveDataSourceName);\n        }\n    }\n}`. `\n\nshardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"sharding_key\", PreciseDatabaseShardingAlgorithm.class.getName()));\n    shardingRuleConfig.setDefaultTableShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"sharding_key\", PreciseTableShardingAlgorithm.class.getName()));\n`\n\u8fd9\u91cc\u9519\u4e86\uff0cInlineShardingStrategyConfiguration\u5e94\u8be5\u6362\u6210StandardShardingStrategyConfiguration. ",
    "xiaojianyu315": "\u975e\u5e38\u611f\u8c22. ",
    "budingts": "faq\u6587\u6863\u5728\u54ea\u91cc\u554a. ",
    "adamswanglin": "\u597d\u7684\uff0c\u4e86\u89e3. ",
    "daodaovps": "sql\u662f\u522b\u5904\u751f\u6210\u7684,\u4e0d\u662f\u624b\u5199\u7684, \u96be\u529e\u4e86 ,    \u6539\u62101.4.2 \u73b0\u5728\u5c06\u5c31\u7528\u4e86 .    . ",
    "oopp1990": "\u989d\uff0c \u770b\u5b8c\u6e90\u7801\u624d\u53d1\u73b0\u8fd9\u4e0d\u662fbug\u662f\u4e0d\u652f\u6301\u8fd9\u4e2a\u64cd\u4f5c........ \u4e5f\u4e0d\u652f\u6301replace. ",
    "fugaoyang": "\u6211\u540c\u6837\u9047\u5230\u7684\u662f \uff1a\u5728\u63d2\u5165\u975e\u5206\u7247\u8868\u65f6\uff0c\u62a5\u4e86\u8fd9\u6837\u7684\u9519\uff1a\nCaused by: java.sql.SQLException: Generated keys not requested.\n You need to specify Statement.RETURN_GENERATED_KEYS to Statement.executeUpdate() or Connection.prepareStatement().\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1084)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:987)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:973)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)\n    at com.mysql.jdbc.StatementImpl.getGeneratedKeys(StatementImpl.java:1971)\n    at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.getGeneratedKeys(NewProxyPreparedStatement.java:1749)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.getGeneratedKeys(ShardingPreparedStatement.java:231)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n. \u6211\u7528\u7684spring mybatis ,\u63d2\u5165\u7684mapper.xml\u914d\u7f6e\u5982\u4e0b\uff1a\n    \n        insert into CTS_TRADE_REQUEST\n        (TRADE_REQ_NO, ORDER_NO, OUTER_TRANS_ID,\n        ACK_OUTER_TRANS_ID\uff09---\n     \nsharding rule\u914d\u7f6e\u5982\u4e0b\uff1a\n\n             key-generator-class=\"com.biz.sharding.IncrementKeyGenerator\">\n            \n\n\n\n\n\n\n\n\n\n\ntrue\ntrue\n\n. ",
    "cyao2q": "\n\n\n\n\n\n\n\n. \n\n\n\n\n\n\n. ",
    "xuecf8679": "\u6211\u7684\u9879\u76ee\u662f\u4e2a\u666e\u901a\u7684web\u9879\u76ee\uff0c\u76f4\u63a5\u653e\u5230tomcat\u4e0b\u542f\u52a8\uff0c\u4f1a\u81ea\u52a8\u8fd0\u884c\u6d4b\u8bd5\u7c7bTestEngineStartup\uff0c\u53ea\u4e0d\u8fc7\u6d4b\u8bd5\u7c7b\u4f1a\u62a5\u9519\uff0c\u4f1a\u62a5\u5bf9\u8c61\u540d 'carInfo' \u65e0\u6548\uff0c\u4f46\u662f\u9879\u76ee\u53ef\u4ee5\u542f\u52a8\u7684\u8d77\u6765\uff0c\u5176\u4e2d\u9879\u76ee\u4f1a\u76f4\u63a5\u8fde\u63a5\u6211\u4eec\u7684\u6d4b\u8bd5\u6570\u636e\u5e93\uff0c\u9879\u76eegit\u5730\u5740\u4e3a\uff1ahttps://github.com/xuecf8679/demo.git. \u60a8\u597d\uff0c\u4e0a\u9762\u8bf4\u662f\u8bf7\u53c2\u8003example\u4e2d\u7684\u76f8\u5173\u914d\u7f6e\uff0c\u8fd9\u4e2aexample\u5728\u54ea\u5462\uff1f\u6211\u770b\u4e86\u597d\u591a\u4f8b\u5b50\u4e86\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u60a8\u8bf4\u7684\u8fd9\u79cd\u914d\u7f6e\u4f8b\u5b50\u554a\uff0c\u5305\u62ec\u5b98\u65b9\u6559\u7a0b\u4e0a\u7684\u914d\u7f6e\u4e5f\u6ca1\u6709\u8fd9\u79cd\u4f8b\u5b50\u554a\uff0c\u80fd\u7ed9\u51fa\u4e0b\u8f7d\u5730\u5740\u5417\uff1f. ",
    "tikdik": "\u5bf9\u4e8espring\u6dfb\u52a0maven\u5305\n<dependency>\n            <groupId>com.dangdang</groupId>\n            <artifactId>sharding-jdbc-config-spring</artifactId>\n            <version>1.5.3</version>\n        </dependency>\n\u95ee\u9898\u5df2\u89e3\u51b3. ",
    "qmcqyc": "\u5c1d\u8bd5\u53bb\u6539\u4e86\u4e00\u4e0b\u6e90\u7801\uff0c\u6ca1\u6709\u6539\u51fa\u6765\uff0c\u6c42\u52a9\uff01. \u8fd9\u4e2a\u529f\u80fd\u5f88\u5e38\u7528\u554a\uff0c\u4e3a\u5565\u6ca1\u6709\u8ba1\u5212\u8fdb\u884c\u652f\u6301. ",
    "tangmin721": "1.5.2\u4e5f\u80fd\uff0c\u52301.5.3\u5c31\u4e0d\u884c\u4e86. ",
    "Alanlxh": "\u5347\u7ea71.5.3 \u95ee\u9898\u4f9d\u7136\u5b58\u5728. abstain. +1. ",
    "KomachiSion": "\u5f53\u4f7f\u7528REUSE\u4f5c\u4e3aMybatis\u7684defaultExecutorType\u65f6\uff0cReuseExecutor\u4f1a\u7f13\u5b58\u4e8b\u52a1\u4e2d\u7684PreparedStatement\uff0c\u56e0\u6b64\u5728\u6267\u884c\u4e8b\u52a1\u4e2d\u7b2c\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u65f6\uff0cReuseExecutor\u7f13\u5b58\u4e86ShardingPreparedStatement\uff0c\u6267\u884c\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u65f6\u590d\u7528\u4e86\u8be5Statement;\n\u5728ShardingPreparedStatement\u4e2d\uff0c\u4f1a\u6709\u8bb0\u5f55\u5df2\u7ecf\u8def\u7531\u597d\u7684\u5b9e\u9645Statement\uff0c\u5e76\u4e14\u6839\u636e\u8def\u7531\u597d\u7684Statement\u7684\u6570\u91cf\uff0c\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884cResultSets\u7684merge\uff1b\n\u7531\u4e8eSpring\u4e8b\u52a1\u5f00\u542f\uff0c\u5e76\u4e14mybatis\u91c7\u7528\u4e86Reuse\u65b9\u5f0f\uff0c\u6240\u4ee5\u540c\u4e8b\u52a1\u76842\u4e2a\u67e5\u8be2\u8bed\u53e5\u5728\u540c\u4e00\u4e2aShardingPreparedStatement\u4e2d\u5c31\u4f1a\u67092\u4e2a\u5bf9\u5e94\u7684routedStatement\u3002\n\u4f46\u662f\u7b2c\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u4f1a\u5728\u67e5\u8be2\u5b8c\u6bd5\u65f6\u5173\u95edResultSet\n\u56e0\u6b64\uff0c\u5728\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u6267\u884c\u65f6\uff0cShardingPreparedStatement\u68c0\u6d4b\u5230\u4e862\u4e2aRoutedStatement\uff0c\u8ba4\u4e3a\u9700\u8981\u542f\u52a8merge\u6b65\u9aa4\uff0c\u5728mergeEngine\u4e2d\uff0c\u4eceRoutedStatement\u83b7\u53d6\u5230\u4e86\u7b2c\u4e00\u6761\u8bed\u53e5\u5df2\u7ecf\u5173\u95ed\u5e76\u7f6enull\u7684ResultSet\uff0c\u56e0\u6b64\u5bfc\u81f4\u4e86\u7a7a\u6307\u9488\u5f02\u5e38\u7684bug\u3002. The defaultExecutor will cache the prepared statement for the same sql when defaultExecutorType configures REUSE.Because of the cached statement, the second SQL in transaction will reuse the ShardingPreparedStatement the first SQL used.\nShardingPreparedStatement also cached these routed statements of actual datasources, and would determine whether a merge behavior required base on the size of routedStatements.\nSo, when the demo use Spring Transaction and set defaultExecutorType as REUSE, the size of routedStatements will be two after executing the second SQL.\nBut the resultSet of first SQL will be closed by mybatis after handling.\nFinally, the results of actual statement cached in routedStatements will be setted null in ResultSetImpl.realClose.So, when ShardingPreparedStatement executes the merge step, the mergeEngine get a NULL and cause a NullPointerException. In the previous description, Sharding-Sphere uses Service Comb Saga's Restful API to implement saga transactions. But SS would like to use saga coordinator in an internal call. \nAfter discussing with Service Comb, Service Comb Saga will extend some interfaces so that SS can call the saga coordinator internally.\nRelated issue: https://issues.apache.org/jira/browse/SCB-864. SS also starts transaction via Saga API https://github.com/apache/incubator-servicecomb-saga/blob/master/docs/api/api.md .\nThe new API looks like:\n```\n{\n  \"policy\": \"\",\n  \"requests\": [\n    {\n      \"id\": \"\",\n      \"type\": \"\",\n      \"datasource\": \"\",\n      \"parents\": [\n  ],\n  \"transaction\": {\n    \"sql\": \"\",\n    \"params\": [\n      []\n    ]\n  },\n  \"compensation\": {\n    \"sql\": \"\",\n    \"params\": [\n      []\n    ]\n  }\n}\n\n]\n}\n```\nLogic SQLs in a transaction will be parsed and routed, and will be combined into a graph.\nThis graph will be mapped to saga API json and invoke saga coordinator to execute saga transaction.. TODO list of saga transaction:\n- [x] Integrate Service Comb Saga\n  - [x] Build saga request from SQLs in transaction\n  - [x] Invoke Service Comb Saga in SagaTransactionManager\n- [x] Sharding-JDBC support Saga\n  - [x]  Support JDBC statement\n  - [x]  Support JDBC preparedStatement\n  - [x]  Support JDBC BatchPreparedStatement\n- [x] Sharding-Proxy support Saga\n  - [x]  Support Proxy JDBC backend\n- [x] Support different recover policy\n  - [x] Support forward recover policy\n    - [x] Configure the max retires\n  - [x] Support backward recover policy\n    - [x] Generate revert SQL\n- [x] Persistent Store Saga transaction logs \n- [x] Configure Saga params\n  - [x] Configure in Sharding-JDBC\n    - [x] Init configuration\n    - [x] Renew configuration\n  - [x] Configure in Sharding-Proxy\n    - [x] Init configuration\n    - [x] Renew configuration\n- [x] Examples\n  - [x] Example for Sharding-JDBC\n  - [x] Example for Sharding-Proxy. refer to #1774 .. # ShardingTransactional Usage Pre-Document\nAdd maven dependency\n```\n\nio.shardingsphere\nsharding-transaction-spring\n${sharding-sphere.version}\n\n for spring boot \n\norg.springframework.boot\nspring-boot-starter-aop\n${sharding-sphere.version}\n\n for spring namespace \n\norg.aspectj\naspectjweaver\n${sharding-sphere.version}\n\n\norg.springframework\nspring-context-support\n${sharding-sphere.version}\n\n```\nUsing with Spring boot\nAdd @ComponentScan(\"io.shardingsphere.transaction.aspect\") in your spring starter.\n@SpringBootApplication\n@ComponentScan(\"io.shardingsphere.transaction.aspect\")\npublic class ShardingTransactionalSpringBootExample {\n    ......\n}\nNote: If using both sharding-jdbc and sharding-transaction-2pc-xa at the same time, it should need to exclude the auto-configuration of JtaTransactionManager.\n@SpringBootApplication(exclude = JtaAutoConfiguration.class)\n@ComponentScan(\"io.shardingsphere.transaction.aspect\")\npublic class ShardingTransactionalSpringBootExample {\n    ......\n}\nUse @ShardingTransactional with @Transactional.\n```\n    @Transactional\n    @ShardingTransactionType\n    public void changeTransactionTypeToLOCAL() {\n}\n\n@Transactional\n@ShardingTransactionType(TransactionType.XA)\npublic void changeTransactionTypeToXA() {\n\n}\n\n@Transactional\n@ShardingTransactionType(TransactionType.BASE)\npublic void changeTransactionTypeWithEnvironment() {\n\n}\n\n```\nUsing with Spring NameSpace\nAdd necessary configuration in your spring configuration xml.\n```\n\n<aop:aspectj-autoproxy proxy-target-class=\"true\"/>\n<bean id=\"shardingTransactionAspect\" class=\"io.shardingsphere.transaction.aspect.ShardingTransactionalAspect\"/>\n\n......\n\n\n``\nOr importshardingTransaction.xml` in your spring configuration xml directly\n```\n\n<import resource=\"classpath:META-INF/shardingTransaction.xml\"/>\n<bean id=\"yourBean\" ...../>\n\n\n```\nUse @ShardingTransactional with @Transactional.\n```\n    @Transactional\n    @ShardingTransactionType\n    public void changeTransactionTypeToLOCAL() {\n}\n\n@Transactional\n@ShardingTransactionType(TransactionType.XA)\npublic void changeTransactionTypeToXA() {\n\n}\n\n@Transactional\n@ShardingTransactionType(TransactionType.BASE)\npublic void changeTransactionTypeWithEnvironment() {\n\n}\n\n```\nShardingTransactionType attribute\n| Name | DataType | Description |\n| ------ | ---------- | ------------- |\n| value   | TransactionType | Transaction type LOCAL, XA or BASE default LOCAL |. #ShardingTransactional Usage Pre-Document\nAdd maven dependency\n```\n\nio.shardingsphere\nsharding-transaction-spring\n${sharding-sphere.version}\n\n for spring boot \n\norg.springframework.boot\nspring-boot-starter-aop\n${sharding-sphere.version}\n\n for spring namespace \n\norg.aspectj\naspectjweaver\n${sharding-sphere.version}\n\n\norg.springframework\nspring-tx\n${sharding-sphere.version}\n\n\norg.springframework\nspring-context-support\n${sharding-sphere.version}\n\n```\nUsing with Spring boot\nAdd @ComponentScan(\"io.shardingsphere.transaction.aspect\") in your spring starter.\n@SpringBootApplication\n@ComponentScan(\"io.shardingsphere.transaction.aspect\")\npublic class ShardingTransactionalSpringBootExample {\n    ......\n}\nUse @ShardingTransactional instead of @Transactional.\n```\n    @ShardingTransactional\n    public void changeTransactionTypeToLOCAL() {\n}\n\n@ShardingTransactional(type = \"XA\")\npublic void changeTransactionTypeToXA() {\n\n}\n\n@ShardingTransactional(type = \"BASE\", environment = \"PROXY\")\npublic void changeTransactionTypeWithEnvironment() {\n\n}\n\n```\nUsing with Spring NameSpace\nAdd necessary configuration in your spring configuration xml.\n```\n\n<aop:aspectj-autoproxy />\n<bean id=\"shardingTransactionAspect\" class=\"io.shardingsphere.transaction.aspect.ShardingTransactionalAspect\"/>\n\n......\n\n\n``\nOr importshardingTransaction.xml` in your spring configuration xml directly\n```\n\n<import resource=\"META-INF/shardingTransaction.xml\"/>\n<bean id=\"yourBean\" ...../>\n\n\n```\nUse @ShardingTransactional instead of @Transactional.\n```\n    @ShardingTransactional\n    public void changeTransactionTypeToLOCAL() {\n}\n\n@ShardingTransactional(type = \"XA\")\npublic void changeTransactionTypeToXA() {\n\n}\n\n@ShardingTransactional(type = \"BASE\", environment = \"PROXY\")\npublic void changeTransactionTypeWithEnvironment() {\n\n}\n\n```\nShardingTransactional attribute\n| Name | DataType | Description |\n| ------ | ---------- | ------------- |\n| type   | TransactionType | Transaction type LOCAL, XA or BASE default LOCAL |\n| environment | ShardingEnvironment | ShardingSphere product the transaction running JDBC or PROXY default JDBC |\n| value | String | Alias value attribute of Spring @Transactional |\n| propagation | Propagation | Alias propagation attribute of Spring @Transactional |\n| isolation | Isolation | Alias isolation attribute of Spring @Transactional |\n| timeout | int | Alias timeout attribute of Spring @Transactional |\n| readOnly | boolean | Alias readOnly attribute of Spring @Transactional |\n| rollbackFor | Class<? extends Throwable>[] | Alias rollbackFor attribute of Spring @Transactional |\n| rollbackForClassName | String[] | Alias rollbackForClassName attribute of Spring @Transactional |\n| noRollbackFor | Class<? extends Throwable>[] | Alias noRollbackFor attribute of Spring @Transactional |\n| noRollbackForClassName | String[] | Alias noRollbackForClassName attribute of Spring @Transactional |. Hello @1610200527. Would you mind provide your configuration, table structure, and complete SQL in the transaction? It will help us to position problem.\nIf you can provide example code which can recurrent this problem will be better.. Thinks for your feedback.\nWe will try to recurrent the problem, if there are other relevant information, please update in the comments in time.. Would you mind provide any informations for TempInfoMapper?\nThe above only provides the informations of temp_photo. Hello @1610200527.\nI try to recurrent the problem without TempInfoMapper and KafkaService, but failed.\nThe following are my insert and delete statements and service\uff1a\n```\n\n    INSERT INTO temp_photo (photo_id, temp_id, temp_a, temp_b) VALUES\n    \n        (#{each.photoId,jdbcType=BIGINT}, #{each.tempId,jdbcType=VARCHAR}, #{each.tempA,jdbcType=VARCHAR}, #{each.tempB,jdbcType=VARCHAR})\n    ;\n\n\n    DELETE FROM temp_photo WHERE temp_id = #{arg0,jdbcType=VARCHAR} AND temp_a = #{arg1,jdbcType=VARCHAR};\n\n```\n```\n@Service\npublic class TempServiceImpl {\n@Autowired\nprivate TempPhotoMapper tempPhotoMapper;\n\npublic void init() {\n    this.tempPhotoMapper.createTableIfNotExists();\n}\n\n@Transactional(rollbackFor = Exception.class)\npublic void saveInfo(TempImportData tempImportData) {\n    this.tempPhotoMapper.insertPhotos(tempImportData.getPhotoList());\n}\n\n@Transactional(rollbackFor = Exception.class)\npublic void editInfo(TempImportData tempImportData, String temp_a) {\n    this.delInfo(tempImportData, temp_a);\n    this.saveInfo(tempImportData);\n}\n\n@Transactional(rollbackFor = Exception.class)\npublic void delInfo(TempImportData tempImportData, String temp_a) {\n    this.tempPhotoMapper.deleteById(tempImportData.getId(), temp_a);\n}\n\n}\n```\nAnd I test insert 10 rows to table by saveInfo and do edit one of by editInfo, it works well.\n```\n    private static void process(ConfigurableApplicationContext applicationContext) {\n        TempServiceImpl tempService = applicationContext.getBean(TempServiceImpl.class);\n        tempService.init();\n    String tempId = \"temp_test\";\n    TempImportData initData = new TempImportData(tempId);\n    TempImportData newData = new TempImportData(tempId);\n\n    for (long i = 0; i < 10; i++) {\n        TempPhoto tempPhoto = new TempPhoto();\n        tempPhoto.setPhotoId(i);\n        tempPhoto.setTempId(tempId);\n        tempPhoto.setTempA(\"xxx\" + i);\n        tempPhoto.setTempB(\"yyy\" + i);\n        initData.getPhotoList().add(tempPhoto);\n    }\n    TempPhoto tempPhoto = new TempPhoto();\n    tempPhoto.setPhotoId(1L);\n    tempPhoto.setTempId(tempId);\n    tempPhoto.setTempA(\"aaa\" + 1);\n    tempPhoto.setTempB(\"bbb\" + 1);\n    newData.getPhotoList().add(tempPhoto);\n\n    tempService.saveInfo(initData);\n    tempService.editInfo(newData, \"xxx1\");\n}\n\n```\nI recommend canceling the Kafka message and trying again.\nIf the problem still exists, I prefer that providing more informations so that we can recurrent this problem.. Hi @1610200527.  Is there any progress on this issue?\nIf not more questions, can we close this issue? Thanks.. @tuohai666 I just tested raw JDBC, it works well with jdbcType=\"LongVarchar\".\nAs @fifadxj said, the problem is caused by Sharding-JDBC's setCharacterStream in AbstractShardingPreparedStatementAdapter calling this.setParameter instead of statement.setCharacterStream. Hello @Lzw2016, Thanks for your bug report and solution. \nWe will check your solution and feed back as soon as possible.. Hi @Lzw2016. Thanks for the solution you provided, it is very useful. We have fixed this problem and will take effect in the next release.\nBy the way, I suggest that using @Update instead of @Select when executing DML with mybatis.\n. \n\n\nWhat is your sharding rule?\n\noh\uff0cI forgot this\nsharding rule:\nsharding table: t_equip_online_time\nsharding colum\uff1a calendar\nimplement RangeShardingAlgorithm: by month\n6 databases: sharding0 ... sharding5\nEach database is divided into two months of data: sharding0.table6 sharding0:table12\nsharding1.table1 sharding1:table7\n\n@fanyaoxuan, your sharding rule looks like only shard t_equip_online_time table. How about monitor and monitor_type? Are they broadcast table?\nWould you mind provide table structure about these tables and RangeShardingAlgorithm code?\nIt will help us find problem.. Hi @fanyaoxuan. This problem should be caused by date method in your where clause. ShardingSphere can route number, plain text and SQL placeholder in where clause. When using mysql method like date, ShardingSphere will do full routing for this SQL.\nI test the SQL\nSELECT * FROM t_equip_online_time WHERE calendar BETWEEN #{arg0, jdbcType=DATE} AND #{arg1, jdbcType=DATE}\nit work well.\n[INFO ] 2018-12-14 15:30:02,312 --main-- [Sharding-Sphere-SQL] Logic SQL: SELECT * FROM t_equip_online_time WHERE calendar BETWEEN ? AND ? \n[INFO ] 2018-12-14 15:30:02,312 --main-- [Sharding-Sphere-SQL] SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@5341641d), containStar=true, selectListLastPosition=9, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null, subQueryStatements=[]) \n[INFO ] 2018-12-14 15:30:02,312 --main-- [Sharding-Sphere-SQL] Actual SQL: sharding0 ::: SELECT * FROM t_equip_online_time12 WHERE calendar BETWEEN ? AND ? ::: [[2018-10-14, 2018-12-14]] \n[INFO ] 2018-12-14 15:30:02,312 --main-- [Sharding-Sphere-SQL] Actual SQL: sharding4 ::: SELECT * FROM t_equip_online_time10 WHERE calendar BETWEEN ? AND ? ::: [[2018-10-14, 2018-12-14]] \n[INFO ] 2018-12-14 15:30:02,312 --main-- [Sharding-Sphere-SQL] Actual SQL: sharding5 ::: SELECT * FROM t_equip_online_time11 WHERE calendar BETWEEN ? AND ? ::: [[2018-10-14, 2018-12-14]]\nSo, I suggest you remove date method in your SQL, and try again.. > > should\n\nsorry,I discovered the problem yesterday.\nIf I use the date function, the sharding rule will fail.\n\nAll right, if you don't have any more question, we will close this issue.\nThanks for your feedback.. I test native JDBC, getSchemaName and getCatalogName return '' also.\ngetTableName return null.\nSo should we only change the return value of getTableName to null?. Hi @LX1993728, I try to recurrent this problem by your example codes, but failed.\nTable t_order_order_items is created in ds2 correctly, and no exception be thrown.\nThe page of http://localhost/init/data show success in browser.\nWould you mind try again and provide more information?. > Sorry, there is no problem with initializing the data. But when I query, I will throw the exception mentioned above. Such as when querying order data\n\nhttp://localhost/order/range\nhttp://localhost/order/count\n\nThese two queries will lead to the join of single table and sharding tables, the SQLs are following:\n```\nSELECT\n  orderitems0_.orders_order_id AS orders_o1_2_0_,\n  orderitems0_.order_items     AS order_it2_2_0_,\n  orderitem1_.order_item_id    AS order_it1_1_1_,\n  orderitem1_.count            AS count2_1_1_,\n  orderitem1_.order_id         AS order_id3_1_1_,\n  orderitem1_.product_id       AS product_4_1_1_,\n  product2_.product_id         AS product_1_3_2_,\n  product2_.name               AS name2_3_2_,\n  product2_.price              AS price3_3_2_,\n  product2_.stock              AS stock4_3_2_\nFROM t_order_order_items orderitems0_ INNER JOIN t_order_item orderitem1_\n    ON orderitems0_.order_items = orderitem1_.order_item_id\n  LEFT OUTER JOIN t_product product2_ ON orderitem1_.product_id = product2_.product_id\nWHERE orderitems0_.orders_order_id = ?;\nSELECT\n  orderitems0_.orders_order_id AS orders_o1_2_0_,\n  orderitems0_.order_items     AS order_it2_2_0_,\n  orderitem1_.order_item_id    AS order_it1_1_1_,\n  orderitem1_.count            AS count2_1_1_,\n  orderitem1_.order_id         AS order_id3_1_1_,\n  orderitem1_.product_id       AS product_4_1_1_,\n  product2_.product_id         AS product_1_3_2_,\n  product2_.name               AS name2_3_2_,\n  product2_.price              AS price3_3_2_,\n  product2_.stock              AS stock4_3_2_\nFROM t_order_order_items orderitems0_ INNER JOIN t_order_item orderitem1_\n    ON orderitems0_.order_items = orderitem1_.order_item_id\n  LEFT OUTER JOIN t_product product2_ ON orderitem1_.product_id = product2_.product_id\nWHERE orderitems0_.orders_order_id = ?;\n```\nShardingSphere will do boardcast because SQL include sharding table and the condition is not sharding column.  \nThere are two solutions for this problem. \n- Trying to shard t_order_order_item to each database;\n- Trying to upgrade ShardingSphere version to 3.1.0.M1 and set t_order_order_item as board cast table.. BTW, I found that Hibernate will create foreign key for t_order --> t_user and t_order_item --> t_product. ShardingSphere does not support foreign keys for sharding tables currently.\nI suggest you change t_product to boardcast table too, and bind t_order and t_user.. Can you update your example code? . OK, I have recurrent this problem, it may be a row count bug in broadcast table.\nWe will confirm and feedback as soon as possible.. > Yes, after I update. Rerun and throw an exception when creating data. I debugged it and found that it should be wrong when inserting the broadcast tablet_order_order_items data. It is said that it is expected to insert one but actually inserts multiple pieces. It is reasonable to insert data into the broadcast table. It should be inserted correctly. An exception should be thrown.\n\n```\nHibernate: update t_order set total=?, user_id=? where order_id=?\nHibernate: insert into t_order_order_items (orders_order_id, order_items) values (?, ?)\n2018-12-28 12:31:17.822 ERROR 44380 --- [p-nio-80-exec-1] o.h.i.ExceptionMapperStandardImpl        : HHH000346: Error during managed flush [org.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1]\n2018-12-28 12:31:17.823  INFO 44380 --- [p-nio-80-exec-1] o.h.e.j.b.internal.AbstractBatchImpl     : HHH000010: On release of batch it still contained JDBC statements\n2018-12-28 12:31:17.841 ERROR 44380 --- [p-nio-80-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1; nested exception is org.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1] with root cause\norg.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1\n  at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:77) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1340) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1454) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:511) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3283) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2479) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n```\n\nThis problem has submitted a new issue #1696. . Hello @cheerlxd. \nI'm so sorry for this problem. \nThe API for Spring namespace xsd for Sharding and Master-slave has changed in 3.0.0. You can check in release lists or ISSUE #1203. And the document has not been updated in time.\nIf you want to use the master-slave related function, you can download the master branch of  sharding-sphere-example repo and run first.\nThe master-slave example is in \nsharding-jdbc-example\n    |- spring-namespace-nodep-example\n       |- spring-namespace-nodep-mybatis-example. We will update the document as soon as possible. Great! Thanks for your feedback.\nIf there are no other problems, we will update the documents as soon as possible and close this issue.. Hi @chenshao6311, I can not recurrent your problem with your description.\nI need more information.\n\nIs that ShardingSphere example? if not, please provides your full ShardingSphere configuration or try to run ShardingSphere example first.\nCan you open sql.show and provide the SQLstatement and actual SQL like following:\n[INFO ] 2019-01-18 09:32:21,022 --main-- [ShardingSphere-SQL] Logic SQL: SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id and o.order_id=?; \n[INFO ] 2019-01-18 09:32:21,022 --main-- [ShardingSphere-SQL] SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@181e72d3), containStar=true, firstSelectItemStartPosition=7, selectListLastPosition=11, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.of(i))], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null, subQueryStatements=[], subQueryConditions=[]) \n[INFO ] 2019-01-18 09:32:21,022 --main-- [ShardingSphere-SQL] Actual SQL: ds_1 ::: SELECT i.* FROM t_order_1 o, t_order_item_1 i WHERE o.order_id = i.order_id and o.order_id=?; ::: [[292953431725834241]] \n[INFO ] 2019-01-18 09:32:21,022 --main-- [ShardingSphere-SQL] Actual SQL: ds_0 ::: SELECT i.* FROM t_order_1 o, t_order_item_1 i WHERE o.order_id = i.order_id and o.order_id=?; ::: [[292953431725834241]]. I have recurrent this problem, I find there is a error in your configuration.\n\nThe binding table in ShardingSphere is to bind the sequence of actual nodes between two sharding tables.\nIn your configuration, table t_order will be parsed to \n1 demo_ds_0.t_order_0\n2 demo_ds_0.t_order_1\n3 demo_ds_1.t_order_0\n4 demo_ds_1.t_order_1\nbut table t_order_item is \n1 demo_ds_0.t_order_item_1\n2 demo_ds_0.t_order_item_0\n3 demo_ds_1.t_order_item_1\n4 demo_ds_1.t_order_item_0\nSo when routing t_order to demo_ds_0.t_order_1(2) and demo_ds_1.t_order_1(4), ShardingSphere will get demo_ds_0.t_order_item_0(2) and demo_ds_1.t_order_item_0(4)\nBut your sharding rule is demo_ds_0.t_order_1 map to demo_ds_0.t_order_item_1. Then your problem happened. . Hi @jmbkeyes, what's your BasicDataSource? It looks like commons-dbcp, but I can not recurrent your problem with commons-dbcp.\nMy configuration is following:\n```\n@Configuration\npublic class IssueConfiguration {\n@Bean(name = \"dataSource\")\n@Primary\npublic DataSource dataSource() throws SQLException {\n    BasicDataSource dataSource = new BasicDataSource();\n    dataSource.setInitialSize(8);\n    dataSource.setMinIdle(8);\n    dataSource.setMaxIdle(12);\n    dataSource.setRemoveAbandonedTimeout(10);\n    dataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n    dataSource.setUrl(\"jdbc:mysql://localhost:3306/demo_ds?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE\");\n    dataSource.setUsername(\"root\");\n    dataSource.setPassword(\"\");\n    ArrayList initSQLs = new ArrayList();\n    initSQLs.add(\"SET NAMES 'utf8mb4'\");\n    dataSource.setConnectionInitSqls(initSQLs);\n\n    Map<String, DataSource> dataSourceMap = new HashMap<>();\n    dataSourceMap.put(\"ds0\", dataSource);\n\n    // Configure table rule\n    TableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();\n    logTableRuleConfig.setLogicTable(\"center_op_log\");\n    logTableRuleConfig.setActualDataNodes(\"ds0.center_op_log${0..4}\");\n\n    // Configure strategies for database + table sharding\n    logTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"main_center_id\", \"center_op_log${mainCenterId % 4}\"));\n\n    // Configure sharding rule\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    shardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);\n    shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\n\n    Properties properties = new Properties();\n    properties.setProperty(\"sql.show\", \"true\");\n\n    return ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, new ConcurrentHashMap<String, Object>(), properties);\n}\n\n}\nAnd runtime result:\n  .   _          _             _ \n /\\ / '  _ ()_   _ \\ \\ \\ \\\n( ( )_ | ' | '| | ' \\/ ` | \\ \\ \\ \\\n \\/  )| |)| | | | | || (_| |  ) ) ) )\n  '  || .|| ||| |_, | / / / /\n =========||==============|___/=///_/\n :: Spring Boot ::       (v1.5.17.RELEASE)\n[INFO ] 2019-01-18 15:29:35,540 --main-- [io.shardingsphere.issue.IssueApplication] Starting IssueApplication on yangyideMacBook-Pro.local with PID 1648 (/Users/yangyi/Documents/java/ss-issue/issue1774/target/classes started by yangyi in /Users/yangyi/Documents/java/ss-issue) \n[INFO ] 2019-01-18 15:29:35,546 --main-- [io.shardingsphere.issue.IssueApplication] No active profile set, falling back to default profiles: default \n[WARN ] 2019-01-18 15:29:36,158 --main-- [org.mybatis.spring.mapper.ClassPathMapperScanner] No MyBatis mapper was found in '[io.shardingsphere.issue]' package. Please check your configuration. \nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 15:29:36 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\n[INFO ] 2019-01-18 15:29:36,936 --main-- [org.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [\n    name: default\n    ...] \n[INFO ] 2019-01-18 15:29:36,980 --main-- [org.hibernate.Version] HHH000412: Hibernate Core {4.3.11.Final} \n[INFO ] 2019-01-18 15:29:36,981 --main-- [org.hibernate.cfg.Environment] HHH000206: hibernate.properties not found \n[INFO ] 2019-01-18 15:29:36,982 --main-- [org.hibernate.cfg.Environment] HHH000021: Bytecode provider name : javassist \n[INFO ] 2019-01-18 15:29:37,053 --main-- [org.hibernate.annotations.common.Version] HCANN000001: Hibernate Commons Annotations {4.0.5.Final} \n[WARN ] 2019-01-18 15:29:37,072 --main-- [org.hibernate.engine.jdbc.spi.TypeInfo] HHH000362: Unable to retrieve type info result set : java.sql.SQLException: Connection com.mysql.jdbc.JDBC4Connection@432034a is closed. \n[INFO ] 2019-01-18 15:29:37,075 --main-- [org.hibernate.dialect.Dialect] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect \n[WARN ] 2019-01-18 15:29:37,078 --main-- [org.hibernate.engine.jdbc.internal.JdbcServicesImpl] HHH000341: Could not obtain connection metadata : getCatalog \n[INFO ] 2019-01-18 15:29:37,078 --main-- [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] HHH000422: Disabling contextual LOB creation as connection was null \n[INFO ] 2019-01-18 15:29:37,119 --main-- [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] HHH000397: Using ASTQueryTranslatorFactory \n[INFO ] 2019-01-18 15:29:37,259 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000227: Running hbm2ddl schema export \nHibernate: drop table if exists center_op_log\n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Logic SQL: drop table if exists center_op_log \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.DropTableStatement@70730db \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log0 \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log1 \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log2 \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log3 \n[INFO ] 2019-01-18 15:29:37,555 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log4 \nHibernate: create table center_op_log (id integer not null, main_center_id integer, value varchar(255), primary key (id))\n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Logic SQL: create table center_op_log (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.CreateTableStatement@fb2e3fd \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log0 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log1 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log2 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log3 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,613 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log4 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 15:29:37,708 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000230: Schema export complete \n[INFO ] 2019-01-18 15:29:38,067 --main-- [io.shardingsphere.issue.IssueApplication] Started IssueApplication in 2.75 seconds (JVM running for 3.327) \n[INFO ] 2019-01-18 15:29:38,068 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000227: Running hbm2ddl schema export \nHibernate: drop table if exists center_op_log\n[INFO ] 2019-01-18 15:29:38,068 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 15:29:38,068 --main-- [ShardingSphere-SQL] Logic SQL: drop table if exists center_op_log \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.DropTableStatement@2262d6d5 \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log0 \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log1 \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log2 \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log3 \n[INFO ] 2019-01-18 15:29:38,069 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log4 \n[INFO ] 2019-01-18 15:29:38,113 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000230: Schema export complete \nProcess finished with exit code 0\n. Can you debug and provide us what context will throw exception in `DatabaseMetadata.getTableMetadata`?. BTW, which version you dbcp2 used?. Hi @jmbkeyes I still can not recurrent with `dbcp2 2.5.0`, `spring boot 1.2.5`.\n@Configuration\npublic class IssueConfiguration {\n@Bean(name = \"dataSource\")\n@Primary\npublic DataSource dataSource() throws SQLException {\n    BasicDataSource dataSource = new BasicDataSource();\n    dataSource.setMaxTotal(20);\n    dataSource.setInitialSize(8);\n    dataSource.setMinIdle(8);\n    dataSource.setMaxIdle(12);\n    dataSource.setMaxWaitMillis(10000);\n    dataSource.setRemoveAbandonedTimeout(10);\n    dataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n    dataSource.setUrl(\"jdbc:mysql://localhost:3306/demo_ds?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE\");\n    dataSource.setUsername(\"root\");\n    dataSource.setPassword(\"\");\n    ArrayList initSQLs = new ArrayList();\n    initSQLs.add(\"SET NAMES 'utf8mb4'\");\n    dataSource.setConnectionInitSqls(initSQLs);\n    dataSource.setCacheState(false);\n\n    Map<String, DataSource> dataSourceMap = new HashMap<>();\n    dataSourceMap.put(\"ds0\", dataSource);\n\n    // Configure table rule\n    TableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();\n    logTableRuleConfig.setLogicTable(\"center_op_log\");\n    logTableRuleConfig.setActualDataNodes(\"ds0.center_op_log${0..4}\");\n\n    // Configure strategies for database + table sharding\n    logTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"main_center_id\", \"center_op_log${mainCenterId % 4}\"));\n\n    // Configure sharding rule\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    shardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);\n    shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\n\n    Properties properties = new Properties();\n    properties.setProperty(\"sql.show\", \"true\");\n\n    return ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, new ConcurrentHashMap<String, Object>(), properties);\n}\n\n}\n```\n```\n.   _          _             _ \n /\\ / '  _ ()_   _ \\ \\ \\ \\\n( ( )_ | ' | '| | ' \\/ ` | \\ \\ \\ \\\n \\/  )| |)| | | | | || (_| |  ) ) ) )\n  '  || .|| ||| |_, | / / / /\n =========||==============|___/=///_/\n :: Spring Boot ::        (v1.2.5.RELEASE)\n[INFO ] 2019-01-18 16:11:33,344 --main-- [io.shardingsphere.issue.IssueApplication] Starting IssueApplication on yangyideMacBook-Pro.local with PID 1870 (/Users/yangyi/Documents/java/ss-issue/issue1774/target/classes started by yangyi in /Users/yangyi/Documents/java/ss-issue) \nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\nFri Jan 18 16:11:34 CST 2019 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\n[INFO ] 2019-01-18 16:11:34,878 --main-- [org.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [\n    name: default\n    ...] \n[INFO ] 2019-01-18 16:11:34,911 --main-- [org.hibernate.Version] HHH000412: Hibernate Core {4.3.10.Final} \n[INFO ] 2019-01-18 16:11:34,911 --main-- [org.hibernate.cfg.Environment] HHH000206: hibernate.properties not found \n[INFO ] 2019-01-18 16:11:34,912 --main-- [org.hibernate.cfg.Environment] HHH000021: Bytecode provider name : javassist \n[INFO ] 2019-01-18 16:11:35,033 --main-- [org.hibernate.annotations.common.Version] HCANN000001: Hibernate Commons Annotations {4.0.5.Final} \n[WARN ] 2019-01-18 16:11:35,053 --main-- [org.hibernate.engine.jdbc.spi.TypeInfo] HHH000362: Unable to retrieve type info result set : java.sql.SQLException: Connection is null. \n[INFO ] 2019-01-18 16:11:35,055 --main-- [org.hibernate.dialect.Dialect] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect \n[WARN ] 2019-01-18 16:11:35,058 --main-- [org.hibernate.engine.jdbc.internal.JdbcServicesImpl] HHH000341: Could not obtain connection metadata : getCatalog \n[INFO ] 2019-01-18 16:11:35,059 --main-- [org.hibernate.engine.jdbc.internal.LobCreatorBuilder] HHH000422: Disabling contextual LOB creation as connection was null \n[INFO ] 2019-01-18 16:11:35,106 --main-- [org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory] HHH000397: Using ASTQueryTranslatorFactory \n[INFO ] 2019-01-18 16:11:35,248 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000227: Running hbm2ddl schema export \nHibernate: drop table if exists center_op_log\n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Logic SQL: drop table if exists center_op_log \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.DropTableStatement@6ad16c5d \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log0 \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log1 \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log2 \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log3 \n[INFO ] 2019-01-18 16:11:35,535 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log4 \nHibernate: create table center_op_log (id integer not null, main_center_id integer, value varchar(255), primary key (id))\n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Logic SQL: create table center_op_log (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.CreateTableStatement@7f1ef916 \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log0 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log1 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log2 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log3 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,675 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: create table center_op_log4 (id integer not null, main_center_id integer, value varchar(255), primary key (id)) \n[INFO ] 2019-01-18 16:11:35,766 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000230: Schema export complete \n[INFO ] 2019-01-18 16:11:35,947 --main-- [io.shardingsphere.issue.IssueApplication] Started IssueApplication in 2.979 seconds (JVM running for 3.498) \n[INFO ] 2019-01-18 16:11:35,948 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000227: Running hbm2ddl schema export \nHibernate: drop table if exists center_op_log\n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Rule Type: sharding \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Logic SQL: drop table if exists center_op_log \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] SQLStatement: io.shardingsphere.core.parsing.antlr.sql.statement.ddl.DropTableStatement@45e9b12d \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log0 \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log1 \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log2 \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log3 \n[INFO ] 2019-01-18 16:11:35,949 --main-- [ShardingSphere-SQL] Actual SQL: ds0 ::: drop table if exists center_op_log4 \n[INFO ] 2019-01-18 16:11:35,989 --main-- [org.hibernate.tool.hbm2ddl.SchemaExport] HHH000230: Schema export complete \nProcess finished with exit code 0\n```\nCan you provide more information about the code segment of throw exception in DatabaseMetadata.getTableMetadata?. Thanks your feedback, I have recurrent this problem by change hbm2ddl.auto=update\nAnd that's true this.connection is closed. . > When I start my app, some feature works but some doesn't not work, and from the log, it seems that all sql executed through shardconnection for those query doesn't contain shard table.\n\nhow to handle it? I only need shard big table in one database.\n2019-01-18 16:50:00 INFO ShardingSphere-SQL:71 - Rule Type: sharding\n2019-01-18 16:50:00 INFO ShardingSphere-SQL:71 - Logic SQL: select gs. from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ?\n2019-01-18 16:50:00 INFO ShardingSphere-SQL:71 - SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@1678f948), containStar=true, firstSelectItemStartPosition=7, selectListLastPosition=12, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.of(gs))], groupByItems=[], orderByItems=[], limit=Limit(offset=null, rowCount=LimitValue(value=100, index=2, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\n2019-01-18 16:50:00 INFO ShardingSphere-SQL:71 - Actual SQL: ds0 ::: select gs. from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ? ::: [[20190117, 20190118, 100]]\n\nIf you use shardingDataSource as unique datasource, all SQL will execute through shardConnection.\nYou can set shardingRuleConfig.setDefaultDataSourceName(\"ds0\"); so that that non-shard SQL can route to the one datasource\n. ShardConnection support single table, you can configure a single ds for non-shard table and multiple ds for shard tables like that \n```\nDatasouceMap(\"singleDs\" --> DsObject1, \"shardDs0\" --> DsObject2, \"shardDs1\" --> DsObject3 ....)\n// set default datasource if SQL table is not shard\nshardingRuleConfig.setDefaultDataSourceName(\"singleDs\")\n// shard tables configure actual node to shardDS\nlogTableRuleConfig.setLogicTable(\"center_op_log\");\nlogTableRuleConfig.setActualDataNodes(\"shardDs${0..1}.center_op_log${0..4}\");\n```\nOf course, for your example, you only have one ds is enough.. > hmm, i use only one ds, but it still run via sharden connection.\n\n```\n    Map dataSourceMap = new HashMap<>();\n    dataSourceMap.put(\"ds0\", dataSource);\n// Configure table rule\nTableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();\nlogTableRuleConfig.setLogicTable(\"center_op_log\");\nlogTableRuleConfig.setActualDataNodes(\"ds0.center_op_log${0..4}\");\n\n// Configure strategies for database + table sharding\nlogTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"main_center_id\", \"center_op_log${mainCenterId % 4}\"));\n\n// Configure sharding rule\nShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\nshardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);\nshardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\nshardingRuleConfig.setDefaultDataSourceName(\"ds0\");\n\n```\n\nI think that the question should open a new issue. This just a instruction.\nThe issue we commented should relate to getTables failed when use hbm2ddl.auto=update. It may be a bug for 3.1.0 version, we will fix it as soon as possible.\nIf you want use Sharding-JDBC immediately, you can downgrade to version 3.0.0 temporarily.\n. Please Show Full Error log. > I know the issue, in database its data type is tinyint, and exception is caused by the code rs.getBoolean(\"dfs\");\n\nit raises exception if I use shard connection, but it works well if I don't use shardconnection.\n\nIt should be a new issue. This issue would pay attention to getTables failed when use hbm2ddl.auto=update\nThanks for your useful issue.. Hi @jmbkeyes.\nIf the SQL does not contain the configured sharding table, ShardingConnection will execute the SQL in defaultDatasource. It just like you execute SQL in the datasource directly.\nThe defaultDatasource can be configured by shardingRuleConfig.setDefaultDataSourceName(datasourceName);\nIf only one datasource in datasourceMap you configured, ShardingSphere will set it as DefaultDataSource auto.\n. Yes, they will execute in shardingConnection.\nIf you want only shard table execute by shardingConnection and non-shard table execute by normal connection, there should be create two datasource in spring. . Or set sql.show = false to stop printing log. > * Will non-shard table sql have some restriction for shard connection context? I've tested that there'll be an exception when updating multiple table's fields in one update sql statement(refer to ).\n\n\nIf I created 2 datasource(one for shard, other for non-shard), how to handle the transaction(via XA for jsut LOCAL Transaction)?\n\n\n\n\nThis SQL is a multiple-table join update statement, but ShardingSphere is unsupported for multiple-table join update.\n\n\nIf there 2 datasource(one for shard, other for non-shard), ShardingSphere may be unable to provide transactional operations between them currently(ShardingSphere may implement XADatasource protocol in future). You should control  transaction by yourself.. Hi @ppj19891020. There is one contradiction in your configuration.\nYou describe your key generator column is traceId, but in configuration is id\n\ntable: push_message\nKeyGeneratorColumnName:traceId\n\n\n\n//\u5206\u5e03\u5f0f\u4e3b\u952e\n        orderTableRuleConfig.setKeyGeneratorColumnName(\"id\");\n        orderTableRuleConfig.setKeyGenerator(shardingKeygen);\nSo, is a configuration error or description error?. I found a problem in your runtime log. Why your where condition is id?  Your shardingColumn is traceId, use id to query must all routed.. Properties of connection pool can set by append properties name or set method name to sharding.jdbc.datasource.${dsName} like this:\nsharding.jdbc.datasource.master.type=com.alibaba.druid.pool.DruidDataSource\nsharding.jdbc.datasource.master.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.master.url=jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false\nsharding.jdbc.datasource.master.max-active=32\nsharding.jdbc.datasource.master.min-idle=5\nsharding.jdbc.datasource.master.username=root\nsharding.jdbc.datasource.master.password=\nor\nsharding.jdbc.datasource.master.type=com.alibaba.druid.pool.DruidDataSource\nsharding.jdbc.datasource.master.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.master.url=jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false\nsharding.jdbc.datasource.master.maxActive=32\nsharding.jdbc.datasource.master.minIdle=5\nsharding.jdbc.datasource.master.username=root\nsharding.jdbc.datasource.master.password=. We suggest to use ShardingSphere with versions [1.5.0.RELEASE,2.0.0.M1) for spring-boot, \nand versions [4.3.6.RELEASE,5.0.0.M1) for spring springframework.\nSo sorry for the trouble.. @imhager,\nAs my test, ShardingSphere supports 2.1.1.RELEASE spring boot.\nThe error because the conflict with druid-spring-boot-starter and sharding-jdbc-spring-boot-starter. You can use spring.main.allow-bean-definition-overriding=true configuration to resolve this error. > You can use spring.main.allow-bean-definition-overriding=true configuration to resolve this error\n@imhager. Can this configuration solve your problem? If still has questions, please let us know.. No, DruidDataSourceAutoConfigure.DataSource will be override by shardingjdbc/SpringBootConfiguration.DataSource. \nIt means the bean 'dataSource' will be created by shardingjdbc/SpringBootConfiguration.DataSource instead of DruidDataSourceAutoConfigure.DataSource.\nI don't know your situation, so there is no guarantee that it will not affect you.\nWould you like try first in test environment? Or describe why you use DruidDataSourceAutoConfigure.DataSource?. @imhager, have any progress for this issue? If no feedback, we will close this issue tomorrow.. If no response more than 7 days , we will close it.. @yidu0331 Thanks for your useful feedback.\nWe will fix the method in next release.. Hi @cocoyadi, Can you show the full sharding configuration. . @cocoyadi , I find that your configuration didn't set the actual dataNodes. It might cause shardingsphere do cartesian route.\nI suggest you add TableRuleConfig.setActualDataNodes(\"database_0.table_${000...250},database_1.table_${251...500}\") in getContentTableRuleConfiguration method then retry.. Hi @cocoyadi , I can't reproduce this problem based the information you provided.\nWould you mind provide a demo code which can reproduce this problem?. If no response more than 7 days ,  and can't reproduce problem based current information, we will close it.. Test case error. . @jiejiecool I have checked the xsd file, but I don't find this problem, would you mind inform which branch you download?\nOr provide more detail information about the xsd and pom file about ShardingSphere.. Sorry for the confusion, can you clone the dev branch and install in your local environment, then try to reproduce this problem with 4.0.0-RC1-SNAPSHOT? Because I cannot reproduce this problem.. @abbbud Are you using TAG 4.0.0-RC1? Or 4.0.0-RC1-SNAPSHOT?. @abbbud 3.1.0 is not apache release. it should be http://shardingsphere.io/schema/shardingsphere/sharding. Maybe your configuration file has some error, I suggest you open a new issue and describe your situation and provide configuration.. ",
    "jianchuliu": "\u597d\u7684\uff0c\u591a\u8c22\uff01. ",
    "Max010230": "\u6211\u4f7f\u7528\u7684\u662f\u6d4b\u8bd5\u63d0\u4f9b\u7684\u6570\u636e\u5e93\uff0c\u6ca1\u6709\u6539\u8868\u540d\u3002\u8fd9\u4e2a\u95ee\u9898\u597d\u50cf\u8ddf\u8868\u540d\u6ca1\u5565\u5173\u7cfb\uff0c\u53ea\u8981\u4f7f\u7528\u5173\u8054\u67e5\u8be2\uff0c\u90fd\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898. \u6211\u660e\u767d\u4e86\uff0c\u975e\u5e38\u611f\u8c22\uff01\u4fee\u6539\u4e86\u914d\u7f6e\uff0c\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c. ",
    "peak0632": "\u8fd9\u4e2a\u95ee\u9898\u6211\u5728\u6700\u65b0\u76843.1.0\u7248\u672c\u91cc\u4e5f\u540c\u6837\u5b58\u5728\u5462\uff1f\u9700\u8981\u4ec0\u4e48\u7279\u6b8a\u7684\u914d\u7f6e\u5417\uff1f\u6211\u7528\u7684\u662fspringboot 2.1 + JPA + Sharding 3.1.0\u3002\u5728Pageable\u91cc\u5373\u4f7f\u662f\u5927\u4e8e0\uff0c\u8fd4\u56de\u7684\u8bb0\u5f55\u4f9d\u7136\u4e0e\u7b2c0\u9875\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u628aSharding\u7684\u914d\u7f6e\u6ce8\u91ca\u6389\uff0c\u6362\u7528Spring\u7684\u6807\u51c6\u914d\u7f6e\uff0c\u5206\u9875\u6b63\u5e38\u663e\u793a. ",
    "yue530tom": "\u8fd9\u4f4d\u540c\u5b66 \u6211\u8fd9\u8fb9\u6a21\u62df\u4e0d\u51fa\u4f60\u7684\u573a\u666f~ \u6267\u884cinsert jdbc \u548csjdbc\u57fa\u672c\u90fd\u662f2ms\u5de6\u53f3 2w\u6761\u8bb0\u5f55\u603b\u6267\u884c\u65f6\u95f4\u5747\u572840000ms+\uff08\u591a\u6b21\u6267\u884c\u7684\u7ed3\u679c\uff09 \uff1bsjdbc\u8f83jdbc \u4e3b\u8981\u8017\u65f6\u533a\u522b\u5728\u7b2c\u4e00\u6b21~ \u5176\u4ed6\u65f6\u95f4\u5747\u5dee\u4e0d\u591a. \u662f\u7684\uff0c\u76f4\u63a5\u8fd0\u884c\u4f60\u5728Github\u4e0a\u7684\u5de5\u7a0b\u3002\u4ece\u6211\u4eec\u6027\u80fd\u6d4b\u8bd5\u7ed3\u679c\u6765\u770b\u4e0d\u5b58\u5728\u8fd9\u4e48\u5927\u7684\u5dee\u8ddd\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u80032.0.0.m1\u5206\u652f\u4e2d\u7684\u6d4b\u8bd5\u62a5\u544a\u91cc\u9762\u6709\u8be6\u7ec6\u7684\u6570\u636e\u8bb0\u5f55https://github.com/dangdangdotcom/sharding-jdbc/blob/2.0.0.M1/sharding-jdbc-doc/content/01-start/stress-test.md \u5177\u4f53\u7684\u56fe\u7247\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b\u5728https://github.com/dangdangdotcom/sharding-jdbc/tree/2.0.0.M1/sharding-jdbc-doc/static/img\n\u4f7f\u7528down\u7684\u5de5\u7a0b\u6267\u884c2w\u6b21\u63d2\u5165\uff0cShardingjdbc\u548cjdbc\u7684\u7ed3\u679c\u5206\u522b\u5982\u4e0b\nStart : Mon Sep 18 18:08:02 CST 2017\ninsert first 193ms\nforFunc sharding 41011ms\nEnd : Mon Sep 18 18:08:43 CST 2017\nTake {41151} ms .\nStart : Mon Sep 18 18:13:12 CST 2017\ninsert first 25ms\nforFunc jdbc 40226ms\nEnd : Mon Sep 18 18:13:53 CST 2017\nTake {40469} ms .\n\u53ef\u4ee5\u7684\u8bdd\u53ef\u4ee5\u52a0\u4e0bQQ316216160. close. Dangdang use Sharding-JDBC on production environment now, hope Sharding-Sphere be better. +1. ",
    "ThorinChen": "@yue530tom \n\u4f60\u597d,\u4f60\u662f\u6309\u7167\u6211\u4e0a\u4f20\u5230GitHub\u91cc\u9762\u7684\u5de5\u7a0b\u6765\u8fd0\u884c\u7684\u4e48? \u8fd9\u4e2a\u5de5\u7a0b\u4e0b\u9762,\u6709\u4e24\u4e2amodule,\u4e00\u4e2a\u662fSharding-jdbc\u7684example,\u53e6\u4e00\u4e2a\u662f\u6211\u5199\u7684,. @yue530tom \n\u5982\u679c\u4f60\u662f\u6309\u7167\u6211\u4e0a\u4f20\u5230GitHub\u7684\u5de5\u7a0b\u7684\u8bdd,\u6211\u7528\u7684mysql\u662f5.7\u7684\u6ca1\u6709,\u4efb\u4f55\u4f18\u5316,\u4e0d\u81f3\u4e8e\u5dee\u8ddd\u4f1a\u8fd9\u4e48\u5927. ",
    "bing0101": "\u975e\u5e38\u62b1\u6b49. ",
    "shengyue-z": "\u6b64\u95ee\u9898 \u5728\u5173\u8054\u67e5\u8be2\u65f6 \u5bb9\u6613\u51f8\u663e. ",
    "imadcn": "\u662f\u7684\uff0c\u5173\u8054\u67e5\u8be2\u7684\u65f6\u5019\u4f1a\u6709\u8fd9\u4e2aBUG\uff0c\u5355\u8868\u67e5\u8be2\u7684\u65f6\u5019\u6ca1\u95ee\u9898\n\u76ee\u524d\u7528\u76841.5.1\u7248\u672c\uff0c\u5c06\u6240\u6709\u5173\u8054\u67e5\u8be2\u7684\u8868\u914d\u7f6e\u4e86\u4e0d\u5206\u7247\u7b97\u6cd5\u540e\u624d\u53ef\u4ee5\u7528. ",
    "renguiqiang": "@terrymanu  \u7cfb\u7edf\u4e2d\u6d89\u53ca\u7684\u8868\u9664\u4e86\u4e24\u4ebf\u591a\u7684\u6570\u636e\u5916\uff0c\u4e5f\u53ef\u80fd\u4f1a\u5b58\u5728\u5c0f\u6570\u636e\u91cf\u7684\u8868\uff0c\u4f46\u662f\u7cfb\u7edf\u4e2d\u5f15\u5165sharding jdbc + mybatis\u540e\uff0csql\u8bed\u53e5\u7684\u89e3\u6790\u90fd\u4f1a\u4ea4\u7ed9sharding-jdbc\u6765\u5904\u7406\uff0c\u8fd9\u6837\u9020\u6210\u4e86\u5bf9\u5c0f\u8868\u7684\u6392\u5e8f\u67e5\u8be2\u4e5f\u51fa\u73b0\u4e86\u5f02\u5e38\u3002\n. ",
    "595431930": "\u63cf\u8ff0\u4e0d\u591f\u6e05\u695a\uff0c\u5355\u770b\u914d\u7f6e\u5e94\u8be5\u662f\u6ca1\u6709\u914d\u7f6e\u9ed8\u8ba4\u6570\u636e\u6e90\uff01. inline\u8868\u8fbe\u5f0f\u4e0d\u80fd\u4f7f\u7528\u95ee\u9898\uff0c\u8bf7\u9605\u8bfb\u5b98\u65b9\u6587\u6863faq\u7ae0\u8282. @terrymanu \u611f\u8c22\u4eae\u54e5\u56de\u590d\uff0c\u6700\u540e\u6211\u7ecf\u8fc7\u4e0d\u65ad\u6392\u67e5\u95ee\u9898\u53d1\u73b0\u53ea\u6709TimeStamp\u7c7b\u578b\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u7ecf\u9605\u8bfbsharding-jdbc\u6e90\u7801com.dangdang.ddframe.rdb.sharding.merger.orderby.OrderByValue#getOrderValues()\u65b9\u6cd5\u5982\u4e0b:\n```\nprivate List> getOrderValues() throws SQLException {\n        ArrayList result = new ArrayList(this.orderByItems.size());\n        Iterator i$ = this.orderByItems.iterator();\n    while(i$.hasNext()) {\n        OrderItem each = (OrderItem)i$.next();\n        Object value = this.resultSet.getObject(each.getIndex());\n        Preconditions.checkState(null == value || value instanceof Comparable, \"Order by value must implements Comparable\");\n        result.add((Comparable)value);\n    }\n\n    return result;\n}\n\n```\n\u4f7f\u7528\u4e86resultSet.getObject(int index)\u65b9\u6cd5\uff0c\u9488\u5bf9TimeStamp oracle\u4f1a\u6839\u636eoracle.jdbc.J2EE13Compliant\u5c5e\u6027\u5224\u65ad\u8fd4\u56dejava.sql.TimeStamp\u8fd8\u662f\u81ea\u5b9a\u4e49oralce.sql.TIMESTAMP,\u8be6\u89c1ojdbc\u6e90\u7801oracle.jdbc.driver.TimestampAccessor#getObject(int var1)\u65b9\u6cd5\uff1a\n```\nObject getObject(int var1) throws SQLException {\n        Object var2 = null;\n        if(this.rowSpaceIndicator == null) {\n            DatabaseError.throwSqlException(21);\n        }\n    if(this.rowSpaceIndicator[this.indicatorIndex + var1] != -1) {\n        if(this.externalType != 0) {\n            switch(this.externalType) {\n            case 93:\n                return this.getTimestamp(var1);\n            default:\n                DatabaseError.throwSqlException(4);\n                return null;\n            }\n        }\n\n        if(this.statement.connection.j2ee13Compliant) {\n            var2 = this.getTimestamp(var1);\n        } else {\n            var2 = this.getTIMESTAMP(var1);\n        }\n    }\n\n    return var2;\n}\n\n```\n\u9488\u5bf9\u4e0a\u9762\u95ee\u9898\u89e3\u51b3\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\n1.\u914d\u7f6e\u542f\u52a8JVM\u53c2\u6570\u201c-oracle.jdbc.J2EE13Compliant=true\u201d\n2.\u901a\u8fc7\u4ee3\u7801\u5728\u9879\u76ee\u521d\u59cb\u5316\u65f6\u8bbe\u7f6eSystem.getProperties().setProperty(\"oracle.jdbc.J2EE13Compliant\", \"true\");. +1. ",
    "cocodroid": "\u55ef\uff0c\u6211\u505a\u4e86\u6d4b\u8bd5\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u7ebf\u7a0b\u662f\u7528\u6237\u7ebf\u7a0b\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4e0d\u4f1a\u4f18\u96c5\u5173\u95ed\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u8fd8\u5b58\u5728\u3002\u9664\u975e\u89e6\u52a8\u5173\u95ed\u7ebf\u7a0b\u6c60\u7684\u64cd\u4f5cshutdownNow\u624d\u884c\u3002\u4f46\u662f\u5982\u679c\u662f\u5b88\u62a4\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5f53\u5176\u5b83\u7528\u6237\u7ebf\u7a0b\u5168\u90e8\u5df2\u7ecf\u9000\u51fa\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4f1a\u4f18\u96c5\u5173\u95ed\u3002. @tian6318 \n\u4f60\u90fd\u6ca1\u8bf4\u7248\u672c\u53f7\u3002\n\u6211\u8fd9\u8fb9\u770b2.0.0.M1\u7684\u53ea\u6709\u8bfb\u5199\u5206\u79bb\u7684\u6807\u7b7e\u914d\u7f6e\u786e\u5b9e\u6ca1\u6709\u8fd9\u4e2a 'strategy-type'\u554a\uff1a\n<bean id=\"randomStrategy\" class=\"io.shardingjdbc.core.api.algorithm.masterslave.RandomMasterSlaveLoadBalanceAlgorithm\" />\n<master-slave:data-source id=\"masterSlaveDataSource\" master-data-source-name=\"demo_ds_master\" slave-data-source-names=\"demo_ds_slave_0, demo_ds_slave_1\" strategy-ref=\"randomStrategy\" />\n. @terrymanu \u597d\u7684\uff0c\u591a\u8c22\u4e86. \u7b2c\u4e09\u4e2a\u95ee\u9898\uff1ahttps://github.com/shardingjdbc/sharding-jdbc/issues/443. mybatis\u7248round_robin\u5230slave\u5b58\u5728bug\uff0c\u4eae\u54e5\u8bf4\u8fc7. https://github.com/shardingjdbc/sharding-jdbc/issues/436. sql\u6539\u4e3a\u8fd9\u6837\u5c31\u6b63\u5e38\uff1aINSERT INTO traffic (\n  name, createTime\n)\nVALUES (\n #{name,jdbcType=VARCHAR},\n{createTime,jdbcType=TIMESTAMP}\n). \u56e0\u4e3a\u5b57\u6bb5id\u6211\u662f\u60f3\u7528\u8fd9\u4e2acolumn-key-generator-class=\"io.shardingjdbc.core.keygen.DefaultKeyGenerator\"\u751f\u6210\u7684\u5206\u5e03\u5f0fid\u8fdb\u884c\u8bbe\u503c\uff0c\u6240\u4ee5insert\u52a0\u4e0aid\u5b57\u6bb5\u5e94\u8be5\u662f\u6ca1\u9519\uff0c\u53ea\u4e0d\u8fc7\u662fsj\u5e2e\u6211\u8bbe\u503c\u4e86\uff0c\u800c\u4e0d\u662f\u7531\u6570\u636e\u5e93\u81ea\u589e\u4e3b\u952e\u3002. \u8fd9\u79cd\u5e94\u8be5\u4e0d\u652f\u6301\u5427\uff0c\u6bd5\u7adfsj\u505a\u7684\u4e8b\u60c5\u6bd4\u8f83\u4e13\u6ce8. \u53ef\u4ee5\u7528hashcode\u6765\u5440(^_^)  /\u5077\u7b11. @TongHaoException java\u7684hashcode\u54e6\uff0c\u5e94\u8be5\u662f\u4e00\u6837\u7684. @suxg003 \u8fd9\u95ee\u9898\u4e0d\u5c5e\u4e8esj\u7684\u8303\u7574\uff01\u4f60\u53ef\u4ee5 \u5220\u9664maven\u4e2d\u7684snakeyaml-1.16.jar\u91cd\u65b0\u7f16\u8bd1\u6253\u5305\u5427. \u7ecf\u6d4b\u8bd52.0.0.M2\u4e5f\u6709\u95ee\u9898\uff0c\u5e94\u8be5\u662f\u4e00\u4e2abug\u3002\u5206\u8868\u7684\u7684\u65f6\u5019\u6267\u884c\u67e5\u8be2\uff0c\u4f7f\u7528\u7684\u8fd8\u662f\u903b\u8f91\u8868\uff0c\u9020\u6210\u8868\u4e0d\u5b58\u5728\u3002. 1.5\u4e4b\u540eSQL\u89e3\u6790\u53bb\u6389druid\u4f9d\u8d56\uff0c\u4e4b\u540e\u5185\u90e8\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f60\u75281.5\u4e4b\u524d\u662f\u6b63\u5e38\u7684 @zhangshixi . .... ",
    "windhc": "\u4f7f\u7528\u7684Sharding-JDBC\u7248\u672c. ",
    "347154468": "\u8bf7\u95ee\u8fd9\u4e2a\u73b0\u5728\u652f\u6301\u4e86\u5417. ",
    "wu-sheng": "FYI @hanahmily . homepage has updated. Closing this issue.. I recommend contributors should stay in an open list. I didnt need to invite every contributor into the org.. If you don't create PMC team, please make sure every committer have right to vote.. @ma-xiao-guang-64 welcone, look like you are already a collaborator. Assume you are a committer, right?. Closing. The teams are on building.. And another important thing is updating your roadmap: https://github.com/shardingjdbc/sharding-jdbc/blob/dev/ROADMAP.md . Which definitely didn't match the project status.. COMMUNICATION AND PARTICIPATION in http://shardingjdbc.io/docs_en/00-overview/ doesn't make me feel a global way. For a global and western people welcome project, the major community chat channel should be gitter, slack, etc. And we must keep it in English all the time.. You MUST remove competition table in http://shardingjdbc.io/docs_en/00-overview/intro/ . Because we don't know other project roadmap and capabilities, and impossible to keep the info up-to-date.\nSo, in objective way, this must be removed.. Keep user cases (http://shardingjdbc.io/docs_en/00-overview/company/) in Chinese and English for company or organization names. At least, give a website link. \nOr you can re-organize the list in the category. Such as: e-commerce, financial company, government.  . FYI this vote will open in at least a week. Welcome any contributor, end user and interested people to express themselves.. My +1 (binding). @terrymanu I think we should close this vote today.\nFYI, remind you, @shardingjdbc/committers doesn't match organization in website http://shardingsphere.io/community/en/organization/ \nWe should fix this.. My +1 binding.. +1 \nWelcome and glad we have a new partner and sponsor. Look forward our cooperations.. Hi all PMC members(@terrymanu @haocao @hanahmily @PegasusS @pottieva )\nI provided you with the following resources of the biggest Java community. Spring.  Notice that even Spring didn't dare to upgrade directly. We need to be careful with that.\n\nAs of Spring Framework 4.0, Java 8 is supported as a first-class citizen and we\u2019ve seen some confusion in the Spring community since then. How do we manage to support Java 8 and remain compatible with Java 6 and Java 7 after all? \n\nSee https://spring.io/blog/2015/04/03/how-spring-achieves-compatibility-with-java-6-7-and-8 \nMy opinion is, if Saga needs JDK 8, the question is, in the compile stage or running stage. Even in the running stage. ShardingSphere could be compiled into two components, ss-core, and ss-transaction.\nss-core could stay in JDK 7 for the longer term. ss-transaction moved into JDK 8, considering it is the new feature to everyone, right?\nOf course, this is only about Sharding-Sphere's JDBC lib part. Sharding-Sphere Proxy is free to upgrade.. FYI @WillemJiang https://github.com/sharding-sphere/sharding-sphere/issues/1157#issuecomment-413795884 Can you confirm the info about Saga project?. > Sharding-JDBC is a framework, upgrade means all application which use JDK7 and below versions cannot support any more.\nSo, just like @wu-sheng said, we need to recognize , it is really a big revolution for Sharding-JDBC, the legacy system maybe cannot run any more.\nIf PMC agreed with my proposal and it is executable, I hope to cancel this vote. Just make the new ss-transaction and ss-proxy into JDK8 without harm anyone, and keep ss-core in JDK 7, which will make everyone happy.. @terrymanu @WillemJiang  How about we close this, and discuss the jdk requirement of each component in a separated issue? This vote thread burns my mailbox.\ud83e\udd23\ud83e\udd23. It is glad that we are ready to move. Look like I will be a spirit mentor again, like at Zipkin @adriancole :p\nOf course, my own +1. No time line for this, but I will do some implement for MySQL and TiDB from next week, welcome to join. We could. But at real product env, I have some doubts. This wouldn't help on performance, just save more data. . Many tables, not just trace. . Please submit English version issue in Apache repo.. The project was original started by me inside. Then Liang Zhang lead its open source in dangdang.com. JD help on pushing it to Apache.\nWhat is CDS?. No. This project was open sourced at 2016, I think at that moment, no core contributor was at jingdong. And the project core codes are not related to CDS.. What is release audit tool? Do you plan to provide something besides the documents and commands?. Oh, you mean here, in this PR. You need to set exclusion rules for this.. Yes. You add the right rat plugin. But it would fail, please run locally, and find out what it says. You could take skywalking pom.xml as an example, we have it too.. All setting files require Apache header.. g4 and yaml are required Apache header.. ",
    "Lxpd": "\u65e5\u5fd7\u8bf4\u6210\u529f\u4e86\uff0c\u786e\u6ca1\u6570\u636e   \u8fd8\u6ca1\u62a5\u4efb\u4f55\u9519\u8bef   \u4ec0\u4e48\u60c5\u51b5\uff0c \u8bf7\u95ee\u8c01\u9047\u5230\u8fc7\uff1f\uff1f. ",
    "wujun8": "@terrymanu \u76ee\u524d\u7248\u672c\u5b9e\u73b0\u662f\u591a\u7ebf\u7a0b\u5904\u7406\uff0c\u524d\u9762\u8bf4\u7684\u914d\u7f6e\u5f00\u542f\u662f\u4e0d\u662f\u6ca1\u6709\u63d0\u4f9b\uff1f. @terrymanu commented on 2018\u5e745\u670824\u65e5 GMT+8 \u4e0b\u53482:04:\n\nload case Insensitive config from database, and then do Case Sensitive or Case Insensitive is better\n\nAgreed with @terrymanu . @terrymanu \nOK. But that's not my question.\nLet me put it this way, I know that SUM(pv) / COUNT(uv) is not supported. I just don't understand what does it mean.\nIf there're some examples about that, it will be better.. @terrymanu \nLike this, right?\nsql\nSELECT SUM(user_id) ... GROUP BY user_id\nSELECT COUNT(DISTINCT status) .... -1\nUpgrading incompatible codes and dependencies is totally a disaster for original system.. ",
    "www1350": "ignore-unresolvable=\"true\". ",
    "zhang2go": "\u5982\u679c\u4f7f\u7528 spring.jpa.properties.hibernate.hbm2ddl.auto=update \u53c8\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u6570\u636e\u5e93\u8868\u751f\u6210. ",
    "babylikebird": "SELECT\n        SUM(sales.saleroom) AS saleroom,\n        shop.sys_org_code AS orgCode,\n        d.departname AS department,\n        d.parentdepartid AS parentdepartid,\n        d.ID AS departId\n        FROM\n        ec_sales AS sales\n        LEFT JOIN ec_shop shop ON (sales.shop_id = shop.shop_id)\n        LEFT JOIN t_s_depart d ON (\n        d.org_code = shop.sys_org_code\n        )\n        WHERE\n                shop.sys_org_code LIKE CONCAT('','${sqlParam.orgCode}','%' )\n                AND\n                data_date >= #{sqlParam.startTime}\n                AND\n                data_date <= #{sqlParam.endTime}\n    GROUP BY\n    shop.sys_org_code.\n",
    "chenhaifeng2016": "\u6211\u4e5f\u78b0\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898. \u6ca1\u6709\u5f00\u53d1\u4eba\u5458\u56de\u590d\u5417\uff1f\u8fd9\u6837\u4e0d\u6562\u7528\u5728\u751f\u4ea7\u73af\u5883\u7684\u5417. agree, yes, +1. +1. ",
    "jimforcode": "\u95ee\u98984 \u53ef\u4ee5\u7528\u591a\u7ebf\u7a0b\u6d4b\u8bd5\uff0c \u5728\u4e00\u4e2a\u6beb\u79d2\u5185\u6709\u591a\u6761\u6570\u636e\u751f\u6210\u5c31\u4e0d\u4f1a\u5168\u662f\u5076\u6570\u4e86\uff0c \u611f\u89c9\u8fd9\u4e5f\u662f \u96ea\u82b1\u7b97\u6cd5\u7684\u4e00\u4e2a\u5f0a\u7aef\uff0c \u5c31\u662f\u5982\u679c\u5e76\u53d1\u5f31\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5c31\u4e0d\u5747\u8861\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4e0d\u662fsharejdbc \u7684\u6838\u5fc3\u95ee\u9898\uff0c\u53ea\u662f\u4e0d\u53ef\u907f\u514d\u8981\u8003\u8651\u7684\u56e0\u7d20. ",
    "yuexianbing": "\n. \n\n\n@terrymanu  \u60a8\u597d\uff0c\u4e0d\u597d\u610f\u601d\uff0c\u524d\u51e0\u5929\u4e0d\u5728\u516c\u53f8\u3002\u8fd9\u4e2a\u662f\u6211\u4eca\u5929\u622a\u7684\u90e8\u5206\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u5728\u6211\u7981\u6389\u751f\u4ea7\u7684\u8fd9\u4e2a\u8282\u70b9\u7684\u524d\u63d0\u4e0b\u770b\u5230\u7684\u3002 \u7981\u6389\u8282\u70b9\u540e 3\u4e2a\u5c0f\u65f6\u4e86\uff0cToken\u8fd8\u662f\u5728\u4e0d\u505c\u7684\u521b\u5efa\u9500\u6bc1\uff0c\u7ebf\u7a0b\u5806\u6808runnable\u4e5f\u663e\u793a\u5728com.dangdang.ddframe.rdb.sharding.parsing.lexer.LexerEngine#skipUntil \u8fd9\u4e2a\u65b9\u6cd5\u7684162\u884c\u3002\u6211\u6d4b\u8bd5\u4e86\u4e0b\u5355\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\u6211\u7684\u8fd9\u53e5sql\u662f\u8fdb\u4e0d\u5230 162\u884c\u7684\u3002\u60a8\u770b\u4e0b\u5462\u3002. \u7981\u6389\u4e86dubbo\uff0c\u6ca1\u6709\u653e\u751f\u4efb\u4f55\u65b9\u6cd5\u8c03\u7528\u3002 @terrymanu . \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u670d\u52a1\u5668\u8fd8\u662f\u8fd9\u51e0\u4e2a\u7ebf\u7a0b\u5728\u72c2\u98d9cpu\uff0c\u662f\u4e0d\u662f\u5728com.dangdang.ddframe.rdb.sharding.parsing.lexer.LexerEngine#skipUntil\u51fa\u73b0\u4e86\u6b7b\u5faa\u73af\u5462\n\n. ",
    "EonianGlutton": "\u62b1\u6b49\uff0c\u6211\u914d\u7f6e\u9519\u4e86\nalgorithm-expression=\"com.yinke.msg.core.sharding.DataBaseSharding\"/>\n\u5e94\u8be5\u662falgorithm-class\u3002\u3002\n. ",
    "MagicLogic": "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u4f7f\u7528\u4e86mysqlGenerato\u7684\u751f\u6210\u5de5\u5177\uff0c\u81ea\u52a8\u4f1a\u751f\u6210\u5bf9\u8c61\u6240\u6709\u5b57\u6bb5\uff0c\u7531\u4e8e\u62a5\u9519\u4fe1\u606f\u4e0d\u660e\u663e\uff0c\u67e5\u4e86\u5927\u534a\u5929\u5206\u7247\u914d\u7f6e\u95ee\u9898\u3002 \u5e78\u597d\u770b\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u7136\u8fd8\u5728\u67e5\u5206\u7247\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u7684\u95ee\u9898\u3002. ",
    "TongHaoException": "\u4e3a\u4f55\u91c7\u7528algorithmExpression: t_transaction_${order_line_item.hashCode() % 5}\u8fd9\u79cd\u5f62\u5f0f\uff0c\u6bcf\u6b21hashCode\u51fa\u6765\u7684\u503c\u90fd\u4e0d\u4e00\u6837\uff1f\n. \u4e5f\u5c31\u662f\u8bf4\u8fd8\u662f\u8981\u5199java\u4ee3\u7801\u7684\u54af\uff1f\n. select  * from user where user_id in (select id from order)\u8fd9\u79cd\u662f\u4e0d\u662f\u4e5f\u4e0d\u652f\u6301\uff1f. @terrymanu \u5bf9\u7684\u3002\u4f46\u662fsharding\u4e0d\u652f\u6301exists\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u60f3\u8bf7\u6559\u4e0b\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6709\u6ca1\u6709\u597d\u7684\u89e3\u51b3\u65b9\u5f0f\u3002. @terrymanu \u597d\u7684\uff0c\u8c22\u8c22. ",
    "changjiasheng": "For example : table_name = user and you want split by login_name,and login_name is String type.\nYou can use like this.\nsharding.jdbc.config.sharding.tables.user.databaseStrategy.inline.algorithm-inline-expression=ds_${Math.abs(login_name.hashCode() % 3) }\nI add Math.abs() to avoid appear negative number\uff0cbecause java hashCode may be negative number.. you can use like this \nt_order_${Math.abs(order_id.hashCode() % 2)}. ",
    "trojanliu": "\u662fhibernate\u72b6\u6001\u95ee\u9898.  \u8bf7\u7ba1\u7406\u5458\u5173\u95ed\u95ee\u9898.. i find this bug in 3.0.0 and 3.1.0.    before in 1.5.4 has no this bug.. ",
    "comenglish": "update data:\n\nset /orchestration-spring-namespace/shardingDataSource/config/sharding {\"tableRuleConfigs\":[{\"logicTable\":\"a_trace_his\",\"actualDataNodes\":\"a_trace_his{0..3}\",\"databaseShardingStrategyConfig\":{},\"tableShardingStrategyConfig\":{\"type\":\"STANDARD\",\"shardingColumn\":\"CUT_DATE\",\"preciseAlgorithmClassName\":\"com.zx.common.dataSource.TraceTableShardingAlgorithm\",\"rangeAlgorithmClassName\":\"com.zx.common.dataSource.TraceTableRangeShardingAlgorithm\"},\"keyGeneratorColumnName\":\"CUT_DATE\"}],\"bindingTableGroups\":[\"a_trace_his\"],\"defaultDatabaseShardingStrategyConfig\":{},\"defaultTableShardingStrategyConfig\":{},\"masterSlaveRuleConfigs\":[]}. \u800cSpring\u547d\u540d\u7a7a\u95f4\u914d\u7f6e \u7ae0\u8282\u8bb2\u5f97\u975e\u5e38\u6e05\u695a\uff0c\u6240\u6709\u7684\u914d\u7f6e\u90fd\u662f\uff1aactual-data-nodes=\"dbtbl_${0..1}.t_order_${0..3}\"\n\u6570\u636e\u5e93\u540d.\u8868\u540d. \u5982\u679c\u80fd\u7edf\u4e00\u89c4\u5219\u662f\u4e0d\u662f\u66f4\u597d\uff1f. \u66f4\u6b63\uff1a\nset  /orchestration-spring-namespace/shardingDataSource/config/sharding\n{\"tableRuleConfigs\":[{\"logicTable\":\"a_trace_his\",\"actualDataNodes\":\"traceHisDataSource.a_trace_his_${0..1}\",\"databaseShardingStrategyConfig\":{},\"tableShardingStrategyConfig\":{\"type\":\"STANDARD\",\"shardingColumn\":\"CUT_DATE\",\"preciseAlgorithmClassName\":\"com.zx.common.dataSource.TraceTableShardingAlgorithm\",\"rangeAlgorithmClassName\":\"com.zx.common.dataSource.TraceTableRangeShardingAlgorithm\"},\"keyGeneratorColumnName\":\"CUT_DATE\"}],\"bindingTableGroups\":[\"a_trace_his\"],\"defaultDatabaseShardingStrategyConfig\":{},\"defaultTableShardingStrategyConfig\":{},\"masterSlaveRuleConfigs\":[]}\n\n\u4e00\u6837\u4f1a\u62a5\u9519\uff1a\n2017-11-21 14:09:41 - [Curator-TreeCache-1] - ERROR - TreeCache:751 - \njava.lang.IllegalArgumentException: Cannot find data source name in sharding rule, invalid actual data node is: 'traceHisDataSource.a_trace_his_0'\n    at com.google.common.base.Preconditions.checkArgument(Preconditions.java:122)\n    at io.shardingjdbc.core.rule.TableRule.generateDataNodes(TableRule.java:77)\n    at io.shardingjdbc.core.rule.TableRule.(TableRule.java:57)\n    at io.shardingjdbc.core.api.config.TableRuleConfiguration.build(TableRuleConfiguration.java:68)\n    at io.shardingjdbc.core.api.config.ShardingRuleConfiguration.build(ShardingRuleConfiguration.java:73)\n    at io.shardingjdbc.orchestration.internal.config.ConfigurationService$1.childEvent(ConfigurationService.java:111)\n    at org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:732)\n    at org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:726)\n    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:93)\n    at com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.execute(MoreExecutors.java:310)\n    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:85)\n    at org.apache.curator.framework.recipes.cache.TreeCache.callListeners(TreeCache.java:725)\n    at org.apache.curator.framework.recipes.cache.TreeCache.access$1400(TreeCache.java:71)\n    at org.apache.curator.framework.recipes.cache.TreeCache$4.run(TreeCache.java:843)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n\u800c2.0.0.M4 \u5bf9\u5e94\u7684zk node path \u4e3a\uff1aset /orchestration-spring-namespace/shardingDataSource/config/datasource. \n. \n. https://github.com/comenglish/shardingDemo.git. \u7ecf\u6d4b\u8bd5\uff0c\u4f7f\u7528\u5b98\u65b9\u7684\u4f8b\u5b50\uff0c\u542f\u52a8Main\u65b9\u6cd5\u540e\uff0c\u4f7f\u7528\u5faa\u73af\u6301\u7eed\u8fd0\u884c\uff08\u4fdd\u8bc1jvm\u4e0d\u9000\u51fa\uff09\uff0c\u4fee\u6539zk node \u4e2d\u7684\u4fe1\u606f\uff0c\u5e76\u4e0d\u4f1a\u52a8\u6001\u8bbe\u7f6e\u6570\u636e\u6e90\u3002\u800c\u4e14\uff0c\u6570\u636e\u6e90\u8bfb\u53d6\u5230\u7684\u8fd8\u662f\u539f\u6765\u7684\u4fe1\u606f\u3002\n\u65e0\u6cd5\u76d1\u542c\u4e9b\u95ee\u9898\u3002\n\u53ea\u80fd\u4f7f\u7528spring-mvc web \u5de5\u7a0b\u80fd\u8f7b\u6613\u590d\u73b0\u8be5\u95ee\u9898. \u7b80\u5316\u95ee\u9898\u540e\uff0c\u6d4b\u8bd5\u4e3e\u4f8b\uff1a\n    private static String json=\"[{\\\"name\\\":\\\"traceHisDataSource\\\",\\\"clazz\\\":\\\"com.alibaba.druid.pool.DruidDataSource\\\",\\\"connectionErrorRetryAttempts\\\":\\\"30\\\",\\\"dbType\\\":\\\"mysql\\\",\\\"driverClassName\\\":\\\"com.mysql.jdbc.Driver\\\",\\\"exceptionSorterClassName\\\":\\\"com.alibaba.druid.pool.vendor.MySqlExceptionSorter\\\",\\\"initialSize\\\":\\\"10\\\",\\\"loginTimeout\\\":\\\"0\\\",\\\"maxActive\\\":\\\"100\\\",\\\"maxCreateTaskCount\\\":\\\"3\\\",\\\"maxEvictableIdleTimeMillis\\\":\\\"25200000\\\",\\\"maxIdle\\\":\\\"8\\\",\\\"maxOpenPreparedStatements\\\":\\\"10\\\",\\\"maxPoolPreparedStatementPerConnectionSize\\\":\\\"10\\\",\\\"maxWait\\\":\\\"60000\\\",\\\"maxWaitThreadCount\\\":\\\"-1\\\",\\\"minEvictableIdleTimeMillis\\\":\\\"1800000\\\",\\\"minIdle\\\":\\\"10\\\",\\\"name\\\":\\\"DataSource-1772295012\\\",\\\"notFullTimeoutRetryCount\\\":\\\"0\\\",\\\"numTestsPerEvictionRun\\\":\\\"3\\\",\\\"password\\\":\\\"xingdata\\\",\\\"phyTimeoutMillis\\\":\\\"-1\\\",\\\"queryTimeout\\\":\\\"0\\\",\\\"removeAbandonedTimeout\\\":\\\"300\\\",\\\"removeAbandonedTimeoutMillis\\\":\\\"300000\\\",\\\"timeBetweenConnectErrorMillis\\\":\\\"30000\\\",\\\"timeBetweenEvictionRunsMillis\\\":\\\"60000\\\",\\\"timeBetweenLogStatsMillis\\\":\\\"0\\\",\\\"transactionQueryTimeout\\\":\\\"0\\\",\\\"transactionThresholdMillis\\\":\\\"0\\\",\\\"url\\\":\\\"jdbc:mysql://databaseurl:3306/db_t_test?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dUTF-8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\\",\\\"username\\\":\\\"root\\\",\\\"validConnectionCheckerClassName\\\":\\\"com.alibaba.druid.pool.vendor.MySqlValidConnectionChecker\\\",\\\"validationQuery\\\":\\\"SELECT \\u0027x\\u0027 FROM DUAL\\\",\\\"validationQueryTimeout\\\":\\\"-1\\\"}]\";\npublic static void main(String[] args) {\n    Map<String, DataSource> result = new LinkedHashMap<>();\n    List<NamedDataSource> namedDataSources = GsonFactory.getGson().fromJson(json, new TypeToken<List<NamedDataSource>>(){}.getType());\n    for(NamedDataSource source : namedDataSources) {\n        System.out.println(source.getName());\n    }\n}. \u6240\u4ee5\u95ee\u9898\u51fa\u73b0\u7684\u539f\u56e0\n\n1.\u4f7f\u7528DruidAbstractDataSource \u4f5c\u4e3a\u6570\u636e\u6e90 \n2.\u4f7f\u7528zk \u6765\u5b58\u50a8 json\u683c\u5f0f\u7684\u5206\u8868\u7b56\u7565\u3002\n3.NamedDataSource \u7684name \u5c5e\u6027\u503c\u5728toJSON\u65f6\u88abDruidAbstractDataSource\u7684name\u5c5e\u6027\u503c\npublic String getName() {\n        if (name != null) {\n            return name;\n        }\n        return \"DataSource-\" + System.identityHashCode(this);\n    }\n\u7ed9\u8986\u76d6\u4e86\uff0c\u9020\u6210\u7684\u7ed3\u679c\u5c31\u662f\uff1a\u4ecezk\u4e2d\u83b7\u53d6\u7ed3\u70b9\u6570\u636e\uff0c\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u751f\u6210\u7684\u6570\u636e\u6e90name\u503c\u5df2\u975e\u81ea\u5df2\u5b9a\u4e49\u7684\u6570\u636e\u6e90\u7684\u540d\u79f0\u4e86\u3002\n\u56e0\u6b64\uff1a\u7ed9\u51fa\u7684\u5efa\u8bae\u662f\uff0c\u5728\u751f\u6210json\u65f6\uff0c\u6ce8\u610f\u68c0\u67e5\u5bf9\u5e94\u7684key\u4e3aname\u7684\u5c5e\u6027\uff0c\u4e0d\u5141\u8bb8\u51fa\u73b0\u8986\u76d6\u3002\n. \u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u7c7b\u540d\uff1aio.shardingjdbc.orchestration.internal.json.DataSourceGsonTypeAdapter\n\u628a76\u884c\u7684\u4ee3\u7801\u632a\u5230101\u884c\uff0c\u5373\u53ef\u3002. \u6d4b\u8bd5\u7528\u4f8b\uff1aDataSourceJsonConverterTest.createDataSource(final String dataSourceName) \u4e2d\u8bf7\u4f7f\u7528\u63a5\u53e3javax.sql.DataSource, \u5b9e\u73b0\u7c7b\u8bf7\u4f7f\u7528\u963f\u91cc\u7684com.alibaba.druid.pool.DruidDataSource,\u5982\u4e0b\uff1a\n\nDataSource result = new com.alibaba.druid.pool.DruidDataSource();\n\n\u65b9\u80fd\u9a8c\u8bc1\u8be5\u95ee\u9898\u3002\n\u975e\u5e38\u611f\u8c22\u5b98\u65b9\u5982\u6b64\u8fc5\u901f\u7684\u7b54\u590d\n\u4f5c\u8005\u6539\u53d8\u539f\u6765\u7684key\uff0c\u5373\u7531name->shardingJdbcDataSourceName; clazz->shardingJdbcDataSourceClazz\n. ",
    "laiqq": "\u6c42\u89e3\u51b3\u529e\u6cd5\u3002\u6211\u7684\u6570\u636e\u5e93\u5168\u662futf-8,java\u7f16\u7801utf-8,. ",
    "wenhao0422": "service\u5c42\u4ee3\u7801\nSystem.out.println(\"1 .select\");\n List<Order> orders = orderRepository.findAllByUserId(51);\nSystem.out.println(\"2 .insert\");\n Order order = new Order();\n        order.setUserId(51);\n        order.setStatus(\"INSERT_TEST\");\n        orderRepository.save(order);\nOrderRepository  \u4ee3\u7801```\npublic interface OrderRepository extends JpaRepository {\nList<Order> findAllByUserId(int userId);\n\n}\n```\n````\napplication.propeerties \u4ee3\u7801\n```\nsharding.jdbc.datasource.names=ds_master,ds_slave_0,ds_slave_1\nsharding.jdbc.datasource.ds_master.type=org.apache.commons.dbcp.BasicDataSource\nsharding.jdbc.datasource.ds_master.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.ds_master.url=jdbc:mysql://localhost:3306/demo_ds_master\nsharding.jdbc.datasource.ds_master.username=root\nsharding.jdbc.datasource.ds_master.password=\nsharding.jdbc.datasource.ds_slave_0.type=org.apache.commons.dbcp.BasicDataSource\nsharding.jdbc.datasource.ds_slave_0.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.ds_slave_0.url=jdbc:mysql://localhost:3306/demo_ds_slave_0\nsharding.jdbc.datasource.ds_slave_0.username=root\nsharding.jdbc.datasource.ds_slave_0.password=\nsharding.jdbc.datasource.ds_slave_1.type=org.apache.commons.dbcp.BasicDataSource\nsharding.jdbc.datasource.ds_slave_1.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.ds_slave_1.url=jdbc:mysql://localhost:3306/demo_ds_slave_1\nsharding.jdbc.datasource.ds_slave_1.username=root\nsharding.jdbc.datasource.ds_slave_1.password=\nsharding.jdbc.config.masterslave.load-balance-algorithm-type=round_robin\nsharding.jdbc.config.masterslave.name=ds_ms\nsharding.jdbc.config.masterslave.master-data-source-name=ds_master\nsharding.jdbc.config.masterslave.slave-data-source-names=ds_slave_0,ds_slave_1\n```\n\u62a5\u9519\u4fe1\u606f\njava.sql.SQLException: null\n    at io.shardingjdbc.core.jdbc.adapter.WrapperAdapter.throwSQLExceptionIfNecessary(WrapperAdapter.java:82) ~[sharding-jdbc-core-2.0.0.M2.jar:na]\n    at io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.commit(AbstractConnectionAdapter.java:77) ~[sharding-jdbc-core-2.0.0.M2.jar:na]\n    at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:232) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]\n    at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:65) ~[hibernate-core-5.0.12.Final.jar:5.0.12.Final]\n    at org.hibernate.jpa.internal.TransactionImpl.commit(TransactionImpl.java:61) ~[hibernate-entitymanager-5.0.12.Final.jar:5.0.12.Final]\n    at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:517) ~[spring-orm-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:504) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:292) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136) ~[spring-tx-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.12.RELEASE.jar:4.3.12.RELEASE]\n    at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133) ~[spring-data-jpa-1.11.8.RELEASE.jar:na]\n. ",
    "hanfre": "1\u3001\u63d2\u5165\u7684\u65f6\u5019\u6ca1\u95ee\u9898\uff0c\u67e5\u8be2\u5c31\u63d0\u793atest_data\u8fd9\u4e2a\u8868\u4e0d\u5b58\u5728\u3002\u3002\u3002\n2\u3001\u5173\u4e8etest_data_${categoryid}\u8fd9\u4e2a\u8868\u6211\u5728\u5206\u7c7b\u4fdd\u5b58\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u521b\u5efa\u7684\u3002\n\u6c42\u52a9. \u8bf7\u95ee\u52a8\u6001\u8868actual-data-node\u8fd9\u4e2a\u53c2\u6570\u600e\u4e48\u5199\u5462\uff1f\u8fd8\u662f\u6709\u4ec0\u4e48\u7b97\u6cd5\u63a5\u53e3\u4e48\uff1f. \u6211\u660e\u767d\u60a8\u7684\u610f\u601d\uff0c\u800c\u4e14\u6211\u5728\u505a\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd9\u4e2a\u53c2\u6570\u4e5f\u6ca1\u6709\u586b\u5199\uff0c\u6240\u4ee5\u63d2\u5165\u66f4\u65b0\u5220\u9664\u90fd\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u6211\u67e5\u8be2\u7684\u65f6\u5019\u6211\u770b\u5230\u7684sql\u8bed\u53e5\u662fselect  * from category \u8fd9\u8868\uff0c\u4e0d\u4f1a\u4ece\u5176\u4ed6\u8868\u67e5\u8be2\uff0c\u8fd9\u4e2a\u600e\u4e48\u7834\uff1f\n\u914d\u7f6e=========\n\n\n\n\n\n\n\n\n\n. \u6279\u91cf\u63d2\u5165\u63d0\u793a\u9519\u8befCaused by: java.sql.SQLException: Parameter index out of range (1 > number of parameters, which is 0).\n. ### SQL: INSERT INTO test(ids,version) VALUES          (?, ?)    ,     (?, ?)    ;\nCause: io.shardingjdbc.core.exception.ShardingJdbcException: Invoke jdbc method exception.",
    "ejshi": "\u8fd9\u4e2a\u95ee\u9898\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u52a8\u6001\u8868\u6ca1\u6709\u8d77\u4f5c\u7528\uff0c\u9519\u8bef\u4fe1\u606f\u5982\u4e0b\uff1a\n`Exception in thread \"main\" org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1\nThe error may exist in com/sjz/shardjdbc/dao/mapper/OrderMapper.java (best guess)\nThe error may involve defaultParameterMap\nThe error occurred while setting parameters\nSQL: SELECT o.order_id orderId,o.status status ,oi.status itemStatus FROM  t_order o ,t_order_item  oi where o.order_id = oi.order_id\nCause: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1\nat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\nat com.sun.proxy.$Proxy72.selectList(Unknown Source)\nat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)\nat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\nat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\nat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\nat com.sun.proxy.$Proxy75.listTest(Unknown Source)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:497)\nat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\nat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\nat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)\nat com.sun.proxy.$Proxy76.listTest(Unknown Source)\nat com.sjz.shardjdbc.service.OrderService.listTest(OrderService.java:77)\nat com.sjz.shardjdbc.service.OrderService$$FastClassBySpringCGLIB$$a8080f0d.invoke(<generated>)\nat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\nat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\nat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)\nat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)\nat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\nat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\nat com.sjz.shardjdbc.service.OrderService$$EnhancerBySpringCGLIB$$d152f139.listTest(<generated>)\nat com.sjz.shardjdbc.service.OrderService$$FastClassBySpringCGLIB$$a8080f0d.invoke(<generated>)\nat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\nat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\nat org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)\nat org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)\nat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\nat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\nat com.sjz.shardjdbc.service.OrderService$$EnhancerBySpringCGLIB$$559e3676.listTest(<generated>)\nat com.sjz.shardjdbc.App.main(App.java:50)\n\nCaused by: org.apache.ibatis.exceptions.PersistenceException: `. ",
    "gitouyoung": "same problem, anybody ideas?. Finally i find the cause for my situation:\nI use date as column name, and parser ignore it because it's a keyword. More keywords could be found in io.shardingsphere.core.parsing.lexer.\nmay be helpful to u guys. ",
    "alulu-zh": "\u6570\u636e\u5e93\u8868\u7ed3\u6784\nmysql> desc Card;\n+--------------------+----------------+------+-----+---------+-------+\n| Field              | Type           | Null | Key | Default | Extra |\n+--------------------+----------------+------+-----+---------+-------+\n| cardId             | varchar(255)   | NO   | PRI | NULL    |       |\n| accuracyRate       | int(11)        | YES  |     | NULL    |       |\n| accuracyRateTitle  | varchar(255)   | YES  |     | NULL    |       |\n| actionQueue        | varchar(255)   | YES  |     | NULL    |       |\n| actions            | varchar(10000) | YES  |     | NULL    |       |\n| attentionDes       | varchar(255)   | YES  |     | NULL    |       |\n| attentionTitle     | varchar(255)   | YES  |     | NULL    |       |\n| cardType           | varchar(4)     | NO   | MUL | NULL    |       |\n| classId            | varchar(255)   | YES  |     | NULL    |       |\n| content            | varchar(2000)  | YES  |     | NULL    |       |\n| exciseScore        | int(11)        | YES  |     | NULL    |       |\n| exciseTitle        | varchar(255)   | YES  |     | NULL    |       |\n| ext                | varchar(255)   | YES  |     | NULL    |       |\n| fromUser           | varchar(255)   | YES  |     | NULL    |       |\n| head               | varchar(255)   | YES  |     | NULL    |       |\n| isPush             | bit(1)         | YES  |     | NULL    |       |\n| level              | varchar(255)   | YES  |     | NULL    |       |\n| levelTitle         | varchar(255)   | YES  |     | NULL    |       |\n| listenScore        | int(11)        | YES  |     | NULL    |       |\n| listenScoreTitle   | varchar(255)   | YES  |     | NULL    |       |\n| oldCardType        | varchar(255)   | YES  |     | NULL    |       |\n| preclassScore      | int(11)        | YES  |     | NULL    |       |\n| preclassScoreTitle | varchar(255)   | YES  |     | NULL    |       |\n| scoreTitle         | varchar(255)   | YES  |     | NULL    |       |\n| scoreValue         | int(11)        | YES  |     | NULL    |       |\n| time               | datetime       | YES  |     | NULL    |       |\n| tips               | varchar(255)   | YES  |     | NULL    |       |\n| title              | varchar(255)   | YES  |     | NULL    |       |\n| toUser             | varchar(128)   | NO   | MUL | NULL    |       |\n+--------------------+----------------+------+-----+---------+-------+\n\u5206\u7247\u7b56\u7565\n```\nsharding:\n  jdbc:\n    datasource:\n      names: ds\n      ds:\n        type: org.apache.tomcat.jdbc.pool.DataSource\n        url: jdbc:mysql://127.0.0.1:3306/imtest?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: xxxx\n        driverClassName: com.mysql.cj.jdbc.Driver\nconfig:\n  sharding:\n    tables:\n      Card:\n        actualDataNodes: ds.Card_${0..2}\n        tableStrategy:\n          standard:\n            shardingColumn: toUser\n            preciseAlgorithmClassName: com.talbrain.platform.datasource.sharding.algorithm.CardPreciseShardingAlgorithm\n    props:\n      sql.show: true\n\n```\n\u5206\u7247\u7b56\u7565\u4ee3\u7801\n```\npublic class CardPreciseShardingAlgorithm implements PreciseShardingAlgorithm {\n    private static final int TABLE_SIZE = 3;\n    @Override\n    public String doSharding(Collection availableTargetNames, PreciseShardingValue shardingValue) {\n        String value = shardingValue.getValue();\n        int hashCode = Math.floorMod(value.hashCode(), TABLE_SIZE);\n        for (String each : availableTargetNames) {\n            if (each.endsWith(String.valueOf(hashCode))) {\n                return each;\n            }\n        }\n        throw new RuntimeException(\"doSharding | Failed to sharding for value: {}\");\n    }\n}\n```\nlog\n2017-11-24 14:49:50.058  INFO 73339 --- [0.0-8080-exec-1] Sharding-JDBC-SQL                        : Logic SQL: update Card set accuracyRate=?, accuracyRateTitle=?, actionQueue=?, actions=?, attentionDes=?, attentionTitle=?, cardType=?, classId=?, content=?, exciseScore=?, exciseTitle=?, ext=?, fromUser=?, head=?, isPush=?, level=?, levelTitle=?, listenScore=?, listenScoreTitle=?, oldCardType=?, preclassScore=?, preclassScoreTitle=?, scoreTitle=?, scoreValue=?, time=?, tips=?, title=?, toUser=? where cardId=?\n2017-11-24 14:49:50.058  INFO 73339 --- [0.0-8080-exec-1] Sharding-JDBC-SQL                        : SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=Card, alias=Optional.absent())]), conditions=Conditions(conditions={}), sqlTokens=[TableToken(beginPosition=7, originalLiterals=Card)], parametersIndex=29))\n2017-11-24 14:49:50.058  INFO 73339 --- [0.0-8080-exec-1] Sharding-JDBC-SQL                        : Actual SQL: ds ::: update Card_0 set accuracyRate=?, accuracyRateTitle=?, actionQueue=?, actions=?, attentionDes=?, attentionTitle=?, cardType=?, classId=?, content=?, exciseScore=?, exciseTitle=?, ext=?, fromUser=?, head=?, isPush=?, level=?, levelTitle=?, listenScore=?, listenScoreTitle=?, oldCardType=?, preclassScore=?, preclassScoreTitle=?, scoreTitle=?, scoreValue=?, time=?, tips=?, title=?, toUser=? where cardId=? ::: [null, null, [[{\"action_name\":\"\u5df2\u63d0\u9192\",\"image_type\":2,\"action_type\":0}]], [{\"action_name\":\"\u63d0\u9192\u5b69\u5b50\",\"image_type\":1,\"action_type\":2,\"ext\":{\"content\":\"qwer\",\"jzhMessageId\":\"000092cf-573a-4ed5-9e3e-c0fadd8a1259\"}}], null, null, 3, null, java.io.StringReader@7c2a500e, null, null, null, admin_trend, null, true, null, null, null, null, 3, null, null, null, null, 2017-11-24 14:49:03.0, null, null, a58100891df5484aa026f421ca90f627, 33667408789505]\n2017-11-24 14:49:50.059  INFO 73339 --- [0.0-8080-exec-1] Sharding-JDBC-SQL                        : Actual SQL: ds ::: update Card_1 set accuracyRate=?, accuracyRateTitle=?, actionQueue=?, actions=?, attentionDes=?, attentionTitle=?, cardType=?, classId=?, content=?, exciseScore=?, exciseTitle=?, ext=?, fromUser=?, head=?, isPush=?, level=?, levelTitle=?, listenScore=?, listenScoreTitle=?, oldCardType=?, preclassScore=?, preclassScoreTitle=?, scoreTitle=?, scoreValue=?, time=?, tips=?, title=?, toUser=? where cardId=? ::: [null, null, [[{\"action_name\":\"\u5df2\u63d0\u9192\",\"image_type\":2,\"action_type\":0}]], [{\"action_name\":\"\u63d0\u9192\u5b69\u5b50\",\"image_type\":1,\"action_type\":2,\"ext\":{\"content\":\"qwer\",\"jzhMessageId\":\"000092cf-573a-4ed5-9e3e-c0fadd8a1259\"}}], null, null, 3, null, java.io.StringReader@7c2a500e, null, null, null, admin_trend, null, true, null, null, null, null, 3, null, null, null, null, 2017-11-24 14:49:03.0, null, null, a58100891df5484aa026f421ca90f627, 33667408789505]\n2017-11-24 14:49:50.059  INFO 73339 --- [0.0-8080-exec-1] Sharding-JDBC-SQL                        : Actual SQL: ds ::: update Card_2 set accuracyRate=?, accuracyRateTitle=?, actionQueue=?, actions=?, attentionDes=?, attentionTitle=?, cardType=?, classId=?, content=?, exciseScore=?, exciseTitle=?, ext=?, fromUser=?, head=?, isPush=?, level=?, levelTitle=?, listenScore=?, listenScoreTitle=?, oldCardType=?, preclassScore=?, preclassScoreTitle=?, scoreTitle=?, scoreValue=?, time=?, tips=?, title=?, toUser=? where cardId=? ::: [null, null, [[{\"action_name\":\"\u5df2\u63d0\u9192\",\"image_type\":2,\"action_type\":0}]], [{\"action_name\":\"\u63d0\u9192\u5b69\u5b50\",\"image_type\":1,\"action_type\":2,\"ext\":{\"content\":\"qwer\",\"jzhMessageId\":\"000092cf-573a-4ed5-9e3e-c0fadd8a1259\"}}], null, null, 3, null, java.io.StringReader@7c2a500e, null, null, null, admin_trend, null, true, null, null, null, null, 3, null, null, null, null, 2017-11-24 14:49:03.0, null, null, a58100891df5484aa026f421ca90f627, 33667408789505]. Hi @terrymanu , \u6211\u4eec\u539f\u6765\u7684\u4ee3\u7801\u91cc\u9762\u662f\u8c03\u7528\u4e86hibernate\u7684save\u65b9\u6cd5\u6765\u5b9e\u73b0entity\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f62\u6210\u7684sql\u8bed\u53e5\u91cc\u9762where\u6761\u4ef6\u7528\u7684\u662f\u4e3b\u952e\uff0c\u4f46\u662f\u6211\u7684\u5206\u7247\u5efa\u7528\u7684\u5374\u4e0d\u662f\u4e3b\u952e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5462. ",
    "wangdengyang": "@terrymanu \u6211\u4e0d\u6e05\u695a\u7684\u662forder\u548corder_item\u4e24\u4e2a\u8868\u7684\u5206\u8868\u7b56\u7565\u4e0d\u4e00\u6837\uff0c\u4e3a\u4ec0\u4e48\u662f\u5339\u914d\u5bf9\u5e94\u7684\u5462\n\u914d\u7f6e\u5982\u4e0b\uff1a\n    ```\n sharding jdbc\u6539\u52a8\u5904 \n\n\n<sharding:data-source id=\"shardingDataSource\">\n    <sharding:sharding-rule data-source-names=\"dataSource\">\n        <sharding:table-rules>\n            <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"dataSource.t_order_${2016..2018}\" table-strategy-ref=\"orderTableShardingStrategy\" generate-key-column=\"order_id\" />\n            <sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"dataSource.t_order_item_${2016..2017}\" table-strategy-ref=\"orderItemTableShardingStrategy\" generate-key-column=\"order_item_id\" />\n        </sharding:table-rules>\n        <sharding:binding-table-rules>\n            <sharding:binding-table-rule logic-tables=\"t_order, t_order_item\"/>\n        </sharding:binding-table-rules>\n    </sharding:sharding-rule>\n    <sharding:props>\n        <prop key=\"sql.show\">true</prop>\n    </sharding:props>\n</sharding:data-source>\n\n\u4e24\u4e2a\u7b56\u7565\u7c7b\uff1a\n\u7b56\u7565\u7c7b\u4e00\uff1a\npublic final class PreciseModuloTableShardingAlgorithm implements PreciseShardingAlgorithm {\n@Override\npublic String doSharding(final Collection<String> availableTargetNames, final PreciseShardingValue<Date> shardingValue) {\n\n//      Calendar instance = Calendar.getInstance();\n//      instance.setTime(shardingValue.getValue());\n//      int year = instance.get(Calendar.YEAR);\n        for (String each : availableTargetNames) {\n            if (each.endsWith(2017+ \"\")) {\n                return each;\n            }\n        }\n        throw new UnsupportedOperationException();\n    }\n}\n\u7b56\u7565\u7c7b\u4e8c\uff1a\npublic final class PreciseModuloTableShardingAlgorithm2 implements PreciseShardingAlgorithm {\n@Override\npublic String doSharding(final Collection<String> availableTargetNames, final PreciseShardingValue<Date> shardingValue) {\n\n//      Calendar instance = Calendar.getInstance();\n//      instance.setTime(shardingValue.getValue());\n//      int year = instance.get(Calendar.YEAR);\n        for (String each : availableTargetNames) {\n            if (each.endsWith(2016+ \"\")) {\n                return each;\n            }\n        }\n        throw new UnsupportedOperationException();\n    }\n}\n```\n\u8fd0\u884cdemo\u65b9\u6cd5\uff0c\u5f53\u8d70\u5230System.out.println(orderItemRepository.selectAll());\u65f6\n\u62a5\u9519\u4fe1\u606f\u5982\u4e0b\uff1a\nException in thread \"main\" org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\nThe error may involve defaultParameterMap\nThe error occurred while setting parameters\nCause: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\nat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)\nat com.sun.proxy.$Proxy19.selectList(Unknown Source)\nat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:195)\nat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:120)\nat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:90)\nat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:40)\nat com.sun.proxy.$Proxy40.selectAll(Unknown Source)\nat com.msonion.core.service.DemoService.demo(DemoService.java:49)\nat com.msonion.core.SpringMybatisShardingTableOnlyMain.main(SpringMybatisShardingTableOnlyMain.java:33). @terrymanu \u5176\u5b9e\u95ee\u9898\u63cf\u8ff0\u7684\u8d8a\u591a\u8d8a\u5bb9\u6613\u628a\u95ee\u9898\u5e26\u504f\uff0c\u6211\u60f3\u95ee\u7684\u6838\u5fc3\u5c31\u662f\u6211\u63cf\u8ff0\u7b2c\u4e00\u680f\u91cc\u7684\u524d\u51e0\u884c\u6587\u5b57\u5185\u5bb9\u3002\n\n\u4e0a\u9762\u6211\u8d34\u7684\u914d\u7f6e\u548c\u7b56\u7565\u7c7b\u5176\u5b9e\u8ddf\u5e74\u4efd\u548c\u8868\u540d\u90fd\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u5c31\u662f\u60f3\u8868\u8fbeA\u8868\u548cB\u8868\u7684\u5206\u8868\u6570\u91cf\u4e0d\u4e00\u81f4\uff0c\u7b56\u7565\u4e5f\u4e0d\u4e00\u81f4\uff0c\u4f46\u662f\u4e24\u8005\u5173\u8054\u67e5\u8be2\u5168\u8def\u7531\u65f6\uff0c\u5374\u53d1\u751f\u5f02\u5e38\uff0c\u89e6\u53d1\u5f02\u5e38\u7684\u662fA\u548cB\u7684\u5206\u8868\u6570\u91cf\u4e0d\u4e00\u81f4\uff0c\u53ea\u8981\u4e24\u8005\u5206\u8868\u6570\u91cf\u4e00\u81f4\u5c31\u4e0d\u4f1a\u6709\u5f02\u5e38\u3002\n\u56e0\u4e3a\u5f02\u5e38\u5168\u8d34\u51fa\u6765\u6bd4\u8f83\u5360\u7bc7\u5e45\uff0c\u975e\u5e38\u62b1\u6b49\u4e0a\u9762\u5f02\u5e38\u6ca1\u8d34\u5b8c\u6574\n\u5f02\u5e38\u4fe1\u606f\uff1a\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\nThe error may involve defaultParameterMap\nThe error occurred while setting parameters\nCause: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\nat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:23)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:104)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:95)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)\n... 8 more\n\nCaused by: java.lang.IndexOutOfBoundsException: Index: 2, Size: 2\n    at java.util.LinkedList.checkElementIndex(LinkedList.java:553)\n    at java.util.LinkedList.get(LinkedList.java:474)\n    at io.shardingjdbc.core.rule.BindingTableRule.getBindingActualTable(BindingTableRule.java:76)\n    at io.shardingjdbc.core.rewrite.SQLRewriteEngine.getBindingTableTokens(SQLRewriteEngine.java:236)\n    at io.shardingjdbc.core.rewrite.SQLRewriteEngine.getTableTokens(SQLRewriteEngine.java:215)\n    at io.shardingjdbc.core.rewrite.SQLRewriteEngine.generateSQL(SQLRewriteEngine.java:196)\n    at io.shardingjdbc.core.routing.router.ParsingSQLRouter.route(ParsingSQLRouter.java:100)\n    at io.shardingjdbc.core.routing.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:57)\n    at io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.route(ShardingPreparedStatement.java:150)\n    at io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:140)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:57)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:70)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)\n    at com.sun.proxy.$Proxy93.query(Unknown Source)\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:57)\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:141)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:98)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:73)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:101)\n    ... 14 more\n. @terrymanu \u5176\u5b9e\u5c31\u7b97\u662fA\u8868\u548cB\u8868\u90fd\u5206\u4e3a\u540c\u6837\u6570\u91cf\u7684\u4e24\u4e2a\u8868\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u5f02\u5e38\uff0c\u4f46\u4e24\u8005\u7b56\u7565\u4e0d\u4e00\u6837\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u662f\u4f1a\u6709A_0\u5bf9\u5e94B_a\uff0cA_1\u5bf9\u5e94B_b\u7684\u5339\u914d\u5173\u7cfb\u5462\uff0c\u5f3a\u8c03\u662f\u4e24\u8005\u5206\u8868\u7b56\u7565\u4e0d\u4e00\u6837\u7684. @terrymanu \u597d\u7684\uff0c\u521a\u770b\u5230\u4f60\u7684\u56de\u590d\uff0c\u6211\u8bd5\u4e00\u4e0b\uff0c\u975e\u5e38\u611f\u8c22\u4eae\u54e5\u7684\u56de\u590d. ",
    "winworm": "\u975e\u5e38\u62b1\u6b49\uff0c\u521a\u521a\u624d\u770b\u5230\u6d88\u606f\uff0c\u539f\u59cbsql\u5927\u698250ms\u5de6\u53f3\uff0c \u6162\u7684\u539f\u56e0\u53ef\u80fd\u662f\u6211\u5206\u4e8610\u4e2a\u5e93\uff0c100\u4e2a\u8868\uff0c \u6211\u7684sql\u4e2din \u5217\u8868\u5927\u5c0f\u4e3a10.   \u5f53\u4f7f\u7528shardjdbc \u8fde\u63a5\u65f6\uff0c\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u5206\u7247id\u51b3\u5b9a\u4e0d\u540c\u7684\u5e93\uff08\u6700\u5927\u53ef\u80fd\u5206\u6563\u523010\u4e2a\u5e93\u4e2d\uff09\uff0c\u548c\u4e0d\u540c\u7684\u8868\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u4ea4\u53c9\u6267\u884c100\u6761sql \uff0c\u7136\u540e\u65f6\u95f4\u53d8\u5f97\u5f88\u6162\uff0c\u8fd9\u4e2a\u662f\u5927\u6982\u5206\u6790\u7684\u539f\u56e0\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u662f\u8fd9\u6837\u7684\u3002. ",
    "luciferganwei": "user000.t_user0000, user000.t_user0001, user000.t_user0002, user000.t_user0003, user000.t_user0004, user000.t_user0005, user000.t_user0006, user000.t_user0007, user000.t_user0008, user000.t_user0009, user000.t_user0010, user000.t_user0011, user000.t_user0012, user000.t_user0013, user000.t_user0014, user000.t_user0015, user000.t_user0016, user000.t_user0017, user000.t_user0018, user000.t_user0019, user000.t_user0020, user000.t_user0021, user000.t_user0022, user000.t_user0023, user000.t_user0024, user000.t_user0025, user000.t_user0026, user000.t_user0027, user000.t_user0028, user000.t_user0029, user000.t_user0030, user000.t_user0031, user000.t_user0032, user000.t_user0033, user000.t_user0034, user000.t_user0035, user000.t_user0036, user000.t_user0037, user000.t_user0038, user000.t_user0039, user000.t_user0040, user000.t_user0041, user000.t_user0042, user000.t_user0043, user000.t_user0044, user000.t_user0045, user000.t_user0046, user000.t_user0047, user000.t_user0048, user000.t_user0049, user000.t_user0050, user000.t_user0051, user000.t_user0052, user000.t_user0053, user000.t_user0054, user000.t_user0055, user000.t_user0056, user000.t_user0057, user000.t_user0058, user000.t_user0059, user000.t_user0060, user000.t_user0061, user000.t_user0062, user000.t_user0063, user001.t_user0064, user001.t_user0065, user001.t_user0066, user001.t_user0067, user001.t_user0068, user001.t_user0069, user001.t_user0070, user001.t_user0071, user001.t_user0072, user001.t_user0073, user001.t_user0074, user001.t_user0075, user001.t_user0076, user001.t_user0077, user001.t_user0078, user001.t_user0079, user001.t_user0080, user001.t_user0081, user001.t_user0082, user001.t_user0083, user001.t_user0084, user001.t_user0085, user001.t_user0086, user001.t_user0087, user001.t_user0088, user001.t_user0089, user001.t_user0090, user001.t_user0091, user001.t_user0092, user001.t_user0093, user001.t_user0094, user001.t_user0095, user001.t_user0096, user001.t_user0097, user001.t_user0098, user001.t_user0099, user001.t_user0100, user001.t_user0101, user001.t_user0102, user001.t_user0103, user001.t_user0104, user001.t_user0105, user001.t_user0106, user001.t_user0107, user001.t_user0108, user001.t_user0109, user001.t_user0110, user001.t_user0111, user001.t_user0112, user001.t_user0113, user001.t_user0114, user001.t_user0115, user001.t_user0116, user001.t_user0117, user001.t_user0118, user001.t_user0119, user001.t_user0120, user001.t_user0121, user001.t_user0122, user001.t_user0123, user001.t_user0124, user001.t_user0125, user001.t_user0126, user001.t_user0127, user002.t_user0128, user002.t_user0129, user002.t_user0130, user002.t_user0131, user002.t_user0132, user002.t_user0133, user002.t_user0134, user002.t_user0135, user002.t_user0136, user002.t_user0137, user002.t_user0138, user002.t_user0139, user002.t_user0140, user002.t_user0141, user002.t_user0142, user002.t_user0143, user002.t_user0144, user002.t_user0145, user002.t_user0146, user002.t_user0147, user002.t_user0148, user002.t_user0149, user002.t_user0150, user002.t_user0151, user002.t_user0152, user002.t_user0153, user002.t_user0154, user002.t_user0155, user002.t_user0156, user002.t_user0157, user002.t_user0158, user002.t_user0159, user002.t_user0160, user002.t_user0161, user002.t_user0162, user002.t_user0163, user002.t_user0164, user002.t_user0165, user002.t_user0166, user002.t_user0167, user002.t_user0168, user002.t_user0169, user002.t_user0170, user002.t_user0171, user002.t_user0172, user002.t_user0173, user002.t_user0174, user002.t_user0175, user002.t_user0176, user002.t_user0177, user002.t_user0178, user002.t_user0179, user002.t_user0180, user002.t_user0181, user002.t_user0182, user002.t_user0183, user002.t_user0184, user002.t_user0185, user002.t_user0186, user002.t_user0187, user002.t_user0188, user002.t_user0189, user002.t_user0190, user002.t_user0191, user003.t_user0192, user003.t_user0193, user003.t_user0194, user003.t_user0195, user003.t_user0196, user003.t_user0197, user003.t_user0198, user003.t_user0199, user003.t_user0200, user003.t_user0201, user003.t_user0202, user003.t_user0203, user003.t_user0204, user003.t_user0205, user003.t_user0206, user003.t_user0207, user003.t_user0208, user003.t_user0209, user003.t_user0210, user003.t_user0211, user003.t_user0212, user003.t_user0213, user003.t_user0214, user003.t_user0215, user003.t_user0216, user003.t_user0217, user003.t_user0218, user003.t_user0219, user003.t_user0220, user003.t_user0221, user003.t_user0222, user003.t_user0223, user003.t_user0224, user003.t_user0225, user003.t_user0226, user003.t_user0227, user003.t_user0228, user003.t_user0229, user003.t_user0230, user003.t_user0231, user003.t_user0232, user003.t_user0233, user003.t_user0234, user003.t_user0235, user003.t_user0236, user003.t_user0237, user003.t_user0238, user003.t_user0239, user003.t_user0240, user003.t_user0241, user003.t_user0242, user003.t_user0243, user003.t_user0244, user003.t_user0245, user003.t_user0246, user003.t_user0247, user003.t_user0248, user003.t_user0249, user003.t_user0250, user003.t_user0251, user003.t_user0252, user003.t_user0253, user003.t_user0254, user003.t_user0255, user004.t_user0256, user004.t_user0257, user004.t_user0258, user004.t_user0259, user004.t_user0260, user004.t_user0261, user004.t_user0262, user004.t_user0263, user004.t_user0264, user004.t_user0265, user004.t_user0266, user004.t_user0267, user004.t_user0268, user004.t_user0269, user004.t_user0270, user004.t_user0271, user004.t_user0272, user004.t_user0273, user004.t_user0274, user004.t_user0275, user004.t_user0276, user004.t_user0277, user004.t_user0278, user004.t_user0279, user004.t_user0280, user004.t_user0281, user004.t_user0282, user004.t_user0283, user004.t_user0284, user004.t_user0285, user004.t_user0286, user004.t_user0287, user004.t_user0288, user004.t_user0289, user004.t_user0290, user004.t_user0291, user004.t_user0292, user004.t_user0293, user004.t_user0294, user004.t_user0295, user004.t_user0296, user004.t_user0297, user004.t_user0298, user004.t_user0299, user004.t_user0300, user004.t_user0301, user004.t_user0302, user004.t_user0303, user004.t_user0304, user004.t_user0305, user004.t_user0306, user004.t_user0307, user004.t_user0308, user004.t_user0309, user004.t_user0310, user004.t_user0311, user004.t_user0312, user004.t_user0313, user004.t_user0314, user004.t_user0315, user004.t_user0316, user004.t_user0317, user004.t_user0318, user004.t_user0319, user005.t_user0320, user005.t_user0321, user005.t_user0322, user005.t_user0323, user005.t_user0324, user005.t_user0325, user005.t_user0326, user005.t_user0327, user005.t_user0328, user005.t_user0329, user005.t_user0330, user005.t_user0331, user005.t_user0332, user005.t_user0333, user005.t_user0334, user005.t_user0335, user005.t_user0336, user005.t_user0337, user005.t_user0338, user005.t_user0339, user005.t_user0340, user005.t_user0341, user005.t_user0342, user005.t_user0343, user005.t_user0344, user005.t_user0345, user005.t_user0346, user005.t_user0347, user005.t_user0348, user005.t_user0349, user005.t_user0350, user005.t_user0351, user005.t_user0352, user005.t_user0353, user005.t_user0354, user005.t_user0355, user005.t_user0356, user005.t_user0357, user005.t_user0358, user005.t_user0359, user005.t_user0360, user005.t_user0361, user005.t_user0362, user005.t_user0363, user005.t_user0364, user005.t_user0365, user005.t_user0366, user005.t_user0367, user005.t_user0368, user005.t_user0369, user005.t_user0370, user005.t_user0371, user005.t_user0372, user005.t_user0373, user005.t_user0374, user005.t_user0375, user005.t_user0376, user005.t_user0377, user005.t_user0378, user005.t_user0379, user005.t_user0380, user005.t_user0381, user005.t_user0382, user005.t_user0383, user006.t_user0384, user006.t_user0385, user006.t_user0386, user006.t_user0387, user006.t_user0388, user006.t_user0389, user006.t_user0390, user006.t_user0391, user006.t_user0392, user006.t_user0393, user006.t_user0394, user006.t_user0395, user006.t_user0396, user006.t_user0397, user006.t_user0398, user006.t_user0399, user006.t_user0400, user006.t_user0401, user006.t_user0402, user006.t_user0403, user006.t_user0404, user006.t_user0405, user006.t_user0406, user006.t_user0407, user006.t_user0408, user006.t_user0409, user006.t_user0410, user006.t_user0411, user006.t_user0412, user006.t_user0413, user006.t_user0414, user006.t_user0415, user006.t_user0416, user006.t_user0417, user006.t_user0418, user006.t_user0419, user006.t_user0420, user006.t_user0421, user006.t_user0422, user006.t_user0423, user006.t_user0424, user006.t_user0425, user006.t_user0426, user006.t_user0427, user006.t_user0428, user006.t_user0429, user006.t_user0430, user006.t_user0431, user006.t_user0432, user006.t_user0433, user006.t_user0434, user006.t_user0435, user006.t_user0436, user006.t_user0437, user006.t_user0438, user006.t_user0439, user006.t_user0440, user006.t_user0441, user006.t_user0442, user006.t_user0443, user006.t_user0444, user006.t_user0445, user006.t_user0446, user006.t_user0447, user007.t_user0448, user007.t_user0449, user007.t_user0450, user007.t_user0451, user007.t_user0452, user007.t_user0453, user007.t_user0454, user007.t_user0455, user007.t_user0456, user007.t_user0457, user007.t_user0458, user007.t_user0459, user007.t_user0460, user007.t_user0461, user007.t_user0462, user007.t_user0463, user007.t_user0464, user007.t_user0465, user007.t_user0466, user007.t_user0467, user007.t_user0468, user007.t_user0469, user007.t_user0470, user007.t_user0471, user007.t_user0472, user007.t_user0473, user007.t_user0474, user007.t_user0475, user007.t_user0476, user007.t_user0477, user007.t_user0478, user007.t_user0479, user007.t_user0480, user007.t_user0481, user007.t_user0482, user007.t_user0483, user007.t_user0484, user007.t_user0485, user007.t_user0486, user007.t_user0487, user007.t_user0488, user007.t_user0489, user007.t_user0490, user007.t_user0491, user007.t_user0492, user007.t_user0493, user007.t_user0494, user007.t_user0495, user007.t_user0496, user007.t_user0497, user007.t_user0498, user007.t_user0499, user007.t_user0500, user007.t_user0501, user007.t_user0502, user007.t_user0503, user007.t_user0504, user007.t_user0505, user007.t_user0506, user007.t_user0507, user007.t_user0508, user007.t_user0509, user007.t_user0510, user007.t_user0511, user008.t_user0512, user008.t_user0513, user008.t_user0514, user008.t_user0515, user008.t_user0516, user008.t_user0517, user008.t_user0518, user008.t_user0519, user008.t_user0520, user008.t_user0521, user008.t_user0522, user008.t_user0523, user008.t_user0524, user008.t_user0525, user008.t_user0526, user008.t_user0527, user008.t_user0528, user008.t_user0529, user008.t_user0530, user008.t_user0531, user008.t_user0532, user008.t_user0533, user008.t_user0534, user008.t_user0535, user008.t_user0536, user008.t_user0537, user008.t_user0538, user008.t_user0539, user008.t_user0540, user008.t_user0541, user008.t_user0542, user008.t_user0543, user008.t_user0544, user008.t_user0545, user008.t_user0546, user008.t_user0547, user008.t_user0548, user008.t_user0549, user008.t_user0550, user008.t_user0551, user008.t_user0552, user008.t_user0553, user008.t_user0554, user008.t_user0555, user008.t_user0556, user008.t_user0557, user008.t_user0558, user008.t_user0559, user008.t_user0560, user008.t_user0561, user008.t_user0562, user008.t_user0563, user008.t_user0564, user008.t_user0565, user008.t_user0566, user008.t_user0567, user008.t_user0568, user008.t_user0569, user008.t_user0570, user008.t_user0571, user008.t_user0572, user008.t_user0573, user008.t_user0574, user008.t_user0575, user009.t_user0576, user009.t_user0577, user009.t_user0578, user009.t_user0579, user009.t_user0580, user009.t_user0581, user009.t_user0582, user009.t_user0583, user009.t_user0584, user009.t_user0585, user009.t_user0586, user009.t_user0587, user009.t_user0588, user009.t_user0589, user009.t_user0590, user009.t_user0591, user009.t_user0592, user009.t_user0593, user009.t_user0594, user009.t_user0595, user009.t_user0596, user009.t_user0597, user009.t_user0598, user009.t_user0599, user009.t_user0600, user009.t_user0601, user009.t_user0602, user009.t_user0603, user009.t_user0604, user009.t_user0605, user009.t_user0606, user009.t_user0607, user009.t_user0608, user009.t_user0609, user009.t_user0610, user009.t_user0611, user009.t_user0612, user009.t_user0613, user009.t_user0614, user009.t_user0615, user009.t_user0616, user009.t_user0617, user009.t_user0618, user009.t_user0619, user009.t_user0620, user009.t_user0621, user009.t_user0622, user009.t_user0623, user009.t_user0624, user009.t_user0625, user009.t_user0626, user009.t_user0627, user009.t_user0628, user009.t_user0629, user009.t_user0630, user009.t_user0631, user009.t_user0632, user009.t_user0633, user009.t_user0634, user009.t_user0635, user009.t_user0636, user009.t_user0637, user009.t_user0638, user009.t_user0639, user010.t_user0640, user010.t_user0641, user010.t_user0642, user010.t_user0643, user010.t_user0644, user010.t_user0645, user010.t_user0646, user010.t_user0647, user010.t_user0648, user010.t_user0649, user010.t_user0650, user010.t_user0651, user010.t_user0652, user010.t_user0653, user010.t_user0654, user010.t_user0655, user010.t_user0656, user010.t_user0657, user010.t_user0658, user010.t_user0659, user010.t_user0660, user010.t_user0661, user010.t_user0662, user010.t_user0663, user010.t_user0664, user010.t_user0665, user010.t_user0666, user010.t_user0667, user010.t_user0668, user010.t_user0669, user010.t_user0670, user010.t_user0671, user010.t_user0672, user010.t_user0673, user010.t_user0674, user010.t_user0675, user010.t_user0676, user010.t_user0677, user010.t_user0678, user010.t_user0679, user010.t_user0680, user010.t_user0681, user010.t_user0682, user010.t_user0683, user010.t_user0684, user010.t_user0685, user010.t_user0686, user010.t_user0687, user010.t_user0688, user010.t_user0689, user010.t_user0690, user010.t_user0691, user010.t_user0692, user010.t_user0693, user010.t_user0694, user010.t_user0695, user010.t_user0696, user010.t_user0697, user010.t_user0698, user010.t_user0699, user010.t_user0700, user010.t_user0701, user010.t_user0702, user010.t_user0703, user011.t_user0704, user011.t_user0705, user011.t_user0706, user011.t_user0707, user011.t_user0708, user011.t_user0709, user011.t_user0710, user011.t_user0711, user011.t_user0712, user011.t_user0713, user011.t_user0714, user011.t_user0715, user011.t_user0716, user011.t_user0717, user011.t_user0718, user011.t_user0719, user011.t_user0720, user011.t_user0721, user011.t_user0722, user011.t_user0723, user011.t_user0724, user011.t_user0725, user011.t_user0726, user011.t_user0727, user011.t_user0728, user011.t_user0729, user011.t_user0730, user011.t_user0731, user011.t_user0732, user011.t_user0733, user011.t_user0734, user011.t_user0735, user011.t_user0736, user011.t_user0737, user011.t_user0738, user011.t_user0739, user011.t_user0740, user011.t_user0741, user011.t_user0742, user011.t_user0743, user011.t_user0744, user011.t_user0745, user011.t_user0746, user011.t_user0747, user011.t_user0748, user011.t_user0749, user011.t_user0750, user011.t_user0751, user011.t_user0752, user011.t_user0753, user011.t_user0754, user011.t_user0755, user011.t_user0756, user011.t_user0757, user011.t_user0758, user011.t_user0759, user011.t_user0760, user011.t_user0761, user011.t_user0762, user011.t_user0763, user011.t_user0764, user011.t_user0765, user011.t_user0766, user011.t_user0767, user012.t_user0768, user012.t_user0769, user012.t_user0770, user012.t_user0771, user012.t_user0772, user012.t_user0773, user012.t_user0774, user012.t_user0775, user012.t_user0776, user012.t_user0777, user012.t_user0778, user012.t_user0779, user012.t_user0780, user012.t_user0781, user012.t_user0782, user012.t_user0783, user012.t_user0784, user012.t_user0785, user012.t_user0786, user012.t_user0787, user012.t_user0788, user012.t_user0789, user012.t_user0790, user012.t_user0791, user012.t_user0792, user012.t_user0793, user012.t_user0794, user012.t_user0795, user012.t_user0796, user012.t_user0797, user012.t_user0798, user012.t_user0799, user012.t_user0800, user012.t_user0801, user012.t_user0802, user012.t_user0803, user012.t_user0804, user012.t_user0805, user012.t_user0806, user012.t_user0807, user012.t_user0808, user012.t_user0809, user012.t_user0810, user012.t_user0811, user012.t_user0812, user012.t_user0813, user012.t_user0814, user012.t_user0815, user012.t_user0816, user012.t_user0817, user012.t_user0818, user012.t_user0819, user012.t_user0820, user012.t_user0821, user012.t_user0822, user012.t_user0823, user012.t_user0824, user012.t_user0825, user012.t_user0826, user012.t_user0827, user012.t_user0828, user012.t_user0829, user012.t_user0830, user012.t_user0831, user013.t_user0832, user013.t_user0833, user013.t_user0834, user013.t_user0835, user013.t_user0836, user013.t_user0837, user013.t_user0838, user013.t_user0839, user013.t_user0840, user013.t_user0841, user013.t_user0842, user013.t_user0843, user013.t_user0844, user013.t_user0845, user013.t_user0846, user013.t_user0847, user013.t_user0848, user013.t_user0849, user013.t_user0850, user013.t_user0851, user013.t_user0852, user013.t_user0853, user013.t_user0854, user013.t_user0855, user013.t_user0856, user013.t_user0857, user013.t_user0858, user013.t_user0859, user013.t_user0860, user013.t_user0861, user013.t_user0862, user013.t_user0863, user013.t_user0864, user013.t_user0865, user013.t_user0866, user013.t_user0867, user013.t_user0868, user013.t_user0869, user013.t_user0870, user013.t_user0871, user013.t_user0872, user013.t_user0873, user013.t_user0874, user013.t_user0875, user013.t_user0876, user013.t_user0877, user013.t_user0878, user013.t_user0879, user013.t_user0880, user013.t_user0881, user013.t_user0882, user013.t_user0883, user013.t_user0884, user013.t_user0885, user013.t_user0886, user013.t_user0887, user013.t_user0888, user013.t_user0889, user013.t_user0890, user013.t_user0891, user013.t_user0892, user013.t_user0893, user013.t_user0894, user013.t_user0895, user014.t_user0896, user014.t_user0897, user014.t_user0898, user014.t_user0899, user014.t_user0900, user014.t_user0901, user014.t_user0902, user014.t_user0903, user014.t_user0904, user014.t_user0905, user014.t_user0906, user014.t_user0907, user014.t_user0908, user014.t_user0909, user014.t_user0910, user014.t_user0911, user014.t_user0912, user014.t_user0913, user014.t_user0914, user014.t_user0915, user014.t_user0916, user014.t_user0917, user014.t_user0918, user014.t_user0919, user014.t_user0920, user014.t_user0921, user014.t_user0922, user014.t_user0923, user014.t_user0924, user014.t_user0925, user014.t_user0926, user014.t_user0927, user014.t_user0928, user014.t_user0929, user014.t_user0930, user014.t_user0931, user014.t_user0932, user014.t_user0933, user014.t_user0934, user014.t_user0935, user014.t_user0936, user014.t_user0937, user014.t_user0938, user014.t_user0939, user014.t_user0940, user014.t_user0941, user014.t_user0942, user014.t_user0943, user014.t_user0944, user014.t_user0945, user014.t_user0946, user014.t_user0947, user014.t_user0948, user014.t_user0949, user014.t_user0950, user014.t_user0951, user014.t_user0952, user014.t_user0953, user014.t_user0954, user014.t_user0955, user014.t_user0956, user014.t_user0957, user014.t_user0958, user014.t_user0959, user015.t_user0960, user015.t_user0961, user015.t_user0962, user015.t_user0963, user015.t_user0964, user015.t_user0965, user015.t_user0966, user015.t_user0967, user015.t_user0968, user015.t_user0969, user015.t_user0970, user015.t_user0971, user015.t_user0972, user015.t_user0973, user015.t_user0974, user015.t_user0975, user015.t_user0976, user015.t_user0977, user015.t_user0978, user015.t_user0979, user015.t_user0980, user015.t_user0981, user015.t_user0982, user015.t_user0983, user015.t_user0984, user015.t_user0985, user015.t_user0986, user015.t_user0987, user015.t_user0988, user015.t_user0989, user015.t_user0990, user015.t_user0991, user015.t_user0992, user015.t_user0993, user015.t_user0994, user015.t_user0995, user015.t_user0996, user015.t_user0997, user015.t_user0998, user015.t_user0999, user015.t_user1000, user015.t_user1001, user015.t_user1002, user015.t_user1003, user015.t_user1004, user015.t_user1005, user015.t_user1006, user015.t_user1007, user015.t_user1008, user015.t_user1009, user015.t_user1010, user015.t_user1011, user015.t_user1012, user015.t_user1013, user015.t_user1014, user015.t_user1015, user015.t_user1016, user015.t_user1017, user015.t_user1018, user015.t_user1019, user015.t_user1020, user015.t_user1021, user015.t_user1022, user015.t_user1023. \u5176\u5b9e\u662f\u6839\u636euid \uff0c\u8868\u540d\u662fuid%1024  ,\u5e93\u540d\u662f (uid%1024)/64  \uff0c\u4f46\u662f\u6bcf\u4e2a\u5e93\u53ea\u653e64\u4e2a\u8868\uff0c\u6bd4\u5982 0\u5e93\u662f0-63\u8868\uff0c1\u5e93\u662f64-127 \u8868\uff0c\u9700\u8981\u5e93\u662f\u4e09\u4f4d\uff0c\u8868\u662f\u56db\u4f4d\u957f\u5ea6\uff0c\u6211\u73b0\u5728\u5728\u770b\u80fd\u4e0d\u80fd\u901a\u8fc7groovy\u8868\u8fbe\u5f0f\u63cf\u8ff0. 16 \u5e93\uff0c\u6bcf\u5e9364\u8868\uff0c \u76ee\u524d\u6570\u636e\u91cf\u57284\u5343\u4e07\u8fd9\u6837\uff0c\u4e3b\u8981\u662f\u5386\u53f2\u5305\u88b1\uff0c\u62ff\u5230\u5c31\u8fd9\u4e48\u5206\u3002\u4ee5\u524d\u662ftddl\u7ec4\u4ef6\uff0c\u540e\u6765\u592a\u9ebb\u70e6\u4e86\uff0c\u5c31\u8f6c\u5411sharding-jdbc. \u6211\u521a\u624d\u914d\u7f6e\u4e8622\u4e2a logic table\uff0c\u540c\u6837\u7684\u89c4\u5219\uff0c\u7528\u4e862\u5206\u949f\u624d\u89e3\u6790\u5b8c. \u597d\u5947\u602a\uff0c\u6211\u62ff\u5230macos\u4e0b\u9762\u89e3\u6790\u8d3c\u5feb\uff0c\u80fd\u5426\u5728InlineExpressionParser.java \u00a0\u00a0\u4e2d61\u884c\u4e2d\u52a0\u5165\uff1aif(!each.contains(\"{\")){\n        result.add(each);\n        continue;\n}\n\u517c\u5bb9\u8fd9\u79cd\u6ca1\u6709\u4efb\u4f55\u8868\u8fbe\u5f0f\u5b50\u7684\u6570\u636e\u5206\u7247. \u4e00\u4e2alogic\u8868\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u5982\u679c\u662f\u591a\u4e2a\u8868\uff0c\u6bd4\u598220\u4e2a\uff0c\u5c31\u5f88\u660e\u663e\u4e86. ",
    "qdhk": "\u5efa\u8868\u65f6\u5982\u679c\u91c7\u7528\u5206\u533a\uff0c\u662f\u5426\u80fd\u8fbe\u5230\u8ddf\u4f7f\u7528\u6b64\u63d2\u4ef6\u4e00\u6837\u7684\u6548\u679c. ",
    "donghc": "\u6211\u786e\u5b9a\u662f\u57282.0.0.M3\u7248\u672c\u7684\uff0cpom\u6587\u4ef6\u7684\u4f9d\u8d56\u9879\u4e3a\uff1a\n https://mvnrepository.com/artifact/io.shardingjdbc/sharding-jdbc-spring-boot-starter \n\nio.shardingjdbc\nsharding-jdbc-spring-boot-starter\n2.0.0.M3\n\n\u8c22\u8c22\u3002. \u4f60\u597d\uff0c\u4ee3\u7801\u5df2\u4e0a\u4f20\u5230\u5730\u5740\uff1ahttps://gitee.com/donghc/sharding . \u786e\u5b9a\u4e0d\u662fbug\u5c31\u597d\uff0c\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u662f\u7531\u4e8e\u6211\u81ea\u5df1\u5199\u6837\u4f8bdemo\u8fdb\u884c\u5b66\u4e60\uff0c\u5f53\u65f6\u6ca1\u6709\u505a\u6570\u636e\u540c\u6b65\u7684\uff0c\u60f3\u770b\u770b\u7ed3\u679c\u3002\u4e0d\u77e5\u9053\u8be5\u4ece\u54ea\u91ccdebug\u5f00\u59cb\uff0c\u73b0\u5728\u660e\u767d\u4e86\u8fd9\u4e2a\u8def\u7531\u539f\u7406\uff0c\u611f\u8c22\u89e3\u7b54\u3002\n. ",
    "zhouyougit": "@haocao \u53ef\u4ee5\u770b\u770bspring\u7684BeanDefinitionValueResolver\u8fd9\u4e2a\u7c7b\u7684resolveValueIfNecessary\u65b9\u6cd5\uff0c\n\u5f53\u521b\u5efaShardingDataSource\u7684\u65f6\u5019\u5904\u7406datasource\u5b57\u6bb5\u65f6\u4f1a\u8c03\u7528\u5230\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4ece\u65b9\u6cd5\u7684\u6ce8\u91ca\u53ef\u4ee5\u770b\u5230\u5982\u679c\u7c7b\u578b\u662fBeanDefinition\u90a3\u4e48\u4f1a\u521b\u5efa\u4e00\u4e2aanonymous prototypes\u7684Inner beans.\n\u8bf4\u9053\u7684inner datasource bean\u5c31\u662f\u6307\u7684\u8fd9\u91cc\u521b\u5efa\u7684\u7c7b\u578b\u4e3aInner beans\u7684datasource\n\n. ",
    "dreapur": "@terrymanu \u4f7f\u7528\u7684\u662f\u5b98\u7f51\u63d0\u4f9b\u7684\"sharding-jdbc-raw-jdbc-java-example\"\u8fd9\u4e2a\u5de5\u7a0b\uff0c\u4f5c\u4e86\u7b80\u5355\u7684\u4fee\u6539\uff1a\n1.DataSourceUtils\u6539\u6210\u8fde\u63a5Oracle\u6570\u636e\u5e93\n2.t_order\u8868\u4f7f\u7528\u6807\u51c6\u5206\u7247\u7b56\u7565\uff0c\u7b97\u6cd5\u5c31\u662f\u4f8b\u5b50\u63d0\u4f9b\u7684\u7b97\u6cd5\uff0cPreciseShardingAlgorithm\u6cdb\u578b\u6539\u4e3aInteger\uff0c\u201corder_id\u201d\u4f5c\u5206\u7247\u5b57\u6bb5\nString shardingColumn = \"order_id\";\n        String algorithmClassNameForModulo = \"io.shardingjdbc.example.jdbc.java.algorithm.ModuloShardingTableAlgorithm\";\n        StandardShardingStrategyConfiguration sSSC = new StandardShardingStrategyConfiguration(shardingColumn, algorithmClassNameForModulo);\n        orderTableRuleConfig.setTableShardingStrategyConfig(sSSC);\n3.\u5efa\u8868\u8bed\u53e5\u548c\u63d2\u5165\u8bed\u53e5\nCREATE TABLE t_order (order_id NUMBER(2) NOT NULL, user_id NUMBER(2) NOT NULL, status VARCHAR2(50))\nfor (int i = 1; i < 40; i++) {\n            String sql = \"INSERT INTO t_order (order_id, user_id,status) VALUES (\" + i + \", \" + (i + 1) + \",'INIT')\";\n            execute(dataSource,sql);\n        }\n4.\u67e5\u8be2\u8bed\u53e5\nSELECT * FROM (SELECT A1.*, ROWNUM RN1 FROM (SELECT * FROM t_order ORDER BY user_id DESC) A1 WHERE ROWNUM <= 10) B WHERE B.RN1 >= 1\n\u9884\u671f\u7ed3\u679c\u670910\u6761\u6570\u636e\uff0c\u5b9e\u9645\u7ed3\u679c\u53ea\u67099\u6761\uff0c\u7f3a\u5c11\u4e86\"order_id:39,user_id:40\"\u8fd9\u6761\u8bb0\u5f55\norder_id:38, user_id:39, \norder_id:37, user_id:38, \norder_id:36, user_id:37, \norder_id:35, user_id:36, \norder_id:34, user_id:35, \norder_id:33, user_id:34, \norder_id:32, user_id:33, \norder_id:31, user_id:32, \norder_id:30, user_id:31,. ",
    "ningpp": "https://github.com/shardingjdbc/sharding-jdbc-example. ",
    "wangqisen": "\u6b63\u5728\u5b8c\u6210\u65b0\u589eOR\u8bed\u53e5\u7684\u5de5\u4f5c\uff0cdeadline\uff1a2018/01/30. @haocao \u8c22\u8c22\u6d4b\u8bd5\u548creview\uff01\u6211\u521a\u91cd\u65b0\u8dd1\u4e86\u4e0b\u5355\u6d4bOrShardingPreparedStatementTest\u4e2d\u7684assertExecuteQueryWithParameter()\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53d1\u73b0\u53ef\u4ee5\u5bf9\u4e8eSQL\uff1a\nSELECT * FROM t_order WHERE user_id = \uff1f OR order_id = \uff1f\n\u8fdb\u884c\u5168\u90e8\u5206\u8868\u7684\u67e5\u8be2\u3002\n\u7ed3\u679c\u5982\u4e0b\uff1a\n[INFO] 12:01:37.932 [main] Sharding-JDBC-SQL - Logic SQL: SELECT * FROM t_order WHERE user_id= ? OR order_id = ?\n[INFO ] 12:01:37.950 [main] Sharding-JDBC-SQL - Actual SQL: dataSource_jdbc_1 ::: SELECT * FROM t_order_0 WHERE user_id= ? OR order_id = ? ::: [10, 1000]\n[INFO ] 12:01:37.950 [main] Sharding-JDBC-SQL - Actual SQL: dataSource_jdbc_1 ::: SELECT * FROM t_order_1 WHERE user_id= ? OR order_id = ? ::: [10, 1000]\n[INFO ] 12:01:37.950 [main] Sharding-JDBC-SQL - Actual SQL: dataSource_jdbc_0 ::: SELECT * FROM t_order_0 WHERE user_id= ? OR order_id = ? ::: [10, 1000]\n[INFO ] 12:01:37.950 [main] Sharding-JDBC-SQL - Actual SQL: dataSource_jdbc_0 ::: SELECT * FROM t_order_1 WHERE user_id= ? OR order_id = ? ::: [10, 1000]\n\u80fd\u9ebb\u70e6\u544a\u8bc9\u6211\uff0c\u4e0d\u80fd\u591a\u8868\u67e5\u8be2\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\u914d\u7f6e\u5417\uff1f\n  . ",
    "lxhuang0903": "\u95ee\u4e0b\u73b0\u5728\u652f\u6301or\u4e86\u5417 @wangqisen . ",
    "mafanchen": "@wangqisen \u9884\u8ba1\u4ec0\u4e48\u65f6\u5019\u80fd\u6b63\u5f0f\u652f\u6301OR\u8bed\u53e5\uff1f\u5173\u6ce8\u4e2d.... ",
    "Springs-wu": "\u73b0\u5728\u652f\u6301\u4e86\u5417. ",
    "LionsWang": "private void processGeneratedKey(final List parameters, final InsertStatement insertStatement, final SQLRouteResult sqlRouteResult) {\n        GeneratedKey generatedKey = insertStatement.getGeneratedKey();\n        if (parameters.isEmpty()) {\n            sqlRouteResult.getGeneratedKeys().add(generatedKey.getValue());\n        } else if (parameters.size() == generatedKey.getIndex()) {\n            Number key = shardingRule.generateKey(insertStatement.getTables().getSingleTableName());\n            parameters.add(key);\n            setGeneratedKeys(sqlRouteResult, key);\n        } else if (-1 != generatedKey.getIndex()) {\n            Number key = (Number)parameters.get(generatedKey.getIndex());\n            if(key==null) {\n                key = shardingRule.generateKey(insertStatement.getTables().getSingleTableName());\n            }\n            setGeneratedKeys(sqlRouteResult, key);\n        }\n    }. 2.0.1\n@Component\npublic class UserTableRule extends TableRuleSharding {\n@Value(value=\"${environment.server.id}\")\nprivate long workerId = 1;\n\npublic UserTableRule() {\n    super();\n    DefaultKeyGenerator.setWorkerId(workerId);\n    this.setLogicTable(\"user\");\n    this.setActualDataNodes(\"db1.user_${0..30}\");\n    // DefaultKeyGenerator.setWorkerId(workerId);\n    // \u9009\u5e93\u89c4\u5219\n    // this.setDatabaseShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"master_id\", \"db_${master_id % 2}\");\n    // \u9009\u8868\u89c4\u5219\n    this.setTableShardingStrategyConfig(new ComplexShardingStrategyConfiguration(\"account\", UserTableShardingAlgorithm.class.getName()));\n    this.setKeyGeneratorColumnName(\"user_id\");\n    this.setKeyGeneratorClass(DefaultKeyGenerator.class.getName());\n}\n\npublic static class UserTableShardingAlgorithm implements ComplexKeysShardingAlgorithm {\n\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public Collection<String> doSharding(Collection<String> availableTargetNames, Collection<ShardingValue> shardingValues) {\n        List<Integer> indexs = new ArrayList<Integer>();\n        for (ShardingValue shardingValue : shardingValues) {\n            if (StringUtils.equals(shardingValue.getColumnName(), \"account\")) {//\u8d26\u53f7hash\u5206\u5e93\n                for (String account : ((ListShardingValue<String>) shardingValue).getValues()) {\n                    int index = HashAlgorithms.FNVHash1(account) % availableTargetNames.size();\n                    if(!indexs.contains(index)) {\n                        indexs.add(index);\n                    }\n                }\n            }\n        }\n        if (indexs.size()<0) {\n            return availableTargetNames;\n        }\n        final List<String> tables = new ArrayList<String>(availableTargetNames);\n        List<String> result = new ArrayList<String>();\n        indexs.forEach(e->{\n            result.add(tables.get(e));\n        });\n        return result;\n    }\n}\n\n}\npublic class TableRuleSharding extends TableRuleConfiguration {\n@Override\npublic TableRule build(Map<String, DataSource> dataSourceMap) {\n    TableRule tableRule = super.build(dataSourceMap);\n    List<String> actualDataNodes = new InlineExpressionParser(this.getActualDataNodes()).evaluate();\n    for (String each : actualDataNodes) {\n        DataNode dataNode = new DataNode(each);\n        DataSource dataSource =  dataSourceMap.get(dataNode.getDataSourceName());\n        this.checkTable(dataSource,this.getLogicTable(),dataNode.getTableName());\n    }\n    return tableRule;\n}\n\nprivate void checkTable(DataSource dataSource,String logicTable,String shardingTable) {\n    if(dataSource instanceof MasterSlaveDataSource) {\n        dataSource = ((MasterSlaveDataSource)dataSource).getMasterSlaveRule().getMasterDataSource();\n    }\n    Connection connection = null;\n    Statement statement = null;\n    try {\n        connection = dataSource.getConnection();\n        statement = connection.createStatement();\n        String queryTableSql = String.format(\"select TABLE_NAME from information_schema.tables WHERE TABLE_NAME = '%s'\", shardingTable);\n        ResultSet resultSet = statement.executeQuery(queryTableSql);\n        if(!resultSet.next()) {\n            String sql = String.format(\"create table %s like %s\", shardingTable,logicTable);\n            statement.execute(sql);\n        }\n    } catch (SQLException e) {\n        throw new IllegalArgumentException(\"Create Sharding Table Error:\"+logicTable, e);\n    }finally {\n        try {\n            if(statement!=null) {\n                statement.close();\n            }\n            if(connection!=null) {\n                connection.close();\n            }\n        } catch (SQLException e) {\n\n        }\n    }\n}\n\n}\npublic abstract class DBConfig {\nprivate String mapperLocation;\n\n@Resource\nprivate ApplicationContext applicationContext;\n\n@Resource\nprotected Environment env;\n\nprotected void setMapperLocation(String mapperLocation) {\n    this.mapperLocation = mapperLocation;\n}\n\nprotected String getMapperLocation(){\n    if(mapperLocation==null){\n        mapperLocation = StringUtils.removeEnd(this.getClass().getResource(\"\").toString(), \"configs/\")+\"**/*.xml\";\n    }\n    return mapperLocation;\n}\n\nprotected abstract DataSource dataSource() throws SQLException;\n\nprotected DataSource dataSource(JSONObject datas) throws SQLException {\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    Map<String,DataSource> dataSourceMapAll = new HashMap<String, DataSource>();\n    for (String dbName : datas.keySet()) {\n        Map<String, DataSource> dataSourceMap = new HashMap<String, DataSource>();\n        String masterDataSourceName = null;\n        JSONArray dbs = datas.getJSONArray(dbName);\n        for (int i = 0; i < dbs.size(); i++) {\n            String prefix = dbs.getString(i);\n            DataSource dataSource = dataSource(prefix);\n            String poolName = dbName+\"-\"+this.env.getProperty(prefix+\".poolName\", String.class);\n            if(masterDataSourceName==null) {\n                masterDataSourceName = poolName;\n            }else {\n                dataSourceMap.put(poolName, dataSource);\n            }\n            dataSourceMapAll.put(poolName, dataSource);\n        }\n        MasterSlaveRuleConfiguration masterSlaveRuleConfig = new MasterSlaveRuleConfiguration();\n        masterSlaveRuleConfig.setName(dbName);\n        masterSlaveRuleConfig.setMasterDataSourceName(masterDataSourceName);\n        if(dataSourceMap.size()>0) {\n            for (String dataName : dataSourceMap.keySet()) {\n                masterSlaveRuleConfig.getSlaveDataSourceNames().add(dataName);\n            }\n        }else {//\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u540c\u4e00\u4e2a\u5e93\n            masterSlaveRuleConfig.getSlaveDataSourceNames().add(masterDataSourceName);\n        }\n        shardingRuleConfig.getMasterSlaveRuleConfigs().add(masterSlaveRuleConfig);\n    }\n    Map<String, TableRuleConfiguration> tableRuleMap = this.applicationContext.getBeansOfType(TableRuleConfiguration.class);\n    if(tableRuleMap!=null&&tableRuleMap.size()>0) {\n        tableRuleMap.forEach((e,v)->{\n            shardingRuleConfig.getTableRuleConfigs().add(v);\n            shardingRuleConfig.getBindingTableGroups().add(v.getLogicTable());\n        });\n    }\n    Properties properties = new Properties();\n    properties.put(ShardingPropertiesConstant.SQL_SHOW.getKey(), env.getProperty(\"sql.show\", Boolean.class, false).toString());\n    return new ShardingDataSource(shardingRuleConfig.build(dataSourceMapAll), new ConcurrentHashMap<String, Object>(), properties);\n}\n\nprivate DataSource dataSource(String prefix) {\n    HikariConfig config = new HikariConfig();\n    config.setPoolName(env.getProperty(prefix+\".poolName\",String.class));\n    config.setDriverClassName(env.getProperty(prefix+\".driverClassName\",String.class));\n    config.setJdbcUrl(env.getProperty(prefix+\".jdbcUrl\",String.class));\n    config.setUsername(env.getProperty(prefix+\".username\",String.class));\n    config.setPassword(env.getProperty(prefix+\".password\",String.class));\n    config.setReadOnly(env.getProperty(prefix+\".readOnly\",Boolean.class));\n    config.setConnectionTimeout(env.getProperty(prefix+\".connectionTimeout\",Long.class));\n    config.setIdleTimeout(env.getProperty(prefix+\".idleTimeout\",Long.class));\n    config.setMaxLifetime(env.getProperty(prefix+\".maxLifetime\",Long.class));\n    config.setMaximumPoolSize(env.getProperty(prefix+\".maximumPoolSize\",Integer.class));\n    config.setMinimumIdle(env.getProperty(prefix+\".minimumIdle\",Integer.class));\n    HikariDataSource dataSource = new HikariDataSource(config);\n    return dataSource;\n}\n\nprotected DataSourceTransactionManager transactionManager(DataSource dataSource) {\n    return new DataSourceTransactionManager(dataSource);\n}\n\nprotected SqlSessionFactory sqlSessionFactory(DataSource dataSource)\n        throws Exception {\n    final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean();\n    sessionFactory.setDataSource(dataSource);\n    sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(getMapperLocation()));\n    sessionFactory.setConfiguration(this.getConfiguration());\n    PageInterceptor page = new PageInterceptor();\n    Properties properties = new Properties();\n    properties.setProperty(\"reasonable\", \"true\");\n    properties.setProperty(\"offsetAsPageNum\", \"true\");\n    properties.setProperty(\"autoRuntimeDialect\", \"true\");\n    properties.setProperty(\"supportMethodsArguments\", \"true\");\n    properties.setProperty(\"rowBoundsWithCount\", \"false\");\n    page.setProperties(properties);\n    sessionFactory.setPlugins(new Interceptor[]{page});\n    return sessionFactory.getObject();\n}\n\nprotected Configuration getConfiguration() {\n    Configuration config = new Configuration();\n    //\u4f7f\u5168\u5c40\u7684\u6620\u5c04\u5668\u542f\u7528\u6216\u7981\u7528\u7f13\u5b58\n    config.setCacheEnabled(true);\n    //\u5168\u5c40\u542f\u7528\u6216\u7981\u7528\u5ef6\u8fdf\u52a0\u8f7d\u3002\u5f53\u7981\u7528\u65f6\uff0c\u6240\u6709\u5173\u8054\u5bf9\u8c61\u90fd\u4f1a\u5373\u65f6\u52a0\u8f7d\n    config.setLazyLoadingEnabled(false);\n    //\u914d\u7f6e\u9ed8\u8ba4\u7684\u6267\u884c\u5668\u3002SIMPLE \u5c31\u662f\u666e\u901a\u7684\u6267\u884c\u5668\uff1bREUSE \u6267\u884c\u5668\u4f1a\u91cd\u7528\u9884\u5904\u7406\u8bed\u53e5\uff08prepared statements\uff09\uff1b BATCH \u6267\u884c\u5668\u5c06\u91cd\u7528\u8bed\u53e5\u5e76\u6267\u884c\u6279\u91cf\u66f4\u65b0\u3002\n    config.setDefaultExecutorType(ExecutorType.REUSE);\n    return config;\n}\n\n}. \n        insert into user (user_id, account, password,\n        salt, is_active, status, auth_key,\n        insert_time, update_time, last_login_time,\n        lock_end_time)\n        values (#{userId,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR},\n        #{password,jdbcType=VARCHAR},\n        #{salt,jdbcType=CHAR}, #{isActive,jdbcType=BIT}, #{status,jdbcType=INTEGER},\n        #{authKey,jdbcType=VARCHAR},\n        #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},\n        #{lastLoginTime,jdbcType=TIMESTAMP},\n        #{lockEndTime,jdbcType=TIMESTAMP})\n    . INFO-2017.12.22 17:11:38 CST [http-nio-9090-exec-1] - [Sharding-JDBC-SQL(59)] - Actual SQL: db1 ::: insert into user_18 (user_id, account, password,\n        salt, is_active, status, auth_key,\n        insert_time, update_time, last_login_time,\n        lock_end_time)\n        values (?, ?,\n        ?,\n        ?, ?, ?,\n        ?,\n        ?, ?,\n        ?,\n        ?) ::: [null, 123456@qq.com, string, 1d3aa11291fd4d14aa4769c292bfad63, false, 0, null, 2017-12-22T17:11:38.522+0800, 2017-12-22T17:11:38.522+0800, null, 2017-12-22T17:11:38.522+0800]\nERROR-2017.12.22 17:11:38 CST [http-nio-9090-exec-1] - [com.binance.master.utils.LogUtils(22)] - nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError updating database.  Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_id' cannot be null\nThe error may involve com.binance.account.data.user.UserMapper.insert-Inline\nThe error occurred while setting parameters\nSQL: insert into user (user_id, account, password,   salt, is_active, status, auth_key,   insert_time, update_time, last_login_time,   lock_end_time)   values (?, ?,   ?,   ?, ?, ?,   ?,   ?, ?,   ?,   ?)\nCause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_id' cannot be null org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:\nError updating database.  Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_id' cannot be null\nThe error may involve com.binance.account.data.user.UserMapper.insert-Inline\nThe error occurred while setting parameters\nSQL: insert into user (user_id, account, password,   salt, is_active, status, auth_key,   insert_time, update_time, last_login_time,   lock_end_time)   values (?, ?,   ?,   ?, ?, ?,   ?,   ?, ?,   ?,   ?)\nCause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_id' cannot be null. this.setKeyGeneratorColumnName(\"user_id\");\nthis.setKeyGeneratorClass(DefaultKeyGenerator.class.getName());\n\u4e0d\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4e3b\u952e\uff1f. @terrymanu . \u7b2c\u4e00\u6b21\u67e5\u8be2\u53ef\u4ee5\u67e5\u8be2\u5230\u7ed3\u679c\uff0c\u7b2c\u4e8c\u6b21\u51fa\u73b0\u9519\u8bef. addressBalanceList.forEach(e->{\n            this.addressBalanceMapper.selectByPrimaryKey(e.getAi(), e.getAddress());\n        });. public interface AddressBalanceMapper {\n    AddressBalance selectByPrimaryKey(@Param(\"coin\")String coin,@Param(\"address\")String address);\n}\n\n\n\n\n\n\n\n\n\n\n        node,coin, address, balance, unlocked_balance, sweepable_balance, update_time\n    \n\n        select\n        \n        from address_balance\n        where coin = #{coin,jdbcType=VARCHAR}\n        and address = #{address,jdbcType=VARCHAR}\n    . \u6211\u6d4b\u8bd5\u51fa\u95ee\u9898\u7684\u539f\u56e0\u4e86\nconfig.setDefaultExecutorType(ExecutorType.REUSE);\u8fd9\u79cd\u6a21\u5f0f\u4f1a\u62a5The error occurred while handling results\u9519\u8bef\nconfig.setDefaultExecutorType(ExecutorType.SIMPLE);\u8fd9\u79cd\u6a21\u5f0f\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u53ef\u4ee5\u6b63\u5e38\u67e5\u8be2. \u539f\u56e0\u5e94\u8be5\u662fshardingjdbc\u5bf9\u9884\u5904\u7406sql\u7684\u95ee\u9898. ",
    "hwck": "thanks. \u5f53\u6211\u914d\u7f6e retailOrderTableRuleConfig.setLogicTable(\"T22\");\u7684\u65f6\u5019\uff0c\u5c45\u7136\u67e5\u8be2\u5230\u6570\u636e\uff0c\u4f46\u662f\u6570\u636e\u5e93\u786e\u5b9e\u6ca1\u6709\u8fd9\u5f20\u8868\n. \u53d1\u73b0\u95ee\u9898\u4e86\n    String tableName = \n                SQLUtil.getOriginalValue(sqlStatement.getTables().getTableNames().contains(tableToken.getTableName()) ? tableToken.getTableName() : tableToken.getOriginalLiterals(), databaseType);\n\u9ebb\u70e6\u5e2e\u5fd9\u5c3d\u5feb\u89e3\u51b3\u4e0b\uff0c\u7136\u540e\u53d1\u7248\u3002\u8c22\u8c22\u5566\n. https://github.com/shardingjdbc/sharding-jdbc-example\n\u53ef\u4ee5\u770b\u4ed6\u4eec\u7684\u5b98\u65b9\u4f8b\u5b50\uff0c\u91cc\u9762\u6709PreciseModuloDatabaseShardingAlgorithm.java\n\u8fd9\u4e2a\u662f\u4ed6\u4eec\u7684wiki\nhttp://shardingjdbc.io/docs/01-start/quick-start/. @Frodez \u53ef\u4ee5\u554a\uff0c\u4f60\u8981\u81ea\u5df1\u6307\u5b9a\u7b97\u6cd5\u7c7b\u5c31\u53ef\u4ee5\u4e86. @terrymanu \u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u53d1\u5e03\u65b0\u7248\u672c\u554a\uff1f.  java.util.concurrent.ExecutionException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction\"\n\u786e\u5b9e\u4f1a\u62a5\u9519\uff0c\u6211service\u91cc\u9762\u6267\u884c\u4e24\u6761sql,\u4e00\u6761save, \u4e00\u6761update\u7684\u65f6\u5019\uff0c\u4f1a\u5305\u8fd9\u4e2a\u9519\u8bef. \u6279\u91cf\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6279\u91cf\u66f4\u65b0. @neo37927  \u73b0\u5728dev \u5206\u652f\u5e94\u8be5\u662f\u53ef\u4ee5\u7684\u5427\uff0c\u6211\u6ca1\u8bd5\u8fc7\uff0c\u6211\u73b0\u5728\u662f\u75282.0.0\u7248\u672c\u6682\u65f6\u6ca1\u6709\u8868\u540d\u5927\u5c0f\u5199\u7684\u95ee\u9898. ",
    "codecov-io": "Codecov Report\n\nMerging #508 into dev will decrease coverage by 0.29%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #508     +/-\n=========================================\n- Coverage   79.51%   79.22%   -0.3%   \n=========================================\n  Files         385      379      -6   \n  Lines        7351     7238    -113   \n  Branches     1174     1153     -21   \n=========================================\n- Hits         5845     5734    -111   \n- Misses       1216     1218      +2   \n+ Partials      290      286      -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...outing/strategy/inline/InlineShardingStrategy.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...re/routing/strategy/hint/HintShardingStrategy.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ng/strategy/standard/StandardShardingStrategy.java | 93.1% <\u00f8> (\u00f8) | :arrow_up: |\n| ...re/routing/strategy/none/NoneShardingStrategy.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rdingjdbc/core/constant/ConditionRelationType.java | 100% <100%> (\u00f8) | |\n| ...e/parsing/parser/context/condition/Conditions.java | 88.88% <100%> (+2.22%) | :arrow_up: |\n| ...e/routing/type/hint/DatabaseHintRoutingEngine.java | 91.66% <100%> (\u00f8) | :arrow_up: |\n| ...ting/strategy/complex/ComplexShardingStrategy.java | 56.25% <22.22%> (-43.75%) | :arrow_down: |\n| .../core/routing/type/simple/SimpleRoutingEngine.java | 84.74% <85.71%> (-0.44%) | :arrow_down: |\n| .../core/parsing/parser/clause/WhereClauseParser.java | 85.71% <90.9%> (\u00f8) | :arrow_up: |\n| ... and 57 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78820ea...f7d5a42. Read the comment docs.\n. # Codecov Report\nMerging #528 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #528   +/-\n=======================================\n  Coverage   79.36%   79.36%         \n=======================================\n  Files         379      379         \n  Lines        7290     7290         \n  Branches     1157     1157         \n=======================================\n  Hits         5786     5786         \n  Misses       1218     1218         \n  Partials      286      286\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 25efa6d...2366a20. Read the comment docs.\n. # Codecov Report\nMerging #546 into dev will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #546      +/-\n==========================================\n+ Coverage   79.47%   79.52%   +0.05%   \n==========================================\n  Files         380      380            \n  Lines        7303     7303            \n  Branches     1162     1162            \n==========================================\n+ Hits         5804     5808       +4   \n+ Misses       1211     1203       -8   \n- Partials      288      292       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ternal/state/instance/InstanceListenerManager.java | 37.93% <0%> (+3.44%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 72.41% <0%> (+3.44%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 52.17% <0%> (+4.34%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d5d7391...c1d20af. Read the comment docs.\n. # Codecov Report\nMerging #547 into dev will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #547      +/-\n=========================================\n+ Coverage   79.47%   79.5%   +0.02%   \n=========================================\n  Files         380     380            \n  Lines        7303    7303            \n  Branches     1162    1162            \n=========================================\n+ Hits         5804    5806       +2   \n+ Misses       1211    1207       -4   \n- Partials      288     290       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ternal/state/instance/InstanceListenerManager.java | 37.93% <0%> (+3.44%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 72.41% <0%> (+3.44%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d5d7391...e4f8b3c. Read the comment docs.\n. # Codecov Report\nMerging #558 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #558   +/-\n=======================================\n  Coverage   79.47%   79.47%         \n=======================================\n  Files         380      380         \n  Lines        7303     7303         \n  Branches     1162     1162         \n=======================================\n  Hits         5804     5804         \n  Misses       1211     1211         \n  Partials      288      288\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e6b044...60aa812. Read the comment docs.\n. # Codecov Report\nMerging #574 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\ndev    #574   +/-\n=====================================\n  Coverage   79.6%   79.6%         \n=====================================\n  Files        385     385         \n  Lines       7351    7351         \n  Branches    1174    1174         \n=====================================\n  Hits        5852    5852         \n- Misses      1208    1211    +3   \n+ Partials     291     288    -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...al/state/datasource/DataSourceListenerManager.java | 47.82% <0%> (-4.35%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 68.96% <0%> (-3.45%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 34.48% <0%> (-3.45%) | :arrow_down: |\n| ...java/io/shardingjdbc/core/util/DataSourceUtil.java | 73.91% <0%> (+13.04%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e2e6ee4...6662245. Read the comment docs.\n. # Codecov Report\nMerging #579 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff          @@\ndev    #579   +/-\n=====================================\n  Coverage   79.6%   79.6%         \n=====================================\n  Files        385     385         \n  Lines       7351    7351         \n  Branches    1174    1174         \n=====================================\n  Hits        5852    5852         \n- Misses      1209    1211    +2   \n+ Partials     290     288    -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 68.96% <0%> (-3.45%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 96.34% <0%> (+1.21%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b85c97f...5ab253b. Read the comment docs.\n. # Codecov Report\nMerging #583 into dev will decrease coverage by <.01%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@           Coverage Diff            @@\ndev    #583      +/-\n========================================\n- Coverage   79.6%   79.6%   -0.01%   \n========================================\n  Files        385     385            \n  Lines       7351    7353       +2   \n  Branches    1174    1175       +1   \n========================================\n+ Hits        5852    5853       +1   \n  Misses      1211    1211            \n- Partials     288     289       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ing/boot/OrchestrationSpringBootConfiguration.java | 81.81% <55.55%> (-3.19%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 35521a2...4c0b501. Read the comment docs.\n. # Codecov Report\nMerging #584 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #584   +/-\n=======================================\n  Coverage   79.64%   79.64%         \n=======================================\n  Files         385      385         \n  Lines        7353     7353         \n  Branches     1175     1175         \n=======================================\n  Hits         5856     5856         \n  Misses       1208     1208         \n  Partials      289      289\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3590b94...ae5ce06. Read the comment docs.\n. # Codecov Report\nMerging #590 into dev will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #590      +/-\n==========================================\n+ Coverage   79.58%   79.58%   +<.01%   \n==========================================\n  Files         385      385            \n  Lines        7353     7354       +1   \n  Branches     1175     1175            \n==========================================\n+ Hits         5852     5853       +1   \n  Misses       1211     1211            \n  Partials      290      290\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/core/jdbc/adapter/AbstractStatementAdapter.java | 96.82% <100%> (+0.05%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2330f26...adb8163. Read the comment docs.\n. # Codecov Report\nMerging #598 into dev will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #598      +/-\n==========================================\n- Coverage   79.68%   79.67%   -0.01%   \n==========================================\n  Files         385      385            \n  Lines        7353     7356       +3   \n  Branches     1175     1176       +1   \n==========================================\n+ Hits         5859     5861       +2   \n  Misses       1207     1207            \n- Partials      287      288       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ain/java/io/shardingjdbc/core/api/HintManager.java | 93.75% <100%> (+0.41%) | :arrow_up: |\n| ...a/io/shardingjdbc/core/hint/HintManagerHolder.java | 83.33% <100%> (+1.51%) | :arrow_up: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 95.12% <0%> (-1.22%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8bc5acf...733563c. Read the comment docs.\n. # Codecov Report\nMerging #617 into dev will decrease coverage by 0.88%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #617      +/-\n==========================================\n- Coverage   73.41%   72.53%   -0.89%   \n==========================================\n  Files         427      430       +3   \n  Lines        8019     8118      +99   \n  Branches     1257     1268      +11   \n==========================================\n+ Hits         5887     5888       +1   \n- Misses       1831     1926      +95   \n- Partials      301      304       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...io/shardingjdbc/server/codec/MySQLPacketCodec.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../java/io/shardingjdbc/core/rewrite/SQLBuilder.java | 66.66% <0%> (-27.46%) | :arrow_down: |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 93.22% <0%> (-5%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 95.12% <0%> (-1.22%) | :arrow_down: |\n| ...sing/parser/dialect/mysql/sql/MySQLShowParser.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...bc/server/packet/command/CommandPacketFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...va/io/shardingjdbc/server/constant/ColumnType.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...rdingjdbc/server/packet/command/ComQuitPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...core/parsing/lexer/dialect/mysql/MySQLKeyword.java | 100% <0%> (\u00f8) | :arrow_up: |\n| ...jdbc/core/routing/type/show/ShowRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c6d1f55...b3ae223. Read the comment docs.\n. # Codecov Report\nMerging #624 into dev will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #624      +/-\n==========================================\n+ Coverage   72.52%   72.53%   +0.01%   \n==========================================\n  Files         432      432            \n  Lines        8135     8135            \n  Branches     1287     1287            \n==========================================\n+ Hits         5900     5901       +1   \n  Misses       1925     1925            \n+ Partials      310      309       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 96.34% <0%> (+1.21%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 76ebe50...491b276. Read the comment docs.\n. # Codecov Report\nMerging #630 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #630   +/-\n=======================================\n  Coverage   72.53%   72.53%         \n=======================================\n  Files         432      432         \n  Lines        8135     8135         \n  Branches     1287     1287         \n=======================================\n  Hits         5901     5901         \n  Misses       1925     1925         \n  Partials      309      309\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6ffcc04...de1dff4. Read the comment docs.\n. # Codecov Report\nMerging #636 into dev will decrease coverage by 0.1%.\nThe diff coverage is 17.64%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #636      +/-\n==========================================\n- Coverage   72.53%   72.43%   -0.11%   \n==========================================\n  Files         432      432            \n  Lines        8135     8148      +13   \n  Branches     1287     1289       +2   \n==========================================\n+ Hits         5901     5902       +1   \n- Misses       1925     1936      +11   \n- Partials      309      310       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/jdbc/core/datasource/ShardingDataSource.java | 19.23% <0%> (-0.77%) | :arrow_down: |\n| .../io/shardingjdbc/core/executor/ExecutorEngine.java | 83.51% <20%> (-11.43%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fe6edd8...7cded67. Read the comment docs.\n. # Codecov Report\nMerging #637 into dev will increase coverage by 0.13%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #637      +/-\n==========================================\n+ Coverage   72.44%   72.57%   +0.13%   \n==========================================\n  Files         432      432            \n  Lines        8147     8142       -5   \n  Branches     1289     1287       -2   \n==========================================\n+ Hits         5902     5909       +7   \n+ Misses       1935     1921      -14   \n- Partials      310      312       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../io/shardingjdbc/core/executor/ExecutorEngine.java | 94.11% <66.66%> (+9.67%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 37.93% <0%> (+3.44%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 72.41% <0%> (+3.44%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 52.17% <0%> (+4.34%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed56daa...8d19819. Read the comment docs.\n. # Codecov Report\nMerging #642 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #642   +/-\n=======================================\n  Coverage   79.64%   79.64%         \n=======================================\n  Files         388      388         \n  Lines        7365     7365         \n  Branches     1177     1177         \n=======================================\n  Hits         5866     5866         \n  Misses       1210     1210         \n  Partials      289      289\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5d014d7...778a75c. Read the comment docs.\n. # Codecov Report\nMerging #649 into dev will decrease coverage by 0.07%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #649      +/-\n==========================================\n- Coverage   72.67%   72.59%   -0.08%   \n==========================================\n  Files         428      428            \n  Lines        8122     8124       +2   \n  Branches     1290     1292       +2   \n==========================================\n- Hits         5903     5898       -5   \n- Misses       1904     1912       +8   \n+ Partials      315      314       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...sing/parser/context/selectitem/StarSelectItem.java | 25% <0%> (-8.34%) | :arrow_down: |\n| ...ng/parser/context/selectitem/CommonSelectItem.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...t/sqlserver/clause/SQLServerWhereClauseParser.java | 88.88% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 47.82% <0%> (-4.35%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 68.96% <0%> (-3.45%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 34.48% <0%> (-3.45%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cb17dc3...4ae5879. Read the comment docs.\n. # Codecov Report\nMerging #656 into dev will decrease coverage by 0.11%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #656      +/-\n==========================================\n- Coverage   72.68%   72.57%   -0.12%   \n==========================================\n  Files         429      429            \n  Lines        8138     8149      +11   \n  Branches     1294     1296       +2   \n==========================================\n- Hits         5915     5914       -1   \n- Misses       1907     1920      +13   \n+ Partials      316      315       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ort/mysql/packet/command/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 74.07% <0%> (-3.71%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 624dbad...2992373. Read the comment docs.\n. # Codecov Report\nMerging #662 into dev will decrease coverage by 0.33%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #662      +/-\n=========================================\n- Coverage   67.14%   66.8%   -0.34%   \n=========================================\n  Files         435     440       +5   \n  Lines        8226    8267      +41   \n  Branches     1307    1311       +4   \n=========================================\n  Hits         5523    5523            \n- Misses       2400    2441      +41   \n  Partials      303     303\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...shardingjdbc/transaction/job/QuartzJobFactory.java | 0% <0%> (\u00f8) | |\n| ...ngjdbc/transaction/job/QuartzJobConfiguration.java | 0% <0%> (\u00f8) | |\n| ...io/shardingjdbc/transaction/job/QuartzJobMain.java | 0% <0%> (\u00f8) | |\n| ...ava/io/shardingjdbc/transaction/job/QuartzJob.java | 0% <0%> (\u00f8) | |\n| ...n/config/AsyncSoftTransactionJobConfiguration.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9781037...f925079. Read the comment docs.\n. # Codecov Report\nMerging #663 into dev will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #663      +/-\n==========================================\n+ Coverage   67.14%   67.16%   +0.02%   \n==========================================\n  Files         435      435            \n  Lines        8226     8226            \n  Branches     1307     1307            \n==========================================\n+ Hits         5523     5525       +2   \n+ Misses       2400     2397       -3   \n- Partials      303      304       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 77.77% <0%> (+3.7%) | :arrow_up: |\n| .../main/java/io/shardingjdbc/core/rule/DataNode.java | 90% <0%> (+10%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9781037...5d82ba4. Read the comment docs.\n. # Codecov Report\nMerging #667 into dev will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #667   +/-\n=======================================\n  Coverage   66.92%   66.92%         \n=======================================\n  Files         439      439         \n  Lines        8254     8254         \n  Branches     1308     1308         \n=======================================\n  Hits         5524     5524         \n  Misses       2427     2427         \n  Partials      303      303\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ansaction/job/BASETransactionJobConfiguration.java | 0% <\u00f8> (\u00f8) | |\n| ...n/config/AsyncSoftTransactionJobConfiguration.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ardingjdbc/transaction/job/BASETransactionJob.java | 0% <0%> (\u00f8) | |\n| ...c/transaction/job/BASETransactionJobBootStrap.java | 0% <0%> (\u00f8) | |\n| ...dbc/transaction/job/BASETransactionJobFactory.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 883996f...d47a936. Read the comment docs.\n. # Codecov Report\nMerging #668 into dev will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #668      +/-\n==========================================\n+ Coverage   66.92%   66.99%   +0.07%   \n==========================================\n  Files         439      439            \n  Lines        8254     8254            \n  Branches     1308     1308            \n==========================================\n+ Hits         5524     5530       +6   \n+ Misses       2427     2421       -6   \n  Partials      303      303\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...main/java/io/shardingjdbc/core/rule/TableRule.java | 93.47% <0%> (+13.04%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2558855...3e60e05. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@0629fcd). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #670   +/-\n======================================\n  Coverage       ?   66.98%         \n======================================\n  Files          ?      439         \n  Lines          ?     8258         \n  Branches       ?     1310         \n======================================\n  Hits           ?     5532         \n  Misses         ?     2421         \n  Partials       ?      305\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0629fcd...6bbc37a. Read the comment docs.\n. # Codecov Report\nMerging #678 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #678   +/-\n=======================================\n  Coverage   67.58%   67.58%         \n=======================================\n  Files         442      442         \n  Lines        8342     8342         \n  Branches     1328     1328         \n=======================================\n  Hits         5638     5638         \n  Misses       2396     2396         \n  Partials      308      308\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0ca5b55...02db6be. Read the comment docs.\n. # Codecov Report\nMerging #679 into dev will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #679      +/-\n==========================================\n- Coverage   67.67%   67.65%   -0.03%   \n==========================================\n  Files         438      438            \n  Lines        8357     8357            \n  Branches     1335     1335            \n==========================================\n- Hits         5656     5654       -2   \n- Misses       2388     2394       +6   \n+ Partials      313      309       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...tracing/config/OpentracingConfigurationParser.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ngjdbc/opentracing/config/ConfigurationLoader.java | 81.81% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 52.38% <0%> (-4.77%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+9.09%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 04cf4ff...6ce50ca. Read the comment docs.\n. # Codecov Report\nMerging #680 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #680   +/-\n=======================================\n  Coverage   67.63%   67.63%         \n=======================================\n  Files         438      438         \n  Lines        8357     8357         \n  Branches     1335     1335         \n=======================================\n  Hits         5652     5652         \n  Misses       2396     2396         \n  Partials      309      309\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...shardingjdbc/opentracing/ExecuteEventListener.java | 91.8% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e6dfc5...bb864d5. Read the comment docs.\n. # Codecov Report\nMerging #683 into dev will increase coverage by 0.21%.\nThe diff coverage is 76.92%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #683      +/-\n==========================================\n+ Coverage   68.59%   68.81%   +0.21%   \n==========================================\n  Files         446      445       -1   \n  Lines        8525     8517       -8   \n  Branches     1366     1369       +3   \n==========================================\n+ Hits         5848     5861      +13   \n+ Misses       2365     2340      -25   \n- Partials      312      316       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/java/io/shardingjdbc/core/rule/ShardingRule.java | 94.39% <100%> (+0.05%) | :arrow_up: |\n| ...ing/parser/clause/TableReferencesClauseParser.java | 80.88% <75%> (+0.52%) | :arrow_up: |\n| ...ava/io/shardingjdbc/proxy/constant/ColumnType.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...rdingjdbc/spring/boot/SpringBootConfiguration.java | 83.33% <0%> (\u00f8) | :arrow_up: |\n| .../shardingjdbc/proxy/backend/DataSourceManager.java | | |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3bfb1f8...e506029. Read the comment docs.\n. # Codecov Report\nMerging #684 into dev will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #684      +/-\n==========================================\n+ Coverage   67.38%   67.41%   +0.02%   \n==========================================\n  Files         437      437            \n  Lines        8362     8362            \n  Branches     1337     1337            \n==========================================\n+ Hits         5635     5637       +2   \n+ Misses       2418     2416       -2   \n  Partials      309      309\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/core/merger/dql/common/MemoryMergedResult.java | 73.68% <0%> (+5.26%) | :arrow_up: |\n| .../core/merger/dql/common/DecoratorMergedResult.java | 100% <0%> (+14.28%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c11bb0e...cf536d6. Read the comment docs.\n. # Codecov Report\nMerging #685 into dev will increase coverage by 0.22%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #685      +/-\n==========================================\n+ Coverage   67.27%   67.49%   +0.22%   \n==========================================\n  Files         438      438            \n  Lines        8378     8378            \n  Branches     1340     1340            \n==========================================\n+ Hits         5636     5655      +19   \n+ Misses       2432     2413      -19   \n  Partials      310      310\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/java/io/shardingjdbc/core/rule/ShardingRule.java | 66.03% <0%> (+6.6%) | :arrow_up: |\n| .../java/io/shardingjdbc/core/rewrite/SQLBuilder.java | 91.66% <0%> (+33.33%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 37a4d78...2a20af4. Read the comment docs.\n. # Codecov Report\nMerging #687 into dev will increase coverage by 1.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #687      +/-\n==========================================\n+ Coverage   67.44%   68.56%   +1.11%   \n==========================================\n  Files         441      441            \n  Lines        8413     8413            \n  Branches     1347     1347            \n==========================================\n+ Hits         5674     5768      +94   \n+ Misses       2426     2333      -93   \n+ Partials      313      312       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ingjdbc/core/parsing/parser/context/OrderItem.java | 92.3% <0%> (+2.56%) | :arrow_up: |\n| ...dbc/core/merger/dql/common/StreamMergedResult.java | 100% <0%> (+4.54%) | :arrow_up: |\n| ...o/shardingjdbc/core/merger/dql/DQLMergeEngine.java | 89.28% <0%> (+7.14%) | :arrow_up: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 36.36% <0%> (+36.36%) | :arrow_up: |\n| ...dql/pagination/RowNumberDecoratorMergedResult.java | 84.21% <0%> (+47.36%) | :arrow_up: |\n| ...gination/TopAndRowNumberDecoratorMergedResult.java | 94.11% <0%> (+94.11%) | :arrow_up: |\n| ...c/core/merger/dal/show/ShowTablesMergedResult.java | 96.42% <0%> (+96.42%) | :arrow_up: |\n| ...bc/core/merger/dal/show/ShowOtherMergedResult.java | 100% <0%> (+100%) | :arrow_up: |\n| ...o/shardingjdbc/core/merger/dal/DALMergeEngine.java | 100% <0%> (+100%) | :arrow_up: |\n| ...ore/merger/dal/show/ShowDatabasesMergedResult.java | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 699b06b...a084e43. Read the comment docs.\n. # Codecov Report\nMerging #688 into dev will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #688      +/-\n==========================================\n+ Coverage   67.45%   67.47%   +0.01%   \n==========================================\n  Files         441      441            \n  Lines        8417     8417            \n  Branches     1348     1348            \n==========================================\n+ Hits         5678     5679       +1   \n+ Misses       2426     2424       -2   \n- Partials      313      314       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c66e08c...7c97362. Read the comment docs.\n. # Codecov Report\nMerging #689 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #689   +/-\n=======================================\n  Coverage   68.57%   68.57%         \n=======================================\n  Files         441      441         \n  Lines        8417     8417         \n  Branches     1348     1348         \n=======================================\n  Hits         5772     5772         \n  Misses       2333     2333         \n  Partials      312      312\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5743843...5adf3c6. Read the comment docs.\n. # Codecov Report\nMerging #691 into dev will increase coverage by 0.31%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #691      +/-\n==========================================\n+ Coverage   68.58%   68.89%   +0.31%   \n==========================================\n  Files         441      441            \n  Lines        8417     8424       +7   \n  Branches     1348     1352       +4   \n==========================================\n+ Hits         5773     5804      +31   \n+ Misses       2333     2309      -24   \n  Partials      311      311\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../shardingjdbc/core/keygen/KeyGeneratorFactory.java | 90% <88.88%> (-10%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 100% <0%> (+63.63%) | :arrow_up: |\n| ...o/shardingjdbc/core/merger/MergeEngineFactory.java | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 971a16e...63e3cd2. Read the comment docs.\n. # Codecov Report\nMerging #692 into dev will increase coverage by 0.19%.\nThe diff coverage is 43.33%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #692      +/-\n==========================================\n+ Coverage   68.58%   68.78%   +0.19%   \n==========================================\n  Files         441      442       +1   \n  Lines        8417     8444      +27   \n  Branches     1348     1351       +3   \n==========================================\n+ Hits         5773     5808      +35   \n+ Misses       2333     2324       -9   \n- Partials      311      312       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rdingjdbc/spring/boot/SpringBootConfiguration.java | 83.33% <100%> (\u00f8) | :arrow_up: |\n| ...io/shardingjdbc/spring/boot/util/PropertyUtil.java | 37.03% <37.03%> (\u00f8) | |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 100% <0%> (+63.63%) | :arrow_up: |\n| ...o/shardingjdbc/core/merger/MergeEngineFactory.java | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a95cd3d...a2860cf. Read the comment docs.\n. # Codecov Report\nMerging #694 into dev will increase coverage by 0.33%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #694      +/-\n==========================================\n+ Coverage   68.58%   68.92%   +0.33%   \n==========================================\n  Files         441      441            \n  Lines        8417     8417            \n  Branches     1348     1348            \n==========================================\n+ Hits         5773     5801      +28   \n+ Misses       2333     2303      -30   \n- Partials      311      313       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 100% <0%> (+63.63%) | :arrow_up: |\n| ...o/shardingjdbc/core/merger/MergeEngineFactory.java | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 971a16e...19d0002. Read the comment docs.\n. # Codecov Report\nMerging #695 into dev will increase coverage by 0.58%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #695      +/-\n==========================================\n+ Coverage   68.58%   69.17%   +0.58%   \n==========================================\n  Files         441      443       +2   \n  Lines        8417     8454      +37   \n  Branches     1348     1351       +3   \n==========================================\n+ Hits         5773     5848      +75   \n+ Misses       2333     2294      -39   \n- Partials      311      312       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...rdingjdbc/spring/boot/SpringBootConfiguration.java | 83.33% <0%> (\u00f8) | :arrow_up: |\n| ...transport/common/handler/DatabaseProxyHandler.java | | |\n| ...oxy/transport/mysql/handler/MySQLProxyHandler.java | | |\n| ...io/shardingjdbc/proxy/transport/ShardingProxy.java | | |\n| ...rt/common/handler/DatabaseProxyHandlerFactory.java | | |\n| ...proxy/frontend/common/handler/FrontendHandler.java | 0% <0%> (\u00f8) | |\n| ...io/shardingjdbc/spring/boot/util/PropertyUtil.java | 37.03% <0%> (\u00f8) | |\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | |\n| ...rontend/common/handler/FrontendHandlerFactory.java | 0% <0%> (\u00f8) | |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a95cd3d...18a3c40. Read the comment docs.\n. # Codecov Report\nMerging #697 into dev will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #697      +/-\n=========================================\n- Coverage   68.73%   68.7%   -0.04%   \n=========================================\n  Files         443     443            \n  Lines        8454    8454            \n  Branches     1351    1351            \n=========================================\n- Hits         5811    5808       -3   \n- Misses       2328    2334       +6   \n+ Partials      315     312       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...io/shardingjdbc/spring/boot/util/PropertyUtil.java | 37.03% <0%> (\u00f8) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 052e9ed...5e21107. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@a865449). Click here to learn what that means.\nThe diff coverage is 54.63%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #698   +/-\n======================================\n  Coverage       ?   68.52%         \n======================================\n  Files          ?      448         \n  Lines          ?     8549         \n  Branches       ?     1377         \n======================================\n  Hits           ?     5858         \n  Misses         ?     2369         \n  Partials       ?      322\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/orchestration/internal/OrchestrationFacade.java | 76% <\u00f8> (\u00f8) | |\n| ...n/internal/OrchestrationMasterSlaveDataSource.java | 100% <\u00f8> (\u00f8) | |\n| ...estration/yaml/YamlOrchestrationConfiguration.java | 0% <0%> (\u00f8) | |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 80% <0%> (\u00f8) | |\n| ...on/spring/datasource/SpringShardingDataSource.java | 0% <0%> (\u00f8) | |\n| ...ser/AbstractOrchestrationBeanDefinitionParser.java | 100% <100%> (\u00f8) | |\n| ...tion/internal/OrchestrationShardingDataSource.java | 100% <100%> (\u00f8) | |\n| ...on/api/OrchestrationShardingDataSourceFactory.java | 57.44% <26.31%> (\u00f8) | |\n| ...api/OrchestrationMasterSlaveDataSourceFactory.java | 41.93% <26.31%> (\u00f8) | |\n| ...ing/boot/OrchestrationSpringBootConfiguration.java | 76% <66.66%> (\u00f8) | |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a865449...8d1f1f0. Read the comment docs.\n. # Codecov Report\nMerging #699 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #699      +/-\n==========================================\n- Coverage   68.22%   68.21%   -0.02%   \n==========================================\n  Files         445      445            \n  Lines        8589     8589            \n  Branches     1380     1380            \n==========================================\n- Hits         5860     5859       -1   \n  Misses       2416     2416            \n- Partials      313      314       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ing/parser/clause/TableReferencesClauseParser.java | 80.88% <\u00f8> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 132d002...a99cfc5. Read the comment docs.\n. # Codecov Report\nMerging #703 into dev will increase coverage by 0.06%.\nThe diff coverage is 82.92%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #703      +/-\n=========================================\n+ Coverage   67.9%   67.96%   +0.06%   \n=========================================\n  Files        452      454       +2   \n  Lines       8653     8698      +45   \n  Branches    1399     1408       +9   \n=========================================\n+ Hits        5876     5912      +36   \n- Misses      2454     2456       +2   \n- Partials     323      330       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/parsing/parser/context/condition/Conditions.java | 90.9% <100%> (+6.29%) | :arrow_up: |\n| ...parsing/parser/context/condition/OrConditions.java | 78.94% <78.94%> (\u00f8) | |\n| ...arsing/parser/context/condition/AndConditions.java | 82.35% <82.35%> (\u00f8) | |\n| .../core/parsing/parser/context/condition/Column.java | 12.5% <0%> (-12.5%) | :arrow_down: |\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 62.5% <0%> (-12.5%) | :arrow_down: |\n| ...io/shardingjdbc/core/parsing/SQLParsingEngine.java | 66.66% <0%> (\u00f8) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update edde31d...5d14141. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@72fb0c0). Click here to learn what that means.\nThe diff coverage is 50%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #704   +/-\n======================================\n  Coverage       ?   67.93%         \n======================================\n  Files          ?      454         \n  Lines          ?     8696         \n  Branches       ?     1408         \n======================================\n  Hits           ?     5908         \n  Misses         ?     2462         \n  Partials       ?      326\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arsing/parser/context/condition/AndConditions.java | 82.35% <\u00f8> (\u00f8) | |\n| ...parsing/parser/context/condition/OrConditions.java | 82.35% <0%> (\u00f8) | |\n| ...e/parsing/parser/context/condition/Conditions.java | 90.9% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 72fb0c0...f84be19. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@72fb0c0). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #705   +/-\n======================================\n  Coverage       ?   68.19%         \n======================================\n  Files          ?      454         \n  Lines          ?     8698         \n  Branches       ?     1408         \n======================================\n  Hits           ?     5932         \n  Misses         ?     2441         \n  Partials       ?      325\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 72fb0c0...d9e9b58. Read the comment docs.\n. # Codecov Report\nMerging #706 into dev will decrease coverage by 0.07%.\nThe diff coverage is 43.33%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #706      +/-\n=========================================\n- Coverage   68.18%   68.1%   -0.08%   \n=========================================\n  Files         454     455       +1   \n  Lines        8696    8723      +27   \n  Branches     1408    1411       +3   \n=========================================\n+ Hits         5929    5941      +12   \n- Misses       2443    2456      +13   \n- Partials      324     326       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ing/boot/OrchestrationSpringBootConfiguration.java | 76% <100%> (\u00f8) | :arrow_up: |\n| ...c/orchestration/spring/boot/util/PropertyUtil.java | 37.03% <37.03%> (\u00f8) | |\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 75% <0%> (+12.5%) | :arrow_up: |\n| .../OrchestrationMasterSlaveDataSourceFacoryBean.java | 75% <0%> (+12.5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1630df1...c52f450. Read the comment docs.\n. # Codecov Report\nMerging #708 into dev will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #708      +/-\n==========================================\n- Coverage   68.14%   68.13%   -0.02%   \n==========================================\n  Files         455      455            \n  Lines        8723     8723            \n  Branches     1411     1411            \n==========================================\n- Hits         5944     5943       -1   \n- Misses       2449     2451       +2   \n+ Partials      330      329       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...io/shardingjdbc/spring/boot/util/PropertyUtil.java | 37.03% <100%> (\u00f8) | :arrow_up: |\n| ...c/orchestration/spring/boot/util/PropertyUtil.java | 37.03% <100%> (\u00f8) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8eaa43f...198ee46. Read the comment docs.\n. # Codecov Report\nMerging #713 into dev will not change coverage.\nThe diff coverage is 91.66%.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #713   +/-\n=======================================\n  Coverage   68.16%   68.16%         \n=======================================\n  Files         457      457         \n  Lines        8740     8740         \n  Branches     1415     1415         \n=======================================\n  Hits         5958     5958         \n  Misses       2460     2460         \n  Partials      322      322\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...parsing/parser/context/condition/AndCondition.java | 82.35% <\u00f8> (\u00f8) | |\n| ...e/parsing/parser/context/condition/Conditions.java | 90.9% <100%> (\u00f8) | :arrow_up: |\n| .../parsing/parser/context/condition/OrCondition.java | 82.35% <87.5%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0028262...fa377e7. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@84f0d43). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #714   +/-\n======================================\n  Coverage       ?   68.25%         \n======================================\n  Files          ?      455         \n  Lines          ?     8727         \n  Branches       ?     1415         \n======================================\n  Hits           ?     5957         \n  Misses         ?     2448         \n  Partials       ?      322\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/parsing/parser/clause/WhereClauseParser.java | 92.74% <100%> (\u00f8) | |\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 92.59% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84f0d43...936c2dc. Read the comment docs.\n. # Codecov Report\nMerging #715 into dev will increase coverage by <.01%.\nThe diff coverage is 16.66%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #715      +/-\n==========================================\n+ Coverage   68.16%   68.17%   +<.01%   \n==========================================\n  Files         457      457            \n  Lines        8740     8744       +4   \n  Branches     1415     1417       +2   \n==========================================\n+ Hits         5958     5961       +3   \n+ Misses       2460     2455       -5   \n- Partials      322      328       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...outing/strategy/inline/InlineShardingStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...shardingjdbc/core/util/InlineExpressionParser.java | 88.23% <25%> (-4.08%) | :arrow_down: |\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 62.5% <0%> (-12.5%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0028262...65c8f62. Read the comment docs.\n. # Codecov Report\nMerging #716 into dev will decrease coverage by 1.89%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #716     +/-\n=========================================\n- Coverage   68.16%   66.27%   -1.9%   \n=========================================\n  Files         457      462      +5   \n  Lines        8740     8990    +250   \n  Branches     1415     1464     +49   \n=========================================\n  Hits         5958     5958           \n- Misses       2460     2708    +248   \n- Partials      322      324      +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../statement/execute/PreparedStatementParameter.java | 0% <0%> (\u00f8) | |\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...t/command/statement/PreparedStatementRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../mysql/MySQLPacketStatementExecuteQueryResult.java | 0% <0%> (\u00f8) | |\n| ...nd/statement/execute/BinaryResultSetRowPacket.java | 0% <0%> (\u00f8) | |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | |\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | |\n| ...ort/mysql/packet/command/CommandPacketFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...mand/statement/prepare/ComStmtPrepareOKPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0028262...6b1d383. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@5bb8e2e). Click here to learn what that means.\nThe diff coverage is 9.58%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #718   +/-\n======================================\n  Coverage       ?   65.54%         \n======================================\n  Files          ?      463         \n  Lines          ?     9104         \n  Branches       ?     1497         \n======================================\n  Hits           ?     5967         \n  Misses         ?     2808         \n  Partials       ?      329\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...jdbc/core/statement/ShardingPreparedStatement.java | 93.38% <\u00f8> (\u00f8) | |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 95.27% <\u00f8> (\u00f8) | |\n| ...e/parsing/parser/context/condition/Conditions.java | 90.9% <\u00f8> (\u00f8) | |\n| ...a/io/shardingjdbc/core/routing/SQLRouteResult.java | 100% <\u00f8> (\u00f8) | |\n| ...bc/core/jdbc/core/statement/ShardingStatement.java | 89.36% <\u00f8> (\u00f8) | |\n| ...ardingjdbc/core/routing/sharding/GeneratedKey.java | 28.57% <\u00f8> (\u00f8) | |\n| ...re/parsing/parser/context/condition/Condition.java | 82.92% <\u00f8> (\u00f8) | |\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | |\n| ...n/java/io/shardingjdbc/core/rule/ShardingRule.java | 89.38% <0%> (\u00f8) | |\n| ...ore/routing/type/complex/ComplexRoutingEngine.java | 0% <0%> (\u00f8) | |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5bb8e2e...0b4baa0. Read the comment docs.\n. # Codecov Report\nMerging #721 into dev will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #721      +/-\n==========================================\n- Coverage   65.56%   65.54%   -0.03%   \n==========================================\n  Files         463      463            \n  Lines        9104     9104            \n  Branches     1497     1496       -1   \n==========================================\n- Hits         5969     5967       -2   \n- Misses       2804     2808       +4   \n+ Partials      331      329       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/command/statement/PreparedStatementRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...mand/statement/prepare/ComStmtPrepareOKPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../OrchestrationMasterSlaveDataSourceFacoryBean.java | 62.5% <0%> (-12.5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 75% <0%> (+12.5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e3868e...197334d. Read the comment docs.\n. # Codecov Report\nMerging #722 into dev will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #722      +/-\n=========================================\n+ Coverage   65.5%   65.55%   +0.05%   \n=========================================\n  Files        463      463            \n  Lines       9096     9096            \n  Branches    1496     1496            \n=========================================\n+ Hits        5958     5963       +5   \n+ Misses      2810     2806       -4   \n+ Partials     328      327       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 62.5% <0%> (-12.5%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...shardingjdbc/core/util/InlineExpressionParser.java | 94.11% <0%> (+5.88%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29889e0...c7054c1. Read the comment docs.\n. # Codecov Report\nMerging #723 into dev will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #723      +/-\n==========================================\n+ Coverage   65.55%   65.56%   +<.01%   \n==========================================\n  Files         463      464       +1   \n  Lines        9096     9100       +4   \n  Branches     1496     1495       -1   \n==========================================\n+ Hits         5963     5966       +3   \n+ Misses       2808     2805       -3   \n- Partials      325      329       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/command/statement/PreparedStatementRegistry.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../statement/execute/PreparedStatementParameter.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...et/command/statement/close/ComStmtClosePacket.java | 0% <0%> (\u00f8) | |\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ort/mysql/packet/command/CommandPacketFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nd/statement/execute/BinaryResultSetRowPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../OrchestrationMasterSlaveDataSourceFacoryBean.java | 62.5% <0%> (-12.5%) | :arrow_down: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6062000...09b667c. Read the comment docs.\n. # Codecov Report\nMerging #725 into dev will decrease coverage by 0.19%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #725     +/-\n=========================================\n- Coverage   65.51%   65.32%   -0.2%   \n=========================================\n  Files         464      466      +2   \n  Lines        9100     9130     +30   \n  Branches     1495     1496      +1   \n=========================================\n+ Hits         5962     5964      +2   \n- Misses       2813     2842     +29   \n+ Partials      325      324      -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...c/proxy/frontend/spi/netty/ShardingNettyProxy.java | 0% <0%> (\u00f8) | |\n| ...dbc/proxy/frontend/spi/mina/ShardingMinaProxy.java | 0% <0%> (\u00f8) | |\n| ...src/main/java/io/shardingjdbc/proxy/Bootstrap.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntend/spi/netty/NettyServerHandlerInitializer.java | 0% <0%> (\u00f8) | |\n| ...rce/OrchestrationShardingDataSourceFacoryBean.java | 75% <0%> (+12.5%) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+20%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29b864b...5ec80a9. Read the comment docs.\n. # Codecov Report\nMerging #727 into dev will decrease coverage by <.01%.\nThe diff coverage is 20.91%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #727      +/-\n=========================================\n- Coverage   65.51%   65.5%   -0.01%   \n=========================================\n  Files         464     465       +1   \n  Lines        9100    9101       +1   \n  Branches     1495    1493       -2   \n=========================================\n  Hits         5962    5962            \n- Misses       2813    2815       +2   \n+ Partials      325     324       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ardingjdbc/core/routing/sharding/GeneratedKey.java | 28.57% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/parsing/parser/context/condition/Conditions.java | 90.9% <\u00f8> (\u00f8) | :arrow_up: |\n| ...re/parsing/parser/context/condition/Condition.java | 82.92% <\u00f8> (\u00f8) | :arrow_up: |\n| .../shardingjdbc/core/routing/type/RoutingResult.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 90.29% <0%> (-4.98%) | :arrow_down: |\n| ...ore/routing/type/complex/ComplexRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...parsing/parser/context/condition/AndCondition.java | 85.71% <100%> (+3.36%) | :arrow_up: |\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 92.59% <100%> (\u00f8) | :arrow_up: |\n| ...bc/core/jdbc/core/statement/ShardingStatement.java | 89.36% <100%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29b864b...7928598. Read the comment docs.\n. # Codecov Report\nMerging #728 into dev will decrease coverage by 0.13%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #728      +/-\n==========================================\n- Coverage   65.51%   65.38%   -0.14%   \n==========================================\n  Files         464      466       +2   \n  Lines        9100     9117      +17   \n  Branches     1495     1497       +2   \n==========================================\n- Hits         5962     5961       -1   \n- Misses       2813     2831      +18   \n  Partials      325      325\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...bc/proxy/backend/mysql/MySQLPacketQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...et/command/statement/close/ComStmtClosePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nd/statement/execute/BinaryResultSetRowPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...mysql/packet/command/UnsupportedCommandPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../mysql/packet/command/text/quit/ComQuitPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...l/packet/command/statement/execute/NullBitmap.java | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29b864b...08e906e. Read the comment docs.\n. # Codecov Report\nMerging #729 into dev will increase coverage by 0.82%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #729      +/-\n==========================================\n+ Coverage   65.49%   66.31%   +0.82%   \n==========================================\n  Files         467      467            \n  Lines        9092     9097       +5   \n  Branches     1488     1489       +1   \n==========================================\n+ Hits         5955     6033      +78   \n+ Misses       2812     2737      -75   \n- Partials      325      327       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...io/shardingjdbc/core/optimizer/OptimizeEngine.java | 93.44% <100%> (+91.65%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| .../core/parsing/parser/context/condition/Column.java | 25% <0%> (+12.5%) | :arrow_up: |\n| ...arser/context/condition/GeneratedKeyCondition.java | 87.5% <0%> (+25%) | :arrow_up: |\n| ...parsing/parser/context/condition/AndCondition.java | 93.75% <0%> (+43.75%) | :arrow_up: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ec697d0...84b0671. Read the comment docs.\n. # Codecov Report\nMerging #730 into dev will decrease coverage by 0.22%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #730      +/-\n==========================================\n- Coverage   66.28%   66.06%   -0.23%   \n==========================================\n  Files         470      471       +1   \n  Lines        9101     9130      +29   \n  Branches     1494     1495       +1   \n==========================================\n- Hits         6033     6032       -1   \n- Misses       2738     2768      +30   \n  Partials      330      330\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../proxy/frontend/common/FrontendHandlerFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/frontend/netty/ServerHandlerInitializer.java | 0% <0%> (\u00f8) | |\n| .../io/shardingjdbc/proxy/frontend/ShardingProxy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0786562...8399ed9. Read the comment docs.\n. # Codecov Report\nMerging #733 into dev will decrease coverage by 0.25%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #733      +/-\n==========================================\n- Coverage   66.28%   66.03%   -0.26%   \n==========================================\n  Files         470      471       +1   \n  Lines        9101     9129      +28   \n  Branches     1494     1500       +6   \n==========================================\n- Hits         6033     6028       -5   \n- Misses       2738     2775      +37   \n+ Partials      330      326       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../statement/execute/PreparedStatementParameter.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...t/command/statement/PreparedStatementRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ansport/mysql/constant/NewParametersBoundFlag.java | 0% <0%> (\u00f8) | |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0786562...92aa42b. Read the comment docs.\n. # Codecov Report\nMerging #736 into dev will decrease coverage by 0.36%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #736      +/-\n==========================================\n- Coverage   66.03%   65.66%   -0.37%   \n==========================================\n  Files         471      477       +6   \n  Lines        9130     9186      +56   \n  Branches     1495     1507      +12   \n==========================================\n+ Hits         6029     6032       +3   \n- Misses       2775     2824      +49   \n- Partials      326      330       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...jdbc/core/jdbc/metadata/entity/ColumnMetaData.java | 0% <0%> (\u00f8) | |\n| ...gjdbc/core/jdbc/metadata/entity/TableMetaData.java | 0% <0%> (\u00f8) | |\n| ...dbc/metadata/handler/AbstractTableMetaHandler.java | 0% <0%> (\u00f8) | |\n| ...e/jdbc/metadata/handler/MySQLTableMetaHandler.java | 0% <0%> (\u00f8) | |\n| ...rdingjdbc/core/jdbc/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | |\n| ...jdbc/metadata/handler/TableMetaHandlerFactory.java | 0% <0%> (\u00f8) | |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...proxy/frontend/netty/ServerHandlerInitializer.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../proxy/frontend/common/FrontendHandlerFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../io/shardingjdbc/proxy/frontend/ShardingProxy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1a9c1b2...8439a16. Read the comment docs.\n. # Codecov Report\nMerging #737 into dev will increase coverage by 0.32%.\nThe diff coverage is 78.26%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #737      +/-\n=========================================\n+ Coverage   65.38%   65.7%   +0.32%   \n=========================================\n  Files         478     478            \n  Lines        9218    9261      +43   \n  Branches     1513    1527      +14   \n=========================================\n+ Hits         6027    6085      +58   \n+ Misses       2865    2847      -18   \n- Partials      326     329       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../parsing/parser/context/condition/OrCondition.java | 89.47% <100%> (+11.69%) | :arrow_up: |\n| ...parsing/parser/context/condition/AndCondition.java | 95.83% <100%> (+2.08%) | :arrow_up: |\n| ...re/parsing/parser/context/condition/Condition.java | 84.44% <100%> (+1.51%) | :arrow_up: |\n| .../core/parsing/parser/clause/WhereClauseParser.java | 92.59% <95.65%> (-0.15%) | :arrow_down: |\n| ...rdingjdbc/core/jdbc/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...jdbc/metadata/handler/TableMetaHandlerFactory.java | | |\n| ...jdbc/core/jdbc/metadata/entity/ColumnMetaData.java | | |\n| ...gjdbc/core/jdbc/metadata/entity/TableMetaData.java | | |\n| ...dbc/metadata/handler/AbstractTableMetaHandler.java | | |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7562ceb...bd2a936. Read the comment docs.\n. # Codecov Report\nMerging #739 into dev will increase coverage by 0.17%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #739      +/-\n==========================================\n+ Coverage   65.38%   65.55%   +0.17%   \n==========================================\n  Files         478      478            \n  Lines        9218     9195      -23   \n  Branches     1513     1511       -2   \n==========================================\n+ Hits         6027     6028       +1   \n+ Misses       2865     2841      -24   \n  Partials      326      326\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/metadata/dialect/AbstractTableMetaHandler.java | 0% <\u00f8> (\u00f8) | |\n| ...hardingjdbc/core/jdbc/metadata/ColumnMetaData.java | 0% <\u00f8> (\u00f8) | |\n| ...shardingjdbc/core/jdbc/metadata/TableMetaData.java | 0% <\u00f8> (\u00f8) | |\n| ...jdbc/metadata/dialect/TableMetaHandlerFactory.java | 0% <\u00f8> (\u00f8) | |\n| ...rdingjdbc/core/jdbc/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/jdbc/metadata/dialect/MySQLTableMetaHandler.java | 0% <0%> (\u00f8) | |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7562ceb...78e0175. Read the comment docs.\n. # Codecov Report\nMerging #741 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #741      +/-\n==========================================\n- Coverage   65.71%   65.69%   -0.02%   \n==========================================\n  Files         478      479       +1   \n  Lines        9261     9262       +1   \n  Branches     1527     1527            \n==========================================\n- Hits         6086     6085       -1   \n- Misses       2845     2848       +3   \n+ Partials      330      329       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ingjdbc/core/parsing/lexer/LexerEngineFactory.java | 83.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <\u00f8> (\u00f8) | |\n| ...a/io/shardingjdbc/core/metadata/TableMetaData.java | 0% <\u00f8> (\u00f8) | |\n| .../core/jdbc/core/datasource/ShardingDataSource.java | 19.23% <\u00f8> (\u00f8) | :arrow_up: |\n| .../io/shardingjdbc/core/metadata/ColumnMetaData.java | 0% <\u00f8> (\u00f8) | |\n| .../jdbc/metadata/ShardingMetaDataHandlerFactory.java | 0% <0%> (\u00f8) | |\n| ...gjdbc/core/jdbc/metadata/JDBCShardingMetaData.java | 0% <0%> (\u00f8) | |\n| ...o/shardingjdbc/core/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | |\n| ...jdbc/metadata/dialect/ShardingMetaDataHandler.java | 0% <0%> (\u00f8) | |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e5fec6f...ff0268f. Read the comment docs.\n. # Codecov Report\nMerging #742 into dev will decrease coverage by 0.85%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #742      +/-\n==========================================\n- Coverage   65.69%   64.84%   -0.86%   \n==========================================\n  Files         479      479            \n  Lines        9262     9392     +130   \n  Branches     1527     1537      +10   \n==========================================\n+ Hits         6085     6090       +5   \n- Misses       2848     2969     +121   \n- Partials      329      333       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/proxy/transport/mysql/constant/ColumnType.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../statement/execute/BinaryProtocolValueUtility.java | 0% <0%> (\u00f8) | |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nd/statement/execute/BinaryResultSetRowPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 95ee7b7...6be0632. Read the comment docs.\n. # Codecov Report\nMerging #743 into dev will decrease coverage by 0.06%.\nThe diff coverage is 35.29%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #743      +/-\n==========================================\n- Coverage   64.79%   64.73%   -0.07%   \n==========================================\n  Files         479      482       +3   \n  Lines        9392     9452      +60   \n  Branches     1537     1547      +10   \n==========================================\n+ Hits         6086     6119      +33   \n- Misses       2976     3002      +26   \n- Partials      330      331       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/io/shardingjdbc/core/metadata/TableMetaData.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...jdbc/metadata/dialect/ShardingMetaDataHandler.java | 100% <\u00f8> (+100%) | :arrow_up: |\n| ...o/shardingjdbc/core/metadata/ShardingMetaData.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ngjdbc/proxy/metadata/ShardingMetaDataHandler.java | 0% <0%> (\u00f8) | |\n| ...dingjdbc/proxy/metadata/ProxyShardingMetaData.java | 0% <0%> (\u00f8) | |\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../core/jdbc/core/datasource/ShardingDataSource.java | 15.15% <0%> (-4.08%) | :arrow_down: |\n| ...gjdbc/core/jdbc/metadata/JDBCShardingMetaData.java | 100% <100%> (+100%) | :arrow_up: |\n| .../jdbc/metadata/ShardingMetaDataHandlerFactory.java | 66.66% <100%> (+66.66%) | :arrow_up: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1caf2a6...7114ace. Read the comment docs.\n. # Codecov Report\nMerging #744 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #744      +/-\n==========================================\n- Coverage   64.79%   64.78%   -0.02%   \n==========================================\n  Files         479      479            \n  Lines        9392     9392            \n  Branches     1537     1537            \n==========================================\n- Hits         6086     6085       -1   \n- Misses       2976     2977       +1   \n  Partials      330      330\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1caf2a6...544bc08. Read the comment docs.\n. # Codecov Report\nMerging #745 into dev will increase coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #745      +/-\n==========================================\n+ Coverage   64.79%   64.86%   +0.06%   \n==========================================\n  Files         479      479            \n  Lines        9392     9392            \n  Branches     1537     1537            \n==========================================\n+ Hits         6086     6092       +6   \n+ Misses       2976     2968       -8   \n- Partials      330      332       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/java/io/shardingjdbc/core/rule/ShardingRule.java | 93.63% <0%> (+1.81%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d6240f...bee3177. Read the comment docs.\n. # Codecov Report\nMerging #747 into dev will increase coverage by 0.02%.\nThe diff coverage is 40%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #747      +/-\n==========================================\n+ Coverage   64.81%   64.83%   +0.02%   \n==========================================\n  Files         479      479            \n  Lines        9392     9392            \n  Branches     1537     1537            \n==========================================\n+ Hits         6087     6089       +2   \n+ Misses       2977     2974       -3   \n- Partials      328      329       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../parsing/parser/context/condition/OrCondition.java | 89.47% <100%> (\u00f8) | :arrow_up: |\n| .../core/parsing/parser/clause/WhereClauseParser.java | 92.59% <100%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0f8a2dd...339960f. Read the comment docs.\n. # Codecov Report\nMerging #748 into dev will decrease coverage by 0.1%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #748      +/-\n==========================================\n- Coverage   64.79%   64.69%   -0.11%   \n==========================================\n  Files         479      479            \n  Lines        9392     9415      +23   \n  Branches     1537     1542       +5   \n==========================================\n+ Hits         6086     6091       +5   \n- Misses       2978     2993      +15   \n- Partials      328      331       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...et/command/statement/close/ComStmtClosePacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../mysql/packet/command/text/quit/ComQuitPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ql/packet/command/text/initdb/ComInitDbPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mysql/packet/command/UnsupportedCommandPacket.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../mysql/MySQLPacketStatementExecuteQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 40c961f...a9d611d. Read the comment docs.\n. # Codecov Report\nMerging #749 into dev will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #749      +/-\n==========================================\n- Coverage   64.79%   64.75%   -0.05%   \n==========================================\n  Files         479      479            \n  Lines        9392     9415      +23   \n  Branches     1537     1542       +5   \n==========================================\n+ Hits         6086     6097      +11   \n- Misses       2978     2990      +12   \n  Partials      328      328\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...et/command/statement/close/ComStmtClosePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../mysql/MySQLPacketStatementExecuteQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...mysql/packet/command/UnsupportedCommandPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 40c961f...64be9d7. Read the comment docs.\n. # Codecov Report\nMerging #752 into dev will decrease coverage by 0.18%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #752      +/-\n==========================================\n- Coverage   64.65%   64.46%   -0.19%   \n==========================================\n  Files         479      480       +1   \n  Lines        9415     9369      -46   \n  Branches     1542     1541       -1   \n==========================================\n- Hits         6087     6040      -47   \n  Misses       3000     3000            \n- Partials      328      329       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...io/shardingjdbc/core/routing/SQLExecutionUnit.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/executor/event/AbstractSQLExecutionEvent.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ain/java/io/shardingjdbc/core/routing/SQLUnit.java | 0% <0%> (\u00f8) | |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nsaction/bed/sync/BestEffortsDeliveryListener.java | 1.81% <0%> (\u00f8) | :arrow_up: |\n| ...main/java/io/shardingjdbc/core/util/SQLLogger.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ore/executor/type/statement/StatementExecutor.java | 96.77% <100%> (\u00f8) | :arrow_up: |\n| ...shardingjdbc/opentracing/ExecuteEventListener.java | 91.8% <100%> (\u00f8) | :arrow_up: |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 90.37% <100%> (+0.07%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ecd0a9f...7f6abb4. Read the comment docs.\n. # Codecov Report\nMerging #754 into dev will decrease coverage by 0.44%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #754      +/-\n==========================================\n- Coverage   64.57%   64.12%   -0.45%   \n==========================================\n  Files         483      483            \n  Lines        9406     9470      +64   \n  Branches     1546     1556      +10   \n==========================================\n- Hits         6074     6073       -1   \n- Misses       3000     3065      +65   \n  Partials      332      332\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/proxy/backend/mysql/MySQLPacketQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aef8e3c...2504876. Read the comment docs.\n. # Codecov Report\nMerging #755 into dev will decrease coverage by <.01%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@           Coverage Diff            @@\ndev    #755      +/-\n========================================\n- Coverage   64.1%   64.1%   -0.01%   \n========================================\n  Files        483     483            \n  Lines       9470    9468       -2   \n  Branches    1556    1555       -1   \n========================================\n- Hits        6071    6069       -2   \n  Misses      3069    3069            \n  Partials     330     330\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 96.34% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../parsing/parser/clause/SelectListClauseParser.java | 96.72% <100%> (-0.11%) | :arrow_down: |\n| ...io/shardingjdbc/core/parsing/SQLParsingEngine.java | 80% <100%> (\u00f8) | :arrow_up: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ing/parser/sql/dql/select/SelectParserFactory.java | 83.33% <100%> (\u00f8) | :arrow_up: |\n| .../parser/dialect/oracle/sql/OracleSelectParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...jdbc/core/parsing/parser/sql/SQLParserFactory.java | 55.55% <100%> (\u00f8) | :arrow_up: |\n| ...dialect/postgresql/sql/PostgreSQLSelectParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 11f147f...106cb8a. Read the comment docs.\n. # Codecov Report\nMerging #756 into dev will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #756      +/-\n=========================================\n+ Coverage   64.1%   64.12%   +0.01%   \n=========================================\n  Files        483      483            \n  Lines       9470     9469       -1   \n  Branches    1556     1555       -1   \n=========================================\n+ Hits        6071     6072       +1   \n+ Misses      3069     3066       -3   \n- Partials     330      331       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../proxy/transport/mysql/codec/MySQLPacketCodec.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 11f147f...f2434d3. Read the comment docs.\n. # Codecov Report\nMerging #760 into dev will decrease coverage by 0.18%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #760      +/-\n=========================================\n- Coverage   64.1%   63.91%   -0.19%   \n=========================================\n  Files        483      484       +1   \n  Lines       9467     9495      +28   \n  Branches    1554     1558       +4   \n=========================================\n  Hits        6069     6069            \n- Misses      3068     3097      +29   \n+ Partials     330      329       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ml/sharding/YamlShardingConfigurationForProxy.java | 0% <0%> (\u00f8) | |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+16.66%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 97a3dbc...4976d35. Read the comment docs.\n. # Codecov Report\nMerging #761 into dev will increase coverage by 0.02%.\nThe diff coverage is 74.46%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #761      +/-\n==========================================\n+ Coverage   64.14%   64.17%   +0.02%   \n==========================================\n  Files         483      484       +1   \n  Lines        9467     9500      +33   \n  Branches     1554     1564      +10   \n==========================================\n+ Hits         6073     6097      +24   \n- Misses       3060     3063       +3   \n- Partials      334      340       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...c/core/routing/PreparedStatementRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../jdbc/metadata/ShardingMetaDataHandlerFactory.java | 50% <100%> (-16.67%) | :arrow_down: |\n| ...dingjdbc/core/routing/router/SQLRouterFactory.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...dingjdbc/core/routing/router/ParsingSQLRouter.java | 19.75% <100%> (\u00f8) | :arrow_up: |\n| ...parsing/parser/sql/dql/select/SelectStatement.java | 89.42% <100%> (+0.76%) | :arrow_up: |\n| ...bc/core/jdbc/core/statement/ShardingStatement.java | 89.36% <100%> (\u00f8) | :arrow_up: |\n| ...rdingjdbc/core/routing/StatementRoutingEngine.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d0d1ea...99a74aa. Read the comment docs.\n. # Codecov Report\nMerging #763 into dev will increase coverage by 0.28%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #763      +/-\n==========================================\n+ Coverage   63.93%   64.22%   +0.28%   \n==========================================\n  Files         485      485            \n  Lines        9528     9528            \n  Branches     1568     1568            \n==========================================\n+ Hits         6092     6119      +27   \n+ Misses       3100     3069      -31   \n- Partials      336      340       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| .../shardingjdbc/core/routing/type/RoutingResult.java | 100% <0%> (+33.33%) | :arrow_up: |\n| ...ng/type/broadcast/TableBroadcastRoutingEngine.java | 88.23% <0%> (+88.23%) | :arrow_up: |\n| .../core/routing/type/ignore/IgnoreRoutingEngine.java | 100% <0%> (+100%) | :arrow_up: |\n| ...type/broadcast/DatabaseBroadcastRoutingEngine.java | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d3b6cd8...f9726f3. Read the comment docs.\n. # Codecov Report\nMerging #764 into dev will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #764      +/-\n=========================================\n+ Coverage   64.17%   64.2%   +0.02%   \n=========================================\n  Files         485     485            \n  Lines        9528    9528            \n  Branches     1568    1568            \n=========================================\n+ Hits         6115    6117       +2   \n+ Misses       3076    3073       -3   \n- Partials      337     338       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e873e5e...69f9db4. Read the comment docs.\n. # Codecov Report\nMerging #765 into dev will increase coverage by 0.14%.\nThe diff coverage is 23.8%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #765      +/-\n==========================================\n+ Coverage   64.17%   64.32%   +0.14%   \n==========================================\n  Files         485      483       -2   \n  Lines        9528     9505      -23   \n  Branches     1568     1562       -6   \n==========================================\n- Hits         6115     6114       -1   \n+ Misses       3076     3052      -24   \n- Partials      337      339       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/routing/type/complex/CartesianRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../io/shardingjdbc/core/routing/type/TableUnits.java | 5.12% <0%> (+0.12%) | :arrow_up: |\n| ...o/shardingjdbc/core/routing/type/RoutingTable.java | 0% <0%> (\u00f8) | |\n| ...dingjdbc/core/routing/router/ParsingSQLRouter.java | 21.91% <100%> (+2.16%) | :arrow_up: |\n| ...ng/type/broadcast/TableBroadcastRoutingEngine.java | 89.47% <100%> (+1.23%) | :arrow_up: |\n| ...e/routing/type/hint/DatabaseHintRoutingEngine.java | 91.66% <100%> (\u00f8) | :arrow_up: |\n| ...type/broadcast/DatabaseBroadcastRoutingEngine.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ore/routing/type/unicast/UnicastRoutingEngine.java | 13.63% <20%> (\u00f8) | :arrow_up: |\n| ...a/io/shardingjdbc/core/routing/type/TableUnit.java | 9.52% <5.55%> (+9.52%) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e873e5e...8f5b742. Read the comment docs.\n. # Codecov Report\nMerging #771 into dev will increase coverage by 0.2%.\nThe diff coverage is 97.01%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #771     +/-\n=========================================\n+ Coverage   64.28%   64.49%   +0.2%   \n=========================================\n  Files         483      484      +1   \n  Lines        9506     9547     +41   \n  Branches     1562     1571      +9   \n=========================================\n+ Hits         6111     6157     +46   \n+ Misses       3060     3053      -7   \n- Partials      335      337      +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dingjdbc/core/parsing/parser/token/ItemsToken.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ingjdbc/core/parsing/parser/token/SymbolToken.java | 0% <0%> (\u00f8) | |\n| .../parser/dialect/oracle/sql/OracleInsertParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ng/parser/dialect/mysql/sql/MySQLInsertParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...r/dialect/sqlserver/sql/SQLServerInsertParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 96.87% <100%> (+2.75%) | :arrow_up: |\n| ...ng/parser/sql/dml/insert/AbstractInsertParser.java | 90.9% <100%> (+0.9%) | :arrow_up: |\n| ...parsing/parser/sql/dml/insert/InsertStatement.java | 62.5% <100%> (+22.5%) | :arrow_up: |\n| ...ing/parser/sql/dml/insert/InsertParserFactory.java | 83.33% <100%> (\u00f8) | :arrow_up: |\n| ...dialect/postgresql/sql/PostgreSQLInsertParser.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4a4cab8...6612b17. Read the comment docs.\n. # Codecov Report\nMerging #772 into dev will increase coverage by 0.03%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #772      +/-\n==========================================\n+ Coverage   64.46%   64.49%   +0.03%   \n==========================================\n  Files         484      484            \n  Lines        9547     9547            \n  Branches     1571     1571            \n==========================================\n+ Hits         6154     6157       +3   \n+ Misses       3059     3053       -6   \n- Partials      334      337       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...c/core/parsing/parser/token/InsertColumnToken.java | 0% <\u00f8> (\u00f8) | |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 96.87% <100%> (\u00f8) | :arrow_up: |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 96.8% <75%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9f9164b...b1aa0a2. Read the comment docs.\n. # Codecov Report\nMerging #776 into dev will increase coverage by 0.04%.\nThe diff coverage is 68.21%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #776      +/-\n==========================================\n+ Coverage   63.89%   63.94%   +0.04%   \n==========================================\n  Files         486      490       +4   \n  Lines        9498     9540      +42   \n  Branches     1557     1567      +10   \n==========================================\n+ Hits         6069     6100      +31   \n- Misses       3093     3099       +6   \n- Partials      336      341       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/core/routing/router/sharding/GeneratedKey.java | 100% <\u00f8> (+71.42%) | :arrow_up: |\n| ...e/rewrite/placeholder/InsertValuesPlaceholder.java | 0% <0%> (\u00f8) | |\n| ...arsing/parser/context/insertvalue/InsertValue.java | 0% <0%> (\u00f8) | |\n| ...dingjdbc/core/optimizer/OptimizeEngineFactory.java | 20% <0%> (\u00f8) | :arrow_up: |\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...pter/AbstractShardingPreparedStatementAdapter.java | 93.33% <100%> (+0.06%) | :arrow_up: |\n| ...ng/parser/sql/dml/insert/AbstractInsertParser.java | 90.47% <100%> (-0.44%) | :arrow_down: |\n| ...io/shardingjdbc/core/rewrite/SQLRewriteEngine.java | 96.72% <100%> (-0.08%) | :arrow_down: |\n| ...parsing/parser/sql/dml/insert/InsertStatement.java | 64.7% <100%> (+2.2%) | :arrow_up: |\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 96.72% <100%> (+2.78%) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 895fe0a...603ed53. Read the comment docs.\n. # Codecov Report\nMerging #782 into issue_601 will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\nissue_601     #782      +/-\n=============================================\n- Coverage      63.89%   63.85%   -0.05%   \n=============================================\n  Files            486      486            \n  Lines           9498     9501       +3   \n  Branches        1557     1557            \n=============================================\n- Hits            6069     6067       -2   \n- Misses          3093     3100       +7   \n+ Partials         336      334       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ingjdbc/core/parsing/parser/token/SchemaToken.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| .../java/io/shardingjdbc/test/sql/SQLCasesLoader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 895fe0a...c85143d. Read the comment docs.\n. # Codecov Report\nMerging #791 into issue_601 will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nissue_601     #791      +/-\n=============================================\n- Coverage      63.94%   63.93%   -0.02%   \n=============================================\n  Files            490      490            \n  Lines           9543     9543            \n  Branches        1567     1567            \n=============================================\n- Hits            6102     6101       -1   \n- Misses          3099     3101       +2   \n+ Partials         342      341       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c0a379...f99ede2. Read the comment docs.\n. # Codecov Report\nMerging #792 into dev will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #792      +/-\n==========================================\n+ Coverage   63.94%   63.95%   +0.01%   \n==========================================\n  Files         490      490            \n  Lines        9540     9540            \n  Branches     1567     1567            \n==========================================\n+ Hits         6100     6101       +1   \n+ Misses       3100     3099       -1   \n  Partials      340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ml/sharding/YamlShardingConfigurationForProxy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 69bfe67...ceb74de. Read the comment docs.\n. # Codecov Report\nMerging #794 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #794   +/-\n=======================================\n  Coverage   63.94%   63.94%         \n=======================================\n  Files         490      490         \n  Lines        9540     9540         \n  Branches     1567     1567         \n=======================================\n  Hits         6100     6100         \n  Misses       3100     3100         \n  Partials      340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c2f8763...be3fd72. Read the comment docs.\n. # Codecov Report\nMerging #796 into issue_601 will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nissue_601     #796      +/-\n=============================================\n+ Coverage      63.93%   63.97%   +0.04%   \n=============================================\n  Files            490      490            \n  Lines           9543     9543            \n  Branches        1567     1567            \n=============================================\n+ Hits            6101     6105       +4   \n+ Misses          3102     3095       -7   \n- Partials         340      343       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+16.66%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5abe94f...4cdc8c3. Read the comment docs.\n. # Codecov Report\nMerging #797 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #797      +/-\n==========================================\n- Coverage   63.95%   63.94%   -0.02%   \n==========================================\n  Files         490      490            \n  Lines        9540     9540            \n  Branches     1567     1567            \n==========================================\n- Hits         6101     6100       -1   \n- Misses       3098     3100       +2   \n+ Partials      341      340       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd66449...c89f378. Read the comment docs.\n. # Codecov Report\nMerging #798 into issue_601 will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nissue_601     #798   +/-\n==========================================\n  Coverage      63.92%   63.92%         \n==========================================\n  Files            490      490         \n  Lines           9543     9543         \n  Branches        1567     1567         \n==========================================\n  Hits            6100     6100         \n  Misses          3103     3103         \n  Partials         340      340\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42389a9...717605d. Read the comment docs.\n. # Codecov Report\nMerging #799 into dev will increase coverage by <.01%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #799      +/-\n==========================================\n+ Coverage   63.56%   63.56%   +<.01%   \n==========================================\n  Files         490      491       +1   \n  Lines        9601     9654      +53   \n  Branches     1578     1590      +12   \n==========================================\n+ Hits         6103     6137      +34   \n- Misses       3158     3171      +13   \n- Partials      340      346       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dingjdbc/proxy/metadata/ProxyShardingMetaData.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tadata/dialect/DefaultShardingMetaDataHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...o/shardingjdbc/core/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ngjdbc/proxy/metadata/ShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...a/io/shardingjdbc/core/routing/SQLRouteResult.java | 66.66% <0%> (-33.34%) | :arrow_down: |\n| ...gjdbc/core/jdbc/metadata/JDBCShardingMetaData.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../jdbc/metadata/ShardingMetaDataHandlerFactory.java | 60% <100%> (+10%) | :arrow_up: |\n| ...bc/core/jdbc/core/statement/ShardingStatement.java | 90.47% <100%> (+1.83%) | :arrow_up: |\n| ...jdbc/metadata/dialect/ShardingMetaDataHandler.java | 83.33% <83.33%> (\u00f8) | |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c437eb0...4e1e938. Read the comment docs.\n. # Codecov Report\nMerging #801 into issue_601 will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nissue_601     #801      +/-\n=============================================\n+ Coverage      63.93%   63.94%   +0.01%   \n=============================================\n  Files            490      490            \n  Lines           9540     9540            \n  Branches        1567     1567            \n=============================================\n+ Hits            6099     6100       +1   \n+ Misses          3101     3100       -1   \n  Partials         340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b6482a...aa0549c. Read the comment docs.\n. # Codecov Report\nMerging #803 into dev will decrease coverage by <.01%.\nThe diff coverage is 73.33%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #803      +/-\n==========================================\n- Coverage   63.95%   63.94%   -0.01%   \n==========================================\n  Files         490      490            \n  Lines        9540     9544       +4   \n  Branches     1567     1567            \n==========================================\n+ Hits         6101     6103       +2   \n- Misses       3099     3101       +2   \n  Partials      340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../java/io/shardingjdbc/core/rewrite/SQLBuilder.java | 87.3% <100%> (-3.03%) | :arrow_down: |\n| ...bc/core/optimizer/insert/InsertOptimizeEngine.java | 91.17% <90.9%> (+4.07%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 77e358d...e2b1bd5. Read the comment docs.\n. # Codecov Report\nMerging #807 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #807   +/-\n=======================================\n  Coverage   63.94%   63.94%         \n=======================================\n  Files         490      490         \n  Lines        9544     9544         \n  Branches     1567     1567         \n=======================================\n  Hits         6103     6103         \n  Misses       3101     3101         \n  Partials      340      340\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ead479...2ad1b2d. Read the comment docs.\n. # Codecov Report\nMerging #808 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #808      +/-\n==========================================\n- Coverage   63.94%   63.93%   -0.02%   \n==========================================\n  Files         490      490            \n  Lines        9544     9544            \n  Branches     1567     1567            \n==========================================\n- Hits         6103     6102       -1   \n- Misses       3101     3102       +1   \n  Partials      340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ead479...5ff9b04. Read the comment docs.\n. # Codecov Report\nMerging #810 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #810   +/-\n=======================================\n  Coverage   79.64%   79.64%         \n=======================================\n  Files         388      388         \n  Lines        7365     7365         \n  Branches     1177     1177         \n=======================================\n  Hits         5866     5866         \n  Misses       1210     1210         \n  Partials      289      289\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5d014d7...25109d7. Read the comment docs.\n. # Codecov Report\nMerging #811 into dev will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #811      +/-\n==========================================\n+ Coverage   63.94%   63.96%   +0.02%   \n==========================================\n  Files         490      490            \n  Lines        9544     9544            \n  Branches     1567     1567            \n==========================================\n+ Hits         6103     6105       +2   \n+ Misses       3101     3097       -4   \n- Partials      340      342       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 458da53...6630fc2. Read the comment docs.\n. # Codecov Report\nMerging #812 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #812      +/-\n==========================================\n- Coverage   63.95%   63.94%   -0.02%   \n==========================================\n  Files         490      490            \n  Lines        9544     9544            \n  Branches     1567     1567            \n==========================================\n- Hits         6104     6103       -1   \n- Misses       3100     3101       +1   \n  Partials      340      340\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7bcc327...c5bbd1a. Read the comment docs.\n. # Codecov Report\nMerging #813 into dev will decrease coverage by 0.37%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #813      +/-\n==========================================\n- Coverage   63.95%   63.57%   -0.38%   \n==========================================\n  Files         490      490            \n  Lines        9544     9601      +57   \n  Branches     1567     1578      +11   \n==========================================\n  Hits         6104     6104            \n- Misses       3099     3158      +59   \n+ Partials      341      339       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 96.72% <\u00f8> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ngjdbc/core/yaml/proxy/YamlProxyConfiguration.java | 0% <0%> (\u00f8) | |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hardingjdbc/proxy/config/ShardingRuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+16.66%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b9f49bc...a28aefc. Read the comment docs.\n. # Codecov Report\nMerging #815 into dev will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #815      +/-\n=========================================\n- Coverage   63.56%   63.5%   -0.06%   \n=========================================\n  Files         490     490            \n  Lines        9601    9613      +12   \n  Branches     1578    1580       +2   \n=========================================\n+ Hits         6103    6105       +2   \n- Misses       3158    3166       +8   \n- Partials      340     342       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommand/statement/prepare/ComStmtPreparePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...o/shardingjdbc/core/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ava/io/shardingjdbc/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../io/shardingjdbc/core/metadata/ColumnMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c437eb0...bf08eea. Read the comment docs.\n. # Codecov Report\nMerging #817 into dev will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #817      +/-\n=========================================\n+ Coverage   63.48%   63.5%   +0.02%   \n=========================================\n  Files         490     490            \n  Lines        9613    9613            \n  Branches     1580    1580            \n=========================================\n+ Hits         6103    6105       +2   \n+ Misses       3169    3167       -2   \n  Partials      341     341\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 714e692...761e73c. Read the comment docs.\n. # Codecov Report\nMerging #819 into dev will increase coverage by 0.01%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #819      +/-\n==========================================\n+ Coverage   63.45%   63.47%   +0.01%   \n==========================================\n  Files         491      491            \n  Lines        9666     9680      +14   \n  Branches     1592     1595       +3   \n==========================================\n+ Hits         6134     6144      +10   \n- Misses       3190     3193       +3   \n- Partials      342      343       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/parsing/parser/clause/WhereClauseParser.java | 91.47% <83.33%> (-1.12%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c502c7a...f1129a0. Read the comment docs.\n. # Codecov Report\nMerging #822 into dev will decrease coverage by 0.01%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #822      +/-\n==========================================\n- Coverage   63.38%   63.37%   -0.02%   \n==========================================\n  Files         491      491            \n  Lines        9691     9693       +2   \n  Branches     1595     1598       +3   \n==========================================\n  Hits         6143     6143            \n  Misses       3205     3205            \n- Partials      343      345       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ngsphere/proxy/metadata/ProxyShardingMetaData.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tadata/dialect/DefaultShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...shardingsphere/core/metadata/ShardingMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...jdbc/metadata/dialect/ShardingMetaDataHandler.java | 90% <100%> (+6.66%) | :arrow_up: |\n| ...phere/core/jdbc/metadata/JDBCShardingMetaData.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...re/core/jdbc/core/statement/ShardingStatement.java | 90.38% <100%> (-0.1%) | :arrow_down: |\n| ...bc/metadata/dialect/H2ShardingMetaDataHandler.java | 75% <100%> (-10.72%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 89.36% <0%> (-1.07%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57f1b60...9eb9e91. Read the comment docs.\n. # Codecov Report\nMerging #824 into dev will decrease coverage by 0.09%.\nThe diff coverage is 44.44%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #824     +/-\n=========================================\n- Coverage   63.33%   63.24%   -0.1%   \n=========================================\n  Files         491      493      +2   \n  Lines        9699     9713     +14   \n  Branches     1598     1599      +1   \n=========================================\n  Hits         6143     6143           \n- Misses       3210     3225     +15   \n+ Partials      346      345      -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...re/proxy/metadata/ProxyShardingRefreshHandler.java | 0% <0%> (\u00f8) | |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...jdbc/core/statement/ShardingPreparedStatement.java | 92.92% <100%> (+0.12%) | :arrow_up: |\n| ...re/core/jdbc/core/statement/ShardingStatement.java | 88.88% <100%> (-1.5%) | :arrow_down: |\n| ...c/metadata/dialect/JDBCShardingRefreshHandler.java | 100% <100%> (\u00f8) | |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e73b3fb...393eda7. Read the comment docs.\n. # Codecov Report\nMerging #825 into dev will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #825      +/-\n==========================================\n+ Coverage   63.23%   63.25%   +0.02%   \n==========================================\n  Files         493      493            \n  Lines        9713     9711       -2   \n  Branches     1599     1599            \n==========================================\n+ Hits         6142     6143       +1   \n+ Misses       3226     3220       -6   \n- Partials      345      348       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/parsing/parser/clause/WhereClauseParser.java | 91.37% <100%> (-0.1%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d368e6a...b030905. Read the comment docs.\n. # Codecov Report\nMerging #828 into dev will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #828      +/-\n=========================================\n- Coverage   63.3%   63.23%   -0.07%   \n=========================================\n  Files        493      493            \n  Lines       9714     9716       +2   \n  Branches    1600     1600            \n=========================================\n- Hits        6149     6144       -5   \n- Misses      3216     3227      +11   \n+ Partials     349      345       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 722699e...4266b5a. Read the comment docs.\n. # Codecov Report\nMerging #829 into dev will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #829      +/-\n==========================================\n- Coverage   63.27%   63.22%   -0.06%   \n==========================================\n  Files         493      494       +1   \n  Lines        9716     9720       +4   \n  Branches     1600     1600            \n==========================================\n- Hits         6148     6145       -3   \n- Misses       3220     3230      +10   \n+ Partials      348      345       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../mysql/packet/command/text/ping/ComPingPacket.java | 0% <0%> (\u00f8) | |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ort/mysql/packet/command/CommandPacketFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 843b069...519c125. Read the comment docs.\n. # Codecov Report\nMerging #830 into dev will decrease coverage by 0.04%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #830      +/-\n=========================================\n- Coverage   63.24%   63.2%   -0.05%   \n=========================================\n  Files         494     494            \n  Lines        9720    9723       +3   \n  Branches     1600    1601       +1   \n=========================================\n- Hits         6147    6145       -2   \n- Misses       3226    3232       +6   \n+ Partials      347     346       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ing/parser/clause/TableReferencesClauseParser.java | 78.87% <33.33%> (-2.01%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c905945...1145760. Read the comment docs.\n. # Codecov Report\nMerging #833 into dev will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #833      +/-\n==========================================\n+ Coverage   63.22%   63.24%   +0.02%   \n==========================================\n  Files         498      498            \n  Lines        9787     9790       +3   \n  Branches     1609     1610       +1   \n==========================================\n+ Hits         6188     6192       +4   \n+ Misses       3250     3244       -6   \n- Partials      349      354       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommand/statement/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 94.28% <0%> (+2.85%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 54.54% <0%> (+4.54%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 65% <0%> (+5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7068b18...efda21f. Read the comment docs.\n. # Codecov Report\nMerging #834 into dev will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #834      +/-\n=========================================\n+ Coverage   63.2%   63.21%   +0.01%   \n=========================================\n  Files        498      498            \n  Lines       9790     9790            \n  Branches    1610     1610            \n=========================================\n+ Hits        6188     6189       +1   \n+ Misses      3252     3250       -2   \n- Partials     350      351       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d1d13d6...a8854ac. Read the comment docs.\n. # Codecov Report\nMerging #836 into dev will increase coverage by 0.53%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #836      +/-\n==========================================\n+ Coverage   63.19%   63.73%   +0.53%   \n==========================================\n  Files         498      498            \n  Lines        9790     9784       -6   \n  Branches     1610     1608       -2   \n==========================================\n+ Hits         6187     6236      +49   \n+ Misses       3253     3198      -55   \n  Partials      350      350\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...api/OrchestrationMasterSlaveDataSourceFactory.java | 23.07% <\u00f8> (-8.18%) | :arrow_down: |\n| ...on/api/OrchestrationShardingDataSourceFactory.java | 23.07% <\u00f8> (-8.18%) | :arrow_down: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 1.12% <0%> (+1.12%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 94.28% <0%> (+2.85%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...here/proxy/transport/common/codec/PacketCodec.java | 8.33% <0%> (+8.33%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| .../mysql/packet/command/text/quit/ComQuitPacket.java | 66.66% <0%> (+66.66%) | :arrow_up: |\n| .../proxy/transport/mysql/codec/MySQLPacketCodec.java | 70.58% <0%> (+70.58%) | :arrow_up: |\n| ...nsport/mysql/packet/command/CommandPacketType.java | 89.18% <0%> (+89.18%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0ed6e36...bd1a28c. Read the comment docs.\n. # Codecov Report\nMerging #839 into dev will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #839      +/-\n=========================================\n- Coverage   63.76%   63.7%   -0.06%   \n=========================================\n  Files         498     498            \n  Lines        9784    9785       +1   \n  Branches     1608    1608            \n=========================================\n- Hits         6239    6234       -5   \n- Misses       3192    3202      +10   \n+ Partials      353     349       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 60a3b79...d00684b. Read the comment docs.\n. # Codecov Report\nMerging #842 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #842      +/-\n==========================================\n- Coverage   63.73%   63.71%   -0.02%   \n==========================================\n  Files         498      498            \n  Lines        9785     9785            \n  Branches     1608     1608            \n==========================================\n- Hits         6236     6235       -1   \n- Misses       3199     3201       +2   \n+ Partials      350      349       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 06e4664...4302197. Read the comment docs.\n. # Codecov Report\nMerging #843 into dev will decrease coverage by 0.12%.\nThe diff coverage is 25%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #843      +/-\n=========================================\n- Coverage   63.73%   63.6%   -0.13%   \n=========================================\n  Files         498     498            \n  Lines        9785    9801      +16   \n  Branches     1608    1610       +2   \n=========================================\n- Hits         6236    6234       -2   \n- Misses       3199    3216      +17   \n- Partials      350     351       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...sing/parser/dialect/mysql/sql/MySQLShowParser.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 90.99% <100%> (+0.08%) | :arrow_up: |\n| ...ava/io/shardingsphere/core/rewrite/SQLBuilder.java | 87.3% <100%> (\u00f8) | :arrow_up: |\n| ...ing/parser/clause/TableReferencesClauseParser.java | 80% <100%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 93.93% <0%> (-6.07%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 06e4664...ae3a387. Read the comment docs.\n. # Codecov Report\nMerging #847 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #847      +/-\n==========================================\n- Coverage   63.73%   63.72%   -0.01%   \n==========================================\n  Files         498      498            \n  Lines        9785     9784       -1   \n  Branches     1608     1608            \n==========================================\n- Hits         6236     6235       -1   \n- Misses       3199     3201       +2   \n+ Partials      350      348       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...hardingsphere/core/keygen/DefaultKeyGenerator.java | 85.71% <100%> (\u00f8) | :arrow_up: |\n| .../core/parsing/parser/clause/WhereClauseParser.java | 91.9% <100%> (+0.52%) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 06e4664...70ebede. Read the comment docs.\n. # Codecov Report\nMerging #848 into dev will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #848      +/-\n==========================================\n- Coverage   63.73%   63.69%   -0.04%   \n==========================================\n  Files         498      498            \n  Lines        9785     9785            \n  Branches     1608     1608            \n==========================================\n- Hits         6236     6233       -3   \n- Misses       3199     3202       +3   \n  Partials      350      350\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ing/parser/clause/TableReferencesClauseParser.java | 80% <100%> (\u00f8) | :arrow_up: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 93.93% <0%> (-6.07%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 06e4664...8de3b93. Read the comment docs.\n. # Codecov Report\nMerging #851 into dev will decrease coverage by 0.04%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #851      +/-\n=========================================\n- Coverage   63.7%   63.66%   -0.05%   \n=========================================\n  Files        498      498            \n  Lines       9785     9793       +8   \n  Branches    1608     1609       +1   \n=========================================\n+ Hits        6234     6235       +1   \n- Misses      3200     3207       +7   \n  Partials     351      351\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ngsphere/core/parsing/parser/token/TableToken.java | 50% <\u00f8> (\u00f8) | :arrow_up: |\n| ...sing/parser/clause/UpdateSetItemsClauseParser.java | 89.65% <100%> (\u00f8) | :arrow_up: |\n| .../parsing/parser/clause/SelectListClauseParser.java | 96.72% <100%> (\u00f8) | :arrow_up: |\n| ...arser/clause/expression/BasicExpressionParser.java | 88% <100%> (\u00f8) | :arrow_up: |\n| .../shardingsphere/core/rewrite/SQLRewriteEngine.java | 96.72% <100%> (\u00f8) | :arrow_up: |\n| ...ing/parser/clause/TableReferencesClauseParser.java | 75.64% <54.54%> (-4.36%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aef5ab0...fcbb5f7. Read the comment docs.\n. # Codecov Report\nMerging #852 into dev will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #852      +/-\n=========================================\n- Coverage   63.7%   63.68%   -0.03%   \n=========================================\n  Files        498      498            \n  Lines       9785     9785            \n  Branches    1608     1608            \n=========================================\n- Hits        6234     6232       -2   \n- Misses      3200     3203       +3   \n+ Partials     351      350       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aef5ab0...26d8b07. Read the comment docs.\n. # Codecov Report\nMerging #856 into dev will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #856      +/-\n==========================================\n+ Coverage   63.66%   63.67%   +0.01%   \n==========================================\n  Files         498      498            \n  Lines        9793     9793            \n  Branches     1609     1609            \n==========================================\n+ Hits         6235     6236       +1   \n+ Misses       3207     3206       -1   \n  Partials      351      351\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f93ef1e...d3a8b9c. Read the comment docs.\n. # Codecov Report\nMerging #857 into dev will increase coverage by 0.09%.\nThe diff coverage is 79.16%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #857      +/-\n==========================================\n+ Coverage   63.66%   63.75%   +0.09%   \n==========================================\n  Files         498      500       +2   \n  Lines        9792     9811      +19   \n  Branches     1609     1616       +7   \n==========================================\n+ Hits         6234     6255      +21   \n+ Misses       3208     3200       -8   \n- Partials      350      356       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...l/clause/facade/MySQLInsertClauseParserFacade.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ause/facade/SQLServerInsertClauseParserFacade.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../clause/facade/OracleInsertClauseParserFacade.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...use/facade/PostgreSQLInsertClauseParserFacade.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 96.72% <100%> (\u00f8) | :arrow_up: |\n| ...ng/parser/sql/dml/insert/AbstractInsertParser.java | 90.9% <100%> (+0.43%) | :arrow_up: |\n| ...phere/core/parsing/lexer/token/DefaultKeyword.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...use/MySQLInsertDuplicateKeyUpdateClauseParser.java | 100% <100%> (\u00f8) | |\n| ...re/core/jdbc/core/statement/ShardingStatement.java | 86.95% <50%> (-1.94%) | :arrow_down: |\n| ...jdbc/core/statement/ShardingPreparedStatement.java | 91.3% <50%> (-1.62%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f9e0dc...6846ac2. Read the comment docs.\n. # Codecov Report\nMerging #860 into dev will decrease coverage by 0.23%.\nThe diff coverage is 17.24%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #860      +/-\n==========================================\n- Coverage   63.75%   63.52%   -0.24%   \n==========================================\n  Files         500      500            \n  Lines        9811     9770      -41   \n  Branches     1616     1610       -6   \n==========================================\n- Hits         6255     6206      -49   \n- Misses       3200     3211      +11   \n+ Partials      356      353       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/jdbc/core/datasource/ShardingDataSource.java | 8.92% <0%> (-6.23%) | :arrow_down: |\n| ...on/spring/datasource/SpringShardingDataSource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...bc/spring/datasource/SpringShardingDataSource.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...tion/internal/OrchestrationShardingDataSource.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <100%> (-24.77%) | :arrow_down: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b7ed360...63fe5a9. Read the comment docs.\n. # Codecov Report\nMerging #861 into dev will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #861      +/-\n=========================================\n- Coverage   63.75%   63.7%   -0.06%   \n=========================================\n  Files         500     500            \n  Lines        9811    9811            \n  Branches     1616    1616            \n=========================================\n- Hits         6255    6250       -5   \n- Misses       3200    3208       +8   \n+ Partials      356     353       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 60% <0%> (-5%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (-3.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b7ed360...0db190c. Read the comment docs.\n. # Codecov Report\nMerging #863 into dev will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #863      +/-\n==========================================\n+ Coverage   63.52%   63.54%   +0.02%   \n==========================================\n  Files         500      500            \n  Lines        9770     9770            \n  Branches     1610     1610            \n==========================================\n+ Hits         6206     6208       +2   \n+ Misses       3211     3208       -3   \n- Partials      353      354       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fced903...d7464a4. Read the comment docs.\n. # Codecov Report\nMerging #867 into dev will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #867   +/-\n=======================================\n  Coverage   63.53%   63.53%         \n=======================================\n  Files         500      500         \n  Lines        9770     9770         \n  Branches     1610     1610         \n=======================================\n  Hits         6207     6207         \n+ Misses       3210     3209    -1   \n- Partials      353      354    +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fab74a0...38da369. Read the comment docs.\n. # Codecov Report\nMerging #868 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #868   +/-\n=======================================\n  Coverage   63.68%   63.68%         \n=======================================\n  Files         498      498         \n  Lines        9792     9792         \n  Branches     1609     1609         \n=======================================\n  Hits         6236     6236         \n+ Misses       3207     3206    -1   \n- Partials      349      350    +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 1.12% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ff221e6...c281cb4. Read the comment docs.\n. # Codecov Report\nMerging #870 into dev will increase coverage by 0.18%.\nThe diff coverage is 84.37%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #870      +/-\n==========================================\n+ Coverage   63.53%   63.71%   +0.18%   \n==========================================\n  Files         500      500            \n  Lines        9770     9824      +54   \n  Branches     1610     1621      +11   \n==========================================\n+ Hits         6207     6259      +52   \n- Misses       3208     3210       +2   \n  Partials      355      355\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arsing/parser/context/insertvalue/InsertValue.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 96.72% <100%> (\u00f8) | :arrow_up: |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 97.67% <100%> (+0.79%) | :arrow_up: |\n| ...re/core/optimizer/insert/InsertOptimizeEngine.java | 79.48% <25%> (-11.69%) | :arrow_down: |\n| ...r/clause/InsertDuplicateKeyUpdateClauseParser.java | 87.5% <85.71%> (-4.17%) | :arrow_down: |\n| ...e/parsing/parser/clause/InsertSetClauseParser.java | 80% <92.85%> (+38.33%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| .../parsing/parser/context/condition/OrCondition.java | 89.47% <0%> (+5.26%) | :arrow_up: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 728c246...2827f8f. Read the comment docs.\n. # Codecov Report\nMerging #871 into dev will increase coverage by 0.19%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #871      +/-\n==========================================\n+ Coverage   63.53%   63.72%   +0.19%   \n==========================================\n  Files         500      500            \n  Lines        9770     9824      +54   \n  Branches     1610     1621      +11   \n==========================================\n+ Hits         6207     6260      +53   \n- Misses       3208     3209       +1   \n  Partials      355      355\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...here/core/parsing/parser/context/table/Tables.java | 88.46% <100%> (\u00f8) | :arrow_up: |\n| ...re/core/optimizer/insert/InsertOptimizeEngine.java | 79.48% <0%> (-11.69%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...r/clause/InsertDuplicateKeyUpdateClauseParser.java | 87.5% <0%> (-4.17%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 71.42% <0%> (-3.58%) | :arrow_down: |\n| ...arsing/parser/context/insertvalue/InsertValue.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 97.67% <0%> (+0.79%) | :arrow_up: |\n| .../parsing/parser/context/condition/OrCondition.java | 89.47% <0%> (+5.26%) | :arrow_up: |\n| ...e/parsing/parser/context/condition/Conditions.java | 63.63% <0%> (+9.09%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 728c246...a192f1a. Read the comment docs.\n. # Codecov Report\nMerging #873 into dev will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #873   +/-\n=======================================\n  Coverage   63.72%   63.72%         \n=======================================\n  Files         500      500         \n  Lines        9824     9824         \n  Branches     1621     1621         \n=======================================\n  Hits         6260     6260         \n+ Misses       3209     3208    -1   \n- Partials      355      356    +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/proxy/metadata/ProxyShardingRefreshHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 1.12% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b5d4e7f...05bd4c1. Read the comment docs.\n. # Codecov Report\nMerging #942 into dev will decrease coverage by 0.21%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #942      +/-\n==========================================\n- Coverage   53.86%   53.64%   -0.22%   \n==========================================\n  Files         564      565       +1   \n  Lines       11776    11820      +44   \n  Branches     1855     1869      +14   \n==========================================\n- Hits         6343     6341       -2   \n- Misses       5066     5115      +49   \n+ Partials      367      364       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../mysql/MySQLPacketStatementExecuteQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/proxy/backend/common/StatementExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...re/proxy/backend/mysql/MySQLPacketQueryResult.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hardingsphere/proxy/backend/common/ResultList.java | 0% <0%> (\u00f8) | |\n| ...gsphere/proxy/backend/common/SQLExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...sphere/proxy/config/DefaultProxyRawDataSource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8056d1...697b9fe. Read the comment docs.\n. # Codecov Report\nMerging #943 into dev will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\ndev     #943   +/-\n=======================================\n  Coverage   53.63%   53.63%         \n=======================================\n  Files         565      565         \n  Lines       11820    11820         \n  Branches     1869     1869         \n=======================================\n  Hits         6340     6340         \n  Misses       5116     5116         \n  Partials      364      364\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...sphere/core/yaml/proxy/YamlProxyConfiguration.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7cfeb1d...f762a5e. Read the comment docs.\n. # Codecov Report\nMerging #944 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #944      +/-\n==========================================\n- Coverage   53.63%   53.62%   -0.02%   \n==========================================\n  Files         565      565            \n  Lines       11820    11831      +11   \n  Branches     1869     1875       +6   \n==========================================\n+ Hits         6340     6344       +4   \n- Misses       5116     5119       +3   \n- Partials      364      368       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/UsualClient.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...k/client/zookeeper/strategy/SyncRetryStrategy.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...orchestration/reg/newzk/client/retry/Callable.java | 0% <\u00f8> (\u00f8) | |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...reg/newzk/client/zookeeper/base/BaseOperation.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...reg/newzk/client/zookeeper/section/Connection.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../client/zookeeper/strategy/AsyncRetryStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 75% <0%> (+3.57%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 42.3% <0%> (+3.84%) | :arrow_up: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 621b2f4...dd6ca88. Read the comment docs.\n. # Codecov Report\nMerging #948 into dev will decrease coverage by 0.61%.\nThe diff coverage is 30.03%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #948      +/-\n==========================================\n- Coverage   53.59%   52.98%   -0.62%   \n==========================================\n  Files         565      577      +12   \n  Lines       11831    12114     +283   \n  Branches     1875     1916      +41   \n==========================================\n+ Hits         6341     6418      +77   \n- Misses       5125     5325     +200   \n- Partials      365      371       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...chestration/internal/config/ConfigurationNode.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...sphere/proxy/config/ProxyRawDataSourceFactory.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ation/internal/eventbus/ProxyEventBusInstance.java | 0% <0%> (\u00f8) | |\n| ...aml/representer/ProxyConfigurationRepresenter.java | 0% <0%> (\u00f8) | |\n| ...ml/sharding/YamlShardingStrategyConfiguration.java | 45.65% <0%> (-41.85%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (-18.25%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (-10%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (-6.11%) | :arrow_down: |\n| ...chestration/internal/listener/ListenerFactory.java | 76.19% <0%> (-23.81%) | :arrow_down: |\n| .../internal/state/instance/InstanceStateService.java | 81.81% <0%> (-18.19%) | :arrow_down: |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 99ae970...97048bf. Read the comment docs.\n. # Codecov Report\nMerging #949 into dev will decrease coverage by 0.39%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #949     +/-\n=========================================\n- Coverage   52.96%   52.56%   -0.4%   \n=========================================\n  Files         577      569      -8   \n  Lines       12114    11931    -183   \n  Branches     1916     1882     -34   \n=========================================\n- Hits         6416     6272    -144   \n+ Misses       5328     5296     -32   \n+ Partials      370      363      -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <0%> (+4.76%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 46e8d31...75ac2ee. Read the comment docs.\n. # Codecov Report\nMerging #951 into dev will increase coverage by 0.01%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #951      +/-\n==========================================\n+ Coverage   52.96%   52.98%   +0.01%   \n==========================================\n  Files         577      577            \n  Lines       12114    12114            \n  Branches     1916     1916            \n==========================================\n+ Hits         6416     6418       +2   \n+ Misses       5328     5325       -3   \n- Partials      370      371       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/core/optimizer/insert/InsertOptimizeEngine.java | 79.48% <50%> (\u00f8) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 46e8d31...5f438d4. Read the comment docs.\n. # Codecov Report\nMerging #958 into dev will increase coverage by 0.24%.\nThe diff coverage is 71.9%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #958      +/-\n==========================================\n+ Coverage   52.52%   52.76%   +0.24%   \n==========================================\n  Files         569      579      +10   \n  Lines       11931    12117     +186   \n  Branches     1882     1901      +19   \n==========================================\n+ Hits         6267     6394     +127   \n- Misses       5305     5356      +51   \n- Partials      359      367       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...phere/core/routing/event/AbstractRoutingEvent.java | 0% <0%> (\u00f8) | |\n| ...gsphere/core/merger/event/ResultSetMergeEvent.java | 0% <0%> (\u00f8) | |\n| ...ingsphere/core/routing/event/EventRoutingType.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/core/merger/event/AbstractMergeEvent.java | 0% <0%> (\u00f8) | |\n| ...dingsphere/core/routing/event/SqlRoutingEvent.java | 0% <0%> (\u00f8) | |\n| ...ardingsphere/core/merger/event/EventMergeType.java | 0% <0%> (\u00f8) | |\n| ...sphere/opentracing/config/ConfigurationLoader.java | 87.5% <100%> (+5.68%) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 100% <100%> (\u00f8) | |\n| ...shardingsphere/opentracing/ShardingJDBCTracer.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...a/io/shardingsphere/opentracing/tag/LocalTags.java | 100% <100%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b8332a8...20c67e6. Read the comment docs.\n. # Codecov Report\nMerging #959 into dev will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #959      +/-\n==========================================\n+ Coverage   52.52%   52.54%   +0.02%   \n==========================================\n  Files         569      569            \n  Lines       11931    11934       +3   \n  Branches     1882     1882            \n==========================================\n+ Hits         6267     6271       +4   \n+ Misses       5305     5300       -5   \n- Partials      359      363       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (+2.94%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <0%> (+4.76%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b8332a8...d4e635e. Read the comment docs.\n. # Codecov Report\nMerging #960 into dev will increase coverage by 0.01%.\nThe diff coverage is 46.15%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #960      +/-\n==========================================\n+ Coverage   52.73%   52.75%   +0.01%   \n==========================================\n  Files         579      579            \n  Lines       12120    12136      +16   \n  Branches     1901     1905       +4   \n==========================================\n+ Hits         6392     6402      +10   \n- Misses       5361     5364       +3   \n- Partials      367      370       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLPacketsBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...shardingsphere/core/metadata/ShardingMetaData.java | 2.22% <0%> (-0.28%) | :arrow_down: |\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...shardingsphere/core/merger/MergeEngineFactory.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...re/core/jdbc/core/statement/ShardingStatement.java | 80.67% <100%> (+0.33%) | :arrow_up: |\n| ...shardingsphere/core/merger/dal/DALMergeEngine.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...jdbc/core/statement/ShardingPreparedStatement.java | 83.68% <100%> (+0.23%) | :arrow_up: |\n| ...e/core/merger/dal/show/ShowTablesMergedResult.java | 87.5% <40%> (-8.93%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6b4a463...1a103b4. Read the comment docs.\n. # Codecov Report\nMerging #961 into dev will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #961      +/-\n==========================================\n- Coverage   52.73%   52.67%   -0.06%   \n==========================================\n  Files         579      579            \n  Lines       12120    12130      +10   \n  Branches     1901     1903       +2   \n==========================================\n- Hits         6392     6390       -2   \n- Misses       5361     5374      +13   \n+ Partials      367      366       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6b4a463...83be16e. Read the comment docs.\n. # Codecov Report\nMerging #963 into dev will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #963      +/-\n==========================================\n- Coverage   52.69%   52.67%   -0.03%   \n==========================================\n  Files         579      579            \n  Lines       12146    12149       +3   \n  Branches     1907     1907            \n==========================================\n- Hits         6400     6399       -1   \n- Misses       5376     5380       +4   \n  Partials      370      370\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...backend/common/StatementExecuteBackendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/proxy/backend/common/StatementExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8e429c...8b6f086. Read the comment docs.\n. # Codecov Report\nMerging #964 into dev will increase coverage by 2.2%.\nThe diff coverage is 28.57%.\n\n\n```diff\n@@           Coverage Diff            @@\ndev    #964     +/-\n========================================\n+ Coverage   52.69%   54.9%   +2.2%   \n========================================\n  Files         579     579           \n  Lines       12146   12162     +16   \n  Branches     1907    1908      +1   \n========================================\n+ Hits         6400    6677    +277   \n+ Misses       5376    5089    -287   \n- Partials      370     396     +26\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/UsualClient.java | 58.82% <\u00f8> (+58.82%) | :arrow_up: |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 59.21% <0%> (+59.21%) | :arrow_up: |\n| ...k/client/zookeeper/strategy/SyncRetryStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...stration/reg/newzk/NewZookeeperRegistryCenter.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...newzk/client/zookeeper/base/BaseClientFactory.java | 40% <37.5%> (+40%) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 62.06% <50%> (+62.06%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n| ...e/proxy/backend/common/StatementExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...estration/reg/newzk/client/utility/StringUtil.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8e429c...1a0742c. Read the comment docs.\n. # Codecov Report\nMerging #967 into dev will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev     #967      +/-\n=========================================\n- Coverage   52.7%   52.65%   -0.05%   \n=========================================\n  Files        579      579            \n  Lines      12149    12149            \n  Branches    1907     1907            \n=========================================\n- Hits        6403     6397       -6   \n- Misses      5376     5383       +7   \n+ Partials     370      369       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 89.65% <0%> (-10.35%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3ab25c...08f7d90. Read the comment docs.\n. # Codecov Report\nMerging #968 into dev will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #968      +/-\n=========================================\n- Coverage   54.95%   54.9%   -0.06%   \n=========================================\n  Files         579     579            \n  Lines       12162   12162            \n  Branches     1908    1908            \n=========================================\n- Hits         6684    6677       -7   \n- Misses       5078    5089      +11   \n+ Partials      400     396       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...newzk/client/zookeeper/strategy/UsualStrategy.java | 72.36% <100%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 89.65% <0%> (-10.35%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d99388...2db1174. Read the comment docs.\n. # Codecov Report\nMerging #972 into dev will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #972      +/-\n==========================================\n- Coverage   54.91%   54.88%   -0.04%   \n==========================================\n  Files         579      579            \n  Lines       12162    12173      +11   \n  Branches     1908     1911       +3   \n==========================================\n+ Hits         6679     6681       +2   \n- Misses       5086     5096      +10   \n+ Partials      397      396       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...proxy/backend/common/SQLPacketsBackendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 100% <0%> (+10.34%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f50726...ebad041. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (sharding-proxy-xa-transaction@ba88208). Click here to learn what that means.\nThe diff coverage is 40.61%.\n\n\n```diff\n@@                       Coverage Diff                        @@\nsharding-proxy-xa-transaction     #973   +/-\n================================================================\n  Coverage                                 ?   55.72%         \n================================================================\n  Files                                    ?      585         \n  Lines                                    ?    11992         \n  Branches                                 ?     1883         \n================================================================\n  Hits                                     ?     6682         \n  Misses                                   ?     4910         \n  Partials                                 ?      400\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/UsualClient.java | 58.82% <\u00f8> (\u00f8) | |\n| ...sphere/proxy/config/ProxyRawDataSourceFactory.java | 0% <\u00f8> (\u00f8) | |\n| ...orchestration/reg/newzk/client/retry/Callable.java | 0% <\u00f8> (\u00f8) | |\n| ...here/proxy/backend/resource/ProxyJDBCResource.java | 0% <\u00f8> (\u00f8) | |\n| ...chestration/internal/config/ConfigurationNode.java | 100% <\u00f8> (\u00f8) | |\n| ...oxy/backend/resource/ProxyPrepareJDBCResource.java | 0% <\u00f8> (\u00f8) | |\n| ...dingsphere/proxy/backend/common/ExecuteWorker.java | 0% <0%> (\u00f8) | |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (\u00f8) | |\n| .../client/zookeeper/strategy/AsyncRetryStrategy.java | 0% <0%> (\u00f8) | |\n| ...stration/reg/newzk/NewZookeeperRegistryCenter.java | 0% <0%> (\u00f8) | |\n| ... and 63 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ba88208...e9ef2c0. Read the comment docs.\n. # Codecov Report\nMerging #974 into dev will increase coverage by 0.62%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #974      +/-\n=========================================\n+ Coverage   54.88%   55.5%   +0.62%   \n=========================================\n  Files         579     585       +6   \n  Lines       12173   12096      -77   \n  Branches     1911    1924      +13   \n=========================================\n+ Hits         6681    6714      +33   \n+ Misses       5098    4991     -107   \n+ Partials      394     391       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/proxy/metadata/ProxyShardingRefreshHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...re/proxy/backend/common/ExecuteBackendHandler.java | 0% <0%> (\u00f8) | |\n| ...rdingsphere/proxy/config/XaProxyRawDataSource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/proxy/backend/common/StatementExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLExecuteBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oxy/backend/resource/ProxyJDBCResourceFactory.java | 0% <0%> (\u00f8) | |\n| ...gsphere/proxy/frontend/common/FrontendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...here/proxy/backend/resource/ProxyJDBCResource.java | 0% <0%> (\u00f8) | |\n| ...phere/proxy/backend/resource/BaseJDBCResource.java | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d0eaa53...06231c5. Read the comment docs.\n. # Codecov Report\nMerging #975 into dev will increase coverage by 0.73%.\nThe diff coverage is 23.07%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #975      +/-\n=========================================\n+ Coverage   54.87%   55.6%   +0.73%   \n=========================================\n  Files         579     587       +8   \n  Lines       12176   12021     -155   \n  Branches     1914    1892      -22   \n=========================================\n+ Hits         6681    6684       +3   \n+ Misses       5097    4941     -156   \n+ Partials      398     396       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...zk/client/zookeeper/transaction/ZKTransaction.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...newzk/client/zookeeper/strategy/UsualStrategy.java | 72.36% <\u00f8> (\u00f8) | :arrow_up: |\n| ...hestration/reg/newzk/client/utility/Constants.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...client/zookeeper/provider/TransactionProvider.java | 0% <0%> (\u00f8) | |\n| .../newzk/client/zookeeper/provider/BaseProvider.java | 52.94% <0%> (\u00f8) | |\n| .../newzk/client/zookeeper/strategy/BaseStrategy.java | 50% <0%> (\u00f8) | |\n| .../client/zookeeper/transaction/BaseTransaction.java | 0% <0%> (\u00f8) | |\n| ...zookeeper/strategy/TransactionContendStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...g/newzk/client/zookeeper/section/StrategyType.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/UsualClient.java | 54.54% <25%> (-4.28%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9daf88...a6eef03. Read the comment docs.\n. # Codecov Report\nMerging #977 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #977   +/-\n=======================================\n  Coverage   63.68%   63.68%         \n=======================================\n  Files         498      498         \n  Lines        9792     9792         \n  Branches     1609     1609         \n=======================================\n  Hits         6236     6236         \n+ Misses       3207     3206    -1   \n- Partials      349      350    +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 83.33% <0%> (-16.67%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ff221e6...5b6115d. Read the comment docs.\n. # Codecov Report\nMerging #983 into dev will decrease coverage by 0.23%.\nThe diff coverage is 26.31%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #983      +/-\n==========================================\n- Coverage   55.62%   55.39%   -0.24%   \n==========================================\n  Files         587      634      +47   \n  Lines       12021    12490     +469   \n  Branches     1892     2005     +113   \n==========================================\n+ Hits         6687     6919     +232   \n- Misses       4940     5150     +210   \n- Partials      394      421      +27\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...reg/newzk/client/zookeeper/section/Connection.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../client/zookeeper/transaction/BaseTransaction.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...g/newzk/client/zookeeper/section/StrategyType.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../newzk/client/zookeeper/strategy/BaseStrategy.java | 50% <\u00f8> (\u00f8) | :arrow_up: |\n| ...keeper/operation/DeleteCurrentBranchOperation.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...zk/client/zookeeper/operation/UpdateOperation.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ookeeper/operation/DeleteAllChildrenOperation.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...stration/reg/newzk/client/cache/CacheStrategy.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../newzk/client/zookeeper/section/ClientContext.java | 61.53% <\u00f8> (\u00f8) | :arrow_up: |\n| ...chestration/reg/newzk/client/cache/PathStatus.java | 100% <\u00f8> (+100%) | :arrow_up: |\n| ... and 247 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f07f0a0...3adf903. Read the comment docs.\n. # Codecov Report\nMerging #991 into dev will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #991      +/-\n==========================================\n+ Coverage   54.94%   54.95%   +<.01%   \n==========================================\n  Files         587      587            \n  Lines       12021    12023       +2   \n  Branches     1892     1893       +1   \n==========================================\n+ Hits         6605     6607       +2   \n+ Misses       5021     5019       -2   \n- Partials      395      397       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 1.04% <0%> (-0.02%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (+2.94%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e2f7817...9d33c1f. Read the comment docs.\n. # Codecov Report\nMerging #995 into dev will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #995      +/-\n==========================================\n+ Coverage   54.93%   54.94%   +<.01%   \n==========================================\n  Files         587      587            \n  Lines       12025    12025            \n  Branches     1895     1895            \n==========================================\n+ Hits         6606     6607       +1   \n+ Misses       5024     5020       -4   \n- Partials      395      398       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 89.65% <0%> (-10.35%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (+2.94%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <0%> (+4.76%) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 100% <0%> (+16.66%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 553a21a...a507c3d. Read the comment docs.\n. # Codecov Report\nMerging #996 into dev will decrease coverage by 0.07%.\nThe diff coverage is 55.9%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #996      +/-\n==========================================\n- Coverage   54.93%   54.86%   -0.08%   \n==========================================\n  Files         587      622      +35   \n  Lines       12025    12285     +260   \n  Branches     1895     1951      +56   \n==========================================\n+ Hits         6606     6740     +134   \n- Misses       5020     5131     +111   \n- Partials      399      414      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lect/sqlserver/sql/SQLServerCreateTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...ect/postgresql/sql/PostgreSQLAlterTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...ct/postgresql/sql/PostgreSQLCreateIndexParser.java | 100% <\u00f8> (\u00f8) | |\n| ...ialect/sqlserver/sql/SQLServerDropTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...lect/postgresql/sql/PostgreSQLDropIndexParser.java | 100% <\u00f8> (\u00f8) | |\n| ...rser/dialect/oracle/sql/OracleDropTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...parser/dialect/mysql/sql/MySQLDropTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...er/dialect/oracle/sql/OracleCreateTableParser.java | 100% <\u00f8> (\u00f8) | |\n| .../postgresql/sql/PostgreSQLTruncateTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ...rser/dialect/mysql/sql/MySQLCreateTableParser.java | 100% <\u00f8> (\u00f8) | |\n| ... and 100 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4b09953...0888154. Read the comment docs.\n. # Codecov Report\nMerging #998 into dev will increase coverage by 0.64%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev     #998      +/-\n==========================================\n+ Coverage   54.93%   55.58%   +0.64%   \n==========================================\n  Files         587      645      +58   \n  Lines       12025    12761     +736   \n  Branches     1895     2105     +210   \n==========================================\n+ Hits         6606     7093     +487   \n- Misses       5020     5253     +233   \n- Partials      399      415      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dingsphere/proxy/backend/common/ExecuteWorker.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...sphere/transaction/xa/AtomikosUserTransaction.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/transaction/xa/XaTransactionListener.java | 0% <0%> (\u00f8) | |\n| .../java/io/shardingsphere/core/constant/TCLType.java | 0% <0%> (\u00f8) | |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...c/main/java/io/shardingsphere/proxy/Bootstrap.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ere/core/transaction/event/XaTransactionEvent.java | 0% <0%> (\u00f8) | |\n| ...re/transaction/event/AbstractTransactionEvent.java | 0% <0%> (\u00f8) | |\n| ...tion/internal/config/ConfigMapListenerManager.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ... and 78 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4b09953...0fe005b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@bb3ca5e). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev     #999   +/-\n======================================\n  Coverage       ?   54.86%         \n======================================\n  Files          ?      622         \n  Lines          ?    12288         \n  Branches       ?     1951         \n======================================\n  Hits           ?     6742         \n  Misses         ?     5135         \n  Partials       ?      411\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bb3ca5e...dc14459. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@4506041). Click here to learn what that means.\nThe diff coverage is 4.76%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1005   +/-\n======================================\n  Coverage       ?   54.73%         \n======================================\n  Files          ?      627         \n  Lines          ?    12329         \n  Branches       ?     1949         \n======================================\n  Hits           ?     6748         \n  Misses         ?     5172         \n  Partials       ?      409\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/core/metadata/datasource/DataSourceMetaData.java | 0% <0%> (\u00f8) | |\n| ...type/broadcast/InstanceBroadcastRoutingEngine.java | 0% <0%> (\u00f8) | |\n| ...rce/dialect/SQLServerDataSourceMetaDataParser.java | 0% <0%> (\u00f8) | |\n| ...ce/dialect/PostgreSQLDataSourceMetaDataParser.java | 0% <0%> (\u00f8) | |\n| ...etadata/datasource/ShardingDataSourceMetaData.java | 0% <0%> (\u00f8) | |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | |\n| ...datasource/dialect/H2DataSourceMetaDataParser.java | 0% <0%> (\u00f8) | |\n| ...source/dialect/OracleDataSourceMetaDataParser.java | 0% <0%> (\u00f8) | |\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 81.96% <0%> (\u00f8) | |\n| ...asource/dialect/MySQLDataSourceMetaDataParser.java | 0% <0%> (\u00f8) | |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4506041...7e46d18. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@d4a07d3). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1009   +/-\n======================================\n  Coverage       ?   54.73%         \n======================================\n  Files          ?      633         \n  Lines          ?    12378         \n  Branches       ?     1946         \n======================================\n  Hits           ?     6775         \n  Misses         ?     5192         \n  Partials       ?      411\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d4a07d3...5dfedf4. Read the comment docs.\n. # Codecov Report\nMerging #1012 into dev will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #1012      +/-\n=========================================\n- Coverage   54.7%   54.69%   -0.02%   \n=========================================\n  Files        634      634            \n  Lines      12371    12371            \n  Branches    1947     1947            \n=========================================\n- Hits        6768     6766       -2   \n- Misses      5193     5197       +4   \n+ Partials     410      408       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...shardingsphere/core/jdbc/core/ShardingContext.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 62.85% <0%> (-4.29%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 367cac7...fac3c1f. Read the comment docs.\n. # Codecov Report\nMerging #1013 into dev will increase coverage by 0.09%.\nThe diff coverage is 61.11%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1013      +/-\n==========================================\n+ Coverage   54.73%   54.83%   +0.09%   \n==========================================\n  Files         634      630       -4   \n  Lines       12357    12335      -22   \n  Branches     1945     1944       -1   \n==========================================\n  Hits         6764     6764            \n+ Misses       5181     5161      -20   \n+ Partials      412      410       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...etadata/datasource/ShardingDataSourceMetaData.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../shardingsphere/core/rewrite/SQLRewriteEngine.java | 95.9% <0%> (-0.82%) | :arrow_down: |\n| ...ava/io/shardingsphere/core/rewrite/SQLBuilder.java | 87.09% <100%> (+0.73%) | :arrow_up: |\n| ...ore/parsing/parser/clause/GroupByClauseParser.java | 78.94% <50%> (+0.56%) | :arrow_up: |\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 81.25% <66.66%> (-0.72%) | :arrow_down: |\n| ...e/core/merger/dal/show/ShowTablesMergedResult.java | 90.9% <66.66%> (+3.4%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n| ...e/proxy/backend/common/jdbc/JDBCExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7a84aaa...946efdd. Read the comment docs.\n. # Codecov Report\nMerging #1017 into dev will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1017      +/-\n==========================================\n- Coverage   55.13%   55.08%   -0.05%   \n==========================================\n  Files         630      630            \n  Lines       12285    12287       +2   \n  Branches     1938     1938            \n==========================================\n- Hits         6773     6768       -5   \n- Misses       5098     5107       +9   \n+ Partials      414      412       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/proxy/backend/common/jdbc/JDBCExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hardingsphere/proxy/backend/common/ResultList.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fbe2da5...e16e76c. Read the comment docs.\n. # Codecov Report\nMerging #1018 into dev will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff            @@\ndev   #1018      +/-\n========================================\n+ Coverage   54.9%   54.9%   +<.01%   \n========================================\n  Files        630     630            \n  Lines      12325   12326       +1   \n  Branches    1972    1972            \n========================================\n+ Hits        6767    6768       +1   \n+ Misses      5146    5145       -1   \n- Partials     412     413       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...on/jdbc/statement/JDBCStatementBackendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mon/jdbc/statement/JDBCStatementExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/proxy/backend/common/jdbc/JDBCExecuteWorker.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2980776...0481d94. Read the comment docs.\n. # Codecov Report\nMerging #1019 into dev will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #1019      +/-\n=========================================\n+ Coverage   54.9%   54.93%   +0.03%   \n=========================================\n  Files        630      630            \n  Lines      12325    12325            \n  Branches    1972     1972            \n=========================================\n+ Hits        6767     6771       +4   \n+ Misses      5146     5138       -8   \n- Partials     412      416       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (+2.94%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <0%> (+4.76%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2980776...9ad2f59. Read the comment docs.\n. # Codecov Report\nMerging #1020 into dev will increase coverage by 0.04%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1020      +/-\n==========================================\n+ Coverage   54.93%   54.98%   +0.04%   \n==========================================\n  Files         630      630            \n  Lines       12325    12349      +24   \n  Branches     1972     1976       +4   \n==========================================\n+ Hits         6771     6790      +19   \n- Misses       5142     5144       +2   \n- Partials      412      415       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...c/orchestration/spring/boot/util/PropertyUtil.java | 53.84% <92.3%> (+16.8%) | :arrow_up: |\n| ...dingsphere/jdbc/spring/boot/util/PropertyUtil.java | 53.84% <92.3%> (+16.8%) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 56.75% <0%> (+2.7%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e42a9a...44060da. Read the comment docs.\n. # Codecov Report\nMerging #1024 into dev will decrease coverage by 0.02%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1024      +/-\n=========================================\n- Coverage   54.93%   54.9%   -0.03%   \n=========================================\n  Files         630     630            \n  Lines       12325   12328       +3   \n  Branches     1972    1973       +1   \n=========================================\n- Hits         6771    6769       -2   \n- Misses       5142    5146       +4   \n- Partials      412     413       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arser/clause/expression/BasicExpressionParser.java | 86.79% <66.66%> (-1.21%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e42a9a...c1164c6. Read the comment docs.\n. # Codecov Report\nMerging #1028 into dev will decrease coverage by 0.11%.\nThe diff coverage is 4.65%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1028      +/-\n=========================================\n- Coverage   54.92%   54.8%   -0.12%   \n=========================================\n  Files         632     632            \n  Lines       12372   12396      +24   \n  Branches     1980    1984       +4   \n=========================================\n- Hits         6795    6794       -1   \n- Misses       5159    5187      +28   \n+ Partials      418     415       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...o/shardingsphere/proxy/frontend/ShardingProxy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ket/command/text/fieldlist/ComFieldListPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLPacketsBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ysql/packet/command/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...rdingsphere/proxy/backend/ShardingProxyClient.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...phere/proxy/backend/mysql/MySQLBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...here/core/constant/ShardingPropertiesConstant.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9c28db8...6ae1419. Read the comment docs.\n. # Codecov Report\nMerging #1030 into dev will decrease coverage by 0.02%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1030      +/-\n==========================================\n- Coverage   54.58%   54.56%   -0.03%   \n==========================================\n  Files         635      635            \n  Lines       12452    12454       +2   \n  Branches     1995     1996       +1   \n==========================================\n- Hits         6797     6795       -2   \n- Misses       5236     5243       +7   \n+ Partials      419      416       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/core/optimizer/insert/InsertOptimizeEngine.java | 78.04% <66.66%> (-1.44%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a289d67...93e70b2. Read the comment docs.\n. # Codecov Report\nMerging #1033 into dev will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1033      +/-\n==========================================\n- Coverage   55.44%   55.42%   -0.02%   \n==========================================\n  Files         634      634            \n  Lines       12480    12483       +3   \n  Branches     2004     2004            \n==========================================\n  Hits         6919     6919            \n- Misses       5139     5142       +3   \n  Partials      422      422\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...xecute/memory/ConnectionStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...bc/execute/stream/MemoryStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5e0f676...71985da. Read the comment docs.\n. # Codecov Report\nMerging #1034 into dev will decrease coverage by 0.14%.\nThe diff coverage is 40.57%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1034      +/-\n==========================================\n- Coverage   55.41%   55.27%   -0.15%   \n==========================================\n  Files         634      635       +1   \n  Lines       12483    12520      +37   \n  Branches     2004     2015      +11   \n==========================================\n+ Hits         6918     6920       +2   \n- Misses       5143     5172      +29   \n- Partials      422      428       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...chestration/internal/config/ConfigurationNode.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...on/api/OrchestrationShardingDataSourceFactory.java | 23.07% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...re/jdbc/core/datasource/MasterSlaveDataSource.java | 20% <0%> (-40.87%) | :arrow_down: |\n| ...e/yaml/sharding/YamlShardingRuleConfiguration.java | 63.63% <0%> (\u00f8) | :arrow_up: |\n| .../routing/router/masterslave/MasterSlaveRouter.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 50% <0%> (-33.34%) | :arrow_down: |\n| .../proxy/backend/common/jdbc/JDBCBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...proxy/backend/common/SQLPacketsBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 50% <0%> (-30%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fde8819...1fc469e. Read the comment docs.\n. # Codecov Report\nMerging #1035 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1035      +/-\n=========================================\n- Coverage   55.22%   55.2%   -0.02%   \n=========================================\n  Files         635     635            \n  Lines       12532   12531       -1   \n  Branches     2018    2018            \n=========================================\n- Hits         6921    6918       -3   \n- Misses       5182    5184       +2   \n  Partials      429     429\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...backend/common/jdbc/execute/JDBCExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...o/shardingsphere/proxy/frontend/ShardingProxy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...xecute/memory/ConnectionStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../proxy/frontend/common/executor/ExecutorGroup.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...bc/execute/stream/MemoryStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../io/shardingsphere/proxy/util/ExecutorContext.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2276cd0...dc49530. Read the comment docs.\n. # Codecov Report\nMerging #1037 into dev will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1037      +/-\n==========================================\n- Coverage   55.14%   55.14%   -0.01%   \n==========================================\n  Files         636      636            \n  Lines       12545    12546       +1   \n  Branches     2019     2019            \n==========================================\n  Hits         6918     6918            \n- Misses       5198     5199       +1   \n  Partials      429      429\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...xecute/memory/ConnectionStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3521f02...13158bb. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@963de33). Click here to learn what that means.\nThe diff coverage is 23.07%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1039   +/-\n======================================\n  Coverage       ?   55.11%         \n======================================\n  Files          ?      633         \n  Lines          ?    12551         \n  Branches       ?     2035         \n======================================\n  Hits           ?     6918         \n  Misses         ?     5195         \n  Partials       ?      438\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...stration/internal/config/ConfigurationService.java | 32.94% <0%> (\u00f8) | |\n| ...o/shardingsphere/core/executor/ExecutorEngine.java | 93.67% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 963de33...76eaeb1. Read the comment docs.\n. # Codecov Report\nMerging #1041 into dev will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1041      +/-\n=========================================\n- Coverage   55.11%   55.1%   -0.01%   \n=========================================\n  Files         633     633            \n  Lines       12551   12551            \n  Branches     2035    2035            \n=========================================\n- Hits         6917    6916       -1   \n- Misses       5198    5199       +1   \n  Partials      436     436\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gsphere/core/parsing/lexer/analyzer/Tokenizer.java | 96.26% <100%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 559c96b...52e26c9. Read the comment docs.\n. # Codecov Report\nMerging #1043 into dev will increase coverage by 0.1%.\nThe diff coverage is 90.9%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #1043     +/-\n=========================================\n+ Coverage   55.12%   55.22%   +0.1%   \n=========================================\n  Files         633      633           \n  Lines       12554    12564     +10   \n  Branches     2031     2033      +2   \n=========================================\n+ Hits         6920     6939     +19   \n+ Misses       5196     5181     -15   \n- Partials      438      444      +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/parsing/lexer/dialect/mysql/MySQLKeyword.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...sing/parser/dialect/mysql/sql/MySQLShowParser.java | 36.84% <87.5%> (+36.84%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ...here/core/parsing/parser/sql/SQLParserFactory.java | 67.92% <0%> (+5.66%) | :arrow_up: |\n| ...parsing/parser/sql/dal/show/ShowParserFactory.java | 66.66% <0%> (+66.66%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 54e9da5...f95e6fb. Read the comment docs.\n. # Codecov Report\nMerging #1047 into dev will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1047      +/-\n==========================================\n+ Coverage   55.26%   55.28%   +0.01%   \n==========================================\n  Files         633      633            \n  Lines       12558    12561       +3   \n  Branches     2033     2034       +1   \n==========================================\n+ Hits         6940     6944       +4   \n+ Misses       5174     5172       -2   \n- Partials      444      445       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...c/main/java/io/shardingsphere/proxy/Bootstrap.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 50% <0%> (-16.67%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 100% <0%> (+12%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aed3bda...9816a9e. Read the comment docs.\n. # Codecov Report\nMerging #1049 into dev will increase coverage by 0.05%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1049      +/-\n==========================================\n+ Coverage   55.26%   55.32%   +0.05%   \n==========================================\n  Files         633      633            \n  Lines       12553    12558       +5   \n  Branches     2033     2036       +3   \n==========================================\n+ Hits         6938     6948      +10   \n+ Misses       5172     5164       -8   \n- Partials      443      446       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...va/io/shardingsphere/core/parsing/lexer/Lexer.java | 92.68% <\u00f8> (\u00f8) | :arrow_up: |\n| ...gsphere/core/parsing/lexer/analyzer/Tokenizer.java | 96.36% <100%> (+0.1%) | :arrow_up: |\n| ...sing/lexer/dialect/postgresql/PostgreSQLLexer.java | 80% <50%> (-20%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <0%> (+4.76%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 100% <0%> (+12%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10eeaf0...16dd45b. Read the comment docs.\n. # Codecov Report\nMerging #1050 into dev will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1050      +/-\n==========================================\n+ Coverage   55.28%   55.28%   +<.01%   \n==========================================\n  Files         633      633            \n  Lines       12561    12564       +3   \n  Branches     2037     2037            \n==========================================\n+ Hits         6944     6946       +2   \n- Misses       5171     5172       +1   \n  Partials      446      446\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...jdbc/core/statement/ShardingPreparedStatement.java | 84.13% <100%> (+0.33%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ae89665...c811b6f. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@3c16600). Click here to learn what that means.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1053   +/-\n======================================\n  Coverage       ?   55.31%         \n======================================\n  Files          ?      634         \n  Lines          ?    12567         \n  Branches       ?     2039         \n======================================\n  Hits           ?     6951         \n  Misses         ?     5170         \n  Partials       ?      446\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ere/core/rewrite/placeholder/TablePlaceholder.java | 100% <\u00f8> (\u00f8) | |\n| ...metadata/dialect/MySQLShardingMetaDataHandler.java | 0% <0%> (\u00f8) | |\n| ...sphere/proxy/metadata/ShardingMetaDataHandler.java | 0% <0%> (\u00f8) | |\n| ...bc/metadata/dialect/H2ShardingMetaDataHandler.java | 77.27% <100%> (\u00f8) | |\n| .../shardingsphere/core/rewrite/SQLRewriteEngine.java | 95.9% <100%> (\u00f8) | |\n| ...ava/io/shardingsphere/core/rewrite/SQLBuilder.java | 88.05% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c16600...b3123eb. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@3c16600). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1056   +/-\n======================================\n  Coverage       ?   55.29%         \n======================================\n  Files          ?      634         \n  Lines          ?    12562         \n  Branches       ?     2037         \n======================================\n  Hits           ?     6946         \n  Misses         ?     5173         \n  Partials       ?      443\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ere/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 95.34% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c16600...8de0482. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@3c16600). Click here to learn what that means.\nThe diff coverage is 13.72%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1060   +/-\n======================================\n  Coverage       ?   55.19%         \n======================================\n  Files          ?      642         \n  Lines          ?    12628         \n  Branches       ?     2049         \n======================================\n  Hits           ?     6970         \n  Misses         ?     5213         \n  Partials       ?      445\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/transaction/event/WeakXaTransactionEvent.java | 0% <\u00f8> (\u00f8) | |\n| ...c/main/java/io/shardingsphere/proxy/Bootstrap.java | 0% <\u00f8> (\u00f8) | |\n| ...dbc/core/transaction/WeakXaTransactionManager.java | 68.75% <\u00f8> (\u00f8) | |\n| ...ere/transaction/xa/AtomikosTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...ingsphere/core/transaction/TransactionContext.java | 0% <0%> (\u00f8) | |\n| ...sphere/transaction/xa/AtomikosUserTransaction.java | 0% <0%> (\u00f8) | |\n| ...core/transaction/listener/TransactionListener.java | 0% <0%> (\u00f8) | |\n| ...rdingsphere/proxy/util/ProxyTransactionLoader.java | 0% <0%> (\u00f8) | |\n| ...end/jdbc/transaction/DefaultTransactionEngine.java | 0% <0%> (\u00f8) | |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c16600...54516c7. Read the comment docs.\n. # Codecov Report\nMerging #1061 into dev will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1061      +/-\n=========================================\n+ Coverage   55.23%   55.3%   +0.07%   \n=========================================\n  Files         642     642            \n  Lines       12581   12581            \n  Branches     2036    2036            \n=========================================\n+ Hits         6949    6958       +9   \n+ Misses       5185    5177       -8   \n+ Partials      447     446       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...parsing/parser/sql/dql/select/SelectStatement.java | 87.39% <0%> (+0.84%) | :arrow_up: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 95.65% <0%> (+8.69%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0fd2d35...7adc6e6. Read the comment docs.\n. # Codecov Report\nMerging #1067 into sharding-proxy-xa-transaction will decrease coverage by 0.18%.\nThe diff coverage is 23.34%.\n\n\n```diff\n@@                       Coverage Diff                        @@\nsharding-proxy-xa-transaction   #1067      +/-\n================================================================\n- Coverage                          55.19%     55%   -0.19%   \n================================================================\n  Files                                642     642            \n  Lines                              12628   12657      +29   \n  Branches                            2049    2048       -1   \n================================================================\n- Hits                                6970    6962       -8   \n- Misses                              5213    5247      +34   \n- Partials                             445     448       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/mysql/packet/command/CommandResponsePackets.java | 0% <\u00f8> (\u00f8) | |\n| ...sql/packet/command/query/QueryResponsePackets.java | 0% <\u00f8> (\u00f8) | |\n| .../proxy/backend/netty/ClientHandlerInitializer.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...proxy/backend/netty/mysql/MySQLBackendHandler.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...bc/execute/stream/MemoryStrictlyExecuteEngine.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../io/shardingsphere/core/util/EventBusInstance.java | 0% <\u00f8> (\u00f8) | |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rdingsphere/core/metadata/table/TableMetaData.java | 80% <\u00f8> (\u00f8) | |\n| ...ort/mysql/packet/command/CommandPacketFactory.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <\u00f8> (-11.12%) | :arrow_down: |\n| ... and 145 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 54516c7...f233069. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@c9ca599). Click here to learn what that means.\nThe diff coverage is 7.84%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1068   +/-\n======================================\n  Coverage       ?   54.98%         \n======================================\n  Files          ?      643         \n  Lines          ?    12662         \n  Branches       ?     2048         \n======================================\n  Hits           ?     6962         \n  Misses         ?     5252         \n  Partials       ?      448\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ansaction/common/listener/TransactionListener.java | 0% <\u00f8> (\u00f8) | |\n| ...nsaction/common/event/TransactionEventFactory.java | 0% <\u00f8> (\u00f8) | |\n| ...transaction/api/xa/AtomikosTransactionManager.java | 0% <\u00f8> (\u00f8) | |\n| .../io/shardingsphere/core/util/EventBusInstance.java | 0% <\u00f8> (\u00f8) | |\n| ...ere/transaction/common/event/TransactionEvent.java | 0% <\u00f8> (\u00f8) | |\n| ...e/transaction/common/event/XaTransactionEvent.java | 0% <\u00f8> (\u00f8) | |\n| ...ansaction/common/event/WeakXaTransactionEvent.java | 0% <\u00f8> (\u00f8) | |\n| ...gsphere/transaction/common/TransactionContext.java | 0% <\u00f8> (\u00f8) | |\n| .../transaction/common/TransactionContextFactory.java | 0% <0%> (\u00f8) | |\n| ...on/common/config/JDBCTransactionConfiguration.java | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c9ca599...ea5bdbd. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@d6612b6). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1069   +/-\n======================================\n  Coverage       ?   55.31%         \n======================================\n  Files          ?      641         \n  Lines          ?    12641         \n  Branches       ?     2049         \n======================================\n  Hits           ?     6992         \n  Misses         ?     5199         \n  Partials       ?      450\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommand/query/binary/PreparedStatementRegistry.java | 0% <0%> (\u00f8) | |\n| ...and/query/binary/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d6612b6...c09bbbb. Read the comment docs.\n. # Codecov Report\nMerging #1071 into dev will increase coverage by 0.79%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1071      +/-\n==========================================\n+ Coverage   55.29%   56.09%   +0.79%   \n==========================================\n  Files         641      641            \n  Lines       12642    12624      -18   \n  Branches     2048     2038      -10   \n==========================================\n+ Hits         6991     7081      +90   \n+ Misses       5201     5090     -111   \n- Partials      450      453       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...etadata/datasource/ShardingDataSourceMetaData.java | 100% <100%> (+100%) | :arrow_up: |\n| ...a/datasource/dialect/OracleDataSourceMetaData.java | 90% <100%> (+90%) | :arrow_up: |\n| ...atasource/dialect/SQLServerDataSourceMetaData.java | 90% <100%> (+90%) | :arrow_up: |\n| ...adata/datasource/dialect/H2DataSourceMetaData.java | 90% <100%> (+90%) | :arrow_up: |\n| ...tasource/dialect/PostgreSQLDataSourceMetaData.java | 90% <100%> (+90%) | :arrow_up: |\n| ...ta/datasource/dialect/MySQLDataSourceMetaData.java | 90% <100%> (+6.66%) | :arrow_up: |\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 86.15% <0%> (+6.15%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c25f118...df632c4. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@c9ca599). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1072   +/-\n======================================\n  Coverage       ?   56.04%         \n======================================\n  Files          ?      642         \n  Lines          ?    12632         \n  Branches       ?     2038         \n======================================\n  Hits           ?     7080         \n  Misses         ?     5099         \n  Partials       ?      453\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ery/binary/execute/PreparedStatementParameter.java | 0% <0%> (\u00f8) | |\n| ...ommand/query/binary/PreparedStatementRegistry.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c9ca599...0102382. Read the comment docs.\n. # Codecov Report\nMerging #1075 into dev will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1075      +/-\n==========================================\n- Coverage   56.12%   56.07%   -0.06%   \n==========================================\n  Files         640      640            \n  Lines       12603    12602       -1   \n  Branches     2036     2035       -1   \n==========================================\n- Hits         7074     7066       -8   \n- Misses       5076     5086      +10   \n+ Partials      453      450       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arsing/parser/clause/InsertValuesClauseParser.java | 96.66% <100%> (-0.06%) | :arrow_down: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...al/state/datasource/DataSourceListenerManager.java | 36.66% <0%> (-3.34%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| .../internal/config/ConfigurationListenerManager.java | 54.05% <0%> (-2.71%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b3c308...33129ab. Read the comment docs.\n. # Codecov Report\nMerging #1076 into dev will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1076      +/-\n==========================================\n- Coverage   56.07%   56.07%   -0.01%   \n==========================================\n  Files         636      636            \n  Lines       12560    12561       +1   \n  Branches     2019     2020       +1   \n==========================================\n  Hits         7043     7043            \n- Misses       5069     5070       +1   \n  Partials      448      448\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...d/jdbc/execute/response/ExecuteUpdateResponse.java | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 365b631...e47dbdc. Read the comment docs.\n. # Codecov Report\nMerging #1079 into dev will increase coverage by 0.73%.\nThe diff coverage is 75.39%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1079      +/-\n==========================================\n+ Coverage   56.06%   56.79%   +0.73%   \n==========================================\n  Files         634      636       +2   \n  Lines       12552    12583      +31   \n  Branches     2014     2024      +10   \n==========================================\n+ Hits         7037     7147     +110   \n+ Misses       5070     4981      -89   \n- Partials      445      455      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...tion/reg/newzk/client/election/LeaderElection.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hestration/reg/newzk/client/retry/RetryThread.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...stration/reg/newzk/NewZookeeperRegistryCenter.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathNode.java | 100% <100%> (+55%) | :arrow_up: |\n| ...chestration/reg/newzk/client/utility/PathUtil.java | 44.44% <100%> (-18.06%) | :arrow_down: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 100% <100%> (\u00f8) | |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 65.82% <50%> (\u00f8) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 64.86% <58.82%> (-1.29%) | :arrow_down: |\n| .../newzk/client/zookeeper/provider/BaseProvider.java | 56.41% <62.5%> (+3.46%) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 72.91% <81.81%> (+42.76%) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c42abab...51f9156. Read the comment docs.\n. # Codecov Report\nMerging #1081 into dev will increase coverage by 1.1%.\nThe diff coverage is 32.6%.\n\n\n```diff\n@@            Coverage Diff            @@\ndev    #1081     +/-\n=========================================\n+ Coverage   56.02%   57.12%   +1.1%   \n=========================================\n  Files         636      636           \n  Lines       12564    12572      +8   \n  Branches     2014     2021      +7   \n=========================================\n+ Hits         7039     7182    +143   \n+ Misses       5080     4938    -142   \n- Partials      445      452      +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...etadata/datasource/ShardingDataSourceMetaData.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...c/main/java/io/shardingsphere/proxy/Bootstrap.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/metadata/table/executor/TableMetaDataLoader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...stration/internal/config/ConfigurationService.java | 30.76% <0%> (-2.18%) | :arrow_down: |\n| ...e/routing/type/standard/StandardRoutingEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ng/type/broadcast/TableBroadcastRoutingEngine.java | 89.47% <100%> (\u00f8) | :arrow_up: |\n| .../core/jdbc/core/connection/ShardingConnection.java | 82.75% <100%> (\u00f8) | :arrow_up: |\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 83.82% <55.55%> (-2.34%) | :arrow_down: |\n| ...e/merger/dal/show/ShowCreateTableMergedResult.java | 93.75% <80%> (-0.19%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c778526...147c43c. Read the comment docs.\n. # Codecov Report\nMerging #1084 into dev will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1084      +/-\n==========================================\n- Coverage   57.77%   57.71%   -0.07%   \n==========================================\n  Files         637      637            \n  Lines       12593    12593            \n  Branches     2031     2031            \n==========================================\n- Hits         7276     7268       -8   \n- Misses       4853     4860       +7   \n- Partials      464      465       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gsphere/core/parsing/lexer/dialect/h2/H2Lexer.java | 80% <\u00f8> (\u00f8) | |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 71.35% <0%> (-1.57%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 67.56% <0%> (-1.36%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 94.56% <0%> (-1.09%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8763c6c...3fd8800. Read the comment docs.\n. # Codecov Report\nMerging #1085 into dev will decrease coverage by 0.02%.\nThe diff coverage is 89.28%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1085      +/-\n==========================================\n- Coverage   57.77%   57.75%   -0.03%   \n==========================================\n  Files         637      637            \n  Lines       12593    12589       -4   \n  Branches     2031     2028       -3   \n==========================================\n- Hits         7276     7271       -5   \n- Misses       4853     4856       +3   \n+ Partials      464      462       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gsphere/core/parsing/lexer/dialect/h2/H2Lexer.java | 80% <\u00f8> (\u00f8) | |\n| ...rsing/parser/clause/InsertColumnsClauseParser.java | 95.83% <100%> (+0.08%) | :arrow_up: |\n| ...ng/parser/sql/dml/insert/AbstractInsertParser.java | 91.3% <100%> (+0.39%) | :arrow_up: |\n| ...e/parsing/parser/clause/InsertSetClauseParser.java | 93.18% <85.71%> (+13.18%) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...e/parsing/parser/context/condition/Conditions.java | 54.54% <0%> (-9.1%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 71.35% <0%> (-1.57%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 67.56% <0%> (-1.36%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8763c6c...c8e2e7d. Read the comment docs.\n. # Codecov Report\nMerging #1087 into dev will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1087      +/-\n==========================================\n+ Coverage   57.72%   57.73%   +0.01%   \n==========================================\n  Files         637      637            \n  Lines       12589    12593       +4   \n  Branches     2028     2029       +1   \n==========================================\n+ Hits         7267     7271       +4   \n- Misses       4858     4859       +1   \n+ Partials      464      463       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/execute/stream/MemoryStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...xecute/memory/ConnectionStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 67.56% <0%> (+2.7%) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 100% <0%> (+11.76%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8859798...690a90d. Read the comment docs.\n. # Codecov Report\nMerging #1096 into dev will increase coverage by 0.96%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1096      +/-\n==========================================\n+ Coverage   57.66%   58.63%   +0.96%   \n==========================================\n  Files         636      637       +1   \n  Lines       12610    12616       +6   \n  Branches     2030     2031       +1   \n==========================================\n+ Hits         7272     7397     +125   \n+ Misses       4876     4751     -125   \n- Partials      462      468       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...stration/reg/newzk/client/retry/RetryCallable.java | 91.3% <\u00f8> (+91.3%) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 72.91% <0%> (+1.56%) | :arrow_up: |\n| ...stration/reg/newzk/NewZookeeperRegistryCenter.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...k/client/zookeeper/strategy/SyncRetryStrategy.java | 86.79% <100%> (+86.79%) | :arrow_up: |\n| ...newzk/client/zookeeper/strategy/UsualStrategy.java | 78.75% <66.66%> (+1.11%) | :arrow_up: |\n| ...on/reg/newzk/client/retry/RetryResultCallable.java | 80% <80%> (\u00f8) | |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 68.35% <0%> (+2.53%) | :arrow_up: |\n| .../newzk/client/zookeeper/provider/BaseProvider.java | 64.1% <0%> (+7.69%) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 78.37% <0%> (+10.81%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7485bd6...3c33344. Read the comment docs.\n. # Codecov Report\nMerging #1097 into dev will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1097      +/-\n==========================================\n+ Coverage   57.66%   57.68%   +0.01%   \n==========================================\n  Files         636      636            \n  Lines       12610    12617       +7   \n  Branches     2030     2031       +1   \n==========================================\n+ Hits         7272     7278       +6   \n- Misses       4876     4877       +1   \n  Partials      462      462\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ort/mysql/packet/command/CommandPacketFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ingsphere/proxy/backend/BackendHandlerFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...and/query/binary/execute/ComStmtExecutePacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 72.91% <0%> (+1.56%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 100% <0%> (+11.76%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7485bd6...7aacb34. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@c894fe5). Click here to learn what that means.\nThe diff coverage is 27.27%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1102   +/-\n======================================\n  Coverage       ?   58.67%         \n======================================\n  Files          ?      639         \n  Lines          ?    12604         \n  Branches       ?     2033         \n======================================\n  Hits           ?     7396         \n  Misses         ?     4738         \n  Partials       ?      470\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ere/proxy/frontend/mysql/MySQLFrontendHandler.java | 0% <0%> (\u00f8) | |\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 2.85% <0%> (\u00f8) | |\n| .../proxy/frontend/common/FrontendHandlerFactory.java | 0% <0%> (\u00f8) | |\n| ...o/shardingsphere/proxy/frontend/ShardingProxy.java | 0% <0%> (\u00f8) | |\n| .../proxy/frontend/common/executor/ExecutorGroup.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/proxy/backend/BackendExecutorContext.java | 0% <0%> (\u00f8) | |\n| ...rontend/common/netty/ServerHandlerInitializer.java | 0% <0%> (\u00f8) | |\n| ...here/core/constant/ShardingPropertiesConstant.java | 100% <100%> (\u00f8) | |\n| ...o/shardingsphere/core/executor/ExecutorEngine.java | 93.97% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c894fe5...8dadd1f. Read the comment docs.\n. # Codecov Report\nMerging #1103 into dev will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1103      +/-\n==========================================\n- Coverage   58.66%   58.65%   -0.01%   \n==========================================\n  Files         640      640            \n  Lines       12603    12603            \n  Branches     2031     2031            \n==========================================\n- Hits         7393     7392       -1   \n- Misses       4742     4743       +1   \n  Partials      468      468\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oxy/transport/mysql/packet/MySQLPacketPayload.java | 13.54% <0%> (\u00f8) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 78.37% <0%> (+1.35%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c15b228...b4dfd85. Read the comment docs.\n. # Codecov Report\nMerging #1104 into sharding-jdbc-transaction-saga will decrease coverage by 0.57%.\nThe diff coverage is 0%.\n\n\n```diff\n@@                        Coverage Diff                         @@\nsharding-jdbc-transaction-saga    #1104      +/-\n==================================================================\n- Coverage                           55.33%   54.76%   -0.58%   \n==================================================================\n  Files                                 590      597       +7   \n  Lines                               12079    12209     +130   \n  Branches                             1895     1916      +21   \n==================================================================\n+ Hits                                 6684     6686       +2   \n- Misses                               5000     5127     +127   \n- Partials                              395      396       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/innersaga/mock/SagaTransactionConfiguration.java | 0% <0%> (\u00f8) | |\n| ...transaction/innersaga/api/SagaSoftTransaction.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/transaction/innersaga/mock/CancelSql.java | 0% <0%> (\u00f8) | |\n| ...ion/innersaga/mock/MockSagaTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/transaction/saga/SagaSoftTransaction.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...tion/innersaga/api/SagaSoftTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...ransaction/innersaga/mock/MockSagaTransaction.java | 0% <0%> (\u00f8) | |\n| ...phere/transaction/innersaga/sync/SagaListener.java | 0% <0%> (\u00f8) | |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b2731db...cfebcbe. Read the comment docs.\n. # Codecov Report\nMerging #1106 into sharding-jdbc-transaction-saga will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@                        Coverage Diff                         @@\nsharding-jdbc-transaction-saga    #1106      +/-\n==================================================================\n- Coverage                           54.75%   54.73%   -0.02%   \n==================================================================\n  Files                                 597      597            \n  Lines                               12209    12215       +6   \n  Branches                             1916     1916            \n==================================================================\n+ Hits                                 6685     6686       +1   \n- Misses                               5129     5134       +5   \n  Partials                              395      395\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/innersaga/mock/SagaTransactionConfiguration.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...gsphere/transaction/saga/util/PostSagaRequest.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...phere/transaction/innersaga/sync/SagaListener.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tion/innersaga/api/SagaSoftTransactionManager.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...transaction/innersaga/api/SagaSoftTransaction.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ion/innersaga/mock/MockSagaTransactionManager.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ngsphere/transaction/innersaga/mock/CancelSql.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ransaction/innersaga/mock/MockSagaTransaction.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 654a48a...0e48575. Read the comment docs.\n. # Codecov Report\nMerging #1107 into dev will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1107      +/-\n==========================================\n+ Coverage   58.65%   58.69%   +0.03%   \n==========================================\n  Files         639      639            \n  Lines       12610    12610            \n  Branches     2033     2033            \n==========================================\n+ Hits         7397     7402       +5   \n+ Misses       4745     4738       -7   \n- Partials      468      470       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 94.56% <0%> (-1.09%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 72.91% <0%> (+1.56%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...ngsphere/opentracing/sampling/SamplingService.java | 100% <0%> (+12%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6482843...068e1c7. Read the comment docs.\n. # Codecov Report\nMerging #1108 into dev will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1108      +/-\n==========================================\n- Coverage   58.74%   58.72%   -0.03%   \n==========================================\n  Files         638      638            \n  Lines       12598    12598            \n  Branches     2033     2033            \n==========================================\n- Hits         7401     7398       -3   \n- Misses       4728     4731       +3   \n  Partials      469      469\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...orchestration/reg/newzk/client/cache/PathNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 71.35% <100%> (-1.57%) | :arrow_down: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 94.56% <0%> (-1.09%) | :arrow_down: |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 68.35% <0%> (+5.06%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b3fa4d...050861f. Read the comment docs.\n. # Codecov Report\nMerging #1109 into dev will decrease coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1109      +/-\n==========================================\n- Coverage   58.74%   58.66%   -0.09%   \n==========================================\n  Files         638      638            \n  Lines       12598    12602       +4   \n  Branches     2033     2034       +1   \n==========================================\n- Hits         7401     7393       -8   \n- Misses       4728     4739      +11   \n- Partials      469      470       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...phere/proxy/backend/netty/NettyBackendHandler.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 74.32% <0%> (-4.06%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 71.35% <0%> (-1.57%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b3fa4d...1e7b72a. Read the comment docs.\n. # Codecov Report\nMerging #1110 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1110      +/-\n==========================================\n- Coverage   58.67%   58.65%   -0.02%   \n==========================================\n  Files         638      638            \n  Lines       12589    12588       -1   \n  Branches     2033     2033            \n==========================================\n- Hits         7386     7383       -3   \n- Misses       4735     4737       +2   \n  Partials      468      468\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../client/zookeeper/strategy/ContentionStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...ternal/state/instance/InstanceListenerManager.java | 29.41% <0%> (-2.95%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 94.56% <0%> (-1.09%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 76.81% <0%> (+4.34%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3a14548...269fc5a. Read the comment docs.\n. # Codecov Report\nMerging #1112 into dev will decrease coverage by 0.45%.\nThe diff coverage is 43.68%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1112      +/-\n==========================================\n- Coverage   58.69%   58.24%   -0.46%   \n==========================================\n  Files         638      641       +3   \n  Lines       12588    12697     +109   \n  Branches     2033     2055      +22   \n==========================================\n+ Hits         7389     7395       +6   \n- Misses       4731     4827      +96   \n- Partials      468      475       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/core/executor/type/memory/StreamQueryResult.java | 81.48% <\u00f8> (\u00f8) | |\n| ...core/transaction/event/WeakXaTransactionEvent.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/jdbc/core/datasource/ShardingDataSource.java | 8.92% <0%> (-0.51%) | :arrow_down: |\n| ...e/connection/ConnectionStrictlyExecutorEngine.java | 0% <0%> (\u00f8) | |\n| ...re/executor/type/connection/MemoryQueryResult.java | 0% <0%> (\u00f8) | |\n| ...o/shardingsphere/core/executor/ExecutorEngine.java | 92.06% <100%> (-1.92%) | :arrow_down: |\n| ...utor/type/memory/MemoryStrictlyExecutorEngine.java | 100% <100%> (\u00f8) | |\n| ...dbc/core/transaction/WeakXaTransactionManager.java | 68.75% <100%> (\u00f8) | :arrow_up: |\n| ...e/core/jdbc/adapter/AbstractConnectionAdapter.java | 94.54% <100%> (-0.2%) | :arrow_down: |\n| ...shardingsphere/core/jdbc/core/ShardingContext.java | 88.88% <100%> (+0.65%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f120583...4905b88. Read the comment docs.\n. # Codecov Report\nMerging #1115 into dev will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1115      +/-\n==========================================\n- Coverage   58.22%   58.21%   -0.02%   \n==========================================\n  Files         641      641            \n  Lines       12697    12701       +4   \n  Branches     2055     2055            \n==========================================\n+ Hits         7393     7394       +1   \n- Misses       4831     4835       +4   \n+ Partials      473      472       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/datasource/JDBCRawBackendDataSourceFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...dbc/datasource/JDBCXABackendDataSourceFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 75.36% <0%> (+2.89%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc44564...e31e815. Read the comment docs.\n. # Codecov Report\nMerging #1118 into dev will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1118      +/-\n==========================================\n- Coverage   58.18%   58.14%   -0.05%   \n==========================================\n  Files         641      641            \n  Lines       12701    12717      +16   \n  Branches     2055     2055            \n==========================================\n+ Hits         7390     7394       +4   \n- Misses       4837     4849      +12   \n  Partials      474      474\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dbc/datasource/JDBCXABackendDataSourceFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...bc/datasource/JDBCRawBackendDataSourceFactory.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 75.36% <0%> (-1.45%) | :arrow_down: |\n| ...ng/parser/sql/dql/select/AbstractSelectParser.java | 95.65% <0%> (+1.08%) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 73.29% <0%> (+1.57%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ba23a13...2f8f002. Read the comment docs.\n. # Codecov Report\nMerging #1125 into dev will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1125      +/-\n==========================================\n+ Coverage   57.86%   57.88%   +0.02%   \n==========================================\n  Files         645      645            \n  Lines       12780    12782       +2   \n  Branches     2060     2060            \n==========================================\n+ Hits         7395     7399       +4   \n+ Misses       4911     4909       -2   \n  Partials      474      474\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/core/jdbc/adapter/AbstractConnectionAdapter.java | 94.73% <100%> (+0.19%) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 76.81% <0%> (+1.44%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update edc388f...02db08b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@57c3595). Click here to learn what that means.\nThe diff coverage is 62.96%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1126   +/-\n======================================\n  Coverage       ?   57.88%         \n======================================\n  Files          ?      645         \n  Lines          ?    12782         \n  Branches       ?     2060         \n======================================\n  Hits           ?     7399         \n  Misses         ?     4908         \n  Partials       ?      475\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/CacheClient.java | 0% <0%> (\u00f8) | |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 73.29% <100%> (\u00f8) | |\n| ...ration/reg/newzk/client/zookeeper/UsualClient.java | 66.66% <69.56%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57c3595...bc687bc. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@57c3595). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1129   +/-\n======================================\n  Coverage       ?   57.86%         \n======================================\n  Files          ?      645         \n  Lines          ?    12785         \n  Branches       ?     2060         \n======================================\n  Hits           ?     7398         \n  Misses         ?     4914         \n  Partials       ?      473\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...bc/execute/stream/MemoryStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | |\n| ...xecute/memory/ConnectionStrictlyExecuteEngine.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57c3595...1343e5b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@d7f2b18). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1137   +/-\n======================================\n  Coverage       ?   57.43%         \n======================================\n  Files          ?      669         \n  Lines          ?    12899         \n  Branches       ?     2068         \n======================================\n  Hits           ?     7408         \n  Misses         ?     5020         \n  Partials       ?      471\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...anager/xa/atomikos/AtomikosTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...backend/jdbc/datasource/JDBCBackendDataSource.java | 0% <0%> (\u00f8) | |\n| ...dbc/datasource/JDBCXABackendDataSourceFactory.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d7f2b18...df36682. Read the comment docs.\n. # Codecov Report\nMerging #1138 into dev will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\ndev   #1138      +/-\n=========================================\n+ Coverage   57.49%   57.5%   +<.01%   \n=========================================\n  Files         668     668            \n  Lines       12889   12888       -1   \n  Branches     2068    2068            \n=========================================\n  Hits         7411    7411            \n+ Misses       5008    5006       -2   \n- Partials      470     471       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/core/jdbc/adapter/AbstractConnectionAdapter.java | 92.85% <\u00f8> (-0.13%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 76.81% <0%> (+1.44%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 32.35% <0%> (+2.94%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bfd47bc...4001d24. Read the comment docs.\n. # Codecov Report\nMerging #1139 into dev will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1139      +/-\n==========================================\n- Coverage   57.51%   57.48%   -0.04%   \n==========================================\n  Files         668      668            \n  Lines       12894    12894            \n  Branches     2068     2068            \n==========================================\n- Hits         7416     7412       -4   \n- Misses       5007     5010       +3   \n- Partials      471      472       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/io/shardingsphere/core/rule/ShardingRule.java | 86.15% <100%> (\u00f8) | :arrow_up: |\n| ...on/reg/newzk/client/zookeeper/base/BaseClient.java | 63.29% <0%> (-5.07%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 18fcde4...e3d5cc8. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@9614223). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1142   +/-\n======================================\n  Coverage       ?   58.03%         \n======================================\n  Files          ?      665         \n  Lines          ?    12886         \n  Branches       ?     2068         \n======================================\n  Hits           ?     7479         \n  Misses         ?     4934         \n  Partials       ?      473\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9614223...d3894a6. Read the comment docs.\n. # Codecov Report\nMerging #1146 into dev will increase coverage by 0.05%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1146      +/-\n==========================================\n+ Coverage   57.99%   58.05%   +0.05%   \n==========================================\n  Files         666      664       -2   \n  Lines       12892    12868      -24   \n  Branches     2068     2062       -6   \n==========================================\n- Hits         7477     7470       -7   \n+ Misses       4942     4924      -18   \n- Partials      473      474       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gsphere/core/parsing/parser/context/OrderItem.java | 78.72% <0%> (-13.78%) | :arrow_down: |\n| ...ore/parsing/parser/clause/OrderByClauseParser.java | 82.05% <64.28%> (-11.7%) | :arrow_down: |\n| ...sphere/core/executor/event/EventExecutionType.java | 0% <0%> (-100%) | :arrow_down: |\n| ...o/shardingsphere/core/executor/ExecutorEngine.java | 91.22% <0%> (-0.3%) | :arrow_down: |\n| ...shardingsphere/opentracing/ShardingJDBCTracer.java | 100% <0%> (\u00f8) | :arrow_up: |\n| ...acket/command/query/text/query/ComQueryPacket.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...core/executor/event/AbstractSQLExecutionEvent.java | | |\n| ...gsphere/core/merger/event/ResultSetMergeEvent.java | | |\n| ...shardingsphere/opentracing/MergeEventListener.java | | |\n| ...dingsphere/core/routing/event/SqlRoutingEvent.java | | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2db529...45bb004. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@97568b5). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1149   +/-\n======================================\n  Coverage       ?   58.04%         \n======================================\n  Files          ?      664         \n  Lines          ?    12858         \n  Branches       ?     2061         \n======================================\n  Hits           ?     7463         \n  Misses         ?     4922         \n  Partials       ?      473\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/core/jdbc/adapter/AbstractStatementAdapter.java | 96.82% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 97568b5...e3681c9. Read the comment docs.\n. # Codecov Report\nMerging #1161 into dev will increase coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1161      +/-\n==========================================\n+ Coverage   57.72%   57.75%   +0.03%   \n==========================================\n  Files         659      659            \n  Lines       12819    12821       +2   \n  Branches     2052     2053       +1   \n==========================================\n+ Hits         7400     7405       +5   \n+ Misses       4954     4950       -4   \n- Partials      465      466       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mand/query/binary/execute/BinaryProtocolValue.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...spring/datasource/SpringMasterSlaveDataSource.java | 50% <0%> (-16.67%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 75.36% <0%> (+1.44%) | :arrow_up: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 73.29% <0%> (+1.57%) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 100% <0%> (+11.76%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c35015...1c42231. Read the comment docs.\n. # Codecov Report\nMerging #1162 into dev will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1162      +/-\n==========================================\n+ Coverage   57.72%   57.75%   +0.02%   \n==========================================\n  Files         659      659            \n  Lines       12819    12819            \n  Branches     2052     2053       +1   \n==========================================\n+ Hits         7400     7403       +3   \n+ Misses       4954     4952       -2   \n+ Partials      465      464       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...istener/execution/OverallExecuteEventListener.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ng/listener/execution/SQLExecuteEventListener.java | 95.83% <100%> (+3.83%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...tion/internal/config/ConfigMapListenerManager.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 71.01% <0%> (-2.9%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 73.29% <0%> (+1.57%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 100% <0%> (+11.76%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c35015...548fc0c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@6138029). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1166   +/-\n======================================\n  Coverage       ?   57.61%         \n======================================\n  Files          ?      659         \n  Lines          ?    12716         \n  Branches       ?     2037         \n======================================\n  Hits           ?     7326         \n  Misses         ?     4928         \n  Partials       ?      462\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...istener/execution/OverallExecuteEventListener.java | 100% <\u00f8> (\u00f8) | |\n| ...ng/listener/execution/SQLExecuteEventListener.java | 95.83% <\u00f8> (\u00f8) | |\n| ...va/io/shardingsphere/opentracing/ShardingTags.java | 100% <\u00f8> (\u00f8) | |\n| ...entracing/listener/routing/RouteEventListener.java | 100% <\u00f8> (\u00f8) | |\n| ...pentracing/listener/merger/MergeEventListener.java | 100% <\u00f8> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6138029...0874860. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@b4735e1). Click here to learn what that means.\nThe diff coverage is 26.69%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1167   +/-\n======================================\n  Coverage       ?   57.42%         \n======================================\n  Files          ?      664         \n  Lines          ?    12830         \n  Branches       ?     2046         \n======================================\n  Hits           ?     7368         \n  Misses         ?     4998         \n  Partials       ?      464\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/jdbc/core/connection/ShardingConnection.java | 52.17% <\u00f8> (\u00f8) | |\n| .../core/orche/resultset/CircuitBreakerResultSet.java | 0% <\u00f8> (\u00f8) | |\n| .../core/orche/statement/CircuitBreakerStatement.java | 0% <\u00f8> (\u00f8) | |\n| ...orche/metadata/CircuitBreakerDatabaseMetaData.java | 96.69% <\u00f8> (\u00f8) | |\n| ...ore/orche/datasource/CircuitBreakerDataSource.java | 100% <\u00f8> (\u00f8) | |\n| ...ore/orche/connection/CircuitBreakerConnection.java | 100% <\u00f8> (\u00f8) | |\n| ...che/resultset/CircuitBreakerResultSetMetaData.java | 0% <\u00f8> (\u00f8) | |\n| ...tion/internal/config/ConfigMapListenerManager.java | 61.9% <\u00f8> (\u00f8) | |\n| ...us/state/circuit/CircuitStateEventBusInstance.java | 0% <\u00f8> (\u00f8) | |\n| ...che/statement/CircuitBreakerPreparedStatement.java | 0% <\u00f8> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4735e1...5521f60. Read the comment docs.\n. # Codecov Report\nMerging #1171 into dev will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1171      +/-\n==========================================\n- Coverage   57.46%   57.43%   -0.04%   \n==========================================\n  Files         662      662            \n  Lines       12690    12690            \n  Branches     1991     1991            \n==========================================\n- Hits         7292     7288       -4   \n- Misses       4940     4943       +3   \n- Partials      458      459       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/parsing/parser/clause/WhereClauseParser.java | 88.88% <100%> (\u00f8) | :arrow_up: |\n| ...hestration/reg/newzk/client/cache/PathResolve.java | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 75.36% <0%> (-1.45%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d4511ab...c9eafb3. Read the comment docs.\n. # Codecov Report\nMerging #1178 into dev will decrease coverage by 0.01%.\nThe diff coverage is 16.66%.\n\n\n```diff\n@@            Coverage Diff             @@\ndev    #1178      +/-\n==========================================\n- Coverage   58.54%   58.52%   -0.02%   \n==========================================\n  Files         658      658            \n  Lines       12667    12669       +2   \n  Branches     1991     1991            \n==========================================\n- Hits         7416     7415       -1   \n- Misses       4790     4793       +3   \n  Partials      461      461\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/io/shardingsphere/proxy/config/RuleRegistry.java | 2.08% <0%> (-0.1%) | :arrow_down: |\n| ...ngsphere/proxy/listener/ProxyListenerRegister.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ore/routing/strategy/ShardingAlgorithmFactory.java | 33.33% <0%> (\u00f8) | :arrow_up: |\n| ...c/main/java/io/shardingsphere/proxy/Bootstrap.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...shardingsphere/core/jdbc/core/ShardingContext.java | 62.96% <100%> (\u00f8) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 66.66% <0%> (-11.12%) | :arrow_down: |\n| ...orchestration/reg/newzk/client/cache/PathTree.java | 71.72% <0%> (-1.58%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 76.81% <0%> (+2.89%) | :arrow_up: |\n| ...ternal/state/instance/InstanceListenerManager.java | 38.46% <0%> (+3.84%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7b8d2c7...10c6ffd. Read the comment docs.\n. \n",
    "yehaihuakai": "\u597d\u7684\uff0c\u8c22\u8c22. ",
    "tom2jd": "\u67e5\u8be2\u5230\u4ece\u5e93\u53bb\u4e86. ",
    "moccanism": "\u7279\u522b\u8bf4\u660e\u4e00\u4e0b\uff1a\n1\u3001tb_mch_account_info_log\u8868\u5e76\u6ca1\u6709\u5206\u8868\uff1b\n2\u3001yml\u91cc\u9762\u662f\u53e6\u5916\u4e00\u5f20\u8868\u914d\u7f6e\u4e86\u5206\u8868\uff0c\u8fd9\u4e2acase\u4e2d\u6ca1\u6709\u6d89\u53ca\u5230\u8fd9\u4e2a\u5206\u8868\uff0c\u5355\u7eaf\u5bf9tb_mch_account_info_log\u8fdb\u884cinsert. ",
    "olderzhou": "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c2.0.1\u7684\u7248\u672c\uff0c\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u554a. \u6211\u4f7f\u7528\u7684\u7248\u672c\u662f  \uff1a2.0.1\n\u5e0c\u671b\u53ef\u4ee5\u652f\u6301\u52a8\u6001\u6dfb\u52a0\u6570\u636e\u6e90\n. \u8fd9\u662f\u5206\u9875\u7528\u7684\u5440\uff0ccount\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u540e\u9762select\u662f\u6709\u95ee\u9898\u7684\uff0c\u611f\u89c9\u548c\u6bcf\u4e2a\u8868\u505a\u4e86\u7b1b\u5361\u5c14\u79ef\u4e00\u6837. \u662f\u4e00\u81f4\u7684\uff0c\u6309\u7167\u903b\u8f91\u8868\u7684\u8d70\u67e5\u8be2\u7ed3\u679c\u662f\u4e00\u6761\uff0c\u5b9e\u9645\u7a0b\u5e8f\u8fd4\u56de5\u6761\uff0c\u56e0\u4e3a\u5206\u8868\u662f5\u4e2a\uff0c\u611f\u89c9\u8fd9\u4e2a\u662f\u6709\u70b9\u95ee\u9898\u7684\n\n\n\n. \n. config:\n      sharding:\n        #\u9ed8\u8ba4\u5206\u5e93\u7b56\u7565\n        default-database-strategy:\n          inline:\n            sharding-column: app_id\n            algorithm-expression: ds_${10004..10005}\n      binding-tables:\n          t_session_info,\n          t_session_info_ext\n        #\u5206\u5e93\u5206\u8868\u914d\u7f6e\uff0c\u53ef\u914d\u7f6e\u591a\u4e2alogic_table_name\n       tables:\n           t_session_info:\n            actual-data-nodes: ds_${10004..10005}.t_session_info_${0..4}\n            database-strategy:\n              inline:\n                sharding-column: app_id\n                algorithm-expression: ds_${app_id}\n            table-strategy:\n              inline:\n                sharding-column: channel\n                algorithm-expression: t_session_info_${channel}\n            key-generator-column-name: id\n          t_session_info_ext:\n            actual-data-nodes: ds_${10004..10005}.t_session_info_ext_${0..4}\n            database-strategy:\n              inline:\n                sharding-column: app_id\n                algorithm-expression: ds_${app_id}\n            table-strategy:\n              inline:\n                sharding-column: channel\n                algorithm-expression: t_session_info_ext_${channel}\n            key-generator-column-name: id\nddl\uff1a\nCREATE TABLE t_session_info_ext_1 (\n    id BIGINT(20) NOT NULL AUTO_INCREMENT,\n    app_id INT(11) NOT NULL  ,\n    channel INT(11) NULL DEFAULT NULL,\n    last_update_timestamp BIGINT(20) NULL DEFAULT NULL,\n    service_id VARCHAR(100) NULL DEFAULT NULL,\n    session_id VARCHAR(100) NULL DEFAULT NULL,\n    session_type VARCHAR(100) NULL DEFAULT NULL,\n    session_stage VARCHAR(100) NULL DEFAULT NULL ,\n    end_type VARCHAR(50) NULL DEFAULT NULL ,\n    evaluation_status TINYINT(4) NULL DEFAULT '0',\n    evaluation VARCHAR(500) NULL DEFAULT NULL,\n    evaluation_text VARCHAR(500) NULL DEFAULT NULL ,\n    evaluation_tags VARCHAR(500) NULL DEFAULT NULL ,\n    quality_standard_score VARCHAR(500) NULL DEFAULT NULL ,\n    quality_add_score VARCHAR(500) NULL DEFAULT NULL ,\n    quality_comment VARCHAR(500) NULL DEFAULT NULL ,\n    remark VARCHAR(4000) NULL DEFAULT NULL  ,\n    extends_info VARCHAR(4000) NULL DEFAULT NULL,\n    PRIMARY KEY (id),\n    INDEX session_id (session_id)\n)\nCOLLATE='utf8mb4_general_ci'\nENGINE=InnoDB\nAUTO_INCREMENT=153475303384023041\n;\nCREATE TABLE t_session_info_1 (\n    id BIGINT(20) NOT NULL AUTO_INCREMENT,\n    app_id INT(11) NOT NULL ,\n    channel INT(11) NOT NULL DEFAULT '0',\n    date_sign INT(11) NULL DEFAULT NULL ,\n    session_id VARCHAR(100) NULL DEFAULT NULL ,\n    user_id VARCHAR(100) NULL DEFAULT NULL ,\n    user_ip VARCHAR(50) NULL DEFAULT NULL ,\n    user_address VARCHAR(100) NULL DEFAULT NULL ,\n    start_time BIGINT(20) NULL DEFAULT NULL ,\n    PRIMARY KEY (id),\n    INDEX session_id (session_id),\n    INDEX user_id (user_id),\n    INDEX date_sign (date_sign)\n)\nCOLLATE='utf8mb4_general_ci'\nENGINE=InnoDB\nAUTO_INCREMENT=153475302507413505\n;\n. INSERT INTO t_session_info_1 VALUES (153474391911432192, 10067, 1, 20171229, '10067_10000_1514520226', '12312', '127.0.0.1', 'localhost', 1514520746234);\nINSERT INTO t_session_info_1 VALUES (153475264976781312, 10067, 1, 20171229, '10067_10000_15145202261', '12313', NULL, NULL, 1514520954438);\nINSERT INTO t_session_info_1 VALUES (153475288699764736, 10067, 1, 20171229, '10067_10000_15145202262', '12314', NULL, NULL, 1514520960063);\nINSERT INTO t_session_info_1 VALUES (153475294160748544, 10067, 1, 20171229, '10067_10000_15145202263', '12315', NULL, NULL, 1514520961408);\nINSERT INTO t_session_info_1 VALUES (153475296568279040, 10067, 1, 20171229, '10067_10000_15145202264', '12316', NULL, NULL, 1514520961993);\nINSERT INTO t_session_info_1 VALUES (153475300238295040, 10067, 1, 20171229, '10067_10000_15145202265', '12317', NULL, NULL, 1514520962802);\nINSERT INTO t_session_info_1 VALUES (153475302507413504, 10067, 1, 20171229, '10067_10000_15145202266', '12318', NULL, NULL, 1514520963414);\nINSERT INTO t_session_info_ext_1 VALUES (153475289781895168, 10067, 1, 1514520960377, '23429', '10067_10000_15145202261', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475295083495424, 10067, 1, 1514520961638, '23428', '10067_10000_15145202262', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475297587494912, 10067, 1, 1514520962206, '23427', '10067_10000_15145202263', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475019840684032, 10067, 1, 1514520746574, '234226', '10067_10000_15145202264', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475266268626944, 10067, 1, 1514520954680, '23425', '10067_10000_15145202265', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475301333008384, 10067, 1, 1514520963084, '23424', '10067_10000_15145202266', NULL, NULL, 'user-end', 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\nINSERT INTO t_session_info_ext_1 VALUES (153475303384023040, 10067, 1, 1514520963621, '23423', '10067_10000_1514520226', '3242', '234', 'user-end', 0, '234', '324', '234', '2342', '234234', '234234', '234234', '23424');\n. \u8fd9\u4e2a\u95ee\u9898\u786e\u5b9e\u4f1a\u53d1\u751f\uff0c\u5373\u5e76\u53d1update\u4f1a\u5bfc\u81f4lock \u7b49\u5f85\u8d85\u65f6\uff0c\u76ee\u524d\u4f7f\u7528\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5148delete\uff0c\u7136\u540eupdate. \u6211\u4e4b\u524d\u662f\u8fd9\u6837\u5904\u7406\u7684\uff0c\u540e\u6765\u591a\u6b21\u6d4b\u8bd5\u4e5f\u6ca1\u51fa\u95ee\u9898\u4e86\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\uff0c\u611f\u89c9delete\u7684\u8bdd\u6548\u7387\u63d0\u9ad8\u4e86\u4e5f\u5c31\u4e0d\u81f3\u4e8e\u7b49\u5f85\u4e86\uff0c\u4ece\u800c\u907f\u514d\u9501\u8868. \u662f\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u8c8c\u4f3c\u5e76\u6ca1\u6709\u4fee\u590d\uff0c\u6700\u65b0\u7248\u672c\u540c\u6837\u5b58\u5728. \u8fd9\u4e2a\u95ee\u9898\u662f\u7531\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u65f6\u5019\u53d1\u751f\u7684\uff0c\u5373\u4fe9\u53f0\u5e94\u7528\u670d\u52a1\u5668\u90fd\u6709\u90e8\u7f72. yaml\u652f\u6301\u6362\u884c\u7684\ncnak\n\u53c2\u8003http://www.ruanyifeng.com/blog/2016/07/yaml.html?f=tt\n\u7531\u4e8e\u6362\u884c\u4f1a\u8f6c\u6362\u4e3a\u7a7a\u683c\uff0c\u6240\u4ee5\u5904\u7406\u8fc7\u7a0b\u4f1a\u51fa\u9519\n.     \n        ALTER TABLE t_order\n        ADD COLUMN order_no VARCHAR(50) NULL COMMENT 'order no , seq rule: random(10)+timestamp' AFTER status;\n</update>\n\n@terrymanu \u770b\u5230\u4f60\u7684\u56de\u590d\u5f88\u5f00\u5fc3\uff0c\u5e0c\u671b\u8fd9\u4e2asharding-jdbc\u8d8a\u6765\u8d8a\u597d\u3002. \u4f60\u7684\u5206\u6790\u662f\u5bf9\u7684\uff0c\u5f02\u5e38\u4fe1\u606f\u5e94\u8be5\u662f\u4fe9\u6b21\u6267\u884c\u4e86\uff0c\u4f46\u662f\u6211\u4e4b\u524d\u672c\u5730\u914d\u7f6e\u7684\u8bfb\u5199\u5b9e\u9645\u662f\u540c\u4e00\u4e2a\u6570\u636e\u6e90\uff0c\u56e0\u6b64\u4e5f\u53d1\u751f\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002\n\u800c\u540e\u6211\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6267\u884c\u6210\u529f\u540e\uff0c\u68c0\u67e5\u6570\u636e\u5e93\uff0c\u786e\u5b9eslave\u4e5f\u66f4\u65b0\u4e86\u8868\u7ed3\u6784\uff0c\u8fd9\u4e2a\u4e0d\u662f\u671f\u671b\u7684. \n\u4ecesqlyuj\u8bed\u53e5\u770b\u4e5f\u662fmaster && slave\u90fd\u6709\u6267\u884c\u66f4\u65b0\u8868\u7ed3\u6784\u7684. \u4f60\u597d\uff0c\u5e76\u975e\u62a5\u9519\uff0c\u662f\u903b\u8f91\u95ee\u9898\uff0cddl\u8bed\u53e5\u4e0d\u5e94\u8be5\u5728slave\u6570\u636e\u6e90\u6267\u884c. \u6267\u884c\u5b8cinit\u540e\u5462\uff0cmaster\uff0cslave\u90fd\u6709\u521b\u5efatables. \u540c\u6837\u7684\u6267\u884c  alterTableOrder  \u4e5f\u540c\u65f6\u66f4\u65b0\u4e86salve\u5e93\u91cc\u9762\u7684table\uff0c\u7406\u8bba\u4e0a\uff0cslave\u5e94\u8be5\u53ea\u6709dql\u8bed\u53e5\u624d\u4f1a\u6267\u884c. @terrymanu \u6211\u4e5f\u65e0\u8bdd\u53ef\u8bf4\u4e86\uff0c\u8fd9\u91cc\u786e\u5b9e\u662f\u6709\u95ee\u9898\u7684\uff0c\u5e76\u975e\u6211\u53cd\u590d\u63d0\u4ea4\u7ed9\u4f60\u4eec\u627e\u4e8b\u513f\uff0c\u5927\u5bb6\u7684\u65f6\u95f4\u90fd\u662f\u5b9d\u8d35\u7684\uff0c\u6211\u4e5f\u771f\u5fc3\u5e0c\u671b\u8fd9\u4e2a\u8f6f\u4ef6\u53ef\u4ee5\u505a\u5230\u66f4\u597d~. @haocao \u6709\u6ca1\u6709\u6267\u884cDDL\u8bed\u53e5\uff0c\u770b\u4e00\u4e0b\u6570\u636e\u6709\u6ca1\u6709\u5efa\u7acbtables\u5c31\u77e5\u9053\u4e86\u5440\uff0c\u63a7\u5236\u53f0\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\n. @terrymanu sharding-sphere base on the parent pom ,\nhere i use \n\nio.shardingsphere\nsharding-jdbc-orchestration-spring-boot-starter\n${sharding-sphere.version}\n. \u6211\u8fd9\u8fb9\u6d4b\u8bd5\u7684\u7ed3\u679c\u96c6\uff0c\nrun-local   \u8fde\u63a5\u65709\nrun-local2 \u8fde\u63a5\u657026\nrun-local3 \u7ec3\u6280\u672f54\n\u591a\u6b21\u8fd0\u884c\uff0c\u8fde\u63a5\u6570\u8fd8\u4f1a\u52a8\u6001\u53d8\uff0c\u4f46\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u6570\u636e\u91cf\u7ea7\n. \u5b9e\u9645\u662f\u8fd9\u6837\u7684\uff0c\u6700\u5c0f\u94fe\u63a5\u6570\u662f1\uff0c\n\u8fd0\u884c\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\uff0crun-local \uff0c \u67e5\u770b\u8fde\u63a5\u6570\u662f9\n\u8fd0\u884c\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\uff0crun-local2 \uff0c\u67e5\u770b\u8fde\u63a5\u657026\u3010\u6b64\u65f6\u5b9e\u4f8b1\u4e0e\u5b9e\u4f8b2\u540c\u65f6\u8fd0\u884c\u3011\n\u8fd0\u884c\u7b2c\u4e09\u4e2a\u5b9e\u4f8b\uff0crun-local3 \uff0c\u67e5\u770b\u8fde\u63a5\u657054\u3010\u6b64\u65f6\u5b9e\u4f8b1,2,3\u540c\u65f6\u8fd0\u884c\u3011\n\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u4ee3\u7801\u590d\u73b0\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f100%\u590d\u73b0\u7684. @tuohai666 \n\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u5f53\u6211\u5206\u5e03\u5f0f\u8fd0\u884c\u591a\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u6570\u636e\u6e90\u8fde\u63a5\u6570\u4f1a\u66b4\u589e\u3002\n\u5047\u8bbe\u6211\u914d\u7f6e\u7684\u8fde\u63a5\u8bcd\u662f\u4e00\u4e3b\u4fe9\u4ece\uff0c\u6211\u793a\u4f8b\u4e2d\u9700\u8981\u94fe\u63a5\u7684\u4fe9\u4e2a\u5e93\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u8fde\u63a5\u6570\uff0c\u5f53\u8fd0\u884c\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u5e94\u8be5\u662f6\uff0c\u8fd0\u884c\u4fe9\u4e2a\u5b9e\u4f8b\u662f\u65f6\u5019\u5e94\u8be5\u662f12\uff0c\u4e09\u4e2a\u5219\u662f18\uff0c\u5b9e\u9645\u60c5\u51b5\u662f\u8fde\u63a5\u6570\u4f1a\u8fdc\u591a\u4e8e\u8fd9\u4e2a\u3002\nhttps://github.com/olderzhou/netty-test/blob/master/run.sh\n\u8fd9\u662f\u4f60\u8bf4\u7684\u627e\u4e0d\u5230\u7684\u811a\u672c\n./run.sh  local\n./run.sh local1\n./run.sh local2\n\u4f60\u53ef\u4ee5\u8fd9\u6837\u8fd0\u884c\uff0c\u8fd0\u884c\u524d\u4f60\u9700\u8981\u770b\u4e00\u4e0b\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u8def\u5f84\u914d\u7f6e\u53ef\u80fd\u8ddf\u4f60\u672c\u5730\u73af\u5883\u4e0d\u592a\u4e00\u81f4\n. \n@tuohai666 \u7533\u8bf7\u5566\uff0cklaus\uff0c\u9700\u8981\u540c\u610f\u4e0b\n. Let's hope this day coming soon. i got 3 datasource , default has tables t_emp,\nds-0 ; order, order_item\nds-1 ; order, order_item\nand i set ddl-auto to create, then i run application, everything's fine, then i change ddl-auto to validate, now , i got exception says Table 't_emp' already exists\n. sharding:\n  jdbc:\n    datasource:\n      names: ds-master-0,ds-master-1,ds-master-0-slave-0,ds-master-0-slave-1,ds-master-1-slave-0,ds-master-1-slave-1,ds-default\n      ds-master-0:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_0?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      ds-master-0-slave-0:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_0_slave_0?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      ds-master-0-slave-1:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_0_slave_1?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      ds-master-1:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_1?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      ds-master-1-slave-0:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_1_slave_0?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      ds-master-1-slave-1:\n        type: com.zaxxer.hikari.HikariDataSource  \n        driver-class-name: com.mysql.jdbc.Driver\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_master_1_slave_1?useSSL=false\n        username: root\n        password: 123456\n        max-active: 3\n      #\u7cfb\u7edf\u9ed8\u8ba4\u72ec\u7acb\u6570\u636e\u6e90\n      ds-default:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true\n        username: root\n        password: 123456\n        minimum-idle: 1\n        maximum-pool-size: 30\n        auto-commit: true\n        idle-timeout: 60000\n        max-lifetime: 1800000\n        connection-timeout: 60000\n    config:\n      sharding:\n        default-data-source-name: ds-default\ndefault-key-generator-class-name: io.shardingsphere.core.keygen.DefaultKeyGenerator\n    default-database-strategy:\n      inline:\n        sharding-column: user_id\n        algorithm-expression: ds-$->{user_id % 2}\n    binding-tables: \n    tables:\n      t_emp:\n        actual-data-nodes: ds-default.t_emp\n        key-generator-column-name: eid\n      t_order:\n        actual-data-nodes: ds-$->{0..1}.t_order_$->{0..1}\n        table-strategy: \n          inline: \n            sharding-column: order_id\n            algorithm-expression: t_order_$->{order_id % 2}\n        database-strategy:\n          inline:\n            sharding-column: user_id\n            algorithm-expression: ds-$->{user_id % 2}\n        key-generator-column-name: order_id\n      t_order_item:\n        actual-data-nodes: ds-$->{0..1}.t_order_item_$->{0..1}\n        table-strategy: \n          inline: \n            sharding-column: order_id\n            algorithm-expression: t_order_item_$->{order_id % 2}\n        database-strategy:\n          inline:\n            sharding-column: user_id\n            algorithm-expression: ds-$->{user_id % 2}\n        key-generator-column-name: order_item_id\n    master-slave-rules:\n      ds-0:\n        master-data-source-name: ds-master-0\n        slave-data-source-names: ds-master-0-slave-0, ds-master-0-slave-1\n      ds-1:\n        master-data-source-name: ds-master-1\n        slave-data-source-names: ds-master-1-slave-0, ds-master-1-slave-1\n    props:\n      sql:\n        show: true\n  orchestration:\n    name: demo_spring_boot_ds_share_kafka\n    type: SHARDING\n    overwrite: false\n    zookeeper:\n      namespace: orchestration-spring-boot-share-kafka\n      server-lists: 192.168.0.3:2181. \u5176\u5b9e\u4e3b\u8981\u662f\u7531\u4e8eDDL-AUTO\u5c5e\u6027\u51b3\u5b9a\uff0ccreate\u7684\u65f6\u5019\u4f1a\u5220\u6389\u5df2\u5b58\u5728\u7684\u8868\uff0c\u6240\u4ee5\u4e00\u5207\u90fdok\uff0cvalidate\u7684\u65f6\u5019\u4f1a\u53bb\u6821\u9a8c\u8868\u7ed3\u6784\uff0c\u4f46\u662f\u6211\u611f\u89c9\u6821\u9a8c\u7684\u65f6\u5019\u5bf9\u6570\u636e\u6e90\u5e94\u7528\u89c4\u5219\u51fa\u73b0\u95ee\u9898\u4e86\uff0ccreate\uff0cnone\u90fd\u662f\u6ca1\u95ee\u9898\u7684\uff0cupdate\uff0cvalidate\u5747\u4f1a\u62a5\u9519.\n",
    "lishoufu": "\u6211\u60f3\u8981\u5b9e\u73b0\u7684\u6548\u679c\u662f:  sharding_0, sharding_1\u6709\u5f20\u8868t_type, \u63d2\u5165\u8bb0\u5f55\u65f6,\u5f80\u8fd92\u4e2a\u8868\u540c\u65f6\u6dfb\u52a0\u8bb0\u5f55\uff0c\u800c\u4e0d\u662f\u53ea\u5f80\u9ed8\u8ba4\u6570\u636e\u6e90\u52a0\n. \u57281.5.41\u4e0a\u627e\u5230\u4e86\u89e3\u51b3\u65b9\u6848\uff0c\u5b9e\u73b0\u4e86\u5c0f\u8868\u590d\u5236\u7684\u529f\u80fd. ",
    "Frodez": "@hwck \n\u9ebb\u70e6\u60a8\u4e86\uff0c\u4e07\u5206\u611f\u8c22\u3002\n\u8fd9\u662fsharding-jdbc\u7ed3\u5408spring-boot\u7684\u4f8b\u5b50\uff1ahttps://github.com/shardingjdbc/sharding-jdbc-example/tree/dev/sharding-jdbc-spring-boot-example/sharding-jdbc-spring-boot-data-mybatis-example\n\u7136\u540e\u8fd9\u4e2a\u4f8b\u5b50\u4e0b\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u662fhttps://github.com/shardingjdbc/sharding-jdbc-example/blob/dev/sharding-jdbc-spring-boot-example/sharding-jdbc-spring-boot-data-mybatis-example/src/main/resources/application-sharding.properties\n\u6211\u518d\u622a\u53d6\u4e00\u4e0b\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u4ee3\u7801\uff1a\nsharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds_${user_id % 2}\n\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u5b9e\u73b0\u6a212\u7b97\u6cd5\u6240\u7528\u7684\u662f\u8868\u8fbe\u5f0f\u3002\u4f46\u662f\u5982\u679c\u6211\u60f3\u901a\u8fc7\u5b9e\u73b0ShardingAlgorithm\u7684\u63a5\u53e3\u6765\u5b9e\u73b0\u7b97\u6cd5\u7684\u8bdd\uff0c\u80fd\u591f\u5728\u8fd9\u91cc\u5b9e\u73b0\u914d\u7f6e\u5417\uff1f\n  . ",
    "xxmfypp": "\u4e0d\u5e0c\u671b\u5f15\u5165etcd\u548czookeeper\u52a8\u6001\u914d\u7f6e\uff0c\u80fd\u5426\u652f\u6301\u914d\u7f6e\u4e00\u4e2ajava\u7c7b\uff0c\u901a\u8fc7java\u7c7b\u7684\u65b9\u6cd5\u751f\u6210\u771f\u5b9e\u8868\u540d\u5217\u8868\uff0c\u8bbe\u7f6e\u7ed9ActualDataNodes\u5c5e\u6027. ",
    "zz111333": "shardingJdbcVersion 2.0.0\nmybatis-3.4.1\nmybatis-spring-1.3.0\nmysql-connector-java-5.1.31\ndruid-1.0.18\n\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\n\u65e0\u6cd5\u5220\u9664\u548c\u63d2\u5165\ndebug \u5230com.mysql.jdbc.PreparedStatement execute()\u65b9\u6cd5\u65f6\nconnection \u548c originalSql\u90fd\u662f\u6309\u7167\u6b63\u786e\u7684\u5206\u5e93\u5206\u8868\u7b56\u7565\u4ea7\u751f\u7684\n\u5728\u63d2\u5165\u6570\u636e\u65f6\nthis.lastInsertId = rs.getUpdateID(); \u7684\u7ed3\u679c\u4e5f\u662f\u6b63\u786e\u7684\u5e93\u8868\u4e2d\u5e94\u8be5\u4ea7\u751f\u7684\u81ea\u589e\u5e8f\u5217\u53f7\nDataSource bean \u4ee3\u7801\n   Map<String, DataSource> dataSourceMap = new HashMap<>();\n        for (int n = 1; n <= dbCount; n++) {\n            DruidDataSource source = new DruidDataSource();\n\n/\nDruidDataSource \u7684\u57fa\u672c\u53c2\u6570\n    initialSize(\"20\"),    minIdle(\"5\"),    maxActive(\"100\"),    maxWait(\"60000\"),     \n    timeBetweenEvictionRunsMillis(\"60000\"),    minEvictableIdleTimeMillis(\"300000\"),\n    validationQuery(\"SELECT 'x'\"),    testWhileIdle(\"true\"),    testOnBorrow(\"false\"),\n    queryTimeout(\"30\"), DefaultAutoCommit(false)\n/\n            //BasicDataSource source = new BasicDataSource();\n            source.setDriverClassName(com.mysql.jdbc.Driver.class.getName());\n            source.setUrl(String.format(connectionConfig.getShardingDbUrl(),\n                    n, connectionConfig.getShardingDbPort() + n, n));\n            source.setUsername(connectionConfig.getShardingDbUser());\n            source.setPassword(connectionConfig.getShardingDbPassword());\n            dataSourceMap.put(DB_NAME + \"_\" + n, source);\n        }\n\n        TableRuleConfiguration rule_Order = new TableRuleConfiguration();\n        rule_Order.setLogicTable(\"order\");\n        rule_Order.setActualDataNodes(String.format(\"%s_${1..%s}.order_${0..99}\", DB_NAME, dbCount));\n\n        ShardingRuleConfiguration ruleConfig = new ShardingRuleConfiguration();\n        //\u6dfb\u52a0\u89c4\u5219\u914d\u7f6e\n        ruleConfig.getTableRuleConfigs().add(rule_Order);\n\n        //\u5206\u5e93\u7b56\u7565\n        ruleConfig.setDefaultDatabaseShardingStrategyConfig(\n                new StandardShardingStrategyConfiguration(\"order_id\", PreciseDatabaseAlgorithm.class.getName()));\n        //\u5206\u8868\u7b56\u7565\n        ruleConfig.setDefaultTableShardingStrategyConfig(\n                new StandardShardingStrategyConfiguration(\"order_id\", PreciseTableAlgorithm.class.getName()));\n\n        return ShardingDataSourceFactory.createDataSource(dataSourceMap, ruleConfig, Maps.newHashMap(), new Properties());\n\ndebug\u8bb0\u5f55\n2018-01-05 11:23:45,306 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Creating a new SqlSession\n2018-01-05 11:23:45,318 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286] was not registered for synchronization because synchronization is not active\n2018-01-05 11:23:45,374 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Fetching JDBC Connection from DataSource\n2018-01-05 11:23:45,375 [main] DEBUG o.m.s.t.SpringManagedTransaction KEY[] - JDBC Connection [io.shardingjdbc.core.jdbc.core.connection.ShardingConnection@7b377a53] will not be managed by Spring\n2018-01-05 11:23:45,380 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - ==>  Preparing: insert into order ( order_id, main_order_id, user_id, seller_id, order_status, total_price, payable_amount, auto_cancel_hour, logistics_type, address_id, presale, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now(), now() ) \n2018-01-05 11:23:45,407 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - ==> Parameters: 981104(Long), 761104(Long), 111104(Long), 3383(Long), 1(Integer), 100.00(BigDecimal), 0.00(BigDecimal), 0.25(BigDecimal), 8(Integer), 11111(Long), false(Boolean)\n2018-01-05 11:23:48,854 [falcon-Perf_Upload_Thread] DEBUG c.y.falcon.client.util.MetricUploadUtils KEY[] - need upload metric size:0\n2018-01-05 11:23:52,130 [falcon-Perf_Upload_Thread] DEBUG c.y.falcon.client.util.MetricUploadUtils KEY[] - need upload metric size:0\n2018-01-05 11:23:52,130 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - <==    Updates: 1\n2018-01-05 11:23:52,130 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]\n2018-01-05 11:23:52,130 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Returning JDBC Connection to DataSource\n2018-01-05 11:23:52,133 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Creating a new SqlSession\n2018-01-05 11:23:52,133 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c8ee48] was not registered for synchronization because synchronization is not active\n2018-01-05 11:23:52,133 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Fetching JDBC Connection from DataSource\n2018-01-05 11:23:52,133 [main] DEBUG o.m.s.t.SpringManagedTransaction KEY[] - JDBC Connection [io.shardingjdbc.core.jdbc.core.connection.ShardingConnection@7845b21a] will not be managed by Spring\n2018-01-05 11:23:52,134 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - ==>  Preparing: insert into order ( order_id, main_order_id, user_id, seller_id, order_status, total_price, payable_amount, auto_cancel_hour, logistics_type, address_id, presale, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now(), now() ) \n2018-01-05 11:23:52,134 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - ==> Parameters: 982203(Long), 762203(Long), 112203(Long), 3383(Long), 1(Integer), 200.00(BigDecimal), 0.00(BigDecimal), 0.25(BigDecimal), 8(Integer), 11111(Long), false(Boolean)\n2018-01-05 11:23:54,148 [main] DEBUG c.y.t.i.d.s.m.O.insertSelective KEY[] - <==    Updates: 1\n2018-01-05 11:23:54,148 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c8ee48]\n2018-01-05 11:23:54,148 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Returning JDBC Connection to DataSource\n2018-01-05 11:23:54,157 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Creating a new SqlSession\n2018-01-05 11:23:54,158 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d717f19] was not registered for synchronization because synchronization is not active\n2018-01-05 11:23:54,169 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Fetching JDBC Connection from DataSource\n2018-01-05 11:23:54,169 [main] DEBUG o.m.s.t.SpringManagedTransaction KEY[] - JDBC Connection [io.shardingjdbc.core.jdbc.core.connection.ShardingConnection@71f0806b] will not be managed by Spring\n2018-01-05 11:23:54,169 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - ==>  Preparing: select * from order WHERE ( order_id in ( ? , ? ) ) \n2018-01-05 11:23:54,169 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - ==> Parameters: 981104(Long), 982203(Long)\n2018-01-05 11:24:00,777 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - <==      Total: 0\n2018-01-05 11:24:00,778 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d717f19]\n2018-01-05 11:24:00,778 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Returning JDBC Connection to DataSource\n2018-01-05 11:24:00,779 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Creating a new SqlSession\n2018-01-05 11:24:00,779 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5b7d7e] was not registered for synchronization because synchronization is not active\n2018-01-05 11:24:00,780 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Fetching JDBC Connection from DataSource\n2018-01-05 11:24:00,780 [main] DEBUG o.m.s.t.SpringManagedTransaction KEY[] - JDBC Connection [io.shardingjdbc.core.jdbc.core.connection.ShardingConnection@13cc31ae] will not be managed by Spring\n2018-01-05 11:24:00,780 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - ==>  Preparing: select * from order WHERE ( order_id in ( ? , ? ) ) \n2018-01-05 11:24:00,780 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - ==> Parameters: 981104(Long), 982203(Long)\n2018-01-05 11:24:10,705 [main] DEBUG c.y.t.i.d.s.m.O.selectByExample KEY[] - <==      Total: 0\n2018-01-05 11:24:10,705 [main] DEBUG org.mybatis.spring.SqlSessionUtils KEY[] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5b7d7e]\n2018-01-05 11:24:10,705 [main] DEBUG o.s.jdbc.datasource.DataSourceUtils KEY[] - Returning JDBC Connection to DataSource\n[]\n[]\n  . \u65e0\u6cd5commit\u7684\u539f\u56e0\u662fdefaultAutoCommit\u9ed8\u8ba4\u914d\u7f6e\u662ftrue,\u6539\u4e3afalse\u5219\u65e0\u6cd5\u81ea\u52a8commit.\n\u4f46\u5728\u4f7f\u7528\u5355\u6570\u636e\u6e90\u548cmybatis-sptring,\u5982\u679c\u4ecedatasource\u53d6autocommit\u4e3afalse\u65f6,mybatis\u4ecd\u7136\u4f1acommit\u7684.\nmybatis\u5b9e\u73b0\u5982\u4e0b.\n//mybatis-spring-1.3.0   SpringManagedTransaction\n  @Override\n  public void commit() throws SQLException {\n    if (this.connection != null && !this.isConnectionTransactional && !this.autoCommit) {\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"Committing JDBC Connection [\" + this.connection + \"]\");\n      }\n      this.connection.commit();\n    }\n  }\nprivate void openConnection() throws SQLException {\n    this.connection = DataSourceUtils.getConnection(this.dataSource);\n    this.autoCommit = this.connection.getAutoCommit();\n    this.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(this.connection, this.dataSource);\n  }\n\u4f7f\u7528sharding-jdbc\u65f6,\u7531\u4e8e\u5728openConnection()\u5e76\u4e0d\u662f\u521b\u5efa\u7684datasource\u914d\u7f6e\u7684\u503c,\u800c\u662f\nio.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter\n\u5176\u4e2dgetAutoCommit()\u662f\u9ed8\u8ba4true,\u6240\u4ee5mybatis\u5c31\u65e0\u6cd5\u81ea\u52a8commit.\n\u8bf7\u95ee\u600e\u4e48\u6837\u80fd\u8ba9datasource\u7684defaultAutoCommit\u4e3afalse\u751f\u6548?\n\u8c22\u8c22\n. ",
    "f-zhao": "\u8fd9\u4e2a\u6211\u8fd9\u8fb9\u5df2\u7ecf\u5b9e\u73b0\uff0c\u4f46\u662f\u573a\u666f\u6bd4\u8f83\u5355\u4e00\uff0c\u662f\u57fa\u4e8espring\u7684\u914d\u7f6e\uff0c\u901a\u7528\u6027\u4e0d\u662f\u5f88\u597d. \u6211\u5728\u4f7f\u7528otter\u8fdb\u884c\u6570\u636e\u540c\u6b65sharding-jdbc\u65f6\uff0c\u4e5f\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u95ee\u9898\u3002otter\u4e2d\u7684\u66f4\u65b0\u8bed\u53e5\u662fINSERT INTO TABLE A ON DUPLICATE\u3002\u3002\u3002\u51fa\u73b0\u5927\u91cf\u7684\u6b7b\u9501\u3002otter\u7684\u673a\u5236\u4e5f\u662f\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u95ee\u9898\u4f1a\u7ecf\u5e38\u51fa\u73b0\uff0c\u5373\u4f7f\u5e26\u4e0a\u5206\u7247\u952e\uff0c\u540c\u6837\u7684\u4e5f\u4f1a\u51fa\u73b0\u6b7b\u9501. ",
    "maxiaoguang64": "\u73b0\u72b6\uff1a\n\u76ee\u524d\u901a\u8fc7factory\u521b\u5efadatasource\u9700\u8981\u672c\u5730\u914d\u7f6e\uff0c\u5982\u679c\u672c\u5730\u4e0d\u5b58\u5728\u914d\u7f6e\u6587\u4ef6\u521b\u5efadatasource\u65f6\u4f1a\u629b\u7a7a\u6307\u9488\u5f02\u5e38\n\u63d0\u8bae\uff1a\n1\u3001\u521b\u5efadatasource\u53ef\u4ee5\u4e0d\u4f20\u5165sharding rule\uff0cdata sources\u7b49\u4fe1\u606f\n2\u3001\u5728OrchestrationFacade\u7684init\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4ece\u914d\u7f6e\u4e2d\u5fc3\u52a0\u8f7d\u914d\u7f6e\u7684\u903b\u8f91\n3\u3001\u5982\u679c\u672c\u5730\u914d\u7f6e\u548c\u4ece\u6ce8\u518c\u4e2d\u5fc3\u52a0\u8f7d\u7684\u914d\u7f6e\u4e0d\u4e00\u6837\u89e6\u53d1datasource\u7684renew\u65b9\u6cd5. \u5173\u4e8eExecutorEngine\u7684close\u65b9\u6cd5\n\u5efa\u8bae\u5148\u8c03\u7528shutdown\u65b9\u6cd5\u7b49\u5f85\u5df2\u7ecf\u5165\u961f\u7684\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\n\u7136\u540e\u8c03\u7528awaitTermination\u65b9\u6cd5\u7b49\u5f85\u4e00\u5b9a\u65f6\u95f4\n\u5982\u679c\u7b49\u5f85\u7ed3\u675f\u6216\u51fa\u73b0\u5f02\u5e38\u8c03\u7528shutdownNow\u5e76\u5904\u7406\u5bf9shutdownNow\u8fd4\u56de\u7684\u672a\u6267\u884c\u7684\u4efb\u52a1\u7684\u5904\u7406\n\u4ee5\u4e0a\u6267\u884c\u540e\u8fd8\u662f\u6ca1\u6709\u5173\u95ed\u7684\u629b\u51faShardingJdbcException\uff08\u629b\u5f02\u5e38\u7684\u540c\u65f6\u8fd8\u8981\u521b\u5efa\u7ebf\u7a0b\u7528\u6765\u5173\u95edExecutorEngine\u4ee5\u53ca\u91cd\u65b0\u521b\u5efaExecutorEngine\u6765\u5904\u7406\u540e\u7eed\u4efb\u52a1\uff09\n\u5176\u4e2d\u7b49\u5f85\u65f6\u95f4\u548c\u662f\u5426\u8c03\u7528shutdownNow\u5efa\u8bae\u589e\u52a0\u914d\u7f6e\u4ea4\u7ed9\u4f7f\u7528\u8005\u6765\u51b3\u5b9a. I want to do something for sj. \u539f\u6765readableBytes > payloadLength\u5c31\u4f1a\u628abytebuf\u4ea4\u7ed9handler\u5904\u7406\n\u5f53readableBytes >payloadLength\u7684\u65f6\u5019\u5176\u5b9e\u662f\u5b58\u5728\u7c98\u5305\u95ee\u9898\u7684\uff0c\u6240\u4ee5\u5728\u5904\u7406bytebuf\u7684\u65f6\u5019\u4e0d\u80fd\u5c06\u5168\u90e8\u5b57\u8282\u8bfb\u5b8c\n\u4f46\u662fhandler\u4e2d\u4f7f\u7528\u4e86MySQLPacketPayload\u7c7b\u7684readStringEOF\u65b9\u6cd5\u5982\u4e0b\npublic String readStringEOF() {\n        byte[] result = new byte[byteBuf.readableBytes()];\n        byteBuf.readBytes(result);\n        return new String(result);\n}\n\u8fd9\u4e2a\u65b9\u6cd5\u8bfb\u53d6\u4e86\u6240\u6709\u53ef\u8bfb\u6570\u636e\uff0c\u5bfc\u81f4\u7c98\u5305\u95ee\u9898\u7684\u51fa\u73b0. \u73b0\u5728\u5224\u65ad\u4e86readableBytes > payloadLength\u7684\u65f6\u5019\u5c31\u4f1a\u5c06bytebuf\u622a\u53d6\u51fa\u6765\u4e00\u4e2aframe\u6765\u4ea4\u7ed9handler\u5904\u7406\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u591a\u8bfb\u53d6\u4e0d\u5e94\u8be5\u8bfb\u53d6\u7684\u7c98\u5305\u5b57\u8282\u4e86. you can use hint to avoid it. I don't agree to do it, because use hint to do will be better. agree, yes, +1. @weiduan  please give me a full sql, i will help you. @weiduan \nok\uff0crepeats ten times is correct.\nin sharding parser this sql will change to\nWHERE business_id = ? AND member_discount = 1\nOR business_id = ? AND order_discount = 1\nOR business_id = ? AND order_derate = 1\nOR business_id = ? AND order_derate_zero = 1\nOR business_id = ? AND item_member_discount = 1\nOR business_id = ? AND order_promotion = 1\nOR business_id = ? AND coupon_promotion = 1\nOR business_id = ? AND order_bargain = 1\nOR business_id = ? AND timed_item_discount = 1\nOR business_id = ? AND x_discount = 1 )\nwhy you look shardingConditions size is 10!\nin doSharding work the ten shardingConditions will to doSharding\n\u82f1\u6587\u6349\u6025\u4ee5\u4e0b\u4e3a\u4e2d\u6587\nsql\u89e3\u6790\u9636\u6bb5\n\u5c06OR\u7528\u7c7b\u4f3c\u4e58\u6cd5\u5206\u914d\u5f8b\u7684\u65b9\u6cd5\u89e3\u6790\n\u6240\u4ee5\u4f1a\u51fa\u73b010\u4e2aOR\u6761\u4ef6\u4e5f\u5c31\u662f10\u4e2asharidngConditions\n\u8def\u7531\u9636\u6bb5\n\u5206\u522b\u5bf910\u4e2aOR\u6761\u4ef6\u8def\u7531\u7136\u540e\u5c06\u8def\u7531\u7ed3\u679c\u53bb\u5e76\u96c6\u4ee5\u4e0a\u770b\u5230\u867d\u7136doSharding\u6267\u884c\u4e8610\u6b21\u4f46\u662f\u6700\u7ec8\u6267\u884csql\u7684\u65f6\u5019\u53ea\u4f1a\u53bbbusiness_id = ?\u7684\u5206\u7247\u53bb\u6267\u884c\n\u5173\u4e8e\u89e3\u6790\u540e\u7684Conditions\n\u91c7\u7528\u7684\u662fList>\u7684\u7ed3\u6784\nList\u4ee3\u8868\u7684\u662f\u6267\u884c\u4e86\u7c7b\u4f3c\u4e58\u6cd5\u5206\u914d\u5f8b\u7684\u89e3\u6790\u4e4b\u540e\u7684business_id = ? AND member_discount = 1\u5176\u4e2d\u5df2\u7ecf\u4e0d\u5305\u542b\u4e86OR\n\u591a\u4e2aList\u7ec4\u6210\u4e86List>\u6bcf\u4e2aList>\u4e4b\u95f4\u7684\u5173\u7cfb\u662fOR\n. @weiduan it is so hard, we possible merge it in future. Thank you, it is fix in 3.0.0.M2\n. I use 3.0.0.M1 throw Exception in thread \"main\" io.shardingsphere.core.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'REPLACE'.\nPlease use insert into ... on duplicate key update instead of replace into. @hanchao5272 \nsorry, if sql like(replace into table(order_id, user_id) values (1, 2))\nsharding strategy user_id % 2\norder_id is primary key\nuser_id is sharding column\norigin data is order_id = 1, user_id = 1\nwhen replace execute set user_id = 2, but data only in user_id = 1 logic table\n\u4ee5\u4e0b\u4e2d\u6587\n\u4e0a\u8ff0sql\u539f\u6765\u6570\u636e\u5b58\u653e\u5728user_id = 1\u7684\u5206\u7247\u4e0a\nreplace\u6267\u884c\u540euser_id = 2\u4f46\u662f\u6570\u636e\u8fd8\u5b58\u653e\u5728user_id = 1\u7684\u5206\u7247\u4e0a\n\u6240\u4ee5\u5982\u679css\u53bb\u5b9e\u73b0replace\u53ea\u80fd\u8bb2\u4e00\u6761sql\u62c6\u5206\u6210\u591a\u79cd\u60c5\u51b5\u5904\u7406\u751a\u81f3\u6709\u53ef\u80fd\u62c6\u5206\u6210delete\u548cinsert\u6211\u60f3\u8fd9\u5c06\u5f97\u4e0d\u507f\u5931. We are not going to do anything that is likely to cause ambiguity, Thanks.. Please provide the reproduce example codes (such as a github link).. Thank you for your issue, but it is not ss bug, please add maxEvictableIdleTimeMillis to druid config. This mybatis interceptor is around execute sql in ss, please check mybatis interceptor config. I won't to fix after careful consideration\nl don't think it possible that use placeholder in update clause\nusually, we use insert ... update like this\n1\u3001insert into table (name, version) values (?, ?) on duplicate key update version = version + 1\n2\u3001insert into table (name) values (?), (?) on duplicate key update version = values(name)\n. @dawe001 please provider an exception stack. @dawe001 OK, like this 878\nplease use 3.0.0.M2. @dawe001  download master code and package it. @dawe001 in 3.0.0.M1 i can not reappear, please give me a demo. @dawe001  actually bug is (SQL syntax error, expected token is 'EQ', actual token is 'BANG_EQ', literals is '!='.)\njava\n      if (lexerEngine.skipIfEqual(DefaultKeyword.ON)) {//keyword on\n            do {\n                basicExpressionParser.parse(sqlStatement);\n                lexerEngine.accept(Symbol.EQ);  //only support equal\n                basicExpressionParser.parse(sqlStatement);\n            } while (lexerEngine.skipIfEqual(DefaultKeyword.AND));\n        } else if (lexerEngine.skipIfEqual(DefaultKeyword.USING)) {\n            lexerEngine.skipParentheses(sqlStatement);\n        }. @dawe001 There is no plan at the moment\nYou can use (like != in) after where. @AIKiller   please give me a sql for insert ... update, thanks. agree, yes, +1. l test this, but no problem\n\nplease provider your proxy version and other useful detail\n. +1. Thank you, you are right.\nlike issue\nWhy sharding-sphere can't support this?\n1\u3001It will increase the complexity of the code(multi insert parameters splits)\n2\u3001You can use VALUES(column) instead of it\n3\u3001We are developing antlr sql parser. when this is done, we will redesign parser engine. @RogerLuoZJ  yes, like issue. ok, thank you. 1.l use generator key to support insert on broadcast table,because database's auto increment strategy is not to ensure data consistency.\n2.Logic table name may not be appropriate,it is used to record which tables are broadcast tables.. please see 1066. sorry, we think about it carefully and get back to you later..  @joooohnli we decided to fix it in antlr parser engine, possible in 4.0.0. ",
    "zhangyy3": "\u662f2\u4e2a\u95ee\u9898\n1. \u4e0d\u652f\u6301blob\n2. text \u6620\u5c04\u6210\u4e86blob,\u8fd9\u4e2a\u95ee\u9898\u4e0d\u786e\u5b9a\u662f\u54ea\u4e2a\u73af\u8282\u7684\u95ee\u9898\u3002\u5f85\u6392\u67e5\uff0csharding jdbc, mysql driver, mybatis, druid. ",
    "wangfeng-shaw": "\u597d\u5427 \u6211\u7528last_insert_id\u89e3\u51b3\u4e86. ",
    "bestwu": "\u6ca1\u6709\u8986\u76d6\u5b8c\u6240\u6709\u914d\u7f6e\uff0c\u4fee\u6539\u540e\u91cd\u65b0\u63d0\u4ea4\u4e86. \njava\nprivate void setDataSourceMap(final Environment environment) {\n        RelaxedPropertyResolver propertyResolver = new RelaxedPropertyResolver(environment, \"sharding.jdbc.datasource.\");\n        String dataSources = propertyResolver.getProperty(\"names\");\n        for (String each : dataSources.split(\",\")) {\n            try {\n                Map<String, Object> dataSourceProps = propertyResolver.getSubProperties(each + \".\");\n                Preconditions.checkState(!dataSourceProps.isEmpty(), \"Wrong datasource properties!\");\n                DataSource dataSource = DataSourceUtil.getDataSource(dataSourceProps.get(\"type\").toString(), dataSourceProps);\n                dataSourceMap.put(each, dataSource);\n            } catch (final ReflectiveOperationException ex) {\n                throw new ShardingJdbcException(\"Can't find datasource type!\", ex);\n            }\n        }\n    }\n\u56e0\u4e3aDataSource\u6ca1\u6709\u786e\u5b9a\u7684\u7c7b\u578b,\u65e0\u6cd5\u786e\u5b9a\u5bf9\u5e94\u5c5e\u6027\uff0c\u4e0d\u7b26\u5408spring-configuration-metadata\u7684\u914d\u7f6e\u89c4\u5219\u3002\u597d\u50cf\u505a\u4e0d\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u4ee3\u7801\u63d0\u793a\u3002. IDE\u63d0\u793a\u8d77\u505a\u7528\u7684\u662fspring-configuration-metadata.json\u6587\u4ef6\u3002\u9879\u76ee\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u5408\u5e76additional-spring-configuration-metadata.json\u548c\u81ea\u52a8\u751f\u6210\u7684\u5185\u5bb9\u751f\u6210spring-configuration-metadata.json\u6587\u4ef6\u3002\n\u76ee\u524d\u7684additional-spring-configuration-metadata.json\u5e76\u6ca1\u6709\u5305\u542b\u81ea\u52a8\u751f\u6210\u7684\u5185\u5bb9\u3002. \u5bf9\u4e8e\u4e00\u4e9badditional-spring-configuration-metadata.json\u4e2d\u7684\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u7c7b\u4e2d\u52a0 @NestedConfigurationProperty\u81ea\u52a8\u751f\u6210\uff0c\u4f46\u8fd9\u6837\u505a\u8981\u5728\u57fa\u7840\u9879\u76ee\uff08sharding-jdbc-core\u3001sharding-jdbc-orchestration\uff09\u4e2d\u52a0spring-boot-starter\u4f9d\u8d56\u3002\u6211\u6ca1\u6709\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4ee5\u907f\u514d\u4fee\u6539\u57fa\u7840\u9879\u76ee\u3002\n```java\n/\n * Orchestration configuration for yaml.\n \n * @author caohao\n /\n@Getter\n@Setter\npublic class YamlOrchestrationConfiguration {\nprivate String name;\n@NestedConfigurationProperty\nprivate EtcdConfiguration etcd;\n@NestedConfigurationProperty\nprivate ZookeeperConfiguration zookeeper;\n\n```. All configuration properties are not covered. ",
    "crisLotus": "\u8fd9\u4e2a\u95ee\u9898\u6211\u81ea\u5df1\u5df2\u7ecf\u627e\u5230\u539f\u56e0\u4e86\u3002\u611f\u8c22 @haocao \n\u539f\u56e0\u5982\u4e0b\uff1a\n\u5728\u8fdb\u884cdefault-data-source-name\u8bbe\u7f6e\u7684\u65f6\u5019\uff0c\u9700\u8981\u786e\u4fdddata-source-names\u4e5f\u9700\u5c06\u9ed8\u8ba4\u6570\u636e\u6e90\u914d\u7f6e\u5176\u4e2d\uff0cdata-source-names\u4e00\u5b9a\u662f\u6570\u636e\u6e90\u7684\u5168\u91cf\u3002\n\u56e0\u4e3a\u5728TableReferencesClauseParser\u89e3\u6790\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u5982\u4e0b\u5339\u914d\u8fc7\u7a0b\uff1a\nshardingRule.getDataSourceMap().containsKey(shardingRule.getDefaultDataSourceName())\n\n\u5efa\u8baehttp://shardingjdbc.io/docs/02-guide/configuration/\u4e2d\u5bf9data-source-names\u8fdb\u884c\u5f3a\u8c03\u8bf4\u660e\u4e00\u4e0b\u6b64\u70b9\uff0c\u4ee5\u9632\u540e\u7eed\u5927\u5bb6\u8bef\u914d\u3002\n. ",
    "zhouxianrongtest": "sharding\uff1a1.5.4.1\nmysql 5.7\nibatis\n\u6bd4\u5982\u8ba2\u5355\u4e1a\u52a1\u5206\u4e86100\u5f20\u8868\uff0c\u4ee5\u8ba2\u5355id\u4f5c\u4e3a\u5206\u7247\u89c4\u5219\uff0c\u4f46\u662f\u73b0\u5728\u6267\u884c\nupdate order  set field = value  where id = 1;\ndelete order where id = 1;\n\u8fd9\u6837\u5c31\u4f1a\u904d\u5386100\u5f20\u8868, \u5e76\u4e14\u628a\u8868\u4e2did =1 \u7684\u8bb0\u5f55\u5168\u90e8\u66f4\u65b0. \u4e0d\u7b26\u5408\u9884\u671f\uff0c\u80fd\u4e0d\u80fd\u6709\u4ec0\u4e48\u65b9\u6cd5\u5728\u68c0\u67e5\u5230\u8fd9\u4e2aupdate  or delete\u662f\u4ee5id\u4f5c\u4e3awhere\u6761\u4ef6\u6216\u8005 sql(statmentUnit)> 1 \u65f6throw Exception.\n\u770b\u4e86\u6e90\u7801ShardingPreparedStatement\u4e4b\u540e\uff0c\nprivate Collection route() throws SQLException {\n        Collection result = new LinkedList<>();\n        routeResult = routingEngine.route(getParameters());\n        for (SQLExecutionUnit each : routeResult.getExecutionUnits()) {\n            SQLType sqlType = routeResult.getSqlStatement().getType();\n            Collection preparedStatements;\n            if (SQLType.DDL == sqlType) {\n                preparedStatements = generatePreparedStatementForDDL(each);\n            } else {\n                preparedStatements = Collections.singletonList(generatePreparedStatement(each));\n            }\n            routedStatements.addAll(preparedStatements);\n            for (PreparedStatement preparedStatement : preparedStatements) {\n                replaySetParameter(preparedStatement);\n                result.add(new PreparedStatementUnit(each, preparedStatement));\n            }\n        }\n        return result;\n    }\n\u8fd9\u4e2a\u65b9\u6cd5\u611f\u89c9\u53ef\u4ee5\u4f5c\u4e00\u4e2a\u4fee\u6539\uff0c\u4f46\u662f\u6b64\u4e3a\u4e3afinal\uff0c \u4e0d\u80fd\u91cd\u8f7d. \u6309\u6b63\u786e\u5e94\u8be5\u662f  updateByOrderId or deleteByOrderId\uff0c \u4f46\u662f\u6015\u8bef\u5199\u4ee3\u7801\u5199\u6210\u4e86  updateById or deleteById\uff0c \u4f1a\u9020\u6210\u6570\u636e\u7834\u574f\u95ee\u9898. \u95ee\u9898\u7c7b\u4f3c:https://github.com/apache/incubator-shardingsphere/issues/213\n\u4f46\u662f\u5982\u679c\u6211\u628aB\u6570\u636e\u6e90\u58f0\u660e\u4e3a@primary\uff0c\u90a3\u4e48\u6d4b\u8bd5B\u5e93\u7684\u4e8b\u52a1\u56de\u6eda\u5c31\u6ca1\u6709\u95ee\u9898. AbstractConnectionAdapter.setAutoCommit(). Use Spring-Boot to build the project.. Now a little emergency, could you give some good solution?. Bug Fixed:\nBecause used @Primary so the DB A TransactionManager will be used always when insert to DB B, now we need assign the TransactionManager declear by manual.\nfor example:\n@Transactional(rollbackFor = Exception.class, value = \"clusterDataSourceTransactionManager\")\n    public void XX(xxObject param) throws Exception {\nclusterDataSourceTransactionManager is the DB B TransactionManager  declear, so the DB A need use masterDataSourceTransactionManager. ",
    "dongweizhao": "\n\u56fe\u7247\u6240\u793a\u4e3a\u5206\u6790\u62a5\u544a. \u56e0\u4e3a\u5728sharding-jdbc\u5185\u90e8\uff0c\u9488\u5bf9\u6d89\u53ca\u591a\u4e2a\u8282\u70b9\u64cd\u4f5c\uff0c\u591a\u4e2a\u8282\u70b9\u5904\u7406\u5b8c\u4e86\uff0c\u624d\u8fd4\u56de\u7ed9\u5e94\u7528\u7aef\uff0c\n\n\u5373\u793a\u4f8b\u4e2d  db1\u548cdb2\u90fd\u5904\u7406\u5b8c\u4e86\uff0c\u624d\u8fd4\u56de\u7ed9\u5e94\u7528\u7aef\u3002\n\n\u800c\u6b64\u65f6T1\u4e2d\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u62ff\u5230db2\u884c\u7ea7\u9501\uff0c\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u83b7\u53d6db1\u83b7\u53d6\u65f6\uff0c\u7531\u4e8e\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u5207\u6362\uff0cdb1\u7684\u884c\u7ea7\u9501\u88abT2\u5148\u83b7\u53d6\u4e86\uff0c\u56e0\u6b64T1\u53ea\u80fd\u7b49\u5f85\uff0c\u800cT2\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u83b7\u53d6db2\u7684\u884c\u7ea7\u9501\uff0c\u800cdb2\u7684\u884c\u7ea7\u9501\u53c8\u88abT1\u83b7\u53d6\u4e86\uff0c\u4e5f\u53ea\u80fd\u7b49\u5f85\u3002\n\n\u5373 T1\u83b7\u53d6\u4e86db2\u7684\u9501\uff0c\u7b49\u5f85\u83b7\u53d6db1\u7684\u9501\uff0cT2\u83b7\u53d6\u4e86db1\u7684\u9501\uff0c\u7b49\u5f85\u83b7\u53d6db2\u7684\u9501\u3002\n\n\u6240\u4ee5\u5c31\u6784\u6210\u4e86\u6b7b\u9501\uff0c\u5bfc\u81f4\u65e0\u6cd5\u7ed9\u5e94\u7528\u7aef\u8fd4\u56de\uff0c\u65e0\u6cd5commit\u3002\n. \u56e0\u4e3a\u8fd9\u4e2a\u8bed\u53e5\u662f\u6ca1\u6709\u5e26\u5206\u7247\u952e\uff0c\u6240\u4ee5\u9700\u8981\u5230\u591a\u4e2a\u8282\u70b9\u6267\u884c. OK. https://github.com/dongweizhao/sharding-jdbc-demo\nSpringMybatisShardingDatabaseOnlyMain\u4e3a\u542f\u52a8\u7c7b\uff0c\u591a\u8c03\u7528\u51e0\u6b21\u5c31\u4f1a\u51fa\u73b0\u3002\n\u6211\u770b\u5b98\u7f51\u5b9e\u4f8b\u914d\u7f6et_order\u8868\u7684order_id\u4e3a\u4e3b\u952e\uff0c\u6240\u4ee5\u6211\u8fd9\u8fb9\u8c03\u6574\u4e86\u4e0bsql\u3002\n\u4fee\u6539\u6d4b\u8bd5\u8bed\u53e5\u4e3a\uff1a\n```\nupdate t_order set status='5' where status='2'\n```\n. delete\u4e0d\u884c\u5427\uff0cdelete\u6267\u884c\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u4e5f\u4f1a\u52a0\u9501\uff0c\u4e5f\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\u3002. \u4eae\u54e5\uff0c\n\u4e3b\u8981\u770b\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982\u679c\u628a\u591a\u4e2a\u8fde\u63a5\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u64cd\u4f5c\uff0c\u800c\u8fd9\u4e2a\u6574\u4f53\u64cd\u4f5c\u53c8\u65e0\u6cd5\u4fdd\u8bc1\u539f\u5b50\u6027\uff0c\u5c31\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bd4\u5982\uff1a\u5e94\u7528\u7aef\u6267\u884c\u4e00\u4e2a\u672a\u5e26\u5206\u7247\u952e\u7684update\u8bed\u53e5\uff0c\u5728sharding jdbc\u4e2d\u4f1a\u521b\u5efa\u591a\u4e2a\u6570\u636e\u5e93\u7684\u8fde\u63a5\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\uff0c\u7b49\u6240\u6709\u8282\u70b9\u6267\u884c\u6210\u529f\uff0c\u5728\u7ed9\u5e94\u7528\u7aef\u8fd4\u56de\u3002\u5982\u679c\u540e\u7aef\u591a\u4e2a\u8fde\u63a5\u65e0\u6cd5\u4fdd\u8bc1\u539f\u5b50\u6027\u5c31\u4f1a\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c \u8fd9\u4e2a\u95ee\u9898\u5728mycat\u4e2d\u4e5f\u6709\u3002\n\u6211\u628a\u5177\u4f53\u6e90\u7801\u8d34\u51fa\u6765\uff0c\u53ef\u80fd\u5c31\u6bd4\u8f83\u597d\u7406\u89e3\u4e86\nExecutorEngine\u7c7b\u4e2d\uff0c\n\n. \u5bf9\u5e94\u7684\u6587\u4e2d\u6709\u4eba\u8bf4delete\u6ca1\u95ee\u9898\uff0c\u8fd9\u4e2a\u6211\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5230\u65f6\u5019\u5728\u8bf4\u660e\u3002. ",
    "Seven4X": "@18357136930 \n\u56e0\u4e3aSharding-JDBC \n\n\u6700\u7ec8\u91c7\u7528\u4e86\u4ee5JDBC\u63a5\u53e3\u6765\u5b9e\u73b0\u5bf9\u4e8e\u751f\u6210Id\u7684\u8bbf\u95ee\uff0c\u800c\u5c06\u5e95\u5c42\u5177\u4f53\u7684Id\u751f\u6210\u5b9e\u73b0\u5206\u79bb\u51fa\u6765\u3002\n\u901a\u8fc7JDBC\u63d0\u4f9b\u7684API\u6765\u83b7\u53d6\u3002\n\n\u6240\u4ee5\u5982\u679c\u4f7f\u7528mybatis insert\u6807\u7b7e \u9700\u8981\u4f7f\u7528 useGeneratedKeys\n\nuseGeneratedKeys | \uff08\u4ec5\u5bf9 insert \u548c update \u6709\u7528\uff09\u8fd9\u4f1a\u4ee4 MyBatis \u4f7f\u7528 JDBC \u7684 getGeneratedKeys \u65b9\u6cd5\u6765\u53d6\u51fa\u7531\u6570\u636e\u5e93\u5185\u90e8\u751f\u6210\u7684\u4e3b\u952e\uff08\u6bd4\u5982\uff1a\u50cf MySQL \u548c SQL Server \u8fd9\u6837\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u7684\u81ea\u52a8\u9012\u589e\u5b57\u6bb5\uff09\uff0c\u9ed8\u8ba4\u503c\uff1afalse\u3002\n\n. ",
    "hongfuli": "\u6ca1\u6709pr\u3002\u53ea\u662f\u770b\u6e90\u7801\u548c\u5199\u4e86\u4e2amain\u6d4b\u8bd5\u7684\u3002. \u597d\u7684\u3002. \u6211\u5728\u672c\u5730\u7684\u6267\u884c mvn test \u90fd\u53ef\u4ee5\u901a\u8fc7\u5168\u90e8\u7528\u4f8b\uff0c\u4e0d\u77e5\u9053traviso\u4e3a\u4ec0\u4e48\u4f1a\u6709\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u901a\u8fc7\uff0c\u4ece\u65e5\u5fd7\u91cc\u4e5f\u770b\u4e0d\u51fa\u6765\u3002\n\u6027\u80fd\u6ca1\u6709\u6d4b\u8bd5\u3002\u53ea\u662f\u4ece\u4ee3\u7801\u903b\u8f91\u4e0a\u89c9\u5f97\u53ef\u4ee5tokenizer\u5355\u5b9e\u4f8b\u3002\u4e0d\u8fc7\u6b63\u5982\u4f60\u8bf4\u7684\uff0c\u8fd9\u79cd\u751f\u547d\u5468\u671f\u5f88\u77ed\u7684\u5b9e\u4f8b\u53ef\u80fd\u4e0d\u4f1a\u5f15\u8d77FGC. Yes, I will submit pull request later.. ",
    "YooLin": "\u5982\u679c\u662f\u53ea\u914d\u7f6e\u8bfb\u5199\u5206\u79bb\uff0c\u90a3\u4e48\u5373\u4fbf\u914d\u7f6e\u4e86sql.show=true\u4e5f\u4e0d\u4f1a\u6253\u5370\u65e5\u5fd7\u5427\uff0c\u627e\u4e86\u4e0b\u6e90\u7801\u4e5f\u6ca1\u7ffb\u5230  @terrymanu . ",
    "xmh51": "java\n     public List<Mapping> fetchByCustomId(Integer fetchSize, Long startId, int no) {\n        try (HintManager hintManager = HintManagerUtil.getInstance()) {\n            hintManager.addDatabaseShardingValue(\"xid_mapping\", \"xid\", String.valueOf(no));\n            hintManager.addTableShardingValue(\"xid_mapping\", \"xid\", String.valueOf(no));\n            Example example = new Example(Mapping.class);\n            example.createCriteria().andGreaterThan(\"id\", startId);\n            List<Mapping> mappings = this.selectByExampleAndRowBounds(example, new RowBounds(0, fetchSize));\n            return Mappings;\n        }\n    }\n\u5f00\u542f\u591a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u8fd9\u6bb5\u65b9\u6cd5\uff0c\u53ef\u4ee5\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u662f\u5f3a\u5236\u8def\u7531\u7684\u8868\u91cc\u9762\u7684\u6570\u636e\uff0c\u5176\u4e2dMapping \u662f\u5206\u5e93\u5206\u8868\u7684\u3002. \u7b49\u5468\u672b\u6211\u770b\u4e0b\uff0c\u80fd\u5426\u5728 2.x f\u590d\u73b0\u3002. @terrymanu  \u4e0d\u597d\u610f\u601d\uff0c\u5468\u672b\u52a0\u73ed\uff0c\u6700\u8fd1\u6bd4\u8f83\u5fd9\uff0c\u6ca1\u65f6\u95f4\u590d\u73b0\u8be5\u95ee\u9898\uff0c\u9ebb\u70e6\u5173\u4e86\u5427\u3002. \u95ee\u9898\u51fa\u73b0\u5728  \u6267\u884c default-data-source sql \u65f6\u4e0d\u65ad\u521b\u5efa \u65e0\u5173\u7684 GroovyShell \u5bf9\u8c61 InlineExpressionParser.evaluate \u65b9\u6cd5\u4e0d\u65ad\u6267\u884c \u4e0d\u65ad\u521b\u5efa GroovyShell \u5bf9\u8c61. \u89e3\u51b3\u65b9\u6848 \u6dfb\u52a0 cache  ` private static Map> cacheEvaluateMap=new HashMap<>();\n/**\n * Split and evaluate inline expression.\n *\n * @return result list\n */\npublic List<String> evaluate() {\n    if (null == inlineExpression) {\n        return Collections.emptyList();\n    }\n    List<String> cacheEvaluate=cacheEvaluateMap.get(inlineExpression);\n    if(cacheEvaluate!=null){\n        return cacheEvaluate;\n    }\n    cacheEvaluate= flatten(evaluate(split()));\n    cacheEvaluateMap.put(inlineExpression,cacheEvaluate);\n    return cacheEvaluate;\n}`.\n",
    "onlymyme": "sharding-jdbc-example-2.0.2.zip\n\u5df2\u7ecf\u4e0a\u4f20\u6d4b\u8bd5\u4f8b\u5b50\uff0c\u6d4b\u8bd5\u4f8b\u5b50\u4e3asharding-jdbc-raw-jdbc-java-example\u91cc\u9762\u7684io.shardingjdbc.example.jdbc.java.OracleTest. ",
    "tuohai666": "The SQL can be simplified to 'SELECT * FROM t_order  WHERE ROWNUM <= 20 AND order_id=23;'.\nThe root cause of this bug is wrong RowCountToken beginPosition.. After a short investigation, I found that GET_MORE_CLIENT_DATA is talking about to transfer a file to MySQL server. Did you intend to do this?\nAs to get more data from MySQL, I tried 'setFetchDirection' and 'setFetchSize' method in JDBC, and found nothing differenct from packet captured by tcpdump. I doubt the MySQL server don't support this feature. I'll start a deeper study for it later.. I finally find out what JDBC do to avoid the client occure an OUT_OF_MEMORY exception in ResultSet section of https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-implementation-notes.html.\nJDBC read one row at a time in client TCP buffer, and MySQL server will block in IO until client TCP buffer   is not full. This mechanism don't depend on the MySQL protocol.\nWe can avoid proxy from being OUT_OF_MEMORY just change the parameter of stme:\nstmt = conn.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,\n              java.sql.ResultSet.CONCUR_READ_ONLY);\nstmt.setFetchSize(Integer.MIN_VALUE);\nPlease note that this approach will lead to a lower performance, since each time the clint call next() the data will be copied from native to heap.\nI'll test the memory usage between these two different statments, and upload the test result.. This test base on my runnable code just completed, and shows the difference of memory usage between stream ResultSet and non-stream ResultSet.\nsharding-proxy are running on my PC with VM options:\n-server -Xmx1g -Xms1g -Xmn128m -Xss256k -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=99\n5 clients connect to a sharding-proxy, each of the clients select 150000 rows concurrently.\nnon-stream ResultSet:\n\nstream ResultSet:\n\nStream ResultSet proved to be more efficiency in space and time.\n. Similar issue in stackoverflow: \nhttps://stackoverflow.com/questions/29067539/netty-weird-indexoutofboundsexception-readerindex-length-exceeds-writerindex. The Decode method of ByteToMessageDecoder \"decode the from one ByteBuf to an other. This method will be called till either the input ByteBuf has nothing to read when return from this method or till nothing was read from the input link ByteBuf.\" -- from java doc\nOur original code didn't read all the bytes out when readableBytes == realPacketLength, it pass the readableBytes directly to the pipeline. If the next handler didn't read the bytes in time, the decode method will be called to decode the remainder bytes. The second decoding on an incomplete message get a unpredictable message length that fire a out of bound exception.\nA general way to solve this problem is to setSingleDecode(true) of ByteToMessageDecoder object, but we use ByteToMessageCodec instead of ByteToMessageDecoder. So we need to read out all the bytes before decode() is finish.\nA similar issue in stackoverflow:\nhttps://stackoverflow.com/questions/26604579/netty-bytetomessagecodecbytebuf-decoding-message-twice-partially/49992042#49992042\nI have appended an alternative answer for those who use ByteToMessageCodec that can't implement the setSingleDecode method.. Suspend due to complexity.. agree, yes, +1. I'm at home now, and I'll deal with this failure tomorrow. Hi jensolzhu, thanks for your question. I'v fixed this issue, please try again.. Hi hqq2023623, could you please resolve these conflicts? I notice that the problem in ShardingRule has already bean solved.\n. Thanks to your effort. We planed to merge your pr after M1 launching.. A little strange. I can't reproduce this issue.\nI suggest you to mvn install parent and run the test again.. Yes, please refer to http://shardingjdbc.io/document/legacy/2.x/cn/02-guide/configuration/. Hi beckhampu, smart solution! However, I think you break the indent, not 4 white spaces no. . For issue 1: Can you show me the 'show create table' of your actual tables? And the result of 'show variables like 'character_set_database';' of your databases;\nFor issue 2: Let me see the config.yaml completely;\nFor issue 3: It's a new feature, we will discuss whether to implement it in M2.. @jensolzhu I can't reproduce the issue, some information must be lost. We can communicate on gitter: https://gitter.im/shardingsphere. I doubt there's wrong config for your console, please show me the result of: show variables like '%char%'; in actual db and proxy.. I prefer Case Insensitive. Here are some reaseons:\n\n\nFor MySQL, Column, index, stored routine, event, and resource group names are not case-sensitive on any platform, nor are column aliases. \n\n\nPlease note that the lower_case_table_names MySQL system variable is used to control how table and database names are stored on disk and used in MySQL. This  system variable can not influence column or aliases, and none system variable can. Please refer to https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html for more details.\n\n\nFor PostgreSQL, Case Insensitive without double quotes.\n\n\nFor Oracle, Case Insensitive without double quotes.\n\n\nFor SQLServer, Case Insensitive by default. Configurable.\n\n\nSharding-Sphere do not need to intercept SQLs, let the SQLs go and the Databases will judge and response. Otherwise, Sharding-Sphere have to manage the configuration only for SQLServer in metada, and will meet shutdown when the configurations are inconsistent.\n\n\n. algorithmExpression will be transform to groovy script which is case sensitive. So columnName should not cast to lower case.\nRevert shardingColumn to case sensitive: https://github.com/sharding-sphere/sharding-sphere/pull/1706. Hi hqq2023623, you have very good insight. Would you like to submit a pr?\n1. It's bug. And are there any similar problems in other readXXX() method? I think you can fix together.\n2. What's your suggestion?\n3. You are right, please change to map.entrySet().. MySQLPacketPayload.java 174: suggest to change 0xFF to 0xff to consistent with the following code.. Bash insert is not supported in 2.0.3. Please update to 3.0.0.\nRefer to https://github.com/sharding-sphere/sharding-sphere/issues/290. As we talked just now, u can submit a pr now.. Connection Pool for MySQL will be replaced by a Netty+MySQL Protocol feature in the near future.. Record the difference of delimiters of H2/MySQL/Oracle/SQLServer/PostgreSQL.\nH2: \"\nThere is a list of keywords that can't be used as identifiers (table names, column\nnames and so on), unless they are quoted (surrounded with double quotes). The\nlist is currently:\nALL, CHECK, CONSTRAINT, CROSS, CURRENT_DATE, CURRENT_TIME,\nCURRENT_TIMESTAMP, DISTINCT, EXCEPT, EXISTS, FALSE, FETCH, FOR,\nFOREIGN, FROM, FULL, GROUP, HAVING, INNER, INTERSECT, IS, JOIN, LIKE,\nLIMIT, MINUS, NATURAL, NOT, NULL, OFFSET, ON, ORDER, PRIMARY, ROWNUM,\nSELECT, SYSDATE, SYSTIME, SYSTIMESTAMP, TODAY, TRUE, UNION, UNIQUE,\nWHERE, WITH. MySQL: `\nThe identifier quote character is the backtick (`).. PostgreSQL: \"\nThere is a second kind of identifier: the delimited identifier or quoted identifier. It is formed by enclosing\nan arbitrary sequence of characters in double-quotes (\"). A delimited identifier is always an identifier,\nnever a key word. So \"select\" could be used to refer to a column or table named \u201cselect\u201d, whereas an\nunquoted select would be taken as a key word and would therefore provoke a parse error when used\nwhere a table or column name is expected. The example can be written with quoted identifiers like this:\nUPDATE \"my_table\" SET \"a\" = 5;. SQLServer: [ ]\nYou can create tables with the same name as keywords. If you \"quote\" the table name it should work. The default quotes in SQL server are square brackets: [ ]. Oracle: \"\nSame with H2 and PostgreSQL, the answer is double quotes.. More detail about this SQL:\n\n\nSyntax\nSHOW {INDEX | INDEXES | KEYS}\n          {FROM | IN} tbl_name\n          [{FROM | IN} db_name]\n          [WHERE expr]\n\n\nYou can use db_name.tbl_name as an alternative to the tbl_name FROM db_name syntax. These two\nstatements are equivalent:\nSHOW INDEX FROM mytable FROM mydb;\nSHOW INDEX FROM mydb.mytable;\n\n\n. not finish yet. I've missed the test of CONNECTION_STRICTLY mode in #894 , and cause this bug.\nUpdate mysql-connector-java to 8.0.11 will resolve this problem.. 1. which product? sharding-jdbc or sharding-proxy?\n2. the reproduce part you provide can't help. what's your sharding-rule/what's the data in actual db like?/what's the result like?/what's the sql?. tests:\n1. example, CLI, GUI\n2. performance. Hi @olderzhou , I'm sorry that I can't get your point.\nThe most important things:\nWhat you expect? Input A, and the output is B, C, D.\nWhat the actual output? Input A, and the output is E, F, G.\nCould you provide imformation like that?\nIn your example, you configured 6 connection pools in one database, and each pool size is 30.\nDid the connections amount ever over 30 * 6 = 180? . Please answer my question above first.\nAlso, I can't find  run-local.sh.\n. @olderzhou, thanks for your effort to findout this bug.\nThe config overwrite: true of zookeeper cause a wrong number of connection pool.. Resolved. \nRefer to #1150.. Cairewen, Thank you. We have already fixed this bug. You may wait for 3.0.0.m2, or have a try on dev branch.. see #865 . Hi @janson653, I'm sorry that I can't get your point.\nThe most important things:\nWhat you expect? Input A, and the output is B, C, D.\nWhat the actual output? Input A, and the output is E, F, G.\nCould you provide imformation like that?. Close since no response.. Suspending. \nTo fix this bug we need to change the structure of SS Parser, it is not worth it.\nFortunately, a new SS Parser will coming later, and let's come back to this issue that time.\n. Need to discuss with Liang.. Surprise! \nFixed.. I'll add an example for RangeShardingAlgorithm later.. Please provide the version information.\nI've tested on 3.0.0.M3 and found this problem already solved.. Duplicate with #887.. Sharding-Proxy didn't support SQLServer yet.. hi @AIKiller,\nI'm glad of your concern about the Proxy performance which I'll continuously optimize during 3.0.0.M3.\nI also have tested the performance(with extreme test cases and better machine) before the M2 release:\nMEMORY_STRICTLY: 41189.6/s\nCONNECTION_STRICTLY: 62084.6/s\nMySQL straightforward: 98774.5/s\nI suggest you change the proxy.mode(connection.mode for now) to CONNECTION_STRICTLY, the expected result is 2000 QPS.\nBy the way, how many threads concurrent in your test tool?. @AIKiller , please show me the result of the command \"uptime\" on your Proxy server during the test. I think    there are too many threads on this server.. Refer to #1113 , the QPS is increased by 33% in MEMORY_STRICTLY mode.. Refer to #1117 , The QPS is increased by 1%. . Refer to #1127 , In MEMORY_STRICTLY mode, the QPS increased from 23025 to 34304.. I've finished some optimization for performance. Please have a try with sharding-proxy-3.0.0.M3-SNAPSHOT. . Someone asked me why and how to use a stream ResultSet, please refer to: #675. . The QPS is increased by 1%.\nTest case SQL:\nselect * from t_order where order_id=208228889149833216;\n(this sql is routed to ds_0.t_order_0, ds_1.t_order_0). In MEMORY_STRICTLY mode, the QPS increased from 23025 to 34304.\nHow the QPS can be increased by 49%? It's because I used a all-routing SQL to make the result  significant. Obviously, if I chose a single-routing SQL, there will be no difference for this change.\nTest case SQL:\nselect * from t_order limit 1;\n(this sql is routed to ds_0.t_order_0, ds_0.t_order_1, ds_1.t_order_0, ds_1.t_order_1). In MEMORY_STRICTLY mode, the QPS increased from 25210 to 29020. \n15% speed up.\nTest case SQL:\nselect * from t_order limit 1;\n(this sql is routed to ds_0.t_order_0, ds_0.t_order_1, ds_1.t_order_0, ds_1.t_order_1). This approach caused CPU busy. Better to discard. The pull request will not merge.. This approach caused CPU busy. . Hi @wujun8, you are right. Could discuss and vote in #864 first? I'll fix the Case Sensitive or Case Insensitive issues together.. Hi @GitProBo, some findings:\nactualDataNodes: pay_${0..15}.pay_cmdy_000${0..9}  (3 zero)\nCreate Table: CREATE TABLE pay_cmdy_0000  (4 zero). Hi @sunjiabo, please describe your doubt following the issue template.. I doubt there's more than one row inserted. What's your algorithmExpression?\nYou'd better select * from message_new  where id=237162384471687170 to find if the row exists.\n. \nAny way, show me your config.yaml.. Please try select * from message_new where id=237162384471687170 in all tables.. Never.\nSet sql.show: true and put the log here.\n. I doubt id 237162384471687170 has beed deleted.\nInsert a row manually direct to message_new_201808 and check what is the next id.. +1. Please +1 here #1157 . Topology\n\nTracing\n\nDetail\n\n. Display jdbc url in peer tag.\n\n\n\n. Further more, even though MySQLFrontendHandler jump out of the loop, there's a potential problem. Backend threads and connections will not realse for now after MySQLFrontendHandler is closed. If the SQL is slow enough, backend will also be blocked.. @CatteRio \ncould you please tell me which version of skywalking that you suggest to match the sharding-sphere 3.0.0.M3 opentracing\nit's 5.0.0\nYou could get the guide here:\nhttp://shardingsphere.io/document/current/cn/features/orchestration/apm/. @CatteRio \n1. SkyWalking auto agent plugin will available in 6.0.0.\n2. 3.0.0.M3 will not be supported any longer, please turn to 3.0.0 release with SkyWalking 5.0.0-GA.\nI think this question is clear and should be closed.. +1. Please show your Strategy before and after completely.. BTW, I suggest you try 3.0.0 first, for 3.0.0.M3 will not be supported any longer.\nAny way, let me see your Strategy code.. 1. Is AlgorithmUtil.getShardingValue() your private code?\n2. Have you change any code, config or sql besides Stratege? Please check very carefully before you replay. Variable tableShardingValues would return same value before and after if codes, config, sql are all same.\n3. I suggest you switch to old stratege, watch tableShardingValues and find out if it can run correctly.. 4. Can you show me the config file completely, you may hide ip address, etc.. @dozer47528 I see you closed your pr. If it have passed the test, why close?\n. I don't quite understand. How SP keep the origin MySQL type from database? \nSP now performs like this:\n1. Receive the SQL from MySQL-client;\n2. Execute the SQL by Connector/J.\n3. Connector/J gets data and MySQL-types from databases, meanwhile converts the types to JDBC-types.\n4. Proxy gets data and JDBC-types, meanwhile converts the JDBC-types to MySQL-types. So that the MySQL-client can accept the MySQL-types.\nMySQL-client can never accept the JDBC-types.\nSo, i think your pr is not so wrong, just need to modify the data encoding together with specified types you have done before.\n. @dozer47528, fixed by https://github.com/sharding-sphere/sharding-sphere/pull/1588, \ninclude types: binary, varbinary, blob, tinyblob, mediumblob, longblob. You don't need to implement PostgreSQL parser to support DAL.\nWhen you input \\d on PostgreSQL's command client, the client will translate this abbreviation to a SELECT statement.\nSo, PostgreSQL server will never get statement like \\d, \\l.. Great! \nI have no more questions.. @fifadxj \n1. Can you show me the result of 'desc limit_request_0'? So that I can reproduce this exception.\n2. You put all codes there, I can't find what you have modified. Can you point out the root cause to this exception?\n3. And put codes which only you modified.. @fifadxj \nSome one met the same Exception which had been proofed not cause by Sharding-Sphere.\nCan you test in the same scenario without Sharing-Sphere?. > > @fifadxj\n\n\n\nCan you show me the result of 'desc limit_request_0'? So that I can reproduce this exception.\nYou put all codes there, I can't find what you have modified. Can you point out the root cause to this exception?\nAnd put codes which only you modified.\n\n\nThe issue happens when using mybatis to insert text/clob column with below config.\n<result column=\"request_json\" property=\"requestJson\" jdbcType=\"LONGVARCHAR\" />\ncheck org.apache.ibatis.type.ClobTypeHandler\npublic void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType) throws SQLException { StringReader reader = new StringReader(parameter); ps.setCharacterStream(i, reader, parameter.length()); }\nIt will call PreparedStatement.setCharacterStream() which take Reader as argument type.\nBut in AbstractShardingPreparedStatementAdapter, for all setXXX(), it always calls PreparedStatement.setObject() which does not accept Reader as argument.\nThe solution, if you check the code I pasted above, for all setXXX(), it will call underlying PreparedStatement's setXXX() instead of setObject(), so it solves the problem.\nPS: changing mybatis mapper configuration to jdbcType=\"VARCHAR\" may also solve the problem. My fix is just to make ShardingSphere support more methods in java.sql.PreparedStatement.\n\n@fifadxj\n1. Thanks for your comments. Have you tested your solution?\n2. Some one met the same Exception which had been proofed not cause by Sharding-Sphere. Can you test in the same scenario without Sharing-Sphere?\n3. I heard the raw JDBC have the same problem. If so, we should not change the SS code.\nbtw, please reply using 1,2,3... corresponding my 1,2,3..., thanks.. Since 1 & 2, would you like to submit a pull request? \n\nI dont think raw JDBC have this problem. Where did you get that, can you give the link?\n\nI got the information offline, didn't verify yet.. The Travis CI build failed, please have a check.. @fifadxj @reforgit , thanks for your reports. This issue will be fixed in release 4.0.0.. To improve productivity please answer the questions below:\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. This is because unexpected duplicated RoutingResult cause isSingleRouting=false.\nIf isSingleRouting=false, the rewriting procedure will be triggered.\nTo solve this problem, we need to get the correct isSingleRouting value.. After investigation, this will not happen in 3.0.1.SNAPSHOT.\nBut another problem appeared. Please refer to https://github.com/sharding-sphere/sharding-sphere/issues/1643\nAll will be fixed in next release. Thanks.. >  please take the time to reply as soon as possible, thank you.\nok, i'm now working for this issue until it resolved.\nTo improve productivity please answer the questions below:\nWhich version of Sharding-Sphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. > but in There is a problem when querying,\nin what?. > And the following four data appear user_id: 279023793651843070, this id is not a record in the database\n\nThe result is that the user_id is duplicated, using the mybatis framework, please take the time to reply as soon as possible, thank you.\n\nAt first you say id is not a record in the database, then you say user_id is duplicated, what do you mean?. >UserInfoExample example = new UserInfoExample();\n    example.createCriteria().andUserIdBetween(279023793651843071L, 279023793651843074L);\n    example.setOrderByClause(\"create_time\");\n    List users = userInfoMapper.selectByExample(example);\nCodes like that have nothing useful. Why not put your sql statement instead of that ?. > > UserInfoExample example = new UserInfoExample();\n\n\nexample.createCriteria().andUserIdBetween(279023793651843071L, 279023793651843074L);\nexample.setOrderByClause(\"create_time\");\nList users = userInfoMapper.selectByExample(example);\n\nCodes like that have nothing useful. Why not put your sql statement instead of that ?\n\nPlease show sql statement and configuration.. Try to join wechat group. weixin qun. http://shardingsphere.io/. The feature you request will be availble in next release(maybe 3.1.0).\nNot only adding but also deleting, please refer to https://github.com/sharding-sphere/sharding-sphere/issues/1664\nYou can try it by building dev branch yourself.\nJust add new db under schema folder:\n\nAnd get what you want:\n\nVice versa.\n\n\n. @zhanglei please provide:\n1. configuration\n2. sql\n3. Expected behavior\n4. Actual behavior\n5. Reason analyze (If you can). Expected behavior\nActual behavior\nI'd like to ask more simple simply: Is your SQL executed well? If not what did you see from your mysql-client?. Client-A get Session-A from the CP and set session variables, then give back Session-A to the CP.\nClient-B try to get a connection from the CP, and it get Session-A which has been set session variables by Client-A. So when Client-B show session variables, it will get what Client-A set.\nI think it's difficult to solve this problem when using a connection pool. . As long as we use a connection pool, this problem is not appropriate to fix.. Fix this problem need great pay.\n1. Cache the session settings in the frontend. Send the set sessiong query before service SQL each time. The QPS will half down.\n2. Cache the connection when there's set session SQL. This force a common query become a transaction.\nAll of the two is not worthy. So won't fix.. Please provide your server.yaml. I guess you set proxy.opentracing.enabled: true and not set the system property io.shardingsphere.opentracing.tracer.class. If you set proxy.opentracing.enabled: true, you must also set vm options blow:\nDio.shardingsphere.opentracing.tracer.class=org.apache.skywalking.apm.toolkit.opentracing.SkywalkingTracer \nAnd copy SkywalkingTracer to the lib directory.\nPlease refer to http://shardingsphere.io/document/current/en/features/orchestration/apm/\nYou can simply solve this problem by setting proxy.opentracing.enabled: false. Please put this question in a new ISSUE.. Have you ever executed an SQL?. Please execute an SQL and show the log.\n. Please provide your configuration file.\nAnd what is the application on 192.168.0.25:50692 and 192.168.0.25:50702 ?. I can't investigate RESTARTS only with the config file you provided above. I need more information.\nAlso I suggest you focus to kubernetes and its restart policy of Pod lifecycle. Sharding-Proxy do not have restart mechanism now.. Change the log level to debug, and sql.show: true to get more information in case the pod restart later.. Need more information.\nYou say sharding-proxy process exits is not accuracy(although it may), if you can prove, you would alread have the imformation and offer me, isn't it?\nIf your judgement is sharding-proxy exits, find the clue and reveal it here.\nHow to find some clues? Turn to the logs, both kubernetes and sharding-proxy. Some simple tips for you as i mentioned before: Change the log level to debug, and sql.show: true to get more information in case the pod restart later.\nI expect your available information. Thanks.\n. How did you set the -Xmx for sharding-proxy?. No matter how much memory sharding-proxy required, why you limit pod memory less than sharding-sphere allocate? \nAnyhow I think this issue should be closed now.\nAs to your question about how much memory sharding-proxy required, it depends. . Does the data sync works well without sharding-proxy?. sharding-proxy will not do that. You need to enable MySQL's master-slave feature first.. Glad to see this professional issue at the very beginning of the day.\nI suggest you to try 3.1.0.M1 just as cherrylzhao said yesterday, since race condition was not well handled in 3.0.0.\n\nbut as request pressure increasese (average 50~200 calls per second)\n\nI wonder how many clients(or threads) concurrently access the database. You know you can't control the qps to access a database in BIO, the qps depends on server not client. But you do control the concurrency.. For the two test cases, what's the standard of pass or fail? I didn't find what you expect.. Fixed.\nYou are right, algorithmExpression will be transform to groovy script which is case sensitive. So columnName should not cast to lower case.. 1. Is the result right? Although 2000 in log, you application actually got 1000 rows.\n2. Is this SQL route to a single table?\n3. What's the version? \n4. Which project? (Sharding-JDBC or Sharding-Sphere)\nI expect all 4 answers corresponding to the 4 questions above. Please answer them one by one.. > note:\n\n1.shardshere version is 3.1.0.M1\n2.This table is not sharding \uff0cbut execute\n//ParsingSQLRouter.java  method:route\n      if (sqlStatement instanceof SelectStatement && null != ((SelectStatement) sqlStatement).getLimit()) {\n            processLimit(parameters, (SelectStatement) sqlStatement);\n       }\nI suggest not sharding table do not rewrite limit.\n\nYou are right. In 3.1.0-SNAPSHOT, single routing sql will not rewrite limit.\n3.1.0-SNAPSHOT is on the dev branch now, would you like to build it and verify the change? (This is also a question, expect your answer please sir, whether you say yes or no.). > 1. Is the result right? Although 2000 in log, you application actually got 1000 rows.\n\n\nIs this SQL route to a single table?\nWhat's the version?\nWhich project? (Sharding-JDBC or Sharding-Sphere)\n\nI expect all 4 answers corresponding to the 4 questions above. Please answer them one by one.\n\nWhere's the answer?. > 1.test result fail.\nFail what?\nWhat your test case exactly expect? Do not mention the log any more.\n. Have you counted the result rows? . OK. Can you debug 3.1.0-SNAPSHOT with breakpoint?\nParsingSQLRouter.java\nline: 130\nboolean isSingleRouting = routingResult.isSingleRouting();\nTo find out whether the SQL is sigle routed. If no, try to find the route result in routingResult(line: 128). > isSingleRouting is true.\nIf so, the failure of your test case failure is because your test case is wrong. I believe the output will be a 1000 rows result set in 3.1.0-SNAPSHOT.\nYour test case is invalid to me and others who can see this issue until you print the output result rows.\nFor the new problem, it should not be discuss in this issue. I suggest you open a new issue and never mention your test cases again(because they don't manke sense, and invalid enough). Instead you mention confs, SQLs and the expected result. Also please don't analyze, focus to the problem and describe it clearly, that's enough.. This problem is fixed in dev branch.\nThanks a lot for your effort these days.. @ppj19891020 It's because new parser missed default datasource.. @tsfans This problem has already been fixed, please wait for the new version.. In 3.1.0 which will be released soon, ShardingSphere will not load all the table's TableMetaData by default. . > em,-:(\uff0ci use a low version of mysql-connector-java, then everything is ok!\nPlease explicitly point out which version of mysql-connector-java can not work and which version of mysql-connector-java can work.. @quaider I can't reproduce. What is the SQL please?. @quaider Can you try the 3.1.0 version just released today(2019-1-7)?. @quaider Also please check your project, is it run well with jdbc-6.0.6 without Sharding-JDBC?. @quaider Would you mind use HikariCP instead of Druid to have a try? Meanwhile I'll try Druid in my environment.. @quaider Please tell your Druid version..     url: jdbc:mysql://192.168.8.129:13306/shop\n    url: jdbc:mysql://192.168.8.129:13307/shop\n    url: jdbc:mysql://192.168.8.129:13308/shop\n    url: jdbc:mysql://192.168.8.129:13406/shop\n    url: jdbc:mysql://192.168.8.129:13407/shop\n    url: jdbc:mysql://192.168.8.129:13408/shop\n@quaider I think your have 6 mysql instance on one machine, am I right?. @quaider Please provide the full log with Exceptions.. Lucky guy, you don't need to answer all my questions after I resolve this problem. You can't try until https://github.com/sharding-sphere/sharding-sphere/pull/1727 be merged. You may try dev branch tomorrow.\nThe root cause of this issue is actually Connector/j 6.x checked columnNamePattern in getColumns.\nThe reason why I can't reproduce it is I use MySQL 5.6 at first. Finally, I turn to MySQL 5.7, and the Exception burst.. \n@ppj19891020 I have the same question as @master-starcloud. . I noticed that there may have bug in your test case.\nPageable pageable1 = new PageRequest(1,10);\nList pos1 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable1);\nlog.info(\"pos1:{}\",pos1.toString());\nPageable pageable2 = new PageRequest(2,10);\n List pos2 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable1);\n log.info(\"pos2:{}\",pos2.toString());\nPageable pageable3 = new PageRequest(3,10);\nList pos3 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable1);\n log.info(\"pos2:{}\",pos3.toString());. @happy89lgk Thanks for reminder. Will be fixed later.. @wanshi1128 @dalaocu,\nFYI:\nhttp://mail-archives.apache.org/mod_mbox/shardingsphere-dev/201901.mbox/%3Ctencent_9D2FC2C46019518F3C5AE953044A5CB2D906@qq.com%3E. Method 1: Inject the Tracer implementation class provided by APM system through reading system parameters.\n\nThis is to say copy SkywalkingTracer's jar to your lib directory.\nModify SkyWalking's component-libraries.yml, add:\nSharding-Sphere:\n  id: 44\n  languages: Java\n\n. The jar is actually apm-toolkit-opentracing-5.0.0-GA.jar. You may also try:\nSharding-Sphere:\nid: 34\nlanguages: Java. You may also try:\nSharding-Sphere:\nid: 34\nlanguages: Java. Great!. ShardingSphere has switched to ANTLR parser which a little slower than before since 3.1.0.\nBut consuming 3s in parsing is unexpected. If you have doubt, please open another issue to discuss it.\nBTW, there's cache mechanism, if you use prepared statement, the parsing time of next query will be 0.. Please set keepAlive=true, otherwise, connections will be closed after minEvictableIdleTimeMillis.. Please provide your druid version.. keepAlive parameter is introduced 1.0.28 and expected to be work in 1.1.9.\nI suggest you check the properties very carefully and try again.\nIf the keepAlive still can't work, you should test druid standalone to find out whether ShardingSphere caused this problem.\n. Provide your environment like cpu, memory etc.\nYour config, sql etc.\nAnd DO fill in the pattern:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. ShardingSphere has switched to ANTLR parser which a little slower than before since 3.1.0. But consuming 3s in parsing is unexpected.\nBTW, there's cache mechanism, if you use prepared statement, the parsing time of next query will be 0.. > Provide your environment like cpu, memory etc.\n\nYour config, sql etc.\nAnd DO fill in the pattern:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details.\nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n\nWhere's the answer?. Your machine can't afford 400 threads, i don't think your expectation is right.\nAnd the machine is not suitable for a performance test.. What does this mean? Did you see my message above and what do you say? \n\nYour machine can't afford 400 threads, i don't think your expectation is right.\nAnd the machine is not suitable for a performance test.\n\nIf you insist that your expectation is right, you should share more reasonable infomation. For example, without Sharding-JDBC and with the same threads count, you got the respond time 95% in 1000ms.\n. Please DO fill in the bug report template.\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. I'll check later.. @WillWei1983 I can't reproduce it. Here's my SQL:\nResultSet resultSet = databaseMetaData.getTables(null, \"%\", \"%\", null);\nYou may try SQL like mine. Or,\nshow me the schemaName and tableName parameter, and schemaName/tableName in your logical database.. If no response more than 7 days and we cannot reproduce it on current information, we will close it.. > > In general, you should use checkstyle to check your code before you pr. Please refer to:\n\n\nhttp://shardingsphere.io/community/en/contribute/code-conduct/\nWhy Class.forName(\"com.mysql.jdbc.Driver\"); and Class.forName(\"com.mysql.cj.jdbc.Driver\"); in getDriverClassName ?\n\nIn MySQL java connector \uff0cjdbc driver class is different between 5.1.x\uff08com.mysql.jdbc.Driver\uff09 and 8.x\uff08com.mysql.cj.jdbc.Driver\uff09\uff0c\uff0cwrite as above could mike it possible to connect to mysql server \u30028.0.x \u3002\nanother change in pom is upgrade the version of mysql-connector-java to 5.1.47.\nanyway\uff0cthe code style problem i will fix it as soon\u3002\n\nGet it. I didn't say clearly. I mean validateDriverClassName() will do Class.forName(driverClassName); work later. So do not need to do this twice.. @sixianli So why not pr ?. @meAsky you can submit a pull request, I'll review it.. One more system table which contains \"/\". \n\"$\" has been found before, please refer to https://github.com/apache/incubator-shardingsphere/issues/1227. Good finding, @sixianli . Known issue.\nPlease refer to https://github.com/apache/incubator-shardingsphere/issues/1672 and https://github.com/apache/incubator-shardingsphere/issues/1722. You could submit a pr, I'll check it.. Misunderstand the MetaData checking mechanism.. Known issue. Please refer to:\nhttps://github.com/apache/incubator-shardingsphere/issues/1718. Please resolve conflicts first.. I catch you. I work on your pr that late, and can't understand. Please contact me, this pr should be merged today.. @sixianli Would you like to join our WeChat Group?. 1755 is ok to me. Could you explain 1770?. > @tuohai666 about the #1770 , in the tag 3.0.0 version, in oracle database, the same table structure in different datasource got dirrerent TableMetaData objects. I debugged and found that List object of each TableMetaData is different , each List object contains repetitive columnMetaData objects, so i add a little filter logic code.\nCould you now contact me with IM ?. > @tuohai666 yes , i can , i am a little shy, I hope you don't mind.\nIt's OK. My wechat number: 15810310987. I'll pull you to ShardingSphere WeChat Group. We discuss publicly there.. @guowdxp Please fill in the template:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. I can't reproduce this error. Please provide more information like: config file name/config file.. 1. You didn't show the config file name. Can you explicitly show them?\n\nDo you mean each config can work well separately? \nPlease set sql.show: true in server.yaml and show me the log.. I really can't reproduce it. Can you debug it with break point?. Here are some progress:\nIf I use CLI to connect Sharding-Proxy, will success in any condition.\nBut when I use HikariCP to connect Sharding-Proxy, exception fired no matter how many sharding congfigs there are.. I don't login QQ for months, my wechat is 15810310987. I can pull you to wechat group.. Resolved via https://github.com/apache/incubator-shardingsphere/issues/1830.. @guowdxp Please explicit provide the SQL. And fill in the template below. Thanks.\n\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. Your description is not very clear. Please fill in the template below.\nAlso, I suggest you use dev brance have a try. Several pagination issue have been resolved in dev:\nhttps://github.com/apache/incubator-shardingsphere/issues/1759\nhttps://github.com/apache/incubator-shardingsphere/issues/1722\nhttps://github.com/apache/incubator-shardingsphere/issues/1672\nhttps://github.com/apache/incubator-shardingsphere/issues/1643\nThe bug report template:\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details. \nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nExpected behavior\nActual behavior\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).\n. Duplicate with https://github.com/apache/incubator-shardingsphere/issues/1722\nPlease try 4.0.0.M1.. Known issue, please refer to https://github.com/apache/incubator-shardingsphere/issues/1722.. \"SELECT blob column do not have the same problem\", @guowdxp said.. @guowdxp , thanks for your report. This issue will be fixed in 4.0.0.. Thanks for your report. This problem has been resolved via https://github.com/apache/incubator-shardingsphere/issues/1722.. FYI:\nhttp://mail-archives.apache.org/mod_mbox/shardingsphere-dev/201901.mbox/%3Ctencent_9D2FC2C46019518F3C5AE953044A5CB2D906@qq.com%3E. Thanks for your effort. I'm thinking deeply into this pr now.\nI wonder what problem have you met? Do you have a test report?. I noticed your merge branch operation, but the conflicts still exist.\nI just finished a test:\nThere are two rows in MySQL server which values:\nRow 1:     0.00000000000000000000\nRow 2:     0E-20\nSelect from MySQL server:\n0\n0\nSelect from Sharding-Proxy:\n0\n0\nAs I asked just now, what problem have you met?. @avalon566 I got it.. Accept.. Please resolve the conflicts. Please refer to https://github.com/apache/incubator-shardingsphere/issues/1857. 1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\n2. Why not respond my comment before?\n\n. @wu-sheng Thanks for you quick comment. I have added apache-rat as the release audit tool.. > What is release audit tool? \nI didn't know Rat until you told me. So I turned to Apache Rat main page and found:\nWhat Is Rat?\nApache Rat is a release audit tool, focused on licenses.\n\nDo you plan to provide something besides the documents and commands?\n\nNope.\n. Hi @wu-sheng, I have responded your comments in 3f31012ee17c97cd4e0ee99350e2583c761ad45d. Any more comments? . @bruceyan1220 , thanks for your report. This issue will be fixed in 4.0.0.. The 4 white spaces in a empty line should not be removed.. remove empty line. is this necessary?. same as above.. same as above.. Checkstyle: Line does not match expected header line of '/'.. Checkstyle: 'CLASS_DEF' has more than 1 empty lines before.. Checkstyle: 'private' modifier out of order with the JLS suggestions.. Checkstyle: '=' is not followed by whitespace. Checkstyle: '=' is not preceded with whitespace. . Checkstyle: '=' is not followed by whitespace. Checkstyle: '=' is not preceded with whitespace. . Checkstyle: Class 'JDBCClassDetermine' looks like designed for extension (can be subclassed), but the method 'getDriverClassName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JDBCClassDetermine' final or making the method 'getDriverClassName' static/final/abstract/empty, or adding allowed annotation for the method. Checkstyle: Missing a Javadoc comment. . Checkstyle: Parameter url should be final.. Checkstyle: '{' is not preceded with whitespace.. Checkstyle: 'try' is not followed by whitespace. Checkstyle: '{' is not preceded with whitespace. . Checkstyle: '=' is not followed by whitespace. Checkstyle: '=' is not preceded with whitespace. . Checkstyle: 'catch' is not preceded with whitespace. Checkstyle: '}' is not followed by whitespace. . Checkstyle: '{' is not preceded with whitespace.. Checkstyle: '=' is not followed by whitespace. Checkstyle: '=' is not preceded with whitespace. . Checkstyle: 'catch' is not preceded with whitespace. Checkstyle: '}' is not followed by whitespace. . Checkstyle: Name 'mysql8_e' must match pattern '^(e|t|ex|[a-z][a-z][a-zA-Z]+)$'.. Checkstyle: '{' is not preceded with whitespace.. Checkstyle: Use a single space to separate non-whitespace characters.. Checkstyle: '=' is not preceded with whitespace.. Checkstyle: File does not end with a newline. Checkstyle: Line does not match expected header line of '/'. . Checkstyle: Using the '.' form of import should be avoided - org.junit.Assert... Checkstyle: Redundant import from the same package - io.shardingsphere.shardingproxy.backend.jdbc.datasource.JDBCClassDetermine. Unused import statement. . Checkstyle: '=' is not followed by whitespace. Checkstyle: '=' is not preceded with whitespace. . Checkstyle: ',' is not followed by whitespace.. Checkstyle: ',' is not followed by whitespace.. Checkstyle: ',' is not followed by whitespace.. Checkstyle: ',' is not followed by whitespace.. no comment please. no comment please. need space after if. remove all uncessary empty line. should be final. JDBCType is availble since jdk1.8.\nShardingSphere is compatible with jdk1.7 for now.. data_source_name => datasource_name. substring will new a String instance, there you new twice. use Types.CHAR instead of JDBCType.VARCHAR.getVendorTypeNumber(). remove empty line. ",
    "cwpgh": "\u6700\u65b0\u76842.0.2\u7248\u672c\u8fd8\u662f\u83b7\u53d6\u5168\u90e8\u94fe\u63a5\uff0c\n\u6211\u662f\u914d\u7f6e\u7684\u8bfb\u5199\u5206\u79bb+\u5206\u8868\uff0c\u53d1\u73b0\u4ece\u5e93\u590d\u5236\u5931\u8d25\u4e86\uff0c\u67e5\u770b\u65e5\u5fd7\u662fddl\u8bed\u53e5\u7684\u95ee\u9898\uff0c\u6700\u540e\u770b\u6e90\u7801\u624d\u53d1\u73b0\u95ee\u9898\uff0c\nShardingConnection \u7c7b\u8fd9\u91cc\u6709\u5224\u65ad\u662f\u8bfb\u5199\u5206\u79bb\u7684\u83b7\u53d6\u5168\u90e8\u6570\u636e\u6e90\uff0c\u6570\u636e\u6e90\n   Map dataSources;\n        if (dataSource instanceof MasterSlaveDataSource) {\n            dataSources = ((MasterSlaveDataSource) dataSource).getAllDataSources();\n        } else {\n            dataSources = new HashMap<>(1, 1);\n            dataSources.put(dataSourceName, dataSource);\n        }\n// \u5faa\u73af\u6570\u636e\u6e90\uff0c\u8fd4\u56de\u94fe\u63a5\u96c6\u5408\n for (Entry entry : dataSources.entrySet()) {\n            Connection connection = getCachedConnections().containsKey(entry.getKey()) ? getCachedConnections().get(entry.getKey()) : entry.getValue().getConnection();\n            replayMethodsInvocation(connection);\n            getCachedConnections().put(entry.getKey(), connection);\n            result.add(connection);\n        }. \u55ef\uff0c\u786e\u5b9e\u6ca1\u770bfaq\uff0c\u6211\u662f\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u6570\u636e\u90fd\u5230\u4e00\u4e2a\u5206\u7247\u53bb\u4e86. \u4e00\u3002\u5206\u7247\u5217\u5199\u5728\u5de6\u4fa7\u95ee\u9898\n1\u3002\u5206\u7247\u5217\u5728\u5de6\u4fa7\n\u67e5\u8be2\u8bed\u53e5 SELECT * FROM t_order o where o.order_id=12 limit 10 \n\u5206\u7247\u7ed3\u679c SELECT * FROM t_order_0 o where o.order_id=12 limit 10\n2.\u5206\u7247\u5217\u5199\u5728\u53f3\u4fa7\n\u67e5\u8be2\u8bed\u53e5 SELECT * FROM t_order o where 12=o.order_id limit 10 \n\u5206\u7247\u7ed3\u679c SELECT * FROM t_order_0 o where 12=o.order_id limit 10\n               SELECT * FROM t_order_1 o where 12=o.order_id limit 10 \n\u7b2c\u4e00\u4e2a\u662f\u5206\u7247\u5217\u5199\u5728\u5de6\u4fa7\uff0c\u80fd\u6b63\u786e\u8bc6\u522b\n\u7b2c\u4e8c\u4e2a\u5206\u7247\u5217\u5199\u5728\u53f3\u4fa7\uff0c\u8bc6\u522b\u4e0d\u4e86\n================================================================\n\u4e8c\u3002\u591a\u8868\u6307\u5b9a\u5217\u540d\u95ee\u9898\n 1.\u6307\u5b9a\u540d\u79f0\n    \u67e5\u8be2\u8bed\u53e5\uff1aSELECT * FROM t_order o,t_order_item t where o.order_id=1 and t.item_id=1 limit 10 \n    \u5206\u7247\u7ed3\u679c\uff1aSELECT * FROM t_order_1 o,t_order_item_1 t where o.order_id=1 and t.item_id=1 limit 10\n2.\u672a\u6307\u5b9a\u540d\u79f0\n   \u67e5\u8be2\u8bed\u53e5\uff1aSELECT * FROM t_order o,t_order_item t where order_id=1 and item_id=1 limit 10 \n   \u5206\u7247\u7ed3\u679c\uff1a SELECT * FROM t_order_0 o,t_order_item_0 t where order_id=1 and item_id=1 limit 10\n                    SELECT * FROM t_order_0 o,t_order_item_1 t where order_id=1 and item_id=1 limit 10\n                    SELECT * FROM t_order_1 o,t_order_item_0 t where order_id=1 and item_id=1 limit 10\n                   SELECT * FROM t_order_1 o,t_order_item_1 t where order_id=1 and item_id=1 limit 10\n  \u5206\u7247\u914d\u7f6e\uff1a\n  t_order: \n      actualDataNodes: ds.t_order_${0..1}\n      tableStrategy: \n        inline:\n          shardingColumn: order_id\n          algorithmExpression: t_order_${order_id % 2}\n      keyGeneratorColumnName: order_id\n    t_order_item:\n      actualDataNodes: ds.t_order_item_${0..1}\n      #\u7ed1\u5b9a\u8868\u4e2d\u5176\u4f59\u7684\u8868\u7684\u7b56\u7565\u4e0e\u7b2c\u4e00\u5f20\u8868\u7684\u7b56\u7565\u76f8\u540c\n      tableStrategy:\n        inline:\n          shardingColumn: item_id\n          algorithmExpression: t_order_item_${item_id % 2}\n\u95ee\u98982\uff0c\u6839\u636e\u5206\u7247order_id\u80fd\u552f\u4e00\u786e\u5b9a\u5230\u8868t_order\u7684\uff0citem_id\u4e5f\u53ef\u4ee5\u786e\u5b9a\u5230\u8868t_order_item\n. \u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a\u5982\u679c\u7ebf\u7a0b\u6c60\u5173\u95ed\u5931\u8d25\uff0c\u5c31\u4e0d\u80fd\u5904\u7406\u540e\u7eed\u591a\u7528\u6237\u8bf7\u6c42\n```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport io.shardingjdbc.core.constant.SQLType;\nimport io.shardingjdbc.core.executor.BaseStatementUnit;\nimport io.shardingjdbc.core.executor.ExecuteCallback;\nimport io.shardingjdbc.core.executor.ExecutorEngine;\nimport io.shardingjdbc.core.executor.type.statement.StatementUnit;\nimport io.shardingjdbc.core.jdbc.core.connection.ShardingConnection;\nimport io.shardingjdbc.core.jdbc.core.statement.ShardingStatement;\nimport io.shardingjdbc.core.routing.SQLExecutionUnit;\npublic final class Test {\n   static boolean success=false;//\u662f\u5426\u53ef\u4ee5\u6210\u529f\u5173\u95ed\npublic static void main(String[] args) {\n\n    final List<ExecutorEngine> engs=new ArrayList<>();\n    engs.add(new ExecutorEngine(2));//\u5206\u7247\u4e0a\u4e0b\u6587\n\n    new Thread(\"\u63a5\u6536\u7528\u6237\u8bf7\u6c42\u7ebf\u7a0b\") {\n        @Override\n        public void run() {\n            int task=0;\n            while(true) {//\u76f8\u5f53\u4e8esocket\u76d1\u542c\n                task++;\n                System.out.println(\"\u6536\u5230\u7528\u6237\"+task+\"\u8bf7\u6c42\");\n                execue(engs,task);//\u5904\u7406\u7528\u6237\u8bf7\u6c42\n\n                try {\n                    Thread.sleep(1000);//1s\u4e00\u7528\u6237\u8bf7\u6c42\n                } catch (InterruptedException e1) {\n                    e1.printStackTrace();\n                }\n            }\n        }\n    }.start();\n\n     new Thread(\"\u670d\u52a1\u6cbb\u7406\u901a\u77e5\u5904\u7406\u7ebf\u7a0b\") {\n            public void run() {\n                try {\n                    Thread.sleep(15000);//\u4f11\u772015\u79d2\u540e\u6536\u5230\u5237\u65b0\u914d\u7f6e\u901a\u77e5\n                } catch (InterruptedException e1) {\n                    e1.printStackTrace();\n                }\n\n                try {\n                    //\u5173\u95ed\u5f00\u5173\n                     System.out.println(\"\u5173\u95ed\u5f15\u64ce\");\n                     engs.get(0).close();\n                     System.out.println(\"\u5173\u95ed\u5f15\u64ce\u6210\u529f\");\n                     engs.set(0, new ExecutorEngine(2));//\u91cd\u65b0\u751f\u6210\n                } catch (Exception e1) {\n                    e1.printStackTrace();\n                     System.out.println(\"\u5f15\u64ce\u5173\u95ed\u5931\u8d25\");\n                }\n            }\n        }.start();\n}\nstatic void execue(final List<ExecutorEngine> engs,final int task){\n    new  Thread(\"\u7528\u6237\"+task+\"\u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\") {\n         public void run() {\n             List<StatementUnit> li=new ArrayList<>();\n             li.add(new StatementUnit(new SQLExecutionUnit(\"1\",String.valueOf(task)+\"_1\"),new ShardingStatement(new ShardingConnection(null)))) ;\n             li.add(new StatementUnit(new SQLExecutionUnit(\"2\",String.valueOf(task)+\"_2\"),new ShardingStatement(new ShardingConnection(null)))) ;\n             System.out.println(Thread.currentThread().getName());\n             engs.get(0).executeStatement(SQLType.DDL, li, new ExecuteCallback<String>() {\n                    @Override\n                    public String execute(BaseStatementUnit baseStatementUnit) throws Exception {\n\n                        System.out.println(\"\u6267\u884c\u7ebf\u7a0b\u4efb\u52a1\"+baseStatementUnit.getSqlExecutionUnit().getSql());\n                        if(baseStatementUnit.getSqlExecutionUnit().getDataSource().equals(\"2\")) {\n                            while(!success) {\n                                //\u6a21\u62df\u7f51\u7edc\u963b\u585e\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u95f4\u53ef\u957f\u53ef\u77ed\uff0c\n                            }\n                        }\n                        return null;\n                    }\n            });\n         }\n     }.start();\n}\n\n}\n. \u6211\u77e5\u9053\u8fd9\u662f\u5185\u90e8\u7c7b\uff0c\u6211\u5199\u8fd9\u4e2a\u53ea\u662f\u6a21\u4eff\u8fd9\u4e2a\u573a\u666fjava\n public void renew(final ShardingRule newShardingRule, final Properties newProps) throws SQLException {\n        ShardingProperties newShardingProperties = new ShardingProperties(null == newProps ? new Properties() : newProps);\n        int originalExecutorSize = shardingProperties.getValue(ShardingPropertiesConstant.EXECUTOR_SIZE);\n        int newExecutorSize = newShardingProperties.getValue(ShardingPropertiesConstant.EXECUTOR_SIZE);\n        if (originalExecutorSize != newExecutorSize) {\n            executorEngine.close();\n            executorEngine = new ExecutorEngine(newExecutorSize);\n        }\n        boolean newShowSQL = newShardingProperties.getValue(ShardingPropertiesConstant.SQL_SHOW);\n        shardingProperties = newShardingProperties;\n        shardingContext = new ShardingContext(newShardingRule, getDatabaseType(), executorEngine, newShowSQL);\n    }\n```\n\u8fd9\u662f\u670d\u52a1\u6cbb\u7406\u5237\u65b0\u914d\u7f6e\u7684\u65f6\u5019\uff0c\u6709\u5173\u95ed\u7ebf\u7a0b\u6c60\uff0c\u4f46\u662f\u5173\u95ed\u7ebf\u7a0b\u6c60\u6ca1\u6709\u5e73\u6ed1\u7684\u5904\u7406\n\u6700\u7ec8\u95ee\u9898\u5c31\u662f\u5f00\u5934\u8bf4\u7684 \u7ebf\u7a0b\u6c60\u5173\u95ed\u7684\u95ee\u9898\uff0c\n1.\u5df2\u7ecf\u63d0\u4ea4\u7684\u4efb\u52a1\u600e\u4e48\u5904\u7406\n2.\u5173\u95ed\u5931\u8d25\u600e\u4e48\u5904\u7406\n\u8fd9\u90fd\u6ca1\u6709\u505a\uff0cnginx\u91cd\u542f. ",
    "neo37927": "DDL\u8bed\u53e5\u624b\u52a8\u6267\u884c\u7684\u539f\u56e0\uff1a\u82e5\u901a\u8fc7\u7a0b\u5e8f\u81ea\u52a8\u6267\u884c\uff0c\u8868\u540d\u540c\u6837\u4f1a\u88ab\u8f6c\u4e3a\u5c0f\u5199\uff0c\u65e0\u6cd5\u518d\u73b0\u672c\u95ee\u9898. \u4ee3\u7801\uff1a\nSQLRewriteEngine.class\nprivate void appendTableToken(final SQLBuilder sqlBuilder, final TableToken tableToken, \n             final int count, final List<SQLToken> sqlTokens) {\n        sqlBuilder.appendTable(tableToken.getTableName().toLowerCase());\n        int beginPosition = tableToken.getBeginPosition() + tableToken.getOriginalLiterals().length();\n        appendRest(sqlBuilder, count, sqlTokens, beginPosition);\n    }\nsqlBuilder.appendTable(tableToken.getTableName().toLowerCase());\n\u8f6c\u4e3a\u5c0f\u5199. > #529 \n\u67e5\u9605\u4e86\u4e0b\uff0c\u76f8\u5173\u4ee3\u7801\uff0c\u5e94\u662f\u7531\u4e8e\u4fee\u6539\u6b64BUG\u65f6\u63d0\u4ea4. @hwck \u60a8\u5728\u7ef4\u62a4\u4e48\uff1f\n\u53ef\u4ee5\u770b\u4e0b\u8fd9\u4e2a\u518d\u73b0demo\nlink:https://github.com/neo37927/sharding-jdbc-example.git\nbranch:reproduce-example-codes. @terrymanu \u672c\u6765\u60f3\u7740\uff0c\u6765\u627e\u627e\u65b0\u7248\u672c\uff0c\u5374\u53d1\u73b0\u65e5\u5fd7\u88ab\u53d6\u6d88\u4e86\u3002\u3002\u3002\u505a\u4e86\u7b80\u8981\u8bf4\u660e\uff0c\u9ebb\u70e6\u6709\u65f6\u95f4\u786e\u8ba4\u4e0b\u3002\n\n\u8bf4\u660e\uff1a\n\u8868\u540d\u91cd\u5199\u6709\u4e24\u79cd\u53ef\u80fd\n1. \u5b58\u5728\u914d\u7f6e\u7684\u8868\n2. \u7f3a\u7701\u914d\u7f6e\u7684\u8868\n\u9488\u5bf9\u7b2c\u4e00\u7c7b\uff0c\u901a\u8fc7\u914d\u7f6e\u786e\u5b9e\u53ef\u4ee5\u8c03\u6574\uff0c\u8fd9\u4e2a\u6211\u4e4b\u524d\u4e5f\u662f\u77e5\u9053\u7684\uff0c\u4f46\u5bf9\u4e8e\u9879\u76ee\u6765\u8bf4\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8868\u5747\u9700\u8981\u6dfb\u52a0\u5206\u8868\u7684\u903b\u8f91\uff0c\u90a3\u4e48\u5904\u7406\u7b2c\u4e8c\u7c7b\u65f6\uff0c\u6211\u9a8c\u8bc1\u8fc7\uff0c\u5b58\u5728\u8868\u540d\u88ab\u8f6c\u4e3a\u5c0f\u5199\u7684\u60c5\u51b5\n\u590d\u73b0\n\nlink\uff1ahttps://github.com/neo37927/sharding-jdbc-example.git\nbranch:reproduce-example-codes\n\u53d6\u6d88\u4e86\u5bf9T_ORDER\u7684\u8def\u7531\u914d\u7f6e\u3002\n\n\u90e8\u5206\u62a5\u9519\u65e5\u5fd7\n\n1.Insert--------------\n[INFO ] 2018-03-05 11:36:00,710 --main-- [Sharding-JDBC-SQL] Logic SQL: \nINSERT INTO T_ORDER (\n          user_id, status\n        )\n        VALUES (\n        ?,\n        ?\n        ) \n/\u7701\u7565\u90e8\u5206/\n[INFO ] 2018-03-05 11:36:00,713 --main-- [Sharding-JDBC-SQL] Actual SQL: ds_0 ::: \nINSERT INTO t_order (\n          user_id, status\n        )\n        VALUES (\n        ?,\n        ?\n        ) ::: [51, INSERT_TEST] \n. @terrymanu \u60a8\u53ef\u5426\u786e\u8ba4\u4e00\u4e0bgit\u64cd\u4f5c\u6d41\u7a0b\uff0cissue\u88ab\u60a8\u5173\u95ed\u7684\uff0c\u6211\u662f\u65e0\u6cd5\u518d\u6b21\u6253\u5f00\u7684\u3002. ",
    "hyhy01": "\n\n\u602a\u4e0d\u5f97\u6211\u5728\u6d4b\u8bd5\u4e8b\u52a1\u7684\u65f6\u5019\u8001\u662f\u5931\u8d25\u3002\u3002\u3002\n\n\n\u8fd9\u6837\u5b50preparedStatement.executeUpdate()\u8fd4\u56de\u503c\u5c31\u5931\u6548\u4e86\n\n\n\u4e0d\u8fc7\u6211\u4e0d\u89c9\u5f97\u6267\u884c\u5b8c\u4e00\u6761\u5220\u4e00\u6761\uff0c\u5e94\u8be5\u628a\u72b6\u6001\u6539\u4e3a\u5df2\u6267\u884c\uff0c\u8fd9\u6837\u5982\u679c\u6709\u51fa\u9519\uff0c\u540e\u7eed\u7684\u5f02\u6b65\u4efb\u52a1\u80fd\u83b7\u5f97\u6574\u4e2a\u4e8b\u52a1\u7684\u4fe1\u606f\uff0c\u5f02\u6b65\u4efb\u52a1\u8d77\u7801\u6709\u4e24\u79cd\u8fd4\u56de\u503c1.\u8df3\u8fc7\u4e00\u6b652.\u5220\u9664\u6b64\u4e8b\u52a1\n\n\n. ",
    "linrongbin16": "\u55ef\u662f\u7684\uff0c\u786e\u5b9e\u6ca1\u6709\u589e\u52a0\u8986\u76d6\u5206\u652f\u3002\u6211\u89c9\u5f97\u4f60\u4eec\u7684\u9879\u76ee\u5f88\u6709\u8da3\uff0c\u800c\u4e14\u4e5f\u5f88\u6d3b\u8dc3\uff0c\u5e0c\u671b\u53ef\u4ee5\u53c2\u4e0e\u4e00\u90e8\u5206\u5de5\u4f5c\u3002\n\u5bf9\u4e8e\u8fd9\u4e2aLexer\uff0c\u54ea\u91cc\u66f4\u9002\u5408\u589e\u52a0test\u5462\uff1f. ",
    "sunjunhui520": "Sharding-Jdbc\u7248\u672c2.0.1. ",
    "yangfuhai": "@terrymanu  \u6216\u8005 HintManagerHolder \u80fd\u5426\u63d0\u4f9b\u4e0b get \u65b9\u6cd5\uff0c\u7528\u4e8e\u5224\u65ad\u5f53\u524d\u7ebf\u7a0b\u4e0b\uff0c\u7528\u6237\u662f\u5426\u8bbe\u7f6e\u4e86HintManager. ",
    "qiankunshe": "\nxml\u7528\u4f8b\u914d\u7f6e\uff0c\u7528\u4f8b\u5b9a\u4e49\u3001\u7528\u4f8b\u9a8c\u8bc1\n\u7528\u4f8b\u5b9a\u4e49\uff1a\n     a) \u914d\u7f6e\u4f7f\u7528 statement\u548cpreparestatement \u6a21\u5f0f \u5206\u4e3a\u6216\uff0c\u4e14\n     b) execute\uff0cexecuteUpdate\u6216executeQuery \u6267\u884csql \n     c) \u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u6216\u8005labelName \u83b7\u53d6\u6570\u636e\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u53ef\u4ee5\u662f\u9a8c\u8bc1\u7c7b\u578b\uff0c\u9a8c\u8bc1\u6570\u636e\uff0c\u9a8c\u8bc1\u6570\u636e+\u6392\u5e8f\uff08\u9a8c\u8bc1\u6570\u636e\u987a\u5e8f\u6216\u4e0d\u9a8c\u8bc1\uff09\n\u73b0\u901a\u8fc7dbunit\u521d\u59cb\u5316\u6570\u636e\n\u4f7f\u7528\u6216\u9a8c\u8bc1\n     a) \u83b7\u53d6xml\u914d\u7f6e\uff0c\u6267\u884c\u68c0\u67e5\u5de5\u5382\u4f20\u5165xml\u914d\u7f6e\uff0c\u8fd4\u56de\u68c0\u67e5\u5bf9\u8c61\uff0c\n     b) \u8c03\u7528\u68c0\u67e5\u5bf9\u8c61\u7684\u68c0\u67e5\u65b9\u6cd5 \u4f20\u5165 \u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61\n     c) \u8fd4\u56de\u68c0\u67e5\u7ed3\u679c\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u65ad\u8a00\u5931\u8d25\n\nxml \u683c\u5f0f\nxml\n<root>\n    <config statement=\"true\" preparestatement=\"true\">\n        <execute >\n            <sql>\n            </sql>\n        </execute>\n        <executeUpdate>\n            <sql>\n            </sql>\n        </executeUpdate>\n        <executeQuery>\n            <sql>\n            </sql>\n        </executeQuery>\n    </config>\n    <check order=\"true\">\n        <t_order order_id=\"1\" order_id_type=\"int\" user_id=\"1\" user_id_type=\"int\" />\n    </check>\n</root>. \u6211\u672c\u6765\u60f3\u5206\u6210\u591a\u6b65\u8d70\uff0c\u7b2c\u4e00\u6b65\u662f\uff0c\u5148\u4ee3\u66ff \u65ad\u8a00\u90e8\u5206 \uff0c\u6240\u4ee5\u6ca1\u6709\u5305\u542b 1\u548c6 \u90e8\u5206\u3002\n\u7b2c1\u70b9\u4e2d sharding-rule-config \u662f\u4e0d\u662f\u9700\u8981\u653e\u5165\u5230\u4e00\u4e2a\u72ec\u7acb\u6587\u4ef6\u4e2d\uff0c\u8fd9\u91cc\u53ea\u662f\u7528\u4e8e\u5f15\u7528\n\u7b2c2\u70b9\u6ca1\u95ee\u9898\n\u7b2c3\u70b9 \u6839\u636e\u4e0a\u9762\u8fd9\u4e2axml\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\u5982\u679c\u662f\u5305\u542binsert \u548cupdate \u3001delete\u662fexecute\u548cexecuteUpdate \uff0c\u5982\u679c\u662f select\u5c31\u662fexecute\u548cexecuteQuery\n\u7b2c4\u70b9\uff0c\u5728statement\u4e2d\uff0cparameters \u6807\u7b7e\u4e0b\u7684sql \u53c2\u6570\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u66ff\u6362\n\u7b2c5\u70b9\uff0c\u8fd9\u53c2\u6570\u53ea\u662f\u5728\u9a8c\u8bc1\u6570\u636e\u65f6\u4f7f\u7528\uff0c\u5c5e\u4e8e\u4e00\u4e2a\u8ba9\u9a8c\u8bc1\u6570\u636e\u7b80\u5355\u4e9b\u7684\u914d\u7f6e\uff0c\u5c31\u662f\u68c0\u67e5\u7684\u6570\u636e\uff0c\u4e0d\u8981\u6c42\u987a\u5e8f\n\u7b2c7\u70b9\uff0cparse-context \u6211\u6709\u4e9b\u4e0d\u592a\u7406\u89e3\uff0c\u8fd9\u4e2a\u52a0\u4e0a\u53bb\u662f\u4e0d\u662f\u4e3a\u4e86\uff0csql\u89e3\u6790\u7c7b\u578b\u7684\u68c0\u67e5\u7528\u7684\uff0c\u5c31\u662f\u5f00\u59cb\u8bf4\u7684\u5e0c\u671b\uff0csql \u89e3\u6790\u9a8c\u8bc1\u548c\u6570\u636e\u89e3\u6790\u9a8c\u8bc1\u4e00\u8d77\u8fdb\u884c\u7684\u90a3\u4e2a\uff1f\n. agree, yes, +1. agree, yes, +1. You can look at the documentation, which has a custom sharding implementation. https://shardingsphere.apache.org/document/legacy/3.x/document/en/features/sharding/concept/sharding/    Look at the bottom of this. ",
    "yinwenyu": "\u641c\u72d0\u8d44\u8baf \u5728\u7528\u6237\u6a21\u5757\u7ea2\u5305\u4e1a\u52a1\u4e2d\uff0c\u4f7f\u7528\u4e86Sharding-JDBC\uff0c\u4ee5\u7528\u6237ID\u53d6\u6a21\u8fdb\u884c\u5206\u8868\uff0c\u89e3\u51b3\u4e86\u7528\u6237\u6301\u7eed\u5927\u91cf\u589e\u957f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5355\u8868\u6570\u636e\u91cf\u589e\u957f\u8fc7\u5feb\u7a81\u7834\u9650\u5236\u7684\u95ee\u9898\u3002\u540e\u9762\u968f\u7740\u7528\u6237\u91cf\u7684\u4e0d\u65ad\u589e\u957f\u5c06\u4f7f\u7528Sharding-JDBC\u4ee5\u7528\u6237\u4e3a\u7ef4\u5ea6\u8fdb\u884c\u5206\u5e93\uff0c\u4ee5\u89e3\u51b3\u6570\u636e\u5e93\u9ad8\u8bbf\u95ee\u91cf\u7684\u95ee\u9898\u3002\n. ",
    "jixiaod": "@aaa5131421 \u540c\u6837\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5df2\u7ecf\u662f\u7f16\u7a0b\u65b9\u5f0f\u8c03\u7528\u3002\u8dea\u6c42\u600e\u4e48\u89e3\u51b3\n`\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n    @Bean\n    @Primary\n    public static SqlSessionFactoryBean createSqlSessionFactoryBean() throws SQLException, IOException {\n    SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();\n    // \u8bbe\u7f6emybatis configuration \u626b\u63cf\u8def\u5f84\n    sqlSessionFactoryBean.setConfigLocation(new ClassPathResource(\"META-INF/mybatis-config.xml\"));\n\n    // \u6dfb\u52a0mapper \u626b\u63cf\u8def\u5f84\n    PathMatchingResourcePatternResolver pathMatchingResourcePatternResolver = new PathMatchingResourcePatternResolver();\n    sqlSessionFactoryBean.setMapperLocations(pathMatchingResourcePatternResolver.getResources(ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + \"/META-INF/mapper/*.xml\"));\n\n    // \u8bbe\u7f6edatasource\n    DataSource dataSource = getMasterSlaveDataSource();\n    sqlSessionFactoryBean.setDataSource(dataSource);\n    return sqlSessionFactoryBean;\n}\n\nprivate static DataSource getMasterSlaveDataSource() throws SQLException {\n    MasterSlaveRuleConfiguration masterSlaveRuleConfig = new MasterSlaveRuleConfiguration();\n    masterSlaveRuleConfig.setName(\"ds_master_slave\");\n    masterSlaveRuleConfig.setMasterDataSourceName(\"ds_master\");\n    masterSlaveRuleConfig.setSlaveDataSourceNames(Arrays.asList(\"ds_slave_0\", \"ds_slave_1\"));\n    return MasterSlaveDataSourceFactory.createDataSource(createDataSourceMap(), masterSlaveRuleConfig, new ConcurrentHashMap<>());\n}\n\nprivate static Map<String, DataSource> createDataSourceMap() {\n    final Map<String, DataSource> result = new HashMap<>(3, 1);\n    result.put(\"ds_master\", createDataSource(\"dev\"));\n    result.put(\"ds_slave_0\", createDataSource(\"dev\"));\n    result.put(\"ds_slave_1\", createDataSource(\"dev\"));\n    return result;\n}\n\nprivate static DataSource createDataSource(final String dataSourceName) {\n\n    DruidDataSource result = new DruidDataSource();\n    result.setDriverClassName(com.mysql.jdbc.Driver.class.getName());\n    result.setUrl(URL_PREFIX + dataSourceName);\n    result.setUsername(USER_NAME);\n    result.setPassword(PASSWORD);\n    return result;\n}\n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n`. @aaa5131421 \u5728\u8fd9 #643. @aaa5131421 \u8ddf\u4f60\u8fd9\u4e2a\u4e00\u6837\u7684\u9519\u8bef\nCaused by: java.lang.NullPointerException: null\nat io.shardingjdbc.spring.boot.SpringBootConfiguration.setDataSourceMap(SpringBootConfiguration.java:55) ~[sharding-jdbc-core-spring-boot-starter-2.0.3.jar:na]. @aaa5131421 \n\u628apom.xml\u7684\u5220\u9664\uff0c\u5c31\u597d\u4e86\u2026\u2026\n  <dependency>\n        <groupId>io.shardingjdbc</groupId>\n        <artifactId>sharding-jdbc-core-spring-boot-starter</artifactId>\n        <version>2.0.3</version>\n    </dependency>\n\n. \u5df2\u89e3\u51b3. > maybe google can help you.\n\ncan this article help you? https://blog.csdn.net/gjq246/article/details/77074611\n\nno, it is not the same problem. i only include the eureka client.\n<!--spring cloud eureka client-->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n            <version>2.0.1.RELEASE</version>\n        </dependency>. when I only use springboot 2.0 and Sharding-JDBC, everyting is OK. But after include spring cloud 2.0 eureka,  get the error.I can show you the demo code if you like.. ",
    "chenqiuxia": "\u8fd9\u4e2aissue\u600e\u4e48\u5c31close\u4e86\uff1f\u4e0d\u51c6\u5907\u652f\u6301spring boot2.0\u4e86\u5417\uff1f. ",
    "yujiaao": "\u4ffa\u6709\u70b9\u5f3a\u8feb\u75c7. ",
    "sagkanon": "\u6d4b\u8bd5\u4e0b\u6765\u662f\u6709\u95ee\u9898\u7684  \u4e0a\u9762\u8d34\u51fa\u6765\u7684\u89e3\u6790\u51fa\u6765\u7684DMLStatement\u53ef\u4ee5\u770b\u51fa\u6765  \u770b\u4e0a\u53bb\u503c\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\u9519\u8bef\u7684\n\u5728\u8fdb\u884cdb\u7684\u8def\u7531\u65f6 \u4f7f\u7528\u4e86standard strategy \u53ea\u6839\u636e\u4e0a\u9762sql\u4e2duser_new_id\u6765\u8fdb\u884c\u8def\u7531\u7684\n\u5728\u8fdb\u884ctable\u7684\u8def\u7531\u65f6 \u4f7f\u7528\u4e86complex strategy  \u6839\u636euser_new_id, guid, create_time\u6765\u8fdb\u884c\u8def\u7531\u7684 \n\u6211\u6d4b\u4e0b\u6765 \u5728\u8fdb\u884cdb\u8def\u7531\u65f6  user_new_id\u53d6\u5230\u7684\u503c\u662f\u5176\u4ed6column\u7684\u503c . thanks!  it is urgent for me, so I would like to support the data types by myself first.. after verification work, then I will register a pull request.. agree, yes, +1\n. ",
    "ztgoto": "druid\u6570\u636e\u6e90\u548cjdbc\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u5c1d\u8bd5\u4fee\u6539\u4e86\u6570\u636e\u5e93\u7684\u5168\u5c40\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u5728druid\u6216jdbc\u4e0a\u90fd\u80fd\u6b63\u786e\u53cd\u6620\u51fa\u6765\u3002\n\u800csharding-jdbc\u4e0d\u884c\uff0c\u4e3b\u8981\u539f\u56e0\u6765\u81f3\u4e8esharding-jdbc\u4e2dAbstractConnectionAdapter transactionIsolation\u4f7f\u7528\u7684\u662fTRANSACTION_READ_UNCOMMITTED\uff0c\u5728\u5e76\u672a\u624b\u52a8\u8bbe\u7f6esharding-jdbc\u8fde\u63a5\u65f6\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u60c5\u51b5\u4e0b \u53d6\u5230\u7684\u5c31\u662fTRANSACTION_READ_UNCOMMITTED \u8fd9\u4e2a\u9ed8\u8ba4\u503c\uff0c\u5e76\u975e\u4e3a\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b. ",
    "meta-life": "\u4f60\u597d\uff0c\u611f\u8c22\u56de\u590d\uff01hql\u7c7b\u4f3c from Model m where m.xx=? ,\u6ca1\u4f7f\u7528schema.table. \u8fd8\u6709\u4e2a\u95ee\u9898\uff0c\u4e00\u5f20\u8868\u672a\u914d\u7f6e\u5206\u7247\u89c4\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u6570\u636e\u6e90\uff0c\u662f\u5426\u53ef\u4ee5\u8df3\u8fc7sql\u91cd\u5199\u9636\u6bb5. ",
    "Leowang628": "\u914d\u7f6e\u4e86default-data-source-name\u4f9d\u7136\u4f1a\u62a5\u9519\uff0c\u662f\u4ec0\u4e48\u539f\u56e0\u5462. \napplicationContext-mybatis.txt\n. OK,Thanks for your help~. ",
    "zhao41654828": "\u8fd9\u4e2a\u7279\u6027\uff0c\u80fd\u4e0d\u80fd\u52a0\u4e0a\u54e6\uff1f\n\u6216\u8005\u63d0\u4f9b\u4e0b\u5907\u9009\u89e3\u51b3\u65b9\u6848~\n\u5c06\u914d\u7f6e\u653e\u5728zk\u4e0a\uff0c\u589e\u52a0\u4e86 zk\u7684 \u8fd0\u7ef4\u6210\u672c\uff0c\u5f88\u591a\u5c0f\u516c\u53f8\u8fd9\u5757\u5e76\u4e0d\u6210\u719f\u3002. \u53cc\u4e3b\uff0c\u5e94\u8be5\u4e5f\u5b58\u5728\u914d\u7f6e\u7684\u95ee\u9898\u5427\n\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c\u600e\u4e48\u5feb\u901f\u5207\u6362\u5230\u53e6\u5916\u4e00\u53f0master\u5462. \u6069\uff0c\u53cc\u4e3b \u81ea\u52a8\u5207\u6362\uff0c\u53ef\u80fd\u662f\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\n\u76ee\u524d\uff0c\u8fd9\u91cc \u53e6\u5916\u4e00\u53f0master \u53ea\u662f\u4f5c\u4e3a \u4e00\u53f0\u707e\u5907\uff0c\u5f53master\u51fa\u6545\u969c\u7684\u65f6\u5019\uff0c\u624b\u52a8\u5207\u6362\u4e00\u4e0b\uff0c\u8fd9\u6837\u53ef\u80fd\u7a33\u5b9a\u4ee5\u53ca\u53ef\u9760\u4e00\u4e9b\n\u53e6\u5916\uff1a\u5b98\u65b9\u7fa4\uff0c\u8fd8\u6709\u540d\u989d\u5417\uff0c\u8fd9\u91cc\u54a8\u8be2\u95ee\u9898\uff0c\u7a0d\u5fae\u6709\u4e9b\u6162~. \u8fd9\u91cc\u5e0c\u671b\u4f7f\u7528 sharding jdbc\u7684\u5206\u5e93\u7b97\u6cd5\uff0c\u5f53\u6b63\u5e38 \u4e3b\u5907 \u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c\u5e0c\u671b\u80fd\u591f\u5207\u6362\u5230 \u5176\u4ed6\u7684 \u5907\u7528 \u5e93\u3002\n\u8fd9\u662f\u76ee\u524d\uff0c\u6bd4\u8f83\u5feb\u4e14\u7a33\u5b9a\u7684\u65b9\u6848\u4e86\u3002\n\u6240\u4ee5\u4f1a\u6709\u914d\u7f6e\u591a\u4e2a\u4e3b\u5907\u7684\u60c5\u51b5\n. ",
    "xie-summer": "@jixiaod  \u600e\u4e48\u89e3\u51b3\u7684\uff1f\u6c42\u6559. ",
    "jameschopin": "\u6c42\u9ad8\u624b\uff01\uff01\uff01. \nwhy no database \u3002\u3002. ",
    "CharlesMaster": "Talk About A Snowflake Error \u300a\u4ece\u4e00\u6b21Snowflake\u5f02\u5e38\u8bf4\u8d77\u300b. agree, yes, +1. ",
    "saaavsaaa": "\u4e5f\u4e0d\u7b97\u6587\u7ae0\u5427\uff0c\u8ddf\u7740\u8c03\u8bd5\u8bfb\u4ee3\u7801\u7684\u8bb0\u5f55\uff0c\u6709\u7406\u89e3\u9519\u7684\u5730\u65b9\uff0c\u8fd8\u671b\u6307\u51fa\uff0c\u67e5\u8be2\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u540e\u7eed\u6709\u4e0d\u540c\u7684\u60c5\u51b5\u4f1a\u7ee7\u7eed\u5f80\u91cc\u8865\u5145\u7684\nhttps://saaavsaaa.github.io/aaa/SpringBoot_ShardingJdbc_Code_Load_Run_Query.html. OK.I will get to know the concept for logic index first.. I close it until I do it well.. Without Unit Test. And I'm doing it.Any suggestions\uff1f. It should be fine.\nshardingjdbc/sharding-jdbc/sharding-core/src/test/resources/parser/select.xml \nparser-result id -> sql-case-id. I suggest that you may not to use the sql function as far as possible. Because it will spend more CPU resources.. The problem is not recurred. I'll check it first.. I'll check it carefully.It passed in my fork branch.. agree, yes, +1. The \"blockUntilConnected\" is a public method. And when I solve the todo which on \"boolean start(int wait, TimeUnit units)\"\uff0cI will expire it.. rename to RetryCallable. Already use lombok , the result property use the @Setter but getResult have other logic.. ",
    "zongtanghu": "\u5199\u4e86\u4e00\u7bc7ShardingJdbc\u7684\u5e94\u7528\u5f00\u53d1\u6587\u7ae0\uff0c\u57fa\u4e8e\u7684\u662f1.X\u7248\u672c\u7684\uff0c\u540e\u9762\u8fd8\u5c062.X\u7248\u672c\u7684\u96c6\u6210\u81f3SpringBoot\u5de5\u7a0b\u4e2d\uff0c\u8be5\u7bc7\u5e94\u7528\u6587\u7ae0\u4e3a\uff1a\u300a\u8bb0\u4e00\u6b21\u4f7f\u7528ShardingJdbc\u5207\u5206\u6570\u636e\u5e93\u8868\u7684SpringBoot\u5de5\u7a0b\u5b9e\u8df5\u300b\uff1ahttps://mp.weixin.qq.com/s/GZHmenOIOd1LJnI50ZW1ag \u5982\u679c\u5bf9\u4f7f\u7528ShardingJDBC1.X\u7248\u672c\u96c6\u6210\u81f3SpringBoot\u5de5\u7a0b\u4e0d\u751a\u4e86\u89e3\u7684\uff0c\u6b22\u8fce\u63a2\u8ba8\u548c\u4ea4\u6d41. \u518d\u6b21\u5199\u4e86\u4e00\u7bc7ShardingJdbc\u7684\u5e94\u7528\u5f00\u53d1\u6587\u7ae0\uff0c\u8fd9\u7bc7\u4fa7\u91cd\u4e8e\u5b9e\u6218\uff08\u4e3b\u8981\u7ed3\u5408\u4e86\u4e1a\u52a1\u6765\u8bf4\u7684\uff09\uff0chttps://mp.weixin.qq.com/s/lLct0qY_D82-Wh5zrkzWiQ\uff0c\u6b22\u8fce\u63a2\u8ba8\u548c\u4ea4\u6d41. agree, yes, +1. ",
    "pkaq": "mybatis plus\u6574\u5408sharding-jdbc\u5728\u57fa\u4e8espring boot\u7684\u9879\u76ee\u4e2d\u7684\u5355\u5e93\u5206\u8868\u5e94\u7528\n. ",
    "apgzs": "\u8fd9\u4e2a\u6709\u6ca1\u6709\u4e34\u65f6\u7684\u89e3\u51b3\u529e\u6cd5. When is version 2.1.0 released. ",
    "tomatoo1": "Compared with mycat, it is more active and the homepage is much more pretty. We are considering using sharding-proxy as our mysql proxy. When will it be released?. too long. we will be using mycat-server first. ",
    "Coven2014": "\u6709inline\u8868\u8fbe\u5f0f\u90a3\u79cd\u7b80\u5355\u914d\u7f6e\u65b9\u5f0f\u5417\uff0c\u4e0d\u662f\u679a\u4e3e\u5f0f\u7684\u5168\u5217\u51fa\u6765\uff0c\u6bd5\u7adf\u6709512\u4e2a\u5206\u7247\u3002. ",
    "taojintianxia": "understood. ### that's not code related, it's just a kind of standard, let's get straight with following example :\nthis is the latest git log from ss :\n```\nrefactor rewrite\n@terrymanu\nterrymanu committed 5 days ago\nmove MasterSlaveSQLRewriteEngine to sharding-core\n@terrymanu\nterrymanu committed 5 days ago\nadd comparable for SQLToken\n@terrymanu\nterrymanu committed 5 days ago\njava doc \n@tristaZero\ntristaZero committed 5 days ago\nadd author\n@tristaZero\ntristaZero committed 5 days ago\n```\nlet's add some keywords to make it in different specific type :\n```\nRefactor: refactor rewrite\n@terrymanu\nterrymanu committed 5 days ago\nRefactor: move MasterSlaveSQLRewriteEngine to sharding-core\n@terrymanu\nterrymanu committed 5 days ago\nAdd: add comparable for SQLToken\n@terrymanu\nterrymanu committed 5 days ago\nDocument: java doc \n@tristaZero\ntristaZero committed 5 days ago\nReword: add author\n@tristaZero\ntristaZero committed 5 days ago\n```\nwith git template :\n```\nImproved the documentation of ss chapter xxx\nSee links to relevant web pages, issue trackers, blog articles, etc.\nSee: https://example.com/\nSee: Example Page\nList all co-authors, so version control systems can connect teams.\nCo-authored-by: Name trista@example.com\nWhy is this change happening, e.g. goals, use cases, stories, etc.?\nWhy: why u do that\nHow is this change happening, e.g. implementations, algorithms, etc.?\nHow: how you do that\nTags suitable for searching, such as hashtags, keywords, etc.\nTags: xxx\n```\n. check this  : https://github.com/joelparkerhenderson/git_commit_message. so will official provide a ss-config-center ? . ",
    "rjma": "\u8c22\u8c22\u56de\u590d\u3002\n\u4e3b\u8981\u6211\u4eec\u81ea\u5df1\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8def\u7531\u9700\u6c42\uff0c\u6d89\u53ca\u5185\u90e8\u7ebf\u4e0a\u62d3\u6251\u7ed3\u6784\uff0c\u4e0d\u4fbf\u7ec6\u8bf4\u3002\u5df2\u7ecf\u6709\u7684strategy\u4e0d\u5168\u9002\u5408\u6211\u4eec\u7684\u573a\u666f\uff0c\u800c\u4e14\u4e2a\u4eba\u4e5f\u89c9\u5f97\u5f00\u653e\u8def\u7531\u7b97\u6cd5\u53ef\u81ea\u5b9a\u4e49\uff0c\u53ef\u4ee5\u63d0\u5347sharding jdbc\u7684\u9002\u7528\u5e7f\u6cdb\u6027\uff0c\u4f30\u8ba1\u4e5f\u4f1a\u6709\u4e00\u4e9b\u573a\u666f\u56e0\u4e3a\u4e00\u4e9b\u5c40\u9650\u6027\u9700\u8981\u5bf9\u8def\u7531\u7b56\u7565\u505a\u8c03\u6574\uff0c\u6240\u4ee5\u6211\u63d0\u51fa\u4e86\u8fd9\u4e2a\u6539\u8fdb\u7533\u8bf7\uff0c\u4e3b\u8981\u53ef\u4ee5\u8282\u7701\u6211\u4eec\u4e0a\u5343\u884c\u4ee3\u7801\u7684\u6539\u5199\u548c\u540c\u6b65\u3002:). \u771f\u662f\u5f88\u9057\u61be\uff0c\u6743\u5229\u6240\u9650\uff0c\u6211\u65e0\u6cd5\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\u4e86\u3002\u4e0d\u8fc7\uff0c\u8fd8\u662f\u5f88\u611f\u8c22\u4f60\u4eec\u7684\u5f00\u6e90\u8d21\u732e\u3002. ",
    "liha0": "\u6c34\u5e73\u5206\u8868\u4e0d\u5e94\u8be5\u662f\u9488\u5bf9\u8868\u7ed3\u6784\u76f8\u540c\u5206\u644a\u6570\u636e\u5417\u3002\u3002\u6211\u89c9\u5f97\u8fd9\u4e2a\u548c\u8868\u540d\u6ca1\u5173\u7cfb\u7684\uff0c\u4e0d\u80fd\u8981\u6c42\u8868\u540d\u90fd\u5b8c\u5168\u76f8\u540c\u624d\u53eb\u6c34\u5e73\u5206\u8868\u5427\u3002\u3002  \u6211\u60f3\u8bf7\u6559\u4e0bsharding-jdbc\u4e0d\u652f\u6301\u8fd9\u4e2a\u662f\u6709\u6027\u80fd\u5f71\u54cd\u5417\uff1f. ",
    "siusn": "This function is on 3.x, but not on 2.x\n@ma-xiao-guang-64\n\u672c\u5730\u65e0datasource\u914d\u7f6e\u65f6\u4ece\u6ce8\u518c\u4e2d\u5fc3\u52a0\u8f7ddatasource\u914d\u7f6e. +1. thank you \uff01. Unable to load the configuration, how should zk node be configured?\n2018-08-20 19:01:05.690  WARN  --- [           main] [o.s.c.s.ClassPathXmlApplicationContext       :550] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [META-INF/orche/zookeeper/cloud/shardingTables.xml]: Cannot resolve reference to bean 'shardingDataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shardingDataSource': Invocation of init method failed; nested exception is io.shardingsphere.core.exception.ShardingConfigurationException: No available sharding rule configuration to load.\nException in thread \"main\" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [META-INF/orche/zookeeper/cloud/shardingTables.xml]: Cannot resolve reference to bean 'shardingDataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shardingDataSource': Invocation of init method failed; nested exception is io.shardingsphere.core.exception.ShardingConfigurationException: No available sharding rule configuration to load.\n    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)\n    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1531)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1276)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\n    at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\n    at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:139)\n    at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:83)\n    at io.shardingsphere.example.spring.namespace.jpa.main.orche.zookeeper.ShardingOnlyWithTables.main(ShardingOnlyWithTables.java:29). I made a mistake. Thank you. OK,thank you. ",
    "wudadadaju": "\u662f\u8fd9\u6837\u7684\uff0c \u6211\u5728\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u53ea\u5bfc\u5165\u4e86sharding-jdbc-example\u3001sharding-jdbc-spring-boot-example\u3001sharding-jdbc-spring-boot-data-jpa-example\u3001sharding-jdbc-spring-boot-data-mybatis-example\u8fd9\u56db\u4e2a\u9879\u76ee\uff0c\u7136\u540e\u8fd0\u884c\u62a5\u90a3\u4e2a\u9519\u8bef\n. ",
    "bbenguo": "io.shardingjdbc.core.parsing.parser.exception.SQLParsingUnsupportedException: Not supported token 'SHOW'.\n    at io.shardingjdbc.core.parsing.parser.sql.SQLParserFactory.newInstance(SQLParserFactory.java:57)\n    at io.shardingjdbc.core.parsing.SQLParsingEngine.parse(SQLParsingEngine.java:50)\n    at io.shardingjdbc.core.routing.router.ParsingSQLRouter.parse(ParsingSQLRouter.java:74)\n    at io.shardingjdbc.core.routing.StatementRoutingEngine.route(StatementRoutingEngine.java:47)\n    at io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.generateExecutor(ShardingStatement.java:191)\n    at io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.executeQuery(ShardingStatement.java:97)\n    at com.meicloud.saas.base.ShardingUtil.isTableExists(ShardingUtil.java:109). ",
    "yu199195": "i have resubmit. ",
    "shulyLi": "\u6211\u4e0d\u8ba4\u4e3a \u8fd9\u7b97\u4e00\u4e2abug\uff0c \u53ea\u4e0d\u8fc7\u5728\u4e00\u6b21\u7684\u64cd\u4f5c\u5185\u8fdb\u884c\u4e86\u591a\u6b21 getDataSource,\n     roundbin \uff1a atomic.increase \u6b21\u6570\u591a\u3002\u4e14\u5f71\u54cd \u8f6e\u8bad\u7684\u6548\u679c\uff0c \u4e14cas \u6bd5\u7adf\u662f\u4e00\u4e2aCPU\u652f\u6301\u7684\u539f\u5b50\u64cd\u4f5c\u3002\n     random   \uff1a  new Random().nextInt(slaveDataSourceNames.size()) \u8981System.nanoTime()\u7684\n    \u90fd\u4e0d\u662f \u9891\u7e41\u53cb\u597d\u7684\u64cd\u4f5c\u3002\n. Forgive me for not using English. @ypg521   The amount of concurrency is too low. @ypg521 \u8bf4\u7684\u4e5f\u5bf9\uff0c\u5c3d\u7ba1 \u4e0d\u80fd\u8bf4\u662fbug \u4f46\u662f\u5728\u4e00\u6b21 \u539f\u5b50\u67e5\u8be2\u91cc\u5c31\u8981\u8fdb\u884c\u591a\u6b21\u7684 get  \u4e5f\u4e0d\u592a\u5408\u7406. @terrymanu   yes !  Update  then Select, but I don't hope  that the operation will  has two connection.\n( \u7528\u4e2d\u6587\u8bf4\n \u662f\u5426\u6709\u8fd9\u6837\u7684\n\u666e\u901a\u6ce8\u89e3\n         --\u5728\u8fd9\u4e2a\u589e\u5f3a\u5185\uff0c \u53ea\u4f1a\u53bb\u8bfb\u53d6\u4e3b\u5e93\uff08\u6216\u8005\u53ef\u6307\u5b9a\uff0c\u5982\u679c\u4f1a\u66f4\u65b0\u4ece\u5e93\u5c31\u629b\u51fa\u5f02\u5e38\uff09\n\u4e8b\u52a1\u6ce8\u89e3\uff1a\n         --\u5728\u8fd9\u4e2a\u589e\u5f3a\u5185\uff0c \u53ea\u4f1a\u6709\u4e00\u4e2a\u94fe\u63a5  (\u4e3b\u5e93\u7684\u67d0\u4e2a\u5206\u533a\uff0c \u5982\u679c\u4f1a\u6709\u591a\u4e2a\u90a3\u4e48\u629b\u51fa\u5f02\u5e38\u5373\u53ef)\n). but I don't want to use Transactional.  Hope U response  and I will close it .. @terrymanu  thank U  !   \u60f3\u505a\u5230\u81ea\u5982\u505a\u5230\u63a7\u5236\uff0c \u6211\u4f1a\u4ed4\u7ec6\u9605\u8bfb\u6587\u6863\u7684\uff0c\u6253\u6270\uff01. ",
    "itbright-cn": "@pnfee \u8bf7\u95ee\u60a8\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u4e48\uff1f\u6211\u73b0\u5728\u9047\u5230\u7684\u95ee\u9898\u548c\u4f60\u7684\u6709\u70b9\u513f\u50cf\uff0c\u4f46\u662f\u8fd8\u4e0d\u5b8c\u5168\u76f8\u540c\u3002\n\u6211\u7684\u573a\u666f\u5982\u4e0b\uff1a\u4e00\u4e3b\u4e00\u4ece\uff0c\u4ee3\u7801\u5728\u5faa\u73af\uff08\u5faa\u73af\u7ee7\u7eed\u7684\u6761\u4ef6\u4e0e\u4ece\u6570\u636e\u5e93\u4e2d\u63d2\u5165\u7684\u6570\u636e\u662f\u5426\u6709\u6548\u6709\u5173\uff09\u91cc\u9762\u5f80\u4e3b\u5e93\u63d2\u5165\u6570\u636e\uff0c\u8fd8\u4f1a\u4ece\u4ece\u5e93\u91cc\u9762\u53bb\u67e5\u8be2\uff0c\u8fd9\u65f6\uff0c\u56e0\u4e3a\u4e3b\u4ece\u5ef6\u8fdf\u95ee\u9898\uff0c\u4f1a\u5bfc\u81f4\u6211\u7684\u63d2\u5165\u6570\u636e\u4f1a\u662f\u591a\u6761\u3002\u4e4b\u524d\u6ca1\u6709\u5206\u4e3b\u4ece\u7684\u65f6\u5019\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u6211\u60f3\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6709\u5230\u540c\u6837\u7684\u95ee\u9898\uff0c\u770b\u770b\u662f\u5426\u6709\u89e3\u51b3\u601d\u8def\u3002\u611f\u8c22\uff01. ",
    "chncho": "\u4f46\u662f\uff0c\u5f53\u4ec5\u5206\u8868\uff0c\u4e0d\u5206\u5e93\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u5fc5\u8981\u53bb\u5f15\u5165 \u5206\u5e03\u5f0f\u8fd9\u6837 \u4e0d\u4e00\u81f4\u6027\u7684\u5904\u7406\u7684\uff0c\u5176\u5b9e\u6211\u7684\u95ee\u9898\u4e3b\u8981\u662f\u9488\u5bf9 \u201c\u65b9\u6cd51\uff1a\u914d\u7f6edefault-data-source\uff0c\u51e1\u662f\u5728\u9ed8\u8ba4\u6570\u636e\u6e90\u4e2d\u7684\u8868\u53ef\u4ee5\u65e0\u9700\u914d\u7f6e\u5728\u5206\u7247\u89c4\u5219\u4e2d\uff0cSharding-JDBC\u5c06\u5728\u627e\u4e0d\u5230\u5206\u7247\u6570\u636e\u6e90\u7684\u60c5\u51b5\u4e0b\u5c06\u8868\u8def\u7531\u81f3\u9ed8\u8ba4\u6570\u636e\u6e90\u3002\n\u3010\u8be5\u65b9\u6cd5\uff0c\u4e0d\u8def\u7531\u7684\u8868\uff0c\u4e5f\u4f1a\u6709sql\u517c\u5bb9\u6027\u68c0\u67e5\uff0c\u5bf9\u4e8e\u4e0d\u652f\u6301\u7684sql\u4f1a\u62a5\u5f02\u5e38\u3011\u201d \u8fd9\u4e2a\uff0c\u8fd9\u5757\u80fd\u5426\u9488\u5bf9\u4e0d\u8def\u7531\u7684\u8868\u653e\u5bbd\u9650\u5236. \u6bd4\u5982\uff0c\u89e3\u6790\u7684\u65f6\u5019\u5148\u89e3\u6790\u6709\u54ea\u4e9b\u8868\uff0c\u89e3\u6790\u5b8c\u6709\u54ea\u4e9b\u8868\u4e4b\u540e\uff0c\u518d\u770b\u4ed6\u6709\u6ca1\u6709\u8def\u7531\u89c4\u5219\uff0c\u8def\u7531\u89c4\u5219\u662f\u4e0d\u662fNone\uff0c\u5982\u679c\u662f\u8fd9\u6837\uff0c\u5c31\u4e0d\u8d70\u540e\u9762\u7684\u89e3\u6790\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884csql\u8bed\u53e5\u5373\u53ef. @terrymanu \nMy English is a bit poor, if there are problems caused you express, please point out, thank you (^ - ^)\nI think of two scenarios:\n\n\nAdjust the parsing order, give priority to the from keyword, analyze the table, and determine whether there is a routing rule, and whether it is a non-sharding rule.\n\n\nAdd a new module, before the start of the all process, first began to parse the from keyword (relative freedom, because is a new module, parsing rules should be recursive interception and parse the from keyword), and then judge the routing rules. Depending on the judge result, to decide to continue with the rules that follow the lead, or skip that and direct execute  the original SQL.. you can try to read it , and i think it is possible after i do . we  can discuss further after you have read it. @JayceeQ  . \u6bcf\u4e2a\u6570\u636e\u6e90\u5185\u53ef\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\uff0c\u591a\u4e2a\u6570\u636e\u6e90\u76ee\u524d\u5c31\u662f\u67d4\u6027\u4e8b\u52a1\u4e86\n\u5176\u5b83\u7684\u5c31\u662f\u5206\u8868\u7684\u7b56\u7565\u914d\u7f6e\u4e86. \u4e8b\u52a1\u76f8\u5173\uff1ahttp://shardingjdbc.io/docs_cn/02-guide/transaction/\n\u5206\u8868\u7b56\u7565\u76f8\u5173\uff1ahttp://shardingjdbc.io/docs_cn/02-guide/sharding/. \n\n",
    "JayceeQ": "Hi,  I just prepare to read the Sharding-JDBC source code. Below is just my own opinion. We should use SQL parsing engine to do the analyzing, and during the parsing procedure, we already know if the SQL syntax is supported I think. So we can't get the tables as simple as you think about it. . ",
    "wangdan0-0": "\n\u8bf4\u771f\u7684\uff0c\u5982\u679c\u4e0d\u89e3\u6790SQL\uff0c\u5c31\u7528\u5b57\u7b26\u4e32\u5305\u542b\u6765\u5224\u65ad\uff0c\u4f1a\u4e0d\u4f1a\u5728\u6b63\u786e\u6027\u4e0a\u5176\u5b9e\u662f\u6ca1\u6709\u95ee\u9898\u7684. sharding\u4f5c\u4e3a\u6574\u4e2a\u54c1\u724c\u7684\u540d\u79f0\uff0c\u7136\u540e\u9879\u76ee\u91cc\u9762\u53c8\u6709\u4e00\u4e9b\u4e13\u95e8\u7684\u89d2\u8272\u53eb\u505asharding\uff0c\u7a0d\u611f\u89c9\u6709\u70b9\u90a3\u5565\n\u91cd\u5e86\u7701 \u91cd\u5e86\u5e02 \u91cd\u5e86\u4e61 \u7684\u611f\u89c9\n\u4f46\u8fd9\u8bf4\u8d77\u6765\u5c31\u662f\u540e\u8bdd\u4e86. ",
    "chidaodezhongsheng": "agree, yes, +1. ",
    "gaoyaqiu": "agree, yes, +1. agree, yes, +1. ",
    "yikangfeng": "agree, yes, +1. ",
    "low901028": "agree, yes, +1. ",
    "learndockering": "agree, yes, +1. ",
    "nature9007": "agree\uff0cyes\uff0c +1. ",
    "himalayaRange": "agress , yes , +1. ",
    "gql374417967": "agree,yes,+1. ",
    "oracle219": "agree, yes, +1. Dangdang has go on to contribute for Sharding-Sphere.. ",
    "osbornjonny": "agree, yes, +1. ",
    "chinawind": "agree, yes, +1. ",
    "yjmyzz": "agree, yes, +1. ",
    "chengchenrui": "agree, yes, +1. ",
    "kiddyt00": "agree\uff0cyes\uff0c+1. ",
    "kuangzuoqiang": "agree, yes, +1. ",
    "lvxinrong": "agree, yes, +1. ",
    "490205395": "agree, yes, +1. ",
    "gufengwyx8": "agree, yes, +1. ",
    "LingLiYuki": "agree, yes, +1. ",
    "lipeng1234": "agree, yes, +1. ",
    "zhuokun": "agree, yes, +1. ",
    "cherrylzhao": "agree, yes, +1. that's a great suggest\uff01\nwe can implement Atomikos, narayana, SAGA transaction manager based on the common SPI.\nlet's do the detail SPI design together.. @zhfeng \nwe have defined XA SPI with class io.shardingsphere.core.transaction.spi.TransactionManager.\nAtomikosTransactionManager have been refactored in this way.\nnow, we'd like to discuss how to integrate with narayana transaction manager.\nAtomikos provided a wrapper datasource to enlist and delist resource into transaction manager while invoking jdbc interface.\nI haven't found a equivalence implement in narayana-jta\uff0cwould you please give me some hint\uff1f\n. @zhfeng \nthanks for your support, waiting for your goods news.\nit looks like Narayana can be integrated with ManagedDataSource directly.\nDbcpXADataSourceWrapper\n. hi, Zheng\nthanks for your great job.\nI have revise sharing-example using xa spi transaction.\nplease see more from XaTransactionMain.java\n. publish transaction modification in 3.1.0. please remove proxy.transaction.mode: TCC setting, M2 don't support transaction feature currently.. +1. same with issue #1116, will be resolve in 3.0.0.m3. same with #1116, will be resolved in 3.0.0.m3. currently sharding-proxy have integrated with XA, and our local transaction is quite same with XA.\nboth of them need to hold the routed sharing connection untill commit command is triggered.\nand performance improvement for local transaction is limit, so we decide to close this issue.. consider about refactor sharing-proxy, making local transaction connection binding with specified channel, in order to get all associate connections in commit phase..  * [x] refactor backendConnection\n    * [x] add LocalTransaction manager\n    * [x] split getConnection by transaction\n    * [x] make channel handle request one by one for none-transaction mode\n    * [x] make schema binding with backend connection\n    * [x] make connection id binding with backend connection\n * [x] refactor proxy transaction model\n    * [x] add BackendTransactionManager to handle transaction by type\n    * [x] refactor ComQueryPacket\n* [x] optimize performance and tolerance.\n   * [x] make connection automatically close when partition error happened.\n   * [x] resolve get connections dead lock for routing multi shards.\n * [x] add datasource map switch feature\n * [x] add setTransaType by SQL within proxy\n   * [x] refactor backendHandlerFactory\n   * [x] introduce sctl:set transaction_type=XX for proxy. hi, it seems that your linked article can't be access.\nI wandered that where should we invoke this register method, in sharding-sphere side or inside the transaction manager.. so XA recovery is depended on external recovery system implement.\nwe should register the XAResource when sub transaction is started. and when global transaction is finished, whether XAResource's status is need to update? I think recovery scanning process worked based on the XAResource of in-doubt transactions.. I think we can leverage init() and destroy() method using transactionManager of atomikos.\nAtomikos also have the similar recovery function, which implemented by AtomikosDatasourceBean.\nXA transaction event will be written in local file system, recovery thread will scan the uncommitted resource, then try to commit it again.\n. I'll change the spi definition in dev-3.1.0, please wait for a moment.. +1. @terrymanu please merge this PR to dev-3.1.0\n. > TODO:\n\n\nConsider about use DataSourceConfiguration and reflection to generate data source.\nUse SPI instead of Guava event bus to process transaction for performance issue.\nUse SPI to load database driver.\n\n\n\nOK\n\nQuestions:\n\nWhy choose TOMCAT_DBCP2 database connection pool by default XA transaction manger? Why not Atomikos?\n\n\nDefault is AtomikosDatasourceBean\uff0cTOMCAT_DBCP2 was recommended by redHat team, they have integrated succeed using it.\n\n\nWhat is BackendDataSourceFactory, if it only related with XA, maybe we should rename it.\n\n\nthis is factory interface for convert normal datasource to XA transactional datasource.\n\n\nXABackendDataSourceFactory is the main implantation of BackendDataSourceFactory,  maybe we can remove BackendDataSourceFactory. If you want create some test fixture on them, just use mock.\n\n\nXABackendDataSourceFactory is only the serviceLoader for finding the implementation in swarding-transaction, \n\n\nJDBCBackendDataSourceFactory is not a sub class of BackendDataSourceFactory, here maybe need a little refactor.\n\n\nthese two class has not relation, I have considered two refactor JDBCBackendDataSourceFactory,\nbut these two designed in different way in top level.\n\n\nWhy XABackendDataSourceConverter need to implements BackendDataSourceFactory?\nXABackendDataSourceConverter has already in your source code, why need SPI to inject it?\n\n\nI chose spi way to implement BackendDataSourceConvert, sharding-jdbc will only dependency spi interface, I'll change it later.\n\n\nMaybe we should initial XA data source on startup, it can avoid sync. Maybe we can judge via SPI to know XA transaction manager is existed.\n\n\nyes, I'll refactor it like that.\n\nTo be discuss:\n\nCreate XA data source will need 2 times for database connection, because we need to keep 2 types of data source map, any resolution to avoid it? If we use XA data source, but don't open XA transaction, is it possible work fine just like regular data source?\n\n\nI have listed the task in add switch controls within transaction type changes, i'll resolve these issues later.\n. it seems that I have done some duplicate works within converting normal datasource to transactional datasource, I also add some properties in DataSourceParameter, you can check it from \nhttps://github.com/sharding-sphere/sharding-sphere/blob/dev-3.1.0/sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java\nI'll add other pool connection configuration in DataSourceParameter lately. please pay attention to the xaDataSourceMap if renew datasources in DataSourceMap.\nI think renew ShardingDataSource is better.. in factor, we have used DataSource.getConnection.getMetaData().getDatabaseProductName() to get databaseType, within getConnection implement, DriverManager have used SPI way to find candidate Jdbc driver where user import, so I think it is not necessary for sharding-sphere to use SPI to load database driver. it is wonderful! consider about add a environment property to distinguish Jdbc and proxy\nmaybe we can modify transaction type through SET transaction='XX' in proxy.. hi\uff0cwe can adapter normal physical datasource to xa transactional datasource witin sharding datasource\uff0cso there is no need to change your original setting. also we can provide @sharding transactional and api to switch transaction type as you like. these feature will add in document later\n. hi\uff0cwe can adapter normal physical datasource to xa transactional datasource witin sharding datasource\uff0cso there is no need to change your original setting. also we can provide @sharding transactional and api to switch transaction type as you like. these feature will add in document later\n. now local transaction is weak XA transaction\uff0cplease see the document which cannot support scenario. hi\uff0cwe only call HintManager.clear within shardingConnection.close\uff0cso this is beyond on the timing when client invoke. generally if u begin a transaction using spring\uff0cspringTransactionMaanger will commit the connection\uff0cthen close it\n. so it seems that we should let user to clear hintManager\uff0cas they set hintmanager the way.. yes, SpringTransactionManager will invoke cleanAfterCompletion method to release connection, you can see the source AbstractPlatformTransactionManager#processCommit.\nin factor, when we call connection.close method, datasource pool  just change the connection status to Not use, physical connection of database will keep in the pool.. and you found some scenario thread local haven't clear, I think that is based on you set of the hintManager, if you set the threadLocal many times, but only close Sharding connection once,  this will happen.. it seems that we have fixed this issue in 3.1.0.m1\uff0cplease do the test tomorrow when we published.. and please show the insert sql and sharding rule. would you please upload your demo project to Github, let me have a try.\nor modify your demo as we have done in sharding-sphere-example\nusually if you don't construct ShardingDataSource, ShardingSphere will not been introduced into your project.. > @cherrylzhao How does the Sharding XA Resource enlist the XAResource to participate in the transaction ? I think it could be delegate to the different TM implementation or we can consider to use the common dbcp2. And how can we register it to the recovery manager ?\nyou're right, we have delegated to the different TM to enlist the resource.\nand we can leverage the pool feature of common datasource, instead of fixed dbcp2 and atomikosDataSourceBean. if datasource pool don't have XA feature, we can first get the connection, then wrap it to XAConnection. of course, in the XATransactionManager spi, we should provide register recovery method to complete recovery resource registration at bootstrap step.. we have tried to redefine the XATransaction SPI like this XATransactionManager,\nplease feel free to give us some idea.. hi, zhfeng \nI have made a Bitronix integration with sharing-sphere.\nyou can see more detail from my repository\nhttps://github.com/cherrylzhao/sharding-sphere-bitronix.git. hi, zhfeng\n\nWhy does it introduce the SingleXAResource ?\nWhy does it need the enlistResource method ? Although I think in the different vendor, the >implementation could be similar here just like\nTransationMangager.getCurrentTransaction().enlist(xaResource);\n\nSingleXAResource has the resourceName associated with registered recovery resource.\nusually JTA manager vendor have provided their owed XA transactional datasource pool to encapsulate process of XAResource enlist, we can enlist XAResource manually within sharding-sphere TransactionEngine layer. you can see more detail in XAShardingTransactionEngine.getConnection. @zhfeng \nwe have create a ShardingSphere-experimental repo to place SPI implementation module.\nyou can add a sharding-transaction-xa-narayana module here.\nShardingSphere-experimental . it's no problem in my local, sharding-transaction-saga have involved in this repo.\nmaybe u should pull latest code of incubator-shardingsphere, then do mvn clean install. @zhfeng I have created another issue #1777 to track the narayana integration, thanks a lot!. @zhfeng Atomikos and Bitronix pass the configuration through jta.properties files.\nwe can place this file in classpath to override the default parameters.. hi, walkingWind\nplease show more detail about config of application.yml and configuration annotation of boot main.\nhere is our document of how to use sharding-transaction. @walkingWind \nit seems that you have missed out configuring sharding.jdbc.datasource.names, please see our example for sharding-maser-slave case.. it seems ok, would you please push your demo project in GitHub. I have to reproduce this error in my local environment.. I have found the reason, we can't support the driver of mysql-8 now.\nplease change the mysql-connector-java to 5.1.42, it works in your demo project.. normal TransactionalDataSource only wrap the non-sharding datasource (ex: raw hikari) for supporting  distribute transaction. and sharding TransactionalDataSource will support both sharding and distribute transaction.. yes, we will provide api and spring-boot and namespace configuration to make the wrap transactionalDataSource easy.. @AllenTan \nthanks for your feedback, I have reproduced this error in my local, sharding-key of subquery can't parse correctly, then routResult get a null point exception, we'll try to fix this bug.. thanks for feedback, we'll fix it in #1878 . we have fixed it in #1878. hi\uff0cplease tell me more about your sharding-configuration from sharding-jdbc or proxy.\nplease let me know how to reproduce your problem.. is it ok in none-docker environment ? have you using XA transaction in your project?\nyou can see the document on  how to use XA transaction.. hi, please answer my question.. hi, I have made a sharding-jdbc docker environment based on our released example. the result is ok, so I think you have a wrong configuration while using XA transaction. so I will close this issue if you have no reply today.. @sfiloveyou how can I reproduce your problem, would you please push your project to GitHub.. prepare step for mysql protocol needs parse the origin sql and extract the parameter placeholder and table information. so parsing engine for prepare is ok, but we should use a none-sharding parsing engine instead in future.. hi, linyuliang, thanks for your feedback.\nplease show me your sharing configuration, thanks.. hi, would you please make \"sql.show: true\", and paste the Log information.\nI can't reproduce your issue on my local simulation environment, please see my test case:\nYamlConfigurationExampleTest. thanks for reply\uff0clet me check it lately. hi, I have checked the result, actual print result was in different thread, routing in one thread is right.\nyou can use Logger instead of printf to see the result.\n\n. ok , I have got your point ,thanks\n. it's ok in 4.0.0.M1, you can verify it using dev branch. I will trace the bug reason continually.. hi, this is the bug in FromWhereExtractor for Antlr Parsing Engine. we have fixed it.. please reference this file AbstractFromWhereExtractor.java\nthe point is that make predicateSegmentExtractor property only instance once.. @codefairy08 please make a check of above modified file. we'd like to close this issue, any question?. hi, thanks for feedback. we have fixed this issue in 4.0.0.M1-SNAPSHOT, you can verify it in dev branch, thanks.. fix at #1713 . please see the raw-jdbc-example. @joooohnli how do you config a list value of connectionInitSqls with DruidDataSource . is it ok if we support the collection, and separate each item with , .. below tasks need to be enhanced.\n- [ ]  DataSourceConfiguration sharding-core\n- [ ] DataSourceUtil sharding-jdbc-orchestration-spring-boot-starter\n- [ ] DataSourceUtil sharding-jdbc-spring-boot-starter. hi, please read the document https://shardingsphere.apache.org/document/legacy/3.x/document/cn/manual/sharding-jdbc/usage/transaction/. please give me a entire namespace xml configuration. \nor you can read our example in tag 3.1.0\nhttps://github.com/apache/incubator-shardingsphere-example/tree/3.1.0/sharding-jdbc-example/spring-namespace-nodep-example/spring-namespace-nodep-mybatis-example. what datasource are you using? how can i reproduce your error in my local environment.\nwould you please push a demo project to GitHub?. I have provide our spring-namespace-demo with XA transaction to you, it is OK.. yes, first, please run SpringNamespaceTransactionExample, it include XA transaction type.. apache release need a long time, maybe 3 moth. I will mark this issue with invalid, it is your environment problem.. transfer this issue to example project.. transfer to example project. transfer to example project. maybe AbstractXAtransactionManager only be used by AtomikosTransactionManager,\ni think narayaTransactionManager was implemented in other repo and don't depend on SS,\nso it seems that we should do init directly in AtomikosTransactionManager, and I think init() method can be removed.. I think we can remove this init() method, and do initialize in constructor of AtomikosTransactionManager directly. ok, I have fix it.. ok, I have fixed it.. ok, I have fixed it.. if we don't use userGroup, but define the customer ExecuteService in shardingProxy, it seems not a good idea. as we have discussed in wenxin chat, sharingProxy is only netty relevant variable.. we should use excecuteService like ShardingExecuteEngine way, also make blockingQueue was fixed at 16 is not a good idea.. it seem that we should extract ListeningExecutorService to a Util class for common use, as CommandExecutorContext will not use other feature in ShardingExecuteEngine.. I have fixed it ,comment out later.. I have fixed it ,comment out later.. yes ,this can be removed.. the transaction manager used by one shardingDataSource\uff0cthis is same as before\uff0cwould not clear. uuid length is too long\uff0catomikos has the max length check of resource name. delimiter have involed in the uniquekey. Let me have a try. that's right, let me revise it.. I have fixed it using ResourceDataSource.. ",
    "orangeyts": "agree, yes, +1. ok, close it. ",
    "Janyd": "\u6587\u6863\u4e0a\u660e\u786e\u8868\u793a\u4e0d\u652f\u6301. ",
    "tun100": "I'm confused because the latest.release.version, I was think it's a variable. And where's the version list can I choose? I can not found version in maven public repo and the document also doesn't offer a link to development.. @terrymanu Is the sharding-jdbc in maven public repo()?\nI add the dependency to xml file, but the ide notice me the dependency isn't exist.Where's the code wrong?please\n<dependency>\n            <groupId>io.shardingsphere</groupId>\n            <artifactId>sharding-jdbc</artifactId>\n            <version>3.0</version>\n        </dependency>. thank you. ",
    "KinCao": "\u73b0\u5728\u67093.0.0.M1\u7248\u672c\u5417\uff1f\u6211\u73b0\u5728\u8fd9\u4e48\u5199\u62a5\u9519\n\nio.shardingjdbc\nsharding-jdbc-core\n3.0.0.M1\n. \u7248\u672c 3.0.0.M1 \u7684\u4f9d\u8d56\u600e\u4e48\u52a0\u7684. ",
    "jensolzhu": "thanks all. \u540e\u6765\u68c0\u67e5\u53d1\u73b0\u662fOrchestrationMasterSlaveDataSourceBeanDefinitionParser.java\u6587\u4ef6\u540d\u592a\u957f\uff0cwindows\u4e0a\u62c9\u53d6\u4e0d\u4e0b\u6765. For issue 1:\n'show create table':\nCREATE TABLE sys_logon_log (\n  GROUP_ID bigint(20) DEFAULT NULL COMMENT '\u7ec4\u7ec7ID\uff08\u5982\u679c\u7ec4\u7ec7\u4e3a\u7a7a\uff0c\u4ee3\u7801\u8868\u4e3a\u5168\u5c40\u7684\uff09',\n  LOG_ID int(11) NOT NULL AUTO_INCREMENT COMMENT '\u65e5\u5fd7ID',\n  USER_NO varchar(32) NOT NULL COMMENT '\u7528\u6237\u7f16\u53f7',\n  USER_NAME varchar(64) NOT NULL COMMENT '\u7528\u6237\u540d\u79f0',\n  PASSWORD varchar(64) NOT NULL COMMENT '\u5bc6\u7801',\n  IP varchar(64) NOT NULL COMMENT 'IP\u5730\u5740',\n  LOGON_TIME datetime NOT NULL COMMENT '\u767b\u5f55\u65f6\u95f4',\n  LOGOFF_TIME datetime DEFAULT NULL COMMENT '\u4e0b\u7ebf\u65f6\u95f4',\n  PRIMARY KEY (LOG_ID)\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='\u767b\u5f55\u65e5\u5fd7'\nshow variables like 'character_set_database';\nutf8\n\u8865\u5145\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u7684url\u4e2d\u5e26?characterEncoding=utf8\uff08\u5728sharding-proxy\u7684console\u4e2d\u770b\u5230\u7684sql\u8bed\u53e5\u4e2d\u6587\u4e3a\u4e71\u7801\uff09\uff0c?characterEncoding=gbk\uff08\u5728sharding-proxy\u7684console\u4e2d\u770b\u5230\u7684sql\u8bed\u53e5\u4e2d\u6587\u6b63\u5e38\uff0c\u4f46\u7531\u4e8e\u6211\u7684\u6570\u636e\u5e93\u662futf8\u7f16\u7801\uff0c\u4e0d\u80fd\u8bbe\u7f6e\u6210gbk\uff09\u3002\u53ef\u80fdsharding-proxy\u9ed8\u8ba4\u7528\u4e86gbk\uff0c\u4e0d\u7528actual database \u7684\u7f16\u7801 \nFor issue 2:\ndataSources:\n  ds_1:\n    url: jdbc:mysql://10.12.102.140:3306/ccuap1\n    username: root\n    password: root\n  ds_2:\n    url: jdbc:mysql://10.12.102.140:3306/ccuap2\n    username: root\n    password: root\nshardingRule:\n  tables:\n    sys_logon_log:\n      actualDataNodes: ds_${1..2}.sys_logon_log\n      tableStrategy:\n        inline:\n          shardingColumn: group_id\n          algorithmExpression: sys_logon_log\n      keyGeneratorColumnName: group_id\n  bindingTables:\n    - sys_logon_log\n  defaultDatabaseStrategy:\n    inline:\n      shardingColumn: group_id\n      algorithmExpression: ds_${group_id}\n  defaultTableStrategy:\n    none:\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\nprops:\n    sql.show: true\n\u6ce8\uff1a\u5f53\u6211\u5728insert\u4e2dgroup_id=3\u65f6\uff0c\u65e0\u6cd5\u6309\u7167shardingRule\u83b7\u53d6\u5230datasouce\uff0c\u7a0b\u5e8f\u5c31\u4e00\u76f4\u7b49\u5f85\u5728\u90a3\u91cc\uff0c\u5efa\u8baetimeout\u540e\u629b\u5f02\u5e38\n. \u4e2a\u4eba\u5efa\u8bae\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5bf9\u4e8e\u5927\u5c0f\u5199\u4e0d\u533a\u5206\u7684\u6570\u636e\u5e93\u4f1a\u5e26\u6765\u4e00\u4e9b\u9ebb\u70e6\uff0c\u9700\u8981\u4e25\u683c\u8981\u6c42dba\u3001\u5f00\u53d1\u4eba\u5458\u6ce8\u610f\u5927\u5c0f\u5199\u3002. ",
    "unimme": "window\u78c1\u76d8\u6587\u4ef6\u8def\u5f84\u6709\u6700\u5927\u957f\u5ea6\u9650\u5236\uff0cwin10\u9ed8\u8ba4260\u4e2a\u5b57\u7b26\u3002\nOrchestrationMasterSlaveDataSourceBeanDefinitionParser.java \u7684\u6587\u4ef6\u8def\u5f84\u5f88\u6709\u53ef\u80fd\u8d85\u8fc7\u8be5\u9650\u5236\u3002\n\u6709\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a\n1\u3001\u628a\u9879\u76ee\u66f4\u65b0\u5230\u6839\u76ee\u5f55\u4e0b\u3002\n2\u3001\u4fee\u6539win10\u7684\u6587\u4ef6\u8def\u5f84\u957f\u5ea6\u9650\u5236\u3002\nhttps://jingyan.baidu.com/article/4d58d5417727e19dd4e9c0dd.html\uff0c\u4fee\u6539\u6ce8\u518c\u8868\u53ef\u4ee5\u89e3\u9664\u9650\u5236\n3\u3001git\uff1agit config --global core.longpaths true\n4\u3001mvn install -Dmaven.test.skip=true. agree, yes, +1. ",
    "qchen006": "Is there configuration that we can specify our own sql parser for some sql statements?. As we do not use any sharding for those 2 tables.. ",
    "hqq2023623": "@tuohai666  , this branch is behind the master branch \uff0c maybe i should create a new pr after sync the latest code. some modules have been renamed , it's easier by creating a new pr than resolving the conflicts. @tuohai666  , I have tried run mvn install again but still fail \n. ",
    "xiaoluozai": "I didn't find that example,hahaha~\nI get it,hahaha~\nhttps://github.com/sharding-sphere/sharding-sphere-example\nJust thanks~. ",
    "garciatulip": "Case Insensitive.. ",
    "crazythinking": "\u901a\u8fc7\u914d\u7f6e\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\u6bd4\u8f83\u5408\u7406\uff1b\n\u76ee\u524d\u9879\u76ee\u91cc\u53ea\u80fd\u901a\u8fc7\u9488\u5bf9\u4e0d\u9700\u8981\u5206\u5e93\u5206\u8868Table\u914d\u7f6eactual-data-nodes\u89e3\u51b3\uff0c\u4f46\u662f\u8868\u591a\u7684\u65f6\u5019\u5f88\u9ebb\u70e6\uff1b\u6216\u8005\u4fee\u6539mysql\u5927\u5c0f\u5199\u654f\u611f\u914d\u7f6e\uff1b. ",
    "zhangyue000": "\u5df2\u7ecf\u77e5\u9053\u95ee\u9898\u4e86\uff0c\u4f1a\u6839\u636e\u8868\u540d\u8fdb\u884chash\u6392\u5e8f\uff0c\u5bfc\u81f4left join\u540e\u9762\u7684\u8868\u4f1a\u6392\u5728\u524d\u9762\uff0c\u6240\u4ee5\u4e0d\u80fd\u6b63\u786e\u7684\u8fdb\u884c\u8def\u7531\u64cd\u4f5c. java\nprivate RoutingResult route(final List<Object> parameters, final SQLStatement sqlStatement, final ShardingConditions shardingConditions) {\n        Collection<String> tableNames = sqlStatement.getTables().getTableNames();\n        RoutingEngine routingEngine;\n        if (sqlStatement instanceof UseStatement) {\n            routingEngine = new IgnoreRoutingEngine();\n        } else if (sqlStatement instanceof DDLStatement) {\n            routingEngine = new TableBroadcastRoutingEngine(shardingRule, sqlStatement);\n        } else if (sqlStatement instanceof ShowDatabasesStatement || sqlStatement instanceof ShowTablesStatement) {\n            routingEngine = new DatabaseBroadcastRoutingEngine(shardingRule);\n        } else if (shardingConditions.isAlwaysFalse()) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (sqlStatement instanceof DALStatement) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (tableNames.isEmpty() && sqlStatement instanceof SelectStatement) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (tableNames.isEmpty()) {\n            routingEngine = new DatabaseBroadcastRoutingEngine(shardingRule);\n        } else if (1 == tableNames.size() || shardingRule.isAllBindingTables(tableNames) || shardingRule.isAllInDefaultDataSource(tableNames)) {\n            routingEngine = new StandardRoutingEngine(shardingRule, tableNames.iterator().next(), shardingConditions);\n        } else {\n            // TODO config for cartesian set\n            routingEngine = new ComplexRoutingEngine(shardingRule, parameters, tableNames, shardingConditions);\n        }\n        return routingEngine.route();\n    }\n\u8fd9\u4e00\u4e2a\u65b9\u6cd5\u7684\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u5728\u8868\u540d\u4e3a(reb_sale, reb_busi_ledger)\u7684\u60c5\u6cc1\u4e0b\uff0c\u5728JDK8\u548cJDK7\u4e0b\u7684\u6267\u884c\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u4e0d\u77e5\u9053\u80fd\u5426\u517c\u5bb9\u4e00\u4e0b\u3002. OK,just need to change hashset to linkedHashSet. ",
    "mmmario1989": "Thanks for reminding.\nThat problem has been fixed now.\n. ",
    "pig4cloud": "thx. ",
    "jiashuaizhang": "\u6211\u5f53\u7136\u5efa\u4e86\u8868\u4e86\u554a\uff0c\u8fd9\u660e\u663e\u662f\u4e2a\u95ee\u9898\u554a\u3002\n\u4ecemysql\u5207\u6362\u5230oracle\uff0c\u5207\u6362\u6570\u636e\u5e93\u5730\u5740\u548c\u9a71\u52a8\uff0c\u5c31\u4e0d\u9700\u8981\u522b\u7684\u6539\u52a8\u4e86\u5427\u3002\n\u7136\u540e\u51fa\u73b0\u4e86\u8fd9\u4e2a\u8be1\u5f02\u7684\u95ee\u9898\uff0c\u5982\u679c\u5404\u4f4d\u5927\u795e\u6709\u601d\u8def\uff0c\u8fd8\u8bf7\u8010\u5fc3\u591a\u7ed9\u5c0f\u5f1f\u6253\u51e0\u4e2a\u5b57\u3002. \u6211\u4ee5\u4e3a\u662f\u81ea\u5df1\u72af\u4e86\u4ec0\u4e48stupid mistake\uff0c\u9519\u8bef\u539f\u56e0\u4e0d\u660e\u786e\uff0c\u6211\u53ea\u80fd\u5148\u653e\u4e00\u653e\uff0c\u540e\u7eed\u518d\u5c1d\u8bd5\u5355\u72ec\u6d4b\u8bd5\u6570\u636e\u6e90\u6216\u91cd\u5efa\u8868\uff0c\u518d\u4e0d\u884c\u5c31\u5f97\u64b8\u6e90\u7801\u4e86\ud83d\ude02Thanks anyway. ",
    "inotgaoshou": "\u770b\u7740\u5b98\u65b9\u7684mybatis\u5206\u8868\u4e3b\u4ece\u4f8b\u5b50\uff0c\u597d\u50cf\u53ea\u7b26\u5408\u4e00\u4e3b\u4e00\u4ece\uff0c\u5982\u679c\u914d\u7f6e\u7684\u662f\u4e00\u4e3b\u591a\u6b21\uff0c\u53d1\u73b0\u4f1a\u540c\u65f6\u4ece\u914d\u7f6e\u7684\u51e0\u4e2a\u4ece\u5e93\u67e5\u8be2\u4e00\u904d\u3002\u5b9e\u9645\u671f\u671b\u662f\u4ece\u591a\u4e2a\u4ece\u5e93\u4e2d\u7684\u4e00\u4e2a\u4ece\u5e93\u67e5\u8be2\u4e00\u6b21\u5c31\u53ef\u4ee5\u3002\u76ee\u524d\u53ea\u80fd\u6682\u65f6\u914d\u7f6e\u6307\u5b9a\u4e00\u4e2a\u4ece\u5e93\uff0c\n\u8fd9\u4e2ademo\uff1ahttps://github.com/sharding-sphere/sharding-sphere-example/blob/dev/sharding-jdbc-example/spring-namespace-example/spring-namespace-mybatis-example/src/main/resources/META-INF/nodep/shardingMasterSlave.xml. ",
    "zhangfeibiao": "\u6211\u4f7f\u7528\u7684\u662f\u5f53\u5f53\u7f51\u7684maven\u4e2d\u592e\u4ed3\u5e93\uff0c\u8fd9\u4e2a\u5e94\u8be5\u6ca1\u6709\u5f71\u54cd\u5427. \u6211\u73b0\u5728\u662f\u5bf9\u4f1a\u5458\u6570\u636e\u5206\u8868\uff0c\u4e0d\u5206\u5e93\u3002\u6839\u636e\u4f1a\u5458\u8868\u4e2d\u6709\u624b\u673a\u53f7\u8fdb\u884chash\u53d6\u6478\u520630\u5f20\u8868\uff0c\u6839\u636e\u6709\u8d26\u53f7\u8fdb\u884chash\u53bb\u6a21\u520620\u5f20\u8868\uff0c\u5206\u7247\u7b56\u7565\u5982\u4e0b\uff0c\n\n.  @tristaZero First of all, thank you very much for your concern. However, I did not join WeChat group. Could you please tell me your WeChat ID?. ",
    "xiaoniao": "+1 \u9700\u8981\u663e\u793a\u65e5\u5fd7\u3002 \n\u53e6\u5916\u53ea\u505a master-slave \u8bfb\u5199\uff0c\u4e0d\u914d\u7f6e\u5206\u5e93\u5206\u8868\u65f6\uff0c\u8868\u540d\u4e0d\u80fd\u8bc6\u522b\u51fa\u5927\u5199\u5b57\u6bcd\uff0c\u4f1a\u63d0\u793a\u8868\u4e0d\u5b58\u5728\u3002\norg.springframework.jdbc.BadSqlGrammarException: \nError querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'my_sharding_test2.TP_KNOWLEDGE' doesn't exist\nThe error may exist in META-INF/mappers/KnowledgeDOMapper.xml\nThe error may involve defaultParameterMap\nThe error occurred while setting parameters\nSQL: SELECT /MS-TP-KNOWLEDGE-LISTALL/            KNOWLEDGE_NO,KNOWLEDGE_NAME,KNOWLEDGE_IMG,KNOWLEDGE_STATUS,DATE_CREATED,LAST_UPDATED               FROM TP_KNOWLEDGE\nCause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'my_sharding_test2.TP_KNOWLEDGE' doesn't exist\n\u5b9e\u9645\u8868\u540d\u4e3a tp_knowledge\nSpringl Boot 1.5.1.RELEASE\nSharding Jdbc 3.0.0.M1\n@terrymanu \ndemo https://github.com/xiaoniao/sample/tree/master/SHARDING/master-slave\n. ",
    "MartinDai": "I have solved this problem.The reason is config file spring-datasource.xml missing config \nxsi:schemaLocation=\"\n                        http://shardingsphere.io/schema/shardingsphere/sharding\n                        http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd\"\nBut the official website documents  are also wrong.\nHere is the document. \nhttp://shardingsphere.io/document/current/cn/manual/sharding-jdbc/configuration/config-spring-namespace/\nand\nhttp://shardingsphere.io/document/current/cn/manual/sharding-jdbc/usage/sharding/ \nin \u57fa\u4e8eSpring\u547d\u540d\u7a7a\u95f4\u7684\u89c4\u5219\u914d\u7f6e snippet. ",
    "dizent": "\u8fd9\u4e2a\u94fe\u63a5\u73b0\u5728\u8bbf\u95ee\u8fd8\u662f404\uff0c\u600e\u4e48\u89e3\u51b3\u7684\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f. ",
    "Pramy": "\u6211\u53ef\u4ee5\u554a. ",
    "fushengyk": "\u6211\u81ea\u5df1\u7684\u539f\u56e0\uff0c\u914d\u7f6e\u9519\u4e86\uff0c\u8c22\u8c22. ",
    "Edisonboy": "\n\u5982\u622a\u56fe\u6240\u793a\uff0c\u914d\u7f6e\u4e24\u4e2a\u8bfb\u5199\u5206\u79bb\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u4e1a\u52a1\u9700\u8981\u76f4\u63a5\u67e5\u8be2\u7b2c\u4e8c\u4e2a\u6570\u636e\u6e90cdt\u6570\u636e\u4e2d\u7684\u6570\u636e\uff0c\u8981\u600e\u6837\u624d\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u6570\u636e\u6e90\u5462. Thank you for your answer. Forgive my bad expression in english.\nBut I still not understand exactly how to switch the datasource by myself.\nCould you have more specific examples or have a comments about the yaml.\nThank you so much!. ",
    "tcwloy": "\u6211\u4e5f\u60f3\u77e5\u9053\uff0c\u6709\u540c\u6837\u7684\u8bc9\u6c42. ",
    "Hyzhangjun": "https://github.com/sharding-sphere/sharding-sphere/issues/469\n\u95ee\u9898\u8ddf\u8fd9\u4e2a\u662f\u4e00\u6837\u7684\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u89e3\u51b3\u65b9\u6848\uff0c. \u6211\u4f7f\u7528\u4e86\u5b98\u7f51\u7684JPA\u793a\u4f8b\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u53d1\u73b0\u95ee\u9898\u540c\u6837\u5b58\u5728\uff0c\u4f7f\u7528JPA\u66f4\u65b0\u5bf9\u8c61\u65f6\uff0c\u80fd\u5426\u50cfinsert\u4e00\u6837\uff0c\u53c2\u6570\u4e2d\u5305\u542b\u4e86\u5206\u8868\u5b57\u6bb5\u5373\u53ef\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u8868\uff0c\u800c\u4e0d\u662f\u904d\u5386\u6240\u6709\u8868\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n`\n@Repository\n@Transactional\npublic class OrderItemRepositoryImpl implements OrderItemRepository {\n@PersistenceContext\nprivate EntityManager entityManager;\n\n@Override\npublic Long insert(final OrderItem orderItem) {\n    entityManager.persist(orderItem);\n    return orderItem.getOrderItemId();\n}\n\n@Override\npublic void delete(final Long orderItemId) {\n    Query query = entityManager.createQuery(\"DELETE FROM OrderItem i WHERE i.orderItemId = ?1 AND i.userId = 51\");\n    query.setParameter(1, orderItemId);\n    query.executeUpdate();\n}\n\n@SuppressWarnings(\"unchecked\")\n@Override\npublic List<OrderItem> selectAll() {\n    return (List<OrderItem>) entityManager.createQuery(\"SELECT i FROM Order o, OrderItem i WHERE o.orderId = i.orderId\").getResultList();\n}\n\n@Override\npublic void update(OrderItem orderItem) {\n    //\u4f7f\u7528\u5bf9\u8c61\u66f4\u65b0\u64cd\u4f5c\uff0c\u4f1a\u904d\u5386\u6240\u6709\u8868\uff0c\u800c\u4e0d\u662f\u50cfinsert\u4e00\u6837\uff0c\u6839\u636e\u53c2\u6570\u4e2d\u5305\u542b\u7684\u5206\u8868\u5b57\u6bb5\u8fdb\u884c\u5b9a\u4f4d\u5177\u4f53\u7684\u8868\n    orderItem.setUserId(12);\n    entityManager.merge(orderItem);\n}\n\n@Override\npublic OrderItem get(Long orderItemId) {\n    return null;  //To change body of implemented methods use File | Settings | File Templates.\n}\n\n}\u914d\u7f6e\u5982\u4e0b\uff1a\n<sharding:standard-strategy id=\"tableShardingStrategy\" sharding-column=\"order_id\" precise-algorithm-ref=\"preciseModuloTableShardingAlgorithm\" />\n\n<sharding:data-source id=\"shardingDataSource\">\n    <sharding:sharding-rule data-source-names=\"demo_ds\">\n        <sharding:table-rules>\n            <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"demo_ds.t_order_${0..1}\" table-strategy-ref=\"tableShardingStrategy\" generate-key-column-name=\"order_id\" />\n            <sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"demo_ds.t_order_item_${0..1}\" table-strategy-ref=\"tableShardingStrategy\" generate-key-column-name=\"order_item_id\" />\n        </sharding:table-rules>\n    </sharding:sharding-rule>\n    <sharding:props>\n        <prop key=\"sql.show\">true</prop>\n    </sharding:props>\n</sharding:data-source>`\n\n\u65e5\u5fd7\u4fe1\u606f\uff1a\n2.Delete--------------\nHibernate: select orderitem0_.order_item_id as order_it1_1_0_, orderitem0_.order_id as order_id2_1_0_, orderitem0_.user_id as user_id3_1_0_ from t_order_item orderitem0_ where orderitem0_.order_item_id=?\n[INFO ] 2018-06-27 20:36:18,977 --main-- [Sharding-Sphere-SQL] Logic SQL: select orderitem0_.order_item_id as order_it1_1_0_, orderitem0_.order_id as order_id2_1_0_, orderitem0_.user_id as user_id3_1_0_ from t_order_item orderitem0_ where orderitem0_.order_item_id=? \n[INFO ] 2018-06-27 20:36:18,977 --main-- [Sharding-Sphere-SQL] SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=t_order_item, alias=Optional.of(orderitem0_))]), conditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(beginPosition=134, skippedSchemaNameLength=0, originalLiterals=t_order_item)], parametersIndex=1)), containStar=false, selectListLastPosition=129, groupByLastPosition=0, items=[CommonSelectItem(expression=orderitem0_.order_id, alias=Optional.of(order_id2_1_0_)), CommonSelectItem(expression=orderitem0_.user_id, alias=Optional.of(user_id3_1_0_)), CommonSelectItem(expression=orderitem0_.order_item_id, alias=Optional.of(order_it1_1_0_))], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null) \n[INFO ] 2018-06-27 20:36:18,977 --main-- [Sharding-Sphere-SQL] Actual SQL: demo_ds ::: select orderitem0_.order_item_id as order_it1_1_0_, orderitem0_.order_id as order_id2_1_0_, orderitem0_.user_id as user_id3_1_0_ from t_order_item_0 orderitem0_ where orderitem0_.order_item_id=? ::: [[218831007296520192]] \n[INFO ] 2018-06-27 20:36:18,977 --main-- [Sharding-Sphere-SQL] Actual SQL: demo_ds ::: select orderitem0_.order_item_id as order_it1_1_0_, orderitem0_.order_id as order_id2_1_0_, orderitem0_.user_id as user_id3_1_0_ from t_order_item_1 orderitem0_ where orderitem0_.order_item_id=? ::: [[218831007296520192]] \nHibernate: update t_order_item set order_id=?, user_id=? where order_item_id=?\n[INFO ] 2018-06-27 20:36:19,013 --main-- [Sharding-Sphere-SQL] Logic SQL: update t_order_item set order_id=?, user_id=? where order_item_id=? \n[INFO ] 2018-06-27 20:36:19,013 --main-- [Sharding-Sphere-SQL] SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=t_order_item, alias=Optional.absent())]), conditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(beginPosition=7, skippedSchemaNameLength=0, originalLiterals=t_order_item)], parametersIndex=3)) \n[INFO ] 2018-06-27 20:36:19,013 --main-- [Sharding-Sphere-SQL] Actual SQL: demo_ds ::: update t_order_item_0 set order_id=?, user_id=? where order_item_id=? ::: [[218831006944198656, 12, 218831007296520192]] \n[INFO ] 2018-06-27 20:36:19,013 --main-- [Sharding-Sphere-SQL] Actual SQL: demo_ds ::: update t_order_item_1 set order_id=?, user_id=? where order_item_id=? ::: [[218831006944198656, 12, 218831007296520192]] \n[INFO ] 2018-06-27 20:36:19,078 --main-- [org.springframework.context.support.ClassPathXmlApplicationContext] Closing org.springframework.context.support.ClassPathXmlApplicationContext@131bf42: startup date [Wed Jun 27 20:36:14 CST 2018]; root of context hierarchy \n[INFO ] 2018-06-27 20:36:19,078 --main-- [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] Closing JPA EntityManagerFactory for persistence unit 'default'\n\u65b0\u5efa\u6587\u672c\u6587\u6863 (2).txt\n. \u4f7f\u7528sharding\u4ee5\u540e\uff0c\u5206\u7247\u5b57\u6bb5\u80af\u5b9a\u4e0d\u80fd\u88ab\u66f4\u65b0\uff0c\u66f4\u65b0\u4e5f\u4f1a\u662f\u810f\u6570\u636e\uff0c\u6240\u4ee5hibernate\u5bf9\u8c61\u4fdd\u5b58\u81ea\u52a8\u751f\u6210\u7684sql\u4f7f\u7528\u4e3b\u952e\u505awhere\u6761\u4ef6\uff0c\u4f46\u5b9e\u9645\u7684\u53c2\u6570\u4e2d\u662f\u5305\u542b\u5206\u7247\u5b57\u6bb5\uff0c\u6240\u4ee5\u4e2a\u4eba\u5efa\u8baeupdate\u66f4\u65b0\u65f6\uff0c\u53c2\u6570\u5305\u542b\u5206\u7247\u5b57\u6bb5\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u53c2\u6570\u4e2d\u7684\u5206\u7247\u5b57\u6bb5\u5b9a\u4f4d\u5177\u4f53\u7684\u8868\uff0c\u4e0d\u7528\u6267\u884c\u6240\u6709\u8868\u66f4\u65b0\uff0c\u8fd9\u70b9\u5e94\u8be5\u8ddfinsert\u662f\u4e00\u6837\u7684\u3002. ",
    "wanghaoyuissun": "@terrymanu \nprops:\n    # MEMORY_STRICTLY: Proxy holds as many connections as the count of actual tables routed in a database.\n    #                  The benefit of this approach is saving memory for Proxy by Stream ResultSet.\n    # CONNECTION_STRICTLY: Proxy will release connections after get the overall rows from the ResultSet.\n    #                      Meanwhile, the cost of the memory will be increased.\n    proxy.mode:\nI want to control the number of initial connections ,Now the initial is the maximum number of connections ,proxy.mode  What do you do. What I downloaded is  https://github.com/sharding-sphere/sharding-sphere-doc/raw/master/dist/sharding-proxy-3.0.0.M1.tar.gz , github is 3.0.0.M2-SNAPSHOT version ,\nDo you have a package\uff1f. ",
    "woodwind": "Using it should not be an issue as the raw sql supports this function and it was only used to process the input parameters rather than any outputs. The point is that sharding-sphere ignores the input parameters in this function when parsing the sql statement, which leads to this error.\n\nFrom: saaav notifications@github.com\nSent: Tuesday, July 24, 2018 6:22:34 AM\nTo: sharding-sphere/sharding-sphere\nCc: woodwind; Author\nSubject: Re: [sharding-sphere/sharding-sphere] InsertValuesClauseParser\u5ffd\u7565\u4e86statement\u4e2d\u539f\u751f\u65b9\u6cd5\u4f7f\u7528\u7684\u53c2\u6570 (#978)\nI prefer that you may not to use the sql function as far as possible. Because it will cause pressure on CPU.\n\u2015\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/sharding-sphere/sharding-sphere/issues/978#issuecomment-407294620, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ADM2jl6A7w0qR1OjVmqiqUFdJSrozLb6ks5uJr0qgaJpZM4U-tcx.\n. ",
    "weiduan": "yeah,But what seems to make this sharding column repeat,I can see the shardingConditions.getShardingConditions() really has duplicate ShardingCondition on 79 line of StandardRoutingEngine.java:\n\n\n. @ma-xiao-guang-64 SELECT * FROM order\n        WHERE business_id = ?\n            AND ( member_discount = 1\n                OR order_discount = 1\n                OR order_derate = 1\n                OR order_derate_zero = 1\n                OR item_member_discount = 1\n                OR order_promotion = 1\n                OR coupon_promotion = 1\n                OR order_bargain = 1\n                OR timed_item_discount = 1\n                OR x_discount = 1 )\nI deleted some unrelated fields, where business_id is shardingKey, and it repeats ten times. @ma-xiao-guang-64 Oh,i see.The routing result was indeed correct. Is it possible to optimize the repeating sharidngConditions to one in the future? After all, doSharding() will be executed too many times.Thank you for your answer!. ",
    "zhushikun": "note:  these created Objs always keep in memory, even full GC can't  free these objs. ",
    "jakara": "found this issue also in my project, the memory resource will run out and tomcat will freeze at last\ngota have some memory leak here?  btw, I'm using 3.0.0.M1\n\n. did some research with groovy related codes, only 2 classes uses groovy: InlineExpressionParser and InlineShardingStrategy. As I do not use InlineShardingStrategy, so I guess the bug is caused by InlineExpressionParser .\nat alst I found when getTableRule from ShardingRule, it will createTableRuleWithDefaultDataSource everytime  if no datasource configed for a logic table, and this will create groovyShell each time, so I made a PR to fix this, not sure any other defects related to this bug\nhttps://github.com/sharding-sphere/sharding-sphere/pull/985/files. ",
    "janson653": "sorry to reply a litte bit late. Before I give my unit test code, I want to introduce our sharding algrothmn.\nwe have a table, named business_info, so we create java bean, mapper(dao). \nAnd we based on businessNo to get sharding table name. for example, businessNo is 330108002-0017-0118, so sharding table is business_info_330108002, it is simple. But becasue we may have some like query opreation. so we use Hint router to do like operation. Regarding it, we use special flag to distinct which we should give all table, which we give related table.\n```\ncase1: use alltable mean get all sharding tables.\nHintManager hintManager2 = HintManager.getInstance();\nhintManager2.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\nhintManager2.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable\");\ncase2: use alltable:level1 mean we get related sharding tables\nHintManager hintManager2 = HintManager.getInstance();\nhintManager2.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\nhintManager2.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable:level1\");\nmapper sql\n\n    select * from business_info\n    where\n     1 = 1\n     and startDate> '2018-04-01 00:00:00.0'\n     and businessNo like '33%'\n     limit #{pageIndex}, #{pageSize}\n  \nunit test code as belows.\nissue happen in testMultiTableQuery2_1 method, hope it is my use problem, not framwork issue.\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = MybaticsDemoApplication.class)\npublic class AsyncShardingJdbcTest2 {\n    // Mybatis Mapper\n    @Autowired\n    BusinessInfoMapper businessInfoMapper;\nprivate BusinessInfo mockUpData() {\n    BusinessInfo info = new BusinessInfo();\n    // \u4e1a\u52a1\u7801\uff0c\u6839\u636e\u4e1a\u52a1\u7801\u524d9\u4f4d\u5206\u5230\u5bf9\u5e94\u7684\u8868\n    info.setBusinessNo(\"330108002-0017-0118\");\n    return info;\n}\n\n@Test\npublic void multiThreadDBOperation() throws InterruptedException {\n    CountDownLatch latch = new CountDownLatch(1);\n    new Thread(() -> this.testInsert()).start();\n    new Thread(() -> this.testUpdate()).start();\n    new Thread(() -> this.testSingleTableQuery()).start();\n    new Thread(() -> this.testSingleTableQuery2()).start();\n    new Thread(() -> this.testMultiTableQuery2()).start();\n    new Thread(() -> this.testMultiTableQuery2_1()).start();\n    latch.await();\n}\n\n// \u6d4b\u8bd5\u5355\u8868\u63d2\u5165\npublic void testInsert() {\n    StopWatch stopWatch = new StopWatch(\"insert\");\n    stopWatch.start();\n\n    BusinessInfo info = mockUpData();\n    businessInfoMapper.insert(info);\n\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n\n    BusinessInfo record = businessInfoMapper.selectOne(info);\n    Assert.assertEquals(info, record);\n}\n\n// \u6d4b\u8bd5\u5355\u8868update\npublic void testUpdate() {\n    StopWatch stopWatch = new StopWatch(\"update\");\n    stopWatch.start();\n\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n}\n\n// \u6d4b\u8bd5\u5355\u8868query\npublic void testSingleTableQuery() {\n    StopWatch stopWatch = new StopWatch(\"singleTableQuery\");\n    stopWatch.start();\n\n    // \u666e\u901a\u67e5\u8be2\n    BusinessInfo info = mockUpData();\n    businessInfoMapper.select(info);\n\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n}\n\n// \u6d4b\u8bd5\u5355\u8868query\uff0c\u5355\u8868like\u67e5\u8be2\npublic void testSingleTableQuery2() {\n    StopWatch stopWatch = new StopWatch(\"testSingleTableQuery2\");\n    stopWatch.start();\n\n\n    // like \u4e0d\u6a21\u7cca\n    HintManager hintManager = HintManager.getInstance();\n    hintManager.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    hintManager.addTableShardingValue(\"business_info\", \"businessNo\", \"single\");\n\n    // \u4e0d\u7b97count\u4e86\n    businessInfoMapper.myPageListWithLike(1, 100);\n\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n}\n\n// \u6d4b\u8bd5\u5355\u8868query\npublic void testMultiTableQuery() {\n\n    StopWatch stopWatch = new StopWatch(\"testMultiTableQuery\");\n    stopWatch.start();\n\n\n    // like\n    HintManager hintManager = HintManager.getInstance();\n    hintManager.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    // \u901a\u8fc7\u5f3a\u5236\u8def\u7531\uff0c\u4f7f\u7528businessNo\u505a\u5206\u8868\u7684\u7279\u6b8a\u6807\u8bb0\uff0c\u5f53\u9047\u5230alltable\uff0c\u67e5\u6240\u6709\u5206\u8868\n    hintManager.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable\");\n    Example example = new Example(BusinessInfo.class);\n    LocalDate localDate = LocalDate.of(2018, 4, 1);\n    Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());\n\n    PageHelper.startPage(1, 100)\n            .doSelectPageInfo(() -> {\n                example.createCriteria()\n                        .andGreaterThan(\"startDate\", date)\n                        .andLike(\"businessNo\", \"33%\");\n                List list = businessInfoMapper.selectByExample(example);\n                System.err.println(list.size());\n\n            });\n\n\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n\n}\n\n// \u6d4b\u8bd5\u591a\u8868\u67e5\u8be2\uff0c\u533a\u7ea7\u522b\uff08700w\uff09\u3001\u5e02\u7ea7\u522b\uff082000w\uff09\npublic void testMultiTableQuery2() {\n\n    // \u6839\u636e\u5206\u8868\u7b97\u6cd5\uff0c\u67e5\u4e24\u4e2a\u5206\u8868(\u5171800\u4e07\u6570\u636e)\n    StopWatch stopWatch = new StopWatch(\"\u533a\u7ea7\u522b\u67e5\u8be2\");\n    stopWatch.start();\n\n    // like\n    HintManager hintManager = HintManager.getInstance();\n    hintManager.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    // \u901a\u8fc7\u5f3a\u5236\u8def\u7531\uff0c\u4f7f\u7528businessNo\u505a\u5206\u8868\u7684\u7279\u6b8a\u6807\u8bb0\uff0c\u5f53\u9047\u5230alltable\uff0c\u67e5\u6240\u6709\u5206\u8868\uff0c\u5982\u679calltable\u540e\u6709\u5176\u4ed6\u6807\u8bb0\uff0c\u5219\u67e5\u5bf9\u5e94\u7b49\u7ea7\u7684\u5206\u8868\n    hintManager.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable:level1\");\n    Example example = new Example(BusinessInfo.class);\n    LocalDate localDate = LocalDate.of(2018, 4, 1);\n    Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());\n\n    PageHelper.startPage(1, 100)\n            .doSelectPageInfo(() -> {\n                example.createCriteria()\n                        .andGreaterThan(\"startDate\", date)\n                        .andLike(\"businessNo\", \"33%\");\n                List list = businessInfoMapper.selectByExample(example);\n                System.err.println(list.size());\n\n            });\n\n    hintManager.close();\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n\n    // \u5e02\u7ea7\u522b\u67e5\u8be2\uff0c\u6839\u636e\u5206\u8868\u7b97\u6cd5\uff0c\u67e55\u4e2a\u5206\u8868(\u51711700\u4e07\u6570\u636e)\n    StopWatch stopWatch2 = new StopWatch(\"\u5e02\u7ea7\u522b\u67e5\u8be2\");\n    stopWatch2.start();\n\n    // like\n    HintManager hintManager2 = HintManager.getInstance();\n    hintManager2.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    hintManager2.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable\");\n    Example example2 = new Example(BusinessInfo.class);\n    LocalDate localDate2 = LocalDate.of(2018, 4, 1);\n    Date date2 = Date.from(localDate2.atStartOfDay(ZoneId.systemDefault()).toInstant());\n\n    PageHelper.startPage(1, 100)\n            .doSelectPageInfo(() -> {\n                example2.createCriteria()\n                        .andGreaterThan(\"startDate\", date2)\n                        .andLike(\"businessNo\", \"33%\");\n                List list = businessInfoMapper.selectByExample(example);\n                System.err.println(list.size());\n\n            });\n\n    hintManager2.close();\n    stopWatch2.stop();\n    System.err.println(stopWatch2.shortSummary());\n\n}\n\n// \u6d4b\u8bd5\u591a\u8868\u67e5\u8be2\uff0c\u533a\u7ea7\u522b\uff08700w\uff09\u3001\u5e02\u7ea7\u522b\uff082000w\uff09\n// \u4e0d\u505acount\npublic void testMultiTableQuery2_1() {\n\n    // \u6839\u636e\u5206\u8868\u7b97\u6cd5\uff0c\u67e5\u4e24\u4e2a\u5206\u8868(\u5171800\u4e07\u6570\u636e)\n    StopWatch stopWatch = new StopWatch(\"testMultiTableQuery2_1\u533a\u7ea7\u522b\u67e5\u8be2\");\n    stopWatch.start();\n\n    // like\n    HintManager hintManager = HintManager.getInstance();\n    hintManager.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    hintManager.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable:level1\");\n\n\n    List list = businessInfoMapper.myPageListWithLike(0, 100);\n    System.err.println(list.size());\n\n    hintManager.close();\n    stopWatch.stop();\n    System.err.println(stopWatch.shortSummary());\n\n    // \u5e02\u7ea7\u522b\u67e5\u8be2\uff0c\u6839\u636e\u5206\u8868\u7b97\u6cd5\uff0c\u67e55\u4e2a\u5206\u8868(\u51711700\u4e07\u6570\u636e)\n    StopWatch stopWatch2 = new StopWatch(\"testMultiTableQuery2_1\u5e02\u7ea7\u522b\u67e5\u8be2\");\n    stopWatch2.start();\n\n    // like\n    HintManager hintManager2 = HintManager.getInstance();\n    hintManager2.addDatabaseShardingValue(\"business_info\", \"businessNo\", \"database\");\n    hintManager2.addTableShardingValue(\"business_info\", \"businessNo\", \"alltable\");\n\n    List list2 = businessInfoMapper.myPageListWithLike(0, 100);\n    System.err.println(list2.size());\n\n    hintManager2.close();\n    stopWatch2.stop();\n    System.err.println(stopWatch2.shortSummary());\n\n}\n\n}\n. sure, thanks for reply. \nHere are two unit test class, one is sync run, one is async run. the problem is only show in Aync way sometime.\n[https://github.com/janson653/spring-boot-shardingjdbc-mybatics-demo/blob/master/src/test/java/shardingjdbc/AsyncShardingJdbcTest.java](https://github.com/janson653/spring-boot-shardingjdbc-mybatics-demo/blob/master/src/test/java/shardingjdbc/AsyncShardingJdbcTest.java)\n. one update.\nwhen met this issue. ResultSetWrapper's resultSet type is IteratorStreamMergedResult. that mean limit is null, it is wired, hope help you locate issue.\n// based on ResultSetWrapper's resultSet type is IteratorStreamMergedResult, I guess limit is null\n private MergedResult decorate(final MergedResult mergedResult) throws SQLException {\n        Limit limit = selectStatement.getLimit();\n        if (null == limit) {\n            return mergedResult; \n        }\n        if (DatabaseType.MySQL == limit.getDatabaseType() || DatabaseType.PostgreSQL == limit.getDatabaseType() || DatabaseType.H2 == limit.getDatabaseType()) {\n            return new LimitDecoratorMergedResult(mergedResult, selectStatement.getLimit());\n        }\n        if (DatabaseType.Oracle == limit.getDatabaseType()) {\n            return new RowNumberDecoratorMergedResult(mergedResult, selectStatement.getLimit());\n        }\n        if (DatabaseType.SQLServer == limit.getDatabaseType()) {\n            return new TopAndRowNumberDecoratorMergedResult(mergedResult, selectStatement.getLimit());\n        }\n        return mergedResult;\n    }\n// another code\n  private void handleRowValuesForSimpleResultMap(ResultSetWrapper rsw, ResultMap resultMap, ResultHandler<?> resultHandler, RowBounds rowBounds, ResultMapping parentMapping)\n      throws SQLException {\n    DefaultResultContext resultContext = new DefaultResultContext();\n    skipRows(rsw.getResultSet(), rowBounds);\n  // rsw.getResultSet().next not use LimitDecoratorMergedResult, it is wired\n    while (shouldProcessMoreRows(resultContext, rowBounds) && rsw.getResultSet().next()) {\n      ResultMap discriminatedResultMap = resolveDiscriminatedResultMap(rsw.getResultSet(), resultMap, null);\n      Object rowValue = getRowValue(rsw, discriminatedResultMap);\n      storeObject(resultHandler, resultContext, rowValue, parentMapping, rsw.getResultSet());\n    }\n  }\n```. ",
    "zhfeng": "Narayana does not have the wrapper for the datasource but it has the transactional driver for doing the similar things. I will investigate and provide the implementation from the Narayana side.\nThanks for your contribution to introduce the XA SPI and it could be great work.. I just open https://github.com/sharding-sphere/sharding-sphere/pull/1137 to add the warpDataSource method in the XATransactionManager interface which is very similar with what we have done in the spring-boot/jta. Also I refactor the JDBCXABackendDataSourceFactory to build the data source from the wrapDataSource.\nAnd https://github.com/zhfeng/narayana-sharding-sphere hold the Narayana implementation of the sharding-sphere XATransactionManager. I'm still working on the wrapper and I hope to see if this provider would work in a demo.\nDid you have any demo or a integration test to run with the xa transaction manager ? . @terrymanu it could use the following codes to set the properties\nPropertyUtils.setProperties(this.xaDataSource, this.xaProperties);. can you review the changes https://github.com/sharding-sphere/sharding-sphere/pull/1140 ?. I think this is invoked by the sharding-sphere when initialize the TM and we could just start a recovery manager process running in the background. And the sharding-sphere need to pass all the XAResource for the database, these are used to get the in-doubt transactions in the database during the recovery scanning.. No, the status does not update and we just wrapper it in a helper class to find the in-doubt transactions during the recovering. So I think I could change this feature to add the init() and destroy() method in the SPI which just allow us to start and stop the recovery manager service. And the register the XAResource could be invoked in the wrapDataSource() method.\n```\nclass NarayanaTransactionManager implements XATransactionManager {\n    @Overide\n    void init() {\n        // start the recovery process in the background\n        recoveryManagerService = new RecoveryManagerService();\n        recoveryManagerService.create();\n        recoveryManagerService.start();\n    }\n@Overide\n void destroy() {\n     recoveryManagerService.stop();\n }\n\n@Overide\npublic DataSource wrapDataSource(XADataSource dataSource, String dataSourceName, DataSourceParameter dataSourceParameter) throws Exception {\n    DataSource ds = new NarayanaDataSource(dataSource);\n    xaRecoveryModule.addXAResourceRecoveryHelper(getRecoveryHelper(dataSource, dataSourceParameter));\n    return ds;\n}\n\n}\n```\n@cherrylzhao this could help the recovery process from the narayana implementation. And I think it could be also sense to the Atomikos as it has the init() and close() with UserTransactionManager.. I close this issue since the changes have been merged. NOTE, it has only introduce the destroy() method in the SPI as the init() should be invoked in the construct of the implementation classes. Anyway, we still need to find the hook of the shutdown process to invoked the destroy().\nThanks for the helping !. Interesting. I just search for the mysql jdbc format [1] and it looks like can not support the aurora protocol currently ? is it from the amazon aurora [2] ?\nAnyway, the pattern mentioned in the MySQLDataSourceMetaData.java should be updated to add the protocol \nprivate final Pattern pattern = Pattern.compile(\"jdbc:mysql://([\\\\w\\\\-\\\\.]+):?([0-9]*)/([\\\\w\\\\-]+);?\\\\S*\", Pattern.CASE_INSENSITIVE);\n[1] https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-url-format.html\n[2] https://aws.amazon.com/cn/rds/aurora/. @cherrylzhao How does the  Sharding XA Resource enlist the XAResource to participate in the transaction ? I think it could be delegate to the different TM implementation or we can consider to use the common dbcp2. And how can we register it to the recovery manager ?. I think we can discuss the new XA SPI interface here.. Thanks @cherrylzhao and I will take a look.\nFor the SPI, I have the following questions:\n1. Why does it introduce the SingleXAResource ?\n2. Why does it need the enlistResource method ? Although  I think in the different vendor, the implementation could be similar here just like\nTransationMangager.getCurrentTransaction().enlist(xaResource);\ncan you explain to me how this method could be used in the sharding-sphere ?\nThanks a lot !. Thanks @terrymanu and it looks good to me.. OK, I will add the narayana one.. @cherrylzhao it looks like missing the io.shardingsphere:sharding-transaction-saga:jar:4.0.0.M1-SNAPSHOT. Do we have the snapshot building of the current sharding-sphere ?. OK, it looks good to me. . @cherrylzhao is there any way we can pass the configuration parameters of the transaction manager ?. That's fine and the Narayana uses jbossts-properties.xml. https://github.com/sharding-sphere/shardingsphere-spi-impl/pull/8. It looks good but I just wonder what is the different between \"sharding\" and \"normal\" TransactionalDataSource ?. Thanks for the explanation and from user's perspective, they DO NOT need to know the detail of the data source and just declare that it depends on the transaction and we will wrap it with the right TransacionalDataSource ? . OK, it looks good to remove this abstract class.. that makes sense.. ",
    "An0nymous0": "@terrymanu  \u6211\u662f\u6309\u7167\u5b98\u65b9\u6587\u6863\u505a\u7684\u3002 \u53d1\u73b0\u7684\u662f\u4e0d\u517c\u5bb9\u3002 \u800c\u4e0d\u662f\u5728\u8fd9\u95ee\u95ee\u9898\u3002 \u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u770b\u6e90\u4ee3\u7801\u624d\u80fd\u6b63\u5e38\u4f7f\u7528\u8bf7\u95ee\u8fd9\u7b97\u4e0d\u7b97bug report\uff1f. ",
    "HanYL-coder": "why M2 not released yet.\nI'm expecting it. Cuz there's a NullPointerException at JDBCShardingRefreshHandler.java:49 when querying a simple sql with 17 datasources(multi datasources).. I saw the issue was fixed at M2.\n@tristaZero \nhttps://github.com/sharding-sphere/sharding-sphere/issues/919. ",
    "errordaiwa": "@terrymanu if it is confirmed to be a bug, I can contribute my workaround with pull request.. @terrymanu I fix the issue only under spring boot v1 because PropertyUtil seems to work properly under v2.. ",
    "hanchao5272": "@ma-xiao-guang-64 \nThanks !\nBy the way, why sharding-jdbc does not support \u2018REPLACE\u2019 statement ?\n. @ma-xiao-guang-64 \nThanks again.\nI see what you mean. You mean that it loses more than gain when we use \u2018replace into\u2019 statement to update sharding column.\nBut, if we designate a column to be the sharding column, then the probability of using \u2018replace into\u2019 statement to update the sharding column  is very small.\nJust like nested subquery, sharding-jdbc provides only part of the support. Why can not we partial support 'replace into' statemenet just for update non-sharding column? Of course, we need to provide detailed instructions for it.\n\nTake version 3.0.0.M1 as an example, we just need to modify the 'isDML()' method and 'getDMLParser' method in the io.shardingsphere.core.parsing.parser.sql.SQLParserFactory source file.. @ma-xiao-guang-64 \nMaybe I think it's easy, kindly give me your advice. Thanks.. @ma-xiao-guang-64 \nAnyway, thank you very much.. ",
    "god8816": "mybatis\u62e6\u622a\u5668\u4ee3\u7801\uff1a\n@Intercepts({\n        @Signature(type = Executor.class, method = \"query\", args = {\n                MappedStatement.class, Object.class, RowBounds.class,\n                ResultHandler.class}),\n        @Signature(type = Executor.class, method = \"update\", args = {\n                MappedStatement.class, Object.class})})\npublic class PerformanceInterceptor implements Interceptor {\nprivate static final Logger logger = LoggerFactory.getLogger(PerformanceInterceptor.class);\nprivate static final DateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\n@Override\npublic Object intercept(Invocation invocation) throws Throwable {\n    MappedStatement mappedStatement = (MappedStatement) invocation.getArgs()[0];\n    Object parameterObject = null;\n    if (invocation.getArgs().length > 1) {\n        parameterObject = invocation.getArgs()[1];\n    }\n    String statementId = mappedStatement.getId();\n    BoundSql boundSql = mappedStatement.getBoundSql(parameterObject);\n    Configuration configuration = mappedStatement.getConfiguration();\n    String sql = getSql(boundSql, parameterObject, configuration);\n\n    long start = System.currentTimeMillis();\n    Object result = invocation.proceed();\n    long end = System.currentTimeMillis();\n    long timing = end - start;\n    logger.info(\"sql\u8017\u65f6\uff1a\" + timing + \" ms\" + \" - id:\" + statementId + \" - Sql:\" + sql);\n    return result;\n}. \u82f1\u6587\u4e0d\u597d\uff0c\u4e2d\u6587\u5728\u63cf\u8ff0\u4e00\u4e0b\uff0cSharding-Sphere\u5bfc\u81f4\u4ee5\u524d\u4f7f\u7528\u7684sql\u62e6\u622a\u5668\u65e0\u6548\u4e86\u3002. +1.\n",
    "guanxiaochen": "Still can't\n<property name=\"keepAlive\" value=\"true\" />\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\" />\n        <property name=\"minEvictableIdleTimeMillis\" value=\"180000\" />\n        <property name=\"maxEvictableIdleTimeMillis\" value=\"300000\" />\n. \u6b63\u5e38\u6765\u8bf4\u53ea\u8981\u914d\u7f6e\u4e86testWhileIdle=true\u548ctimeBetweenEvictionRunsMillis= 60000\n\u5c31\u4f1a\u6bcf\u6b21\u83b7\u53d6\u8fde\u63a5\u7684\u65f6\u5019\u67e5\u8be2\u4e00\u4e0b\u5f53\u524d\u8fde\u63a5\u7684\u7a7a\u95f2\u65f6\u95f4\u662f\u591a\u5c11\uff0c\u5982\u679c\u8d85\u8fc760000\u6beb\u79d2\u5c31\u4f1a\u6267\u884cvalidationQuery\u6821\u9a8c\nminEvictableIdleTimeMillis \u548c maxEvictableIdleTimeMillis \u6bcf\u969460000\u6beb\u79d2\u5b9a\u65f6\u6821\u9a8c\u7684\u65f6\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u5373\u4f7f\u4e4b\u524d\u6ca1\u6709\u914d\u7f6emaxEvictableIdleTimeMillis\uff0c\u4e5f\u4e0d\u5e94\u8be5\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\u7684\u3002\u3002\u53ea\u662f\u4e0d\u4f1a\u81ea\u52a8\u4ece\u8fde\u63a5\u6c60\u91cc\u91ca\u653e\u7f62\u4e86\uff0c\u4f46\u662f\u83b7\u53d6\u7684\u65f6\u5019\u8fd8\u662f\u4f1a\u5254\u9664\u8fd9\u79cd\u8fde\u63a5\u7684\u3002. \u4e0a\u8fb9\u7684\u731c\u6d4b\u8865\u5145\u4e00\u4e0b\uff0cmybatis\u9ed8\u8ba4\u542f\u7528\u4e86localcache\uff0c\u8d70\u7f13\u5b58\u65f6\uff0c\u4e5f\u5c31\u662f\u83b7\u53d6statement\u540e\u5e76\u6ca1\u6709\u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2\uff0cMasterSlavePreparedStatement\u6784\u9020\u5668\u4f1a\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5. ",
    "naah69": "i had solved that problem.\nbut i have a new problem.\n Data sharding and Read-write splitting how to use together.\ni find few document and demo online.i will upload my demo after that i study it.\ncan u Add me Wechat?\nWeChat:278567949. Which version of Sharding-Sphere do you using?\n3.0.0.M1\nExpected behavior\nData sharding and Read-write splitting work well together.\nActual behavior\nthrow Exception that is org.springframework.jdbc.BadSqlGrammarException\nReason analyze\nSQL\uff1aINSERT INTO t_order (order_id,user_id) VALUES (?,?) \nbut t_order is logic table.\nthe real table is t_order_0 and t_order_1.\nso data sharding may not work.\nFile\nhttps://github.com/naah69/sharding-jdbc-3-demo/tree/master/sharding-jdbc-rw-splitting-data-sharding\nthis is that code.. i had resolved this problem.\nnow i will explain my problem:\nRead/Write Splitting doc:\nhttp://shardingsphere.io/document/current/cn/manual/sharding-jdbc/usage/read-write-splitting\n\nbut this config should be configuration when  Read/Write Splitting was in use alone.\nSpringBoot Config doc:\nhttp://shardingsphere.io/document/current/cn/manual/sharding-jdbc/configuration/config-spring-boot/\n\nthis is real correct config when Data sharding and Read-write splitting work together.\ni will upload some demo on my github.\nif u are in trouble\uff0cwe can discuss something about sharding-jdbc. http://shardingsphere.io/document/current/cn/manual/sharding-proxy/configuration/\nis the website document 3.0.0.M2\uff1f. where is the 3.0.0.M1's config?. ",
    "PegasusS": "Welcome,Tiger!  +1. +1\n\u5728 2018-10-23 09:39:40\uff0c\"Perry.Zhang\" notifications@github.com \u5199\u9053\uff1a\n\uff0b1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "victormferrara": "Hi! Just FYI it is possible to use the placeholder in the update clause but as you say the common usage is just to use the values keyword or similar.\nCheers!. ",
    "giantoneday": "\u60a8\u597d\uff0c\u6211\u4e5f\u9047\u5230\u4e86\u76f8\u540c\u7684\u95ee\u9898\uff0cinsert on duplicate key update\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u529f\u80fd\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u540e\u53f0\u7684\u589e\u5220\u6539\u67e5\u6765\u8bf4\u3002\u8bf7\u770b\u4e0b\u80fd\u5426\u652f\u6301\uff1f\u3000\u8c22\u8c22\u3002\u3000\nHello, I came across the same problem,  \"insert on duplicate key update\" is an important feature in MySQL, especially for some admin operations. I sincerely hope that sharding-jdbc can support it, thanks very much.. \u60a8\u597d\uff0c\u6211\u4e5f\u9047\u5230\u4e86\u76f8\u540c\u7684\u95ee\u9898\uff0cinsert on duplicate key update\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u529f\u80fd\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u540e\u53f0\u7684\u589e\u5220\u6539\u67e5\u6765\u8bf4\u3002\u8bf7\u770b\u4e0b\u80fd\u5426\u652f\u6301\uff1f\u3000\u8c22\u8c22\u3002\u3000Hello, I came across the same problem,  \"insert on duplicate key update\" is an important feature in MySQL, especially for some admin operations. I sincerely hope that sharding-jdbc can support it, thanks very much.. ",
    "mengx8": "enhancement\n\u5f20\u4eae notifications@github.com \u4e8e 2018\u5e748\u67081\u65e5\u5468\u4e09 15:33\u5199\u9053\uff1a\n\nDo you want report a bug? or ask a question\uff1f\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sharding-sphere/sharding-sphere/issues/1078#issuecomment-409479078,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/APu5JxNM_gSNP9bzgDQno0e7djbEXHrxks5uMVnQgaJpZM4Vpw1m\n.\n. @terrymanu sorry I can't,  I just want to give some advice. \n",
    "dawe001": "Steps to reproduce the behavior:\nselect count(0) from tableA xx join tableB on xxxxxxx and B.xx != xx \nThe problem seems with \uff01 when use join. @ma-xiao-guang-64\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: java.lang.NullPointerException\nThe error may exist in com/yqm/manager/system/dao/self/SysSelectDicDao.java (best guess)\nThe error may involve com.yqm.manager.system.dao.self.SysSelectDicDao.getSysDic-Inline\nThe error occurred while setting parameters\nSQL: select count(0) from (select A.id,A.name,A.description,A.c_key 'key' from sys_select_dic A left JOIN sys_privilege_role C ON A.id=C.id AND C.level!=0  where A.type=? ORDER BY A.priority) tmp_count\nCause: java.lang.NullPointerException\nat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\n... 71 more\n\nCaused by: java.lang.NullPointerException\n    at io.shardingsphere.core.jdbc.metadata.dialect.JDBCShardingRefreshHandler.execute(JDBCShardingRefreshHandler.java:49)\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:159)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)\n    at com.github.pagehelper.SqlUtil.doProcessPage(SqlUtil.java:478)\n    at com.github.pagehelper.SqlUtil._processPage(SqlUtil.java:407)\n    at com.github.pagehelper.SqlUtil.processPage(SqlUtil.java:374)\n    at com.github.pagehelper.PageHelper.intercept(PageHelper.java:255)\n    at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\n    at com.sun.proxy.$Proxy248.query(Unknown Source)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\n    ... 77 more\n. @ma-xiao-guang-64\nsorry\uff0ci can't find 3.0.0.M2 \u3002the latest version is 3.0.0.M1 ??. @ma-xiao-guang-64 \n Will later versions support other Symbol like \uff01 ?. @terrymanu  project use mybatis ,the reproduce example codes\n@Autowired\nprivate SysSelectDicMapper sysSelectDicMapper;\n\npublic Long getSysDic() {\n    SysSelectDic selectDic = new SysSelectDic();\n    selectDic.setcKey(\"test\");\n    sysSelectDicMapper.insertSelective(selectDic);\n    return selectDic.getId();\n}.\n",
    "quicksandznzn": "\u89e3\u51b3\u4e86\u561b. ",
    "guoming": "@terrymanu \nhttps://github.com/guoming/sharding-proxy-DEMO. @zzzhangjian \nException in thread \"main\" java.lang.ExceptionInInitializerError\n        at io.shardingsphere.proxy.Bootstrap.initializeRuleRegistry(Bootstrap.java:55)\n        at io.shardingsphere.proxy.Bootstrap.main(Bootstrap.java:39)\nCaused by: Cannot create property=dataSources for JavaBean=io.shardingsphere.core.yaml.proxy.YamlProxyConfiguration@4c98385c\n in 'reader', line 57, column 1:\n    dataSources:\n    ^\nCannot create property=jdbc-url for JavaBean=io.shardingsphere.core.yaml.sharding.DataSourceParameter@4cdf35a9\n in 'reader', line 59, column 5:\n        jdbc-url: jdbc:sqlserver://10.2. ...\n        ^\nUnable to find property 'jdbc-url' on class: io.shardingsphere.core.yaml.sharding.DataSourceParameter\n in 'reader', line 59, column 15:\n        jdbc-url: jdbc:sqlserver://10.2.29.234:143 ...\n                  ^\nin 'reader', line 58, column 3:\n      ds_master:\n      ^\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:312)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:189)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:345)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:182)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:141)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:127)\n    at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:450)\n    at org.yaml.snakeyaml.Yaml.loadAs(Yaml.java:410)\n    at io.shardingsphere.core.yaml.proxy.YamlProxyConfiguration.unmarshal(YamlProxyConfiguration.java:71)\n    at io.shardingsphere.proxy.config.RuleRegistry.<init>(RuleRegistry.java:69)\n    at io.shardingsphere.proxy.config.RuleRegistry.<clinit>(RuleRegistry.java:52)\n    ... 2 more\n\nCaused by: Cannot create property=jdbc-url for JavaBean=io.shardingsphere.core.yaml.sharding.DataSourceParameter@4cdf35a9\n in 'reader', line 59, column 5:\n        jdbc-url: jdbc:sqlserver://10.2. ...\n        ^\nUnable to find property 'jdbc-url' on class: io.shardingsphere.core.yaml.sharding.DataSourceParameter\n in 'reader', line 59, column 15:\n        jdbc-url: jdbc:sqlserver://10.2.29.234:143 ...\n                  ^\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:312)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:189)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:182)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructMapping2ndStep(BaseConstructor.java:373)\n    at org.yaml.snakeyaml.constructor.SafeConstructor.constructMapping2ndStep(SafeConstructor.java:147)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructMapping(BaseConstructor.java:354)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:170)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:182)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:297)\n    ... 12 more\n\nCaused by: org.yaml.snakeyaml.error.YAMLException: Unable to find property 'jdbc-url' on class: io.shardingsphere.core.yaml.sharding.DataSourceParameter\n        at org.yaml.snakeyaml.introspector.PropertyUtils.getProperty(PropertyUtils.java:132)\n        at org.yaml.snakeyaml.introspector.PropertyUtils.getProperty(PropertyUtils.java:121)\n        at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.getProperty(Constructor.java:322)\n        at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:240). ",
    "zzzhangjian": "\u591a\u6570\u636e\u6e90\u662f\uff0cspring boot 2.0\u4ee5\u4e0a\u7248\u672c\n\u6570\u636e\u5e93\u914d\u7f6e\uff1aurl \u6539\u4e3a jdbc-url\n\u4f8b\u5982\uff1a\nds_slave0:\njdbc-url: jdbc:sqlserver://10.2.21.216:1433;databasename=TestDB_Shard1\nusername: sa\npassword: xxxx. ",
    "AIKiller": "Thank for you reply, my server configuration is 4U 8G(Ubentu). In normal circumstances service's memory only use 500MB, CPU used less than 10% and disk read/write go near to 0.\nIn order to test smoothly, I only improve the parameters of MySQL.\nopen_files_limit = 65530\ninnodb_open_files = 65530\ntable_open_cache = 65000\nmax_connections=30000\nmax_user_connections=20000\nmax_allowed_packet = 128M\nmax_prepared_stmt_count=100000\nWhen I use as below command to test sharding-proxy, it will create 10 table in database and per table contain 1000000 record, then the tool will run 64 threads to connect with sharding-proxy.\nsysbench /usr/share/sysbench/oltp_read_write.lua  --mysql-host=172.60.20.46 --mysql-port=3308 --mysql-user=root --mysql-password=root --mysql-db=sharding_db --db-driver=mysql --tables=10 --table-size=1000000 --report-interval=10 --threads=64  --time=120 --skip_trx=on  --db-ps-mode=disable --mysql-ignore-errors=1062  run;\nIn test situation, the slave service will appear larger occupancy factor. \nThe disk read is 2MB/S  and write is 100KB/S.\nThe memory usage rate is steady keep on  1.5G\nHowever, the CPU usage has a large fluctuation, ranging from 60% to 90%.\nOn other hand, the master node(write node )\nThe disk  write is 8MB/S, and memory usage rate has 1.6G.\nThen, the CPU usage only ranging from 15% to 30%\nThere will be some problems with inserting duplicates during the test. I don't know if it is a test script or an sharding-proxy problem. But I saw someone fixing the bug in the issues(#1066). \nWhen I stop the test program, the disk read/write rate will return to 0, but  the CPU usage not recovery. And I can saw some threads in my system(slave node), unless I stop the sharding-proxy use stop.sh\n\nOf course, the master node does not have such problem, and he will quickly return to the initial state after stopping the test.\nI think that the threads of the salve node doesn't get release.. Yes, I try to modified the proxy.transaction.mode according to TransactionType.java \nIf use NONE, it will get same result(CPU usage is height ) and the disk read/write have some improve.\nIf use XA and BASE, I will get some error : Commands out of sync; you can't run this command now   I don't know what does result in the error, maybe the result is caused by sysbench ?. ",
    "wangjinyu1994": "Have you solved this problem?I also encountered this problem after upgrading to the latest version. ",
    "wslongchen": "I ncountered this problem after upgrading to the latest version ,too. ",
    "niuniu9631": "hello,when will the next release plan be released? @terrymanu \nthere is a repair plan for the current version\uff083.0.0.M2\uff09.. \u6211\u4eec\u8fd9\u8fb9\u4e5f\u9047\u5230\u76f8\u540c\u7684\u95ee\u9898\uff0c\u73af\u5883\u5982\u4e0b\njdk 1.8 tomcat8\n\u6211\u4eec\u53ea\u4f9d\u8d56\u5982\u4e0b4\u4e2a\uff0c\u5f53\u8fdb\u884c\u6570\u636e\u5e93\u65b0\u589e\uff0c\u4fee\u6539\u64cd\u4f5c\u65f6\u5c31\u62a5\u4e0a\u8bc9\u9519\u8bef\uff0c\u5e94\u8be5\u662f\u51fa\u73b0\u5f02\u5e38\u5bfc\u81f4\u4e8b\u52a1\u56de\u6eda\uff0c\u67e5\u8be2\u6b63\u5e38\uff0cM1\u7248\u672c\u6b63\u5e38\uff0c\u914d\u7f6e\u4e5f\u6ca1\u8fdb\u884c\u6539\u52a8\u3002\nsharding-jdbc\nsharding-core\nsharding-jdbc-spring-namespace\nsharding-jdbc-orchestration-spring-namespace\n\u7248\u672c\u4e3a3.0.0.M2. ",
    "jukai5501": "@terrymanu \nAlready added the full question, please help me to take a look. @terrymanu \nI found the problem is there, when the jdbc driver \"mysql-connector-java\" version is 8.x, M2 does not support it, and it can be reduced to 5.x. You can try raising your jdbc driver to 8.x and you will find the error location in the \"com.mysql.cj.jdbc.DatabaseMetaData.getCatalogIterator\" method.. ",
    "ryandonglin": "I've already found the real problem, the question is that we're current using technologies such as dbproxy to manage 2 different db into one address, and in my project i am using druid to connect to one of the database and therefor we can only see part of tables in that db, so any suggestion can offered to solve the problem?. ",
    "codefairy08": "Write DDL grammar files, currently only write table index related statements \n- [x] Develop grammar file MYSQL DDL g4 \n\n\n[x] Develop grammar file Postgre DDL g4 \n\n\n[x] Develop grammar file SQLServer DDL g4 \n\n\n[x] Develop grammar file Oracle DDL g4 \n\n\nIntegrate the generated sql syntax parsing code into ss\n- [x] Integrate the generated mysql syntax  parsing code \n\n\n[x] Integrate the generated postgre syntax  parsing code \n\n\n[x] Integrate the generated sqlserver syntax  parsing code \n\n\n[x] Integrate the generated oracle syntax  parsing code \n\n\n. - [x] Develop TCL grammar\n\n[x] Add TCL statement visitor\n. grammar file complete. thank you for your issue! it will be fixed next release.. no HASHED Syntax  for (create | alter) user . Parsing alias failed, causing sql parsing error,alias should support string.  sharding table is empty,let it go on. mismatch string with escape character. this is hibernate issue, please refer this link https://www.cnblogs.com/zzsaf/p/6902559.html\nmay give you some help. \"create index block_height on activity_activity (block_height)\"  this sql call execute successed  in mysql client? can you provide the minimal demo of reproduced this  error ?. @dalaocu \nit works well use your 'using-sharding-jdbc-log' branch,  my code url is https://github.com/codefairy08/sharding-demo, mysql version is 8.0, i do not use zk.\nthe log is \n019-02-27 15:40:18.733  INFO 9220 --- [           main] c.d.s.demo.ShardingDemoApplication       : Starting ShardingDemoApplication on DESKTOP-UJ1QVF3 with PID 9220 (E:\\gitrepo\\1711_demo\\using-sharding-jdbc-log\\sharding-demo\\bin\\main started by dhj in E:\\gitrepo\\1711_demo\\using-sharding-jdbc-log\\sharding-demo)\n2019-02-27 15:40:18.735  INFO 9220 --- [           main] c.d.s.demo.ShardingDemoApplication       : The following profiles are active: sharding-tables\n2019-02-27 15:40:19.268  INFO 9220 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\n2019-02-27 15:40:19.320  INFO 9220 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 45ms. Found 1 repository interfaces.\n2019-02-27 15:40:19.562  INFO 9220 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca11adb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n2019-02-27 15:40:19.927  INFO 9220 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8082 (http)\n2019-02-27 15:40:20.031  INFO 9220 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2019-02-27 15:40:20.032  INFO 9220 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.14]\n2019-02-27 15:40:20.041  INFO 9220 --- [           main] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: \n2019-02-27 15:40:20.124  INFO 9220 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2019-02-27 15:40:20.124  INFO 9220 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1213 ms\n2019-02-27 15:40:20.207  INFO 9220 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\n2019-02-27 15:40:20.304  INFO 9220 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\n2019-02-27 15:40:20.434  INFO 9220 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [\n    name: default\n    ...]\n2019-02-27 15:40:20.481  INFO 9220 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.7.Final}\n2019-02-27 15:40:20.481  INFO 9220 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found\n2019-02-27 15:40:20.591  INFO 9220 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}\n2019-02-27 15:40:20.707  INFO 9220 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: com.dalaocu.sharding.demo.config.MysqlConfig\nHibernate: create table activity_activity (pk_id bigint not null auto_increment, block_height bigint, depot_updatetime datetime(6), status integer, primary key (pk_id)) ENGINE=InnoDB DEFAULT CHARSET=utf8\nHibernate: create index block_height on activity_activity (block_height)\nHibernate: create index status on activity_activity (status)\n2019-02-27 15:40:21.488  INFO 9220 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\n2019-02-27 15:40:21.920  INFO 9220 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\n2019-02-27 15:40:21.954  WARN 9220 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\n2019-02-27 15:40:22.106  INFO 9220 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8082 (http) with context path ''\n2019-02-27 15:40:22.107  INFO 9220 --- [           main] c.d.s.demo.ShardingDemoApplication       : Started ShardingDemoApplication in 3.639 seconds (JVM running for 3.949)\n\n. @dalaocu \ni have tried more than 3 times,  no warning log was found\u3002\n logs as follow\uff1a\n  .   _          _             _ \n /\\ / '  _ ()_   _ \\ \\ \\ \\\n( ( )_ | ' | '| | ' \\/ ` | \\ \\ \\ \\\n \\/  )| |)| | | | | || (_| |  ) ) ) )\n  '  || .|| ||| |_, | / / / /\n =========||==============|___/=///_/\n :: Spring Boot ::        (v2.1.2.RELEASE)\n2019-03-04 09:25:42.238  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : Starting ShardingDemoApplication on DESKTOP-UJ1QVF3 with PID 2160 (E:\\gitrepo\\1711_demo\\sharding-demo\\bin\\main started by dhj in E:\\gitrepo\\1711_demo\\sharding-demo)\n2019-03-04 09:25:42.240  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : No active profile set, falling back to default profiles: default\n2019-03-04 09:25:42.672  INFO 2160 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\n2019-03-04 09:25:42.723  INFO 2160 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46ms. Found 1 repository interfaces.\n2019-03-04 09:25:42.971  INFO 2160 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac6dc77d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n2019-03-04 09:25:43.321  INFO 2160 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8082 (http)\n2019-03-04 09:25:43.341  INFO 2160 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2019-03-04 09:25:43.341  INFO 2160 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.14]\n2019-03-04 09:25:43.349  INFO 2160 --- [           main] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: []\n2019-03-04 09:25:43.422  INFO 2160 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2019-03-04 09:25:43.422  INFO 2160 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1153 ms\n2019-03-04 09:25:43.621  INFO 2160 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [\n    name: default\n    ...]\n2019-03-04 09:25:43.668  INFO 2160 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.7.Final}\n2019-03-04 09:25:43.669  INFO 2160 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found\n2019-03-04 09:25:43.774  INFO 2160 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}\n2019-03-04 09:25:43.871  INFO 2160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\n2019-03-04 09:25:43.971  INFO 2160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\n2019-03-04 09:25:43.982  INFO 2160 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: com.dalaocu.sharding.demo.config.MysqlConfig\n2019-03-04 09:25:44.429  INFO 2160 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\n2019-03-04 09:25:44.779  INFO 2160 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\n2019-03-04 09:25:44.816  WARN 2160 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\n2019-03-04 09:25:44.980  INFO 2160 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8082 (http) with context path ''\n2019-03-04 09:25:44.981  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : Started ShardingDemoApplication in 2.987 seconds (JVM running for 3.272). @dalaocu  sharding-jdbc is not dependent with OS\uff0c i still cloud not reproduce  after adding log. does not support subquery without sharding column in where condition. wrong initial value cause this issue. thanks,  i will fix it. thanks, String value need trip start quote and end quote, just fix it. already fixed it ,please view #1784. DQL subquery does not check with hint whether it route more than one shards . thanks,  shere conditiion column has none owner,  cause sharding condition is wrong. dulicated #1862  #1753 #1868\nfixed it this issue. @guowdxp it compute availableTargetDatabases using sharding condition, then use each availableTargetDatabases and sharding condition value compute actual table, it cause  datasource Cartesian with actual  table, when database sharding column is the same as table sharding column ,it execute  more actual sql, but the result is correct.  StandardRoutingEngine#routeDataSources method return a Map>, key is datasource name, value is this datasource RouteValues\n, doSharding(availableTargetDatabases, databaseShardingValues) , split databaseShardingValues \uff0ceach databaseShardingValues with one element\uff0cStandardRoutingEngine#routeTables(final TableRule tableRule, final String routedDataSource, final List tableShardingValues, Map> datasourceRouteValues) ,when  database sharding column is the same as table sharding column,  use datasourceRouteValues compute actual tables\u3002\n. @avalon566  the feture is ok , i had test again.  support  both limit ?  and limit ?,?. if you have encountered problems. please provide exception clause.. @avalon566  use your sql , i tested it, parser result is ok , i use dev branch code,  which branch did you use? please provide your test code , thanks\n\n. @linyuliang  thanks for your code\uff0c but your  modification does not fix this bug,  i commit code.. @mfeng-ya  it caused by shared SQLStatement, ParsingResultCache is global cache, it cloud not change to ThreadLocal. @mfeng-ya It does not work,  It is not caused by  ParsingResultCache , the  instance in ParsingResultCache  should not be changed.. @jiangbin216  i could not understand what you mean,  please give a detailed description. @trojanliu thanks for your issue, it caused by wrong parse result. @wjvonline  the issue was resolved, thanks. IF is a keyword,  When the function nested function . the inner functionname is the keyword\uff0c it failed parsing\n. it's ok, don't format old code. ok i will modify it. Unique\u00a0Id,  i think it is ok!. full id may be with schema name database name.. uid match more than ID. final is ok. final is ok. i will remove it. ok. ",
    "GitProBo": "actual table structure is like this.\nmysql> show create table pay_cmdy_0000\\G;\n***** 1. row *******\n       Table: pay_cmdy_0000\nCreate Table: CREATE TABLE pay_cmdy_0000 (\n  id bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '\u4e3b\u952eid',\n  payment_no varchar(32) NOT NULL DEFAULT '' COMMENT '\u652f\u4ed8\u5355\u53f7',\n  cmdy_id varchar(64) NOT NULL DEFAULT '' COMMENT '\u5546\u54c1ID',\n  cmdy_name varchar(64) NOT NULL DEFAULT '' COMMENT '\u5546\u54c1\u540d\u79f0',\n  price int(11) NOT NULL DEFAULT '0' COMMENT '\u91d1\u989d',\n  quantity varchar(11) NOT NULL DEFAULT '0' COMMENT '\u6570\u91cf,\u53ef\u5c0f\u6570',\n  discount_fee int(11) NOT NULL DEFAULT '0' COMMENT '\u4f18\u60e0\u91d1\u989d',\n  promotion_id varchar(64) NOT NULL DEFAULT '' COMMENT '\u4f18\u60e0ID',\n  create_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u521b\u5efa\u65f6\u95f4',\n  update_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '\u4fee\u6539\u65f6\u95f4',\n  PRIMARY KEY (id),\n  KEY idx_pay_cmdy_payment_no (payment_no)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='\u4ed8\u6b3e\u5546\u54c1'\n1 row in set (0.00 sec)\nERROR:\nNo query specified\nand I'm sure all actualDataNodes table structures are same as it..     pay_cmdy: \n      actualDataNodes: pay_${0..15}.pay_cmdy_000${0..9}\n      databaseStrategy: \n        inline:\n          shardingColumn: payment_no\n          algorithmExpression: pay_${payment_no % 16}\n      tableStrategy: \n        inline:\n          shardingColumn: payment_no\n          algorithmExpression: pay_cmdy_000${payment_no % 10}. ",
    "zhanyao": "Is it possible to scan only the databases in the slice configuration and not scan other databases?. Is there planning support later?. ",
    "sunjiabo": "This is a clerical error. \nThe problem has been solved.\nhttps://github.com/sharding-sphere/sharding-sphere/issues/1156\nhttps://www.cnblogs.com/Fly-Bob/p/7218006.html. mybatis \n\\                                                                                            keyColumn=\"id\" **useGeneratedKeys**=\"true\">\n    insert into message_new (mq_id, ....\n      send_time, consume_time, create_time)\n    values (#{mqId,jdbcType=VARCHAR}, ...\n      #{sendTime,jdbcType=TIMESTAMP}, #{consumeTime,jdbcType=INTEGER}, \n      #{createTime,jdbcType=TIMESTAMP}, \n      #{hostip,jdbcType=VARCHAR})\n  \\\n\\generate-key-column-name=\"id\"/>\nmysql insert actual id is 237162384471687168\nbut, mybatis return MessageNew.id  is   237162384471687170. I use the my custom ID generator algorithm is correct, for example timestamp.\nbut, use snowflake the return id is incorrect.\n. I inserted only one row of data.\nMy algorithmExpression is only take the current timestamp, the retured MessageNew.id is equals to the id in mysql table.\nIf use DefaultKeyGenerator or IPKeyGenerator\uff0cit`s incorrect !\nThe id in mysql table is 237162384471687168, but mybatis returned MessageNew.id is  237162384471687170\nselect * from message_new_201808  where id = 237162384471687170\nIt`s empty.\nselect * from message_new_201808 where id= 237162384471687168\ncan return the insert row.\nWhere did I use it wrong?\n. \n\n<sharding:standard-strategy id=\"tableShardingStrategy\" sharding-column=\"send_time\" \n        precise-algorithm-ref=\"preciseTableShardingAlgorithm\" range-algorithm-ref=\"rangeTableShardingAlgorithm\"/>\n\n<sharding:data-source id=\"shardingDataSource\">\n    <sharding:sharding-rule data-source-names=\"hexinMsgDataSource\" default-data-source-name=\"hexinMsgDataSource\">\n        <sharding:table-rules>\n            <sharding:table-rule logic-table=\"message_new\" \n                actual-data-nodes=\"hexinMsgDataSource.message_new_2018$->{['01','02','03','04','05','06','07','08','09','10','11','12']}\" \n                table-strategy-ref=\"tableShardingStrategy\" generate-key-column-name=\"id\"/>\n            <sharding:table-rule logic-table=\"message_body\" \n                actual-data-nodes=\"hexinMsgDataSource.message_body_2018$->{['01','02','03','04','05','06','07','08','09','10','11','12']}\" \n                table-strategy-ref=\"tableShardingStrategy\" generate-key-column-name=\"id\"/>\n        </sharding:table-rules>\n        <sharding:binding-table-rules>\n            <sharding:binding-table-rule logic-tables=\"message_new,message_body\"/>\n        </sharding:binding-table-rules>\n    </sharding:sharding-rule>\n    <sharding:props>\n        <prop key=\"sql.show\">true</prop>\n    </sharding:props>\n</sharding:data-source>. select * from message_new where id=237162384471687170\n\nempty in other tables\uff0conly insert to message_new_201808.\nIs there any problem with your test? . I discovered the cause of the problem.\nThis is a bug of Jsckson.  Cannot convert long value  correct\uff0cif the value is logger than 16 digit.\nThank you for your answer !. ",
    "liudunxu": "+1. ",
    "forecasted": "+1. ",
    "wangxiuwen": "+1. ",
    "mark-wk": "+1. ",
    "SteNicholas": "+1. ",
    "lphzxf": "+1. ",
    "ruanjiehui": "+1\uff0c\u671f\u5f85\u4f7f\u7528\u4e0a\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684API. ",
    "txsgit": "+1. ",
    "wade92": "+1. ",
    "guo156627977": "agree, yes, +1. ",
    "firebullwang": "+1. ",
    "lcx1989210": "+1. ",
    "xiaoyanghapi": "+1. ",
    "andismail": "+1. ",
    "LSloveYJ": "+1\n+1\n+1. ",
    "iqinghe": "+1. agree, yes, +1. ",
    "jiguansheng5": "+1. ",
    "gsfeng179": "+1. ",
    "hyjcxy": "+1. ",
    "liqinlong": "+1. ",
    "diviner01": "+1. agree, yes, +1. ",
    "arewei": "+1. ",
    "yuemanxilou": "+1. ",
    "SBTimo": "+1. ",
    "zhanjr": "agree, yes, +1\nMany open source frameworks runs on a JDK higher than or equal to version 8. . ",
    "kissdragon-z": "+1. ",
    "codering": "agree, yes, +1. ",
    "huangyee": "+1. ",
    "ma9": "+1. ",
    "xingkong0325": "+1. ",
    "smilezhou666": "agree, yes, +1. ",
    "zhaosoft1982": "+1. ",
    "readazusa": "agree, yes, +1. ",
    "chenys101": "agree, yes, +1. ",
    "jian365066744": "+1. ",
    "mwylaoma": "+1. ",
    "rainwen": "+1. ",
    "w19901h": "+1. ",
    "liuyindong": "+1. ",
    "yichenghuachuang": "+1. +1. +1. +1. +1. +1. +1. +1. +1. ",
    "WillemJiang": "@wu-sheng from the experience of Spring 4.x,\n\nWe chose not to use any Java 7 or Java 8 language features in our own codebase in order to give you the flexibility to write your Spring 4 applications for Java 6, 7 or 8. \n\nI think we can consider to separate the actor module from the saga-core and let the saga-core only use the Java7 feature.. ",
    "it-noob": "+1. ",
    "baisijian": "the question were fixed by myself, It is not issue of SS, thank you for reply.. thank you @terrymanu for reply  ,\nI saw sharding using ResultSet.HOLD_CURSORS_OVER_COMMIT instead of CLOSE_CURSORS_AT_COMMIT , HOLD_CURSORS_OVER_COMMIT is support at jdbc 3.0 ,  If I change  HOLD_CURSORS_OVER_COMMIT  to CLOSE_CURSORS_AT_COMMIT , sharding will still working fine?\ncode: MasterSlavePreparedStatement.java:50\n        this(connection, sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT);\n. Thanks a lot. ",
    "zz0116": "\"skip to parse system schema\" is exactly what I expected, if the sharding-jdbc skipped the sql \"select ... from information_schema.columns\", tomcat wouldn't report \"Table 'base.columns' doesn't exist\", the database \"base\" was the dataSource what we used, so what sharding-jdbc had done was parsing the \"information_schema.colums\" into \"base.columns\", and I didn't want it to do this conversion.. ",
    "fangdong116": "where is the maven repository url?. ",
    "villainess-y": "You didn't see the quotes because I forgot the markdown syntax rules to recognize the quotes\n\nThere is a create table statement in this function\n\nThere is the database log information\n\n. ",
    "zhengjieyuan": "it work.but print \nLoading class com.mysql.jdbc.Driver'. This is deprecated. The new driver class iscom.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary. \nfor logs\nI remove mysql-connector-java-5.1.30.jar  and config.yml set \nyaml\ndataSources:\n ds_0:\n   url: jdbc:mysql://192.168.100.100:3306/dyyt_0?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&serverTimezone=UTC\n   username: root\n   password: 123456\n   autoCommit: true\n   connectionTimeout: 30000\n   idleTimeout: 60000\n   maxLifetime: 1800000\n   maximumPoolSize: 10\n ds_1:\n   url: jdbc:mysql://192.168.100.231:3307/dyyt_1?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&serverTimezone=UTC\n   username: root\n   password: 123456\n   autoCommit: true\n   connectionTimeout: 30000\n   idleTimeout: 60000\n   maxLifetime: 1800000\n   maximumPoolSize: 10\n. ",
    "yangzhou322": "\u90a3\u4e9b\u4e0d\u60f3\u5206\u7684\u8868\u4e5f\u4e0d\u80fd\u4f7f\u7528DISTINCT\uff0c\u5f7b\u5e95\u51c9\u4e86. OK, tks\n. ",
    "xj198806": "why table PreciseShardingAlgorithm can not use distinct , why can not decided by users. ",
    "pjypjy": "I fount this error caused by mysql-connetor8.X not shardingsphere.. ",
    "linxiaobai": "@pjypjy Is it compatible with mysql8, are you having any problems during use?. ",
    "gongandkai": "before :\n```java\n@RequiredArgsConstructor\npublic final class StandardRoutingEngine implements RoutingEngine {\nprivate final ShardingRule shardingRule;\n\nprivate final String logicTableName;\n\nprivate final ShardingConditions shardingConditions;\n\n@Override\npublic RoutingResult route() {\n    TableRule tableRule = shardingRule.getTableRuleByLogicTableName(logicTableName);\n\n```\nafter\n add param shardingConditions\njava\nTableRule tableRule = shardingRule.getTableRuleByLogicTableName(logicTableName,shardingConditions);\nbecase shardingConditions has  gDataSourceNames\nusing\n```java\n  public TableRule getTableRuleByLogicTableName(final String logicTableName,ShardingConditions shardingConditions) {\n        Optional tableRule = tryFindTableRuleByLogicTable(logicTableName.toLowerCase());\n        if (tableRule.isPresent()) {\n            return tableRule.get();\n        }\n        //add\n        if ( shardingRuleConfig.allTalbesAdd2Rule()) {\n            if(shardingConditions.getShardingConditions  == shardingDataSourceNames.getDataSourceNames().get(i)){\n                TableRuleConfiguration tableRuleConfig = new TableRuleConfiguration();\n                tableRuleConfig.setLogicTable(logicTableName);\n                tableRuleConfig.setActualDataNodes(shardingDataSourceNames.getDataSourceNames().get(i)+ \".\" + logicTableName);\n                return new TableRule(tableRuleConfig, new ShardingDataSourceNames(shardingRuleConfig, Collections.singletonList(shardingDataSourceNames.getDefaultDataSourceName())));\n        }\n     `}`\n\n    if (!Strings.isNullOrEmpty(shardingDataSourceNames.getDefaultDataSourceName())) {\n        return createTableRuleWithDefaultDataSource(logicTableName);\n    }\n    throw new ShardingConfigurationException(\"Cannot find table rule and default data source with logic table: '%s'\", logicTableName);\n}\n\n```\n. Is a problem\uff0c sorry about that I forget my project just has sharding database not has shradingtable. ",
    "leehom": "I have some idea about hint sharding, what hint means is routing to db.table according business, and  business in som way deal with fields in sql,  parsing sql just found what fields business dealed with but not the business it self. I now use hint sharding, I found hint sharding like resource manage so much, that is to say\uff0cassigning which db.table to which user, I think developing a resource management can help more. I had implemented an one , i found it just as Tenant implemention\uff0ci want to know others implementtion too. new feature. Maybe\uff0cI could say it refactor other than new feature, now ShardingAlgorithm is instanced by [Class.forName], so it\u2018s dependencies\uff0cfor example\uff0csome app service , can't to be inited(or not Easily)\uff0cin fact\uff0cShardingAlgorithm expecially for hint\uff0cneed to access db for some data or other services. oh\uff0cI see\uff0cwithin 3.0.0 plus versions, ShardingAlgorithm is an instance, class.forName occurs in v2.0.3 minus\uff0cmaybe\uff0ci could update to newer versions as soon as possibly. when using thead pool make thinks more worst\uff0cthreadlocal would exist in thread within the pool. \"springTransactionMaanger will commit the connection\uff0cthen close it\"\nDid you mean it denpends SpringTransactionManager(short for tm) or some other tms to close the connection, and then clear the hint.\ni think, in some time, such as db connection pool, tm would not close the connection.\nin fact,i found that condition exsist, that is to say\uff0chints would keep in the thread that managed by pool\uff0cit would shared by multi request, that made things confused.. can i make a summary\uff0c\nfirst, shardingConnection.close would not be invoked, if Connection is managed by pool, then hint dosen't clear and keep in thread\nsecond, hints would keep in the thread that managed by pool, and be shared by multi requests,  that made things confused.. I cannot get your point. Hint is keep same lifecycle with connection, if connection closed, hint should be closed.\nthe point is connection don't close when it is managed by pool,  and then thread isn't clear, hints is keeped in thread local\uff0cso hints is not clear.. I can borrow a blog to show what i mean\uff0cand it include code example\nhttps://blog.csdn.net/qq_33522040/article/details/85322094\nthe key is \u201cbecause of reusing the thread, it make the hints in the thread not  being cleared\u201d\n. > \n\n\nthe key is \u201cbecause of reusing the thread, it make the hints in the thread not being cleared\u201d\n\nHow to reusing the thread without connection closed? If user really meet this scene, user can call HintManager.close() method to clear hint info by themselves.\nShardingSphere provide to way to clear hint info.\n1. User call `HintManager.close()`\n\n2. User call `connection.close()`\n\nDo you want more way to clear hint info?\n\nfor  1. User call HintManager.close()\uff0c yes\uff0cwe now manage hints by myself\uff0ccallingHintManager.close()\uff0cbut at the same time we remove the HintManager.close() in connection.close() (we not use ss v3.0.0)\uff0cit works fine\nfor 2. User call connection.close()\uff0c it is another bug\uff0cdb connection is managed by pool too\uff0cconnection.close() should not be called when the db connection retrieved. ",
    "codecov[bot]": "Codecov Report\n\nMerging #1243 into sharding-jdbc-ddl-parser will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                     Coverage Diff                      @@\nsharding-jdbc-ddl-parser    #1243      +/-\n============================================================\n- Coverage                     57.47%   57.46%   -0.02%   \n============================================================\n  Files                           668      668            \n  Lines                         12894    12894            \n  Branches                       2068     2068            \n============================================================\n- Hits                           7411     7409       -2   \n- Misses                         5011     5013       +2   \n  Partials                        472      472\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ngsphere/opentracing/sampling/SamplingService.java | 88% <0%> (-12%) | :arrow_down: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 76.81% <0%> (+1.44%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c290c62...eb66cb7. Read the comment docs.\n. # Codecov Report\nMerging #1329 into sharding-jdbc-ddl-parser will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@                     Coverage Diff                      @@\nsharding-jdbc-ddl-parser    #1329      +/-\n============================================================\n- Coverage                     57.48%   57.46%   -0.02%   \n============================================================\n  Files                           668      668            \n  Lines                         12894    12898       +4   \n  Branches                       2068     2068            \n============================================================\n  Hits                           7412     7412            \n- Misses                         5010     5013       +3   \n- Partials                        472      473       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ere/core/metadata/table/ShardingTableMetaData.java | 33.33% <0%> (-6.67%) | :arrow_down: |\n| ...ava/io/shardingsphere/test/sql/SQLCasesLoader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 72.46% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e94051e...2f4b293. Read the comment docs.\n. # Codecov Report\nMerging #1330 into sharding-jdbc-ddl-parser will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@                     Coverage Diff                      @@\nsharding-jdbc-ddl-parser    #1330      +/-\n============================================================\n+ Coverage                     57.41%   57.45%   +0.03%   \n============================================================\n  Files                           668      668            \n  Lines                         12898    12898            \n  Branches                       2068     2068            \n============================================================\n+ Hits                           7406     7411       +5   \n+ Misses                         5021     5016       -5   \n  Partials                        471      471\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ration/reg/newzk/client/zookeeper/base/Holder.java | 75.36% <0%> (+2.89%) | :arrow_up: |\n| ...al/state/datasource/DataSourceListenerManager.java | 40% <0%> (+3.33%) | :arrow_up: |\n| ...OrchestrationMasterSlaveDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n| ...ce/OrchestrationShardingDataSourceFactoryBean.java | 77.77% <0%> (+11.11%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0c9ee96...edc9337. Read the comment docs.\n. # Codecov Report\nMerging #1342 into sharding-jdbc-ddl-parser will increase coverage by 0.05%.\nThe diff coverage is 66.1%.\n\n\n```diff\n@@                     Coverage Diff                      @@\nsharding-jdbc-ddl-parser    #1342      +/-\n============================================================\n+ Coverage                     57.48%   57.53%   +0.05%   \n============================================================\n  Files                           668      677       +9   \n  Lines                         12898    12952      +54   \n  Branches                       2068     2078      +10   \n============================================================\n+ Hits                           7414     7452      +38   \n- Misses                         5013     5026      +13   \n- Partials                        471      474       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...main/java/io/shardingsphere/test/sql/SQLCases.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ava/io/shardingsphere/test/sql/SQLCasesLoader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntler/visitor/postgre/PostgreDropIndexVisitor.java | 0% <0%> (\u00f8) | |\n| ...o/shardingsphere/test/sql/AntlrSQLCasesLoader.java | 0% <0%> (\u00f8) | |\n| ...tement/visitor/IndexWithTableStatementVisitor.java | 100% <100%> (\u00f8) | |\n| ...sing/antler/phrase/visitor/IndexesNameVisitor.java | 100% <100%> (\u00f8) | |\n| .../antler/visitor/oracle/OracleDropIndexVisitor.java | 100% <100%> (\u00f8) | |\n| ...tler/visitor/postgre/PostgreAlterIndexVisitor.java | 100% <100%> (\u00f8) | |\n| ...antler/visitor/oracle/OracleAlterIndexVisitor.java | 100% <100%> (\u00f8) | |\n| ...arsing/antler/phrase/visitor/IndexNameVisitor.java | 77.77% <77.77%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update efe51bb...bc64485. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (dev@5239852). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@          Coverage Diff           @@\ndev    #1461   +/-\n======================================\n  Coverage       ?   54.71%         \n======================================\n  Files          ?      597         \n  Lines          ?    12215         \n  Branches       ?     1916         \n======================================\n  Hits           ?     6684         \n  Misses         ?     5136         \n  Partials       ?      395\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...tion/innersaga/api/SagaSoftTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...ion/innersaga/mock/MockSagaTransactionManager.java | 0% <0%> (\u00f8) | |\n| ...transaction/innersaga/api/SagaSoftTransaction.java | 0% <0%> (\u00f8) | |\n| ...gsphere/transaction/saga/util/PostSagaRequest.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/transaction/saga/SagaSoftTransaction.java | 0% <0%> (\u00f8) | |\n| ...phere/transaction/innersaga/sync/SagaListener.java | 0% <0%> (\u00f8) | |\n| ...ransaction/innersaga/mock/MockSagaTransaction.java | 0% <0%> (\u00f8) | |\n| ...va/io/shardingsphere/transaction/saga/SQLPair.java | 0% <0%> (\u00f8) | |\n| ...n/innersaga/mock/SagaTransactionConfiguration.java | 0% <0%> (\u00f8) | |\n| ...ngsphere/transaction/innersaga/mock/CancelSql.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5239852...a683bfd. Read the comment docs.\n. \n",
    "cherrishccl": "The reason of that is the version not matched. yes. ",
    "will-xlz": "spring mvc project, \nspring 4, mybatis 3.4.0, mybatis-spring 1.3.0\nsharding-jdbc 3.0.0.M3\nmysql\nname : datas\ntype :  mediumtext\nmapper.xml\nresult column=\"datas\" jdbcType=\"LONGVARCHAR\" property=\"datas\"\ninsert mediumtext error\nCause: io.shardingsphere.core.exception.ShardingException: Invoke jdbc method exception\nat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\nat com.sun.proxy.$Proxy16.insert(Unknown Source)\nat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)\nat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:56)\nat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)\nat com.sun.proxy.$Proxy25.insertSelective(Unknown Source)\nat com.zcool.zdiy.MyBatisTest.insert(MyBatisTest.java:56)\nat com.zcool.zdiy.MyBatisTest.test(MyBatisTest.java:33)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\nat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)\nat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)\nat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\nat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\nat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\nat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)\nat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\nat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \nError updating database.  Cause: io.shardingsphere.core.exception.ShardingException: Invoke jdbc method exception\nThe error may involve com.zcool.zdiy.persistence.ContainerMapper.insertSelective-Inline\nThe error occurred while setting parameters\nSQL: insert into container      ( container_id,                              type,                       type_num,                       user_Id,                       template_Id,                              page_id,                       container_order,                              project_id,                       cover_image,                                     container_tag_id,                              datas )       values ( ?,                              ?,                       ?,                       ?,                       ?,                              ?,                       ?,                              ?,                       ?,                                     ?,                              ? )\nCause: io.shardingsphere.core.exception.ShardingException: Invoke jdbc method exception\nat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\n... 35 more\n\nCaused by: io.shardingsphere.core.exception.ShardingException: Invoke jdbc method exception\n    at io.shardingsphere.core.jdbc.adapter.invocation.JdbcMethodInvocation.invoke(JdbcMethodInvocation.java:50)\n    at io.shardingsphere.core.jdbc.adapter.AbstractShardingPreparedStatementAdapter.replaySetParameter(AbstractShardingPreparedStatementAdapter.java:272)\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.getPreparedStatementExecuteUnit(ShardingPreparedStatement.java:293)\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.getExecuteUnitsForMemoryStrictly(ShardingPreparedStatement.java:268)\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.getPreparedStatementExecutor(ShardingPreparedStatement.java:260)\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:189)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n    at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n    at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n    at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n    ... 41 more\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at io.shardingsphere.core.jdbc.adapter.invocation.JdbcMethodInvocation.invoke(JdbcMethodInvocation.java:48)\n    ... 52 more\nCaused by: java.sql.SQLException: Invalid argument value: java.io.NotSerializableException\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:896)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:885)\n    at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)\n    at com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3825)\n    at com.mysql.jdbc.PreparedStatement.setObject(PreparedStatement.java:3555)\n    at com.mysql.jdbc.JDBC42PreparedStatement.setObject(JDBC42PreparedStatement.java:68)\n    at org.apache.commons.dbcp.DelegatingPreparedStatement.setObject(DelegatingPreparedStatement.java:166)\n    ... 57 more\nCaused by: java.io.NotSerializableException: java.io.StringReader\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\n    at com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3814)\n    ... 60 more\n. ",
    "kyrotiko": "\nWe are not implement yet, becuase 3.0.0 is not released.\nYou can use sharding-opentracing now.\nWe will do it after 3.0.0 released\n\nBut I still get into trouble with opentracing . could you please tell me which version of skywalking that you suggest to match the sharding-sphere 3.0.0.M3 opentracing\n. ",
    "wangyu1221": "Hope to support formmated names like ds_00,ds_01,...,ds_15. ",
    "boycai": "I also encountered this problem. How can I solve it?. ",
    "wuyuleiliu": "That's one way\uff0cbut it need to combine with other service(maybe need written by myself ) to disable the crashed slave data source automatically.\nI find that it can use nginx to implement load balancing of slave data sources,what do you think?It works?. @tony1991 That's not what it deal with it,you can find some information about it and terrymanu also said.\nYou should consider it as a whole,and the database itself has its own cluster,That's guaranteed not to crash.. ",
    "tony1991": "@wuyuleiliu could you tell me how to deal it finally?. ",
    "kuhn-he": "multiple threads means one request multiple datasource connections or one connection multiple work threads for execute SQL ? thks. ",
    "scuwuyu": "Which version of Sharding-Sphere did you use?\nshardingsphere 3.0.0.M3\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nSharding-JDBC\nExpected behavior\nselect * from table where xxx in () limit 0,20\uff0cxxx is shardingColumn.\nselect normally.\nActual behavior\nwhen one select is isSingleRouting select,the next select which is not SingleRouting select will have a NullPointerException:\nCaused by: java.lang.NullPointerException\n    at io.shardingsphere.core.rewrite.SQLRewriteEngine.appendLimitRowCount(SQLRewriteEngine.java:205) ~[sharding-core-3.0.0.M3.jar:?]\n    at io.shardingsphere.core.rewrite.SQLRewriteEngine.rewrite(SQLRewriteEngine.java:134) ~[sharding-core-3.0.0.M3.jar:?]\n    at io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:105) ~[sharding-core-3.0.0.M3.jar:?]\n    at io.shardingsphere.core.routing.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) ~[sharding-core-3.0.0.M3.jar:?]\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.sqlRoute(ShardingPreparedStatement.java:245) ~[sharding-jdbc-3.0.0.M3.jar:?]\n    at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:188) ~[sharding-jdbc-3.0.0.M3.jar:?]\n    at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source) ~[?:?]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_73]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_73]\n    at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.4.2.jar:3.4.2]\n    at com.sun.proxy.$Proxy140.execute(Unknown Source) ~[?:?]\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.2.jar:3.4.2]\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) ~[mybatis-3.4.2.jar:3.4.2]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_73]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_73]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_73]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_73]\nReason analyze (If you can)\nWhen one select is isSingleRouting,you will remove the selectStatement's limit field,but if the next select is not SingleRouting,you will use this field,then NullPointerException.\nThe object selectStatement has been cached in ParsingResultCache's cache field.\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link).. I\u2018ve reproduced this issue\uff1a\nhttps://github.com/scuwuyu/sharding-sphere-test\nI hope to get your help.. ",
    "flycjh": "any progress?. ",
    "loxp": "PreparedStatementRoutingEngine cache the SQLStatement objects. If the first SQL is single routing, the limit field of SQLStatement is set to null, and if the second SQL is multi routing, it get the cached SQLStatement first, and access to the limit field cause NPE.\npublic final class ParsingSQLRouter implements ShardingRouter {\n    ...\n    @Override\n    public SQLRouteResult route(final String logicSQL, final List<Object> parameters, final SQLStatement sqlStatement) {\n        ...\n        boolean isSingleRouting = routingResult.isSingleRouting();\n        if (sqlStatement instanceof SelectStatement && null != ((SelectStatement) sqlStatement).getLimit()) {\n            processLimit(parameters, (SelectStatement) sqlStatement, isSingleRouting); // single routing set limit to null\n        }\n        ...\n    }\n    ...\n}\npublic final class PreparedStatementRoutingEngine {\n    ...\n    public SQLRouteResult route(final List<Object> parameters) {\n        if (null == sqlStatement) {\n            sqlStatement = shardingRouter.parse(logicSQL, true); // get the origin object, whose limit field is set to null\n        }\n        return masterSlaveRouter.route(shardingRouter.route(logicSQL, parameters, sqlStatement));\n    }\n    ...\n}\npublic final class SQLRewriteEngine {\n    ...\n    private void appendLimitRowCount(final SQLBuilder sqlBuilder, final RowCountToken rowCountToken, final int count, final List<SQLToken> sqlTokens, final boolean isRewrite) {\n        SelectStatement selectStatement = (SelectStatement) sqlStatement;\n        Limit limit = selectStatement.getLimit();\n        if (!isRewrite) {\n            sqlBuilder.appendLiterals(String.valueOf(rowCountToken.getRowCount()));\n        } else if ((!selectStatement.getGroupByItems().isEmpty() || !selectStatement.getAggregationSelectItems().isEmpty()) && !selectStatement.isSameGroupByAndOrderByItems()) {\n            sqlBuilder.appendLiterals(String.valueOf(Integer.MAX_VALUE));\n        } else {\n            sqlBuilder.appendLiterals(String.valueOf(limit.isNeedRewriteRowCount() ? rowCountToken.getRowCount() + limit.getOffsetValue() : rowCountToken.getRowCount()));\n        }  // here cause NPE\n        int beginPosition = rowCountToken.getBeginPosition() + String.valueOf(rowCountToken.getRowCount()).length();\n        appendRest(sqlBuilder, count, sqlTokens, beginPosition);\n    }\n    ...\n}. > When I try to use Sharding-Proxy,I found the follow sql statement isn't working,but in native mysql it works; I don't know how to fix it!\n\ninsert into tbl_order (actual_pay, created_date, customer_id, mobile, pay_date, sum, user_name, user_remain) values(1.0,'2018-11-01 11:00:01',1,'11',null,1,'alan',11)\norder_id is auto increment key\n\nsince id generated by DefaultKeyGenerator is a java long type, please use bigint datatype for order_id column.. ok, thanks a lot.. > Hi, maybe @Setter can be remove, can you check it again?\n\n@Setter\n @Getter\n private boolean masterRouteOnly;\n\nYes, removed.. ok, thanks.. PR in #1543. ",
    "pottieva": "\uff0b1. ",
    "mackwan84": "+1. Is it possible an issue in windows environment?. ",
    "lenxeon": "@terrymanu \nthank you, a other question is in this case how to setTableShardingStrategyConfig\nTableRuleConfiguration getOrderTableRuleConfiguration() {\n        TableRuleConfiguration result = new TableRuleConfiguration();\n        result.setLogicTable(\"tb_project_todo\");\n        result.setActualDataNodes(\"project.tb_project_todo_00${0..9},project.tb_project_todo_0${10..99},project.tb_project_todo_${100..255}\");\n        result.setKeyGeneratorColumnName(\"organization_id\");\n        result.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"organization_id\", \"tb_project_todo_${organization_id % 256}\"));\n        return result;\n    }\n. ok, maybe in this case use expression is not a good idea.\nTableRuleConfiguration getOrderTableRuleConfiguration() {\n        TableRuleConfiguration result = new TableRuleConfiguration();\n        result.setLogicTable(\"tb_project_todo\");\n        result.setActualDataNodes(\"project.tb_project_todo_00${0..9},project.tb_project_todo_0${10..99},project.tb_project_todo_${100..255}\");\n        result.setKeyGeneratorColumnName(\"organization_id\");\n        result.setTableShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"organization_id\", new ModuloShardingTableAlgorithm()));\n        return result;\n    }. ",
    "caixinning": "@tristaZero Very efficient\uff01. It was a single table. We introduced the sharding-jdbc framework and have not started sharding yet.\nSql: \n    \n        insert into record (id, date, memo)\n        values (#{id,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR})\n    \nOnly used this above method.\nThe database supports tens of thousands threads concurrently, and I don't think it will become a bottleneck.\n. ",
    "stonegos": "\nIf forbid full table scanning when don't have a shardig key, what is your expected for query result?\n\nthrow an exception or let developer choise how to do it . ",
    "RogerLuoZJ": "how i use one sql to replace the sql  'insert into a (a,b) value(?,?) on duplicate key update a= ? , b = ? + b '  by VALUES(column) ?. ",
    "goooong": "\nthe document maybe can help you\nhttp://shardingsphere.io/document/current/en/manual/sharding-jdbc/usage/hint/\n\nThank you for answering my question,Here's my code:\njava\npublic static DataSource getShardingDataSource(List dataSourcePropertiesList) throws SQLException {\nShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n//shardingRuleConfig.getTableRuleConfigs().add(DebtTableRuleConfiguration.getPlanHintTableRuleConfiguration());\nshardingRuleConfig.getTableRuleConfigs().add(DebtTableRuleConfiguration.getPlanTableRuleConfiguration());\nshardingRuleConfig.getTableRuleConfigs().add(DebtTableRuleConfiguration.getTermTableRuleConfiguration());\nMap<String, DataSource> dataSourceMap = DruidDataSourceBuider.build(dataSourcePropertiesList);\nMap<String, Object> configMap = new HashMap<>(0);\nProperties props = new Properties();\nprops.put(\"sql.show\", true);\nreturn ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, configMap, props);\n}\nThe comment line 3 is working well, it can't be properly sliced without comment, and it can't force sharding.. > I can't get your point. Did you mean if you don't comment the 3rd line, it works well; but if comment the 3rd line, it can't work , is it?\nYes, line 3 is HintShardingAlgorithm.. > I don't understand, if don't comment code is correct, why do you comment it?\nsorry\uff0cI'm not good at English.Can I use Chinese?\n\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8868\uff1a\n\u53ea\u914d\u7f6eComplexShardingStrategyConfiguration\u89c4\u5219\u80fd\u591f\u6b63\u786e\u8def\u7531\u5230\u5bf9\u5e94\u7684\u5e93\u8ddf\u8868\uff0c\n\u53ea\u914d\u7f6eHintShardingStrategyConfiguration\u89c4\u5219\u80fd\u591f\u6b63\u786e\u8def\u7531\u5230\u5bf9\u5e94\u7684\u5e93\u8ddf\u8868\uff0c\n\u5982\u679c\u540c\u65f6\u914d\u7f6eComplexShardingStrategyConfiguration\u3001HintShardingStrategyConfiguration\u89c4\u5219\uff0c\u5982\uff1a\nshardingRuleConfig.getTableRuleConfigs().add(HintShardingStrategyConfiguration);\nshardingRuleConfig.getTableRuleConfigs().add(ComplexShardingStrategyConfiguration);\n\u5219\u901a\u8fc7HintManager\u6307\u5b9a\u5e93\u8868\u7684\u67e5\u8be2\u65b9\u5f0f\u80fd\u591f\u6b63\u786e\u8def\u7531\u5230\u5bf9\u5e94\u7684\u5e93\u8ddf\u8868\uff0c\n\u901a\u8fc7\u5e26\u5206\u7247\u952e\u7684\u67e5\u8be2\u65b9\u5f0f\u4e0d\u80fd\u591f\u6b63\u786e\u8def\u7531\u5230\u5bf9\u5e94\u7684\u5e93\u8ddf\u8868\uff0c\u800c\u662f\u7b1b\u5361\u5c14\u79ef\u67e5\u8be2\u3002\n. The same table has two rules, and it cannot find the corresponding rules correctly.. ",
    "imloki": "Dubbo\u6846\u67b6\u5185\u6709\u8fd9\u6837\u7684\u6743\u91cd\u7b97\u6cd5\uff0c\u53ea\u8981\u6269\u5c55\u6216\u8005\u76f4\u63a5\u4fee\u6539\u539f\u6765\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u5373\u53ef\uff0c\u53ef\u5bf9\u5916\u66b4\u9732\u8bbe\u7f6e\u6743\u91cd\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u4e1a\u52a1\u81ea\u884c\u96c6\u6210\u914d\u7f6e\u4e2d\u5fc3\uff0c\u8fbe\u5230\u7ebf\u4e0a\u52a8\u6001\u8c03\u6574\u6743\u91cd\u7684\u76ee\u7684\u3002. ",
    "amanxu": "I pull sharding-sphere-example project from github and run \"sharding-proxy-boot-mybatis-example\" project which also throw the same exception.. I pull sharding-sphere-example project from github and run \"sharding-proxy-boot-mybatis-example\" project which also throw the same exception.. Sorry, I don't understand your reply for #1406. Thanks for your answer.Expect the 3.0.1 release.. Sorry, I don't understand your reply for #1403 . Why is Linked #1403 ?. ",
    "pfroad": "\nPlease show your config yaml\n\nserver.yaml\nauthentication:\nusername: root\npassword: root\nprops:\nmax.connections.size.per.query: 1\nacceptor.size: 12 # The default value is available processors count * 2.\nexecutor.size: 16 # Infinite by default.\nproxy.transaction.enabled: false\nproxy.opentracing.enabled: false\nsql.show: false. > beside server yaml, you should have config yaml\n############\nHere you can configure the rules for the proxy.\nThis example is configuration of sharding rule.\n\nIf you want to use sharding, please refer to this file;\nif you want to use master-slave, please refer to the config-master_slave.yaml.\n\n\nschemaName: sharding_db\ndataSources:\n  ds_master_0:\n    url: jdbc:mysql://192.168.99.101:3306/db1?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\n  ds_master_0_slave_0:\n    url: jdbc:mysql://192.168.99.101:3307/db1?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\n  ds_master_1:\n    url: jdbc:mysql://192.168.99.101:3306/db2?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\n  ds_master_1_slave_0:\n    url: jdbc:mysql://192.168.99.101:3307/db2?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\n  ds_master_2:\n    url: jdbc:mysql://192.168.99.101:3306/db3?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\n  ds_master_2_slave_0:\n    url: jdbc:mysql://192.168.99.101:3307/db3?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\n    username: cat\n    password: 123456\n    autoCommit: true\n    maximumPoolSize: 64\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    connectionTimeout: 30000\nshardingRule:\n  tables:\n    sbtest1:\n      actualDataNodes: ds_${0..1}.sbtest${0..4}\n      tableStrategy:\n        inline:\n          shardingColumn: id\n          algorithmExpression: sbtest${id % 5}\ndefaultDatabaseStrategy:\n    inline:\n      shardingColumn: id\n      algorithmExpression: ds_${id % 2}\ndefaultTableStrategy:\n    inline:\n      shardingColumn: id\n      algorithmExpression: sbtest${id % 5}\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\nmasterSlaveRules:\n    ds_0:\n      masterDataSourceName: ds_master_0\n      slaveDataSourceNames:\n        - ds_master_0_slave_0\n      loadBalanceAlgorithmType: ROUND_ROBIN\n      configMap:\n        master-slave-key0: master-slave-value0\n    ds_1:\n      masterDataSourceName: ds_master_1\n      slaveDataSourceNames:\n        - ds_master_1_slave_0\n      loadBalanceAlgorithmType: ROUND_ROBIN\n      configMap:\n        master-slave-key0: master-slave-value0\n    ds_2:\n      masterDataSourceName: ds_master_2\n      slaveDataSourceNames:\n        - ds_master_2_slave_0\n      loadBalanceAlgorithmType: ROUND_ROBIN\n      configMap:\n        master-slave-key0: master-slave-value0\n. > It looks like your config file is correct.\n\nCloud you describe how does this exception occur and what is the stack trace of exception?\n\njava\nprotected void auth(final ChannelHandlerContext context, final ByteBuf message) {\n        try (MySQLPacketPayload payload = new MySQLPacketPayload(message)) {\n            HandshakeResponse41Packet response41 = new HandshakeResponse41Packet(payload);\n            if (authenticationHandler.login(response41.getUsername(), response41.getAuthResponse())) {\n                if (!Strings.isNullOrEmpty(response41.getDatabase()) && !GlobalRegistry.getInstance().schemaExists(response41.getDatabase())) {\n                    context.writeAndFlush(new ErrPacket(response41.getSequenceId() + 1, ServerErrorCode.ER_BAD_DB_ERROR, response41.getDatabase()));\n                    return;\n                }\n                setCurrentSchema(response41.getDatabase());\n                context.writeAndFlush(new OKPacket(response41.getSequenceId() + 1));\n            } else {\n                // TODO localhost should replace to real ip address\n                context.writeAndFlush(new ErrPacket(response41.getSequenceId() + 1,\n                        ServerErrorCode.ER_ACCESS_DENIED_ERROR, response41.getUsername(), \"localhost\", 0 == response41.getAuthResponse().length ? \"NO\" : \"YES\"));\n            }\n        }\n    }\ni debug the sharding-proxy, the line context.writeAndFlush(new OKPacket(response41.getSequenceId() + 1)); has been executed, but i still get that error and no other exceptions return. . > any more details?\ni means download resource code, debug in my pc. \nauthenticationHandler.login(response41.getUsername(), response41.getAuthResponse()) is true and !Strings.isNullOrEmpty(response41.getDatabase()) && !GlobalRegistry.getInstance().schemaExists(response41.getDatabase()) is false, and context.writeAndFlush(new OKPacket(response41.getSequenceId() + 1)); also executed. I think it should be OK, but mysql workbench still get error \n\"Failed to Connect to MySQL at 127.0.0.1:3307 with user root\nUnknown database 'sharding_db'\"\n\n. > Hi, any update on this issue?\n\nMy Mysql workbench version is 6.2 in ubuntu, it cannot connect, and i use Nativate for mysql is ok. I guess branch 3.0.0 is not incompatible with this mysql workbench.. ",
    "Super-Alan": "Project:Sharding-Proxy 3.0.0\nExpected behavior: when inserting data \uff0c Sharding-proxy can  create a unique id automatically \nActual behavior:  sql error: ERROR 1264 (22001)\nWhen I use jpa with Sharding-proxy ,find this problem,but  I also have tried to insert by mysql-client ,it's still not working\nconfig-sharding code: https://coding.net/u/Super-Alan/p/saga-transaction/git/blob/ms-tcc-zuul/config-sharding.yaml\ncreate database sql: https://coding.net/u/Super-Alan/p/saga-transaction/git/blob/ms-tcc-zuul/order/src/main/resources/order-sharding.sql\nhttps://coding.net/u/Super-Alan/p/saga-transaction/git/blob/ms-tcc-zuul/order/src/main/resources/order-sharding1.sql. config-sharding.yaml\n`\n\n\nHere you can configure the rules for the proxy.\nThis example is configuration of sharding rule.\n\nIf you want to use sharding, please refer to this file;\nif you want to use master-slave, please refer to the config-master_slave.yaml.\n\n\nschemaName: order\ndataSources:\n  ds_0:\n    url: jdbc:mysql://172.27.0.6:13306/ds_0?serverTimezone=UTC&useSSL=false\n    username: root\n    password: alan\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 50\n  ds_1:\n    url: jdbc:mysql://172.27.0.6:13307/ds_1?serverTimezone=UTC&useSSL=false\n    username: root\n    password: alan\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 50\nshardingRule:\n  tables:\n    tbl_order:\n      actualDataNodes: ds_${0..1}.tbl_order_${0..1}\n      tableStrategy:\n        inline:\n          shardingColumn: order_id\n          algorithmExpression: tbl_order_${order_id % 2}\n      keyGeneratorColumnName: order_id\n    tbl_order_item:\n      actualDataNodes: ds_${0..1}.tbl_order_item_${0..1}\n      tableStrategy:\n        inline:\n          shardingColumn: order_id\n          algorithmExpression: tbl_order_item_${order_id % 2}\n      keyGeneratorColumnName: item_id\n  bindingTables:\n    - tbl_order,tbl_order_item\n  defaultDatabaseStrategy:\n    inline:\n      shardingColumn: customer_id\n      algorithmExpression: ds_${customer_id % 2}\n  defaultTableStrategy:\n    none:\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\n. SQL:\nSET FOREIGN_KEY_CHECKS = 0;\ncreate DATABASE  ds_0  charset 'utf8';\ncreate table ds_0.tbl_order_0\n(\n  order_id int auto_increment\n    primary key,\n  actual_pay decimal(19,2) null,\n  created_date datetime null,\n  customer_id int null,\n  mobile varchar(255) null,\n  pay_date datetime null,\n  sum decimal(19,2) null,\n  user_name varchar(255) null,\n  user_remain bigint null\n)\n;\ncreate table ds_0.tbl_order_1\n(\n  order_id int auto_increment\n    primary key,\n  actual_pay decimal(19,2) null,\n  created_date datetime null,\n  customer_id int null,\n  mobile varchar(255) null,\n  pay_date datetime null,\n  sum decimal(19,2) null,\n  user_name varchar(255) null,\n  user_remain bigint null\n)\n;\ncreate table ds_0.tbl_order_item_0\n(\n  item_id int auto_increment\n    primary key,\n  image_url varchar(255) null,\n  number int not null,\n  product_id int not null,\n  product_name varchar(255) null,\n  sku_id int not null,\n  spec varchar(255) null,\n  order_id int not null,\n  constraint FKmkqpajkg6p2wq4owcv1v08pc5\n  foreign key (order_id) references ds_0.tbl_order_0 (order_id)\n)\n;\ncreate table ds_0.tbl_order_item_1\n(\n  item_id int auto_increment\n    primary key,\n  image_url varchar(255) null,\n  number int not null,\n  product_id int not null,\n  product_name varchar(255) null,\n  sku_id int not null,\n  spec varchar(255) null,\n  order_id int not null,\n  constraint FKmkqpajkg6p2wq4owcv1v08pc6\n  foreign key (order_id) references ds_0.tbl_order_1 (order_id)\n)\n;\ncreate index FKmkqpajkg6p2wq4owcv1v08pc5\n  on ds_0.tbl_order_item_0 (order_id)\n;\ncreate index FKmkqpajkg6p2wq4owcv1v08pc6\n  on ds_0.tbl_order_item_1 (order_id)\n;\nSET FOREIGN_KEY_CHECKS = 1;`. ",
    "maruixiang": "I suggest -> \n // add a new method \n public static HintManager getInstance(boolean autoClose) {\n        HintManager result = new HintManager(autoClose);\n        HintManagerHolder.setHintManager(result);\n        return result;\n    }\nAbstractConnectionAdapter.close judge \n  if autoClose   HintManagerHolder.clear();\n  ....... ",
    "deanbutcher89": "On Nov 11, 2018 8:25 AM, \"\u5f20\u4eae\" notifications@github.com wrote:\nHi, can you explain why submit this pull request?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sharding-sphere/sharding-sphere/pull/1461#issuecomment-437674449,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Aq29MiIMy-G4bv_kjmKf4guybedR0B16ks5uuDNKgaJpZM4YYZk5\n.\n. On Sun, Nov 11, 2018 at 9:21 AM Dean Rogers deanrogers6289@gmail.com\nwrote:\n\nOn Nov 11, 2018 8:25 AM, \"\u5f20\u4eae\" notifications@github.com wrote:\nHi, can you explain why submit this pull request?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sharding-sphere/sharding-sphere/pull/1461#issuecomment-437674449,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Aq29MiIMy-G4bv_kjmKf4guybedR0B16ks5uuDNKgaJpZM4YYZk5\n.\n. https://github.com/sharding-shttps://github.com/sharding-sphere/sharding-sphere/pull/1461/commits/c6fdb261cd15ba935cf9e3a76b0e1f8406810415phere/sharding-sphere/pull/1461/commits/461be9328e0ba43a1d02425e749fb018f5349731\n\nOn Sun, Nov 11, 2018 at 9:26 AM Dean Rogers deanrogers6289@gmail.com\nwrote:\n\nOn Sun, Nov 11, 2018 at 9:21 AM Dean Rogers deanrogers6289@gmail.com\nwrote:\n\nOn Nov 11, 2018 8:25 AM, \"\u5f20\u4eae\" notifications@github.com wrote:\nHi, can you explain why submit this pull request?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sharding-sphere/sharding-sphere/pull/1461#issuecomment-437674449,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Aq29MiIMy-G4bv_kjmKf4guybedR0B16ks5uuDNKgaJpZM4YYZk5\n.\n. \n\n",
    "llg-software": "This place is recommended to be changed to the 3.0.0.M1 version.\n```java\n@NoArgsConstructor(access = AccessLevel.PRIVATE)\npublic final class HintManager implements AutoCloseable {\nprivate final Map<ShardingKey, ShardingValue> databaseShardingValues = new HashMap<>();\n\nprivate final Map<ShardingKey, ShardingValue> tableShardingValues = new HashMap<>();\n\n@Getter\nprivate boolean shardingHint;\n\n@Getter\nprivate boolean masterRouteOnly;\n\n@Getter\nprivate boolean databaseShardingOnly;\n\n```. ",
    "xusheng1987": "\u56fd\u4eba\u5f00\u53d1\u7684\u9879\u76ee\u53ea\u5141\u8bb8\u7528\u82f1\u6587\u3002\u3002\u3002. ",
    "LuckyJokers": "\nFor English only, other languages will not accept.\n\nI have updated the problem ,please reopen it,thank you.. ",
    "80631004": "11-15 07:11:46.134 INFO  [Sharding-Sphere-SQL] - Actual SQL: apos_order_2 ::: update pos_salesh_2 set salesmancode2=null,salesmancode1=null,shardingdb='2_2',roundamt=0.0,custgradeid=null,cashiercode='1001',payamt=45.0,voidsalesby=null,salesmanname2=null,salesmanname1=null,createdby='1e63529ef8f54f3ebf66cdbd5b8f8094',returnsalesid=null,custgradecode=null,postype='M',changeamt=0.0,costamt=40.2,posid='01',salesdate='2018-11-14',custid=null,custbalance=0.0,cashierid='1e63529ef8f54f3ebf66cdbd5b8f8094',ttldiscbyid=null,voidsalestime=null,custgradename=null,status='1',ttldiscamt=0.0,birthday=null,ttldiscbyname=null,serialnum='181114010195',ttlpointvalue=0.0,salesmonth='2018-11',retailamt=45.0,salesamt=45.0,remark='',salestime='2018-11-14 22:14:49',voidsalesid=null,salestype='S',salesmanid2=null,salesmanid1=null,ttldiscbycode=null,vipdiscamt=0.0,salesno='S181114221449010197',custcode=null,salesyear='2018',salesqty=1.0,beforettlpoint=0.0,autosalesremind=0,discountamt=0.0,custphone=null,voidsalesno=null,fullmarkdownno=null,isupload=0,fullmarkdownamt=0.0,createdtime='2018-11-14 22:14:49',cashiername='\u7ba1\u7406\u5458',returnsalesno=null,fullmarkdownname=null,isdelete=0,custname=null where  ShardingDB='2_2' and id='b9bf5613c42e4a9381908ee789df40b3';update pos_salesh set salesmancode2=null,salesmancode1=null,shardingdb='2_2',roundamt=0.0,custgradeid=null,cashiercode='1001',payamt=45.0,voidsalesby=null,salesmanname2=null,salesmanname1=null,createdby='1e63529ef8f54f3ebf66cdbd5b8f8094',returnsalesid=null,custgradecode=null,postype='M',changeamt=0.0,costamt=40.2,posid='01',salesdate='2018-11-14',custid=null,custbalance=0.0,cashierid='1e63529ef8f54f3ebf66cdbd5b8f8094',ttldiscbyid=null,voidsalestime=null,custgradename=null,status='1',ttldiscamt=0.0,birthday=null,ttldiscbyname=null,serialnum='181114010195',ttlpointvalue=0.0,salesmonth='2018-11',retailamt=45.0,salesamt=45.0,remark='',salestime='2018-11-14 22:14:49',voidsalesid=null,salestype='S',salesmanid2=null,salesmanid1=null,ttldiscbycode=null,vipdiscamt=0.0,salesno='S181114221449010198',custcode=null,salesyear='2018',salesqty=1.0,beforettlpoint=0.0,autosalesremind=0,discountamt=0.0,custphone=null,voidsalesno=null,fullmarkdownno=null,isupload=0,fullmarkdownamt=0.0,createdtime='2018-11-14 22:14:49',cashiername='\u7ba1\u7406\u5458',returnsalesno=null,fullmarkdownname=null,isdelete=0,custname=null where  ShardingDB='2_2' and id='b9bf5613c42e4a9381908ee789df40b8';\nseems from second update sql2,it is not sharding. ",
    "cheerlxd": "\nPlease show your Strategy before and after completely.\n\nthanks your advice, it's same result on 3.0.0, the Strategy code before and after like\n`\npublic final class TimeShardingAlgorithm implements ComplexKeysShardingAlgorithm {\n   /** the old Strategy  */\n@Override\npublic Collection<String> doSharding(Collection<String> availableTargetNames,\n        Collection<ShardingValue> shardingValues) {\n    List<String> timeValues = AlgorithmUtil.getShardingValue(shardingValues, \"time\");\n    List<String> shardingSuffix = new ArrayList<>();\n    // like 20180101\n    for (String time : timeValues) {\n        Integer day = Integer.parseInt(time.substring(6));\n        String suffix = day.toString();\n        for (String targetName : availableTargetNames) {\n            if (targetName.endsWith(\"_\" + suffix)) {\n                shardingSuffix.add(targetName);\n            }\n        }\n    }\n    return shardingSuffix;\n}\n\n    /**   the new Strategy    */\n@Override\npublic Collection<String> doSharding(Collection<String> availableTargetNames,\n        Collection<ShardingValue> shardingValues) {\n    List<String> timeValues = AlgorithmUtil.getShardingValue(shardingValues, \"time\");\n    List<String> shardingSuffix = new ArrayList<>();\n    // like 20180101\n    for (String time : timeValues) {\n        Integer day = Integer.parseInt(time.substring(6));\n        // may get  1 2 3 4\n        day = day / 10 + 1; \n                    // convert to 1 2 3\n        day = day > 3 ? 3 : day;\n        String suffix = day.toString();\n        for (String targetName : availableTargetNames) {\n            if (targetName.endsWith(\"_\" + suffix)) {\n                shardingSuffix.add(targetName);\n            }\n        }\n    }\n    return shardingSuffix;\n}\n\n}\n`\n. > 1. Can you show me the config file completely, you may hide ip address, etc.\nthanks your advice\nI create a new simple project on weekend, and try different strategy on query, results consistent with expectations\nhttps://github.com/cheerlxd/sharding-jdbc-demo\nby the way, i found i use mysql reserved words time. > Not yet\uff0cproxy don't have mysql local file, so we don't want support this feature now\nthank you very much. > Hello @cheerlxd.\n\nI'm so sorry for this problem.\nThe API for Spring namespace xsd for Sharding and Master-slave has changed in 3.0.0. You can check in release lists or ISSUE #1203. And the document has not been updated in time.\nIf you want to use the master-slave related function, you can download the master branch of sharding-sphere-example repo and run first.\nThe master-slave example is in\nsharding-jdbc-example\n    |- spring-namespace-nodep-example\n       |- spring-namespace-nodep-mybatis-example\n\nthank you, I try it. I get right result by using \"the master branch of sharding-sphere-example\" demo config, \nlike this (version should >= 3.0.0M3 )\n`\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n\n<bean id=\"demo_ds_master_0\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n    <property name=\"url\" value=\"jdbc:mysql://localhost:3306/demo_ds_master\"/>\n    <property name=\"username\" value=\"root\"/>\n    <property name=\"password\" value=\"123456\"/>\n</bean>\n\n<bean id=\"demo_ds_master_0_slave_0\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n    <property name=\"url\" value=\"jdbc:mysql://localhost:3306/demo_ds_slave_0\"/>\n    <property name=\"username\" value=\"root\"/>\n    <property name=\"password\" value=\"123456\"/>\n</bean>\n\n<bean id=\"demo_ds_master_0_slave_1\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n    <property name=\"url\" value=\"jdbc:mysql://localhost:3306/demo_ds_slave_1\"/>\n    <property name=\"username\" value=\"root\"/>\n    <property name=\"password\" value=\"123456\"/>\n</bean>\n\n<bean id=\"randomStrategy\" class=\"io.shardingsphere.api.algorithm.masterslave.RandomMasterSlaveLoadBalanceAlgorithm\" />\n<sharding:none-strategy id=\"noSharding\"/>\n\n<sharding:data-source id=\"shardingDataSource\">\n    <sharding:sharding-rule data-source-names=\"demo_ds_master_0,demo_ds_master_0_slave_0,demo_ds_master_0_slave_1\">\n\n        <!--config master and slave -->\n        <sharding:master-slave-rules>\n            <sharding:master-slave-rule id=\"demo_ds_ms_0\" master-data-source-name=\"demo_ds_master_0\"\n                                        slave-data-source-names=\"demo_ds_master_0_slave_0, demo_ds_master_0_slave_1\"\n                                        strategy-ref=\"randomStrategy\"/>\n        </sharding:master-slave-rules>\n\n        <!--config sharding rule -->\n        <sharding:table-rules>\n            <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"demo_ds_ms_0.t_order_${0..1}\"\n                                 database-strategy-ref=\"noSharding\" table-strategy-ref=\"orderTableStrategy\"/>\n        </sharding:table-rules>\n    </sharding:sharding-rule>\n</sharding:data-source>\n\n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <property name=\"dataSource\" ref=\"shardingDataSource\" />\n</bean>\n<tx:annotation-driven />\n\n<bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n    <property name=\"dataSource\" ref=\"shardingDataSource\"/>\n    <property name=\"mapperLocations\" value=\"classpath*:META-INF/mappers/*.xml\"/>\n</bean>\n\n<bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n    <property name=\"basePackage\" value=\"io.shardingsphere.example.repository.mybatis.repository\"/>\n    <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n</bean>\n\n\n`\n. ",
    "1610200527": "\u5355\u5e93\u5355\u8868\uff0c\u5176\u4ed6\u8868\u5355\u5e93\u5206\u8868\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7\u63d2\u4ef6\u8fdb\u884c\u672a\u5206\u8868\u6570\u636e\u6279\u91cf\u63d2\u5165\u65f6\uff0c\u63d0\u793a\u67d0\u5b57\u6bb5\u4e0d\u5b58\u5728\uff0cSQL\u6b63\u786e\uff0c\u5e93\u4e2d\u5b57\u6bb5\u5b58\u5728\uff0c\u53ef\u7528\u6253\u5370\u51fa\u7684SQL\uff0c\u901a\u8fc7mysql\u63d2\u5165\u6210\u529f\uff0c\u672a\u5f15\u5165\u63d2\u4ef6\u65f6\uff0c\u5747\u53ef\u6b63\u5e38\u63d2\u5165\u6570\u636e\u3002. \u4e2d\u56fd\u4eba\uff0c\u641e\u6bdb\u7ebf\u82f1\u6587\uff0c2B. > For English only, other languages will not accept.\n\u4e2d\u56fd\u4eba\u641e\u6bdb\u7ebf\u82f1\u6587. sorry,I use version 3.0.0 for sharding-jdbc. Sorry\uff0cI have solved this problem\uff01I create datasource by springboot- jdbc useings type is druid and set this datasource into sharding-jdbc datasource\u3002like this:\nspring:\ndatasource:\nname: dev\nurl: jdbc:mysql://192.168.101.5:3306/xx?characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=true\nusername: root\npassword: root\n\u4f7f\u7528druid\u6570\u636e\u6e90\ndriver-class-name: com.mysql.jdbc.Driver\ntype: com.alibaba.druid.pool.DruidDataSource\n============================================================================\ndruid configuration\n============================================================================\ndruid:\ninitial-size: 5\nmin-idle: 5\nmax-active: 30\nmax-wait: 60000\ntime-between-eviction-runs-millis: 60000\nmin-evictable-idle-time-millis: 300000\nmax-pool-prepared-statement-per-connection-size: 20\nvalidation-query: SELECT 'x'\ntest-while-idle: true\ntest-on-borrow: false\ntest-on-return: false\npool-prepared-statements: false\nfilters: stat, slf4j\nfilter:\nstat:\nlog-slow-sql: true\nslow-sql-millis: 10000\nslf4j:\nresult-set-log-enabled: false\nstatement-executable-sql-log-enable: false\nstat-view-servlet:\nenabled: true\nreset-enable: true\nurl-pattern: /druid/*\nlogin-username: xx\nlogin-password: xxxxx. This is dataSourceConfig class\n@Configuration\n@MapperScan(basePackages = \"xx.xx.xx.dao.main\",sqlSessionTemplateRef = \"mainSqlSessionTemplate\")\npublic class MainDataSourceConfig {\n@Autowired\n    private DruidSourceConfig druidSourceConfig;\n@Bean(name = \"mainTransactionManager\")\n@Primary\npublic DataSourceTransactionManager setTransactionManager(@Qualifier(\"mainDataSource\") DataSource dataSource) {\n    DataSourceTransactionManager dataSourceTransactionManager = new DataSourceTransactionManager(dataSource);\n    return dataSourceTransactionManager;\n}\n\n@Bean(name = \"mainSqlSessionFactory\")\npublic SqlSessionFactory setSqlSessionFactory(@Qualifier(\"mainDataSource\") DataSource dataSource) throws Exception {\n    SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n    bean.setDataSource(dataSource);\n    try{\n        bean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(\"classpath:mybatis/mapper/main/*.xml\"));\n    }catch (Exception ex){\n        LoggerHelper.error(this.getClass(),ex.getMessage(),ex);\n    }\n    return bean.getObject();\n}\n\n@Bean(name = \"mainSqlSessionTemplate\")\npublic SqlSessionTemplate setSqlSessionTemplate(@Qualifier(\"mainSqlSessionFactory\") SqlSessionFactory sqlSessionFactory) throws Exception {\n    SqlSessionTemplate sqlSessionTemplate = new SqlSessionTemplate(sqlSessionFactory);\n    return sqlSessionTemplate;\n}\n\n@Bean(name=\"mainDataSource\")\npublic DataSource buildDataSource() {\n    DataSource dataSource = null;\n    try{\n        Map<String, DataSource> dataSourceMap = new HashMap<>(1);\n        dataSourceMap.put(\"default\", druidSourceConfig.getDruidSource());\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n        shardingRuleConfig.getTableRuleConfigs().add(getTempPhotoTableRuleConfiguration());\n        shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\n        Properties properties = new Properties();\n        properties.setProperty(\"sql.show\",\"false\");\n        dataSource = ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, new ConcurrentHashMap(), properties);\n\n    }catch (Exception ex){\n        LoggerHelper.error(MainDataSourceConfig.class, \"\u521b\u5efa\u6570\u636e\u5e93\u94fe\u63a5\u5931\u8d25\uff01\", ex);\n    }\n    return dataSource;\n}\n\nTableRuleConfiguration getTempPhotoTableRuleConfiguration() {\n    TableRuleConfiguration result = new TableRuleConfiguration();\n    result.setLogicTable(\"temp_photo\");\n    result.setActualDataNodes(\"default.temp_photo_${0..9}\");\n    result.setTableShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"temp_id\", new ModuleTableShardingAlgorithm()));\n    DefaultKeyGenerator defaultKeyGenerator = new DefaultKeyGenerator();\n    defaultKeyGenerator.setWorkerId(druidSourceConfig.getWorkId());\n    result.setKeyGenerator(defaultKeyGenerator);\n    result.setKeyGeneratorColumnName(\"photo_id\");\n    return result;\n}\n\n}. This is create table sql,we sharding 10 tables,from 0 to 9.\nDROP TABLE IF EXISTS temp_photo_0;\nCREATE TABLE temp_photo_0 (\n  photo_id bigint(20) NOT NULL,\n  temp_id varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,\n  temp_a varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL,\n  temp_b varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL\n  PRIMARY KEY (photo_id),\n  KEY temp_photo_index (temp_id,temp_a) USING BTREE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\nSET FOREIGN_KEY_CHECKS = 1;. This is service class,include transaction infomation.\n@Service\npublic class TempServiceImpl implements TempService {\n@Autowired\nprivate TempInfoMapper tempInfoMapper;\n\n@Autowired\nprivate TempPhotoMapper tempPhotoMapper;\n\n@Autowired\nprivate KafkaProducerService kafkaProducerService;\n\n@Value(\"${spring.kafka.temp.sync.topic:test-topic}\")\nprivate String topic;\n\n@Transactional(rollbackFor = Exception.class)\n@Override\npublic void saveInfo(TempImportData tempImportData) {\n    this.tempInfoMapper.insert(tempImportData);\n    this.tempPhotoMapper.insertPhotos(tempImportData.getPhotoList());\n    TempInfo tempInfo = new TempInfo();\n    // \u53d1\u9001\u6d88\u606f\u5230kafka\n    BeanUtils.copyProperties(tempImportData, tempInfo);\n    syncTempToKafka(tempInfo, tempImportData.getPhotoList());\n}\n\n@Transactional(rollbackFor = Exception.class)\n@Override\npublic void editInfo(tempImportData tempImportData, String temp_a) {\n    this.delInfo(tempImportData, temp_a);\n    this.saveInfo(tempImportData);\n}\n\n@Transactional(rollbackFor = Exception.class)\n@Override\npublic void delInfo(TmepImportData tempImportData, String temp_a) {\n    this.tempInfoMapper.deleteById(tempImportData.getId(), temp_a);\n    this.tempPhotoMapper.deleteById(tempImportData.getId(), temp_a);\n}\n\n@Override\npublic void syncTempToKafka(TempInfo tempInfo, List<TempPhoto> photoList) {\n    .....\n}\n\n}\n. I think caused deadlock maybe is because of sending message to Kafka is slow that the lock timed out?. Thank you reply problem,Today,I canceling the Kafka message and test ,did't discover problems,i will continue test,feedback after finding problems.\n. \u4f60insert\u7684\u65f6\u5019\uff0c\u628a\u4e3b\u952e\u90fd\u5e72\u6389\u5462\uff0c\u914d\u7f6e\u9ed8\u8ba4\u7684generate-key-column-name\uff0c\u4eb2\u6d4b\uff0c\u53ef\u7528\uff0c\u4f46\u4f60\u5f97\u5199\u6210\u4e00\u4e2a\u670d\u52a1\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u91cd\u590d\uff0c\u4eca\u5929\u521a\u8e29\u5230\u5751\uff0c\u5475\u5475\u4e86\uff01. ",
    "avalon566": "i am interested in resolving this issue.but it doesn't seem that the dev branch can support the datetime range sharding strategy,i need to finish this task first?. a column in table define as decimal(25,20) and store value 0.when i select that column,it returns 0E-20,mysql driver can not parse it.. thanks,i will resolve these problem and create a new pr.. Test SQL:select * from t_order limit 10,10\njava.lang.NumberFormatException: For input string: \"10,10\"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Integer.parseInt(Integer.java:580)\n    at java.math.BigInteger.<init>(BigInteger.java:470)\n    at org.apache.shardingsphere.core.util.NumberUtil.getExactlyNumber(NumberUtil.java:72)\n    at org.apache.shardingsphere.core.parsing.antlr.extractor.impl.dql.LimitExtractor.createLimitValueSegment(LimitExtractor.java:69)\n    at org.apache.shardingsphere.core.parsing.antlr.extractor.impl.dql.LimitExtractor.extract(LimitExtractor.java:49)\n    at org.apache.shardingsphere.core.parsing.antlr.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:44)\n    at org.apache.shardingsphere.core.parsing.antlr.AntlrParsingEngine.parse(AntlrParsingEngine.java:60)\n    at org.apache.shardingsphere.core.parsing.SQLParsingEngine.parse(SQLParsingEngine.java:68)\n    at org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.parse(ParsingSQLRouter.java:82)\n    at org.apache.shardingsphere.core.routing.StatementRoutingEngine.route(StatementRoutingEngine.java:54)\n    at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.doShardingRoute(StatementExecutorWrapper.java:72)\n    at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.route(StatementExecutorWrapper.java:55)\n    at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:78)\n    at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\n    at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.query.MySQLComQueryPacket.execute(MySQLComQueryPacket.java:90)\n    at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:119)\n    at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:104)\n    at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n    at java.lang.Thread.run(Thread.java:748). thx,testing is normal now. ",
    "leishb": "\nDo not support case when now, please read document to find some information first\n\n\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4f4e\u7248\u672c1.4.1\u662f\u53ef\u4ee5\u7684\uff0c\u5347\u7ea7\u52303.0.0\u4e4b\u540e\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002\u662f\u53bb\u6389\u8fd9\u4e2a\u529f\u80fd\u4e86\u5417\uff1f. ",
    "yangchuanan": "thanks for your answer, I found the problem in my program, the problem is the sql statement not use alias ,\nselect order_id,user_id from t_order where ...\nit should be:\nselect order_id as orderId, user_id as userId\nthank you very much again!. ",
    "offSwitch": "Which version of Sharding-Sphere did you use?\n3.0.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nsharding-jdbc\nExpected behavior\ninsert into ds0 t_order0  success\nActual behavior\nthrow Exception, no table route info\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nExample codes for reproduce this issue (such as a github link)..",
    "zj974185723": "\n\u4f60insert\u7684\u65f6\u5019\uff0c\u628a\u4e3b\u952e\u90fd\u5e72\u6389\u5462\uff0c\u914d\u7f6e\u9ed8\u8ba4\u7684generate-key-column-name\uff0c\u4eb2\u6d4b\uff0c\u53ef\u7528\uff0c\u4f46\u4f60\u5f97\u5199\u6210\u4e00\u4e2a\u670d\u52a1\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u91cd\u590d\uff0c\u4eca\u5929\u521a\u8e29\u5230\u5751\uff0c\u5475\u5475\u4e86\uff01\n\n\u6ca1\u6709xml\u6587\u4ef6\uff0c\u90fd\u662f\u52a8\u6001\u751f\u6210\u653e\u5728\u7f13\u5b58\u91cc\u9762\uff0c\u96be\u53d7\u554a. ",
    "DaveRoey": "you can write the stratety by yourself.. ",
    "dozer47528": "I tested it in python, which has the same issue.\npython\ndb = MySQLdb.connect(\"127.0.0.1\", \"root\", \"\", \"test\")\ncursor = db.cursor()\ncursor.execute(\"SELECT * FROM binary_test\")\ndata = cursor.fetchone()\nprint data\ndb.close()\nExpected behavior\n('X\\x9d\\xf7PA\\xc0A\\xba\\xad\\x9e1\\x0f\\x8d\\x99\\rt',)\nActual behavior\n('[B@b16d465',)\n. in TextResultSetRowPacket\njava\n    @Override\n    public void write(final MySQLPacketPayload payload) {\n        for (Object each : data) {\n            if (null == each) {\n                payload.writeInt1(NULL);\n            } else {\n                payload.writeStringLenenc(each.toString());\n            }\n        }\n    }\nThis method will convert the byte[] to \"[B@b16d465\", That's why I got the error result.. I investigated the source code of Java MySQL JDBC.\nThere are two types, one is the MySQL Type, another one is the JDBC type.\nMySQL Type means how MySQL store the data.\nJDBC type means how JDBC process the data.\nMySQL type BINARY will be mapped to JDBC type CHAR, but this is a special type of string. Which should encode and decode by the users. MySQL Docs\ncom/mysql/jdbc/ResultSetImpl.java line 4516\n```java\n            case Types.CHAR:\n            case Types.VARCHAR:\n                if (!field.isOpaqueBinary()) {\n                    return getString(columnIndex);\n                }\n            return getBytes(columnIndex);\n\n```\ncom/mysql/jdbc/Field.java line 705\n```java\n    boolean isOpaqueBinary() throws SQLException {\n    //\n    // Detect CHAR(n) CHARACTER SET BINARY which is a synonym for fixed-length binary types\n    //\n\n    if (this.collationIndex == CharsetMapping.MYSQL_COLLATION_INDEX_binary && isBinary()\n            && (this.getMysqlType() == MysqlDefs.FIELD_TYPE_STRING || this.getMysqlType() == MysqlDefs.FIELD_TYPE_VAR_STRING)) {\n\n        if (this.originalTableNameLength == 0 && (this.connection != null && !this.connection.versionMeetsMinimum(5, 0, 25))) {\n            return false; // Probably from function\n        }\n\n        // Okay, queries resolved by temp tables also have this 'signature', check for that\n\n        return !isImplicitTemporaryTable();\n    }\n\n    return (this.connection.versionMeetsMinimum(4, 1, 0) && \"binary\".equalsIgnoreCase(getEncoding()));\n\n}\n\n```\nThat means Sharding-Proxy think this is CHAR, so send the data as String to user.\nActually this is a byte array in JDBC.\nWhat's more, Sharding-Proxy shouldn't try to convert JDBC type to MySQL type.\nFor example, in JDBC source code, both MysqlDefs.FIELD_TYPE_JSON and MysqlDefs.FIELD_TYPE_STRING will convert to Types.CHAR.\nIf Sharding-Proxy try to do that, the user will receive the wrong MySQL type.. For our MySQL use case, we will store UUID to BINARY(16)\nSo that's a huge issue for us.. @tuohai666 After investigating the source code, I found this pull request cannot fix this issue.\nIn my opinion, Sharding-Proxy shouldn't try to convert JDBC type to MySQL type. They are not a one-to-one mapping. Sharding-Proxy should keep the origin MySQL type from origin database.. @tuohai666 \nhttps://github.com/sharding-sphere/sharding-sphere/issues/1533\nRelated to this issue, there are two problems.\nCompare to connecting MySQL directly, when I using BINARY, the result and MySQL type were different.\nSo I investigated the source code of sharding-proxy, after fixing this line, the MySQL type will match.\nBut I don't know how to fix the different result problem.. Can not fix the problem by this way, will close this pull request.. ",
    "joooohnli": "INSERT & UPDATE statements still failed, while SELECT works well now.\nmysql> insert into test(name) values ('\\'');\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\nmysql> update test set name='\\'' where id=1;\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\nversion: 3.1.0.M1\n@terrymanu @codefairy08 . I'v tried config-yaml & inline-expression  and didn't find that kind of instruction.\nCould you please link the doc to me? Thanks. @terrymanu . I'v read all related issues and your explanation and I think it's a little arbitrary to mark them won't fix as I mentioned in the PS.. @tristaZero \nFor the first exception, actually za_blacklist_m and za_blacklist_s are different, one is master and the other is slave, I just hided the real ip in the post ^_^\nFor the second exception, I have an application responsible for reading and uploading that configuration to ZK by calling this code:\nYamlOrchestrationShardingDataSourceFactory.createDataSource(yamlFile);\nAfter running that code, my another projects referring that orchestration configuration will get the exception.. @tristaZero \nNot really, those exceptions are threw one by one under the exactly same situation (check the log time).\nAnd B instance is always running there, it's configuration get refreshed automatically since it subscribed the ZK. \nConfiguration of instance B:\nsharding.jdbc.config.orchestration.name= za_blacklist\nsharding.jdbc.config.orchestration.overwrite=false\nsharding.jdbc.config.orchestration.registry.namespace=sharding-jdbc-business\nsharding.jdbc.config.orchestration.registry.server-lists=xx:2181. Firstly, I think renewing datasource gracefully benifits more especially in production environment.\nIdeally, renewing datasource by this way will not lead to connection explosion, because the number of connections is related to sql query load, if the load keeps unchanged, the total connection number will keep unchanged since the new connections number increase while old connections number reduce.. > @joooohnli\n\n\nEven create new data source first, expect change data source configuration but do not lost any requests is impossible on the data source switch moment. Create new data source first just can reduce  unavailable service time.\nAvoid double costs for database connection is possible by current implementation. If databases serve for lots of applications, double costs cannot be accepted.\nConsider about to implementation a impeccable function, current implementation is better.\n\nHow do you think?\n@terrymanu \n\n\nActually it's possible, and Mycat is a good example.\nThere are no double connections. initiating new datasource just need to create minimum connection (normally 1), then while new connection number increases, old connection number reduces. Finally,  extra cost of connection per datasource = 1 * application_number, which is acceptable I think.\n. > > because the number of connections is related to sql query load, if the load keeps unchanged, the total connection number will keep unchanged since the new connections number increase while old connections number reduce.\nIt is incorrect, whether high or low query load, connection pool will hold connections. Create a new data source before close old data source should double cost of connections held by pool.\n\n\n\nThere are no double connections as I explained in my former comment, which has been proved in my production environment.. 1. Allow me take ShardingDataSource as an example:\n\nI think there will be no exceptions, if I'm wrong pls point it out according to this pic.\n\nThat is an extreme example and I can give another one: Based on current implementation, if creating new datasource takes 10 seconds, the application will be unavailable in that 10 seconds.. > 1. For the first picture, how to deal with insert, update and delete, we should not only consider about query. When user change configuration, the updated data still goto old data source, is it expected behavior? How does user to know the data persist into old database or new database?\n\nI do think it is expected behavior, because we have set a timeout to close old executeService and physical datasources, which is predictable. And we are not going to control the exact switching timing,  we neither can not make it by using current sharding-jdbc version.\nBesides, except modifying datasource ip, there are many other scenes that would trigger a DataSourceChangedEvent, such as modify datasource account, queryTimeout, maxActive etc. In these scenes it does not matter if the data is persisted into old or new database.\n. > what's mean for predictable? still insert data to old data source? how to estimate how long to insert data to old data source?\nAgain, we have set a timeout to close old executeService and physical datasources. If it can not be done, an exception will be thrown of course.\n\nI don't think we should guess user's behavior\n\nI did not guess, I do list sceneries. Adjusting datasource properties is common in production environment, do you agree. \nMy conclusion\nThis pr fixes issue of OrchestrationDataSource renewing, it's much suitable for someone if your deployed application number is less than hundred.\n. No it's not a problem. I just request if an optimization or option can be considered:\nmetadata of sharding tables that belongs to a same logic table can be loaded only one time because they are supposed to have same table structure\n. Maybe I didn't explain it clearly. let me put it in this way:\nLogic table t binds sharding tablest_${0..99}. while loading metadata, we hope just to load metadata of t_1, and set that metadata to rest sharding tables t_${1..99}.\n. @daizf but it will still be load 100 times, so it does not help save time.. @terrymanu #1688 does not fix my issues.\nTime is mainly consumed on metadata loading, not checking.\nBased on #1688, the behavior will be like this: metadata of t_1 will be loaded 100 times. it does not save time at all.. No, it has not been fixed yet. I've checked the newest dev branch, this issue still exists. @terrymanu . This sql is executed on a single node because that table is an ordinary table. I think it is supposed to work correctly. @terrymanu . @terrymanu \n\nSkip complex SQL parsing is not good way to solve the issue, the better solution is make complex SQL parsing accurate.\nSo we prefer make great efforts on SQL parsing, but not skip them on some special situation.\n\nI've reported some issues related to this topic, and you just marked them won't fix. So could you please let us know what your plan is. Current version has so many problems to parse single node sql correctly.\n. #2017 #2018 #2059 sqls in these issues are all single node routing and supposed to be sent to physical datasource to be executed, but actually failed because of wrong sql parsing.\nHow about changing back to Druid SQL parsing, which could make sure SQL compatibility as much as possible. @terrymanu . ",
    "solid210": "I submitted the pull request by choosing branch to branch, but this way is not good. \nBecause after I merging code from upstream to the branch, github checks my code changing in the branch and adds the codes that are changed in the pull request automatically.\nI close this pull request and will submit a new pull request by choosing commit id, this way will not affects me merging code.. First, in Netty, channel is completely asynchronous. One IO thread group can process thousands of channels' IO event. So there is not need for frontend's channels and backend's channels use different IO thread group, because one can do this enough.\nSecond, about case 2 of #1429, to reduce unnecessary thread switches. An inbound message is passed from a channel of frontend to a channel of backend will in the same IO thread, vice versa, if SQL result needn't to be merged. These IO threads will be contained in the thread pool which is combined of this PR. (I will submit another PR to implement the logic)\nThanks!. It's a good idea to use ShardingExecuteEngine, I will follow the suggestion.. Replace commandExecutorService with CommandExecutorContext which one likes BackendExecutorContext.. ",
    "bigLeon": "\n\n1.chinese elemet   Tai Ji :It represents Chinese philosophy.\n2.Sphere is the meaning of circle:\n3.S meaning of sharding sphere. ",
    "Quiter2013": "\n\n\n. ",
    "woshibigsail": "\n\n\n\n. ",
    "wuwansen": "\n. \n. \n. \n. ",
    "jessica-ccc": "\n. \n. \n. ",
    "tcmtang": "\n\n1\u3001logo\u7531\u4e24\u7247\u53f6\u5b50\u7ec4\u6210\uff0c\u5b83\u4eec\u7684\u8f6e\u5ed3\u6784\u6210S\u5f62\u72b6\uff1b\n2\u3001\u53f3\u8fb9\u7684\u53f6\u5b50\u8272\u8c03\u4e3aApache\u7fbd\u6bdb\u8272\u8c03\uff1b\n3\u3001logo\u5916\u7f18\u4e3a\u5706\u7403\u72b6\uff1b\n4\u3001\u5b57\u4f53\u7ed9\u4eba\u8212\u670d\u611f\uff0c\u6709\u8fa8\u6790\u5ea6\uff1b\n\u89e3\u6790\uff1a\n\u4e24\u7247\u53f6\u5b50\u6709\u5206\u7247\u7684\u610f\u601d\uff1bS\u4e3b\u8981\u6807\u8bb0\u4fdd\u7559\uff1b\u53f6\u72b6\u4e30\u6ee1\u7531\u5916\u5706\u73af\u7ed5\uff0c\u8868\u793a\u751f\u6001\u5708\u5065\u5eb7\u8302\u76db\u3002\n\u5907\u6ce8\uff1a\n\u7ebf\u6761\u5f62\u51c6\u8fd8\u9700\u8981\u8c03\u6574\uff0c\u5148\u628a\u8fd9\u4e2a\u6982\u5ff5\u653e\u51fa\u6765\uff0c\u6b22\u8fce\u63a2\u8ba8\n. \n\n\n\u5c1d\u8bd5\u505a\u7684\u51e0\u4e2a\u4e00\u5e76\u4f20\u4e0a\u6765. ",
    "slnc87": "\nWhich version of Sharding-Sphere did you use?\n3.0.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nSharding-JDBC\nExpected behavior\n17:58:26.596 INFO io.shardingsphere.core.util.SQLLogger 71 log - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=user_collect, alias=Optional.absent())]), conditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=d_login_name, tableName=user_collect), operator=EQUAL, positionValueMap={}, positionIndexMap={0=0})])])), sqlTokens=[TableToken(skippedSchemaNameLength=0, originalLiterals=user_collect)], parametersIndex=3))\n17:58:26.598 INFO io.shardingsphere.core.util.SQLLogger 71 log - Actual SQL: ui_ds_6 ::: UPDATE user_collect\nSET d_content_name = CASE d_content_id\n```\n          WHEN ? THEN ?\n      WHEN ? THEN ?\n\n  END,\n  `d_cpid` = CASE `d_content_id`\n\n      WHEN ? THEN ?\n\n      WHEN ? THEN ?\n\n  END,\n  `d_src` = CASE `d_content_id`\n\n      WHEN ? THEN ?\n\n      WHEN ? THEN ?\n\n  END,\n  `d_platform` = CASE `d_content_id`\n\n      WHEN ? THEN ?\n\n      WHEN ? THEN ?\n\n  END,\n  `d_service_type` = CASE `d_content_id`\n\n      WHEN ? THEN ?\n\n      WHEN ? THEN ?\n\n  END\n\nWHERE d_login_name = ? and d_content_id in\n   (\n      ?\n   , \n      ?\n   ) ::: [[ceshi1, \u6d4b\u8bd51, ceshi2, \u6d4b\u8bd52, ceshi1, \u6d4b\u8bd51, ceshi2, \u6d4b\u8bd52, ceshi1, xingye, ceshi2, xingye, ceshi1, 2, ceshi2, 2, ceshi1, \u6d4b\u8bd52, ceshi2, \u6d4b\u8bd52, HGZS10@ITVP, ceshi1, ceshi2]]\n```\nTue Dec 04 17:58:26 CST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\n17:58:28.259 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger 159 debug - <== Updates: 0\nActual behavior\nio.shardingsphere.core.parsing.parser.context.condition.Condition\n/\n Get condition values.\n\n @param parameters parameters\n @return condition values\n*/\npublic List getConditionValues(final List parameters) {\nList result = new LinkedList<>(positionValueMap.values()); for (Entry entry : positionIndexMap.entrySet()) { Object parameter = parameters.get(entry.getValue()); if (!(parameter instanceof Comparable)) {\nthrow new ShardingException(\"Parameter %s should extends Comparable for sharding value.\", parameter);\n}\nif (entry.getKey() < result.size()) {\nresult.add(entry.getKey(), (Comparable) parameter); } else { result.add((Comparable) parameter);\n}\n}\nreturn result;\n}\nIn this Case:Object parameter = parameters.get(entry.getValue()); entry.getValue() is 0 but parameters's length is 23,So ShardingConditions will get the wrong route value\u3002\nReason analyze (If you can)\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\n\n. ",
    "799983050": "Update operations also have this problem. Select operations also have this problem. For example, my sharding strategy is single-db multi-table\u3002There are now two tables, order and user\uff0corder tables is configured in  application-sharding-tables.xml sharding\uff0cThe user table has no configuration\u3002 So I am executing select * from user where id = XXX, can I judge whether the user table has no Shared configuration, skip ss parsing and go directly to the target library to execute SQL\u3002\n        Multiple db and multiple tables can optionally configure a default execution library to execute SQL for non-sharding tables.Because the non-sharding table will only be in one library. parsing SQL,Resolve the table name first, and if the table is not in the configuration, jump out of the ss other steps. I'm sorry, but I just wanted to raise the question.Because I need to create a data source for non-sharding tables,I cannot guarantee Transaction problem. I want ss to manage Transaction problem uniformly.. ",
    "lvai125": "proxy is not support \"explain\" command???????. ",
    "JpressProjects": "@tristaZero hi,  i use VARCHAR datatype in my application  and custom ShardingStrategyConfiguration for databases and tables with sharding-jdbc 2.x\uff0cbut now, i have no solution to update sharding-jdbc 2.x to sharding-sphere 3.x. @tristaZero thank u very much, i hava no any comment.. ",
    "fifadxj": "fix it by changing AbstractShardingPreparedStatementAdapter.java with below code\n`/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.shardingjdbc.jdbc.adapter;\nimport io.shardingsphere.core.exception.ShardingException;\nimport io.shardingsphere.shardingjdbc.jdbc.adapter.invocation.SetParameterMethodInvocation;\nimport io.shardingsphere.shardingjdbc.jdbc.unsupported.AbstractUnsupportedOperationPreparedStatement;\nimport lombok.Getter;\nimport lombok.SneakyThrows;\nimport java.io.InputStream;\nimport java.io.Reader;\nimport java.math.BigDecimal;\nimport java.net.URL;\nimport java.sql.;\nimport java.sql.Date;\nimport java.util.;\n/\n * Sharding adapter for {@code PreparedStatement}.\n \n * @author zhangliang\n * @author maxiaoguang\n /\npublic abstract class AbstractShardingPreparedStatementAdapter extends AbstractUnsupportedOperationPreparedStatement {\nprivate final List<SetParameterMethodInvocation> setParameterMethodInvocations = new LinkedList<>();\n\n@Getter\nprivate final List<Object> parameters = new ArrayList<>();\n\n@Override\npublic final void setNull(final int parameterIndex, final int sqlType) throws SQLException {\n    setParameter(parameterIndex, null);\n    recordSetParameterForNull(new Class[]{int.class, int.class}, parameterIndex, sqlType);\n}\n\n@Override\npublic final void setNull(final int parameterIndex, final int sqlType, final String typeName) throws SQLException {\n    setParameter(parameterIndex, null);\n    recordSetParameterForNull(new Class[]{int.class, int.class, String.class}, parameterIndex, sqlType, typeName);\n}\n\n@Override\npublic final void setBoolean(final int parameterIndex, final boolean x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBoolean\", new Class[]{int.class, boolean.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setByte(final int parameterIndex, final byte x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setByte\", new Class[]{int.class, byte.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setShort(final int parameterIndex, final short x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setShort\", new Class[]{int.class, short.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setInt(final int parameterIndex, final int x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setInt\", new Class[]{int.class, int.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setLong(final int parameterIndex, final long x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setLong\", new Class[]{int.class, long.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setFloat(final int parameterIndex, final float x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setFloat\", new Class[]{int.class, float.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setDouble(final int parameterIndex, final double x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setDouble\", new Class[]{int.class, double.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setString(final int parameterIndex, final String x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setString\", new Class[]{int.class, String.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setBigDecimal(final int parameterIndex, final BigDecimal x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBigDecimal\", new Class[]{int.class, BigDecimal.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setDate(final int parameterIndex, final Date x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setDate\", new Class[]{int.class, Date.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setDate(final int parameterIndex, final Date x, final Calendar cal) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setDate\", new Class[]{int.class, Date.class, Calendar.class}, parameterIndex, x, cal);\n}\n\n@Override\npublic final void setTime(final int parameterIndex, final Time x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setTime\", new Class[]{int.class, Time.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setTime(final int parameterIndex, final Time x, final Calendar cal) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setTime\", new Class[]{int.class, Time.class, Calendar.class}, parameterIndex, x, cal);\n}\n\n@Override\npublic final void setTimestamp(final int parameterIndex, final Timestamp x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setTimestamp\", new Class[]{int.class, Timestamp.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setTimestamp(final int parameterIndex, final Timestamp x, final Calendar cal) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setTimestamp\", new Class[]{int.class, Timestamp.class, Calendar.class}, parameterIndex, x, cal);\n}\n\n@Override\npublic final void setBytes(final int parameterIndex, final byte[] x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBytes\", new Class[]{int.class, byte[].class}, parameterIndex, x);\n}\n\n@Override\npublic final void setBlob(final int parameterIndex, final Blob x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBlob\", new Class[]{int.class, Blob.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setBlob(final int parameterIndex, final InputStream x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBlob\", new Class[]{int.class, InputStream.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setBlob(final int parameterIndex, final InputStream x, final long length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBlob\", new Class[]{int.class, InputStream.class, long.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setClob(final int parameterIndex, final Clob x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setClob\", new Class[]{int.class, Clob.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setClob(final int parameterIndex, final Reader x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setClob\", new Class[]{int.class, Reader.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setClob(final int parameterIndex, final Reader x, final long length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setClob\", new Class[]{int.class, Reader.class, long.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setAsciiStream(final int parameterIndex, final InputStream x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setAsciiStream\", new Class[]{int.class, InputStream.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setAsciiStream(final int parameterIndex, final InputStream x, final int length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setAsciiStream\", new Class[]{int.class, InputStream.class, int.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setAsciiStream(final int parameterIndex, final InputStream x, final long length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setAsciiStream\", new Class[]{int.class, InputStream.class, long.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setUnicodeStream(final int parameterIndex, final InputStream x, final int length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setUnicodeStream\", new Class[]{int.class, InputStream.class, int.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setBinaryStream(final int parameterIndex, final InputStream x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBinaryStream\", new Class[]{int.class, InputStream.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setBinaryStream(final int parameterIndex, final InputStream x, final int length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBinaryStream\", new Class[]{int.class, InputStream.class, int.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setBinaryStream(final int parameterIndex, final InputStream x, final long length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setBinaryStream\", new Class[]{int.class, InputStream.class, long.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setCharacterStream(final int parameterIndex, final Reader x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setCharacterStream\", new Class[]{int.class, Reader.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setCharacterStream(final int parameterIndex, final Reader x, final int length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setCharacterStream\", new Class[]{int.class, Reader.class, int.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setCharacterStream(final int parameterIndex, final Reader x, final long length) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setCharacterStream\", new Class[]{int.class, Reader.class, long.class}, parameterIndex, x, length);\n}\n\n@Override\npublic final void setURL(final int parameterIndex, final URL x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setURL\", new Class[]{int.class, URL.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setSQLXML(final int parameterIndex, final SQLXML x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setSQLXML\", new Class[]{int.class, SQLXML.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setObject(final int parameterIndex, final Object x) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setObject\", new Class[]{int.class, Object.class}, parameterIndex, x);\n}\n\n@Override\npublic final void setObject(final int parameterIndex, final Object x, final int targetSqlType) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setObject\", new Class[]{int.class, Object.class, int.class}, parameterIndex,  x, targetSqlType);\n}\n\n@Override\npublic final void setObject(final int parameterIndex, final Object x, final int targetSqlType, final int scaleOrLength) throws SQLException {\n    setParameter(parameterIndex, x);\n    recordSetParameter(\"setObject\", new Class[]{int.class, Object.class, int.class, int.class}, parameterIndex, x, targetSqlType, scaleOrLength);\n}\n\nprivate void setParameter(final int parameterIndex, final Object value) {\n    if (parameters.size() == parameterIndex - 1) {\n        parameters.add(value);\n        return;\n    }\n    for (int i = parameters.size(); i <= parameterIndex - 1; i++) {\n        parameters.add(null);\n    }\n    parameters.set(parameterIndex - 1, value);\n}\n\nprivate void recordSetParameter(final String methodName, final Class[] argumentTypes, final Object... arguments) {\n    try {\n        setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(methodName, argumentTypes), arguments, arguments[1]));\n    } catch (final NoSuchMethodException ex) {\n        throw new ShardingException(ex);\n    }\n}\n\nprivate void recordSetParameterForNull(final Class[] argumentTypes, final Object... arguments) {\n    try {\n        setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(\"setNull\", argumentTypes), arguments, null));\n    } catch (final NoSuchMethodException ex) {\n        throw new ShardingException(ex);\n    }\n}\n\nprotected final void replaySetParameter(final PreparedStatement preparedStatement, final List<Object> parameters) {\n    //setParameterMethodInvocations.clear();\n    addParameters(parameters);\n    for (SetParameterMethodInvocation each : setParameterMethodInvocations) {\n        updateParameterValues(each, parameters.get(each.getIndex() - 1));\n        each.invoke(preparedStatement);\n    }\n}\n\nprivate void addParameters(final List<Object> parameters) {\n    for (int i = setParameterMethodInvocations.size(); i < parameters.size(); i++) {\n        setParameter(new Class[]{int.class, Object.class}, i + 1, parameters.get(i));\n    }\n}\n\n@SneakyThrows\nprivate void setParameter(final Class[] argumentTypes, final Object... arguments) {\n    setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(\"setObject\", argumentTypes), arguments, arguments[1]));\n}\n\n@Override\npublic final void clearParameters() {\n    parameters.clear();\n    setParameterMethodInvocations.clear();\n}\n\nprivate void updateParameterValues(final SetParameterMethodInvocation setParameterMethodInvocation, final Object value) {\n    if (!Objects.equals(setParameterMethodInvocation.getValue(), value)) {\n        setParameterMethodInvocation.changeValueArgument(value);\n    }\n}\n\n}\n`. > @fifadxj\n\n\nCan you show me the result of 'desc limit_request_0'? So that I can reproduce this exception.\nYou put all codes there, I can't find what you have modified. Can you point out the root cause to this exception?\nAnd put codes which only you modified.\n\n\nThe issue happens when using mybatis to insert text/clob column with below config.\n<result column=\"request_json\" property=\"requestJson\" jdbcType=\"LONGVARCHAR\" /> \ncheck org.apache.ibatis.type.ClobTypeHandler\npublic void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n      throws SQLException {\n    StringReader reader = new StringReader(parameter);\n    ps.setCharacterStream(i, reader, parameter.length());\n  }\nIt will call PreparedStatement.setCharacterStream() which take Reader as argument type.\nBut in AbstractShardingPreparedStatementAdapter, for all setXXX(), it always calls PreparedStatement.setObject() which does not accept Reader as argument. \nThe solution, if you check the code I pasted above, for all setXXX(), it will call underlying PreparedStatement's setXXX() instead of setObject(), so it solves the problem.\nPS: changing mybatis mapper configuration to  jdbcType=\"VARCHAR\" may also solve the problem. My fix is just to make ShardingSphere support more methods in java.sql.PreparedStatement.. > > > @fifadxj\n\n\n\n\nCan you show me the result of 'desc limit_request_0'? So that I can reproduce this exception.\nYou put all codes there, I can't find what you have modified. Can you point out the root cause to this exception?\nAnd put codes which only you modified.\n\n\nThe issue happens when using mybatis to insert text/clob column with below config.\n<result column=\"request_json\" property=\"requestJson\" jdbcType=\"LONGVARCHAR\" />\ncheck org.apache.ibatis.type.ClobTypeHandler\npublic void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType) throws SQLException { StringReader reader = new StringReader(parameter); ps.setCharacterStream(i, reader, parameter.length()); }\nIt will call PreparedStatement.setCharacterStream() which take Reader as argument type.\nBut in AbstractShardingPreparedStatementAdapter, for all setXXX(), it always calls PreparedStatement.setObject() which does not accept Reader as argument.\nThe solution, if you check the code I pasted above, for all setXXX(), it will call underlying PreparedStatement's setXXX() instead of setObject(), so it solves the problem.\nPS: changing mybatis mapper configuration to jdbcType=\"VARCHAR\" may also solve the problem. My fix is just to make ShardingSphere support more methods in java.sql.PreparedStatement.\n\n@fifadxj\n\nThanks for your comments. Have you tested your solution?\nSome one met the same Exception which had been proofed not cause by Sharding-Sphere. Can you test in the same scenario without Sharing-Sphere?\nI heard the raw JDBC have the same problem. If so, we should not change the SS code.\n   btw, please reply using 1,2,3... corresponding my 1,2,3..., thanks.\n\n\n\nyes, it works.\nwithout sharding-sphere it also works.\nI dont think raw JDBC have this problem. Where did you get that, can you give the link?. @tuohai666 I've made pull request 1583. \n",
    "reforgit": "@fifadxj \nalso met the same problem. follow your modification code i can solve it.\ni tried to minimize the modification (only aim at Reader.class, seem like hard-coding):\n// AbstractShardingPreparedStatementAdapter.java\n/ old code:\n@SneakyThrows\n    private void setParameter(final Class[] argumentTypes, final Object... arguments) {\n        setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(\"setObject\", argumentTypes), arguments, arguments[1]));\n    }\n/\n// new code:\n@SneakyThrows\n    private void setParameter(final Class[] argumentTypes, final Object... arguments) {\n        boolean findStringReader = false;\n        if (arguments != null && arguments.length >= 2 && arguments[1] instanceof Reader) {\n            findStringReader = true;\n        }\n        if (findStringReader) {\n            Class[] tmpArgumentTypes = new Class[argumentTypes.length];\n            for (int i = 0; i < argumentTypes.length; i++) {\n                if (i == 1) {\n                    tmpArgumentTypes[i] = Reader.class;\n                } else {\n                    tmpArgumentTypes[i] = argumentTypes[i];\n                }\n            }\n            setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(\"setCharacterStream\", tmpArgumentTypes), arguments, arguments[1]));\n        } else {\n            setParameterMethodInvocations.add(new SetParameterMethodInvocation(PreparedStatement.class.getMethod(\"setObject\", argumentTypes), arguments, arguments[1]));\n        }\n    }\n. ",
    "lycying": "\nThis is because unexpected duplicated RoutingResult cause isSingleRouting=false.\nIf isSingleRouting=false, the rewriting procedure will be triggered.\nTo solve this problem, we need to get the correct isSingleRouting value.\n\n+1. ",
    "posuixukong76": "\nThis is because unexpected duplicated RoutingResult cause isSingleRouting=false.\nIf isSingleRouting=false, the rewriting procedure will be triggered.\nTo solve this problem, we need to get the correct isSingleRouting value.\nAfter investigation, this will not happen in 3.0.1.SNAPSHOT.\nBut another problem appeared. Please refer to #1643\nAll will be fixed in next release. Thanks.\n\nthanks for your help~. ",
    "2YSP": "2018-12-17 16:19:17.741 DEBUG [main][SqlSessionUtils][getSqlSession] -  Creating a new SqlSession\n2018-12-17 16:19:17.745 DEBUG [main][SqlSessionUtils][registerSessionHolder] -  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39e91bda] was not registered for synchronization because synchronization is not active\n2018-12-17 16:19:17.767 DEBUG [main][DataSourceUtils][doGetConnection] -  Fetching JDBC Connection from DataSource\n2018-12-17 16:19:17.773 DEBUG [main][SpringManagedTransaction][openConnection] -  JDBC Connection [io.shardingsphere.shardingjdbc.jdbc.core.connection.ShardingConnection@106c3e0a] will not be managed by Spring\n2018-12-17 16:19:17.775 DEBUG [main][BaseJdbcLogger][debug] -  ==>  Preparing: select * from _park_pay_channel where park_code in \n2018-12-17 16:19:17.792 DEBUG [main][BaseJdbcLogger][debug] -  ==> Parameters: \n2018-12-17 16:19:17.821 DEBUG [main][SqlSessionUtils][closeSqlSession] -  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39e91bda]\n2018-12-17 16:19:17.822 DEBUG [main][DataSourceUtils][doReleaseConnection] -  Returning JDBC Connection to DataSource\n2018-12-17 16:19:17.826 DEBUG [main][DefaultCacheAwareContextLoaderDelegate][loadContext] -  Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]\n2018-12-17 16:19:17.826 DEBUG [main][DefaultContextCache][logStatistics] -  Spring test ApplicationContext cache statistics: [DefaultContextCache@334ac669 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]\n2018-12-17 16:19:17.826 DEBUG [main][DefaultCacheAwareContextLoaderDelegate][loadContext] -  Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]\n2018-12-17 16:19:17.827 DEBUG [main][DefaultContextCache][logStatistics] -  Spring test ApplicationContext cache statistics: [DefaultContextCache@334ac669 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]\n2018-12-17 16:19:17.828 DEBUG [main][DefaultCacheAwareContextLoaderDelegate][loadContext] -  Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]\n2018-12-17 16:19:17.828 DEBUG [main][DefaultContextCache][logStatistics] -  Spring test ApplicationContext cache statistics: [DefaultContextCache@334ac669 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]\n2018-12-17 16:19:17.830 DEBUG [main][DefaultCacheAwareContextLoaderDelegate][loadContext] -  Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]\n2018-12-17 16:19:17.830 DEBUG [main][DefaultContextCache][logStatistics] -  Spring test ApplicationContext cache statistics: [DefaultContextCache@334ac669 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]\n2018-12-17 16:19:17.830 DEBUG [main][AbstractBeanFactory][doGetBean] -  Returning cached instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoBeans'\n2018-12-17 16:19:17.830 DEBUG [main][AbstractDirtiesContextTestExecutionListener][beforeOrAfterTestMethod] -  After test method: context [DefaultTestContext@abf688e testClass = CashierServicesApplicationTests, testInstance = com.chinaroad.open.CashierServicesApplicationTests@4468ced2, testMethod = contextLoads@CashierServicesApplicationTests, testException = org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: io.shardingsphere.core.parsing.parser.exception.SQLParsingException: SQL syntax error, expected token is 'LEFT_PAREN', actual token is 'END', literals is ''.\nThe error may exist in class path resource [com/chinaroad/open/mapper/park/ParkPayChannelMapper.xml]\nThe error may involve com.chinaroad.open.dao.park.ParkPayChannelDao.selectListInParkCode-Inline\nThe error occurred while setting parameters\nSQL: select * from _park_pay_channel where park_code in\nCause: io.shardingsphere.core.parsing.parser.exception.SQLParsingException: SQL syntax error, expected token is 'LEFT_PAREN', actual token is 'END', literals is ''., mergedContextConfiguration = [WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].\n2018-12-17 16:19:17.836 DEBUG [main][ServletTestExecutionListener][afterTestMethod] -  Resetting RequestContextHolder for test context [DefaultTestContext@abf688e testClass = CashierServicesApplicationTests, testInstance = com.chinaroad.open.CashierServicesApplicationTests@4468ced2, testMethod = contextLoads@CashierServicesApplicationTests, testException = org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \nError querying database.  Cause: io.shardingsphere.core.parsing.parser.exception.SQLParsingException: SQL syntax error, expected token is 'LEFT_PAREN', actual token is 'END', literals is ''.\nThe error may exist in class path resource [com/chinaroad/open/mapper/park/ParkPayChannelMapper.xml]\nThe error may involve com.chinaroad.open.dao.park.ParkPayChannelDao.selectListInParkCode-Inline\nThe error occurred while setting parameters\nSQL: select * from _park_pay_channel where park_code in\nCause: io.shardingsphere.core.parsing.parser.exception.SQLParsingException: SQL syntax error, expected token is 'LEFT_PAREN', actual token is 'END', literals is ''., mergedContextConfiguration = [WebMergedContextConfiguration@478ee483 testClass = CashierServicesApplicationTests, locations = '{}', classes = '{class com.chinaroad.open.CashierServicesApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1a7288a3 key = [@org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.mybatis.spring.annotation.MapperScan(sqlSessionFactoryRef=, sqlSessionTemplateRef=, annotationClass=interface java.lang.annotation.Annotation, basePackageClasses=[], markerInterface=class java.lang.Class, nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.chinaroad.open.dao.cashier, com.chinaroad.open.dao.park], value=[], factoryBean=class org.mybatis.spring.mapper.MapperFactoryBean), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.context.annotation.Import(value=[class org.mybatis.spring.annotation.MapperScannerRegistrar])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7857fe2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3aa078fd, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@45385f75], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].\n. \u4e0d\u597d\u610f\u601d\uff0c\u662f\u8fd9\u4e2a\u5417\uff1f\njava\nMap<String, Object> configMap = new HashMap<>();\n        Properties props = new Properties();\n        props.put(ShardingPropertiesConstant.SQL_SHOW.getKey(),true);\n        return ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, configMap, props);. \n. ",
    "jie04baichi": "\u5206\u5e93\u952e\u662fuser_id\uff0c\u4f46\u662f\u7528\u65f6\u95f4\u67e5\u8be2\uff0csql\u8bed\u53e5\u6253\u5370\u51fa\u6765\uff0c\u5206\u522b\u67e5\u4e86\u56db\u4e2a\u8868\uff0csql\u8bed\u53e5\u4e5f\u6ca1\u6709\u95ee\u9898\u3002. \u4e14\u4e0b\u9762\u56db\u6761\u6570\u636e\u51fa\u73b0\u7684user_id\uff1a279023793651843070\uff0c\u8fd9\u4e2aid\u5728\u6570\u636e\u5e93\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\u3002. When password=\u201cpassword 1\u201d, the result only partially repeats\n\n.       3.0.0\n. Which version of Sharding-Sphere did you use?\nanswer\uff1a3.0.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\n Sharding-JDBC \nExpected behavior\nInsert 4 million pieces of data into the mysql database (mysql version 5.2.65), the data is completely inserted correctly. and Execute the query.\nActual behavior\n        UserInfoExample example = new UserInfoExample();\n        example.createCriteria().andPasswordEqualTo(\"password 0\");\n        example.setOrderByClause(\"create_time\");\n        List users = userInfoMapper.selectByExample(example);\nThe occurred above user_id duplicate problem , I confirmed that the database data is no problem. Only the results of the query appeared\u3002\n\nThen I changed the test code\uff1a\n    UserInfoExample example = new UserInfoExample();\n    example.createCriteria().andUserIdBetween(279023793651843071L, 279023793651843074L);\n    example.setOrderByClause(\"create_time\");\n    List<UserInfo> users = userInfoMapper.selectByExample(example);\n\nThe problem is still\uff0cAnd the result that user_id=279023793651843071L is not in the query range appears. But only part of the data has this problem,\n\nReason analyze (If you can)\nI really don't understand.  Because not all of these problems occur, the same execution statement,  different query conditions have no problems.\nExample I test query like this , is no problem \uff1a\n    UserInfoExample example = new UserInfoExample();\n    example.createCriteria().andPasswordEqualTo(\"password 555500\");\n    example.setOrderByClause(\"create_time\");\n    List<UserInfo> users = userInfoMapper.selectByExample(example);\n\nThis result is correct.\n\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\n    1.Insert 4 million pieces of data\n2.Generate mapper, model, mapper.xml using mybatis-generator\n\n3.sharding db rule \uff1a ds-$->{0..1}.user_info_$->{0..1}\uff1b sharding-table rule \uff1a user_info_$->{user_id % 4 /2}\n\n4.No exception\u3002\n\nExample codes for reproduce this issue (such as a github link).\nImitate sharding-jdbc-springboot-start to package my own springbootstart\n\nsharding-jdbc-db : https://gitee.com/vipmos/sharding-jdbc-db.git\n\ndemo springboot project\uff1a  https://gitee.com/vipmos/paas-demo.git  use application-sharding2.properties\n\n. > > And the following four data appear user_id: 279023793651843070, this id is not a record in the database\n\n\nThe result is that the user_id is duplicated, using the mybatis framework, please take the time to reply as soon as possible, thank you.\n\nAt first you say id is not a record in the database, then you say user_id is duplicated, what do you mean?\n\nIn two cases, one is that the user_id is duplicated, and the other is that there is no user_id in the database. Is this possibly a problem with the database cache? However, my knowledge is limited and I don't know the specific reasons..  =======================Sharding-JDBC transactions START =========================\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### ds-${user_id % 4 % 2}, columnName[user_id] value[279022748112519170], selected target = ds-0\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### ds-${user_id % 4 % 2}, columnName[user_id] value[279022748112519171], selected target = ds-1\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519170], selected target = user_info_1\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519171], selected target = user_info_1\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519172], selected target = user_info_0\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519173], selected target = user_info_0\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519170], selected target = user_info_1\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519171], selected target = user_info_1\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519172], selected target = user_info_0\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] c.plat.db.algorithm.InileRangAlgorithm   : ########### user_info_${user_id % 4 /2}, columnName[user_id] value[279022748112519173], selected target = user_info_0\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Rule Type: sharding\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Logic SQL: select\nuser_id, user_name, account, `password`, create_time\n\nfrom user_info\n\n\n WHERE (  user_id between ? and ? )\n\n\n\n  order by create_time\n\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=user_info, alias=Optional.absent())]), conditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=user_id, tableName=user_info), operator=BETWEEN, positionValueMap={}, positionIndexMap={0=0, 1=1})])])), sqlTokens=[TableToken(skippedSchemaNameLength=0, originalLiterals=user_info)], parametersIndex=2)), containStar=false, selectListLastPosition=84, groupByLastPosition=0, items=[CommonSelectItem(expression=password, alias=Optional.absent()), CommonSelectItem(expression=create_time, alias=Optional.absent()), CommonSelectItem(expression=user_id, alias=Optional.absent()), CommonSelectItem(expression=account, alias=Optional.absent()), CommonSelectItem(expression=user_name, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(create_time), orderDirection=ASC, nullOrderDirection=ASC, index=-1, alias=Optional.absent())], limit=null, subQueryStatement=null)\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Actual SQL: ds-0 ::: select\nuser_id, user_name, account, `password`, create_time\n\nfrom user_info_0\n\n\n WHERE (  user_id between ? and ? )\n\n\n\n  order by create_time ::: [[279022748112519170, 279022748112519174]]\n\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Actual SQL: ds-0 ::: select\nuser_id, user_name, account, `password`, create_time\n\nfrom user_info_1\n\n\n WHERE (  user_id between ? and ? )\n\n\n\n  order by create_time ::: [[279022748112519170, 279022748112519174]]\n\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Actual SQL: ds-1 ::: select\nuser_id, user_name, account, `password`, create_time\n\nfrom user_info_0\n\n\n WHERE (  user_id between ? and ? )\n\n\n\n  order by create_time ::: [[279022748112519170, 279022748112519174]]\n\n2018-12-11 15:08:15  INFO 27744 --- [nio-8082-exec-1] Sharding-Sphere-SQL                      : Actual SQL: ds-1 ::: select\nuser_id, user_name, account, `password`, create_time\n\nfrom user_info_1\n\n\n WHERE (  user_id between ? and ? )\n\n\n\n  order by create_time ::: [[279022748112519170, 279022748112519174]]\n\n=======================Sharding-JDBC transactions END =========================. This to mush \uff0cI am worried that it will not look good.. > Try to join wechat group\nwechat group \uff1f the ShardingSphere\u5b98\u5fae\u516c\u4f17\u53f7\uff1f. how to join \uff1f where hava le weixin qun number?. The problem is solved, it is actually the result of json conversion long integer caused by the return of the result, the accuracy is lost, thanks weixinqun\u3001\u3002. > hi\uff0cwe can adapter normal physical datasource to xa transactional datasource witin sharding datasource\uff0cso there is no need to change your original setting. also we can provide @sharding transactional and api to switch transaction type as you like. these feature will add in document later\nI am puzzled that sharding-jdbc 3.0.0 version now supports cross-database transactions, why need this xa transaction?*. ok\uff0cthanks\uff01. If the following xa dependencies are not incloud, the transaction is normally rolled back.\n    <dependency>\n        <groupId>io.shardingsphere</groupId>\n        <artifactId>sharding-transaction-2pc-xa</artifactId>\n        <version>${sharding-sphere.version}</version>\n    </dependency>\n\n. userInfoMapper is sharding, commonInfoMapper is not sharding. I found that only  commonInfoMapper  are not rolled back. \u662f\u8981\u6392\u9664(exclude = JtaAutoConfiguration.class)\uff0c \u8fd9\u4e2a\u4e1c\u897f. ",
    "JohnsonChenFuD": "\u591a\u4e2a\u6570\u636e\u6e90\uff0c\u6709\u7684\u6e90\u8981\u8fdb\u884c\u5206\u8868 \u6709\u7684\u6e90\u4e0d\u8fdb\u884c\u5206\u8868\uff0c\u8bbe\u7f6e\u5176\u4e2d\u4e00\u4e2a\u6570\u636e\u6e90A\uff0c\u8981\u5bf9B\u6e90\u4e2d\u7684\u975e\u5206\u8868\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\u5c31\u4f1a\u62a5\u9519\u4e86\u3002. ",
    "steveNash12": "@Repository\n@Mapper\npublic interface UserRoleMapper extends BaseMapper {\n    // \u5728@Select\u4e2d\u5b9a\u4e49\u66f4\u65b0\u6570\u636e\u5e93\u8bed\u53e5\n    @Select(\"INSERT INTO user_role(username, role_name) VALUES (#{userRole.username}, #{userRole.roleName})\")\n    Integer insertBySelect(@Param(\"userRole\") UserRole userRole);\n}\n\u4f60\u8981\u63d2\u5165\u6570\u636e\uff0c\u4f46\u662f\u7528\u7684 select  \u6ce8\u89e3\uff0c\u6539\u6210@insert \u5e94\u8be5\u5c31\u597d\u4e86\u3002\n\u6211\u4e5f\u6ca1\u6ce8\u610f update\u7684\u65f6\u5019\u5199\u6210\u4e86select\u3002. ",
    "Lzw2016": "Thank you very much\uff01. ",
    "fanyaoxuan": "\nWhat is your sharding rule?\n\noh\uff0cI forgot this\nsharding rule:\nsharding table: t_equip_online_time\nsharding colum\uff1a calendar\nimplement RangeShardingAlgorithm: by month\n6 databases: sharding0 ... sharding5\nEach database is divided into two months of data: sharding0.table6 sharding0:table12\nsharding1.table1 sharding1:table7. > should\nsorry,I discovered the problem yesterday.\nIf I use the date function, the sharding rule will fail.\n. I want to give you more details later.For reference.. ",
    "ralleman": "Thanks @terrymanu. Could you give me a specific example that I can work from? I can't find anything looking through the examples that matches the requirements.\nBasically I need to write a shard selector that receives the customer id from the query, performs a lookup of the allocated shared, then returns the shard id back for sharding-sphere to redirect the query.. Hi Terry. Given it's Christmas, I won't get to look at this until the new year I think.  I'll let you know if I work it out.. ",
    "zhanglei": "1.server.yaml\nprops:\n  max.connections.size.per.query: 128\n  acceptor.size: 64  # The default value is available processors count * 2.\n  executor.size: 64  # Infinite by default.\n  proxy.transaction.enabled: false\n  proxy.opentracing.enabled: false\n  sql.show: false\n\ndataSources\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 50\nsql\n\n. myload tool Batch write to sharding-proxy\uff0cuse insert into ....\uff0cprocess is waiting. sharding-proxy restart  can be resolved. Adjust maximumPoolSize and max.connections.size.per.query can be resolved. \n",
    "ittimeline": "font{\n    line-height: 1.6;\n}\nul,ol{\n    padding-left: 20px;\n    list-style-position: inside;\n}\n\n\n\nI didn't use the HintManager.setMasterRouteOnly() method correctly, as if I needed to call the hintManager.setMasterRouteOnly() method before I manipulate the database.I have written a few examples, you can look at the code in the attachment.\n\n\n\n\n\n\n\n\n\n\n\n\n                            ittimelinedotnet\n\n\n\n\n                                ittimelinedotnet@gmail.com\n\n\n\n\n\n\n\n\n    \u7b7e\u540d\u7531\n    \u7f51\u6613\u90ae\u7bb1\u5927\u5e08\n    \u5b9a\u5236\n\n\n\nOn 12/17/2018 17:20\uff0c\u5f20\u4eae<notifications@github.com> wrote\uff1a\n\nHi, can you explain the reason to close issue by yourself without any reason?\n\u2014You are receiving this because you modified the open/close state.Reply to this email diStartShardingJdbcApplicationTestrectly, view it on GitHub, or mute the thread.. ",
    "chinaTLJ": "If the user table is to be divided according to the 'userid' in the table, and the order table is to be divided according to the 'orderid' in the table, how do we write this requirement?. ",
    "a932846905": "orchestration:\n  name: orchestration_ds\n  overwrite: true\n  registry:\n    serverLists: 192.168.199.17:2181,192.168.199.18:2181,192.168.199.19:2181\n    namespace: orchestration\nauthentication:\n  username: root\n  password: \nprops:\n  proxy.transaction.enabled: true\n  proxy.opentracing.enabled: true\n  sql.show: true\n. how to set the system property io.shardingsphere.opentracing.tracer.class ?. I know now ,thanks\uff0ci have run it ok ,but i find a another problem about master-salve\uff1awhen i insert data into sharding-proxy by using mysql command line, thats works ok,  but i just find data in master database,  slave database is empty, and i input the command \"select * from \" on command line, just return \"Empty set\"\nthis is my config-XXX.yaml:\nschemaName: ylf\ndataSources:\n  ds0:\n    url: jdbc:mysql://192.168.199.36:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds0_slave0:\n    url: jdbc:mysql://192.168.199.37:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds0_slave1:\n    url: jdbc:mysql://192.168.199.38:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds1:\n    url: jdbc:mysql://192.168.199.51:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds1_slave0:\n    url: jdbc:mysql://192.168.199.52:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds1_slave1:\n    url: jdbc:mysql://192.168.199.53:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65 \n  ds2:\n    url: jdbc:mysql://192.168.199.54:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds2_slave0:\n    url: jdbc:mysql://192.168.199.55:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds2_slave1:\n    url: jdbc:mysql://192.168.199.56:3306/ylf\n    username: root\n    password: a6672196\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\nshardingRule:\n  tables:\n    tb_order:\n      actualDataNodes: ms_ds${0..2}.tb_order${0..2}\n      tableStrategy: \n        inline:\n          shardingColumn: order_id\n          algorithmExpression: tb_order${order_id % 3}\n      keyGeneratorColumnName: order_id\n  bindingTables:\n    - tb_order\n  defaultDatabaseStrategy:\n    inline:\n      shardingColumn: user_id\n      algorithmExpression: ms_ds${user_id % 3}\n  defaultTableStrategy:\n    none:\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\n  masterSlaveRules:\n    ms_ds0:\n      masterDataSourceName: ds0\n      slaveDataSourceNames:\n        - ds0_slave0\n        - ds0_slave1\n      loadBalanceAlgorithmType: ROUND_ROBIN\n    ms_ds1:\n      masterDataSourceName: ds1\n      slaveDataSourceNames:\n        - ds1_slave0\n        - ds1_slave1\n      loadBalanceAlgorithmType: ROUND_ROBIN\n    ms_ds2:\n      masterDataSourceName: ds2\n      slaveDataSourceNames:\n        - ds2_slave0\n        - ds2_slave1\n      loadBalanceAlgorithmType: ROUND_ROBIN\nthis is my command record:\n[root@WorkStation ~]# mysql -u root -h 192.168.199.57 -P 3307 -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2\nServer version: 5.6.0-Sharding-Proxy 3.0.0\nCopyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nmysql>minsert into tb_order (order_id,payment,payment_type,shipping_way,post_fee,status,user_id,create_time,update_time) values (78,'67.98',1,1,'19.00',2,38,NOW(),NOW());  \nERROR 1046 (3D000): No database selected\nmysql> use ylf;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\nDatabase changed\nmysql> insert into tb_order (order_id,payment,payment_type,shipping_way,post_fee,status,user_id,create_time,update_time) values (78,'67.98',1,1,'19.00',2,38,NOW(),NOW());\nQuery OK, 1 row affected (0.15 sec)\nmysql> select * from tb_order;\nEmpty set (0.22 sec)\nmysql> \n. I didn't configure master-slave replication and read-write separation. I thought that just configuring master-slave in sharding-proxy would do all this.\n. ",
    "murmuror": "\nHave you ever executed an SQL?\n\nnot executed any SQL. Yesterday I added health check to kubernetes Deployment configuration file and rebuilt pod. Then I executed SQL  and got the correct result set,  above warning log not longer printed. it looks work well.\nBut this morning I found pod restarted three times, log not show any exception.\n```\nkubectl get po sharding-proxy-5c67b9c56b-92qd2\nNAME                              READY     STATUS    RESTARTS   AGE\nsharding-proxy-5c67b9c56b-92qd2   1/1       Running   3          19h\n```\nkubernetes Deployment yaml\n``` yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sharding-proxy\nspec:\n  selector:\n    matchLabels:\n      app: sharding-proxy\n  template:\n    metadata:\n      labels:\n        app: sharding-proxy\n    spec:\n      containers:\n      - name: sharding-proxy\n        image: 192.168.0.132:5000/sharding-proxy\n        ports:\n        - containerPort: 3307\n        readinessProbe:\n          tcpSocket:\n            port: 3307\n          initialDelaySeconds: 5\n          periodSeconds: 10\n        livenessProbe:\n          tcpSocket:\n            port: 3307\n          initialDelaySeconds: 15\n          periodSeconds: 20\n        volumeMounts:\n        - name: config-volume\n          mountPath: /opt/sharding-proxy/conf\n      volumes:\n      - name: config-volume\n        configMap:\n          name: sharding-config  \n\nkind: Service \napiVersion: v1\nmetadata:\n  name: sharding-proxy-service\nspec:\n  selector:\n    app: sharding-proxy\n  ports:\n  - port: 3307\n    targetPort: 3307\n```\nsharding conf yaml\n``` yaml\nschemaName: test\ndataSources:\n  ds0: \n    url: jdbc:mysql://mysql-m1.default.svc.cluster.local:3306/test?characterEncoding=utf-8&useSSL=false\n    username: root\n    password: 123456\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\n  ds1:\n    url: jdbc:mysql://mysql-m2.default.svc.cluster.local:3306/test?characterEncoding=utf-8&useSSL=false\n    username: root\n    password: 123456\n    autoCommit: true\n    connectionTimeout: 30000\n    idleTimeout: 60000\n    maxLifetime: 1800000\n    maximumPoolSize: 65\nshardingRule:\n  tables:\n      student: \n        actualDataNodes: ds${0..1}.student\n      class: \n        actualDataNodes: ds${0..1}.class\nbindingTables:\n    - student,class\n  defaultDatabaseStrategy:\n    inline:\n      shardingColumn: id\n      algorithmExpression: ds${id % 2}\n  defaultTableStrategy:\n    none:\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\n. sharding-proxy process exits causes  the trigger health check mechanism and then restarted pod, health check only listen on 3307 portyaml\nreadinessProbe:\n    tcpSocket:\n       port: 3307\n    initialDelaySeconds: 5\n    periodSeconds: 10\nlivenessProbe:\n    tcpSocket:\n       port: 3307\n    initialDelaySeconds: 15\n    periodSeconds: 20 \n```. I limited pod memory to  1G.\nafter six hours, the java(sharding-proxy) process was killed.\nmemory leak \uff1f\nroot@sharding-proxy-69ccc67948-bbppf:/opt# ps -ef                                                                                                         \nUID        PID  PPID  C STIME TTY          TIME CMD\nroot         1     0  0 03:26 ?        00:00:00 /bin/sh -c /opt/sharding-proxy/bin/start.sh $PORT && tail -f /opt/sharding-proxy/logs/stdout.log\nroot        41     1  0 03:26 ?        00:00:00 tail -f /opt/sharding-proxy/logs/stdout.log\nroot      1160     0  0 07:57 ?        00:00:00 bash\nroot      1189  1160  0 08:10 ?        00:00:00 ps -ef\nroot@sharding-proxy-69ccc67948-bbppf:/opt# dmesg -T | grep \"(java)\"                                                                                       \n[Wed Dec 19 11:40:56 2018] Memory cgroup out of memory: Kill process 26049 (java) score 7 or sacrifice child\n[Wed Dec 19 11:40:56 2018] Killed process 26049 (java) total-vm:6968908kB, anon-rss:1032820kB, file-rss:17844kB\n[Wed Dec 19 16:38:52 2018] Memory cgroup out of memory: Kill process 16166 (java) score 7 or sacrifice child\n[Wed Dec 19 16:38:52 2018] Killed process 16166 (java) total-vm:6968908kB, anon-rss:1033144kB, file-rss:17672kB\n[Wed Dec 19 21:37:57 2018] Memory cgroup out of memory: Kill process 6459 (java) score 5 or sacrifice child\n[Wed Dec 19 21:37:57 2018] Killed process 6459 (java) total-vm:6968908kB, anon-rss:1030488kB, file-rss:17780kB\n[Thu Dec 20 02:36:26 2018] Memory cgroup out of memory: Kill process 29092 (java) score 5 or sacrifice child\n[Thu Dec 20 02:36:26 2018] Killed process 29092 (java) total-vm:6968908kB, anon-rss:1030136kB, file-rss:17828kB\n[Thu Dec 20 07:55:53 2018] Memory cgroup out of memory: Kill process 28531 (java) score 7 or sacrifice child\n[Thu Dec 20 07:55:53 2018] Killed process 28531 (java) total-vm:6752484kB, anon-rss:1032600kB, file-rss:17768kB. > How did you set the -Xmx for sharding-proxy?\nuse start.sh default setting\nJAVA_MEM_OPTS=\" -server -Xmx2g -Xms2g -Xmn1g -Xss256k -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=70 \"\nIs 2G memory required for the sharding-proxy?. ",
    "windyii": "It seems not to work in 3.1.0. We tested with a 2 instances cluster and Zookeeper for orchestration.\nSteps:\n1.  Run 2 instances with same config\n2.  Add a new schema in first sharding proxy and restart. New shema could be seen on zookeeper soon.\n3.  Connect to second proxy, run 'show databases', but no new schema. \nAny bug?. ",
    "ppj19891020": "\nFor the two test cases, what's the standard of pass or fail? I didn't find what you expect.\n\njudge standard is the test case whether to execute success.\nbelow the test cast is report NullPointerException error.\n@Test\n    public void testInline(){\n        Closure<?> closure = new InlineExpressionParser(\"ds${traceId%4}\").evaluateClosure();\n        Closure<?> result = closure.rehydrate(new Expando(), null, null);\n        result.setResolveStrategy(Closure.DELEGATE_ONLY);\n        PreciseShardingValue shardingValue = new PreciseShardingValue(\"push_message\",\"traceId\",342342);\n        result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());\n        System.out.println(\"--------:\"+result.call().toString());\n    }. note:\n1.shardshere version is 3.1.0.M1\n2.This table is not sharding \uff0cbut execute \n//ParsingSQLRouter.java  method:route\n      if (sqlStatement instanceof SelectStatement && null != ((SelectStatement) sqlStatement).getLimit()) {\n            processLimit(parameters, (SelectStatement) sqlStatement);\n       }\nI suggest not sharding table do not rewrite limit.. a moment ago\uff0cI use dev branch\uff08version\uff1a3.1.0-SNAPSHOT\uff09,junit test error.\nsee sql log limit 0, 2000\n2018-12-25 17:50:37.198  INFO 36149 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\n2018-12-25 17:50:37.198  INFO 36149 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@524023c8), containStar=false, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(databaseType=MySQL, offset=LimitValue(value=1000, index=2, boundOpened=false), rowCount=LimitValue(value=1000, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[])\n2018-12-25 17:50:37.199  INFO 36149 --- [           main] ShardingSphere-SQL                       : Actual SQL: ds0 ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_iphone, 2018-12-25 17:49:46.728, 0, 2000]]\n2018-12-25 17:50:47.605  INFO 36149 --- [TaskExecutor-13] c.d.p.push.support.RedisResourceLoader   : redis info memory - {used_memory_rss_human=68.21M, maxmemory_policy=noeviction, used_memory_human=67.88M, mem_allocator=jemalloc-4.0.3, mem_fragmentation_ratio=1.00, used_memory_lua_human=37.00K, used_memory=71174752, maxmemory=268435456, used_memory_lua=37888, used_memory_peak=80980128, used_memory_rss=71520256, maxmemory_human=256.00M, used_memory_peak_human=77.23M, total_system_memory_human=125.81G, total_system_memory=135085195264}\n2018-12-25 17:50:51.626  WARN 36149 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1146, SQLState: 42S02\n2\nRead the latest code\uff0cnot find uplated,please check  whether to merge code.\nboolean isSingleRouting = routingResult.isSingleRouting();\n        if (sqlStatement instanceof SelectStatement && null != ((SelectStatement) sqlStatement).getLimit()) {\n            processLimit(parameters, (SelectStatement) sqlStatement);\n        }\n. 1.test result fail.\n2.the sql is single table.\n3.version:3.1.0-SNAPSHOT\n4.sharding-jdbc. ```\n    @Test\n    public void testSelece(){\n        PageRequest pageRequest = new PageRequest(1, 1000);\n        userRepository.getWithoutUserIdListBy(\"appcode_idxyer_iphone\",new Date(),pageRequest);\n    }\n@Query(\"SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime < ?2\")\n List<UserPo> getWithoutUserIdListBy(String appName, Date date, Pageable pageable);\n\n```\nthe table is not sharding,so i expect limit 1000,1000,but sharding generate sql is 0,2000.\n. yes\uff0cbusiness code generate logical problems.\nthis answer should single routing sql will not rewrite limit\uff0cbut now single routing sql will rewrite limit.\n\nYou are right. In 3.1.0-SNAPSHOT, single routing sql will not rewrite limit.\n3.1.0-SNAPSHOT is on the dev branch now, would you like to build it and verify the change? (This is also a question, expect your answer please sir, whether you say yes or no.)\n\n. > OK. Can you debug 3.1.0-SNAPSHOT with breakpoint?\n\nParsingSQLRouter.java\nline: 130\nboolean isSingleRouting = routingResult.isSingleRouting();\nTo find out whether the SQL is sigle routed. If no, try to find the route result in routingResult(line: 128)\n\nisSingleRouting is true.\na moment ago,I found another problem,not sharding table do not route the default datasource.\nsharding config code:\n```\n   // \u914d\u7f6e\u771f\u5b9e\u6570\u636e\u6e90\n    Map dataSourceMap = new HashMap<>();\n    dataSourceMap.put(\"ds0\",sharding01DataSource());\n    dataSourceMap.put(\"ds1\",sharding02DataSource());\n    dataSourceMap.put(\"ds2\",sharding03DataSource());\n    dataSourceMap.put(\"ds3\",sharding04DataSource());\n    dataSourceMap.put(\"main\",moduleDataSource());\n// \u914d\u7f6eOrder\u8868\u89c4\u5219\nTableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();\norderTableRuleConfig.setLogicTable(\"push_message\");\norderTableRuleConfig.setActualDataNodes(\"ds${0..3}.push_message\");\n\n//\u5206\u5e03\u5f0f\u4e3b\u952e\norderTableRuleConfig.setKeyGeneratorColumnName(\"id\");\nShardingDefaultKeyGenerator shardingDefaultKeyGenerator = new ShardingDefaultKeyGenerator();\norderTableRuleConfig.setKeyGenerator(shardingDefaultKeyGenerator);\n\n// \u914d\u7f6e\u5206\u5e93\u7b56\u7565\norderTableRuleConfig.setDatabaseShardingStrategyConfig(\n        new InlineShardingStrategyConfiguration(\"traceid\", \"ds${traceid%4}\"));\n\n// \u914d\u7f6e\u5206\u7247\u89c4\u5219\nShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\nshardingRuleConfig.getTableRuleConfigs().add(orderTableRuleConfig);\nshardingRuleConfig.setDefaultDataSourceName(\"main\");//\u9ed8\u8ba4\u4e3b\u6570\u636e\u6e90\u914d\u7f6e\n\n```\ntest code\n@Test\n    public void testSelece(){\n        PageRequest pageRequest = new PageRequest(1, 1000);\n        List<UserPo> userPos = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_iphone\",new Date(),pageRequest);\n        log.info(\"size:\"+userPos.size());\n    }\nuserRepository\n@Query(\"SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime < ?2\")\n  List<UserPo> getWithoutUserIdListBy(String appName, Date date, Pageable pageable);\ndebug code:\n1. variable tableNames size is 0\n2. execute code: routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n3. route calcule,default use first element:  result.getTableUnits().getTableUnits().add(new TableUnit(shardingRule.getShardingDataSourceNames().getDataSourceNames().iterator().next()));\n```\nprivate RoutingResult route(final SQLStatement sqlStatement, final ShardingConditions shardingConditions) {\n        Collection tableNames = sqlStatement.getTables().getTableNames();\n        RoutingEngine routingEngine;\n        if (sqlStatement instanceof UseStatement) {\n            routingEngine = new IgnoreRoutingEngine();\n        } else if (shardingRule.isAllBroadcastTables(tableNames) && !(sqlStatement instanceof SelectStatement)) {\n            routingEngine = new DatabaseBroadcastRoutingEngine(shardingRule);\n        } else if (sqlStatement instanceof DDLStatement || (sqlStatement instanceof DCLStatement && ((DCLStatement) sqlStatement).isGrantForSingleTable())) {\n            routingEngine = new TableBroadcastRoutingEngine(shardingRule, sqlStatement);\n        } else if (sqlStatement instanceof ShowDatabasesStatement || ((sqlStatement instanceof ShowTablesStatement || sqlStatement instanceof ShowTableStatusStatement) && tableNames.isEmpty())\n                || sqlStatement instanceof SetParamStatement || sqlStatement instanceof ResetParamStatement) {\n            routingEngine = new DatabaseBroadcastRoutingEngine(shardingRule);\n        } else if (sqlStatement instanceof DCLStatement) {\n            routingEngine = new InstanceBroadcastRoutingEngine(shardingRule, shardingDataSourceMetaData);\n        } else if (shardingRule.isAllInDefaultDataSource(tableNames)) {\n            routingEngine = new DefaultDatabaseRoutingEngine(shardingRule, tableNames);\n        } else if (shardingConditions.isAlwaysFalse()) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (sqlStatement instanceof DALStatement) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (tableNames.isEmpty() && sqlStatement instanceof SelectStatement || shardingRule.isAllBroadcastTables(tableNames) && sqlStatement instanceof SelectStatement) {\n            routingEngine = new UnicastRoutingEngine(shardingRule, tableNames);\n        } else if (tableNames.isEmpty()) {\n            routingEngine = new DatabaseBroadcastRoutingEngine(shardingRule);\n        } else if (1 == tableNames.size() || shardingRule.isAllBindingTables(tableNames)) {\n            routingEngine = new StandardRoutingEngine(shardingRule, tableNames.iterator().next(), shardingConditions);\n        } else {\n            // TODO config for cartesian set\n            routingEngine = new ComplexRoutingEngine(shardingRule, tableNames, shardingConditions);\n        }\n        return routingEngine.route();\n```. ok,let me fix new problem.now test case still faild.. Reason analyze:\njpa code:\ndebug info:\nclass:Loader.java\nmethod:processResultSet\nthis rs.next() call two times,  result list size is two\uff0cfinally jpa throw error\uff1b\nrs\uff1aShardingResultSet   call    IteratorStreamMergedResult\nfor ( count = 0; count < maxRows && rs.next(); count++ ) {\n            if ( DEBUG_ENABLED ) {\n                LOG.debugf( \"Result set row: %s\", count );\n            }\n            Object result = getRowFromResultSet(\n                    rs,\n                    session,\n                    queryParameters,\n                    lockModesArray,\n                    optionalObjectKey,\n                    hydratedObjects,\n                    keys,\n                    returnProxies,\n                    forcedResultTransformer\n            );\n            results.add( result );\n            if ( createSubselects ) {\n                subselectResultKeys.add( keys );\n                keys = new EntityKey[entitySpan]; //can't reuse in this case\n            }\n        }\n. at last,config is error,now junt test success;. ",
    "tsfans": "same issue, but how to resolve it? wait for new version?. ",
    "xiangtao": "good. ",
    "binlaniua": "+1\uff0c for example\nsharding.jdbc.datasource.xx.url=${ENV_DS_URL}\nor\nds.url=xxx\nsharding.jdbc.datasource.xx.url=${ds.url}. ",
    "LX1993728": "I am using the 3.0.0 version of sharding-sphere.\nAnd I am using a project integrated with springboot+jpa+sharding-jdbc.\nShading-rule is shown in the issue above.\nMy expected behavior is to be able to query all order data. My Order entity class is as follows:\n```\n@Entity\n@Table(name = \"t_order\")\npublic class Orders implements Serializable {\n    public Orders() {\n    }\n    @Id\n    @Column(name = \"order_id\")\n//    @GeneratedValue(strategy = GenerationType.IDENTITY, generator = \"UserIdentityGenerator\")\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long orderId;\n@ManyToOne(targetEntity =User.class)\n@JoinColumn(name = \"user_id\")\nprivate User user;\n\n@OneToMany(cascade = CascadeType.ALL,fetch = FetchType.EAGER)\nprivate List<OrderItem> orderItems = new ArrayList<>();\n\n@Column\nprivate Double total; // \u603b\u91d1\u989d\n\n// setter and getter method\n    ......\nThe relevant code of my query order is as follows:\n@GetMapping(\"/range\")\n    public Object getOrdersByTotalRange(){\n        List list = em.createQuery(\"SELECT o FROM Orders o WHERE o.total BETWEEN 400.00 AND 2000.00\", Orders.class).getResultList();\n        logger.info(\"++++++++ {}++++++++\",list.size());\n        return list;\n    }\n@GetMapping(\"/count\")\npublic Object getCountOfOrder(){\n    TypedQuery<Orders> query = em.createQuery(\"SELECT o FROM Orders o \", Orders.class);\n\n    List<Orders> resultList=query.getResultList();\n    return resultList.size();\n}\n\n```\nThe above two methods will report the above mentioned exceptions. \nThe association table t_order_order_items will only be generated in the default data source. For example, if my default data source is ds0, only the ds0.t_order_order_items relational table will be generated, but when I query the orders logical table, it will be routed to ds1.t_order_order_items. How should I solve this problem?\n. The address of my Example codes is: https://github.com/LX1993728/sharding-jdbc-example.git\n After started application need init data :  http://localhost/init/data  . Sorry, there is no problem with initializing the data. But when I query, I will throw the exception mentioned above. Such as when querying order data\nhttp://localhost/order/range\nhttp://localhost/order/count\n. Thank you so much, I removed the foreign key constraints as you said and replaced them with new versions. But there was a new exception when adding data:\n```\n2018-12-28 11:17:21.852 ERROR 58248 --- [p-nio-80-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1; nested exception is org.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1] with root cause\norg.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1\n    at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:77) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1340) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1454) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:511) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3283) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2479) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:532) ~[spring-orm-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:746) ~[spring-tx-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:714) ~[spring-tx-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:533) ~[spring-tx-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:304) ~[spring-tx-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at liuxun.jpa.shard.controllers.TestInitController$$EnhancerBySpringCGLIB$$71772f6c.initData() ~[classes/:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_171]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_171]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_171]\n    at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_171]\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) ~[tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_171]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_171]\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.13.jar:9.0.13]\n    at java.lang.Thread.run(Thread.java:748) [na:1.8.0_171]\n**How can I solve it?**. Yes, after I update. Rerun and throw an exception when creating data. I debugged it and found that it should be wrong when inserting the broadcast table` t_order_order_items data`. It is said that it is expected to insert one but actually inserts multiple pieces. It is reasonable to insert data into the broadcast table. It should be inserted correctly. An exception should be thrown.\nHibernate: update t_order set total=?, user_id=? where order_id=?\nHibernate: insert into t_order_order_items (orders_order_id, order_items) values (?, ?)\n2018-12-28 12:31:17.822 ERROR 44380 --- [p-nio-80-exec-1] o.h.i.ExceptionMapperStandardImpl        : HHH000346: Error during managed flush [org.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1]\n2018-12-28 12:31:17.823  INFO 44380 --- [p-nio-80-exec-1] o.h.e.j.b.internal.AbstractBatchImpl     : HHH000010: On release of batch it still contained JDBC statements\n2018-12-28 12:31:17.841 ERROR 44380 --- [p-nio-80-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaSystemException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1; nested exception is org.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1] with root cause\norg.hibernate.jdbc.BatchedTooManyRowsAffectedException: Batch update returned unexpected row count from update [0]; actual row count: 3; expected: 1\n    at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:77) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1340) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1454) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:511) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3283) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2479) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n    at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n```\n. I submitted the modified code.\nAsk for help and look.\nGrateful.. ",
    "hl1221hl": "\nIn 3.1.0 which will be released soon, ShardingSphere will not load all the table's TableMetaData by default.\n\n3.1.0 release is still very slow. there are 2000 tables in my database, it takes 3 minutes to initialize. ",
    "dalaocu": "I've tried, but still not work.\n\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\n. Sorry, my project is not open source. I have to write a demo to show you. \nI'm sure that it's not a hibernate issue because if I remove the ShardingSphere then it will work. This case is easy to check if you build a spring data jpa project with springboot.\nActually I have rewrote the Dialect and It works fine when I just use hibernate.\n\n`\npublic class MysqlConfig extends MySQL57Dialect {\n    @Override\n    public String getTableTypeString() {\n        return \" ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n    }\n}\n`\n. I wrote \nthe minimal demo of reproduced this error.\nPlease help me to check it. Thanks!. I add two branches in my demo project in order to simplify your work.\nSwitch to branch \"using-sharding-jdbc-log\", the warn log appeared:\n\n2019-02-25 21:17:05.833  WARN 42973 --- [           main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL \"create index block_height on activity_activity (block_height)\" via JDBC Statement\norg.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL \"create index block_height on activity_activity (block_height)\" via JDBC Statement\n  at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyIndexes(AbstractSchemaMigrator.java:331) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionFactoryImpl.(SessionFactoryImpl.java:310) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at com.dalaocu.sharding.demo.ShardingDemoApplication.main(ShardingDemoApplication.java:13) ~[main/:na]\nCaused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'block_height_activity_activity'\n  at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:782) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:666) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:na]\n  at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$8.execute(StatementExecutor.java:205) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$12.executeSQL(StatementExecutor.java:267) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$12.executeSQL(StatementExecutor.java:263) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:72) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:61) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:175) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:152) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:71) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:54) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:114) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor.execute(StatementExecutor.java:270) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor.execute(StatementExecutor.java:201) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.execute(ShardingStatement.java:161) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  ... 34 common frames omitted\nHibernate: create index status on activity_activity (status)\n2019-02-25 21:17:05.874  WARN 42973 --- [           main] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL \"create index status on activity_activity (status)\" via JDBC Statement\norg.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL \"create index status on activity_activity (status)\" via JDBC Statement\n  at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyIndexes(AbstractSchemaMigrator.java:331) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.internal.SessionFactoryImpl.(SessionFactoryImpl.java:310) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939) [hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) [spring-orm-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE]\n  at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE]\n  at com.dalaocu.sharding.demo.ShardingDemoApplication.main(ShardingDemoApplication.java:13) ~[main/:na]\nCaused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'status_activity_activity'\n  at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:782) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:666) ~[mysql-connector-java-8.0.13.jar:8.0.13]\n  at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:na]\n  at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$8.execute(StatementExecutor.java:205) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$12.executeSQL(StatementExecutor.java:267) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor$12.executeSQL(StatementExecutor.java:263) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:72) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:61) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:175) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:152) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:71) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:54) ~[sharding-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:114) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor.execute(StatementExecutor.java:270) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.executor.StatementExecutor.execute(StatementExecutor.java:201) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.execute(ShardingStatement.java:161) ~[sharding-jdbc-core-3.1.0.jar:na]\n  at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]\n  ... 34 common frames omitted\n\nIf you switch to branch \"using-jdbc-log\", the error disappeared.\n\n2019-02-25 21:30:37.650  INFO 43945 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [\n  name: default\n  ...]\n2019-02-25 21:30:37.751  INFO 43945 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.7.Final}\n2019-02-25 21:30:37.753  INFO 43945 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found\n2019-02-25 21:30:37.962  INFO 43945 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}\n2019-02-25 21:30:38.125  INFO 43945 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\n2019-02-25 21:30:38.536  INFO 43945 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\n2019-02-25 21:30:38.551  INFO 43945 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: com.dalaocu.sharding.demo.config.MysqlConfig\n2019-02-25 21:30:39.357  INFO 43945 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\n2019-02-25 21:30:40.289  INFO 43945 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\n2019-02-25 21:30:40.376  WARN 43945 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\n2019-02-25 21:30:40.714  INFO 43945 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8082 (http) with context path ''\n2019-02-25 21:30:40.718  INFO 43945 --- [           main] c.d.s.demo.ShardingDemoApplication       : Started ShardingDemoApplication in 6.864 seconds (JVM running for 7.306)\n. > https://github.com/codefairy08/sharding-demo\n\n@codefairy08  I hava tried your code with or without zk, and the warn logs repead. So does the specific db version  work? My db version is Server version: 5.7.24 MySQL Community Server (GPL).. > > https://github.com/codefairy08/sharding-demo\n\n@codefairy08 I hava tried your code with or without zk, and the warn logs repead. So does the specific db version work? My db version is Server version: 5.7.24 MySQL Community Server (GPL).\n\nI have tried mysql8.0, but the problem still existed. This warn log appears only when you start the springboot app twice or more!\nIf you start the app the first time, it will not conflict to the older table indexes.. Do you modify any code? I found you run it in windows. Mine is centos and mac. Is it related to the OS?. If you can't repeat the warn log, I have to set the log level manually...\nlogging.level.org.hibernate=ERROR\nBut I think it's not elegant.. > When can I release the next version?\n+1. Thanks! May I know when will the Version 4.0.0.M1 be released?. Yes, of course.\nI found that sharding.jdbc.config.sharding.tables.table_name.actual-data-nodes  of each single table must be configured.  I asked you in gitter for a global way to configurate, and you give me the config-yaml link.\nAccording to the config-yaml, I added the config of defaultDataSourceName to my configurations, then the exception disappeared.  \nI suggest that you could supplement your springboot configuration page to make it more clear. Some coders will not read all your versions of configuration docs. Thanks a lot!. ",
    "okzhu": "i got same error messsage...\nwhen to releases 3.1.0.1  ????\nThis is very important to me..... ",
    "honggangding": "use 3.1.0 + c3p0 \uff0cget the same  exception:\nCause: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.  . ",
    "quaider": "@terrymanu \nall my config, my  version is 3.1.0\n```yaml\ndataSources:\n  ds1: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13306/shop\n    username: root\n    password: root\nds1_sl1: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13307/shop\n    username: root\n    password: root\nds1_sl2: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13308/shop\n    username: root\n    password: root\nds2: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13406/shop\n    username: root\n    password: root\nds2_sl1: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13407/shop\n    username: root\n    password: root\nds2_sl2: !!com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.jdbc.Driver\n    url: jdbc:mysql://192.168.8.129:13408/shop\n    username: root\n    password: root\nshardingRule:\n  tables:\n    t_order:\n     # if change to ms_ds${1..2}.t_order${4..6}, then no error occurs, so strange\n      actualDataNodes: ms_ds${1..2}.t_order${1..3}\n      tableStrategy:\n        inline:\n          shardingColumn: id\n          algorithmExpression: t_order${id % 3 + 1}\n  databaseStrategy:\n    inline:\n      shardingColumn: buyer_id\n      algorithmExpression: ms_ds${buyer_id % 2 + 1}\n\n  keyGeneratorColumnName: id\n\ndefaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\nmasterSlaveRules:\n    ms_ds1:\n      masterDataSourceName: ds1\n      slaveDataSourceNames:\n        - ds1_sl1\n        - ds1_sl2\n      loadBalanceAlgorithmType: ROUND_ROBIN\nms_ds2:\n  masterDataSourceName: ds2\n  slaveDataSourceNames:\n    - ds2_sl1\n    - ds2_sl2\n  loadBalanceAlgorithmType: ROUND_ROBIN\n\nprops:\nsql.show: true\n```\nmysql is \n\nand i got the same error\nCaused by: java.sql.SQLException: Column name pattern can not be NULL or empty.\n    at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:545) ~[mysql-connector-java-6.0.6.jar:6.0.6]\n. > ## Bug Report\n\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details.\nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\n3.1.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nSharding-JDBC\nExpected behavior\nrun without exception\nActual behavior\nCaused by: java.sql.SQLException: Column name pattern can not be NULL or empty.\nReason analyze (If you can)\nif the table in mysql has the same name as actualDataNodes it happens, i dont kown why\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nplz see above\nExample codes for reproduce this issue (such as a github link).\nplz see above\n\n. @terrymanu \ni have found this may cause the error in TableMetaDataLoader.java\uff0cthe columnNamePattern arg is hardcode to null as below\nconnection.getMetaData().getColumns(catalog, null, actualTableName, null)\njava\nprivate List<ColumnMetaData> getColumnMetaDataList(final Connection connection, final String catalog, final String actualTableName) throws SQLException {\n        List<ColumnMetaData> result = new LinkedList<>();\n        Collection<String> primaryKeys = getPrimaryKeys(connection, catalog, actualTableName);\n        try (ResultSet resultSet = connection.getMetaData().getColumns(catalog, null, actualTableName, null)) {\n            while (resultSet.next()) {\n                String columnName = resultSet.getString(\"COLUMN_NAME\");\n                String columnType = resultSet.getString(\"TYPE_NAME\");\n                result.add(new ColumnMetaData(columnName, columnType, primaryKeys.contains(columnName)));\n            }\n        }\n        return result;\n    }. em,-:(\uff0ci use a low version of mysql-connector-java, then everything is ok! . > > em,-:(\uff0ci use a low version of mysql-connector-java, then everything is ok!\n\nPlease explicitly point out which version of mysql-connector-java can not work and which version of mysql-connector-java can work.\n\nmysql: 5.7\nmysql-connector-java: 6.0.6 (can not work)\uff0c5.1.47 (works). @tuohai666  i have try it just now\nhere is my package config in current test\nxml\n<dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>6.0.6</version>\n      </dependency>\n      <dependency>\n        <groupId>io.shardingsphere</groupId>\n        <artifactId>sharding-jdbc-core</artifactId>\n        <version>3.1.0</version>\n      </dependency>\nwhen use  sharding-jdbc-core, error occurs when application start\nwhen just use druid everything works well,  http://localhost:6060/user/count\nso, it seems to have nothing to do with what my  SQL is, because excepton throw at startup time with  sharding-jdbc-core\nif you want more details\uff0c you can get code here https://github.com/quaider/nanoservice\nyou just need to test if exception throw at applicaion startup time, before run, please change the dependency to above that i provided.\nremember to simplify sharding.yml in resources folder\nand my database file below\uff08.sql file can't upload, so i use a .log file instead\uff09\nshop.log\nhope you fix it if it is a bug\n. good job, how can i try it?. ",
    "tonnixu": "font{\n    line-height: 1.6;\n}\nul,ol{\n    padding-left: 20px;\n    list-style-position: inside;\n}\n\n\n\n\n\n\n\n\n    a#ntes-pcmail-signature-default:hover {\n        text-decoration: underline;\n        color: #3593db;\n        cursor: pointer;\n    }\n\n\n\n                \u53d1\u81ea\u7f51\u6613\u90ae\u7bb1\u5927\u5e08\n\n\n\nOn 01/6/2019 11:03\uff0c\u5f20\u4eae<notifications@github.com> wrote\uff1a\n\nCan you provide all log of this exception, sharding rule configuration and table structure?\n\u2014You are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or mute the thread.. ######################################################################################################\n\nHere you can configure the rules for the proxy.\nThis example is configuration of sharding rule.\n\nIf you want to use sharding, please refer to this file;\nif you want to use master-slave, please refer to the config-master_slave.yaml.\n\n\nschemaName: db\ndataSources:\n  ds_0:\n    url: jdbc:mysql://127.0.0.1:3307/db0?serverTimezone=UTC&useSSL=false\n    username: root\n    password: root@123\n    connectionTimeoutMilliseconds: 30000\n    idleTimeoutMilliseconds: 60000\n    maxLifetimeMilliseconds: 1800000\n    maxPoolSize: 50\n  ds_1:\n    url: jdbc:mysql://127.0.0.1:3307/db1?serverTimezone=UTC&useSSL=false\n    username: root\n    password: root@123\n    connectionTimeoutMilliseconds: 30000\n    idleTimeoutMilliseconds: 60000\n    maxLifetimeMilliseconds: 1800000\n    maxPoolSize: 50 \n  ds_2:\n    url: jdbc:mysql://127.0.0.1:3308/db2?serverTimezone=UTC&useSSL=false\n    username: root\n    password: root@123\n    connectionTimeoutMilliseconds: 30000\n    idleTimeoutMilliseconds: 60000\n    maxLifetimeMilliseconds: 1800000\n    maxPoolSize: 50 \n  ds_3:\n    url: jdbc:mysql://127.0.0.1:3308/db3?serverTimezone=UTC&useSSL=false\n    username: root\n    password: root@123\n    connectionTimeoutMilliseconds: 30000\n    idleTimeoutMilliseconds: 60000\n    maxLifetimeMilliseconds: 1800000\n    maxPoolSize: 50 \nshardingRule:\n  tables:\n    t_order:\n      actualDataNodes: ds_0.t_order_${0..1}, ds_1.t_order_${2..3}, ds_2.t_order_${4..5},ds_3.t_order_${6..7}\n      databaseStrategy:\n        inline:\n          shardingColumn: order_id\n          algorithmExpression: ds_${order_id.toInteger() % 8 / 2}\n      tableStrategy:\n        inline:\n          shardingColumn: order_id\n          algorithmExpression: t_order_${order_id.toInteger() % 8}\n      keyGeneratorColumnName: order_id\n  bindingTables:\n    - t_order\n  defaultDatabaseStrategy:\n    none:\n  defaultTableStrategy:\n    none:\n  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator\n. [INFO ] 07:50:17.268 [ShardingSphere-Command-13] i.s.s.backend.AbstractBackendHandler - java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n        at java.util.ArrayList.rangeCheck(ArrayList.java:657)\n        at java.util.ArrayList.get(ArrayList.java:433)\n        at com.google.common.collect.Lists$TransformingRandomAccessList.get(Lists.java:608)\n        at io.shardingsphere.core.merger.dql.DQLMergeEngine.(DQLMergeEngine.java:65)\n        at io.shardingsphere.core.merger.MergeEngineFactory.newInstance(MergeEngineFactory.java:57)\n        at io.shardingsphere.shardingproxy.backend.jdbc.JDBCBackendHandler.merge(JDBCBackendHandler.java:110)\n        at io.shardingsphere.shardingproxy.backend.jdbc.JDBCBackendHandler.execute(JDBCBackendHandler.java:98)\n        at io.shardingsphere.shardingproxy.backend.jdbc.JDBCBackendHandler.execute0(JDBCBackendHandler.java:82)\n        at io.shardingsphere.shardingproxy.backend.AbstractBackendHandler.execute(AbstractBackendHandler.java:52)\n        at io.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.query.ComQueryPacket.execute(ComQueryPacket.java:82)\n        at io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.run(CommandExecutor.java:73)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n        at java.lang.Thread.run(Thread.java:748). \nfont{\n    line-height: 1.6;\n}\nul,ol{\n    padding-left: 20px;\n    list-style-position: inside;\n}\n\ndrop table if exists t_order ;create table t_order(ID bigint auto_increment not null,order_id varchar(35) not null,merc_no varchar(16) not null,tx_dt varchar(8) not null,tx_amt decimal(18,2) not null,primary key(id));\n    a#ntes-pcmail-signature-default:hover {\n        text-decoration: underline;\n        color: #3593db;\n        cursor: pointer;\n    }\n\n\n\n                \u53d1\u81ea\u7f51\u6613\u90ae\u7bb1\u5927\u5e08\n\n\n\nOn 01/7/2019 11:47\uff0c\u5f20\u4eae<notifications@github.com> wrote\uff1a\n\nHi, can you provide table structure?\n\u2014You are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or mute the thread.. how to support this command. \"show partitions from t_order;\". AntlrParsingEngine   \n     if (DQLStatement.isDQL(tokenType)) {\n            if (DatabaseType.MySQL == dbType) {\n                return new AntlrParsingEngine(dbType, sql, shardingRule, shardingTableMetaData);\n            }\n            return getDQLParser(dbType, shardingRule, lexerEngine, shardingTableMetaData);\n        }\nthis new feather in 3.0. ```\nconfig-sharding-ds1.yaml\ndataSources:\n  ds_0:\n    url: jdbc:mysql://127.0.0.1:3306/ds_1?serverTimezone=UTC&useSSL=false\n    username: root\n    password: Root@123\n    autoCommit: true\n    connectionTimeoutMilliseconds: 30000\n    idleTimeoutMilliseconds: 60000\n    maxLifetimeMilliseconds: 1800000\n    minPoolSize: 10\n    maxPoolSize: 10\n```. 3.1.0  why not support autoCommit property?. ",
    "master-starcloud": "@ppj19891020 why you used pageable1 three times ,and not use pageable2 pageable3 objects..... ",
    "happy89lgk": "@tuohai666 He use different pageable,\nPageable pageable1 = new PageRequest(1,10);\n        List pos1 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable1);\n        log.info(\"pos1:{}\",pos1.toString());\n    Pageable pageable2 = new PageRequest(2,10);\n    List<UserPo> pos2 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable2);\n    log.info(\"pos2:{}\",pos2.toString());\n\n    Pageable pageable3 = new PageRequest(3,10);\n    List<UserPo> pos3 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable3);\n    log.info(\"pos3:{}\",pos3.toString());\n\nI also have this problem. ",
    "wanshi1128": "When can I release the next version?. ",
    "jichaof1": "\u66f4\u65b0\u52303.1.0\u6539\u95ee\u9898\u5df2\u89e3\u51b3. ",
    "yuxiao97": "It worked, all config is :\n1:In jvm opts\n-Dio.shardingsphere.opentracing.tracer.class=org.apache.skywalking.apm.toolkit.opentracing.SkywalkingTracer\n2:In main function write ShardingTracer.init();\n public static void main(String[] args) {\n        SpringApplication application = new SpringApplication(UCServerApplication.class);\n        application.run(args);\n        ShardingTracer.init();\n    }\n3:add Sky-walking config : config/component-libraries.yml\nSharding-Sphere:\nid: 34\nlanguages: Java\nothers add maven dependency:\n<dependency>\n            <groupId>org.apache.skywalking</groupId>\n            <artifactId>apm-toolkit-opentracing</artifactId>\n            <version>5.0.0-GA</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.shardingsphere</groupId>\n            <artifactId>sharding-opentracing</artifactId>\n            <version>3.1.0</version>\n        </dependency>. Another question,when pression application,query is very low,why?\n\n. >           ShardingSphere has switched to ANTLR parser which a little slower than before since 3.1.0.\n\nBut consuming 3s in parsing is unexpected. If you have doubt, please open another issue to discuss it.\nBTW, there's cache mechanism, if you use prepared statement, the parsing time of next query will be 0.\n\nOK, I created another issue:#1738. >           ShardingSphere has switched to ANTLR parser which a little slower than before since 3.1.0. But consuming 3s in parsing is unexpected.\n\nBTW, there's cache mechanism, if you use prepared statement, the parsing time of next query will be 0.\nYes,use Druid, version is 1.1.9,my config like this:\nsharding.jdbc.datasource.names=my-demo\nsharding.jdbc.datasource.my-demo.initialSize=5\nsharding.jdbc.datasource.my-demo.minIdle=5\nsharding.jdbc.datasource.my-demo.maxActive=50\nsharding.jdbc.datasource.my-demo.maxWait=60000\nsharding.jdbc.datasource.my-demo.validationQuery=SELECT 1 FROM DUAL\nsharding.jdbc.datasource.my-demo.timeBetweenEvictionRunsMillis=30000\nsharding.jdbc.datasource.my-demo.minEvictableIdleTimeMillis=300000\nsharding.jdbc.datasource.my-demo.testWhileIdle=true\nsharding.jdbc.datasource.my-demo.testOnBorrow=false\nsharding.jdbc.datasource.my-demo.testOnReturn=false\nsharding.jdbc.datasource.my-demo.poolPreparedStatements=true\nsharding.jdbc.datasource.my-demo.maxPoolPreparedStatementPerConnectionSize=50\nsharding.jdbc.datasource.my-demo.keepAlive=true\nSQL is simple, use param(not sharding-key) query object, like select column from user where mobile = ?\n2u 4g,32 tables wihtout slave master model, use 400 threads duration 300 seconds.. > Provide your environment like cpu, memory etc.\n----> 2U 4G\nYour config, sql etc.\n----> select * from user_1..32 where mobile = ?\nBug Report\nFor English only, other languages will not accept.\nBefore report a bug, make sure you have:\n\nSearched open and closed GitHub issues.\nRead documentation: ShardingSphere Doc.\n\nPlease pay attention on issues you submitted, because we maybe need more details.\nIf no response more than 7 days and we cannot reproduce it on current information, we will close it.\nPlease answer these questions before submitting your issue. Thanks!\nWhich version of ShardingSphere did you use?\n----> 3.1.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\n---->  Sharding-JDBC 3.1.0\nExpected behavior\n----> 400 threads test 300 seconds, 95% in 1000ms.\nActual behavior\n----> 400 thread test 300 seconds, 95% 2000\u00b1200ms.\nReason analyze (If you can)\n----> In every threads request, first operate db is very slowly, other db operation fast, so why?\n\n. > Your machine can't afford 400 threads, i don't think your expectation is right.\n\nAnd the machine is not suitable for a performance test.\n\nI use arthas trace then found this data\n\n\n. > What does this mean? Did you see my message above and what do you say?\n\n\nYour machine can't afford 400 threads, i don't think your expectation is right.\nAnd the machine is not suitable for a performance test.\n\nIf you insist that your expectation is right, you should share more reasonable infomation. For example, without Sharding-JDBC and with the same threads count, you got the respond time 95% in 1000ms.\n\nI change my device config and fix application logic then ok.. ",
    "TreeZhiyuan": "\nPlease set keepAlive=true, otherwise, connections will be closed after minEvictableIdleTimeMillis.\n\nthanks for your reply\nAdding keepAlive=true doesn't work, the issue is still there\n. druid version is 1.1.9. Thanks for your suggestion, this issue is our wrong configure two below properties:\nsharding.jdbc.datasource.timeBetweenEvictionRunsMillis=60000\nsharding.jdbc.datasource.minEvictableIdleTimeMillis=300000\nAfter  configure the number of timeBetweenEvictionRunsMillis less than minEvictableIdleTimeMillis, it works well, May be we should very carefully determine all the configure properties.. ",
    "WillWei1983": "Which version of ShardingSphere did you use?\n3.0.0\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nSharding-Proxy\nExpected behavior\nReturn the description of the tables\nActual behavior\nReturn nothing\nReason analyze (If you can)\nI guess the Sharding-Proxy did not support this yet\nSteps to reproduce the behavior,Example Code\n\ncon = efi.getConnection(groupName)\n                DatabaseMetaData dbData = con.getMetaData()\n\n            String[] types = [\"TABLE\", \"VIEW\", \"ALIAS\", \"SYNONYM\"]\n            tableSet1 = dbData.getTables(null, ed.getSchemaName(), ed.getTableName(), types)\n            if (tableSet1.next()) {\n                dbResult = true\n            } else {\n                // try lower case, just in case DB is case sensitive\n                tableSet2 = dbData.getTables(null, ed.getSchemaName(), ed.getTableName().toLowerCase(), types)\n                if (tableSet2.next()) {\n                    dbResult = true\n                } else {\n                    if (logger.isTraceEnabled()) logger.trace(\"Table for entity ${ed.getFullEntityName()} does NOT exist\")\n                    dbResult = false\n                }\n            }\n\n. ",
    "llzx373": "\nIn general, you should use checkstyle to check your code before you pr. Please refer to:\nhttp://shardingsphere.io/community/en/contribute/code-conduct/\nWhy Class.forName(\"com.mysql.jdbc.Driver\"); and Class.forName(\"com.mysql.cj.jdbc.Driver\"); in getDriverClassName ?\n\nIn MySQL java connector \uff0cjdbc driver class is different between 5.1.x\uff08com.mysql.jdbc.Driver\uff09 and 8.x\uff08com.mysql.cj.jdbc.Driver\uff09\uff0c\uff0cwrite as above could mike it possible to connect to mysql server \u30028.0.x \u3002\nanother change in pom is upgrade the version of mysql-connector-java to 5.1.47.\nanyway\uff0cthe code style problem i will fix it as soon\u3002. ",
    "JeddyHj": "When can this problem be fixed, our technical research sharding-jdbc is blocked by this problem. ",
    "meAsky": "I want to do it.. ",
    "sixianli": "\nI want to do it.\n\nthat's will be great! before work on this issue, check this out (i am a link). To solve this issue i customize sharding-core module for my project and it works. I change a code snippet in this funciton io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer#getAllTableNames like this:\njava\nprivate Collection<String> getAllTableNames(final String dataSourceName) throws SQLException {\n        Collection<String> result = new LinkedHashSet<>();\n        try (Connection connection = connectionManager.getConnection(dataSourceName);\n             ResultSet resultSet = connection.getMetaData().getTables(dataSourceName, null, null, new String[]{\"TABLE\"})) {\n            while (resultSet.next()) {\n                String tableName = resultSet.getString(\"TABLE_NAME\");\n                if (!tableName.contains(\"$\") && !tableName.contains(\"/\")) {\n                    result.add(tableName);\n                }\n            }\n        }\n        return result;\n    } . > @sixianli So why not pr ?\nok, i will do it later. To solve this problem casually, i customize the sharding-core module for my project, and that works.\nI had changed this code snippet in this function io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader#getColumnMetaDataList like this:\njava\n    private List<ColumnMetaData> getColumnMetaDataList(final Connection connection, final String catalog, final String actualTableName) throws SQLException {\n        List<ColumnMetaData> result = new LinkedList<>();\n        Collection<String> primaryKeys = getPrimaryKeys(connection, catalog, actualTableName);\n        try (ResultSet resultSet = connection.getMetaData().getColumns(catalog, null, actualTableName, \"%\")) {\n            while (resultSet.next()) {\n                String columnName = resultSet.getString(\"COLUMN_NAME\");\n                String columnType = resultSet.getString(\"TYPE_NAME\");\n                ColumnMetaData columnMetaData = new ColumnMetaData(columnName, columnType, primaryKeys.contains(columnName));\n                if(!result.contains(columnMetaData)) {\n                    result.add(columnMetaData);\n                }\n            }\n        }\n        return result;\n    }\nAnd i change code snippet in this function io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader#checkUniformed like this:\njava\nprivate void checkUniformed(final String logicTableName, final List<TableMetaData> actualTableMetaDataList) {\n            //to ensure two tableMetaData objects equals each other ignore orders of the columnMetaDatas\n        actualTableMetaDataList\n                .forEach(tableMetaData -> Collections\n                        .sort((List<ColumnMetaData>)tableMetaData.getColumnMetaData(),\n                                Comparator.comparing(ColumnMetaData::getColumnName)));\n        final TableMetaData sample = actualTableMetaDataList.iterator().next();\n        for (TableMetaData each : actualTableMetaDataList) {\n            if (!sample.equals(each)) {\n                throw new ShardingException(\"Cannot get uniformed table structure for `%s`. The different meta data of actual tables are as follows:\\n%s\\n%s.\", logicTableName, sample, each);\n            }\n        }\n    }. @tuohai666 about the #1770 , in the tag 3.0.0 version, in oracle database, the same table structure in different datasource got dirrerent TableMetaData objects. I debugged and found that List object of each TableMetaData is different , each List object contains repetitive columnMetaData objects, so i add a little filter logic code. . @tuohai666 yes , i can , i am a little shy, I hope you don't mind.. i am a new guy about opensource in github and could you please tell me how to you the IM ?. ok! thank you then!. ",
    "chenshao6311": "In the binding table, the main change is the order of dataNodes of this table rule. The dataNodes of the two binding tables are as follows:\nt_order:\nresult.setActualDataNodes(\"demo_ds_${0..1}.t_order_${[0, 1]}\");\nt_order_item:\nresult.setActualDataNodes(\"demo_ds_0.t_order_item_1,demo_ds_0.t_order_item_0,demo_ds_1.t_order_item_1,demo_ds_1.t_order_item_0\");\n[INFO ] 2019-01-18 10:27:23,760 --main-- [ShardingSphere-SQL] Logic SQL: SELECT i. FROM t_order o, t_order_item i WHERE o.order_id = i.order_id AND o.order_id = 292966288664297473 \n[INFO ] 2019-01-18 10:27:23,760 --main-- [ShardingSphere-SQL] SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@4da9f723), containStar=true, selectListLastPosition=11, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.of(i))], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null, subQueryStatements=[]) \n[INFO ] 2019-01-18 10:27:23,760 --main-- [ShardingSphere-SQL] Actual SQL: demo_ds_0 ::: SELECT i. FROM t_order_1 o, t_order_item_0 i WHERE o.order_id = i.order_id AND o.order_id = 292966288664297473 \n[INFO ] 2019-01-18 10:27:23,760 --main-- [ShardingSphere-SQL] Actual SQL: demo_ds_1 ::: SELECT i.* FROM t_order_1 o, t_order_item_0 i WHERE o.order_id = i.order_id AND o.order_id = 292966288664297473 \norder data in dataNode[demo_ds_1.t_order_1] and order_item   data in   dataNode[demo_ds_1.t_order_item_1],So the two statements routed are not satisfied, so the results can not be found. \n. ok.. ",
    "AtonKu": "your document needs to be updated?\n. ",
    "jmbkeyes": "@KomachiSion\nThe datasource is org.apache.commons.dbcp2.BasicDataSource, and my existing database also exists non-sharding table. \nmy spring boot version is 1.2.5. BasicDataSource's version is 2.0.1.\n\nduring debug, I found that the following line throws exception:\nTableMetadata tableInfo = databaseMetadata.getTableMetadata( table.getName(), tableSchema,\n                        tableCatalog, table.isQuoted() );\none more infomation is that the connection seems closed during debug into that method.\n\nand the table is a normal table, which don't not require sharding feature.. When I start my app, some feature works but some doesn't not work, and from the log, it seems that all sql executed through shardconnection for those query doesn't contain shard table.\nhow to handle it? I only need shard big table in one database.\n2019-01-18 16:50:00 INFO  ShardingSphere-SQL:71 - Rule Type: sharding\n2019-01-18 16:50:00 INFO  ShardingSphere-SQL:71 - Logic SQL: select gs. from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ?\n2019-01-18 16:50:00 INFO  ShardingSphere-SQL:71 - SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@1678f948), containStar=true, firstSelectItemStartPosition=7, selectListLastPosition=12, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.of(gs))], groupByItems=[], orderByItems=[], limit=Limit(offset=null, rowCount=LimitValue(value=100, index=2, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\n2019-01-18 16:50:00 INFO  ShardingSphere-SQL:71 - Actual SQL: ds0 ::: select gs. from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ? ::: [[20190117, 20190118, 100]]. do you mean that I should create 2 datasource with same database?. hmm, i use only one ds, but it still run via sharden connection.\n    Map<String, DataSource> dataSourceMap = new HashMap<>();\n    dataSourceMap.put(\"ds0\", dataSource);\n\n    // Configure table rule\n    TableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();\n    logTableRuleConfig.setLogicTable(\"center_op_log\");\n    logTableRuleConfig.setActualDataNodes(\"ds0.center_op_log${0..4}\");\n\n    // Configure strategies for database + table sharding\n    logTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"main_center_id\", \"center_op_log${mainCenterId % 4}\"));\n\n    // Configure sharding rule\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    shardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);\n    shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\n    shardingRuleConfig.setDefaultDataSourceName(\"ds0\");. ok, for the connection close issue, how to fix it?. ok, I try 3.0.0, the project starts without exception output, but another exception was raised.\n\n2019-01-18 18:17:32 ERROR errorLogger:40 - Unsupported data type:boolean\n2019-01-18 18:17:32 ERROR errorLogger:40 - Unsupported data type:boolean\n2019-01-18 18:17:32 ERROR errorLogger:41 - Exception Class: io.shardingsphere.core.exception.ShardingException. I know the issue, in database its data type is tinyint, and exception is caused by the code rs.getBoolean(\"dfs\");\n it raises exception  if I use shard connection, but it works well if I don't use shardconnection.. if there's only one same datasouce for both shard and not-shard, all sql will execute in the shard connection.\nAnd non-shard table sql will also show sharding log as below[group_booking_instance is non-shard table].\n2019-01-21 13:20:00 INFO  ShardingSphere-SQL:71 - Rule Type: sharding\n2019-01-21 13:20:00 INFO  ShardingSphere-SQL:71 - Logic SQL: select gs.* from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ?\n2019-01-21 13:20:00 INFO  ShardingSphere-SQL:71 - SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@36aca72e), containStar=true, firstSelectItemStartPosition=7, selectListLastPosition=12, groupByLastPosition=0, items=[StarSelectItem(owner=Optional.of(gs))], groupByItems=[], orderByItems=[], limit=Limit(offset=null, rowCount=LimitValue(value=100, index=2, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\n2019-01-21 13:20:00 INFO  ShardingSphere-SQL:71 - Actual SQL: ds0 ::: select gs.* from group_booking_instance gs where gs.endDate in(?, ?) and gs.status = 1 and gs.endTs<now() limit ? ::: [[20190120, 20190121, 100]]\n. 1. Will non-shard table sql have some restriction for shard connection context? I've tested that there'll be an exception when updating multiple table's fields in one update sql statement(refer to ).\n\nIf I created 2 datasource(one for shard, other for non-shard), how to handle the transaction(via XA for jsut LOCAL Transaction)?. Thanks.. @terrymanu  I've added more details.. hmm, I said that the exception occurred in 3.0.0.   3.1.0 has another issue https://github.com/apache/incubator-shardingsphere/issues/1774, so I tried 3.0.0, and find this issue.. Hmm, It maybe my misunderstanding. \n\n\nAs the 3.1.0 release notes said \"All SQL 100% compatible if route to single data node (MySQL Only).\". ",
    "oawang": "\u4eae\u54e5\uff0c\u82f1\u6587\u4e0d\u7ed9\u529b\u5440\uff0c\u4e2d\u6587\u56de\u4f60\u3002\u80cc\u666f\uff1a\u5927\u6982\u6709\u4e0d\u5230\u5341\u4e2a\u4e1a\u52a1\u7cfb\u7edf\uff08\u5e94\u7528\uff09\uff0c\u6309\u4e1a\u52a1\u6765\u505a\u5206\u5e93\uff0c\u6bcf\u4e2a\u5e94\u7528\u5404\u81ea\u8dd1\u4e86128\u4e2a\u5206\u7247\uff0c\u6bcf\u4e2a\u5206\u7247\u521d\u59cb\u4e00\u4e2a\u8fde\u63a5\u3002Spring boot \u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u521d\u59cb\u5316\u5230128\u4e2a\u5206\u7247\u65f6\u5c31\u4f1a\u51fa\u73b0\u7a0b\u5e8f\u5361\u987f\u7684\u95ee\u9898. ",
    "xiaoxing598": "\nYou can see that I am using the DRUID connection pool, but I need to configure the parameters of the connection pool itself, how to achieve this?\nThe following shows a small part of the DRUID connection pool properties.\n druid.web-stat-filter.enabled = false\ndruid.stat-view-servlet.enabled = false\ndruid.initial-size = 5\ndruid.max-active = 100\ndruid.min-idle = 5\ndruid.max-wait = 60000\ndruid.min-evictable-idle-time-millis = 300000\ndruid.validation-query = SELECT 1 FROM DUAL\ndruid.test-while-idle = true\ndruid.test-on-borrow = false\ndruid.test-on-return = false\ndruid.pool-prepared-statements = false. ## Which version of ShardingSphere did you use?\n3.1.0\n\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\nSharding-JDBC\nExpected behavior\nI am using the \"alibaba/druid\" data connection pool, I need to set parameters for the connection pool to change its behavior.\nActual behavior\nI didn't find a way to set the connection pool parameters, even though I have read all the official documentation.\nReason analyze (If you can)\nI use Sharding-JDBC in a project based on SpringBoot. I don't know how to configure it in the project file \"application.properties\". I don't know how to pass the parameters of the connection pool itself to Sharding-JDBC because the initialization of the connection pool is done by Sharding-JDBC is under control.\nSteps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\nnone\nExample codes for reproduce this issue (such as a github link).\nnone. Thank you, I have tested successfully according to your example.. What if you specify a custom sharding algorithm in the configuration file?\nproperties\nsharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id\nsharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=master$->{user_id % 2}\nproperties\n...default-database-strategy.inline.algorithm-expression=master$->{user_id PreciseConsistentHashShardingDatabaseAlgorithm}\nThis should be the question I eventually want to ask. I don't want to move all the configuration in the file into the code.. @terrymanu help me!. Please believe me, I have read all the documentation! I found out how to customize the sharding algorithm, but I didn't find how to specify it in the config file, I mean it is configured in the properties file.. @tristaZero Thank you for the example given. Can the above rules be applied to the library logic? I don't want to repeat the configuration for each table, after all, their fragmentation rules are the same.\nI just tried to use the following configuration, but the log failed.\n```\nsharding.jdbc.config.sharding.default-database-strategy.inline.preciseAlgorithmClassName = com.xxx.xxx.config.PreciseConsistentHashShardingDatabaseAlgorithm\nFactory method 'dataSource' threw exception; nested exception is java.lang.NullPointerException: Sharding algorithm expression cannot be null.\n```. > please see the raw-jdbc-example\nI did not find in the project \"incubator-shardingsphere-example\" how the custom shard logic is configured in the Properties file, only to find out how to use code configuration, and XML file configuration.\nThere is indeed a missing configuration example for the Properties file.. > @xiaoxing598\n\nHere is exmaple.\nHow to use your customized sharding statergy? Please refer to:\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.preciseAlgorithmClassName=io.shardingsphere.example.algorithm.PreciseModuloShardingTableAlgorithm\n\nI need to set the sharding strategy of the sub-library instead of the sub-table strategy. The example you gave is incorrect.. @terrymanu I need to set the sharding strategy on the specified data node. I don't split the table in my project, just split the different data sources.\nI expect to be able to configure this as follows:\n```properties \nsharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name = master0\nsharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names = master0slave0\nsharding.jdbc.config.sharding.master-slave-rules.ds1.master-data-source-name = master1\nsharding.jdbc.config.sharding.master-slave-rules.ds1.slave-data-source-names = master1slave0\nsharding.jdbc.config.sharding.master-slave-rules.ds2.master-data-source-name = master2\nsharding.jdbc.config.sharding.master-slave-rules.ds2.slave-data-source-names = master2slave0\nsharding.jdbc.config.sharding.master-slave-rules.ds->{1..2}.strategy.preciseAlgorithmClassName=xxx.PreciseConsistentHashShardingDatabaseAlgorithm\n```. @tristaZero According to the following configuration, I can fulfill my needs.\nProperties\nsharding.jdbc.config.sharding.default-database-strategy.standard.sharding-column=order_id\nsharding.jdbc.config.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.xxx.config.PreciseConsistentHashShardingDatabaseAlgorithm. ",
    "linzixiang199141": "look issue #1722 . ",
    "ganlulei": "\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u4ee3\u7801\u6d4b\u8bd5\u662f\u8fd9\u4e2a\u6837\u5b50\uff0c\u662f\u4e0d\u517c\u5bb9oracle11g\u4e48. 2019-01-24 13:18:14,462 [RMI TCP Connection(2)-127.0.0.1] [com.alibaba.druid.pool.DruidDataSource]-[INFO] {dataSource-1} inited. Stop here all the time and you can't continue to execute it.. ",
    "guowdxp": "I modified the OrConditionFiller.java code according to #1784, but I still can't query the data with this sql. I debug the program under the breakpoint. The value parsed by the sql condition is still -1.  When the program enter the buildExpression method of the OrConditionFiller class\uff0c The value of  the expressionSegment variable is already -1.\nOrConditionFiller.java \nprivate com.google.common.base.Optional<SQLExpression> buildExpression(final SelectStatement selectStatement, final ExpressionSegment expressionSegment, final String sql,\n                                                                       final ShardingRule shardingRule, final ShardingTableMetaData shardingTableMetaData) {\n    if (!(expressionSegment instanceof CommonExpressionSegment)) {\n        new ExpressionFiller().fill(expressionSegment, selectStatement, sql, shardingRule, shardingTableMetaData);\n        return com.google.common.base.Optional.absent();\n    }\n    CommonExpressionSegment commonExpressionSegment = (CommonExpressionSegment) expressionSegment;\n    if (-1 < commonExpressionSegment.getIndex()) {\n        return com.google.common.base.Optional.<SQLExpression>of(new SQLPlaceholderExpression(commonExpressionSegment.getIndex()));\n    }\n    if (null != commonExpressionSegment.getValue()) {\n        return com.google.common.base.Optional.<SQLExpression>of(new SQLNumberExpression(commonExpressionSegment.getValue()));\n    }\n    //String expression = sql.substring(commonExpressionSegment.getStartPosition(), commonExpressionSegment.getEndPosition() + 1);\n    //return Optional.<SQLExpression>of(new SQLTextExpression(expression));\n    if(commonExpressionSegment.isText()) {\n        return Optional.<SQLExpression>of(new SQLTextExpression(sql.substring(commonExpressionSegment.getStartPosition() + 1, commonExpressionSegment.getEndPosition())));\n    }\n    return Optional.<SQLExpression>of(new SQLTextExpression(sql.substring(commonExpressionSegment.getStartPosition(), commonExpressionSegment.getEndPosition() + 1)));\n}\n\n. thanks a lot, I pulled the 3.1.0 development branch down and the problem has been solved.\nBut I found that using the 3.1.0 development branch, navicat can't connect to the sharding-proxy service, you must use jdbc to connect. The navicat connection sharding-proxy will report an error: the current logic schema is null. This is due to the non-empty check of the logical library in the BackendConnection class. If you can't connect to the sharding-proxy service with the mysql client tool, the user experience is not good. When do you plan to release the 3.1.0 version again?. The version using sharding-sphere is 4.0.0.M1-SNAPSHOT.\nI use sharding-Proxy.\nI configure a config-sharding file and the query is ok\uff0cbut I configure multiple config-sharding yaml files, execute sql query with java code will report an error\uff1a\nException in thread \"main\" java.sql.SQLException: Unknown exception: null\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)\nat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)\nat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)\nat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)\nat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)\nat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2531)\nat com.mysql.jdbc.ConnectionImpl.configureClientCharacterSet(ConnectionImpl.java:1765)\nat com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3364)\nat com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2283)\nat com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)\nat com.mysql.jdbc.ConnectionImpl.(ConnectionImpl.java:794)\nat com.mysql.jdbc.JDBC4Connection.(JDBC4Connection.java:44)\nat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\nat java.lang.reflect.Constructor.newInstance(Constructor.java:525)\nat com.mysql.jdbc.Util.handleNewInstance(Util.java:389)\nat com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)\nat com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)\nat java.sql.DriverManager.getConnection(DriverManager.java:579)\nat java.sql.DriverManager.getConnection(DriverManager.java:221)\nat com.zhongan.dmds.sharding_sphere.QueryTest.main(QueryTest.java:32)\nJava code :\npublic static void main(String[] args) throws Exception {       \n    Class.forName(\"com.mysql.jdbc.Driver\"); \n    String dmdsName = null;\n    String sql = \"select * from bcp_router limit 0,1\" ;     \n    Connection conn = DriverManager.getConnection(url, username, password);\n    PreparedStatement ps = conn.prepareStatement(sql);\n    ResultSet rs = ps.executeQuery();\n    if(rs.next()) {\n        System.out.println(rs.getObject(1));\n    }\n    System.out.println(\"ok\");\n    rs.close();\n    ps.close();\n    conn.close();   \n}. first yaml config file :\n\n\nschemaName: smp_gr_bcp_dev\ndataSources:\n  ds_smp_gr_bcp_dev_0:\n    url: jdbc:mysql://url:3306/database_00?useSSL=false\n    username: username\n    password: password\n    maxPoolSize: 5\n    minPoolSize: 2\n  ds_smp_gr_bcp_dev_1:\n    url: jdbc:mysql://url:3306/database_01?useSSL=false\n    username: username\n    password: password\n    maxPoolSize: 5\n    minPoolSize: 2\nshardingRule:\n  tables:\n    bcp_router:\n      actualDataNodes: ds_smp_gr_bcp_dev_0.bcp_router_000${0..1},ds_smp_gr_bcp_dev_1.bcp_router_000${2..3}\n      databaseStrategy:\n        inline:\n          shardingColumn: src_id\n          algorithmExpression: ds_smp_gr_bcp_dev_${(src_id.hashCode().abs() % 4).intdiv(2)}\n      tableStrategy:\n        inline:\n          shardingColumn: src_id\n          algorithmExpression: bcp_router_${\"000\" + (src_id.hashCode().abs() % 4)}\n  defaultDataSourceName: ds_smp_gr_bcp_dev_0\n  defaultDatabaseStrategy:\n    none:\n  defaultTableStrategy:\n    none:\n\nsecond yaml config file : \nschemaName: smp_gr_customer_dev\ndataSources:\n  ds_smp_gr_customer_dev_0:\n    url: jdbc:mysql://url:3306/database_00?useSSL=false\n    username: username\n    password: password\n    maxPoolSize: 5\n    minPoolSize: 2\n  ds_smp_gr_customer_dev_1:\n    url: jdbc:mysql://url:3306/database_01?useSSL=false\n    username: username\n    password: password\n    maxPoolSize: 5\n    minPoolSize: 2\nshardingRule:\n  tables:\n    trans_router:\n      actualDataNodes: ds_smp_gr_customer_dev_0.trans_router_000${0..1},ds_smp_gr_customer_dev_1.trans_router_000${2..3}\n      databaseStrategy:\n        inline:\n          shardingColumn: trans_no\n          algorithmExpression: ds_smp_gr_customer_dev_${(trans_no.hashCode().abs() % 4).intdiv(2)}\n      tableStrategy:\n        inline:\n          shardingColumn: trans_no\n          algorithmExpression: trans_router_${\"000\" + (trans_no.hashCode().abs() % 4)}\n  defaultDataSourceName: ds_smp_gr_customer_dev_0\n  defaultDatabaseStrategy:\n    none:\n  defaultTableStrategy:\n    none:. 1.  first config filename is config-sharding-sompo-dev____smp_gr_bcp_dev.yaml.\n\nsecond config filename is config-sharding-sompo-dev____smp_gr_customer_dev.yaml\n2.   each config can work well separately.\n3.   after setting  sql.show: true  in server.yaml, the log is as follows\uff1a\n[INFO ] 16:56:12.895 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xf0b3b2e9, L:/0:0:0:0:0:0:0:0:3308] READ: [id: 0x2e621ddf, L:/127.0.0.1:3308 - R:/127.0.0.1:53944]\n[INFO ] 16:56:12.897 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xf0b3b2e9, L:/0:0:0:0:0:0:0:0:3308] READ COMPLETE\n\n. I find that the error message of the client query is not display on the server. Why is this design?. Can you add my QQ ? My QQ : 491799734. query blob column no problem\u3002\nquery java code as follows:\n/**\n * blob\u5b57\u6bb5\u67e5\u8be2\u6d4b\u8bd5\n * @param args\n * @throws Exception\n */\n@Test\npublic void blobQueryTest() throws Exception {\n    Class.forName(\"com.mysql.jdbc.Driver\");\n    String sql = \"select id,image from images\";\n    Connection conn = DriverManager.getConnection(url, username, password);\n    PreparedStatement ps = conn.prepareStatement(sql);\n\n    ResultSet rs = ps.executeQuery(sql);\n    if(rs.next()) {\n        Integer id = rs.getInt(\"id\");\n        Blob image = rs.getBlob(\"image\");\n        System.out.println(id);         \n        InputStream in = image.getBinaryStream();\n        OutputStream out = new FileOutputStream(\"f://3.jpg\");\n        byte[] buffer = new byte[1024*1024];\n        int len = 0;\n        int i=0;\n        while((len = in.read(buffer)) != -1){\n               out.write(buffer, 0, len);\n               i++;\n        }    \n        out.close();\n        in.close();\n    }\n    rs.close();\n    ps.close();\n    conn.close();\n}.\n",
    "feelwing1314": "```\npublic static void logSQL(final String logicSQL, final SQLStatement sqlStatement, final Collection routeUnits) {\n    log(\"Rule Type: sharding : v2 \");\n    if (!sqlLogSimple) {\n        log(\"Logic SQL: {}\", logicSQL);\n        log(\"SQLStatement: {}\", sqlStatement);\n        for (RouteUnit each : routeUnits) {\n            if (each.getSqlUnit().getParameterSets().get(0).isEmpty()) {\n                log(\"Actual SQL: {} ::: {}\", each.getDataSourceName(), each.getSqlUnit().getSql());\n            } else {\n                log(\"Actual SQL: {} ::: {} ::: {}\", each.getDataSourceName(), each.getSqlUnit().getSql(), each.getSqlUnit().getParameterSets());\n            }\n        }\n    }else{\n        log(\"Logic SQL(simple): {}\", logicSQL.length()>512?logicSQL.substring(0, 512):logicSQL);\n        Set dataSourceNames = new HashSet<>(routeUnits.size());\n        for (RouteUnit each : routeUnits) {\n            dataSourceNames.add(each.getDataSourceName());\n        }\n        log(\"Actual SQL(simple): {} ::: {}\", dataSourceNames, routeUnits.size());\n    }\n}\n```\nand the simple log output like this (the imagesub_fenbiao have 127 actual sql, id is sharding column):\n2019-02-01 11:20:19.259 [main] INFO  ShardingSphere-SQL:  Rule Type: sharding\n2019-02-01 11:20:19.261 [main] INFO  ShardingSphere-SQL:  Logic SQL(simple): select * from imagesub_fenbiao where image_no=?\n2019-02-01 11:20:19.262 [main] INFO  ShardingSphere-SQL:  Actual SQL(simple): [yyfax_afei] ::: 127. I'll try my best.. i found the root cause\u3002\nthe List> parameterSets = new LinkedList<>() in AbstractStatementExecutor, it's data structure is LinkedList\u3002when it had 54000 parameter\uff0c the get(i) is bad\u3002. ",
    "tswstarplanet": "CDS is a database sharding middleware of JingDong.. ",
    "andyzhx": "which version support this feature?. https://github.com/andyzhx/sharding-jdbc-sample,  in the sharding-jdbc-rw-splitting module,a unittest  function:DemoApplicationTests getByUserId(). @tristaZero . what's different with my config? @tristaZero . ",
    "jiejiecool": "group_concat function isn't supported in version 3.1.0,and i can't see the time 4.0.0.M1 will be released.\nso when will 4.0.0.M1 be released?. I used TAG 4.0.0-RC1,  packaged and deployed source code as a jar to personal maven repository,but I found tag-4.0.0-RC1 was deleted. . ",
    "walkingWind": "here is my code snippet\napplication.yml\nmybatis:\n  mapper-locations: classpath*:mapper/*Mapper.xml\n  type-aliases-package: com.tsm.shardingjdbctest.domain\nsharding:\n  jdbc:\n    data-sources:\n      mydb_ms0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://10.0.2.238:3306/mydb_ms?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n      mydb_ms0_slave0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://xx.xx.xx.xx:xx/mydb1?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n      mydb_ms0_slave1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://xx.xx.xx.xx:xx/mydb2?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n      mydb_ms1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://xx.xx.xx.xx:xx/mydb_ms?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n      mydb_ms1_slave0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://xx.xx.xx.xx:xx/mydb1?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n      mydb_ms1_slave1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://xx.xx.xx.xx:xx/mydb2?characterEncoding=utf8&useSSL=false\n        username: root\n        password: 123456\n    master-slave-rule:\n      ds_ms0:\n        master-data-source-name: mydb_ms0\n        slave-data-source-names: [mydb_ms0_slave0,mydb_ms0_slave0]\n        load-balance-algorithm-type: round_robin\n      ds_ms1:\n        master-data-source-name: mydb_ms1\n        slave-data-source-names: [mydb_ms1_slave0,mydb_ms1_slave1]\n        load-balance-algorithm-type: round_robin\n    sharding-rule:\n      tables:\n        user:\n          actual-data-nodes: ds_ms${0..1}.user${1..3}\n          database-strategy:\n            inline:\n              sharding-column: age\n              algorithm-inline-expression: ds_ms${age % 2}\n          table-strategy:\n            inline:\n              sharding-column: age\n              algorithm-inline-expression: user${age % 3+1}\n        age:\n          actual-data-nodes: ds_ms${0..1}.age${1..2}\n          database-strategy:\n            inline:\n              sharding-column: id\n              algorithm-inline-expression: ds_ms${id % 2}\n          table-strategy:\n            inline:\n              sharding-column: id\n              algorithm-inline-expression: age${id % 2+1}\nShardingjdbcTestApplication.java\n```\n@ComponentScan(\"com.tsm.shardingjdbctest\")\n@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})\n@SpringBootApplication(exclude = JtaAutoConfiguration.class)\n@ComponentScan(\"io.shardingsphere.transaction.aspect\")\npublic class ShardingjdbcTestApplication {\npublic static void main(String[] args) {\n    SpringApplication.run(ShardingjdbcTestApplication.class, args);\n}\n\n}\n`DataSourceConfig.java`\nDataSource dataSource =ShardingDataSourceFactory.createDataSource(dataSourceMap,\n                shardingEnvironment.initShardingRule(), new HashMap<>(),new Properties());\n`TestController.java`\n    @GetMapping(\"/back\")\n    @Transactional\n    @ShardingTransactionType(TransactionType.XA)\n    public String test1111() throws Exception{\n        User user1=new User();\n        user1.setAge(24+(int)(Math.random()60)6);\n        user1.setName(\"qq\");\n        System.out.println(JSON.toJSONString(testMapper.addOneUser(user1)));\n    User user2=new User();\n    user2.setAge(25+(int)(Math.random()*60)*6);\n    user2.setName(\"qq\");\n    System.out.println(JSON.toJSONString(testMapper.addOneUser(user2)));\n    return \"success\";\n\n}\n\n```\nI am sure datasource was initialized, because it worked well if i delete   @ShardingTransactionType(TransactionType.XA) in my TestController.\nI don't have jta.properties, is that necessary to have a jta.properties?\nIf so,  why the exception description is that about data source?\n@cherrylzhao . @cherrylzhao \nI have code like this, is that not enough?\n```\nList getMasterSlaveRuleConfigurations() {\n        MasterSlaveRuleConfiguration masterSlaveRuleConfig1 = new MasterSlaveRuleConfiguration(\"ds_0\", \"demo_ds_master_0\", Arrays.asList(\"demo_ds_master_0_slave_0\", \"demo_ds_master_0_slave_1\"));\n        MasterSlaveRuleConfiguration masterSlaveRuleConfig2 = new MasterSlaveRuleConfiguration(\"ds_1\", \"demo_ds_master_1\", Arrays.asList(\"demo_ds_master_1_slave_0\", \"demo_ds_master_1_slave_1\"));\n        return Lists.newArrayList(masterSlaveRuleConfig1, masterSlaveRuleConfig2);\n    }\nMap<String, DataSource> createDataSourceMap() {\n    final Map<String, DataSource> result = new HashMap<>();\n    result.put(\"demo_ds_master_0\", DataSourceUtil.createDataSource(\"demo_ds_master_0\"));\n    result.put(\"demo_ds_master_0_slave_0\", DataSourceUtil.createDataSource(\"demo_ds_master_0_slave_0\"));\n    result.put(\"demo_ds_master_0_slave_1\", DataSourceUtil.createDataSource(\"demo_ds_master_0_slave_1\"));\n    result.put(\"demo_ds_master_1\", DataSourceUtil.createDataSource(\"demo_ds_master_1\"));\n    result.put(\"demo_ds_master_1_slave_0\", DataSourceUtil.createDataSource(\"demo_ds_master_1_slave_0\"));\n    result.put(\"demo_ds_master_1_slave_1\", DataSourceUtil.createDataSource(\"demo_ds_master_1_slave_1\"));\n    return result;\n}\n\n.......\n.......\nshardingRuleConfig.setMasterSlaveRuleConfigs(getMasterSlaveRuleConfigurations());\nShardingDataSourceFactory.createDataSource(createDataSourceMap(), shardingRuleConfig, new HashMap(), new Properties());\n```. @cherrylzhao \nhere is my demo\nhttps://github.com/walkingWind/shardingjdbc-test\n. @cherrylzhao \nIt works. Thank you very much!. ",
    "biuabiu": "\u662f\u6211\u7b80\u5199\u4e86mysql\u7684host\u548cport,\u8bf7\u5b8c\u5584. ",
    "shaojie925": "It is not a duplicate question with #1688. I means the sharding tables of the same logical table all have the same table structure, so we don't need to load the table structure of each table from the database. we can cache the table structure of the same logical table and therefore reducing the startup time.. \n\n. ",
    "jizhidezhaojun": "Thanks for reply!\nI have another question.I found that there is no minimumPoolSize config in Sharding-Proxy 3.3.0.Is that true?Or it is exists and I just not found?\nThanks!. Got it,Thanks!. ",
    "daizf": "@terrymanu Brother liang:\nWhere can I get the source of sharding-jdbc-spring-namespace moudle for V3.1.0 ?. I hava the same trouble.\nAnd I think \"DefaultTables\" should not include ShardingTables. In case default database includes ShardingTables.. I think I have solved it in another way.\nBefore this, the \"ShardingTables\" and \"DefaultTables\" have shared the same database(such as  demodb_00). Now, I separate them with different database.\n. @joooohnli \n\nisCheckingMetaData = false\uff0cthen just fetch metadata for t_1;\nAnd the default value of isCheckingMetaData is false.. ",
    "imhager": "sharding.jdbc.datasource.names=ds0\nsharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource\nsharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver\nsharding.jdbc.datasource.ds0.url=jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&serverTimezone=GMT%2B8&useUnicode=true&useSSL=false\nsharding.jdbc.datasource.ds0.username=root\nsharding.jdbc.datasource.ds0.password=123456\n============== \u5206\u8868 =========\nsharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=ds0.t_user_$->{0..1}\nsharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.sharding-column=internal_id\nsharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.algorithm-expression=user_$->{internal_id.longValue() % 2}\n\u672a\u914d\u7f6e\u5206\u7247\u89c4\u5219\u7684\u8868\u5c06\u901a\u8fc7\u9ed8\u8ba4\u6570\u636e\u6e90\u5b9a\u4f4d\nsharding.jdbc.config.sharding.default-data-source-name=ds0\n\u6253\u5370sql\nsharding.jdbc.config.sharding.props.sql.show=true. After testing,  sharding-jdbc-spring-boot-starter:3.1.0 does not support spring-boot 2.x, so sad.. > We suggest to use ShardingSphere with versions [1.5.0.RELEASE,2.0.0.M1) for spring-boot,\n\nand versions [4.3.6.RELEASE,5.0.0.M1) for spring springframework.\nSo sorry for the trouble.\n\nWhen is the 2.1.x version supported?. > > You can use spring.main.allow-bean-definition-overriding=true configuration to resolve this error\n\n@imhager. Can this configuration solve your problem? If still has questions, please let us know.\n\nthank you for your help.\n```\nThe bean 'dataSource', defined in class path resource [io/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class] and overriding is disabled.\nAction:\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\n```\nif i set this value, shardingjdbc/SpringBootConfiguration.DataSource and DruidDataSourceAutoConfigure.DataSource will not affect each other, is it?\n. > No, DruidDataSourceAutoConfigure.DataSource will be override by shardingjdbc/SpringBootConfiguration.DataSource.\n\nIt means the bean 'dataSource' will be created by shardingjdbc/SpringBootConfiguration.DataSource instead of DruidDataSourceAutoConfigure.DataSource.\nI don't know your situation, so there is no guarantee that it will not affect you.\nWould you like try first in test environment? Or describe why you use DruidDataSourceAutoConfigure.DataSource?\n\nthanks ,i'll try my test.. ",
    "winrunwang": "\u7248\u672c\u53f7\u662fSharding-Sphere 3.0.0.M4. ",
    "TheRealHaui": "You are welcome!\nIf you want I can contribute even more Unit Tests.. ",
    "mcdull6226": "sharding-jdbc 3.0.0 runs normally, 3.1.0 cannot run on openjdk and 3.1.0 has this error on java:8 docker.. ",
    "sfiloveyou": "i have the same issue \nCaused by: java.lang.NoClassDefFoundError: com/atomikos/icatch/HeuristicMessage\n    at io.shardingsphere.transaction.xa.manager.AtomikosDataSourceBeanWrapper.(AtomikosDataSourceBeanWrapper.java:38) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\n    at io.shardingsphere.transaction.xa.manager.AtomikosTransactionManager.wrapDataSource(AtomikosTransactionManager.java:106) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\n    at io.shardingsphere.transaction.xa.convert.XADataSourceConverter.convert(XADataSourceConverter.java:54) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\n    at io.shardingsphere.transaction.core.datasource.ShardingTransactionalDataSource.(ShardingTransactionalDataSource.java:54) ~[sharding-transaction-core-3.1.0.jar:na]\n    at io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.(AbstractDataSourceAdapter.java:59) ~[sharding-jdbc-core-3.1.0.jar:na]\n    at io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.(ShardingDataSource.java:54) ~[sharding-jdbc-core-3.1.0.jar:na]\n    at io.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:51) ~[sharding-jdbc-core-3.1.0.jar:na]\n    at com.yiyunpower.yicloud.config.ShardingDruidDataSource.dataSource(ShardingDruidDataSource.java:117) ~[classes/:na]\n    at com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312.CGLIB$dataSource$5() ~[classes/:na]\n    at com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312$$FastClassBySpringCGLIB$$134a4f11.invoke() ~[classes/:na]\n    at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.20.RELEASE.jar:4.3.20.RELEASE]\n    at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.20.RELEASE.jar:4.3.20.RELEASE]\n    at com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312.dataSource() ~[classes/:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_151]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_151]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_151]\n    at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_151]\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.20.RELEASE.jar:4.3.20.RELEASE]\n    ... 90 common frames omitted\nCaused by: java.lang.ClassNotFoundException: com.atomikos.icatch.HeuristicMessage\n    at java.net.URLClassLoader.findClass(Unknown Source) ~[na:1.8.0_151]\n    at java.lang.ClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\n    at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\n    at java.lang.ClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\n    ... 108 common frames omitted. ",
    "weihengwang": "2. select * from x where A='abc';  modified to select * from x where A=?;  you can't write ='abc'. ",
    "songxu": "\nWhat is your expected behaviour if sharding value is null?\n\nI expected to thrown an exception.. ",
    "linyuliang": "I use sharding-jdbc for single database and sub-table\u3002\nmy sharding config file is sharding.yml :\n```\ndataSources:\n  shardingdb: !!org.apache.commons.dbcp.BasicDataSource\n    driverClassName: org.mariadb.jdbc.Driver\n    url: jdbc:mysql://Mysql:3306/test?useUnicode=true&characterEncoding=utf-8\n    username: test\n    password: test\n    initialSize: 3\n    minIdle: 3\n    maxIdle: 20\n    maxActive: 100\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1\n    testWhileIdle: true\n    testOnBorrow: true\n    testOnReturn: false\n    logAbandoned: true\n    removeAbandoned: true\n    removeAbandonedTimeout: 60\nshardingRule:\n  tables:\n#\u65b0\u589e\u7684mysql\u8868\u5206\u7247\u914d\u7f6e\napp_ap_offline_event:\n  tableStrategy:\n    standard:\n  #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n       preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n  #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n       rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n       shardingColumn: ymd\n\napp_network_flow_minute:\n  tableStrategy:\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\n\napp_rrm_radio_link_quality:\n  tableStrategy:\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\n\napp_sta_working_info_day:\n  tableStrategy:\n    #        inline:\n    #          shardingColumn: ymd\n    #          algorithmExpression: app_sta_working_info_day_${ymd}\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\napp_ap_offline_event_hour_stats:\n  tableStrategy:\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\napp_sta_flow_info:\n  tableStrategy:\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\napp_ap_offline_summary:\n  tableStrategy:\n    standard:\n      #\u7cbe\u786e\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8e=\u548cIN\n      preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      #\u8303\u56f4\u5206\u7247\u7b97\u6cd5\u7c7b\u540d\u79f0\uff0c\u7528\u4e8eBETWEEN\uff0c\u53ef\u9009\n      rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\n      shardingColumn: ymd\n\nbindingTables:\n#\u65b0\u589e\u7684mysql\u8868\u9700\u8981\u89c4\u5219\u7ed1\u5b9a\n- app_ap_offline_event\n- app_network_flow_minute\n- app_rrm_radio_link_quality\n- app_sta_working_info_day\n- app_ap_offline_event_hour_stats\n- app_sta_flow_info\n- app_ap_offline_summary\n\n```\nMy DateStringStandardShardingAlgorithm.java:\n```\nimport com.google.common.collect.Range;\nimport io.shardingsphere.api.algorithm.sharding.PreciseShardingValue;\nimport io.shardingsphere.api.algorithm.sharding.RangeShardingValue;\nimport io.shardingsphere.api.algorithm.sharding.standard.PreciseShardingAlgorithm;\nimport io.shardingsphere.api.algorithm.sharding.standard.RangeShardingAlgorithm;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport java.text.ParseException;\nimport java.util.*;\npublic class DateStringStandardShardingAlgorithm extends BaseShardingFilter implements PreciseShardingAlgorithm, RangeShardingAlgorithm {\n    private static final Logger logger = LoggerFactory.getLogger(DateStringStandardShardingAlgorithm.class);\n@Override\npublic String doSharding(Collection<String> availableTargetNames, PreciseShardingValue<String> shardingValue) {\n\n//*** shardingValue.getLogicTableName()  is error ******\n        return getTableName(shardingValue.getLogicTableName() , \"_\" + shardingValue.getValue());\n    }\n@Override\npublic Collection<String> doSharding(Collection<String> availableTargetNames,\n                                     RangeShardingValue<String> shardingValue) {\n\n    List<String> result = new ArrayList<>();\n    Range<String> ranges = shardingValue.getValueRange();\n    final String logicTableName = shardingValue.getLogicTableName();\n    Date startTime;\n    try {\n        startTime = YYYYMMDD.parse(ranges.lowerEndpoint());\n    } catch (ParseException e) {\n        throw new RuntimeException(\"table\" + logicTableName + \" timeRange start parameter not yyyyMMdd format error:\" + ranges.lowerEndpoint());\n    }\n    Date endTime;\n    try {\n        endTime = YYYYMMDD.parse(ranges.upperEndpoint());\n    } catch (ParseException e) {\n        throw new RuntimeException(\"table\" + logicTableName + \" timeRange end parameter not yyyyMMdd format error:\" + ranges.lowerEndpoint());\n    }\n    // \u6b64\u5904\u5e94\u8be5\u8fd4\u56de tablePrefix+201808 , tablePrefix+201809,tablePrefix+201810,\n    Calendar cal = Calendar.getInstance();\n\n    result = getTableNames(result, startTime, endTime, cal, logicTableName);\n\n    return result;\n}\n\n}\n```. YamlConfigurationExampleTest.java:\n```\n/\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n /\npackage io.shardingsphere.example.jdbc;\nimport io.shardingsphere.example.config.ExampleConfiguration;\nimport io.shardingsphere.example.jdbc.nodep.YamlConfigurationExample;\nimport io.shardingsphere.example.jdbc.nodep.config.ShardingTablesConfigurationPrecise;\nimport io.shardingsphere.example.repository.api.service.CommonService;\nimport io.shardingsphere.example.repository.jdbc.repository.JDBCOrderItemRepositoryImpl;\nimport io.shardingsphere.example.repository.jdbc.repository.JDBCOrderRepositoryImpl;\nimport io.shardingsphere.example.repository.jdbc.service.RawPojoService;\nimport io.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory;\nimport org.junit.Before;\nimport org.junit.Test;\nimport javax.sql.DataSource;\nimport java.io.File;\nimport java.io.IOException;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.atomic.AtomicLong;\npublic class YamlConfigurationExampleTest {\nprivate File yamlFile = new File(YamlConfigurationExample.class.getResource(\"/META-INF/sharding-tables.yaml\").getFile());\n\n@Before\npublic void setUp() throws SQLException, IOException {\n    DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(yamlFile);\n    CommonService commonService = new RawPojoService(new JDBCOrderRepositoryImpl(dataSource), new JDBCOrderItemRepositoryImpl(dataSource));\n    commonService.initEnvironment();\n}\n\n@Test\npublic void assertTableShardingMultiThread() throws SQLException, InterruptedException, IOException {\n    final DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(yamlFile);\n    ExecutorService executorService = Executors.newFixedThreadPool(10);\n    final CountDownLatch latch = new CountDownLatch(100);\n    final AtomicLong orderId = new AtomicLong(0);\n    for (int i = 0; i < 100; i++) {\n        executorService.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    executeQuery(dataSource, 0L);\n                    latch.countDown();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n        executorService.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    executeQueryOrderItem(dataSource, 1L);\n                    latch.countDown();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n    }\n    latch.await();\n}\n\nprivate void executeQuery(final DataSource dataSource, final Long orderId) throws SQLException {\n    String sql = \"select * from t_order where order_id = ?\";\n    try (Connection connection = dataSource.getConnection();\n         PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\n        preparedStatement.setLong(1, orderId);\n        preparedStatement.execute();\n    }\n}\n\nprivate void executeQueryOrderItem(final DataSource dataSource, final Long orderId) throws SQLException {\n    String sql = \"select * from t_order_item where order_id = ?\";\n    try (Connection connection = dataSource.getConnection();\n         PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\n        preparedStatement.setLong(1, orderId);\n        preparedStatement.execute();\n    }\n}\n\n}\n```\nPreciseModuloShardingTableAlgorithm.java\n```\n/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.example.algorithm;\nimport io.shardingsphere.api.algorithm.sharding.PreciseShardingValue;\nimport io.shardingsphere.api.algorithm.sharding.standard.PreciseShardingAlgorithm;\nimport java.util.Collection;\npublic class PreciseModuloShardingTableAlgorithm implements PreciseShardingAlgorithm {\n@Override\npublic String doSharding(final Collection<String> tableNames, final PreciseShardingValue<Long> shardingValue) {\n    System.out.println(shardingValue.getLogicTableName()+\":\"+shardingValue.getColumnName()+\":\"+shardingValue.getValue());\n    for (String each : tableNames) {\n        if (each.endsWith(shardingValue.getValue() % 2 + \"\")) {\n            return each;\n        }\n    }\n    throw new UnsupportedOperationException();\n}\n\n}\n```\nExpected print:\nt_order:order_id:0\nt_order_item:order_id:1\nActual print:\nt_order:order_id:0\nt_order:order_id:1\nt_order_item:order_id:0\nt_order_item:order_id:1\n. From your screenshot, it's still wrong.\nThe select sqls are\uff1a\nSelect * from t_order where order_id=0\nor\nselect * from t_order_item where order_id=1\nbut the 5th line it print:\nt_order:order_id:1. would you post the patch file link please\uff1fI want to merge it in Version 3.1.0 .. thanks\uff0cit seems work.  The modified file\uff1a\n```\n/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\nimport com.google.common.base.Optional;\nimport com.google.common.base.Preconditions;\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.FromWhereSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableJoinSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableSegment;\nimport org.antlr.v4.runtime.ParserRuleContext;\nimport org.antlr.v4.runtime.tree.TerminalNode;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n/\n * From clause extractor.\n \n * @author duhongjun\n /\npublic final class FromWhereExtractor implements OptionalSQLSegmentExtractor {\nprivate final TableNameExtractor tableNameExtractor = new TableNameExtractor();\n\nprivate PredicateExtractor predicateSegmentExtractor = new PredicateExtractor(new HashMap<>());\n\n@Override\npublic Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode) {\n    return extract(ancestorNode, ancestorNode);\n}\n\n/**\n * Extract SQL segment from SQL AST.\n *\n * @param ancestorNode ancestor node of AST\n * @param rootNode root node of AST\n * @return SQL segment\n */\npublic Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode, final ParserRuleContext rootNode) {\n    Optional<ParserRuleContext> selectClauseNode = ExtractorUtils.findFirstChildNode(ancestorNode, RuleName.SELECT_CLAUSE);\n    if (!selectClauseNode.isPresent()) {\n        return Optional.absent();\n    }\n    Optional<ParserRuleContext> fromNode = ExtractorUtils.findFirstChildNodeNoneRecursive(selectClauseNode.get().getParent(), RuleName.FROM_CLAUSE);\n    if (!fromNode.isPresent()) {\n        return Optional.absent();\n    }\n    Collection<ParserRuleContext> tableReferenceNodes = ExtractorUtils.getAllDescendantNodes(fromNode.get(), RuleName.TABLE_REFERENCE);\n    if (tableReferenceNodes.isEmpty()) {\n        return Optional.absent();\n    }\n    FromWhereSegment result = new FromWhereSegment();\n\n//        predicateSegmentExtractor = new PredicateExtractor(result.getTableAliases());\n        Collection questionNodes = ExtractorUtils.getAllDescendantNodes(rootNode, RuleName.QUESTION);\n        result.setParameterCount(questionNodes.size());\n        Map questionNodeIndexMap = getPlaceholderAndNodeIndexMap(questionNodes);\n        extractAndFillTableSegment(result, tableReferenceNodes, questionNodeIndexMap);\n        extractAndFillWhere(result, questionNodeIndexMap, fromNode.get().getParent());\n        return Optional.of(result);\n    }\nprivate Map<ParserRuleContext, Integer> getPlaceholderAndNodeIndexMap(final Collection<ParserRuleContext> questionNodes) {\n    Map<ParserRuleContext, Integer> result = new HashMap<>(questionNodes.size(), 1);\n    int index = 0;\n    for (ParserRuleContext each : questionNodes) {\n        result.put(each, index++);\n    }\n    return result;\n}\n\nprivate void extractAndFillTableSegment(final FromWhereSegment fromWhereSegment,\n                                        final Collection<ParserRuleContext> tableReferenceNodes, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    for (ParserRuleContext each : tableReferenceNodes) {\n        for (int i = 0; i < each.getChildCount(); i++) {\n            if (each.getChild(i) instanceof TerminalNode) {\n                continue;\n            }\n            ParserRuleContext childNode = (ParserRuleContext) each.getChild(i);\n            if (RuleName.TABLE_REFERENCES.getName().equals(childNode.getClass().getSimpleName())) {\n                Collection<ParserRuleContext> subTableReferenceNodes = ExtractorUtils.getAllDescendantNodes(childNode, RuleName.TABLE_REFERENCE);\n                if (!subTableReferenceNodes.isEmpty()) {\n                    extractAndFillTableSegment(fromWhereSegment, subTableReferenceNodes, questionNodeIndexMap);\n                }\n                continue;\n            }\n            fillTable(fromWhereSegment, childNode, questionNodeIndexMap);\n        }\n    }\n}\n\nprivate void fillTable(final FromWhereSegment fromWhereSegment, final ParserRuleContext joinOrTableFactorNode, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    if (!RuleName.JOIN_TABLE.getName().endsWith(joinOrTableFactorNode.getClass().getSimpleName())) {\n        Optional<TableSegment> tableSegment = tableNameExtractor.extract(joinOrTableFactorNode);\n        Preconditions.checkState(tableSegment.isPresent());\n        fillTableResult(fromWhereSegment, tableSegment.get());\n    }\n    Optional<ParserRuleContext> joinConditionNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.JOIN_CONDITION);\n    if (!joinConditionNode.isPresent()) {\n        return;\n    }\n    Optional<ParserRuleContext> tableFactorNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.TABLE_FACTOR);\n    Preconditions.checkState(tableFactorNode.isPresent());\n    Optional<TableSegment> tableSegment = tableNameExtractor.extract(tableFactorNode.get());\n    Preconditions.checkState(tableSegment.isPresent());\n    TableJoinSegment tableJoinResult = new TableJoinSegment(tableSegment.get());\n    Optional<OrConditionSegment> conditionResult = buildCondition(joinConditionNode.get(), questionNodeIndexMap);\n    if (conditionResult.isPresent()) {\n        tableJoinResult.getJoinConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\n        fromWhereSegment.getConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\n    }\n    fillTableResult(fromWhereSegment, tableJoinResult);\n}\n\nprivate void fillTableResult(final FromWhereSegment fromWhereSegment, final TableSegment tableSegment) {\n    String alias = tableSegment.getName();\n    if (tableSegment.getAlias().isPresent()) {\n        alias = tableSegment.getAlias().get();\n    }\n    fromWhereSegment.getTableAliases().put(alias, tableSegment.getName());\n}\n\nprivate void extractAndFillWhere(final FromWhereSegment fromWhereSegment, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext ancestorNode) {\n    Optional<ParserRuleContext> whereNode = ExtractorUtils.findFirstChildNodeNoneRecursive(ancestorNode, RuleName.WHERE_CLAUSE);\n    if (!whereNode.isPresent()) {\n        return;\n    }\n    Optional<OrConditionSegment> conditions = buildCondition((ParserRuleContext) whereNode.get().getChild(1), questionNodeIndexMap);\n    if (conditions.isPresent()) {\n        fromWhereSegment.getConditions().getAndConditions().addAll(conditions.get().getAndConditions());\n    }\n}\n\nprivate Optional<OrConditionSegment> buildCondition(final ParserRuleContext node, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    Optional<ParserRuleContext> exprNode = ExtractorUtils.findFirstChildNode(node, RuleName.EXPR);\n    return exprNode.isPresent() ? predicateSegmentExtractor.extractCondition(questionNodeIndexMap, exprNode.get()) : Optional.<OrConditionSegment>absent();\n}\n\n}\n```. @codefairy08\nIs your code based on version 3.1.0?\n Is version 3.1.0  the latest release version?\n I don't want to change too much code based on version 3.1.0.  Based on your code and version 3.1.0, I merged code like this:\nExpressionExtractor.java:\n```\n/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\nimport com.google.common.base.Optional;\nimport com.google.common.base.Preconditions;\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\nimport io.shardingsphere.core.parsing.antlr.extractor.impl.dql.SubqueryExtractor;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.expr.*;\nimport io.shardingsphere.core.parsing.lexer.token.Symbol;\nimport io.shardingsphere.core.util.SQLUtil;\nimport org.antlr.v4.runtime.ParserRuleContext;\nimport org.antlr.v4.runtime.tree.ParseTree;\nimport org.antlr.v4.runtime.tree.TerminalNode;\nimport java.util.HashMap;\n/\n * Expression extractor.\n \n * @author duhongjun\n /\npublic final class ExpressionExtractor implements OptionalSQLSegmentExtractor {\n@Override\npublic Optional<? extends ExpressionSegment> extract(final ParserRuleContext expressionNode) {\n    String firstChildText = expressionNode.getText();\n    if (firstChildText.endsWith(Symbol.STAR.getLiterals())) {\n        return Optional.of(getStarExpressionSegment(expressionNode, firstChildText));\n    }\n    Optional<ParserRuleContext> subqueryNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.SUBQUERY);\n    return subqueryNode.isPresent() ? new SubqueryExtractor().extract(subqueryNode.get()) : Optional.of(getExpressionWithAliasSegment(expressionNode));\n}\n\nprivate ExpressionSegment getStarExpressionSegment(final ParserRuleContext expressionNode, final String text) {\n    StarExpressionSegment result = new StarExpressionSegment(expressionNode.getStart().getStartIndex());\n    if (text.contains(Symbol.DOT.getLiterals())) {\n        result.setOwner(SQLUtil.getExactlyValue(text.substring(0, text.indexOf(Symbol.DOT.getLiterals()))));\n    }\n    return result;\n}\n\nprivate ExpressionWithAliasSegment getExpressionWithAliasSegment(final ParserRuleContext expressionNode) {\n    ExpressionWithAliasSegment result;\n    Optional<ParserRuleContext> functionNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.FUNCTION_CALL);\n    if (functionNode.isPresent()) {\n        result = getFunctionExpressionSegment(expressionNode, functionNode.get());\n    } else if (RuleName.COLUMN_NAME.getName().equals(expressionNode.getChild(0).getClass().getSimpleName())) {\n        result = getPropertyExpressionSegment(expressionNode);\n    } else {\n        result = new CommonExpressionSegment(expressionNode.getStart().getStartIndex(), expressionNode.getStop().getStopIndex());\n    }\n    Optional<String> alias = getAlias(expressionNode);\n    if (alias.isPresent()) {\n        result.setAlias(alias.get());\n    }\n    return result;\n}\n\nprivate ExpressionWithAliasSegment getFunctionExpressionSegment(final ParserRuleContext expressionNode, final ParserRuleContext functionNode) {\n    String functionName = functionNode.getChild(0).getText();\n    int startIndex = ((TerminalNode) functionNode.getChild(1)).getSymbol().getStartIndex();\n    int distinctColumnNameStartPosition = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.DISTINCT).isPresent() ? calculateDistinctColumnNamePosition(functionNode) : -1;\n    return new FunctionExpressionSegment(functionName, functionNode.getStart().getStartIndex(), startIndex, functionNode.getStop().getStopIndex(), distinctColumnNameStartPosition);\n}\n\nprivate int calculateDistinctColumnNamePosition(final ParserRuleContext functionNode) {\n    ParseTree distinctItemNode = functionNode.getChild(3);\n    if (distinctItemNode instanceof TerminalNode) {\n        return ((TerminalNode) distinctItemNode).getSymbol().getStartIndex();\n    }\n    if (distinctItemNode instanceof ParserRuleContext) {\n        return ((ParserRuleContext) distinctItemNode).getStart().getStartIndex();\n    }\n    return -1;\n}\n\nprivate ExpressionWithAliasSegment getPropertyExpressionSegment(final ParserRuleContext expressionNode) {\n    ParserRuleContext columnNode = (ParserRuleContext) expressionNode.getChild(0);\n    Optional<ColumnSegment> columnSegment = new ColumnSegmentExtractor(new HashMap<String, String>()).extract(columnNode);\n    Preconditions.checkState(columnSegment.isPresent());\n    return new PropertyExpressionSegment(columnSegment.get().getOwner(), columnSegment.get().getName(), columnNode.getStart().getStartIndex(), columnNode.getStop().getStopIndex());\n}\n\nprivate Optional<String> getAlias(final ParserRuleContext expressionNode) {\n    Optional<ParserRuleContext> aliasNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.ALIAS);\n    return aliasNode.isPresent() ? Optional.of(SQLUtil.getExactlyValue(aliasNode.get().getText())) : Optional.absent();\n}\n\n}\n```\nFromWhereExtractor .java\n```\n/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\nimport com.google.common.base.Optional;\nimport com.google.common.base.Preconditions;\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.FromWhereSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableJoinSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableSegment;\nimport org.antlr.v4.runtime.ParserRuleContext;\nimport org.antlr.v4.runtime.tree.TerminalNode;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n/\n * From clause extractor.\n \n * @author duhongjun\n /\npublic final class FromWhereExtractor implements OptionalSQLSegmentExtractor {\nprivate final TableNameExtractor tableNameExtractor = new TableNameExtractor();\n\nprivate PredicateExtractor predicateSegmentExtractor = new PredicateExtractor();\n\n@Override\npublic Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode) {\n    return extract(ancestorNode, ancestorNode);\n}\n\n/**\n * Extract SQL segment from SQL AST.\n *\n * @param ancestorNode ancestor node of AST\n * @param rootNode root node of AST\n * @return SQL segment\n */\npublic Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode, final ParserRuleContext rootNode) {\n    Optional<ParserRuleContext> selectClauseNode = ExtractorUtils.findFirstChildNode(ancestorNode, RuleName.SELECT_CLAUSE);\n    if (!selectClauseNode.isPresent()) {\n        return Optional.absent();\n    }\n    Optional<ParserRuleContext> fromNode = ExtractorUtils.findFirstChildNodeNoneRecursive(selectClauseNode.get().getParent(), RuleName.FROM_CLAUSE);\n    if (!fromNode.isPresent()) {\n        return Optional.absent();\n    }\n    Collection<ParserRuleContext> tableReferenceNodes = ExtractorUtils.getAllDescendantNodes(fromNode.get(), RuleName.TABLE_REFERENCE);\n    if (tableReferenceNodes.isEmpty()) {\n        return Optional.absent();\n    }\n    FromWhereSegment result = new FromWhereSegment();\n    Collection<ParserRuleContext> questionNodes = ExtractorUtils.getAllDescendantNodes(rootNode, RuleName.QUESTION);\n    result.setParameterCount(questionNodes.size());\n    Map<ParserRuleContext, Integer> questionNodeIndexMap = getPlaceholderAndNodeIndexMap(questionNodes);\n    extractAndFillTableSegment(result, tableReferenceNodes, questionNodeIndexMap);\n    extractAndFillWhere(result, questionNodeIndexMap, fromNode.get().getParent());\n    return Optional.of(result);\n}\n\nprivate Map<ParserRuleContext, Integer> getPlaceholderAndNodeIndexMap(final Collection<ParserRuleContext> questionNodes) {\n    Map<ParserRuleContext, Integer> result = new HashMap<>(questionNodes.size(), 1);\n    int index = 0;\n    for (ParserRuleContext each : questionNodes) {\n        result.put(each, index++);\n    }\n    return result;\n}\n\nprivate void extractAndFillTableSegment(final FromWhereSegment fromWhereSegment,\n                                        final Collection<ParserRuleContext> tableReferenceNodes, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    for (ParserRuleContext each : tableReferenceNodes) {\n        for (int i = 0; i < each.getChildCount(); i++) {\n            if (each.getChild(i) instanceof TerminalNode) {\n                continue;\n            }\n            ParserRuleContext childNode = (ParserRuleContext) each.getChild(i);\n            if (RuleName.TABLE_REFERENCES.getName().equals(childNode.getClass().getSimpleName())) {\n                Collection<ParserRuleContext> subTableReferenceNodes = ExtractorUtils.getAllDescendantNodes(childNode, RuleName.TABLE_REFERENCE);\n                if (!subTableReferenceNodes.isEmpty()) {\n                    extractAndFillTableSegment(fromWhereSegment, subTableReferenceNodes, questionNodeIndexMap);\n                }\n                continue;\n            }\n            fillTable(fromWhereSegment, childNode, questionNodeIndexMap);\n        }\n    }\n}\n\nprivate void fillTable(final FromWhereSegment fromWhereSegment, final ParserRuleContext joinOrTableFactorNode, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    if (!RuleName.JOIN_TABLE.getName().endsWith(joinOrTableFactorNode.getClass().getSimpleName())) {\n        Optional<TableSegment> tableSegment = tableNameExtractor.extract(joinOrTableFactorNode);\n        Preconditions.checkState(tableSegment.isPresent());\n        fillTableResult(fromWhereSegment, tableSegment.get());\n    }\n    Optional<ParserRuleContext> joinConditionNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.JOIN_CONDITION);\n    if (!joinConditionNode.isPresent()) {\n        return;\n    }\n    Optional<ParserRuleContext> tableFactorNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.TABLE_FACTOR);\n    Preconditions.checkState(tableFactorNode.isPresent());\n    Optional<TableSegment> tableSegment = tableNameExtractor.extract(tableFactorNode.get());\n    Preconditions.checkState(tableSegment.isPresent());\n    TableJoinSegment tableJoinResult = new TableJoinSegment(tableSegment.get());\n    Optional<OrConditionSegment> conditionResult = buildCondition(fromWhereSegment.getTableAliases(), joinConditionNode.get(), questionNodeIndexMap);\n    if (conditionResult.isPresent()) {\n        tableJoinResult.getJoinConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\n        fromWhereSegment.getConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\n    }\n    fillTableResult(fromWhereSegment, tableJoinResult);\n}\n\nprivate void fillTableResult(final FromWhereSegment fromWhereSegment, final TableSegment tableSegment) {\n    String alias = tableSegment.getName();\n    if (tableSegment.getAlias().isPresent()) {\n        alias = tableSegment.getAlias().get();\n    }\n    fromWhereSegment.getTableAliases().put(alias, tableSegment.getName());\n}\n\nprivate void extractAndFillWhere(final FromWhereSegment fromWhereSegment, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext ancestorNode) {\n    Optional<ParserRuleContext> whereNode = ExtractorUtils.findFirstChildNodeNoneRecursive(ancestorNode, RuleName.WHERE_CLAUSE);\n    if (!whereNode.isPresent()) {\n        return;\n    }\n    Optional<OrConditionSegment> conditions = buildCondition(fromWhereSegment.getTableAliases(), (ParserRuleContext) whereNode.get().getChild(1), questionNodeIndexMap);\n    if (conditions.isPresent()) {\n        fromWhereSegment.getConditions().getAndConditions().addAll(conditions.get().getAndConditions());\n    }\n}\n\nprivate Optional<OrConditionSegment> buildCondition(final Map<String, String> tableAlias, final ParserRuleContext node, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\n    Optional<ParserRuleContext> exprNode = ExtractorUtils.findFirstChildNode(node, RuleName.EXPR);\n    return exprNode.isPresent() ? predicateSegmentExtractor.extractCondition(tableAlias, questionNodeIndexMap, exprNode.get()) : Optional.absent();\n}\n\n}\n```\nPredicateExtractor.java\n```\n/\n * Copyright 2016-2018 shardingsphere.io.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *     http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n/\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\nimport com.google.common.base.Optional;\nimport com.google.common.base.Preconditions;\nimport io.shardingsphere.core.constant.ShardingOperator;\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.LogicalOperator;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.Paren;\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.AndConditionSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.PredicateSegment;\nimport io.shardingsphere.core.parsing.antlr.sql.segment.expr.*;\nimport io.shardingsphere.core.parsing.lexer.token.DefaultKeyword;\nimport io.shardingsphere.core.parsing.lexer.token.Symbol;\nimport io.shardingsphere.core.util.NumberUtil;\nimport lombok.RequiredArgsConstructor;\nimport org.antlr.v4.runtime.ParserRuleContext;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\n/\n * Predicate extractor.\n \n * @author duhongjun\n /\n@RequiredArgsConstructor\npublic final class PredicateExtractor implements OptionalSQLSegmentExtractor {\n@Override\npublic Optional<PredicateSegment> extract(final ParserRuleContext ancestorNode) {\n    throw new RuntimeException();\n}\n\n/**\n * Extract SQL segment from SQL AST.\n *\n * @param questionNodeIndexMap question node map\n * @param exprNode             expression node of AST\n * @return or condition\n */\npublic Optional<OrConditionSegment> extractCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\n    int index = -1;\n    for (int i = 0; i < exprNode.getChildCount(); i++) {\n        if (LogicalOperator.isLogicalOperator(exprNode.getChild(i).getText())) {\n            index = i;\n            break;\n        }\n    }\n    if (index > 0) {\n        Optional<OrConditionSegment> leftOrCondition = extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index - 1));\n        Optional<OrConditionSegment> rightOrCondition = extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index + 1));\n        if (leftOrCondition.isPresent() && rightOrCondition.isPresent()) {\n            return Optional.of(mergeCondition(leftOrCondition.get(), rightOrCondition.get(), exprNode.getChild(index).getText()));\n        }\n        return leftOrCondition.isPresent() ? leftOrCondition : rightOrCondition;\n    }\n    return extractConditionForParen(tableAlias, questionNodeIndexMap, exprNode);\n}\n\nprivate OrConditionSegment mergeCondition(final OrConditionSegment leftOrCondition, final OrConditionSegment rightOrCondition, final String operator) {\n    if (LogicalOperator.isOrOperator(operator)) {\n        leftOrCondition.getAndConditions().addAll(rightOrCondition.getAndConditions());\n        return leftOrCondition;\n    }\n    OrConditionSegment result = new OrConditionSegment();\n    for (AndConditionSegment each : leftOrCondition.getAndConditions()) {\n        for (AndConditionSegment eachRightOr : rightOrCondition.getAndConditions()) {\n            AndConditionSegment tempList = new AndConditionSegment();\n            tempList.getConditions().addAll(each.getConditions());\n            tempList.getConditions().addAll(eachRightOr.getConditions());\n            result.getAndConditions().add(tempList);\n        }\n    }\n    return result;\n}\n\nprivate Optional<OrConditionSegment> extractConditionForParen(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\n    int index = -1;\n    for (int i = 0; i < exprNode.getChildCount(); i++) {\n        if (Paren.isLeftParen(exprNode.getChild(i).getText())) {\n            index = i;\n            break;\n        }\n    }\n    if (-1 != index) {\n        Preconditions.checkState(Paren.match(exprNode.getChild(index).getText(), exprNode.getChild(index + 2).getText()), \"Missing right paren.\");\n        if (RuleName.EXPR.getName().equals(exprNode.getChild(index + 1).getClass().getSimpleName())) {\n            return extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index + 1));\n        }\n        return Optional.absent();\n    }\n    Optional<ConditionSegment> condition = buildCondition(tableAlias, questionNodeIndexMap, exprNode);\n    if (!condition.isPresent()) {\n        return Optional.absent();\n    }\n    OrConditionSegment result = new OrConditionSegment();\n    AndConditionSegment newAndCondition = new AndConditionSegment();\n    newAndCondition.getConditions().add(condition.get());\n    result.getAndConditions().add(newAndCondition);\n    return Optional.of(result);\n}\n\nprivate Optional<ConditionSegment> buildCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\n    Optional<ConditionSegment> result = buildEqualCondition(tableAlias, questionNodeIndexMap, exprNode);\n    if (result.isPresent()) {\n        return result;\n    }\n    return buildPredicateCondition(tableAlias, questionNodeIndexMap, exprNode);\n}\n\nprivate Optional<ConditionSegment> buildEqualCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\n    Optional<ParserRuleContext> comparisionNode = ExtractorUtils.findFirstChildNode(exprNode, RuleName.COMPARISON_OPERATOR);\n    if (!comparisionNode.isPresent() || !isValidEqualCondition(comparisionNode.get())) {\n        return Optional.absent();\n    }\n    Optional<ParserRuleContext> leftNode = ExtractorUtils.findFirstChildNode((ParserRuleContext) comparisionNode.get().parent.getChild(0), RuleName.COLUMN_NAME);\n    Optional<ParserRuleContext> rightNode = ExtractorUtils.findFirstChildNode((ParserRuleContext) comparisionNode.get().parent.getChild(2), RuleName.COLUMN_NAME);\n    if (!leftNode.isPresent() && !rightNode.isPresent()) {\n        return Optional.absent();\n    }\n    if (leftNode.isPresent() && rightNode.isPresent()) {\n        Optional<ColumnSegment> leftColumn = buildColumn(tableAlias, leftNode.get());\n        Optional<ColumnSegment> rightColumn = buildColumn(tableAlias, rightNode.get());\n        Preconditions.checkState(leftColumn.isPresent() && rightColumn.isPresent());\n        return Optional.of(new ConditionSegment(leftColumn.get(), ShardingOperator.EQUAL, rightColumn.get()));\n    }\n    Optional<ColumnSegment> column = buildColumn(tableAlias, exprNode);\n    Preconditions.checkState(column.isPresent());\n    ParserRuleContext valueNode = leftNode.isPresent() ? (ParserRuleContext) comparisionNode.get().parent.getChild(2) : (ParserRuleContext) comparisionNode.get().parent.getChild(0);\n    Optional<? extends ExpressionSegment> sqlExpression = buildExpression(questionNodeIndexMap, valueNode);\n    return sqlExpression.isPresent()\n            ? Optional.of(new ConditionSegment(column.get(), ShardingOperator.EQUAL, new EqualsValueExpressionSegment(sqlExpression.get()))) : Optional.absent();\n}\n\nprivate boolean isValidEqualCondition(final ParserRuleContext comparisionNode) {\n    return Symbol.EQ.getLiterals().equalsIgnoreCase(comparisionNode.getText()) && 3 == comparisionNode.getParent().getChildCount();\n}\n\nprivate Optional<? extends ExpressionSegment> buildExpression(final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext valueNode) {\n    Optional<? extends ExpressionSegment> sqlExpression = new ExpressionExtractor().extract(valueNode);\n    if (!sqlExpression.isPresent() || !(sqlExpression.get() instanceof CommonExpressionSegment)) {\n        return sqlExpression;\n    }\n    CommonExpressionSegment commonExpressionSegment = (CommonExpressionSegment) sqlExpression.get();\n    Optional<ParserRuleContext> expressionNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.QUESTION);\n    if (expressionNode.isPresent()) {\n        Integer index = questionNodeIndexMap.get(expressionNode.get());\n        commonExpressionSegment.setIndex(index);\n    } else {\n        Optional<ParserRuleContext> bitExprNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.BIT_EXPR);\n        expressionNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.NUMBER);\n        if (expressionNode.isPresent() && (!bitExprNode.isPresent() || 1 == bitExprNode.get().getChildCount())) {\n            commonExpressionSegment.setValue(NumberUtil.getExactlyNumber(expressionNode.get().getText(), 10));\n        }\n    }\n    return sqlExpression;\n}\n\nprivate Optional<ConditionSegment> buildPredicateCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\n    Optional<ParserRuleContext> predicateNode = ExtractorUtils.findFirstChildNode(exprNode, RuleName.PREDICATE);\n    if (!predicateNode.isPresent()) {\n        return Optional.absent();\n    }\n    if (1 != predicateNode.get().getParent().getChildCount()) {\n        return Optional.absent();\n    }\n    if (5 == predicateNode.get().getChildCount() && DefaultKeyword.BETWEEN.name().equalsIgnoreCase(predicateNode.get().getChild(1).getText())) {\n        Optional<ConditionSegment> result = buildBetweenCondition(tableAlias, questionNodeIndexMap, predicateNode.get());\n        if (result.isPresent()) {\n            return result;\n        }\n    }\n    if (5 <= predicateNode.get().getChildCount() && DefaultKeyword.IN.name().equalsIgnoreCase(predicateNode.get().getChild(1).getText())) {\n        Optional<ConditionSegment> result = buildInCondition(tableAlias, questionNodeIndexMap, predicateNode.get());\n        if (result.isPresent()) {\n            return result;\n        }\n    }\n    return Optional.absent();\n}\n\nprivate Optional<ConditionSegment> buildBetweenCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext predicateNode) {\n    Optional<ColumnSegment> column = buildColumn(tableAlias, (ParserRuleContext) predicateNode.getChild(0));\n    if (!column.isPresent()) {\n        return Optional.absent();\n    }\n    Optional<? extends ExpressionSegment> beginSQLExpression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(2));\n    Optional<? extends ExpressionSegment> endSQLExpression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(4));\n    if (beginSQLExpression.isPresent() && endSQLExpression.isPresent()) {\n        return Optional.of(new ConditionSegment(column.get(), ShardingOperator.BETWEEN, new BetweenValueExpressionSegment(beginSQLExpression.get(), endSQLExpression.get())));\n    }\n    return Optional.absent();\n}\n\nprivate Optional<ConditionSegment> buildInCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext predicateNode) {\n    Optional<ColumnSegment> column = buildColumn(tableAlias, (ParserRuleContext) predicateNode.getChild(0));\n    if (!column.isPresent()) {\n        return Optional.absent();\n    }\n    List<ExpressionSegment> sqlExpressions = new LinkedList<>();\n    for (int i = 3; i < predicateNode.getChildCount(); i++) {\n        if (RuleName.SIMPLE_EXPR.getName().equals(predicateNode.getChild(i).getClass().getSimpleName())) {\n            Optional<? extends ExpressionSegment> expression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(i));\n            if (!expression.isPresent()) {\n                sqlExpressions.clear();\n                break;\n            }\n            sqlExpressions.add(expression.get());\n        }\n    }\n    if (!sqlExpressions.isEmpty()) {\n        InValueExpressionSegment inExpressionSegment = new InValueExpressionSegment();\n        inExpressionSegment.getSqlExpressions().addAll(sqlExpressions);\n        return Optional.of(new ConditionSegment(column.get(), ShardingOperator.IN, inExpressionSegment));\n    }\n    return Optional.absent();\n}\n\nprivate Optional<ColumnSegment> buildColumn(final Map<String, String> tableAlias, final ParserRuleContext parentNode) {\n    return new ColumnSegmentExtractor(tableAlias).extract(parentNode);\n}\n\n}\n```. After modification, in my environment 3.1.0 Version, it works, can be closed. ",
    "mfeng-ya": "Table not sharding, used default datasource. Which version is stable and usable now? . new question\nShardingRule i think is singleton\n\n\norg.apache.commons.collections4.map.ReferenceMap is not thread-safe, cache used with it no problem in multi thread concurrent?\n\n. Could change  field 'parsingResultCache' to #ThreadLocal in #ShardingRule?. @codefairy08 ParsingResultCache  may be could refer to the ConcurrentReferenceHashMap in hibernate-validator's util package \n\n. @codefairy08 I see, however it's a new question. @terrymanu You're right\uff0chowever it's also good to provide another way for users to choose for themselves.. and might perform better. Users must be aware of the impact , only take effect with sharding sphere datasource. @joooohnli You can try to switch data sources on your own.. ",
    "cocoyadi": "Full sharding configuration as below:\n```\n@Configuration\n@MapperScan(basePackages = {\"com.xxx.mapper.content\"}, sqlSessionFactoryRef = \"contentSqlSessionFactory\")\npublic class ContentConfiguration {\n    private static final String CONTENT_DATABASE = \"database\";\n    private static final String CONTENT_TABLES = \"table\";\n@Value(\"${spring.datasource.type}\")\nprivate Class<? extends DataSource> dataSourceType;\n\n@Value(\"${datasource.content.url}\")\nprivate String url;\n\n@Value(\"${datasource.content.username}\")\nprivate String username;\n\n@Value(\"${datasource.content.password}\")\nprivate String password;\n\n/**\n * create  datasource map\n * @return\n */\nprivate Map<String, DataSource> createContentDataSourceMap() {\n    Map<String, DataSource> result = new HashMap<>();\n    String databaseName = null;\n    for(int i =0; i<4;i++){\n       databaseName = CONTENT_DATABASE+\"_\"+i;\n       result.put(databaseName, createContentDataSource(databaseName));\n    }\n    return result;\n}\n\n/**\n * create datasource\n * @param dataSourceName\n * @return\n */\nprivate DataSource createContentDataSource(final String dataSourceName) {\n    DruidDataSource datasource = new DruidDataSource();\n    datasource.setDriverClassName(com.mysql.jdbc.Driver.class.getName());\n    String[] urls = url.split(\"\\\\?\");\n    datasource.setUrl(urls[0]+dataSourceName+\"?\"+urls[1]);\n    datasource.setUsername(username);\n    datasource.setPassword(password);\n    return datasource;\n}\n\n@Bean(\"contentSqlSessionFactory\")\npublic SqlSessionFactory contentSqlSessionFactory(@Qualifier(\"contentShardingDataSource\") DataSource contentShardingDataSource) throws Exception {\n    SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n    bean.setDataSource(contentShardingDataSource);\n    bean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(\"classpath:mapper/content/*.xml\"));\n    return bean.getObject();\n}\n\n/**\n * sharding configuration\n * @return\n * @throws SQLException\n */\n@Bean(name = \"contentShardingDataSource\")\npublic DataSource getContentShardingDataSource(@Autowired @Qualifier(\"contentTableRuleConfiguration\") TableRuleConfiguration tableRuleConfiguration) throws SQLException {\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    shardingRuleConfig.getBindingTableGroups().add(CONTENT_TABLES);\n\n    shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"id\", new ContentShardingDatabaseAlgorithm()));\n    // table sharding configuration\n    shardingRuleConfig.getTableRuleConfigs().add(tableRuleConfiguration);\n    return ShardingDataSourceFactory.createDataSource(createContentDataSourceMap(), shardingRuleConfig,new ConcurrentHashMap(), new Properties());\n}\n\n\n/**\n * table sharding  algorithm\n * @return\n */\n@Bean(\"contentTableRuleConfiguration\")\npublic TableRuleConfiguration getContentTableRuleConfiguration() {\n\n    StandardShardingStrategyConfiguration standardStrategy = new StandardShardingStrategyConfiguration(\"id\", new ContentShardingTablesAlgorithm());\n    TableRuleConfiguration TableRuleConfig = new TableRuleConfiguration();\n    TableRuleConfig.setLogicTable(CONTENT_TABLES);\n    TableRuleConfig.setTableShardingStrategyConfig(standardStrategy);\n    return TableRuleConfig;\n}\n\n}\ndatasource configuration:\n  content:\n    driver-class-name: com.mysql.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/?characterEncoding=gbk&useUnicode=true&rewriteBatchedStatements=true&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull\n    username: root\n    password: password123\n```. I add the actual data node configuration, and it fixes the question. Thank you so much.. ",
    "wayne0zhang": "where can i find another version?\nhttps://mvnrepository.com/artifact/io.shardingjdbc/sharding-jdbc-core\n. > @wayne0zhang which version do you use?\n\nIn latest version, i.e.,4.0.0.M1-SNAPSHOT,\n```\npackage org.apache.shardingsphere.core.routing.type.standard;\nprivate List getTableShardingValuesFromHint() {\n        return getRouteValues(HintManagerHolder.getTableShardingValues(logicTableName));\n    }\n```\nWe get shardingValues from HintManagerHolder, where user puts shardingValues. And then we will pass shardingValues to doSharding() in HintShardingAlgorithm, and calculate the target tables by calling doSharding() in HintShardingAlgorithm.\nTherefore, shardingColumns in HintShardingStrategy will not be used, but doSharding() in HintShardingAlgorithm will be called anyway.\n\nok ,i got it. you fixed it in the later version. but we can not get it from maven .\n. ",
    "maxiaoxian": "Caused by: java.lang.NullPointerException\n    at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:139)\n    at sun.reflect.GeneratedMethodAccessor187.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)\n    at com.sun.proxy.$Proxy133.execute(Unknown Source)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\n    at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\n    at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\n    at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\n    at com.sun.proxy.$Proxy131.update(Unknown Source)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\n.  @Bean(name = \"shardingDataSource\")\n    @Primary\n    public DataSource getShardingDataSource() throws SQLException {\n        // \u8bfb\u5199\u5206\u79bb\u914d\u7f6e\n        MasterSlaveRuleConfiguration masterSlaveRuleConfig =\n                new MasterSlaveRuleConfiguration(\"ds\", \"fcWriteDataSource\", Arrays.asList(\"fcRead1DataSource\", \"fcRead2DataSource\"), MasterSlaveLoadBalanceAlgorithmType.getDefaultAlgorithmType().getAlgorithm());\n    Set<MasterSlaveRuleConfiguration> masterSlaveRuleConfigurationSet = new HashSet<>();\n    masterSlaveRuleConfigurationSet.add(masterSlaveRuleConfig);\n\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\n    shardingRuleConfig.setMasterSlaveRuleConfigs(masterSlaveRuleConfigurationSet);\n\n    // \u5206\u8868\u89c4\u5219\u914d\u7f6e\n    TableRuleConfiguration f_order_report = getTableRule(\"f_order_report\", \"ds.f_order_report_${['123','432']}\", \"ou_id\");\n    TableRuleConfiguration f_order_business_model = getTableRule(\"f_order_business_model\", \"ds.f_order_business_model_${['123','432']}\", \"ou_id\");\n    shardingRuleConfig.getTableRuleConfigs().add(f_order_report);\n    shardingRuleConfig.getTableRuleConfigs().add(f_order_business_model);\n\n    // \u9ed8\u8ba4\u5206\u8868\u7b56\u7565\u8bbe\u7f6e\n\n//        shardingRuleConfig.setDefaultTableShardingStrategyConfig(\n//                new StandardShardingStrategyConfiguration(\"none\",\n//                        new NoneDatabaseShardingAlgorithm()));\n        shardingRuleConfig.setDefaultTableShardingStrategyConfig(new NoneShardingStrategyConfiguration());\n        // \u8bbe\u7f6e\u9ed8\u8ba4\u6570\u636e\u5e93\uff0c\u89e3\u51b3\u53ea\u6709\u90e8\u5206\u8868\u9700\u8981\u5206\u8868\u7684\u95ee\u9898\n        shardingRuleConfig.setDefaultDataSourceName(\"fcWriteDataSource\");\n        Map configMap = new HashMap<>();\n        return ShardingDataSourceFactory.createDataSource(createDataSourceMap(), shardingRuleConfig, configMap, new Properties());\n    }. \n        insert into f_order_business_model (\n        \n        )\n        values (\n        \n             #{item.orderId,jdbcType=BIGINT}   , ....\n        \n        ). ",
    "wy-coder": "That is to say\uff1a\nAll jdbc supports full table no sort paging scanning , but sahrding-jdbc does not.\nif do not support force route to a specify database, how to do full table no sort paging?\nlimit 200 300\ndb1 : limit 0 300\ndb2 : limit 0 300\ndb3 : limit 0 300\nassemble and sort 0 900\nlimit 200 300 from 0 900\nThis is not efficient.\nwe need:\nnode1 : db1 : limit 0 100\nnode2 : db1 : limit 100 200\nnode3 : db1 : limit 200 300\n. ",
    "jinjim": "is there any way to sharding table by script or in other way?. > https://shardingsphere.apache.org/document/legacy/3.x/document/en/features/sharding/concept/sharding/ Look at the bottom of this\nunderstand that,but i  it would be better  by RangeShardingAlgorithm. > @jinjim Is it resolve your question\uff1f Can you close this issue\uff1f\nHowever, there is no\uff01\n. ",
    "bruceyan1220": "@tuohai666  Has this issue been fixed in RC?. ",
    "xfyang1989": "this is my configure:\n``` \n\n\n\n\n\n\ntrue\n\n\n\n```\n@ShardingTransactionType(TransactionType.XA)\n@Transactional\npublic void freezeInventory(SKUBizInvFreezeSo bizInvFreezeSo){}\nMy MySQL driver \uff1a mysql-connector-java-5.1.45.jar\nI configured it according to the documentation you said\uff0cBut,Using @ShardingTransactionType(TransactionType.XA) does not work,the above error occurred. I debug it, suggesting this error.\n\nFailed to wrap XADataSource to transactional datasource pool\n\n.  I suggest that you can make a demo based on spring-namespace about the configuration of distributed transactions. In addition, I feel that many of your documents are not very detailed and complete.. datasource : hikariCP. I used your ShardingSphere in the project. The company has monitoring and does not allow uploading demos. I configured it according to your documentation, which is the error reported above.  \nthis is spring-namespace-demo with XA transaction ????\nhttps://github.com/apache/incubator-shardingsphere-example/tree/3.1.0/sharding-jdbc-example/spring-namespace-nodep-example/spring-namespace-nodep-mybatis-example. ok,I try it ,3Q . Also, when will the version of your ShardingSphere4.0.0 be released?. ",
    "yuancaihua": "m. ",
    "tankilo": "\nCan you explain the reason for close this issue?\n\nIn fact, yesterday night, i did ran into error when i try to compile the code. But this morning, after i posted this issue , i couldn't reproduce this problem again (clean related jars in  local maven repo and compile).\nThough sharding-sql-test is the last one  in the <modules> element of the parent pom.xml, it's still compiled before some modules of sharding-core.\n[INFO] Reactor Build Order:\n[INFO] \n[INFO] sharding-sphere\n[INFO] sharding-core\n[INFO] sharding-core-api\n[INFO] sharding-core-common\n[INFO] sharding-core-parse\n[INFO] sharding-core-parse-spi\n[INFO] sharding-sql-test\n[INFO] sharding-core-parse-common\n[INFO] sharding-core-parse-mysql\n[INFO] sharding-core-parse-postgresql\n[INFO] sharding-core-parse-oracle\n[INFO] sharding-core-parse-sqlserver\nBefore, i think module building order is just the same as what we define in <modules> element of the parent pom.xml. \nNow, after Googling, maven is smarter than I thought.\nhttps://stackoverflow.com/questions/18629897/maven-build-order-multiple-modules\nhttp://maven.apache.org/guides/mini/guide-multiple-modules.html\n\nReactor Sorting\nBecause modules within a multi-module build can depend on each other, it is important that the reactor sorts all the projects in a way that guarantees any project is built before it is required.\nThe following relationships are honoured when sorting projects:\na project dependency on another module in the build\na plugin declaration where the plugin is another module in the build\na plugin dependency on another module in the build\na build extension declaration on another module in the build\nthe order declared in the  element (if no other rule applies). \n",
    "abbbud": "same exception, need help. @KomachiSion NO,I USE TAG 3.1.0. "
}