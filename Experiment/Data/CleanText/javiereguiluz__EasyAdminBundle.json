{
    "javiereguiluz": "What if the getter method is like the following?\n``` php\nclass User\n{\n    // ...\npublic function getFirstName()\n{\n    return ucfirst(trim(preg_replace(\"/[^[:alpha:][:space:]]/ui\", '', $this->firstName)));\n}\n\n}\n```\n. @lyrixx thanks for opening the first issue of EasyAdminBundle!\nI appreciate your issue because I always wonder the same with the getters. From what I've seen, in Symfony applications getters are stupid and useless, because they only return the property. But I'm not sure if other people are using real getters or not.\nI'm closing it because it's too early for these documentation details but I'll keep it in mind. Thanks.\n. @Pierstoval I really appreciate your work, but I'd like to ask you to slow down a bit on this feature. The reason is that I consider this feature one of those that have to be carefully considered. We really need to think about how do people use this backend. And for that to happen ... we need people to actually use this backend. And for that to happen ... we need to create a solid base and focus first on a small set of \"must\" features.\nI'm about to finish one of those features with big impact and I'd like you to help me test it in real backends :)\n. @Pierstoval I really appreciate your work, but I'd like to ask you to slow down a bit on this feature. The reason is that I consider this feature one of those that have to be carefully considered. We really need to think about how do people use this backend. And for that to happen ... we need people to actually use this backend. And for that to happen ... we need to create a solid base and focus first on a small set of \"must\" features.\nI'm about to finish one of those features with big impact and I'd like you to help me test it in real backends :)\n. @kbond thanks for the reference. I haven't looked at the code, but it looks exactly like what a dashboard should be.\nHowever, I still think we can live without a real homepage for some time. In my experience, most people using backends ignore their homepages completely and they just quickly link on the action they want to perform. In fact, I've heard lots of times people complaining about how slow loading is the backend homepage, which they never use or look at.\n. I'm closing this issue because it's not something that we're going to implement anytime soon.\nFor now, you can very easily use your own action to render the dashboard, as explained in https://github.com/javiereguiluz/EasyAdminBundle/pull/303/files\nAnd in the near term, we'll implement some logic to customize the main menu and we'll let the developer choose the action/view/entity displayed as the index of the backend.\n. @ikerib euskaraz itzultzeko laguntza behar dut :)\n@Pierstoval the reason why I prefer XLIFF is that it's the format officially recommended by Symfony. I know that it's verbose, but in this case the number of strings to translate will be minimal because it's a truly simple interface.\n. @Pierstoval yes, it should be closed because of your work on this :) Thanks!\n. I still don't know how to solve this problem, because I'm against using Assetic or frontend-stuff tools. Right now, the best solution I've come up is to replace the static admin.css file by a admin.css.twig template and render it using the admin controller:\ncss\n/* Original CSS code */\nspan.badge {\n    background-color: #D47843;\n}\ntwig\n{# New template code #}\nspan.badge {\n    background-color: {{ main_color|default('#D47843') }};\n}\nThe advantage is that the user can customize an entire backed just by defining some options in the config.yml file. No asset compiling or installing, changes are applied instantly, almost zero effort by the user:\nyaml\neasy_admin:\n    color_scheme: { main_color: '#CC1414', ... }\nThe performance hit should be minimal because even if the template is long, its logic is trivial.\nWhat do you think about this idea? If you think it's stupid, you can freely say so :)\n. I still don't know how to solve this problem, because I'm against using Assetic or frontend-stuff tools. Right now, the best solution I've come up is to replace the static admin.css file by a admin.css.twig template and render it using the admin controller:\ncss\n/* Original CSS code */\nspan.badge {\n    background-color: #D47843;\n}\ntwig\n{# New template code #}\nspan.badge {\n    background-color: {{ main_color|default('#D47843') }};\n}\nThe advantage is that the user can customize an entire backed just by defining some options in the config.yml file. No asset compiling or installing, changes are applied instantly, almost zero effort by the user:\nyaml\neasy_admin:\n    color_scheme: { main_color: '#CC1414', ... }\nThe performance hit should be minimal because even if the template is long, its logic is trivial.\nWhat do you think about this idea? If you think it's stupid, you can freely say so :)\n. @Pierstoval thanks for your proposal. It's true that it looks simple ... but I think it would be more complex that it looks at first. Why? To ensure visual integrity, the default theme will only allow to define a small amount of colors (ideally 1, the main color; but probably 4 or 5 to also style the sidebar, etc.)\nThis means that a lot of different elements (with very long CSS selectors) will use the same color and we would have to extract+copy+paste 20 or more lines to change one color. I'm not rejecting your proposal yet, but I have to think more about the pros and cons of each proposal.\n. Closing it because it's superseded by #208\n. Closing it because it's superseded by #208\n. Closed by #39\n. Thank you very much @Pierstoval for sending the first PR of the project! And thanks for this improvement. I love it!\n. Fixed in 9719aeee295507ee886c19a8ff4c2790273379bb\n. Quick win! Thanks for helping this project since day one!\n. Very nice work as always! Christian, thank you for completing this issue.\n. Thanks @xabbuh.\n. @Pierstoval thanks for working on this. If possible, I'd like you to make two changes:\n- Maintain the original paginator page count (see https://github.com/javiereguiluz/EasyAdminBundle/pull/15/files#diff-3e95a69cd00f4e78f9ac9f5bcd24a249L5). In other words, maintain the X-Y of Z instead of using X-Y / Z. I know that it's boring to add the whole original text because it even contains HTML tags, but it feels better for end users.\n- Remove the translation of the error pages. These pages are very preliminar, so I'm not confident enough with their content and how we display them. There is going to be a lot of changes about them.\nThanks!\n. Amazing! Thank you @Pierstoval for your help doing all the i18n work! I really appreciate it.\n. Very nice catch! I totally missed it. Thanks @markitosgv\n. @xabbuh unfortunately yes, because I want this bundle to work flawless for Symfony 2.3+ and that version doesn't include the cool Bootstrap form themes (they were introduced in Symfony 2.6).\n. For now I prefer not to show any flash message. The reason is that we must carefully think when to show these messages in order to not annoy the end users. If you work all day doing things in a backend, you definitely don't want to see these messages whenever you do something.\nI'm thinking about notifying only about important events (for example when the entity cannot be saved/created) and doing it in a pleasant and non-intrusive manner. But I don't know yet how to achieve that.\nIn any case, thanks for opening this issue. Whenever you can think of a new feature, an improvement, a bug, etc. please open a new issue and let's discuss it :)\n. @juanber84 thanks for reporting this error. Indeed this had been fixed in master in #17. I've just released 1.0.1 version, so executing a composer update javiereguiluz/easyadmin-bundle should fix the problem. If not, please reopen this issue with more details. Thanks!\n. @xabbuh you are right about having to copy a lot of code depending on what you pretend to do. And I know that Symfony's philosophy is \"let's close everything and open it when there is a reasonable use case\".\nHowever, in this case I prefer the philosophy of opening everything and no restricting any method. I don't know how/if people are going to use this admin generator, so let's provide them infinite flexibility for now.\n. @iltar thanks for your comments. Do you know any simple but working implementation about how to provide this feature? I read on IRC that you were talking  with @jrobeson about some hacks and problems to provide this feature in PHP.\n. I'm closing it this issue because, as @Pierstoval said, this has been fixed in #223.\nIn the near future we'll improve this feature, but for now \"it works\".\n. Closed by #39\n. Fixed in 4eaffe3c20d0fc8bd75a79d9371fd79fa536a998\n. @Pierstoval that's precisely the solution that we must use:\nphp\naddcslashes($searchQuery, \"%_\")\nBut the second argument of the function, which is the list of problematic characters, must be obtained with this method, as explained by @stof above:\nphp\n$em->getConnection()->getDatabasePlatform()->getWildcards();\n. Thanks Christian! I'm going to send soon another commit related to this.\n. Wow! Thank you @xabbuh! You saved me a lot of work. I promise to not be lazy again and to use the proper ->query->get() method.\n. Thanks Christian.\n. I love quick wins! Thank you Christian.\n. You are right. The second one was fixed in this commit: https://github.com/javiereguiluz/EasyAdminBundle/commit/98eb5eab652db944b6db89123e975c21a9cd92e0\n. Thank you Christian! I appreciate the time you took to solve this PR and do all the asked code changes.\n. @MacFJA your shortcut format it's tempting to use it, but the problem is that you cannot mix associative arrays with scalar arrays. I want this, but you cannot do it in YAML:\nyaml\nfields: { 'name', 'thumbnailFile': 'file', 'dateOfBirth': { type: 'date', label: 'Birthday' } }\nThe result is that you have to add the ~ symbol for non-customized fields, and I don't like that:\nyaml\nfields: {'name': ~, 'thumbnailFile': 'file', 'dateOfBirth': 'date'}\nThat's why I think the current format is not that bad when you don't customize all fields:\nyaml\nfields: [ 'name', { property: 'thumbnailFile', type: 'file' }, { property: 'dateOfBirth', type: 'date', label: 'Birthday' } ]\nIn any case, I'm closing this issue because you already can customize fields in listings and forms since #64. Regarding the custom form fields, that will be a totally different pull request.\n. As @Pierstoval said, the problem is that I need to finish first a big pull request. I paste here the documentation of the new feature. I'll commit the code soon:\n```\nCustomize the Labels of the Columns Displayed in Listings\nBy default, listing column labels are a \"humanized\" version of the original \nname of the related Doctrine entity property. If your property is called\npublished, the column label will be Published and if your property is\ncalled dateOfBirth, the column label will be Date of birth.\nIn case you want to define a custom label for one or all columns, just use the\nfollowing expanded configuration:\napp/config/config.yml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            list:\n                fields: ['id', 'name', { property: 'email', label: 'Contact' }]\n    # ...\nInstead of using a string to define the name of the property (e.g. email) you\nhave to define a hash with the name of the property (property: 'email') and\nthe custom label you want to display (label: 'Contact').\nCustomize the Fields Displayed in Forms\nBy default, all form fields are displayed with the same visual style, they \ndon't show any help message, and their label and field type are inferred from \ntheir associated Doctrine property.\nIn case you want to customize any or all form fields, use the extended form \nfield configuration showed below:\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            edit:\n                fields: [\n                    'id',\n                    { property: 'email', type: 'email', label: 'Contact' },\n                    { property: 'code', type: 'number', label: 'Customer Code', class: 'input-lg' }\n                    { property: 'notes', help: 'Use this field to add private notes and comments about the client' }\n                    { property: 'zone', type: 'country' }\n                ]\n    # ...\nThese are the options that you can define for form fields:\n\nproperty: it's the name of the associated Doctrine entity property. It \n    can be a real property or a \"virtual property\" based on an entity method.\n    This is the only mandatory option.\ntype: it's the type of form field that will be displayed. If you don't\n    specify a type, EasyAdmin will guess the best type for it. For now, you\n    can only use any of the valid Symfony Form Types.\nlabel: it's the title that will be displayed for the form field. The\n    default title is the \"humanized\" version of the property name.\nhelp: it's the help message that will be displayed below the form field.\nclass: it's the CSS class that will be applied to the form field widget.\n    For example, to display a big input field, use the Bootstrap 3 class called\n    input-lg.\n\nEven if you can define different options for the fields used in the new and\nedit action, most of the times they will be exactly the same. If that's your\ncase, define the options in the special form action instead of duplicating\nthe new and edit configuration:\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:  # <-- 'form' is applied to both 'new' and 'edit' actions\n                fields: [\n                    'id',\n                    { property: 'email', type: 'email', label: 'Contact' },\n                    ...\n                ]\n    # ...\nIf new or edit options are defined, they will always be used, regardless\nof the form option. In other words, form and new/edit are mutually\nexclusive options.\n```\n. I'm closing this issue because it's too generic. We're defining in #70 a reference set of Doctrine entities which contain all data types and all kinds of associations. Once we have those sample entities, we'll work on associations one by one and we'll open different pull requests for each association type.\n. Closing it because this was fixed in #61\n. Thank you all for your explanations. We may add this feature easily because the only place where we set the entity manager to use is this line of the AdminController (https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Controller/AdminController.php#L97): \nphp\n$this->em = $this->getDoctrine()->getManager();\nIf we could detect the entity manager of the given entity, then we'll always use the right entity manager. I'll have a look at this issue and see if it's really so easy to solve it as it looks.\n. Thanks @nicolaskern. Indeed it's better to load custom JS after EasyAdmin's JS..\n. @nicolaskern the new 1.0.4 version has just been released. My guess is that this error should be fixed once you run composer update javiereguiluz/easyadmin-bundle.\nIf the error persists, please reopen this issue. Thanks.\n. @nicolaskern the new 1.0.4 version has just been released. My guess is that this error should be fixed once you run composer update javiereguiluz/easyadmin-bundle.\nIf the error persists, please reopen this issue. Thanks.\n. @nicolaskern yes, everything should work without having to make any change.\n. @nicolaskern yes, everything should work without having to make any change.\n. Closing it as \"won't fix\" because in the near term we're not going to provide this feature. We'll keep relying on Symfony for the security part. In the future we'll reconsider this decision.\n. Closing it as \"won't fix\" because in the near term we're not going to provide this feature. We'll keep relying on Symfony for the security part. In the future we'll reconsider this decision.\n. @evansmwendwa this was on my TODO list for a long time, so I decided to finish this feature. See #1560.. @mmoreram thanks for working on this. Should we also add twig as a dependency? We use it for templates and we even include a Twig extension.\n. @mmoreram thanks for working on this. Should we also add twig as a dependency? We use it for templates and we even include a Twig extension.\n. Awesome! @mmoreram thanks for woring on this and for dealing so patiently with my peculiarities ;)\n. Awesome! @mmoreram thanks for woring on this and for dealing so patiently with my peculiarities ;)\n. Marc, except for the controller, the header is the same used by Symfony except for putting my name instead of Fabien ;)\n/*\n * This file is part of the EasyAdminBundle.\n *\n * (c) Javier Eguiluz <javier.eguiluz@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nFor the controller, I modified this header to add the notice about reusing some code of other project and to add the license and reference of that project.\n. Marc, except for the controller, the header is the same used by Symfony except for putting my name instead of Fabien ;)\n/*\n * This file is part of the EasyAdminBundle.\n *\n * (c) Javier Eguiluz <javier.eguiluz@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nFor the controller, I modified this header to add the notice about reusing some code of other project and to add the license and reference of that project.\n. Closing it as fixed as of #202\n. Closing it as fixed as of #202\n. @Pierstoval you are right. We need something ... but not yet. First, we'll iterate a bit over the configuration and once we settle on something stable, let's create the tests.\nRelated to this, in one of his great code reviews, @stof suggested that we could leverage the Config component features to do some sort of advanced configuration validation. He kindly offered himself to prepare something around this, so maybe we can take his word in the future and ask him to help us do something great with the Config component.\n. @Pierstoval you are right. We need something ... but not yet. First, we'll iterate a bit over the configuration and once we settle on something stable, let's create the tests.\nRelated to this, in one of his great code reviews, @stof suggested that we could leverage the Config component features to do some sort of advanced configuration validation. He kindly offered himself to prepare something around this, so maybe we can take his word in the future and ask him to help us do something great with the Config component.\n. If someone else wants to review if this PR is working right before merging it, you only have to execute two commands to download this PR as a new branch:\n``` bash\nyou may need to change 'origin' by 'upstream' depending on how you use Git\n$ git fetch -fu origin refs/pull/64/head:pr/64\n$ git checkout pr/64\n```\n. This PR adds support for adding collection items dynamically:\n\nAs this requires to execute some JavaScript code, it'd be great if you could test it to ensure that no JavaScript errors happen in your browser.\n. @Pierstoval regarding your issue about advanced customization of form fields, I'm not sure it's something we can do in config files. I'm updated the documentation in 7a41681 to show how to do what you asked for in the example of the choice field with custom values.\n. This is definitely a feature I'll add very soon. Thanks for suggesting it.\nAbout the big PR, it's already available for testing it: https://github.com/javiereguiluz/EasyAdminBundle/pull/64  I tested myself, but the changes are so big that I'd love if other people could test it. Thanks!\n. This is definitely a feature I'll add very soon. Thanks for suggesting it.\nAbout the big PR, it's already available for testing it: https://github.com/javiereguiluz/EasyAdminBundle/pull/64  I tested myself, but the changes are so big that I'd love if other people could test it. Thanks!\n. Nice! Dank je @jverdeyen!\n. Cool! Another nice translation! \u0441\u043f\u0430\u0441\u0438\u0431\u043e @helios-ag\n. Hugo, thanks for taking care about these details! I love it.\n. This is indeed a very good idea and it's in my mid-term list of features to add.\nRight now I'm not thinking about creating entirely new controllers for each entity, but using a simpler approach. I'll share my thoughts soon. And for the templates, I was thinking the same as you propose :)\n. Closing it as \"fixed\" in the latest dev version. You can read these new tutorials to know:\n- How to configure each template and fragment per entity or globally\n- How to configure each controller method per entity or globally\n. @MacFJA thanks for providing the exact references for types and associations.\nIn case anyone wants to work on this, what we're looking for is: The minimal set of Doctrine entities that use ALL the data types and define ALL the possible associations between them.\n. @MacFJA amazing! Thanks a lot for your work!\nIn the entity set that you've prepared, the only missing types that I see are: array, decimal, object and smallint. And the only missing association is one-to-one non-self-referencing.\nIi would be great if someone could help @MacFJA think about which fields to add to these entities to actually use every possible Doctrine type.\nAfter that, it would be very helpful if you could export the UML diagram to actual Doctrine PHP entities. Then, I'll prepare the fixtures. Thanks!\n. @MacFJA amazing! Thanks a lot for your work!\nIn the entity set that you've prepared, the only missing types that I see are: array, decimal, object and smallint. And the only missing association is one-to-one non-self-referencing.\nIi would be great if someone could help @MacFJA think about which fields to add to these entities to actually use every possible Doctrine type.\nAfter that, it would be very helpful if you could export the UML diagram to actual Doctrine PHP entities. Then, I'll prepare the fixtures. Thanks!\n. Here it is my proposal for adding the remaining data types and associations:\nRelations\n- Create a new OrderItem entity with a one-to-many relation with Order (and move quantity from Product to OrderItem).\n- Add a many-to-one relation between Product and the new OrderItem entity.\n- Simplify relation between Product and Gallery to one-to-one relation.\nData types\n- In Product entity add a new features property of type array. Example: $features = array('feature_1_name' => 'feature_1_value', ...);\n- In the OrderItem entity, add a taxRate property of type decimal. Example 21.5 (%)\n- In OrderItem, replace the quantity type from integer to smallint\n- In Order, replace the incrementId type from bigint to int.\n- In Order, replace the shippingAddress property by shipment and replace its type from json_array to object type. Example: class Shipment { public $address; $public shippingCompany; public $cost; ... }\n. Here it is my proposal for adding the remaining data types and associations:\nRelations\n- Create a new OrderItem entity with a one-to-many relation with Order (and move quantity from Product to OrderItem).\n- Add a many-to-one relation between Product and the new OrderItem entity.\n- Simplify relation between Product and Gallery to one-to-one relation.\nData types\n- In Product entity add a new features property of type array. Example: $features = array('feature_1_name' => 'feature_1_value', ...);\n- In the OrderItem entity, add a taxRate property of type decimal. Example 21.5 (%)\n- In OrderItem, replace the quantity type from integer to smallint\n- In Order, replace the incrementId type from bigint to int.\n- In Order, replace the shippingAddress property by shipment and replace its type from json_array to object type. Example: class Shipment { public $address; $public shippingCompany; public $cost; ... }\n. @MacFJA great! I'm sure that some purists would scream if they see this schema ... but it's perfect for our purposes: all types and all associations using the minimal set of entities!\nI wonder if it's easy to transform the UML diagram that you made into Doctrine entities. If you can, please email me those PHP files to javier.eguiluz@gmail.com. Then, I'll prepare the fixtures to be able to test them in a real backend. Thanks!\n. @MacFJA great! I'm sure that some purists would scream if they see this schema ... but it's perfect for our purposes: all types and all associations using the minimal set of entities!\nI wonder if it's easy to transform the UML diagram that you made into Doctrine entities. If you can, please email me those PHP files to javier.eguiluz@gmail.com. Then, I'll prepare the fixtures to be able to test them in a real backend. Thanks!\n. @MacFJA awesome! Thanks for working on this and for doing it so well. I'm really looking forward to use your entities to improve this bundle. Thanks.\n. @MacFJA I've prepared a demo Symfony backend which includes your entities: https://github.com/javiereguiluz/easy-admin-demo  I'll use this project to work on adding support for associations: https://github.com/javiereguiluz/EasyAdminBundle/issues/124\nDo you have some fixtures that we can use to fill in the backend or do you prefer if I prepare those fixtures? Thanks!\n. @MacFJA I've prepared a demo Symfony backend which includes your entities: https://github.com/javiereguiluz/easy-admin-demo  I'll use this project to work on adding support for associations: https://github.com/javiereguiluz/EasyAdminBundle/issues/124\nDo you have some fixtures that we can use to fill in the backend or do you prefer if I prepare those fixtures? Thanks!\n. Closing it as \"fixed\" in https://github.com/javiereguiluz/easy-admin-demo. It's still not completed, but we can close this issue because the initial work is done. Thanks @MacFJA for working on this.\n. Closing it as \"fixed\" in https://github.com/javiereguiluz/easy-admin-demo. It's still not completed, but we can close this issue because the initial work is done. Thanks @MacFJA for working on this.\n. @henrikbjorn you are right and making this bundle not use the FrameworkBundle would be very easy (just a few minutes of work). However, making this bundle independent of the full-stack framework would be much harder.\nThis project is very young, so we must focus our very limited resources on as less features as possible. Trying to do lots of things and target different platforms will make us fail.\nHowever, this is a good feature request for the future, when the project matures and stabilizes. I'm closing your issue, but I've labelled with Future and Enhancement tags. From time to time we review the closed issues marked as Future, so your proposal won't be lost and it will be reconsidered in the future.\nThanks!\n. @henrikbjorn you are right and making this bundle not use the FrameworkBundle would be very easy (just a few minutes of work). However, making this bundle independent of the full-stack framework would be much harder.\nThis project is very young, so we must focus our very limited resources on as less features as possible. Trying to do lots of things and target different platforms will make us fail.\nHowever, this is a good feature request for the future, when the project matures and stabilizes. I'm closing your issue, but I've labelled with Future and Enhancement tags. From time to time we review the closed issues marked as Future, so your proposal won't be lost and it will be reconsidered in the future.\nThanks!\n. I'm not very fond of making exceptions, but FOSUserBundle has 1.8 millions of downloads on Packagist, so I guess every Symfony developer is using it. We'll have to make an exception for it ... or think a generic (but simple) way to solve this problem.\n. I'm not very fond of making exceptions, but FOSUserBundle has 1.8 millions of downloads on Packagist, so I guess every Symfony developer is using it. We'll have to make an exception for it ... or think a generic (but simple) way to solve this problem.\n. I'm closing this issue because we now have a meta-issue (here --> #124) which will add support for all kinds of associations between associations and therefore, we'll fix all the problems reported in this issue.\n. I'm closing this issue because we now have a meta-issue (here --> #124) which will add support for all kinds of associations between associations and therefore, we'll fix all the problems reported in this issue.\n. In the future we'll add a two-level nested main menu to solve problems when the backend manages lots of items.\nFor now, you can add your own CSS file to the backend. You could make the font smaller and reduce the margins/paddings of each menu item.\n. In the future we'll add a two-level nested main menu to solve problems when the backend manages lots of items.\nFor now, you can add your own CSS file to the backend. You could make the font smaller and reduce the margins/paddings of each menu item.\n. @Pierstoval I was thinking in something simple as:\nyaml\neasy_admin:\n    entities:\n        Clients:\n            Client: AppBundle\\Entity\\Client\n            Invoices: AppBundle\\Entity\\Invoice\n            Order: AppBundle\\Entity\\Order\n        Products:\n            Product: AppBundle\\Entity\\Product\n            Stock: AppBundle\\Entity\\ProductStock\nThen, the main menu would be:\nClients\nProducts\nAnd when you hover your mouse, you see the second level of menu items:\nClients\n    Client\n    Invoice\n    Order\nProducts\n    Product\n    Stock\n. @Pierstoval I was thinking in something simple as:\nyaml\neasy_admin:\n    entities:\n        Clients:\n            Client: AppBundle\\Entity\\Client\n            Invoices: AppBundle\\Entity\\Invoice\n            Order: AppBundle\\Entity\\Order\n        Products:\n            Product: AppBundle\\Entity\\Product\n            Stock: AppBundle\\Entity\\ProductStock\nThen, the main menu would be:\nClients\nProducts\nAnd when you hover your mouse, you see the second level of menu items:\nClients\n    Client\n    Invoice\n    Order\nProducts\n    Product\n    Stock\n. @paquitodev it will take a while, so unfortunately we can't expect it anytime soon.\n. @luigimassa thanks for your PR. It looks a simple and good improvement, but before merging it, I need to think about it and test it in real applications.\n. Just a quick comment to tell you that I'm thinking about how to implement this feature. So far, I don't like to hardcode a convention about the form service naming, but I have to think more about this.\n. @nicolasdewez thanks for your help improving EasyAdmin.\nAllowing to configure fields for show and search action is on my short-term list. Sadly, we cannot implement this feature as you propose in this PR. The reason is that we cannot treat equally the list and show actions.\nThe default behavior for list action should be to cleverly detect the fields to display. However, for the show action the default behavior should be to display all fields. That's why I'm closing this PR and submitting very soon a related PR.\nAlthough it wasn't merged, thanks again for sending this PR.\n. @Pierstoval yes, if the Delete action is included in a listing, it should display the same modal window. However, I prefer to not implement this feature for now.\nThe reason is that in most real backends, deleting things is an extremely rare operation. There are even Doctrine extensions to implement soft deletes and never delete anything, not even when you want to delete something!\n. Your feature request makes sense to me and it doesn't complicate code much. It's implemented in #80. I'd love if you could test the new feature before merging it. Thanks!\n. Merci @Pierstoval\n. @jaltamir thanks for opening this issue.\nI'll be honest: I don't use custom Doctrine types and therefore, I don't know if this is an EasyAdmin bug, a Doctrine bug, a combination of both, etc. I don't know either if this can be solved in a simple way.\nFor now I'm labelling this issue as a bug while I investigate it further, which sadly will take some time.\n. @andig in recent EasyAdmin versions, listings should always work right no matter which error happens: no entities found, property of the entity is not accesible, property value is null, etc.\nIn this case, the error seems to be triggered before EasyAdmin starts doind its work. As @Pierstoval pointed, the most probable cause is that a property of type array is not correctly stored in the database. You can check out this article that explains this problem better.\n. Thanks Nicolas! This was a good catch! I'm going to send a related pull request to tweak this change and to improve documentation around virtual fields.\n. @ogizanagi first of all, there is an issue in EasyAdmin because the show action should display the full contents of all fields, no matter their length. I'm going to fix this bug soon.\nIndependently from the previous bug, I don't think that adding this feature is a good thing. My reasoning is that we're adding a lot of contents to the list page. From what I've seen and from what I think, listings are just a transition page to the real page you want to access (show, edit, delete). That's why I don't think you need to access to long contents. Reading the first characters (for example 64) of a field should be enough to know if that's the record you want to see/edit/delete. However, I'm going to think more about this.\nRegarding the problem with very long arrays, you are right and that's another thing we have to fix. Thanks!\n. @ogizanagi thanks for your pull request. I know that it looks like a very simple feature, but I'm still thinking about it and testing it in my own backends.\nRegarding the documentation, don't worry because I'll add it myself once/if this feature is implemented. Thanks.\n. Thanks for this! You usually don't have long menu items, but just in case you do, this solution is a quick win!\n. I'm going to think about this issue because it looks wrong to provide support for non-id primary keys and then, don't make this little extra effort to provide cool links for associations.\n. @ogizanagi thanks for fixing this error. Your points are valid and it's kind that you think about translators, but I agree with @Pierstoval about using transchoice to fix this issue. That's why I'm closing this issue in favor of #92.\n. I'm closing this issue because we now have a meta-issue (here --> #124) which will add support for all kinds of associations between associations and therefore, we'll add support for embedding all kinds of forms.\n. Closing it because custom actions are now suported as of #202\nFull documentation available at: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/8-customizing-view-actions.md\n@magnusnordlander thanks for kicking off the discussions about this feature.\n. @ihsanudin thanks for your proposal. I totally agree with it. In fact, we'll add support for using custom templates, even using a specific template for each entity. I'm closing this issue because in the previous #69 issue we're discussing about this. Thanks.\n. @garak grazie mille!\n. @yceruto I don't remember the details ... but if I didn't check it, it's probably because it didn't work for me at least.\n. Closing it as fixed by #577.\n. @simonbertonsugasti there is no way to do that yet. But that's something I'd like to have in the near term. \n. @simonbertonsugasti thanks for offering yourself! Just a comment: it's better if you prepare a very simple proof-of-concept of your proposal instead of working hard on finish the feature. Why? Because if the solution doesn't fit the bundle philosophy or it's very complex, we may reject it. And I'd hate myself for having made you waste your time.\n. I agree with @ogizanagi: the sticky main menu should behave like the beautiful theme he linked to. I'll take a look into how to do that.\n. I agree with @ogizanagi: the sticky main menu should behave like the beautiful theme he linked to. I'll take a look into how to do that.\n. @Pierstoval I'd appreciate your help a lot. I'm working right now on creating the fixtures for the https://github.com/javiereguiluz/easy-admin-demo project, so I can't work on this PR.\nPS: don't worry about squashing your commits because everything is squashed automatically before merging it.\n. @Pierstoval I'd appreciate your help a lot. I'm working right now on creating the fixtures for the https://github.com/javiereguiluz/easy-admin-demo project, so I can't work on this PR.\nPS: don't worry about squashing your commits because everything is squashed automatically before merging it.\n. @Pierstoval thanks for the time you took working on this. Don't worry about it because I'm planning to copy/get-inspired-by the left sidebar menu of this theme suggested by @ogizanagi \n. @Pierstoval thanks for the time you took working on this. Don't worry about it because I'm planning to copy/get-inspired-by the left sidebar menu of this theme suggested by @ogizanagi \n. Closing in favor of #141. Thanks @Pierstoval for working on this and thanks @ogizanagi for providing useful resources to investigate this problem.\n. @jcrombez thanks for opening this issue and for reporting this error. @Pierstoval thanks for providing the best solution in this case.\nI'm usually against the use of spaceless or the - trick to control white spaces. After all, nobody is going to look at the source code of the pages. But, in this case, I think we must use it because this looks like a bug to me. That's why I've created #129\n. @jcrombez thanks for opening this issue and for reporting this error. @Pierstoval thanks for providing the best solution in this case.\nI'm usually against the use of spaceless or the - trick to control white spaces. After all, nobody is going to look at the source code of the pages. But, in this case, I think we must use it because this looks like a bug to me. That's why I've created #129\n. @Pierstoval I always enable gzip compression in the web server, so removing white spaces in the source code would save me just a few bytes. The effort is not worth it.\n. @Pierstoval I always enable gzip compression in the web server, so removing white spaces in the source code would save me just a few bytes. The effort is not worth it.\n. @Pierstoval I'll be honest with you: I don't use ODM in any project and I'm not comfortable adding code that I don't understand and cannot maintain myself.\nThat's why ODM won't be supported in the short and medium term. Of course in the future we'll review this issue (that's why I labeled it with the future tag, to not lose track of it).\nIn my opinion, most new software projects fail because they don't focus enough and they try to solve too many problems at the same time. I prefer to work hard on creating a good admin generator for Doctrine ORM and once/if we achieve it, then focus on adding support for other ORM, ODM, etc.\n. @Pierstoval I'll be honest with you: I don't use ODM in any project and I'm not comfortable adding code that I don't understand and cannot maintain myself.\nThat's why ODM won't be supported in the short and medium term. Of course in the future we'll review this issue (that's why I labeled it with the future tag, to not lose track of it).\nIn my opinion, most new software projects fail because they don't focus enough and they try to solve too many problems at the same time. I prefer to work hard on creating a good admin generator for Doctrine ORM and once/if we achieve it, then focus on adding support for other ORM, ODM, etc.\n. I'm sorry but we haven't changed our mind about this. There won't be support for ODM anytime soon.. I'm sorry but we haven't changed our mind about this. There won't be support for ODM anytime soon.. @alterphp I thank your efforts adding support for MongoDB, but for the moment we're not planning to add support for MongoDB in this bundle, even if someone from the community makes the pull request for it. I'm sorry.. @jansabat thanks for this translation! Mockr\u00e1t d\u011bkuji\n. @jansabat thanks for this translation! Mockr\u00e1t d\u011bkuji\n. @peterkokot thanks for this translation! Najlep\u0161a hvala\n. @peterkokot thanks for this translation! Najlep\u0161a hvala\n. @KonstantinKuklin thanks for completing this translation! \u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0441\u043f\u0430\u0441\u0438\u0431\u043e\n. @KonstantinKuklin thanks for completing this translation! \u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0441\u043f\u0430\u0441\u0438\u0431\u043e\n. @KevinForys thanks for using EasyAdmin!  Currently you cannot display an image in the show action, but I'd love to add this feature. This is my proposal:\n- Add support for a new custom type called image\n- When you want to display a field as an image, configure it like this: { property: 'myField', type: 'image' }\n- EasyAdmin will then display that field as <img src=\"{{ value of myField }}\" >\n- We'll scale the image to a maximum width and height to avoid visual problems (optionally add a jQuery plugin to zoom the image when clicking on it).\n- I'm also thinking about supporting this image type for the list action. It's not common to display images in listings, but right now for example I have an application where I'd love to display the user avatars in the listings.\n- In the future ... we'll add support for this image type also for the New and Edit actions, so you can upload images. But that's for the future, so don't count on it yet.\n@Pierstoval @ogizanagi what do you think about this proposal?\n. You can always add a virtual field by adding a simple method in your entity:\n``` php\nclass MyEntity\n{\n    public $photo;  // 'image2.png'\npublic function getPhotoPath()\n{\n    return '/img/.../.../'.$this->photo;\n}\n\n}\n```\nAnd in your backend config:\nyaml\neasy_admin:\n    entities:\n        Products:\n            show:\n                fields:\n                     - { property: 'photoPath', type: 'image' }\n. What about the following compromise solution? Image types can define a base_path parameter which will be prefixed to its value:\n``` yaml\neasy_admin:\n  entities:\n    Companies:\n      show:\n        fields:\n           # image stores absolute URL\n           - { property: 'logo', type: 'image' }\n       # image stores relative URL and base_path is arbitrary and relative\n       - { property: 'logo', type: 'image', 'base_path': '/static/logos/' }\n\n       # image stores relative URL and base_path is arbitrary and absolute\n       - { property: 'logo', type: 'image', 'base_path': 'http://static.example.com/asset/logos/' }\n\n       # image stores relative URL and base_path is taken from VichUploader\n       - { property: 'logo', type: 'image', 'base_path': '% vich_uploader.mappings.product_image. uri_prefix%' }\n\n```\n. Thank you all for your comments. This is now implemented and documented in #136. If you could test it before merging it, that would be great. Thanks!\n. Thank you @helios-ag.\n. And here are some screenshots showing this feature in action:\nImages in listingsList action\n\nImages in Show action\n\n. @Pierstoval despite the lack of response, I haven't forgotten about your PR. Custom actions is in my short list of things to do ASAP because this is something I need urgently in one of my backends.\n. Closing it because custom actions are now suported as of #202\nFull documentation available at: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/8-customizing-view-actions.md\n@Pierstoval thanks as always for your help discussing about features, reviewing code and submitting pull requests.\n. Closing it because custom actions are now suported as of #202\nFull documentation available at: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/8-customizing-view-actions.md\n@Pierstoval thanks as always for your help discussing about features, reviewing code and submitting pull requests.\n. I'm afraid that there is no alternative for <2.5.0 users. Fortunately, this is just \"a nice feature to have\", but it's not strictly necessary.\n. @ogizanagi I explained myself very bad. I wanted to say exactly what you said: there is no built-in solution to this, so we'll provide no solution because that would mean to copy+paste what newer versions of Symfony already do.\n. Closing in favor of the great PR #142 by @ogizanagi \n. I love it :heart:  Thanks a lot @ogizanagi. You mention something about the scrollbar but it doesn't occur to me. In my case, the scrollbar correctly appears when needed and hides otherwise (I'm using Chrome):\n\nRegarding the support for flex box model in browsers, these are the data provided by CanIUse.com:\n\nI think it's safe to use it.\n. I've checked the first one:\n\n. In this StackOverflow question they mention to add min-height: 0 to the element that should hide the scrollbars. Can you test this trick, please?\n. @ogizanagi thanks for your tests. I'm going to merge this PR as it is so people can test it more easily.\n. Thanks @ogizanagi! It's really great now :)\n. @ogizanagi this is ... absolutely gorgeous :bangbang: I love it. Thanks a lot for working on this.\n. It's strange. I thought that problem was covered by this try...catch block of the Twig extension:\nphp\ntry {\n    $associatedEntityConfig = $this->configurator->getEntityConfiguration($associatedEntityClassName);\n    $associatedEntityPrimaryKey = $associatedEntityConfig['primary_key_field_name'];\n} catch (\\Exception $e) {\n    // if the entity isn't managed by EasyAdmin, don't link to it and just display its raw value\n    return $value;\n}\n. @ogizanagi OK, I understand it know. @Pierstoval explained it perfectly but I managed to not understand it at all :'(\n. What I really wanted to say is that EasyAdmin doesn't care about the locale. We always rely on the underlying Symfony application to deal with that (we do the same for security-related stuff).\nWhat I don't want to create is a multi-language backend with a user-selectable locale ... but you can do something like that easily with the idea commented by @Pierstoval. \n. Yes, I'll merge #122 (or a refactored version of it) but first I want to think about how to add the possibility to configure the value of any interface element (titles, buttons, etc.) for each entity and then think about how to do all of them translatable.\n. @sr972 nice! This is the 12th translation of the bundle. danke sehr\n. @sr972 thanks for taking care of these details and thank you @xabbuh for always being there to help us!\n. I tend to agree with @ogizanagi: I think we should not mix entity configuration with theme/design configuration. I've been thinking about this lately and I may open an issue soon to discuss about this.\nHowever, to be totally clear, I do want to create a two-level main menu \"soon\" and provide other features for it. For now, this can be easily achievable with CSS:\n``` css\nheader-menu li:nth-child(2),\nheader-menu li:nth-child(3),\nheader-menu li:nth-child(7),\nheader-menu li:nth-child(9),\nheader-menu li:nth-child(10),\nheader-menu li:nth-child(11) {\npadding-left: 30px;\n\n}\n``\n. Yes, I think it will be better to group all the design/menu discussions in #208. Thanks.\n. Yes, I think it will be better to group all the design/menu discussions in #208. Thanks.\n. @romaricdrigon I understand that you may need this feature and I also understand the urge for it. However, adding this option looks like a temporary solution and we prefer to introduce the newmenu` option to provide more flexibility and doing it in a better way.\nIn any case, I've just released the new 1.4.0 version of the bundle and it allows to customize any backend element very easily. Read this new documentation to learn how it works. In your particular case, you can override the default.html.twig to just redefine the header_menu block to create your own menu.\nThe simplest way to do it is to create the following template:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_menu %}\n    ... your custom menu here ...\n{% endblock %}\n```\n. I'm pretty divided with this proposal. Both sides have good arguments. I'm slightly in favor of injecting these two global variables, but I'm still not sure about that. In any case, if we do it, we'd inject them always, without the need to use the listener.\n. @ogizanagi thank you for working on this. I really like this PR and I'm gonna merge it right now. @Pierstoval thanks to you also for the discussion and for providing ideas and feedback.\n. I've just uploaded the new translation files and made some minor tweaks. I think this is now ready to be merged.\n. Thanks @ogizanagi for this quick win!\n. @ogizanagi about using a proper switch control, my answer may surprise you: I find most of those controls incredible unintuitive. If we implemente something like that, it would look like the following:\n\nHowever, I'm still not convinced of this change.\n. I've listened to you and I've changed my mind. This feature now uses the bootstrap-toggle project and the results are better than expected.\n1) Normal behavior\n\n2) An error occurred\nWe restore the original value and disable the toggle momentarily to avoid further issues.\n\n3) Race condition: two people change the same value at the same time and with different values\nWe always check the value which was persisted. If there is a mismatch, we automatically flip the toggle to always reflect the latest persisted value:\n\n. I'm going to merge this as it is now. However, I'm not ignoring your comments about security and I thank you all for raising concerns. We'll work on that later.\n. @antoniojlm84 most of the times, you don't need to configure the type option for your fields. Just use:\nyaml\n'Click Commands':\n    class: AppBundle\\Entity\\Clickcommands\n    form:\n        fields: ['dominio', 'other_field', 'another_field', '...', 'last_field']\nIf your Doctrine entities are well defined, all fields will be displayed correctly. Use the type only on the few fields not correctly displayed.\n. Regardless of what I told you about the form field configuration, I can confirm this was a bug which has been fixed in #158.\nOnce this is merged, you can use any Symfony Form type in the type option of a field and everything will work as expected.\nThanks for reporting this problem!\n. Thanks @ogizanagi.\n. Thanks for this quick fix.\nThis problem is actually more complex than it seems. The specific line of code which is relevant is the following:\nphp\n$entityFields[$fieldName]['type'] = array_key_exists($fieldType, $this->doctrineTypeToFormTypeMap)\n    ? $this->doctrineTypeToFormTypeMap[$fieldType]\n    : $fieldType;\nIf the field type exists in the Doctrine2Form map, we transform it. If not, we use what the user defined. This means that all form fields are already supported:\nyaml\nform:\n    fields:\n        - { property: 'contact', type: 'email' }  # <-- this works right\nThe problem happens with the text field type:\n- text is a valid Doctrine type for long texts ... which are represented with a <textarea>.\n- text is a valid Form type for short text ... which are represented with a <input type=\"text\">\nShould we refactor the documentation to say that everything is supported (Doctrine and Form) but you should be careful with text?\n. You are right. The previous behavior wasn't right. I've tried to fix it in #158\n. I see at least 3 quick benefits of our pragmatic solution:\n- This is just a simple array, instead of a 200-lines class.\n- The guesser class looks up again the metadata of the entity, which is pretty slow (and unnecessary in our case)\n- The class is less complete than our array. We support types such as simple_array, json_array and object.\nRegarding the drawbacks of our solution:\n- We need to maintain it, instead of relying on Symfony. This is not a problem because this array probably won't change ever.\n. It would be great to apply this very same idea for the main menu labels rendered in the layout.html.twig. @ogizanagi what do you think?\n. @ogizanagi you are right! I totally overlooked that change :(\n. Thanks for your work on this new feature!\n. @ogizanagi I don't know if you refer to the name of the options used by the user, the name of the variables we use internally or both. Let me explain it.\nFor end-users I don't want to introduce more variables to avoid confusion. I think it's intuitive to always use the same type option and expect different results because pages are drastically different. If I'm on list page, the type is how the data is rendered, but if I'm in a form action, I understand that type is the field widget used to manipulate the value.\nFor internal variables your proposal would be almost the same as we have, because form_type is intuitive, but now the previously intuitive dataType variable is now called type. However, your comment have made me think about this: what if we solve this confusion for once and for all and use two distinct variables: dataType and fieldType? I think both are intuitive to understand and would improve code readability.\n. I think I explained myself bad and I think we're overcomplicating everything. Let's start this discussion over.\n\nI propose to keep using a single type option in the backend configuration file, but fix its internal behavior to match what the end-user expect.\nlist and show actions\n99% of the times, the end-user doesn't need this type option because values are displayed according to their Doctrine types.\nWe provide some cool things to make developer's life easier:\n- Do you want to display an image in the listing? Use the special image type for the property storing the URL of the image.\n- We show cool toggles for boolean values. You don't like this? Use boolean as the type of the property.\n- Do you have a virtual field? We'll display it as text because there is no way to guess its type. But if you use type option, you can set its type explicitly: date, toggle, image, etc.\nnew and edit actions\nBy default, fields are displayed with the most appropriate widget for its type (according to the Symfony Form component).\nIf you don't like some widget, use the type option to set the widget used to render the property in the form. For now you can only use the official Symfony Form field types and your own custom types (if defined as services and available in the application).\nSummary\nWhen displaying things, the type option means the type of data to display. When editing things, the type option means how do you want to edit that thing.\n. @nesl247 I'm going to look into this because it clearly seems an issue. This case should be already supported. In fact, we have a method called ensureThatEntityNamesAreUnique() which adds a trailing _ character to repeated names to avoid any issue: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/DependencyInjection/EasyAdminExtension.php#L162-188\nI'll look into this as soon as I finish the other pending PR.\n. @nesl247 this error has been fixed and merged in 1ecc83f. We've also included lots of unit tests to prevent this error from happening again. If you are not using the dev version, you'll get the fix in the next stable version 1.0.8 which will be published soon.\nThanks for helping us improve EasyAdminBundle.\n. @nesl247 this error has been fixed and merged in 1ecc83f. We've also included lots of unit tests to prevent this error from happening again. If you are not using the dev version, you'll get the fix in the next stable version 1.0.8 which will be published soon.\nThanks for helping us improve EasyAdminBundle.\n. @bmanolov thank you very much for the translation! \u041c\u043d\u043e\u0433\u043e \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f!\n. @GeO95 it was indeed a typo in the docs. It has been fixed in a PR which is pending to be merged. Sorry for that.\nIf the value displayed as an image is an absolute URL, it should work without any further configuration, because it is rendered as <img src=\" {{ PROPERTY VALUE }} \">\nIf you store a relative image path, you have to define the base_path option. The value that you put on that option will be prefixed to the property value as follows:\n<img src=\"{{ VALUE OF BASE_PATH + PROPERTY VALUE }}\">\n. @GeO95 thanks for reporting this error. @ogizanagi fixed it and it's already merged in the dev version. It will be available soon in the new 1.0.8 version.\n. Thank you @ogizanagi.\n. I haven't looked into this error yet, but I'd like to tell you two things possibly related:\n- I've finished the PR #162, which may solve this problem because now everything is done as it should be. It'd be great if you could test those changes. Thanks!\n- This bundle doesn't have any unit test yet ... and I'm OK with that. However, I'm going to add soon some basic tests related to the configuration part of the bundle to avoid introducing regressions. \n. @ogizanagi but above the method that you linked, you can see this code (https://github.com/javiereguiluz/EasyAdminBundle/blob/separate_data_type_and_field_type/Configuration/Configurator.php#L348-357):\nphp\n// 'new' and 'edit' actions: if the user has defined the 'type' option\n// for the field, use it as 'fieldType. Otherwise, infer the best field\n// type using the property data type.\nif (in_array($action, array('edit', 'new'))) {\n    if (isset($fieldConfiguration['type'])) {\n        $normalizedConfiguration['fieldType'] = $fieldConfiguration['type'];\n    } else {\n        $normalizedConfiguration['fieldType'] = $this->getFormTypeFromDoctrineType($normalizedConfiguration['type']);\n    }\n}\nI guess that this change should fix the problem\n. You are right. The new behavior is: if the type is not in the \"safe list\" of types, use \"text\". The old behavior was: if it's in the safe list, use it; if not, use whichever the user or Doctrine say.\nI've reverted the original behavior in c79e6a7.\n. Fixed as of #162\n. @jesusdiez thanks for this pull request. Although we try to limit features and options to keep this bundle simple, I think it makes a lot of sense to have this option. Specially because we're not going to provide support for user roles in a long time (probably never). Thanks to this feature, you can make some entities read only (e.g. Invoices), or create-and-read only, or read-and-write-but-not-create, etc.\nHowever, I'll take your pull request and I'll make some tweaks on it before merging it because I want to provide support for setting this option per entity and some other things. It'll take some time, so thanks in advance for your patience!\n. A lot of internal things have changed recently, so it's \"impossible\" to fix the original code submitted in this PR. That's why I'm going to close this PR and to create a new pull request based on your original proposal. Of course I'll give you credit for the original work. Thanks!\n. I think you are completely right. I have some unit tests already implemented and I'll create a pull request soon.\n. I think you are completely right. I have some unit tests already implemented and I'll create a pull request soon.\n. I've submitted the first unit tests in #171. Tomorrow I'll finish the test for the DependencyInjection extension and then I'll merge everything because that PR contains some bug fixes.\nThen, in another separate PR, I'll add tests for the Configurator class. And those will be the last tests for a while, because I don't want to over-test the bundle and I don't want to create functional tests.\n. I've submitted the first unit tests in #171. Tomorrow I'll finish the test for the DependencyInjection extension and then I'll merge everything because that PR contains some bug fixes.\nThen, in another separate PR, I'll add tests for the Configurator class. And those will be the last tests for a while, because I don't want to over-test the bundle and I don't want to create functional tests.\n. @ej-kun in case you think it's better to use different translations for \"Brazilian portuguese\" and \"Portuguese portuguese\", please create the translation file with the name EasyAdminBundle.pt_BR.xliff\nIf you have any other question, just ask it. We'll be glad to help you.\n. @ej-kun in case you think it's better to use different translations for \"Brazilian portuguese\" and \"Portuguese portuguese\", please create the translation file with the name EasyAdminBundle.pt_BR.xliff\nIf you have any other question, just ask it. We'll be glad to help you.\n. Closing this issue because Brazilian portuguese translation was completed in #173. Thanks @ej-kun for contributing the translation.\n. Closing this issue because Brazilian portuguese translation was completed in #173. Thanks @ej-kun for contributing the translation.\n. @xabbuh I didn't know that configuration option. I've just enabled it. Thanks!\n. @xabbuh I didn't know that configuration option. I've just enabled it. Thanks!\n. Thanks for this. I limited on purpose the blocks defined by the template to wait until the actual users of the bundle discovered which parts need to be overridden.\n. Thanks for this. I limited on purpose the blocks defined by the template to wait until the actual users of the bundle discovered which parts need to be overridden.\n. @ej-kun thanks for contributing this nice translation! Muito obrigado\n. @ej-kun thanks for contributing this nice translation! Muito obrigado\n. Thanks for this quick win and for teaching me so many things about Travis!\n. Thanks for this quick win and for teaching me so many things about Travis!\n. Thanks again for teaching me cool things about Travis.\nI definitely would like to test against different Symfony versions, specially 2.3, which I don't use it but it's supposedly supported. But I don't know how to properly do it. Could you please help me with this? Thanks!\n. Thanks again for teaching me cool things about Travis.\nI definitely would like to test against different Symfony versions, specially 2.3, which I don't use it but it's supposedly supported. But I don't know how to properly do it. Could you please help me with this? Thanks!\n. Maybe we can do it here to group all the Travis stuff in a single PR.\n. Maybe we can do it here to group all the Travis stuff in a single PR.\n. @Pierstoval in this case I agree with @xabbuh: I think that 28 builds would be too much. And the good thing is that if in the future we face problems with some specific Symfony versions + PHP combination, we can easily add a new build to the list.\n. Fixed in 684cb8464068b6d140290250afc4a3c5459005db\n. Fixed in 684cb8464068b6d140290250afc4a3c5459005db\n. I've just created this PR which deprecates two options ... but does it transparently to the end-user.\nMy opinion is that we are a young and small community and therefore, we cannot promise anything regarding BC. We'll do our best to never break things, but we won't promise it formally.\nAnd here are some ideas regarding the release of new versions and Symfony support:\n- We won't maintain separate branches to support different Symfony versions.\n- We'll try to maintain Symfony 2.3 support as long as we can. When this maintenance becomes a burden, we'll stop supporting it.\n- We'll release small new versions very frequently: once a week or every two weeks.\n. Closing this issue because there is nothing more we can do at the moment: we'll do our best to not break anything.\n@Pierstoval thanks for initiating this discussion.\n. In theory, Symfony registers automatically a Twig namespace for each enabled bundle. These lines of code are the ones which do that.\nHowever, keep in mind that they use this method which removes the Bundle suffix from the Twig namespace name.\n. Closing it as \"we can't reproduce it\".\n. Closing it as \"we can't reproduce it\".\n. @aruku I've finally managed to test your project. As you said, I can see the Overriden template message:\n\nAnd if I comment these lines:\n``` yaml\napp/config/config.yml\ntwig:\n    debug:            \"%kernel.debug%\"\n    strict_variables: \"%kernel.debug%\"\n    # paths:\n    #     '%kernel.root_dir%/../src/Aruku/Tests/AdminBundle/Resources/views': EasyAdmin\n```\nThe message is gone:\n\n\nIn any case, this issue report was about: \"Need for namespaced syntax config change not documented\". You are right ... but I don't think it's an error. Let me explain myself: in your application, you are creating a custom AdminBundle inheriting from the EasyAdmin bundle. You define the getParent() method and everything that Symfony requires.\nHowever, in our documentation we never mentioned this possibility ... and we did it on purpose. I don't believe in bundle inheritance because I think it's overkill. So we don't document that behavior and we just recommend you to use the easy third-party bundle extending mechanism. To do so, you have to create a custom AdminController inheriting from the one provided in this bundle. And that's all. You don't need the extreme bundle inheritance mechanism.\nAnd lastly, regarding your specific error, I think it's normal because our templates are always referred as @EasyAdmin/... and your bundle is called AdminBundle so Symfony creates automatically a namespace called @AdminBundle/...\n. Nice! Thanks @xabbuh.\n. Sorry for having merged it too soon. I was already in the middle of the merge process when I got your comment about the need to fix some deps. Next time I'll wait more time before merging PR.\n. @xabbuh thanks for investigating this issue. I think that the best option would be to remove these tests with duplicated keys. What do you think?\n. @Pierstoval thanks for the reference, but I don't think we're talking about the same thing. There are two \"Configuration\" classes here: the Symfony's DI container Configuration class and our own custom Configuration class that belongs to the Configurator namespace.\nWe already have lots of tests for the Symfony class because it's very easy to do that. But I'm talking in this issue about our own configuration class.\nAnd regarding the comment about moving everything to the container configuration ... I wish we could, but as far as I know, I think it's not possible to do that because we need the full container built to access the Doctrine services and get entity metadata.\n. Fixed in #193\n. Closing it in favor of #193. Thanks @xabbuh for your help solving the original issue of the tests.\n. Thank you @xabbuh.\n. Thanks @xabbuh. It's always a good idea to not rely on well-known deprecations.\n. Thanks for fixing this bug @bmanolov.\n. Using the Doctrine constants in the template looked ugly, so I moved everything to the PHP code. Let me know what you think.\n. @jesusdiez thanks for the reference. I've just updated everything to allow action configuration per entity.\n@Pierstoval I agree with you about creating new Twig functions. You can check out them in 248e1a0. And I also agree that the name should be compatible with some sort of security system (although that is something reserved for the very far future).\n. @Pierstoval I find your proposal too complex and a bit out of the current scope of the bundle. You certainly are right about taking into account things like \"how do I exclude a custom action from the list\". But that's very easy to control:\nyaml\neasy_admin:\n    actions: [..., ...]  # <-- displayed in all listings\n    entities:\n        MyEntity:\n            actions: [..., ...]  # <-- displayed in this entity listing\nSo the answer to your question is: don't include that custom action in the global actions option ... or define the actions option for the entity which you don't want to see that custom action.\n. @Pierstoval let's talk about that in the PR which will follow this PR. Then we'll add custom actions and we'll have to talk about things like these. The current PR is the previous needed step to add custom actions feature.\nThis PR is now finished and ready for the final review. Thanks.\n. @ogizanagi thanks for your comments. Answering your concerns:\n- You are right and I don't like the magic that brings in the special inherit value.\n- You cannot override the six default actions in the custom_actions option. You can override them by overriding the methods of the AdminController. That's possible as of today.\n- If you want to perform some action to the whole entity, you can do that in the code. But that's very strange, because custom actions are displayed as links for each list item. Users will assume that acton affects only to the given record.\n- The last constraint is done on purpose to maintain simplicity. In my own experience, it's very uncommon to display a custom actions for all the entities managed by a backend. These custom actions are usually special tasks for some specific entities.\n. I'm not sure about adding the option of defining entity repository methods, but let's see the opinions of others. I show bellow some examples of the three proposed types of custom actions.\n\nyaml\nUser:\n    class: AppBundle/Entity/User\n    custom_actions:\n        - { method: 'grantAccess', label: 'Grant' }               # 1\n        - { repository: 'softDelete', label: 'Delete' }           # 2\n        - { route: 'update_user_information', label: 'Refresh' }  # 3\n1) A method of the AdminController (you have to extend the default one and create your own admin controller):\n``` php\n// EasyAdmin executes the following:\n$this->{$method}();\n// EXAMPLE:\n$this->grantAccess();\n// ...\npublic function grantAccess()\n{\n    $entity = $this->em->find($this->request->query->get('id'));\n}\n```\n2) A method of the repository related to the current entity:\n``` php\n// EasyAdmin executes the following:\n$repository = $this->em->getRepository($this->entity['class'])\n$repository->{$repository}($this->request->query->get('id')); \n// EXAMPLE:\n$repository = $this->em->getRepository('AppBundle\\Entity\\User');\n$repository->softDelete(12);\n```\n3) A Symfony application route:\n``` php\n// EasyAdmin executes the following (in the 'list.html.twig' template):\n\n    {{ label }}\n\n// EXAMPLE:\n/*\n * @Route('update_user_information')\n /\npublic function updateUserInformationAction(Request $request)\n{\n    $user = $this->get('user_repository')->find($request->query->get('id'));\n// ...\n\nreturn $this->redirectToRoute('admin', array(\n    'action' => 'list',\n    'entity' => $request->query->get('entity'),\n));\n\n}\n```\n. @Pierstoval thanks for your ideas. Let's go for another round of comments.\n\nI don't like the override_default_actions option because to me it looks like a hack (although it's not). What about implementing the following behavior:\n- Global actions option: what you put is what you get.\n- Local actions option: you inherit the global actions and you can easily add and remove actions.\nExample:\nyaml\neasy_admin:\n    # these 3 actions are the only ones enabled by default\n    actions: ['show', 'search', 'statistics'] \n    entities:\n        User:\n            # adds 1 custom action, removes 1 custom actions, removes 1 default\n            # action and adds two default actions only for this entity\n            actions: ['grantPermission', '-statistics', '-show', 'new', 'edit']\n\nThe last use case that you comment looks extremely advanced and customized to me. In any case, I think you can easily solve it with a custom action tied to a route. You get the id of the map to edit, execute some code, render your own templates, with your own JavaScript code and then you push some button in your template which sends you to your controller and at the end of it, redirect the user back to the EasyAdmin template.\n. I think we're complicating everything too much. I'll publish soon a new proposal to provide most (but not all) of your requirements.\n. OK. Here are my latest ideas around actions. Let me know what do you thing about it.\n\nReference of the different customization strategies\nSelect the built-in actions to display\nBy default, EasyAdmin displays all the built-in actions:\n- list page: new, show, edit, search.\n- edit page: save, delete, list.\n- new page: save, list.\n- show page: edit, delete, list.\nIf you want to remove any built-in action, use the -action_name syntax:\nyaml\neasy_admin:\n    list:\n        actions: ['-edit', '-search']\n    edit:\n        actions: ['-delete']\n    show:\n        actions:\n            # same as above\n    new:\n        actions:\n            # same as above\nThe actions option can also be defined for entities instead of the entire backend.\nAdd a simple custom action\nyaml\neasy_admin:\n    list:\n        actions: ['publish']\n    edit:\n        actions:\n            - { action: 'grantAccess', type: 'method', label: 'Grant' }\nThe actions option can also be defined for entities instead of the entire backend.\nFull action customization\nAn example of a super complex action customization:\nyaml\neasy_admin:\n    list:\n        # global actions displayed for all items of the 'list' action of all entities\n        actions:\n            # built-in options (you can redefine their labels and their behavior)\n            - '-show'\n            - '-search'\n            - '-edit'\n            # custom action - implicit options: type = method, label = 'unpublish'|humanize\n            - 'unpublish'\n            # custom action - implicit options: label = 'publish'|humanize\n            - { action: 'publish', type: 'method' }\n    edit:\n        # global actions displayed for the 'edit' action of all items of all entities\n        actions:\n            # built-in options (you can redefine their labels and their behavior)\n            - 'save'\n            - 'delete'\n            # custom action - implicit options: type = method, label = 'unpublish'|humanize\n            - 'softDelete'\n            # custom action - implicit options: none\n            - { action: 'save_as_pdf', type: 'route', lavel: 'Save as PDF' }\n    show:\n        # same as above\n    new:\n        # same as above\n    entities:\n        User:\n            class: AppBundle/Entity/User\n            list:\n                actions:\n                    # don't display the 'search' action for the 'list' action of this entity\n                    - '-search'\n                    # don't display the 'show' action for the 'list' action of this entity\n                    - '-show'\n                    # custom action - implicit options: type = method, label = 'resendRegistrationEmail'|humanize\n                    - 'resendRegistrationEmail'\n                    # custom action - implicit options: none\n                    - { action: 'grantAccess', type: 'method', label: 'Grant' }\n                    # custom action - implicit options: none\n                    - { action: 'softDelete', type: 'repository', label: 'Delete' }\n                    # custom action - implicit options: none\n                    - { action: 'update_user_information', type: 'route', label: 'Refresh' }\n            edit:\n                actions:\n                    # override the properties of a custom action for the 'edit' action of this entity\n                    - { action: 'softDelete', type: 'repository', label: 'Remove' }\n                    # remove this custom action for the 'edit' action of this entity\n                    - '-save_as_pdf'\n            show:\n                actions:\n                    # same as above\n            new:\n                actions:\n                    # same as above\nThe actions option can also be defined for entities instead of the entire backend.\n\nReference of action types\ntype: method\nExample:\nyaml\neasy_admin:\n    list:\n        actions:\n            - { type: 'method', action: 'grantAccess', label: 'Grant Access' }\n            # the following configuration is equivalent\n            # - 'grantAccess'\nEasyAdmin executes the method of the AdminController that matches the action\nname: $this->{$method}();\n``` php\n$this->grantAccess();\n// ...\n// define this method in a controller extending AdminController\npublic function grantAccess()\n{\n    $entity = $this->em->find($this->request->query->get('id'));\n}\n```\ntype: route\nyaml\neasy_admin:\n    list:\n        actions:\n            - { type: 'route', action: 'user_grant_access', label: 'Grant Access' }\nEasyAdmin generates the following link in the list.html.twig page:\ntwig\n<a href=\"{{ path(action.action, { entity: entity.name, id: entity.id }) }}\">\n    {{ action.label }}\n</a>\nThe route of the action can be replied by any controller of your application:\n``` php\n/*\n * @Route('user_grant_access')\n /\npublic function grantAccessAction(Request $request)\n{\n    $user = $this->get('user_repository')->find($request->query->get('id'));\n// ...\n\n// finish the custom action redirecting the user to the 'list' action\nreturn $this->redirectToRoute('admin', array(\n    'action' => 'list',\n    'entity' => $request->query->get('entity'),\n));\n\n}\n```\ntype: repository\nyaml\neasy_admin:\n    list:\n        actions:\n            - { type: 'repository', action: 'grantAccess', label: 'Grant Access' }\nEasyAdmin executes the method grantAccess() of the repository associated with\nthe given entity, and passes the id of the selected entity as argument:\nphp\n$repository = $this->em->getRepository($this->entity['class'])\n$repository->{$action}($this->request->query->get('id'));\n$this->em->flush();\nExample:\nphp\n$repository = $this->em->getRepository('AppBundle\\Entity\\User');\n$repository->grantAccess(12);\n$this->em->flush();\ntype: entity\nyaml\neasy_admin:\n    list:\n        actions:\n            - { type: 'entity', action: 'grantAccess', label: 'Grant Access' }\nVery similar to the repository type, but the method is executed on the Doctrine\nentity itself, not on its repository:\nphp\n$entity = $this->em->getRepository($this->entity['class'])->find($this->request->query->get('id'));\n$entity->{$action}();\n$this->em->flush();\nExample:\nphp\n$entity = $this->em->getRepository('AppBundle\\Entity\\User')->find(12);\n$entity->grantAccess();\n$this->em->flush();\n\nReference of action configuration options\n\naction, the name of the action (it depends a lot on the type of action).\ntype, the type of action. Possible values: method (default), route, repository, entity.\nlabel, the title displayed by the action on the browser. By default, the\n  label is the humanized version of the action name.\nicon, (default = null) the name of the FontAwesome icon to display next\n  to the action label. This value is displayed as <i class=\"fa fa-{{ icon }}\"></i>.\ntarget, (default = item). Only available for list actions. If item,\n  the action is displayed next to each listing item. If entity, action is\n  displayed once for the entire listing (e.g. the new and search actions).\n\n\nAction inheritance behavior\nWe have:\n- built-in actions\n- global backend actions\n- local entity actions\nImagine that the backend configuration is as follows:\nyaml\neasy_admin:\n    list:\n        actions: ['global_action']\n    entities:\n        User:\n            list:\n                actions: ['local_action']\nWhat are the actions of User?\n- new, show, edit, search from the built-in actions\n- local_action for obvious reasons\n- global_action?\nImplicit action inheritance\nEntities inherit global backend actions and they use -action_name syntax\nto avoid inheriting unwanted actions:\nyaml\neasy_admin:\n    list:\n        actions: ['global_action']\n    entities:\n        User:\n            list:\n                actions: ['local_action', '-global_action']\nExplicit action inheritance\nOn the contrary, if entities don't inherit the global actions, they should repeat\nthem in case they want to display them:\nyaml\neasy_admin:\n    list:\n        actions: ['global_action']\n    entities:\n        User:\n            list:\n                actions: ['local_action', 'global_action']\nIn my opinion the first behavior (implicit) is more intuitive than the second\none (explicit).\n. @Pierstoval thanks for your comments ... and for reading my long comments :smile:\n- After reading your first comment I've changed my mind: method and route are enough for now. We'll leave entity, repository and other extravagant options for the future.\n- After reading your second comment:\n  - You talk about a big BC break ... but it's not true in this case. Right now the option is called list_actions in 1.0.8 version. I propose to change it to list -> actions in the next stable version. You may have used the actions option ... but that's for the development version which is no guaranteed to not change. That's why I've added a note in the documentation telling the user that he/she probably want to read the documentation of the most recent stable version (see fc69956).\n  - I still prefer to define the actions option for each action (list, edit, etc.) There is no longer the concept of \"action\", but \"action in some page\". Your proposal (show_in option) has the same effect but in my opinion feels less natural.\n. @ogizanagi I've read your comments carefully (as I always do with your comments) and I've finally made my mind about custom actions. I admit that your proposal about \"independent actions\" is not wrong but I believe that it's too complicated to fit EasyAdmin philosophy. The same goes for your thoughts about third-party bundles and \"reusable actions\". You are not wrong, but right now we don't care at all about third-party bundles. EasyAdmin is a monolithic piece of software, and I proudly say that as a good feature, not as something wrong.\nAll in all, I'm going to implement what I explained in this comment. However, I'll make the following changes to simplify things:\n- Actions can only be of two types: method (default) and route\n- There are 6 built-in actions called: edit, show, list, new, delete, search. You cannot override their type (they are always of type method) or their target (new and search are always entity and the rest are item). And you cannot change the way they are visualized (search will always be an inline form).\n- For the built-in actions you can only change their label, their icon and if they are enabled or not.\n- The main constraint of your custom actions is the template used to display them: this is hardcoded and cannot be modified: some actions are displayed as buttons and other as links, depending on the page and the type of action.\n- The inheritance between global and local actions is implicit.\n. @Pierstoval I was referring to \"the thing\" that users click to activate your action. Sometimes is a button and sometimes is a link (e.g. in the listings of items). You cannot change that to do fancy things. For example, the search action is neither a button nor a link: it's a form. You cannot do that with your actions: you'll always get a button or a link.\n. @Pierstoval :+1: you explained it perfectly!!\n. @Pierstoval to be honest, I'm waiting for the implementation to decide if this option remains or if it's removed. At the end, we'll probably start with \"item actions\" for list and \"entity actions\" for the rest of pages.\n. > I apologize for having continuously looped on my own concerns\nNo need to apologize at all. In fact, we must be very \"selfish\" and demand support for solving the needs of our backends (e.g. I added boolean flip switches because I selfishly need them in some of my backends). So please, keep asking and demanding anything that you (real backend users) need for your backends. The only thing we should keep in mind is that we target the 80% simplest backends. If your needs are very complex, go for the powerful SonataAdmin bundle.\nYes, we're going to allow to use your own themes, but let's do one thing a time. My current personal roadmap is as follows:\n- Custom actions\n- New (and simple) visual customizations (two level menus, form themes, and a lot more)\n- Doctrine associations (autocomplete fields for long -to-many fields and add support for many-to-many)\n- File upload support\n. I'm glad to finally close this issue as solved by #202\nBy the way, impressive stats of the related PR:\n\n. I'm glad to finally close this issue as solved by #202\nBy the way, impressive stats of the related PR:\n\n. Although we can surely improve everything, I think the current situation is pretty good from a performance point of view (I regularly check the bundle with Blackfire). Let me explain some details:\n- All the \"static\" configuration is resolved and cached by the dependency injection. If you check the appProdProjectContainer.php file of the app/cache/prod/ folder, you'll see the resolved easyadmin.config parameter.\n- There are a lot of \"dynamic\" configuration which cannot be resolved at compilation time. For example we need the metadata of the Doctrine entities, which I think we cannot safely get in a static way before running the application. Therefore this is the part that we \"cannot\" cache and it's resolved at execution time.\n- Since parsing the dynamic configuration takes time, we use a very primitive cache to save parsed configuration for all entities.\nWhat thing could we improve? Maybe we could use APC cache to store parsed dynamic configuration. But for now, the backend is \"fast enough\" in my opinion and I wouldn't complicate things.\nIs there any other important thing that I may have missed?\n. The problem is that you are using the stable 1.0.8 version but reading the documentation of the inestable master version. In 1.0.8, this option was called list_actions. You can safely use this \"old\" option because in newer versions of the bundle we update this option transparently to you.\n- Documentation for EasyAdmin 1.0.8\n- Documentation about list_actions option for EasyAdmin 1.0.8\n. By the way, I see that in your screenshot you can't see any translation (list.page_title, action.new, etc.)  You should probably clear your cache and make sure a locale is active in your Symfony application.\nPS: EasyAdmin is not currently translated into Catalan, but we gladly accept translations from our users ;)\n. @Zelfrost thanks for contributing this nice improvement!\n. @aruku thanks for reporting this error. I've just fixed it in dev version: https://github.com/javiereguiluz/EasyAdminBundle/commit/5270932dfd3d7772532305d3d13f51b25a2863d5\n. This issue has been fixed in the latest 1.1.0 version. If you still experience this problem after updating the bundle version, please reopen this issue. Thanks.\n. I've just released a new stable version numbered 1.1.0. Please update the dependency of this bundle in your project and check if the bug has been fixed. Thanks.\n. Great! I'll close this issue then. Thanks.\n. @Pierstoval I've tested it a lot too but I'm afraid of merging it because it's a huge change and we could easily break things. The problem is that this week has been super busy for me and I couldn't work on this PR the time it requires.\n. Nope. We just need good tests. We added tens of them ... but we need to add more. The problem is that I don't know how to create those tests. I want to define some YAML configuration snippet and get the full parsed configuration to test it. But for that, I need to pass the YAML file through all the Symfony container but I don't know how to do that in a single bundle :(\n. OK. I've added a ton of new tests (see 66395dd) and now I'm confident about merging this huge PR.\n. @ogizanagi to be honest, I find the proposals a bit redundant. For example, this configuration looks redundant to me:\nyaml\nactions: \n    - { name: 'restock', type:'method', value: 'restock' }\n    - { name: 'restock', type:'route', value: 'app_product_restock' }\nUsing the proposed configuration, you can achieve the same with the following configuration:\nyaml\nactions: \n    - 'restock' \n    - { label: 'restock', type: 'route', name: 'app_product_restock' }\nI know that some people are afraid of using one thing for different purposes. In our case, the name option sometimes is the name of a method and other times is the name of the route. Although I also believe that using one thing for two different purposes is generally a mistake, I believe that in this case it's a convenience that makes sense.\n. Actually, when the action is of type route, the action name is not included in the URL. See https://github.com/javiereguiluz/EasyAdminBundle/pull/202/files#diff-2684f030d2a20dae6483641bbb2adf8bR73-77 for an example.\n. @ConneXNL thanks for opening this issue to discuss ways to improve the bundle.\nSadly, your proposal is the opposite of what we think this bundle should be. Moreover, the creator of Sonata himself, recently said:\n\nIf I have to recode Sonata, I will have only one bundle with all configuration code with options to enable features. It is far more easier for maintainers and users.\n\n(see full comment)\nThe opinion of the creator of Sonata reassures me that we're on the right track.\n. @Pierstoval but if you read the comment of Sonata creator, you see that even for a super-complex project like his, he wishes to use just one bundle with lots of options and stop this \"decouple everything\" trend.\n@Pierstoval please wait a bit until you submit these ideas because I'm going to submit A LOT of changes related to design customization during the next days. And remember, if the change is big, it's better to create an issue to discuss about it and make a decision instead of wasting a lot of time creating some code that ultimately could get rejected.\n. Thanks @Pierstoval.\n. I prefer the simple solution provided by @Pierstoval (which I tweaked in 6474657) instead of using the filter_var() function.\n. @aruku sorry for the lack of response. This week I'm under a very heavy work schedule so I cannot look at this. I also have pending a big feature merge. When things go back to normal (very soon) I'll look this problem into detail.\n. @aruku I think you made the right choice. If you cannot make EasyAdmin work, it's better to test other admin generators. In our documentation we provide some alternatives that you may consider for creating your backend.\nI'm sorry we couldn't help you.\n. @aruku thanks for posting the solution to the problem. I'm glad it's working again :)\n. @xabbuh I agree. My question is: to restrict the possible options that one con provide for an entity item, should I define an arrayNode + prototype as explained here: http://symfony.com/doc/current/components/config/definition.html#array-nodes ?\n. Thanks for working on this. My lack of response so far is that I'm thinking about the need of this feature. And I'm also looking for how (or if) other comparable projects include it.\n. @guillermogfer thanks for your comments! However, if your backend is very complex, you probably shouldn't use this bundle because it's a very recent project and we lack some important features (although we are working tirelessly to add them soon).\nInstead of \"throwing aray\" Sonata, you should probably use it to build your complex backend (in fact, in our documentation we recommend to use Sonata for very complex backends).\n. @Pierstoval I'm leaving the menu thing until the end on purpose. Meanwhile we'll be able to discuss about it.\n. @Pierstoval I promise that the theme option will make sense in the near term. Trust me :)\n@ogizanagi I don't forget about #207. I assure you that I will consider it in the short term. If you don't have time to finish or rebase it, I'll take your work and I'll finish it. Thanks.\n. @Pierstoval there is a (hopefully) better proposal as of 0c2e299\n. @Pierstoval good idea! I've added a 10 minutes cache. I'm going to merge this PR as it is now, because I want to work in a relaed PR to pick the color scheme of the backend. If we find any problem with this PR, I'll fix it in the next PR. Thanks.\n. The design option is not available in the latest stable version, which is probably the one you are using in your project. That's why the README includes a note about the importance of choosing the right version documentation:\n\nRegarding the assets option, it works as expected for me. Can you please checkout the HTML code of the backend page to see if the CSS file is linked? Thanks.\n. I like your proposal @Pierstoval, but I don't like the proposed solution because it looks like a lot of work. I want to maitain the 1 master branch and N tags workflow.\nThe alternative solution that I propose in d19107f is to always link to the most recent stable version, which is what most people expect (we'll update the links for each new version). I think that if you are smart enough to use the dev-master version, you'll have no problems finding its documentation.\n. I'm closing this issue, because we already published a new version following this trick and it seems to work as expected. We'll revisit this technique in the future.\n. @aruku thanks for opening this issue. As @Pierstoval said, this issue has been discussed some times and rejected for now. The reason is simple: we cannot add advanced features (such as role management) until we complete all the basic features first. And I'm afraid we're not there yet.\n. Closing it for the reasons explained in this comment.\n. @Pierstoval thanks por this proposal. I like it, but I have some doubts about the implementation.\nTo fully understand this feature request, please tell me: how many attributes can a widget define?\n- If it's a matter of very limited number of attributes (disabled and a few more) we can define them as first-class field options (like we do for the class, label, etc. options)\n- If it's an unlimited number of attributes, maybe we could define a generic attr option (instead of widget-attr, which I don't like much).\n. @Pierstoval thanks for the reference about the possible widget attributes. Out of the full list, I think we should only consider as relevant the following options:\n- readonly\n- disabled\n- required\n- pattern\nI propose to add those options as first-level options, without the need to add widget_attr or attr. What do you think?\nMoreover, I propose to add a new field property called nullable to allow the behavior requested by @ogizanagi in #206. What do you think?\n. I don't think the configuration gets heavier because most of the times those options won't be used. The options are there in case you need them and disappear if you don't use them.\nRegarding the nullable option, you are right that it will fail spectacularlystar if the underlying property doesn't allow null values. But we won't fix that or try to guess it. The user configuring the backend should know their application better. If they make a mistake, they'll see an error message and they'll easily fix it. The same happens with Doctrine/Symfony: if you put null on a non-nullable property, the application explodes stunningly.\n. I was thinking of the following:\n| Option | Default Value | Comments |\n| --- | --- | --- |\n| nullable | false | If true, a checkbox appear next to the field to disable the widget and set it to null |\n| readonly | false | If true, the readonly attribute is added to the HTML widget |\n| disabled | false | If true,  the disabled attribute is added to the HTML widget |\n| required | false | If true,  the required attribute is added to the HTML widget |\n| pattern | null | If different from null, the value is added as the pattern atribute of the HTML widget |\n. Closing it because it's been superseeded by #323. Thanks @Pierstoval for insiting so much in this feature. I think it makes sense to implement it.\n. As @Pierstoval cleverly guessed, I'm afraid that I cannot merge this PR and I have to close it.\nI know that this can be considered rude, so please let me explain myself. This bundle defines a roadmap which is followed with discipline. This laser sharp focus is what could make us succeed one day. Trust me that I'd like to have something like @aruku's proposal, but I know that first we have to implement other basic features. We cannot add great features to something which is not great. Right now this bundle is barely \"good enough\" to create basic backends. And that's why there is a long road ahead before considering adding security-related features.\nThanks for understanding it.\n. @aruku thanks for reporting this issue. It hit me the other day, so I can confirm it as a bug.\nYesterday I started a WIP change to improve the configurator code. The first change (available in this commit: https://github.com/javiereguiluz/EasyAdminBundle/commit/af16a3b0df0ae9232c2b4139096f5999e2e7b640) fixes the issue that you just reported. So we'll have the fix soon. Thanks!\n. I can also confirm this bug and I'm working to fix it. Thanks for reporting it.\n. I can't reproduce this error.\n1) When using only the edit config:\nyaml\neasy_admin:\n    entities:\n        MyEntity:\n            edit:\n                actions: [{ name: 'delete', icon: 'minus-circle' }]\n\n2) When using only the form config:\nyaml\neasy_admin:\n    entities:\n        MyEntity:\n            form:\n                actions: [{ name: 'delete', icon: 'minus-square' }]\n\n3) When using both the edit and form config:\nyaml\neasy_admin:\n    entities:\n        MyEntity:\n            form:\n                actions: [{ name: 'delete', icon: 'minus-square' }]\n            edit:\n                actions: [{ name: 'delete', icon: 'minus-circle' }]\n\n. @aruku thanks for the explanation. I now fully understand the problem and I can confirm it as a bug. I'm working to fix it.\n. This issue has been fixed in #230\n. @Pierstoval thanks for this proposal. Indeed it's useful, so I'm going to merge it right away. Moreover, I want to improve the way we override things so this method will be very useful for that. Thanks!\n. Great!  As always, I only ask you one thing: if you are gonna propose a big change, please consider opening first an issue to discuss about it instead of spending a lot of time working on a pull request. Thanks.\n. By the way, there was a very minor typo in the name of the method. It's been fixed in 5a113437a9d722b18ed268904f41d6e48aa7da2d\n. You both are right. @aruku you can use text as field type ... but it's automatically transformed into the textarea form type. The code was updated some time ago, but the documentation wasn't. I've just updated it in https://github.com/javiereguiluz/EasyAdminBundle/commit/3c280e1cc7733efef244118dac1248a6c619d336\n. If you want a text field (i.e. an < input type=\"text\" /> widget, use the string type). If you use text, it's understood as a Doctrine text type, which turns into a <textarea> widget. Hopefully the new table added to the documentation solves this confussion: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/4-customizing-list-view.md#customize-fields-appearance\n. @aruku sorry for the confusion. I think we finally solve the issue:\n- The values of the field type option now can only be a valid Symfony Form type.\n- If you don't configure the type option, we infer the best value based on the Doctrine type.\n- If you configure the type explicitly, we use that value without changing it.\nPractical example:\n- If type: 'string' you get an error because string is not a valid Symfony Form type.\n- If type: 'text' you get a <input type=\"text\" /> as expected.\n- If type: 'textarea' you get a <textarea> as expected.\n. I must confess that I did this on purpose ... but thanks to your pull request I realized that I was wrong.\nThe font size of the site name automatically adapts to its length. If you use ACME you'll see a big and beautiful site name and if you use ACME Megacorp you'll see it in small letters. However, if your site name is really long, the font size no longer changes and the overflow text is lost.\nI'm going to test this change in my backends and I'll merge it ASAP. Thanks.\n. I've found a big problem in this proposal :cry:  It works perfectly for long names ... but it breaks the design for short names. The first alternative solution I can think of is using an image as the site name. The other one is using the following markup:\nyaml\neasy_admin:\n    site_name: '<div style=\"line-height: 1.3\">My Company <br/> Our Project</div>'\nWhat do you think of these solutions? Do you know any alternative CSS solution that we could use to keep both long and short names vertically centered? Thanks.\n. When using your CSS, I get these results:\nLong Project Name\nIt only looks right in the > 1200px and > 1024 resolutions\n\n\n\n\nShort Project Name (~ 99% of use cases)\nIt only looks right in the > 1200px resolution\n\n\n\n\n. In case it's useful, here it is a web service dedicated to solve the awful CSS centering drama: http://howtocenterincss.com/\n. @Pierstoval thanks for working on this. I really appreciate it. Sadly, the last version doesn't work right on my computer using the demo application.\nFor SHORT names the four breakpoints work perfectly:\n\n\n\n\nFor LONG names it doesn't look right:\n\n\n\n\nAm I doing something wrong?\n. @Pierstoval thanks for working on this. I really appreciate it. Sadly, the last version doesn't work right on my computer using the demo application.\nFor SHORT names the four breakpoints work perfectly:\n\n\n\n\nFor LONG names it doesn't look right:\n\n\n\n\nAm I doing something wrong?\n. @Pierstoval excuse me because I'm completely stupid. Your PR fixes the issue with multiline site names, not with very long names. I've tested it with multi-line names and it works perfectly:\n\n\n\n\nI'm going to merge it right now. Thanks a lot for working on this. I really appreciate it.\n. @Pierstoval excuse me because I'm completely stupid. Your PR fixes the issue with multiline site names, not with very long names. I've tested it with multi-line names and it works perfectly:\n\n\n\n\nI'm going to merge it right now. Thanks a lot for working on this. I really appreciate it.\n. @mrkoch you are right that the admin CSS file has \"disappeared\" in the 1.2.0 version.\nThe reason is that we now include some cool design customization options and we need to generate the CSS file dynamically. There is a new method in the controller which does that. So the CSS file doesn't exist physically but it's generated by the controller and therefore, backends should keep working as before.\nDo you have any problem with the styles of the backend?\n. @mrkoch your config looks right (and anyway, the bundle already does a lot of checks in the config, so most of the problems should be reported).\nI think that the best way to check if the CSS is correctly loaded in your backend is to open directly the URL of the admin CSS file, which should be the following:\n/app_dev.php/admin/_css/admin.css?brand_color=%23E67E22&color_scheme=light\nPlease try to load that URL and let's see if some error happens.\n. I remember doing that to prevent cache issues. If you change a configuration value, you want the new CSS file to be updated right away. But maybe we should do what you say.\n. @mrkoch great! I'm glad this is fixed now. We'll tackle the issues pointed by @Pierstoval in a separate issue. Thanks!\n. @javihgil thanks for your proposal. Since we're always relunctant to add new configuration options, I'd like to know first the use case of this option. Thanks.\n. After having thought about this proposal, I don't think we need this feature. First, I think is an error to click on the logo of the backend and go anywhere else. However, since each project has its own requirements and circumstances, I agree that in some cases, it may be necessary.\nHowever, adding this option looks wrong to me because we are providing an exception. Why should we let configure this and not other things? What I really want is to give you the absolute control over every backend element and do it in a simple way.\n@Pierstoval recently initiated a discussion to allow to set the template used to render any of the backend parts. I want to do that, because that would allow you to configure the logo route and any other element of the backend. For example, to customize this option, you would do something like this:\n``` yaml\napp/config/config.yml\neasy_admin:\n    # ...\n        template: 'admin/layout.html.twig'\n```\nAnd in your custom template, you only override the specific blocks you need:\n``` twig\n{# app/Resources/views/admin/layout.html.twig #}\n{% block logo %}\n    \n ACME Backend \n\n{% endblock %}\n```\nLastly, I don't think this feature would belong to the menu either. I believe that's a completely different element.\n. I agree with you, but I don't think it's that important. We can improve the logic that deals with the configuration files and we'll do it for sure in the future. But honestly, I can't see that as a priority right now. Keep in mind that in this project, the priorities are in this order:\n1. UX (end-user experience)\n2. DX (developer experience)\n3. Code quality/purity\nWe still have a lot of things to do for UX and DX :)\nI'm closing this issue as \"won't fix now\", but I've tagged it with the \"future\" label, so we'll revisit it in the coming months. Thanks.\nPS: by the way, the most important configuration (which is the entity configuration) cannot be completely validated using the config component. We need the real metadata that is obtained during the application execution, so we cannot get that information during container compilation.\n. Closing it because this is now superseded by the new documentation of the bundle merged in #285. Thanks.\n. Closing it because this is now superseded by the new documentation of the bundle merged in #285. Thanks.\n. I fully agree with this proposal ... but I want to think a bit more about the implementation. As always, I prefer to think of general solutions that can be applied to everything instead of very specific solutions. Please, let me think about this a bit more.\n. Closing it because https://github.com/javiereguiluz/EasyAdminBundle/pull/244 has been merged and you can now easily override/customize any backend template.\nPlease read the new section of the chapter 10 to learn how to customize the backend templates: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/10-customizing-design.md#customize-the-templates-of-the-backend\n. @ogizanagi you are right, but I think that the use case you mention is very rare. To correctly see the original table in a smartphone, you can only have 2 columns with tiny contents or 1 column with very short contents. In practice that means that the table looks horrible in a desktop and honestly I think it's a very rare scenario.\nLet's merge this PR and test it in real backends. Then we'll do the required tweaks.\n. Closing it because https://github.com/javiereguiluz/EasyAdminBundle/pull/244 has been merged and you can now easily override/customize any backend template.\nPlease read the new section of the chapter 10 to learn how to customize the backend templates: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/10-customizing-design.md#customize-the-templates-of-the-backend\n. If you use the latest stable version, create your own AdminController extending from the default one and add this method:\nphp\npublic function createNewUserEntity()\n{\n    return $this->get('fos_user.user_manager')->createUser();\n}\n. If you use the latest stable version, create your own AdminController extending from the default one and add this method:\nphp\npublic function createNewUserEntity()\n{\n    return $this->get('fos_user.user_manager')->createUser();\n}\n. @arukado-sama thanks for testing this bunde and please don't stop reporting the issues you find while using it in real backends. That's the best way for us to spot errors and potential improvements in UX.\n. @ogizanagi I'd like to make this bundle more FOSUser-friendly. Sadly I'm one of the few Symfony developers who has never ever used FOSUser bundle. So first I must use it a bit to learn about its features.\n@Pierstoval honestly, I prefer if users ask for tutorials/cookbooks and I write them.\n. @Pierstoval honestly I prefer to develop this myself because it's not really such a complex feature. In #244 I've submitted a large part of the implementation of this new feature, so we'll have it finished soon.\n. @Pierstoval honestly I prefer to develop this myself because it's not really such a complex feature. In #244 I've submitted a large part of the implementation of this new feature, so we'll have it finished soon.\n. Closing it because https://github.com/javiereguiluz/EasyAdminBundle/pull/244 has been merged and you can now easily override/customize any backend template.\nPlease read the new section of the chapter 10 to learn how to customize the backend templates: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/10-customizing-design.md#customize-the-templates-of-the-backend\n. @ogizanagi thanks a lot!!!!!!! Everything worked perfectly and the drop shadow is back! :tada: \n. @ogizanagi thanks a lot!!!!!!! Everything worked perfectly and the drop shadow is back! :tada: \n. @Pierstoval I've just merged this change, could you please test it in your backends to see if everything keeps working as expected? Thanks!  Since it's all about using the right HTML markup, nothing should change visually.\n. @Pierstoval I've just merged this change, could you please test it in your backends to see if everything keeps working as expected? Thanks!  Since it's all about using the right HTML markup, nothing should change visually.\n. Closing it because the bug has been fixed in #245\n. @FerchoSF it's fixed now in the dev version, so we have to wait a bit until a new bundle version is realeased to use it in your application.\n(El error ya est\u00e1 corregido, pero s\u00f3lo en la versi\u00f3n dev inestable del bundle. Tenemos que esperar un poco a que lancemos la nueva versi\u00f3n para que ya puedas usarlo sin problemas en tu aplicaci\u00f3n. Gracias.)\n. @FerchoSF it's fixed now in the dev version, so we have to wait a bit until a new bundle version is realeased to use it in your application.\n(El error ya est\u00e1 corregido, pero s\u00f3lo en la versi\u00f3n dev inestable del bundle. Tenemos que esperar un poco a que lancemos la nueva versi\u00f3n para que ya puedas usarlo sin problemas en tu aplicaci\u00f3n. Gracias.)\n. Thanks for fixing this bug @ogizanagi.\n. Thanks for fixing this bug @ogizanagi.\n. Thanks for creating this PR. I haven't merged it yet because I've tested it and it doesn't work in my backends. I'll investigate it this evening/night.\n. Thanks for creating this PR. I haven't merged it yet because I've tested it and it doesn't work in my backends. I'll investigate it this evening/night.\n. The view parameter tells where you are and the action parameter tells what you want to do. We need both to check if you have permission to do what you want where you are (e.g. deleting in show view is allows but it's banned in edit view).\n. The view parameter tells where you are and the action parameter tells what you want to do. We need both to check if you have permission to do what you want where you are (e.g. deleting in show view is allows but it's banned in edit view).\n. I've taken the work that you initiated in this pull request and finished it in #245. Please let me know if you agree with it. Thanks!\n. I've taken the work that you initiated in this pull request and finished it in #245. Please let me know if you agree with it. Thanks!\n. I've updated this PR and now you can override any template fragment used to display field contents.\n. I've updated this PR and now you can override any template fragment used to display field contents.\n. @Pierstoval regarding the search template, I want to leave it for the near future. The reason is that I want to do some tweaks to the search action and probably separate it from the list action.\n. @Pierstoval I'm afraid I don't understand your comment below:\n\nIn the extension, I see that you don't check if the $entityConfiguration['templates'] exists nor is set, because it may be good to allow override with a totally different template, or use the same template for two entities but not the others, which is not possible with the actual implementation. \nThe templates already set in the entity should be the \"0-level\" priority IMO.\nEDIT: A simple if (isset($entityConfiguration['templates'][$templateName])) { continue; } should be enough?\n\nWhich specific file are you referring to? Could you please elaborate a bit more your use case? Thanks.\n. @ogizanagi personally I think that's a big plus in terms of code simplicity and application performance. Besides, it's not that bad to have 20 small templates to override any of them instead of one large template with 20 small blocks that can be overridden.\n. @ogizanagi you didn't sound bad at all! I also think it's very convenient to create one large file with small template fragments .... but the consequences of that would be to create a very complex and slow system, like the Symfony Forms.\n. @Pierstoval I understand you now. You are right: entities should be able to define their templates too. Everything has been updated: code, docs and tests. This PR is now \"finished\" and ready for the final review before merge. Thanks.\n. I've added a lot of minor tweaks and a big important feature: I've created lots of new Twig blocks in the layout, new, edit, show, list and form templates. @Pierstoval if you can, please check that the proposed blocks are enough to provide lots of design flexibility (of course in the future we can easily add, remove or tweak any other block). Thanks!\n. OK, this is merged now, so we can test the dev version of the bundle to check whether things work as expected. Thanks!\n. @fadoe thanks for opening this discussion and sorry for not answering you earlier.\nI'm totally in for displaying better error messages and rendering the errors inside the form instead of throwing an ugly exception page. We do that for any form validation error, but I don't how to could we do it for database-related errors.\nAnyone could shed some light on how to achieve this? Should we warp the database related code in a try/catch block?\n. I'm fixing this issue in #368.\n. I'm fixing this issue in #368.\n. This issue has been finally fixed in #368 and it will be included in the next stable release. I'm pretty happy with the new way we deal with these Doctrine errors. Thanks for the proposal and for the discussion.\n. My guess is that eZ Publish is changing somehow the original Symfony template loader. By default, Symfony registers a \"namespace\" for your bundle. If the bundle is called EasyAdminBundle, the namespace registered by Symfony is EasyAdmin and therefore, @EasyAdmin/... works right.\nIn this case it seems that the namespace is not automatically registered. You probably can register the namespace manually:\n``` yaml\napp/config/config.yml\ntwig:\n    paths:\n        '%kernel.root_dir%/../vendor/javiereguiluz/easyadmin-bundle/Resources/views': EasyAdmin\n```\nIn any case, this is a temporary solution which is never needed when using \"a pure Symfony application\". The real solution would be to ask someone expert in eZ Publish about the Twig namespace registering.\n. Closing this issue because it seems related to eZ Publish and the new stable version of the bundle allows to easily override any template and/or fragment.\n. Thanks for your proposal. Image upload support is not possible yet, but we'll add it in the near future.\n(Gracias por tu sugerencia para mejorar el bundle. Por el momento no es posible subir im\u00e1genes, pero a\u00f1adiremos esta funcionalidad en un futuro pr\u00f3ximo)\n. @manuelj555 pero el tema es que preguntaba sobre el soporte para subir archivos y eso todav\u00eda no funciona.\n. @javimares we only use English in this repo. For Spanish, you can use the symfony-es channel on Symfony Slack. Thanks!. A small but nice improvement. Thanks @skyosev\n. @arukado-sama the main problem is that you have caught us in the middle of a big change.\nRight now, overriding a template is possible but boring. You have to use Symfony's inheritance mechanism (the custom template should be defined at app/Resources/EasyAdmin/views/ and you have to \"destroy\" the cache contents (a rm -fr app/cache/* is the best in this case).\nHowever, very soon you'll be able to use a much more powerful and simple override mechanism. This is explained in the Chapter 10 of the documentation. But this is only available in the dev version of this bundle. If you are using a stable version, this won't work. Very soon I'll publish a new stable version and you'll be able to use this feature.\n. @arukado-sama OK, then it must be a bug. Just two quick questions:\n1. Are you using the latest stable version of the bundle?\n2. When you say \"it doesn't work\", you mean some error happens or it just displays the default template without letting you override it?\nThanks.\n. @arukado-sama OK thanks. I'm going to look into it.\n. I've tested the following:\n$ symfony demo\n$ composer require javiereguiluz/easyadmin-bundle\nEnable the bundle in AppKernel and impor routes in app/config/routing.yml\nNow, if I create just a custom layout.html.twig template, it doesn't work:\napp/Resources/EasyAdminBundle/\n\u2514\u2500\u2500 views\n    \u2514\u2500\u2500 default.html.twig\nIf I create a list.html.twig template, it works (it overrides the default list template):\napp/Resources/EasyAdminBundle/\n\u2514\u2500\u2500 views\n    \u2514\u2500\u2500 list.html.twig\nIf I define the two custom templates:\napp/Resources/EasyAdminBundle/\n\u2514\u2500\u2500 views\n    \u251c\u2500\u2500 default.html.twig\n    \u2514\u2500\u2500 list.html.twig\nWhen I put the following in the list.html.twig template:\ntwig\n{% extends '@EasyAdmin/default.html.twig' %}\nThe application uses my custom default.html.twig.\nI still don't understand why, but the Symfony inheritance works almost always ... but for the deafult template it only works if it's explicitly used by a custom template.\nFortunately we'll soon merge the new inheritance mechanism and we'll silently deprecate this Symfony stuff.\n. While we merge the new feautre, I'm reopening this issue just in case some visitor knows the cause of the error and wants to help us solve it. Thanks!\n. I've just released the new 1.4.0 version of this bundle. Since overriding the layout.html.twig template is now possible in lots of simple ways, I'm closing this issue as fixed. But if you think is not fixed at all or have problems with the new version, please reopen it. Thanks!\n. I fully agree with this proposal. A backend generator should provide almost inifinite flexibility, so we definitely need to do things like this. @Pierstoval thanks for submitting the pull reuqest.\n. Thanks @Pierstoval.\n. @Pierstoval thanks a lot for this serious bug fix!\n. @manuelj555 I don't plan to add that feature because embedding a backend inside another backend looks an edge case to me.\nHowever, there are multiple solutions to this problem. You could create a controller that extends from AdminController (as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/6-customizing-new-edit-views.md#customize-the-actions-used-to-create-and-edit-entities) and override the indexAction method to set the id or any other attribute in the user session.\nYou could also override the templates of the backend (or just the layout.html.twig template) to add, remove or tweak the request parameters variable. Soon this will be very easy to do it, once we release the new stable version (read https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/10-customizing-design.md).\nPS: there is no need to translate the question into Spanish. English is the only supported language for this bundle :)   (I translated a reply once because it seemed that the user didn't speak English).\n. Closing it for now for being considered as an edge case. We'll reconsider it in the future. Thanks @manuelj555 for proposing this feature and please, continue reporting bugs and proposing new ideas. Thanks!\n. @manuelj555 thanks for reporting this bug. I'll fix it very soon.\n. Fixed in #261\n. @Pierstoval thanks for your proposal. I've just updated the PR with your code. It's so obvious that this is the way it should be done that I wonder what the hell I was thinking before :confused: \n. My idea right now is to add a new configuration option in which entities can define the service which creates the form. But it's not decided yet.\n. Closing it as \"fixed\" because the recent versions of this bundle allows for lots of customization, from type options, to easy customization of templates, new customizable methods in the controller, etc.  Feel free to reopen if this is not solved. Thanks!\n. @manuelj555 thanks a lot for reporting all these issues. Please keep'em coming :)  I've just proposed in #263 a pull request to fix this issue.\n. Fixed in #263.\n. In addition to supporting two-level menus, my plan  to fix this issue is to use a technique similar to dribbble.com: show three or four menu items and hide the rest in a ... item:\n\n. In https://github.com/javiereguiluz/EasyAdminBundle/commit/256329c53585560f3110cff1f2df646786a4c5ed I've started to work on a fix using the flex-menu jQuery plugin. It's half done but I can't make it work perfectly. If someone savvy in JavaScript wants to finish the work, I'd be very grateful :)\n. Closing it as fixed in #302\n. In the dev version of the bundle we've fixed some problems of the search engine. It now works as expected:\n\nI will release a new stable version of this bundle very soon.\n. I've just released the new 1.4.0 version of this bundle. Since I cannot reproduce the problem, I'm closing this issue as fixed. But if you still suffer it after upgradig, please reopen it. Thanks!\n. I tried @Pierstoval solution and I didn't like it. I think he is right about his solution being more professional and good enough (real enough) but I prefer the other solution because it's simpler. I already have a Symfony app to showcase EasyAdmin and that app already contains functional tests .... I don't want to create another app.\nBy the way, I've created a test repository and whenever I commit something to it, Travis downloads the demo application and runs the functional tests: https://github.com/javiereguiluz/test/blob/master/.travis.yml\nWhat's left? I need to integrate that with the .travis.yml of this repository to run the functional tests whenever we commit something here.\n. > If you want me to set this up in the bundle, based on your demo app, feel free to ask!\n@Pierstoval that would be very kind :)  If you think it would take you little time/effort to set things up based on your own bundle, please send us a pull request. Thanks a lot!\n. Fixed in #270.\n. Closing it as fixed by #323 and #326. These features will be available in the next stable release coming in a few days.\n. Regarding the form creation, I want first to add two simple configuration options for entities: form_class and form_service. Setting those options is the easiest way to do extreme form customizations, because you are using your own code to build the form.\nAnd regarding the events suggestion, I'll open soon a new issue about that. In short, backend customization is done at three levels and we've completed the first two:\n- [DONE] Add a lot of simple config options to customize any backend element\n- [DONE] Allow to easily customize every template and fragment of the backend\n- [TO DO] Allow to easily customize/tweak the actions to create/edit/save any backend entity.\nFor this last item I'll propose a dual system: the first one is simple/pragmatic and it's based on code conventions; the second one is more advanced and is based on events.\n. The latest dev version of the bundle dispatches lots of events, not only for the form creation. Everything is documented in the new docs available at: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. The latest dev version of the bundle dispatches lots of events, not only for the form creation. Everything is documented in the new docs available at: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. Thanks @pborreli. As usual, very nice catches!\n. @Pierstoval thank you for working on this. The work you've done is just fantastic! This is exactly what I wanted to do but I didn't know how to do it :)\nI agree with @ogizanagi about the directory structure, but I guess it will just take a while to get used to it.\nI'm going to merge this code as is and in the coming days I'm going to tweak some minor things (such as adding PHPdocs, adding a reference to the original repo where this code was copied from (https://github.com/Orbitale/CmsBundle), etc.) Anyway, I will be very busy until Wednesday, so I won't be able to work on it until then.\n. Regarding the search customization, I plan to allow soon to configure the entity fields on which the query is performed. I'm also thinking (although it's very probable that it won't be ultimately added) to add an option called search_query where you can write the DQL query to perform, just in case you need extreme customization. \n. @arukado-sama I've just merged #273 to allow to configure the fields used to perform the search queries:\n``` yaml\napp/config/config.yml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            search:\n                fields: ['firstName', 'lastName', 'email']\n    # ...\n```\nFor now you can use it in the dev version and it will be availble in the next stable version of the bundle to be published soon.\n. I think this proposal makes sense.\nThe easiest way to implement it that I can think of is adding a new request query parameter called return_to. In the list view we add the return_to parameter to the show and edit links (and any other link to a custom action) and then we know where to return to after show/edit actions. Any ideas to make it even simpler than this?\n. Fixed in #280. I've tested and it works OK for me: now you are always returned to the list/search page you were before showing/editing/deleting an entity.\n. @antkowiakit we don't have file upload support and we don't plan to add support for it in the short term. Rest assure we'll add it in the future.\n. I'm closing this issue because it's not going to be actionable in the short term. But don't worry because we won't forget about this feature. We really want to add it in the future.\n. @Pierstoval it's true that a more advanced strategy would be better. But I prefer to keep things simple here because this entity name is an internal thing. It's true that it appears in the URL, but you never use or care about that. The only important value is the label of the entity, which in real applications is always defined by hand.\n. The entity name cannot be overridden (it never was). In any case, is that common to have multiple entities with the same name?\n. ### Delete the search field (but keep search activated)\nCreate this template:\n``` twig\n{# app/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{# create an empty block to avoid displaying the search form #}\n{% block search_action %}{% endblock %}\n```\nInsert something between the form and the buttons\nCreate this template:\n``` twig\n{# app/Resources/views/easy_admin/form.html.twig #}\n{% extends '@EasyAdmin/default/form.html.twig' %}\n{% block item_actions %}\n{# insert here your custom content to be displayed before the buttons #}\n\n{{ parent() }}\n\n{% endblock %}\n```\nInsert something after the form and buttons\nCreate this template:\n``` twig\n{# app/Resources/views/easy_admin/edit.html.twig #}\n{% extends '@EasyAdmin/default/edit.html.twig' %}\n{% block entity_form %}\n{{ parent() }}\n\n{# insert here your custom content to be displayed after the form #}\n\n{% endblock %}\n```\nDelete some buttons\nIt depends on which buttons you want to remove. If they are regular actions, you  only have to remoev those actions:\nyaml\neasy_admin:\n    # This removes the `delete` button in the `edit` view for all entities\n    edit:\n        actions: ['-delete']\n    entities:\n        Customer:\n            # This removes the `delete` button in the `edit` view only for this entity\n            edit:\n                actions: ['-delete']\n            # ...\nHowever, there are some buttons which are hardcoded (e.g. the \"Save\" button in \"edit\" and \"new\" views). If you need to remoe those buttons, override the template as explained before.\n. Then you have to use JavaScript code to detect if you are inside an iframe. I'd create a new JavaScript file for the backend and link it as explained in this section. Then you only have to do a .style.display = 'none' if the conditions to hide the form are met.\n. Closing it as \"resolved\". If you find any problem, please reopen it. Thanks.\n. The trick is to open the corresponding template (.e.g EasyAdmin/Resources/views/default/show.html.twig) and checkout the Twig blocks you can override or reuse.\nIn this case, you can override the item_actions block or directly the main block as follows:\n``` twig\n{# app/Resources/views/easy_admin/show.html.twig #}\n{% extends '@EasyAdmin/default/show.html.twig' %}\n{% block main %}\n{{ parent() }}\n\n{# insert here your custom content to be displayed after the form buttons #}\n\n{% endblock %}\n```\n. I like the idea and I'm going to work on it. By the way, I prefer to do this work myself because I beleive that documentation is more consistent when only one person writes it. Of course I'll need your help reviewing the changes.\n. @Pierstoval my idea consist of following your proposal :)\nI plan to divide the documentation in two parts:\n- Getting Started Guide\n- Advanced Tutorials\nThe \"Getting Started Guide\" contains 80% of the current documentation and focus on the simplest and most common customization options.\nThe \"Advanced Tutorials\" is a cookbook of advanced techniques, such as extreme template/action customization.\n. This is the tentative TOC:\nGetting Started Guide\n\nInstallation (current chapter 1)\nYour first backend (current chapter 2)\nConfiguring the backend (current chapter 3)\nCustomizing the List view (current chapter 4)\nCustomizing the Show view (current chapter 5)\nCustomizing the New/Edit views (simplified version of the current chapter 6)\nCustomizing the Search view (current chapter 7)\nCustomizing the backend design (the basic stuff from current chapter 10)\nAbout this project (current chapter 12)\n\nAdvanced Tutorials\n\nCreating custom actions (current chapter 8)\nCustomizing backend behaviour with controllers (the advanced stuff from current chapter 6)\nCustomizing backend behaviour with events (new content)\nCustomizing backend templates (the advanced stuff from current chapter 10)\nAdvanced techniques (current chapter 9)\nConfiguration reference (current chapter 11)\n. This is fixed in #285\n. This is fixed in #285\n. Unless there is any bug, it works \"right\" because the referer is only set by the list and search pages. So you cannot end up in a referer hell of circular references.\n. @Pierstoval here you have a screencast of the scenario you propose: I make a search, go to the second page, edit the entity, make a mistake, an error happens, fix the error and when I clcik save ... I return to the original second page of the search:\n\n\n. @arukado-sama thanks for your suggestions. It's true that the behavior that you propose is common in some backends. However, in EasyAdmin we made some decisions a time ago regarding these topics.\nOne of those decisions is to not bother the user with useless messages. 99.99% of the times things work right (in EasyAdmin and in any other backend). That's why we believe you shouldn't display messages when things go right (e.g. \"Chages saved successfully\") but when they go wrong (validation errors, database errors, etc.)\nWith this new behavior, when you click on \"Save\" you don't stay at the form, but you return to the exact same page where you clicked on \"Edit\", so you can click again on that link if that's what you want (in my experience, saving several consecutive times the same form is not very common).\n. I like this idea and I'm already working to implement it (as I said in this comment). So we can safely close this issue as \"being implemented right now\" :smile: \n. The first version of this customization mechanism is ready to be reviewed in #283\n. @Pierstoval this is quite complex, because the pull request is based on another one which hasn't been merged yet: https://github.com/javiereguiluz/EasyAdminBundle/commit/256329c53585560f3110cff1f2df646786a4c5ed\n@mashware thanks for working on this. I'll take your wokr and I'll apply it to the other PR to see if the problems are fixed. I'll let you know. Thanks!\n. @mashware thanks a lot for working on this!! I've taken the commits of this PR and I've created another one in #302 to finish two minor things. That's why I'm closing this PR to merge instead the other one. Don't worry about your commits because you will remain as their original author. Thanks again for your work.\n. @ogizanagi in my opinion this system doesn't bring magic but conventions. And I think those are two very different things. In Symfony 1 for example the filter system changed your response without you being aware of it (that's magic). In Symfony 2 if you create a file with a very specic name (e.g. messages.fr_FR.xlf) and in a very specific location (e.g. app/Resources/translations/) that file is loaded and used in the application (that's a convention).\nRegarding the createNewCustomerEntity(), editProductAction(), etc. methods, not only I think they are necessary, but in practice they will be only methods used by developers. Otherwise you have to override a very complex method (newAction()) or do some ugly stuff with if or switch as pointed by @Pierstoval.\nIn short, I think this new feature is consisent with the rest of the bundle behavior:\n1. Do you want some basic customization? Use the tens of configuration options available.\n2. Do you want to do some cool stuff? Use two coventions: app/Resources/views/easy_admin/<EntityName>/<templateName>.html.twig templates and <actionName><EntityName>Action() methods.\n3. Do you want extreme customization? Use your own templates (define them in design.templates option) and the event system of the AdminController.\n. @ogizanagi yes, the entity name is \"magic\" for one use case: when you have totally different entities that share the same name. How often does this happen? In my experience very infrequently ... but I'd love to hear other experiences.\nAnd yes, I plan to make the entity name configurable in the future to avoid problems in this edge case.\n. I think I have a solution for this problem:\n1) If you use the simple config format, the name is autogenerated:\nyaml\neasy_admin:\n    entities:\n        - 'AppBundle\\Entity\\Product'\n        - '...'\nIf there are more than one entity with the same name, EasyAdmin autogenerates incremental names (Product, Product2, Product3).\nThis is not a problem because if you are using this config format, you are obviously doing some quick-and-dirty test of this bundle and you are not going to extend the backend with a custom controller.\n2) If you use the other config formats, the YAML key will be used as the entity name. This solves our problem because you obviously can't have different YAML keys with the same value:\n``` yaml\nconfig format 2\neasy_admin:\n    entities:\n        Product: 'AppBundle\\Entity\\Product'\n        ProductArchive:  'AppBundle\\Entity\\Archive\\Product'\nconfig format 3\neasy_admin:\n    entities:\n        Product:\n            class: 'AppBundle\\Entity\\Product'\n        ProductArchive:\n            class: 'AppBundle\\Entity\\Archive\\Product'\n```\nThere is only one catch: right now we use the YAML key as the label (unless you define the label option for the entity). This means that someone could do the following:\n``` yaml\nconfig format 3\neasy_admin:\n    entities:\n        'Current Products':\n            class: 'AppBundle\\Entity\\Product'\n        'Product Archive (2015)':\n            class: 'AppBundle\\Entity\\Archive\\Product'\n```\nAnd that would be a problem because you cannot name a PHP method as newCurrent ProductsAction().\nSo this is my proposal:\n- Always use the YAML key as the entity name, so the developer has full control over it (unless the basic config format is used, where names are autogenerated).\n- Throw an error if you use white spaces or unsafe characters in the YAML key. This is a BC break, but it's not that important and we'll throw good error messages.\n- If someone wants to customize the label of the entity, use the label option in that entity (this is the same as of now, but this proposal will turn it into the only way to do this).\nWhat do you think?\n. @Pierstoval I like your comments about reducing code repetition and extracting the logic about checking if a custom method exists. But I'm not sure about the proposed alternatives. That's why I'm going to merge this PR as is and I'll think about how to improve that part of the code in the future.\nAfter merging this PR, this is the roadmap (to be compelted in different PRs):\n- Fix the handling of the entity names as discussed above. Basically we must prvent developers from using unsafe chars in the YAML key associated with each entity.\n- Reorganize the documentation as discussed in #279 \n- Add more functional tests, specially for the new features introduced recently\n- Release the new stable version\n. @Pierstoval I don't agree with your proposal to change that note about dev/stable versions ... but anyway I've done the change as you suggested. Let's see if that makes me chage my mind about this :)\nRegarding the doc reorganization, everything is finished now. Since it's impossible to review this PR, I'm going to merge it as is and then you can read the doc of the dev version to spot any error. Thanks!\n. @Pierstoval I don't agree with your proposal to change that note about dev/stable versions ... but anyway I've done the change as you suggested. Let's see if that makes me chage my mind about this :)\nRegarding the doc reorganization, everything is finished now. Since it's impossible to review this PR, I'm going to merge it as is and then you can read the doc of the dev version to spot any error. Thanks!\n. I think this makes a lot of sense ... but could this be considered \"magic\"? We are changing the entity name for the method names without warning the user. In any case, my vote is clearly for accepting your proposal. Let's see if @Pierstoval or anybody else has an opinion against this.\n\nPS: fixing the tests is by far the easiest thing to do when changing these things: you only have to add this instruction in the line 51 of the EasyAdminExtensionTest class:\nphp\nfile_put_contents($outputFixtureFilepath, $parsedConfiguration);\nThen run the test suite two consecutive times and the second time everything will work fine. Lastly, do a git diff to see if any change in test files is suspicious.\n. @ogizanagi for templates I think you are right and it's better to use whatever the user put as the entity name.\n. @ogizanagi I guess you are right (and @Pierstoval is also right). I still think using CamelCase is the only way to do things right ... but enforcing it to every user without providing a mechanism to disable it looks wrong. What I've done is to add a lot of tips in the new documentation reminding the developers to use CamelCase syntax:\n[...] The entity name must be unique in the backend and it's recommended\nto use the CamelCase syntax (e.g. BlogPost and not blog_post or blogPost).\nThe name of the method is constructed as createNew<EntityName>Entity()\nso it's recommended to use CamelCase notation to set the entity names.\n. @ogizanagi I guess you are right (and @Pierstoval is also right). I still think using CamelCase is the only way to do things right ... but enforcing it to every user without providing a mechanism to disable it looks wrong. What I've done is to add a lot of tips in the new documentation reminding the developers to use CamelCase syntax:\n[...] The entity name must be unique in the backend and it's recommended\nto use the CamelCase syntax (e.g. BlogPost and not blog_post or blogPost).\nThe name of the method is constructed as createNew<EntityName>Entity()\nso it's recommended to use CamelCase notation to set the entity names.\n. If you check out the test file, you'll see that sometimes I use entity_name (Category) and sometimes the entity_label (Categories). In some titles is better to use the label (Look for Categories) and in some buttons is better to use the name (New Category).\nRegarding the UPGRADE file, I think this change is more like a bugfix so it's not really a BC break.\n. If you check out the test file, you'll see that sometimes I use entity_name (Category) and sometimes the entity_label (Categories). In some titles is better to use the label (Look for Categories) and in some buttons is better to use the name (New Category).\nRegarding the UPGRADE file, I think this change is more like a bugfix so it's not really a BC break.\n. @xabbuh thanks for trying to improve the tests. However, as you can see this produces a lot of errors. Some of them should be easy to fix, like the following, which refers to an option not available in older Symfony versions and which we use in the \"fake\" Symfony application used in the functional tests:\n1) AppBundle\\Tests\\CategoryEntityTest::testListViewPageTitle\nSymfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException:\nUnrecognized options \"fallbacks\" under \"framework.translator\"\nBut there are a lot of other tests that seem more complicated to fix. My question is: is it worth it to fix them? Is it an acceptable compromise to not test the lowest deps?\n. @xabbuh thanks for trying to improve the tests. However, as you can see this produces a lot of errors. Some of them should be easy to fix, like the following, which refers to an option not available in older Symfony versions and which we use in the \"fake\" Symfony application used in the functional tests:\n1) AppBundle\\Tests\\CategoryEntityTest::testListViewPageTitle\nSymfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException:\nUnrecognized options \"fallbacks\" under \"framework.translator\"\nBut there are a lot of other tests that seem more complicated to fix. My question is: is it worth it to fix them? Is it an acceptable compromise to not test the lowest deps?\n. @xabbuh I've tracked the error and I think I've finally found it.\nThe 6th line of paginator.html.twig is the following:\ntwig\n{{ 'paginator.counter'|trans({\"%start%\": paginator.currentPageOffsetStart,\n\"%end%\": paginator.currentPageOffsetEnd, \"%results%\": paginator.nbResults})|raw }}\nPagerFanta bundle added currentPageOffsetStart and currentPageOffsetEnd in its 1.0.1 version. The composer.json of EasyAdminBundle requires:\njson\n\"pagerfanta/pagerfanta\"         : \"~1.0\",\nIf you change it by:\njson\n\"pagerfanta/pagerfanta\"         : \"~1.0.1\",\nThe error disappears.\n. @xabbuh thank you for working on this PR which ultimately fixed lots of minor things!\n. @Pierstoval thanks for reporting this bug. @ogizanagi although it's not a usual things, as long as you have a setter or public property in the related Doctrine entity, you should be able to add \"virtual fields\" to forms. After #298 I think this problem is fixed because the error I get is the following:\n\nAfter adding a getter and setter for the virtual field, everything works as expected.\n. @Pierstoval thanks for reporting this bug. @ogizanagi although it's not a usual things, as long as you have a setter or public property in the related Doctrine entity, you should be able to add \"virtual fields\" to forms. After #298 I think this problem is fixed because the error I get is the following:\n\nAfter adding a getter and setter for the virtual field, everything works as expected.\n. @RogerBCA thanks for suggesting this improvement. Sadly this feature is too far-sighted according to our roadmap. This would be a \"great feature\" but we are still adding \"good features\", so we are not there yet.\nAs pointed by @Pierstoval, the good news is that implementing this feature is already possible thanks to the Symfony built-in features, the Doctrine extensions and the flexible extension points provided by this bundle.\nLastly, I've tagged this issue with future + feature labels. I'm going to close it as \"won't fix for now\", but thanks to these labels we won't lose this issue when we revisit in the future the features to implement. Thanks!\n. @RogerBCA thanks for suggesting this improvement. Sadly this feature is too far-sighted according to our roadmap. This would be a \"great feature\" but we are still adding \"good features\", so we are not there yet.\nAs pointed by @Pierstoval, the good news is that implementing this feature is already possible thanks to the Symfony built-in features, the Doctrine extensions and the flexible extension points provided by this bundle.\nLastly, I've tagged this issue with future + feature labels. I'm going to close it as \"won't fix for now\", but thanks to these labels we won't lose this issue when we revisit in the future the features to implement. Thanks!\n. Good catch, thanks @maqnouch.\n. Good catch, thanks @maqnouch.\n. I hate typos! Thanks for helping us fixing them.\n. I hate typos! Thanks for helping us fixing them.\n. Great! We are on track to become the first typo-less Symfony bundle!\n. Great! We are on track to become the first typo-less Symfony bundle!\n. @RogerBCA thanks for noticing this bug and for doing the effort of reporting it in English.\nI can confirm that this is a bug introduced by the latest changes in the bundle. In #298 I've tried to fix it and I've added a new test to avoid this error from happening again in the future.\nThanks again for helping us improving this bundle!\n. @RogerBCA thanks for noticing this bug and for doing the effort of reporting it in English.\nI can confirm that this is a bug introduced by the latest changes in the bundle. In #298 I've tried to fix it and I've added a new test to avoid this error from happening again in the future.\nThanks again for helping us improving this bundle!\n. @arukado-sama as always, thanks for your suggestion. Although most of the times we say \"no\" to the new proposed features, it's always great to hear the real needs of real users using the bundle to develop real backends.\nSadly, this feature looks very complex to implement and moreover it looks redundant with Doctrine associations. That's why I'm closing it as \"won't fix for now, but we reconsider it in the future\". If two entities are related (like the project-client relation you discussed) they should define a real Doctrine relation between them.\nI've created several backends where lots of entities are related between them ... and everything works as expected as long as they don't define a many-to-many relation. In the easy-admin-demo application you can see a simple example of related entities: a category is related with a \"parent category\". The listings of the categories show the \"parent category\" field as a clickable link where you can find all the information about the related entity:\n\n. @arukado-sama as always, thanks for your suggestion. Although most of the times we say \"no\" to the new proposed features, it's always great to hear the real needs of real users using the bundle to develop real backends.\nSadly, this feature looks very complex to implement and moreover it looks redundant with Doctrine associations. That's why I'm closing it as \"won't fix for now, but we reconsider it in the future\". If two entities are related (like the project-client relation you discussed) they should define a real Doctrine relation between them.\nI've created several backends where lots of entities are related between them ... and everything works as expected as long as they don't define a many-to-many relation. In the easy-admin-demo application you can see a simple example of related entities: a category is related with a \"parent category\". The listings of the categories show the \"parent category\" field as a clickable link where you can find all the information about the related entity:\n\n. @Pierstoval I like the overall idea of allowing to extend the bundle in other ways, but I'm not sure about the proposed implementation (I agree with @ogizanagi on this). In addition, I'd like to have real performance stats about backends that use the events or method overriding mechanism before deciding if it's \"too slow\" or \"fast enough\" for production backends.\n. I'm closing this issue because it's not something we're going to implement soon. I've tagged it as feature + future to not lose track of it.\nI understand that closing it may disappoint you. However, I think it's preferable to focus on as few issues as possible instead of pretending we can do everything.\n. @xabbuh I didn't know this trick about Composer cache. Thanks a lot for teaching it to me :)  The first results look very promising.\n. @xabbuh I didn't know this trick about Composer cache. Thanks a lot for teaching it to me :)  The first results look very promising.\n. @ogizanagi I didn't know this trick! I love it. The less lines of code, the better. Thanks a lot!\n. @ogizanagi I didn't know this trick! I love it. The less lines of code, the better. Thanks a lot!\n. I'm :+1: too but I want to think about it to make it as good as possible, from the name of the option to its use (it must be easy to use, write, learn and remember; it must be flexible for the future, etc.)\n. Closing it because it's been superseeded by #323. Thanks @igormukhingmailcom for creating this PR in the first place and for \"pushing\" us to add this feature.\n. @ogizanagi not really. The referer feature was implemented a few commits ago, but here we fix some minor bugs discovered while adding functional tests in the application.\n. Tests pass for most of the Symfony+PHP versions, but in the last functional tests there is a very strange error with 2.7.x-dev and 2.8.x-dev versions. Is this something temporary or should I open an issue in the Symfony repository?\n. If someone not familiar with this bundle wants to look into the error, this is the problem explained:\n1. We use Twig to generate a dynamic CSS file\nHere it is an example of the code we use to allow colors to be configurable by the user:\ntwig\nbody {\n    background: {{ colors.page_background }};\n    color: {{ colors.text }};\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    line-height: 1.5;\n    margin: 0;\n}\n2. If we use #123456 as one of the colors...\n... in Symfony 2.6 and below everything works as expected. Example of the generated CSS:\n``` css\nheader .navbar-toggle i { color: #123456; font-size: 21px; text-align: right; }\n```\n... in Symfony 2.7-dev and 2.8-dev the generated CSS is the following:\n``` css\nheader .navbar-toggle i { color: \\23 123456; font-size: 21px; text-align: right; }\n```\nThe latest Symfony versions wrongly escape the # character of the CSS Hex color.\n3. If we apply the |raw filter to each value, everything works great for any Symfony version\ntwig\nbody {\n    background: {{ colors.page_background|raw }};\n    color: {{ colors.text|raw }};\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    line-height: 1.5;\n    margin: 0;\n}\nAre we doing something wrong in this bundle? Or is this a 2.7/2.8 bug that should be reported to Symfony?\n. @WouterJ thanks for looking into this error, proposing a solution and creating the related issue in the Symfony repository.\n@ogizanagi I fully agree with you. Let's disable the escaping mechanism for this file.\n. @Pierstoval wow! If that's your \"I'm not familiar with Spanish\" level, I guess when you impove it a bit you'll speak it even better than me!\n. Thanks @Pierstoval! I wanted to try Coveralls and your PR is the perfect excuse to do that.\n. Thanks @ogizanagi.\n. @arukado-sama please update the bundle to the latest stable version which was released yesterday. The main menu should no longer overflow like in the image you posted.\n. I can't reproduce the error. With the latest version everything seems to work for me:\n\n. I can't reproduce the error. With the latest version everything seems to work for me:\n\n. @arukado-sama what I'd try in your case is the following:\n1. Update your application to the latest stable version of the bundle (you already seem to do that)\n2. Comment any configuration related to CSS and JS files so the backend only uses \"the official\" CSS/JS files and nor youts\n3. Check if everything works as expected\n   - If not, please tell us so we can fix the error.\n   - If it works, enable again your own CSS/JS files and check which styles/scritps are affecting to your backend.\n. Closing this issue because it's too old and long. Let's discuss new problems in new issues. Thanks!\n. Setting or changing the icon for an action is as easy as defining the icon option for that specific action, as explained here. Example:\nyaml\neasy_admin:\n    list:\n        actions: [ { name: 'edit', icon: 'edit' } ]\nHonestly, I think you are overcomplicating everything :)  You don't need to override a template at all to create an advanced backend. That's only for extremely advanced backends. I seriously recommend you to re-read the entire bundle documentation, which has been completely revamped in the last version: https://github.com/javiereguiluz/EasyAdminBundle#getting-started-guide\n. :+1: I've tested locally without problems. Thanks @ogizanagi!\n. :+1: I've tested locally without problems. Thanks @ogizanagi!\n. Thanks @Pierstoval for working on this. I like the overall idea. I just want to make two minor changes, but first I'll wait for you to solve the issue pointed by @ogizanagi in https://github.com/javiereguiluz/EasyAdminBundle/pull/313#discussion_r30503507 Thanks!\n. Thanks @Pierstoval for working on this. I like the overall idea. I just want to make two minor changes, but first I'll wait for you to solve the issue pointed by @ogizanagi in https://github.com/javiereguiluz/EasyAdminBundle/pull/313#discussion_r30503507 Thanks!\n. I've reviewed this PR and I agree with @ogizanagi: I think it's better to not change the exception page for the dev environment.\nRegarding the implementation, instead of using a listener, do you think it could be possible to just wrap the entire index() method with a try..catch block, catch any exception and render the new error page if necessary?\n. > add the exception templates in the configuration to add them to the template customization system implemented in v1.4 , which will allow users to add custom details in the different templates.\nPlease don't do that. Allowing to use a different exception template for each entity is too much overengineering. I don't think there is a reasonable use case for doing that.\n. I've dedicated some time to this PR and I still don't understand it. The original feature request was: \"if some Doctrine error happens, please don't render a 404 error page and display an appropriate error message\".\nBut this PR creates a full-featured exception listener that captures all exceptions and recreates Symfony's exception pages. I think that this is too much. Moreover, the desired behavior is the following:\n- In dev environment, do nothing. Symfony will take care of everything.\n- In prod environment, display a beautiful and useful error page, like we already do for some errors.\n@Pierstoval I'm really sorry but I need to close this PR without merging it :cry: \n. I've dedicated some time to this PR and I still don't understand it. The original feature request was: \"if some Doctrine error happens, please don't render a 404 error page and display an appropriate error message\".\nBut this PR creates a full-featured exception listener that captures all exceptions and recreates Symfony's exception pages. I think that this is too much. Moreover, the desired behavior is the following:\n- In dev environment, do nothing. Symfony will take care of everything.\n- In prod environment, display a beautiful and useful error page, like we already do for some errors.\n@Pierstoval I'm really sorry but I need to close this PR without merging it :cry: \n. In #368 I'm trying to fix the original issue reported in #246.\n. In #368 I'm trying to fix the original issue reported in #246.\n. I understand your suggestion. The problem is that adding a delete link for list items is very easy, but doing it completely right is pretty complex (you have to create a lot of delete forms, display the appropriate modal window to confirm the delete, etc.)\nWe'll add this action in the future. For now you can define a delete action for the listings of your entities and use a method or route of your own application:\nyaml\neasy_admin:\n    list:\n        actions:\n            - { name: 'deleteFromList', type: 'method', label: 'Delete', icon: 'trash' }\nAnd then you define your own controller with the following method:\n``` php\n// src/AppBundle/Controller/AdminController.php\nnamespace AppBundle\\Controller;\n// ...\nclass AdminController extends BaseAdminController\n{\n    // ...\npublic function deleteFromListAction()\n{\n    $id = $this->request->query->get('id');\n    $entity = $this->em->getRepository('AppBundle:Product')->find($id);\n    $this->em->remove($entity);\n    $this->em->flush();\n\n    // redirect to the 'list' view of the given entity\n    return $this->redirectToRoute('admin', array(\n        'view' => 'list',\n        'entity' => $this->request->query->get('entity'),\n    ));\n}\n\n}\n``\n. I understand your suggestion. The problem is that adding adelete` link for list items is very easy, but doing it completely right is pretty complex (you have to create a lot of delete forms, display the appropriate modal window to confirm the delete, etc.)\nWe'll add this action in the future. For now you can define a delete action for the listings of your entities and use a method or route of your own application:\nyaml\neasy_admin:\n    list:\n        actions:\n            - { name: 'deleteFromList', type: 'method', label: 'Delete', icon: 'trash' }\nAnd then you define your own controller with the following method:\n``` php\n// src/AppBundle/Controller/AdminController.php\nnamespace AppBundle\\Controller;\n// ...\nclass AdminController extends BaseAdminController\n{\n    // ...\npublic function deleteFromListAction()\n{\n    $id = $this->request->query->get('id');\n    $entity = $this->em->getRepository('AppBundle:Product')->find($id);\n    $this->em->remove($entity);\n    $this->em->flush();\n\n    // redirect to the 'list' view of the given entity\n    return $this->redirectToRoute('admin', array(\n        'view' => 'list',\n        'entity' => $this->request->query->get('entity'),\n    ));\n}\n\n}\n```\n. @arukado-sama this brief section of the documentation explains in detail what you have to do: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md#customization-based-on-controller-methods\n. @arukado-sama this brief section of the documentation explains in detail what you have to do: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md#customization-based-on-controller-methods\n. Thanks @Pierstoval and @xabbuh for taking care of these things. You know Travis much better than me :)\n. Closing it in favor of #318 where I've finished/tweaked the original work made by @ogizanagi \n. Your comment is very important. I've just added a note in 990d338\n. I fully agree! Thanks.\n. Closing it as fixed by #323, which allows to set any valid Symfony Form Type option to any property. This feature will be available in the next stable release coming in a few days.\n. I can confirm this error. I've fixed it in #322.\n. Changing the default type options is exactly what we try to do. Hence the name of the option. But maybe I didn't understand your comment.\nAnd I'm not sure if form_options is a good name, because it seems like you are setting the options for the entire form instead of the form field.\n. @romaricdrigon it's not dead ... but right now I have no time to work on this because I'm fully committed to redesigning the Symfony Profiler. I'll be back soon :)\n. I'm really sorry but I have too much work and I can't review this change carefully. Next week is going to be even worse because we are days away from the most important \"feature freeze\" in Symfony's history. I'm 100% focused on Symfony at the moment.\n. It took me forever, but this feature is now finally merged :tada: :tada: :tada:\nWe now can customize form options with the form_options setting and individual form fields with the type_options setting.\n. @joskfg I'm afraid that you reached an edge case of this bundle. We focus on the simplest 80% of the backends, so features like having multiple different backends in the same application is one of the features that we don't support. \"Hacking\" into this bundle, as pointed by @Pierstoval, is one possibility to solve this limitation. But maybe your backend is advanced enough and you should instead consider using SonataAdminBundle.\n. @fiz72 as @Pierstoval pointed, the referer parameter is completely optional. It's only used to return to the original page that you were in before editing/deleting an entity.\nIn your case, you could add the following to your links so you return to your own original bundle pages:\ntwig\n<a href=\"{{ path('admin', { ..., referer: app.request.requestUri|url_encode }) }}\"> ... </a>\n. @Pierstoval the only blocking issue is that I'm still thinking about this and the other realted PR to see what's the best way to implement this. But I'll make some decission soon.\n. @ogizanagi I'm sorry it took me so long to merge your pull request. I'm glad this feature is now available. Thanks a lot for working on this.\n. Minor changes and documented this option in #481\n. My guess is that maybe you have overridden some templates and have forgotten to maintain the original body_javascript block. In that block we configure the boolean flip switches, the delete form handling, etc. In your case, all the broken features rely on JavaScript code defined in the body_javascript block. The solution depends on how you tweak your templates, but you probably can just invoke the parent() function to maintain the original JavaScript code:\n``` twig\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{# ... #}\n{% block body_javascript %}\n    {{ parent() }}\n{% endblock %}\n``\n. Awesome! Thanks @ogizanagi\n. This behavior is on purpose. It (should) works as follows:\n- If you configure nothing, booleans are displayed as flip switches.\n- If you configure a field asboolean, you force the backend to show it as a label instead of flip switches.\n- If you configure a field astoggle`, you force the backend to show it as a flip switch.\n. It should be explained in the \"Customize Boolean Properties\" section of this doc page: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md  Please let me know if the doc is good enough to understand it. Thanks!\n. I understand your PR and I thank you for that .... but I wanted to reorganize tests, so I don't know if this PR is beneficial. This is what I want to do:\n- Create a plain configuration file and an associated functional test to check the values of the default backend (this is essential for EasyAdmin newcomers)\n- Create a 100% customized configuration (change every field, label, action, etc.) and create an associated functional test to check the values of the customized backends (this is essential for EasyAdmin experts).\nAnd in the future I'd like to follow this same workflow: create the minimal specific configuration file to test something and load that config file only in one specific functional tests.\n. This is great! Thanks a lot @ogizanagi\n. @Zubis thanks for reporting this problem. I can confirm it as a bug.\nI think the problem lies in these styles:\n``` css\nheader #header-nav {\n    flex: 1;\n    height: 0 !important;   /* <-- this seems to be the problem */\n    margin: 0;\n    overflow: hidden;\n    overflow-y: auto !important;\n    padding: 0;\n    width: 222px;\n\n}\n``\n. @Zubis the bug has been fixed by @ogizanagi and we have released a new version of the bundle (1.5.2). If you update the dependency, the error should be gone.\n. @ogizanagi thanks for fixing this issue so quickly!\n. @benjamitauler the issue you describe is very strange because it solved itself without doing anything :( Moreover, EasyAdmin doesn't perform any activity related to security, because we rely on the underlying Symfony security layer. Our only security feature is that templates check if the user is logged in to display his/her name in the page header.\n. In one of the coming versions we'll have a simple way to configure the main menu and add custom links. Right now you can do that, but it's not automatic :(  You have to override theheader_menublock of thelayout.html.twig` template. To do so, create the following template in this exact location:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_menu %}\n    \n        {# ... #}\n    \n{% endblock %}\n```\n. I still don't fully understand this use case. Is this something that you commonly require in backends?\nBesides, you can now solve it in two ways:\n1. Override the show.html.twig template for one specific entity and call {% render() %}\n2. Override the showAction() method and the show.html.twig template for that specific entity\nIn any case, I'd like first to finish the features that probably will be more useful:\n1. New configurable main menu\n2. Add support for autocomplete fields (to fix the absurd default behavior of Symfony Forms)\n3. Add support for many-to-many relations\n. @richwandell when you say \"in the middle of the list view\", do you refer literally to the middle? You want to display a <ul> list in the middle of the listing table?\n. @richwandell is that cell the one that displays the actions or is any other column?\n. I'm closing this issue because it's not something we're going to implement soon. I've tagged it as feature + future to not lose track of it.\nI understand that closing it may disappoint you. However, I think it's preferable to focus on as few issues as possible instead of pretending we can do everything.\n. Because we don't have any way to configure if a field is required or not. Soon we'll add support for setting attributes for form fields (there is one pending pull request) and this problem will be solved.\nIf we don't disable form validation, checkboxes will be required, meaning that you must check all checkboxes in order to submit the form.\n. Closing it because soon we'll allow to set options for forms and fields, so you'll be able to change this behaviour.\n. @ogizanagi you are right about the property and type collisions. I don't care about the property one, because we already promote the __toString() practice, so that property is useless for us. And regarding the type option, I don't think it's that important because for very complex forms you should build the form in a PHP class and use it in the AdminController instead of configuring it in the YAML file.\nAnd regarding the segmentation: it's not that hard, but it's another hurdle that we put for people wishing to learn how to configure the backend. That's why I think that the less different things we define, the better.\n. This is only a guess but I strongly think that the YAML configuration options will only be used for super basic features: disabled, readonly, expanded, etc. If your form is complex (or use choice, entity, etc.) it's better to build the form class.\nOur css_class is applied to the form-group element. It's preferred over the attr option.\n. Let's merge this PR to rename the css_class option and then I'll rethink again the other topic. Thanks.\n. @xabbuh you are of course right about keeping BC as being the best thing to do. However, instead of being like Symfony, we prefer to move a bit faster. We maintain BC for very important things (like most of the configuration options) but in this case, it's a pain to maintain BC for that option. Moreover, the worst it can happen is that your form looks a bit different when upgrading the bundle, but nothing will break.\nRelated to this, soon we're going to make an important BC break because we're going to change the route name from admin to easy_admin. Fortunately, even if the BC break is brutal, 90% of users won't notice anything, 9% will need to change 1 word in 1 file and the rest 1% of users will need to replace admin by easy_admin in their custom controllers and templates.\n. @xabbuh you are of course right about keeping BC as being the best thing to do. However, instead of being like Symfony, we prefer to move a bit faster. We maintain BC for very important things (like most of the configuration options) but in this case, it's a pain to maintain BC for that option. Moreover, the worst it can happen is that your form looks a bit different when upgrading the bundle, but nothing will break.\nRelated to this, soon we're going to make an important BC break because we're going to change the route name from admin to easy_admin. Fortunately, even if the BC break is brutal, 90% of users won't notice anything, 9% will need to change 1 word in 1 file and the rest 1% of users will need to replace admin by easy_admin in their custom controllers and templates.\n. I'm closing this issue as won't fix for now because it looks like a \"niche feature\" to me.\nIn the future, when we finish the new menu system, you'll be able to configure the \"About\" link of the main menu to point to the Show action instead of the List action.\nFor now, you can create your own AdminController and add this method:\nphp\npublic function listAboutAction()\n{\n    return $this->redirectToRoute('admin', array(\n        'entity' => 'About',\n        'action' => 'Show',\n        'id' => 1\n    ));\n}\n. @Chalisi thanks for opening this issue to help us improve EasyAdmin.\nI think you are right and that it makes sense to add translation support for the help field as we do for the rest of labels, titles, etc. I'll implement this feature very shortly.\n. I can't reproduce. All the tests run successfully in my computer:\n\nCould you plase share a screenshot or more information about the errors? Thanks.\n. Closing it because I still cannot reproduce the error. Please, reopen the issue if you can provide us more details about the error. Thanks.\n. Closing it because I still cannot reproduce the error. Please, reopen the issue if you can provide us more details about the error. Thanks.\n. @arukado-sama I agree with your feature request and I will implement the needed change to make it possible. @ogizanagi I know this is an edge case, but I believe it won't break anything ... but I'm going to think about this.\n. This is fixed now in #345. Instead of adding a new option to allow empty labels, you can just leave the label empty and everything should work as expected.\n. This is fixed now in #345. Instead of adding a new option to allow empty labels, you can just leave the label empty and everything should work as expected.\n. @arukado-sama this has been fixed in #345 and it will be available in the next stable version. Meanwhile, you can read the documentation of the new feature at https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/tips-and-tricks.md#removing-action-labels-and-displaying-just-icons\n. @arukado-sama don't worry about this issue because @ogizanagi has fixed it in the dev version. It will be available in the next stable version that will be released in a few days.\n. Anyone knows why do tests on PHP 5.3 started failing on Travis a few days ago?\n. Indeed @manuelj555 suggestion makes sense and it's more aligned to Symfony philosophy. But in this case, I prefer to follow Twig philosophy. Let me explain:\nWe provide just one option (called label) that it's used always in the same way and that can produce different results. This improves consistency and reduces the learning curve:\n- Do you want to show the default label? Don't define a label.\n- Do you want to show a simple label? Just write it: label: 'My label'\n- Do you want to translate the label? Just write the translation key: label: 'labels.field_name'\n- Do you want to display just the icon and not a label? Just write an empty label: label: ''\nWhy do I say that this is aligned to Twig's philosophy? Consider for example the case of the random() function. It doesn't matter what you pass to that function (arrays, strings, letters, numbers, etc.), it always does the right thing. In contrast, randomness is chaotic in PHP and you must do (and learn) different techniques to pick random elements in an array, random letters in a string, generate random numbers, etc.\n. Although I don't agree with your comments, the good news is that the changes introduced in this PR allow to set label: false and get the same result as label: ''\nI've also added a new entry in the \"Tips and Tricks\" tutorial about icon-only actions.\nThis is ready for the final review. Thanks.\n. @ogizanagi nice idea. I've added some new tests for checking edge cases.\n. @ogizanagi you are a genius!!! Thanks for fixing this annoying problem.\n. Thanks for fixing this bug @ogizanagi.\n. @andho I'm sorry about that. The reason is that we work continuously on improving the docs and therefore we change a lot of contentes. The new link should be: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/6-menu-configuration.md\n. In order to display a link, these two conditions must be met:\n1. The related entity must be managed by EasyAdmin too.\n2. The related entity must have a getId() public method (if the primary key has a different name, then it must define a get+PrimaryKeyName method. For example: getClient())\nThis behavior was recently improved to fix some edge cases that produced errors, so it must now work as expected in every case. Feel free to reopen this issue (or create a new one) if you still have issues. Thanks.\n. @khaledbouguerra you are probably missing a __toString() method in the Theme entity.\n. @Pierstoval I agree. I don't like the current blocking design. I'm going to try your proposal. Thanks!\n. @Pierstoval I agree. I don't like the current blocking design. I'm going to try your proposal. Thanks!\n. @ogizanagi I know that this behavior is different from what you usually expect from a web application, but let me explain it.\nI'm assuming that EasyAdmin is only used to create internal backends. In this restricted scenario, I think it's safe to provide extra information in the error pages. That way, when an error happens, the end-user will email/phone the tech person in charge of this and he/she will say: \"hey, there is an error that says: \"The Category entity is not defined\". I don't know what that means, but fix it\". With the information provided, odds are that the tech person can easily fix the problem.\nIf we don't provide these errors, the same conversation would be: \"Hey, I click on one link and I see a blank page. Fix it.\" Or \"Hey, I try to edit a product and see a 404 error page. Fix it.\" With this scarce information, the tech person should have to go to the end-user computer, do some tests, read som log files, etc.\n. @ogizanagi I know that this behavior is different from what you usually expect from a web application, but let me explain it.\nI'm assuming that EasyAdmin is only used to create internal backends. In this restricted scenario, I think it's safe to provide extra information in the error pages. That way, when an error happens, the end-user will email/phone the tech person in charge of this and he/she will say: \"hey, there is an error that says: \"The Category entity is not defined\". I don't know what that means, but fix it\". With the information provided, odds are that the tech person can easily fix the problem.\nIf we don't provide these errors, the same conversation would be: \"Hey, I click on one link and I see a blank page. Fix it.\" Or \"Hey, I try to edit a product and see a 404 error page. Fix it.\" With this scarce information, the tech person should have to go to the end-user computer, do some tests, read som log files, etc.\n. @ogizanagi I know that I won't change your mind, but let me try it after the last changes submitted to this PR.\n\nPrevious scenario\nWhen an error occurred, in dev mode EasyAdmin displayed its own error pages instead of the Symfony's exception page. This is wrong, because our error pages don't display debug information.\nMeanwhile, in prod mode we throwed a 404 error for some pages. This means that someone was working on the backend, clicked a wrong link and he/she ended in the 404 error page. The problem is that this page is probably customized for the public part of the website. So one moment you are happily working in the backend ... and a few seconds later you are in the public 404 error page not knowing why or how to go back.\n\nNew scenario\nWhen an error occurs, in dev mode we no longer override Symfony's exception pages:\n\nMeanwhile, in prod we display a custom error page:\n\nIt's true that we display some internal information, but never a sensitive data (such as DB password, SQL queries, etc.) This means that if you are working in the backend and some error happens, you just see a clear error message. You probably don't understand anything, but you can simply click on any other main menu link to keep working. And if you have some kind of technical support, you can tell the guy the message of the error page to help him/her solve the issue.\n. @ogizanagi I know that I won't change your mind, but let me try it after the last changes submitted to this PR.\n\nPrevious scenario\nWhen an error occurred, in dev mode EasyAdmin displayed its own error pages instead of the Symfony's exception page. This is wrong, because our error pages don't display debug information.\nMeanwhile, in prod mode we throwed a 404 error for some pages. This means that someone was working on the backend, clicked a wrong link and he/she ended in the 404 error page. The problem is that this page is probably customized for the public part of the website. So one moment you are happily working in the backend ... and a few seconds later you are in the public 404 error page not knowing why or how to go back.\n\nNew scenario\nWhen an error occurs, in dev mode we no longer override Symfony's exception pages:\n\nMeanwhile, in prod we display a custom error page:\n\nIt's true that we display some internal information, but never a sensitive data (such as DB password, SQL queries, etc.) This means that if you are working in the backend and some error happens, you just see a clear error message. You probably don't understand anything, but you can simply click on any other main menu link to keep working. And if you have some kind of technical support, you can tell the guy the message of the error page to help him/her solve the issue.\n. You are right ... but there is no need to merge them because they are currently merged. Right now we only let to configure some minor options for search field and reuse the rest of options from list. However, in the future we could improve this search view and make it more independent from list.\nTherefore, I'm closing this issue as \"solved\" and at the same time, I've labelled it with feature + future to to not lose track of it and revisit it in the future. Thanks!\n. @arnaugm nice! I love community translations. Thanks a lot for this. Moltes gr\u00e0cies\n. @nzurita thanks for reporting this issue and thanks to @Pierstoval for providing the solution.\nTo avoid further issues related to this, I propose to add a brief help note about the default translation domain. See #391.\n. Given this query:\nsql\n[...] WHERE p0_.id IN (?) OR p0_.title LIKE ? OR p0_.description LIKE ? ...\nwith params [\"Good\", \"%Good%\", \"%Good%\"]\nI interpret it as follows:\nsql\n[...] WHERE p0_.id IN (\"Good\") OR p0_.title LIKE \"%Good%\" OR p0_.description LIKE \"%Good%\"\nThat's why I don't understand your comment @Pierstoval: id field seems to be using the right non-text comparison.\n. @Pierstoval I understand your comment now. Sorry for that. I'm looking into this.\n. I'm trying to fix this bug in #381. Please review the proposed changes. Thanks!\n. Deletion of empty elements only works for Symfony 2.5.0 or higher. That's why we have this code in the AdminController:\n``` php\nif ('collection' === $metadata['fieldType']) {\n    $formFieldOptions = array('allow_add' => true, 'allow_delete' => true);\nif (version_compare(\\Symfony\\Component\\HttpKernel\\Kernel::VERSION, '2.5.0', '>=')) {\n    $formFieldOptions['delete_empty'] = true;\n}\n\n}\n```\n. Yes, it should work if you use Symfony >= 2.5.0. Leave the input empty and that element is gone. (it should)\n. I've tested it with the demo application and I can successfully delete any collection item:\n\n. I can delete last item too :)\n\n. I'm afraid I can't test it with FOSUser roles because I don't use FOSUser in any application :( Maybe our friend @Pierstoval can test it ;)\n. That looks right. In the demo application, the tags are a simple array and features are a regular array:\nsql\n`tags` longtext COLLATE utf8_unicode_ci NOT NULL COMMENT '(DC2Type:simple_array)',\n`features` longtext COLLATE utf8_unicode_ci NOT NULL COMMENT '(DC2Type:array)',\nAnd this is how the information is stored (as you can see, the array field is serialized but the simple array is not):\n\n. Closing it because this issue is a bit messy. If any error still persist, please open a new issue explaining that problem. Thanks!\n. @dnagirl thanks for proposing this feature. This is something I didn't think about before.\nFirst, as I always do, I've looked for how does Sonata solve this issue. They have some special types for list/show and one of them is called trans and defines an option called catelogue. So combining our admin.yml with Sonata's ideas, the result would be:\nyaml\nPerson:\n  label: People\n  class: MyApp\\ContactBundle\\Entity\\Person\n  list: \n    fields: ['lastName', 'firstName', { property: 'title', type: 'trans', catalogue: 'messages' }, 'suffixes']\n    # ...\nFor now I don't want to define all those custom form fields (but I probably will in the future).\nRight now we could solve this issue as follows:\n1. Define a custom template for the string type of the Person entity: src/Resources/views/easy_admin/Person/field_string.html.twig\n2. Customize the view only for the title field:\ntwig\n{% if fieldName == 'title' %}\n    {{ value|trans }}\n{% else %}\n    {{ include('@EasyAdmin/default/field_string.html.twig') }}\n{% endif %}\nHowever, as @Pierstoval said, right now this is impossible because templates don't get the fieldName property. I consider this a lacking feature, so I'm going to add it very soon and it will be available in the next stable version of the bundle.\nLastly, I'd like to share a (crazy) comment related to this: what would you think if we define a template_code option (never mind the name) for the show/list fields. That way, you could solve this issue as follows:\nyaml\nPerson:\n  label: People\n  class: MyApp\\ContactBundle\\Entity\\Person\n  list: \n    fields: ['lastName', 'firstName', { property: 'title', template_code: '{{ value|trans }}' }, 'suffixes']\n    # ...\nOf course this would be only useful for very small customizations.\n. Closing it as \"fixed\". In addition to the suggestions mentioned above, there is a new way to solve this. You can now set the template to use for each property:\nyaml\nPerson:\n  label: People\n  class: MyApp\\ContactBundle\\Entity\\Person\n  list: \n    fields: [{ property: 'title', template: 'translated_title' }, ...]\n    # ...\nAnd then you create this template:\ntwig\n{# app/Resources/views/easy_admin/translated_title.html.twig #}\n {{ value|trans(domain = '...') }}\n. Closing it in favor of #379.\n. Closing it in favor of #379.\n. @ogizanagi thanks! This is a small but nice change. I like it.\n. @ogizanagi thanks a lot for this pull request. I like it A LOT. I've created a new pull request (#394) based on this one to do some minor refactorings and tweaks. I took your commit so you get full credit for your work. Thanks.\n. @ogizanagi thanks a lot for this pull request. I like it A LOT. I've created a new pull request (#394) based on this one to do some minor refactorings and tweaks. I took your commit so you get full credit for your work. Thanks.\n. Closing it as \"fixed\". Both proposed solutions should work, although @Pierstoval's one looks \"more correct\" in the sense that it overrides the template correctly to add the new action.\n. Closing it as fixed because collections now allow to add and delete any item.\n. Closing it as \"fixed\". In addition to the proposed solution, with recent EasyAdmin versions you can pass options to the form types, for example the placeholder option.\n. @Pierstoval do you still want this feature? Will it work for any case?\n. Closing it after reading your comments. Honestly, I can't understand the Symfony Form component, so I can't review this or add anything else to your discussion. Thanks for helping me with this!\n. The first issue seems \"impossible\" to fix it (I've asked @ogizanagi in #389 for help to see if he can think of a solution).\nThe second issue seems \"easy\" to fix it. I'll try to fix it,\nSome context and facts about browser market share: IE8 (1.96%), IE9 (1.48%), IE10 (1.23%), IE11 (7.6%).\n. @Pierstoval I don't understand the problem with the flexmenu library. You say: \"jquery-flexmenu.js returns an error when there are no items in the menu list\".\nIf you mean that the entire menu has no items ... that's not a problem because the backend is empty and that's an edge case we don't care about.\nIf you mean that the special <li class=\"flexMenu-viewMore\"> ... </li> created by the library is empty, that's very strange. That <li> element is dynamic and created only when needed, so there must be at least one element if that <li> exists.\n. Closing it as fixed because now we use AdminLTE 2 template and we include the needed \"shims\" for Internet Explorer.\n. @arukado-sama the problem lies in this code that you are using:\ntwig\n{% if is_granted('ROLE_ADMIN') %}\n        <div id=\"content\" class=\"col-lg-10 col-lg-offset-2\">\n{% else %}\n        <div id=\"content\" style=\"margin-top:-50px;\" class=\"col-lg-10 col-lg-offset-2\">\n{% endif %}\nWhen the browser window is wider than 1200px, the #content element will add an offset of 2 columns, which is the left gap that you are seeing.\nIf this doesn't solve your problem, please reopen this issue.\n. @arukado-sama I'm afraid that granular security is one of the (few) roadblocks of this bundle. This is not supported and there are no plans to support it anytime soon. If this feature is essential to your backend, I'd recommend you to use SonataAdmin instead of EasyAdmin.\n. The problem is that removing that rule breaks the main menu for the rest of browsers (I tested it with Chrome and it no longer works).\nI don't hate Internet Explorer so I'm willing to make this bundle work for it. However, given that IE9 has a market share of just 1.48%, we'll only make changes if they are simple/small and they don't break the rest of browsers.\n@ogizanagi do you think there could be a simple solution to this problem? Can you think of an alternative to the height: 0 rule? Thanks.\n. I've thought about this and I've decided to not fix this error. Why? Because Microsoft has decided to kill IE 9 and IE 10 very soon and therefore we should help them to do that: https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support\n\n. I'm closing this as \"won't fix\" ... but I've labelled it with future + feature to rethink about this in the future.\n. @nzurita fixed. Thanks!\n. @romaricdrigon good point! I agree with you. Thanks.\n@Pierstoval thanks for helping me fix all the mistakes. I've reworded the note completely.\n. @romaricdrigon good point! I agree with you. Thanks.\n@Pierstoval thanks for helping me fix all the mistakes. I've reworded the note completely.\n. After musing about this, I think @Pierstoval is right. The main problem I see with the on-the-fly field types is that it can collide with our own custom types. Right now we define image and toggle, but in 2 years we may define 10 custom types.\nWhat if we forget about the on-the-fly types ... but provide something similar. Based on @ogizanagi's comments, we could define the template property, so the field can define the name of the template to use to render its value:\n``` yaml\nORIGINAL proposal\nProduct:\n    class: AppBundle\\Entity\\Product\n    label: 'Products'\n    list:\n        fields:\n            - id\n            # ...\n            - { property: 'tags', type: 'tag_collection', type_options: { labels_cycle: ['primary', 'success', 'info'] } }\nNEW proposal\nProduct:\n    class: AppBundle\\Entity\\Product\n    label: 'Products'\n    list:\n        fields:\n            - id\n            # ...\n            - { property: 'tags', template: 'tag_collection', type_options: { labels_cycle: ['primary', 'success', 'info'] } }\n```\nWhen the template property is set, EasyAdmin looks for the following templates and in this order:\n- app/Resources/views/easy_admin/<entityName>/<templateName>.html.twig\n- app/Resources/views/easy_admin/<templateName>.html.twig\n- If none of the two above templates exist, throw a configuration error.\n. After musing about this, I think @Pierstoval is right. The main problem I see with the on-the-fly field types is that it can collide with our own custom types. Right now we define image and toggle, but in 2 years we may define 10 custom types.\nWhat if we forget about the on-the-fly types ... but provide something similar. Based on @ogizanagi's comments, we could define the template property, so the field can define the name of the template to use to render its value:\n``` yaml\nORIGINAL proposal\nProduct:\n    class: AppBundle\\Entity\\Product\n    label: 'Products'\n    list:\n        fields:\n            - id\n            # ...\n            - { property: 'tags', type: 'tag_collection', type_options: { labels_cycle: ['primary', 'success', 'info'] } }\nNEW proposal\nProduct:\n    class: AppBundle\\Entity\\Product\n    label: 'Products'\n    list:\n        fields:\n            - id\n            # ...\n            - { property: 'tags', template: 'tag_collection', type_options: { labels_cycle: ['primary', 'success', 'info'] } }\n```\nWhen the template property is set, EasyAdmin looks for the following templates and in this order:\n- app/Resources/views/easy_admin/<entityName>/<templateName>.html.twig\n- app/Resources/views/easy_admin/<templateName>.html.twig\n- If none of the two above templates exist, throw a configuration error.\n. The dataType would be guessed ... and ignored. Its value doesn't matter because we'll use the template that you defined or throw an error. So it doesn't matter if it's a string or boolean, we'll never use the field_string, field_boolean, etc. templates.\n. The dataType would be guessed ... and ignored. Its value doesn't matter because we'll use the template that you defined or throw an error. So it doesn't matter if it's a string or boolean, we'll never use the field_string, field_boolean, etc. templates.\n. This PR is ready for the final review. The documentation has been reworded for the new way this feature is implemented. Tests have been fixed too, but I need to add some new tests. Thanks!\n. This feature has been finally merged. Thanks @ogizanagi and @Pierstoval for working on this and helping me review it!\n. As explained in the docs, the css_class value is applied to the wrapping <div> element, not to the widget itself (the textarea in this case).\nSee https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-properties-appearance\ncss_class (optional): the CSS class applied to the form field widget container element in the\nedit, new and show views. For example, when using the default Bootstrap based form theme,\nthis value is applied to the <div class=\"form-group\"> element which wraps the label, the widget\nand the error messages of the field.\n. As explained in the docs, the css_class value is applied to the wrapping <div> element, not to the widget itself (the textarea in this case).\nSee https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-properties-appearance\ncss_class (optional): the CSS class applied to the form field widget container element in the\nedit, new and show views. For example, when using the default Bootstrap based form theme,\nthis value is applied to the <div class=\"form-group\"> element which wraps the label, the widget\nand the error messages of the field.\n. There is no need to mess with fieldType, dataType, etc. The rules applied by EasyAdmin are very easy:\n- In list and show, the type option refers to how the content should be displayed (number, string, boolean, etc.)\n- In edit and new, the same type option refers to the Symfony Form Type used to render that field.\nTherefore, the solution to your question should be to use checkbox as the value of type option:\nyaml\nedit:\n    fields:\n        - { property: 'example1', label: 'forced checkbox example', type: 'checkbox' }\n        - { property: 'example2', label: 'forced toggle example', type: 'toggle' }\nIf this doesn't solve your problem, please reopen this issue. Thanks!\n. Then I didn't understand him :(  I thought he wanted to display his smallint property as a checkbox, not as a toggle.\n. I'm closing this because right now adding this feature would be too complex for us. Besides, I think this is a feature that Symfony Forms should provide. However, although tens of developers have asked for it, Form maintainers have always refused to add that feature.\n. The best way to implement this feature is explained in this great tutorial: More with EasyAdminBundle\n. Closing it as \"fixed\" by this new tutorial: How to Upload Files and Images\n. @Pierstoval thanks for implementing this feature. I'm sorry it took me so long to merge it.\n. @Pierstoval yes, the widget works with multiple selects ... but our bundle does not because we don't support many-to-many relations :cry: That is my top-priority feature in my list right now.\n. I don't understand yor last comment. Anyway, this PR is in fact \"a trojan horse\", because Select2 also supports autocompletion and AJAX-loading ... which is another feature that I'd like to provide sooner than later.\n. \"Soon\" you'll be able to set readonly: true as a field property. For now, you can do the following:\ncss\nbody#easyadmin-new-<name of your entity> #id-of-your-field {\n    disabled: true;\n}\n. @ogizanagi you are right! My bad :disappointed:\n@nzurita I'm closing it as \"fixed\" for now. Of course the real solution (set readonly: true in the form field) is still pending.\n. @ogizanagi I like this idea. What would you think of naming the config option as display_as instead of widget?\n. I've changed my mind about this issue. For now I prefer not to change this. I'd like to keep using custom \"types\" as Sonata does too (they are not types because the list/show views don't create forms, but the concept is the same).\n. Closing it as fixed by #512 (and #502)\n. @gastoncs what's the value returned by this code?\nphp\n$this->generateUrl('admin', array('action' => 'list', 'entity' => $this->entity['name']));\n. @nielvrom I'm afraid that there is not an easy workaround for many-to-many relations. I know that this limitation is frustrating. That's why I've decided to ignore any feature request sent to this repository until we implement this feature.\nI'm closing this issue as \"not fixed, but we're aware of it and working on it\". Thanks.\n. You should use the type option of each field. In the case of edit and new, this option tells which Symfony Form type to use. All form types are supported, including password and repeated.\n. @nzurita there is no need to re-make the entire form. You can remove just the wrong field and add it again with the correct configuration.\n. Apparently, you have one issue with one form field. You can let EasyAdmin create the form according to your configuration and then, use the form builder to remove() the wrong field and add() it again with the correct configuration.\n. something like this should work:\n``` php\npublic function createUserNewForm()\n{\n    $form = parent::createNewForm();\n    $form->remove('password');\n    $form->add('password', 'repeated', ...);\nreturn $form;\n\n}\n```\n. I guess you have solved this issue by now. In any case, I think that the best option to customize the form behavior would be to override the method that creates/process that specific form. Another option would be to override the template for that field/entity and add some JavaScript code to define that behavior (clikcing on a checkbox to enable the password editing, etc.)\n. I like @fadoe's idea to require only the strictly needed packages and use the whole framework only for the functional tests, as implemented fantastically by @Pierstoval. Sadly, I don't know how to do that. Anyone willinkg to help me or send a PR? Thanks!\n. @gabiudrescu thanks for proposing this change. To be honest, I prefer to not add this feature. Why? Because I believe notifications should be made when things go wrong, not when things worked (which by the way, it's 99.99% of the times). If you take a look at well-designed desktop applications, they never notify you when things go right.\n. @Pierstoval yes, that's why I haven't closed this issue. I don't want it in the default bundle ... but I want to make it easy to use it for people who really want that feature.\n. Yes. When some error happens, we throw an exception to display a proper error page. Of course we still need to add more error pages, but we've already covered some of the biggest problems: https://github.com/javiereguiluz/EasyAdminBundle/tree/master/Exception\n. @gabiudrescu I'm finishing this feature in #430. That's why I'm closing this pull request. Obviously I've reused your original commit, so you'll get full credit for your work. Thanks!\n. @gabiudrescu I like the idea behind your proposal, but I'm not sure about adding a configuration option for this feature. The truth is that the best way to solve this problem is to use the logout_path() Twig function without arguments. The problem is that it's only available for Symfony 2.7 and higher.\nIn any case, once Symfony 2.3 is deprecated, we'll make the decission to stop supporting that version and we'll go up to at least Symfony 2.7. So this improvement will be possible and easy to do.\n. Not yet :)  Symfony 2.3 will die on May 2016: http://symfony.com/roadmap?version=2.3#checker\n. I'm going to close this pull request as \"won't fix\" for now ... but I've labeled with Symfony 2.7. As soon as Symfony 2.3 dies (in May 2016) and 2.7 becomes the minimum Symfony version which is maintained, I will merge this and the other pending pull requests. Thanks for understanding it.\n. @pedroresende we haven't removed the Symfony 2.3 support, so we cannot include this feature yet. But we'll do, in the future. Thanks.\n. @byhoratiss I think that using two entity managers for one bundle (without specifying the exact entities managed by each manager) is an edge case that we don't need to solve. However, I want to make your life as easy as possible, so I'll try to help you.\nWhat do you think if we add a getEntityManager() method in the AdminController and replace this line of code:\nphp\n$this->em = $this->getDoctrine()->getManagerForClass($this->entity['class']);\nWould that be enough to solve your case?\n. I was reviewing this issue and I'm afraid that we can no longer solve it in an easy way. Since this issue was created, we added a request listener which adds attributes to the Request object. In this listener we are using this line:\nphp\n$manager = $this->doctrine->getManagerForClass($entityConfig['class']);\nAllow to override or configure this behavior would be much more complex than doing it in the AdminController. I'm afraid that this is a \"won't fix\".\n. I was reviewing this issue and I'm afraid that we can no longer solve it in an easy way. Since this issue was created, we added a request listener which adds attributes to the Request object. In this listener we are using this line:\nphp\n$manager = $this->doctrine->getManagerForClass($entityConfig['class']);\nAllow to override or configure this behavior would be much more complex than doing it in the AdminController. I'm afraid that this is a \"won't fix\".\n. I've listened to you and I've changed everything. Now we display the most important request parameters related to EasyAdmin and then, the configuration of the current entity and the full processed backend configuration.\nThis is how it looks in the old Symfony Profiler:\n\nThis is how it looks in the new Symfony Profiler:\n\nThis is how it looks when the request isn't related to EasyAdmin:\n\n. @ogizanagi it's needed because we instrospect the database to complete the entity metadata. This is better done at runtime. We'll add a cache in the future, but for now it's enough with the per-request cache that we have (configuration is only parsed once per entity per request).\n. @Pierstoval I know it may be confusing, but the configuration is divided in two parts: the one we can compute and process before executing the application and the one we need to process during runtime (this one is related to the actual database information provided by Doctrine).\n. Thank you all for your comments and reviews. I'm going to merge it as it is now ... but once we raise our minimum version to Symfony 2.7 in May 2016, I'll implement @ogizanagi's idea to use a VarDumper dump to easily collapse the sections of the YAML configuration.\n. I like this pull request and I will use it for sure in the future, but I prefer to not use it yet. The main reason is that it solves a problem that we still don't have. The bundle is still pretty fast, so we won't have performance problems until we add some of the planned futures. I'm closing this pull request for now, but I'll reuse it in the future because I like it solves this issue. Thanks @ogizanagi for working on this.\n. Thank you @thomasbeaujean.\n. Before considering anything else for translation, I'd like to ask you a question.\nWhen you browse any page of a backend implemented with EasyAdmin, you see several errors in the toolbar:\n\nAnd then, in the profiler you see the following missing translations:\n\nMy question is: aren't we doing it completely wrong by setting the {% trans_default_domain \"EasyAdminBundle\" %} tag in our templates? Shouldn't we pass instead that domain only to the trans and transchoice filters/tags which translate our contents and not the rest of the application contents?\n. @Pierstoval almost every Symfony application I've ever seen uses the messages domain for the regular app messages. Would it be OK to not pass any parameter to the trans filter when we translate contents that don't belong to us?\n. @thomasbeaujean thanks a lot for implementing this improvement. I've created a new pull request in #425 to tweak it before merging it. The changes were:\n- Don't use uppercased text (this is just a design resource implemented via text-transform)\n- Don't set the intervals explicitly. They are only necessary when your behavior is very customized or you are dealing with a locale not properly managed by Symfony. Otherwise, it's enough to provide the different alternatives (without intervals) and Symfony will choose the right one according to the locale.\nObviously I've reused your commits, so you'll get full credit for your work when merging it. Thanks!\n. This change was originally done in the Twig templates, because I copied it from the SensioGeneratorBundle. See https://github.com/sensiolabs/SensioGeneratorBundle/blob/master/Resources/skeleton/crud/views/show.html.twig.twig#L30\n@marek-l is the getter of the bank_code property called getBank_code() or the usual getBankCode()?\n. @marek-l this bug is hopefully fixed in #452.\n. @thomasbeaujean before adding any new feature we always ask the same: can you please explain us a little bit which is the problem you are trying to solve and can't without adding this? Thanks!\n. I'm afraid I'm going to close this old PR. I don't feel comfortable adding the configurator class as a parameter: first, Symfony discourages this behavior; second, why just the configurator and not the other services.\nBesides, Symfony provides a cool feature for these cases called service decoration so this feature request can be solved in that way. Thanks!\n. @Pierstoval I love it too ... but we must be patient. This label will be activated at the end of May 2016!\n. Closing it as fixed by #438. @Pierstoval thanks a lot for working on this PR and for all the help provided in the merged PR. Your continuous help is truly appreciated!\n. There are some reported issues related to IE (https://github.com/javiereguiluz/EasyAdminBundle/issues/386). I know that we cannot test on a real IE browser, but maybe we can test different things for Windows.\n. Thanks to #571 we now test the bundle on Windows. The only missing thing to do is to fix the failing tests on Windows :)\n. After the recent merges, the dev-master version of this bundle should allow you to set any Symfony Form Type option using the type_options setting (it's explained at the end of this section: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-properties-appearance)\n. Closing it because the new 1.7.0 version with support for setting form options has just been released.\n. SonataAdmin solves this problem with a custom field type called html (see details). I think I'm gonna copy this idea and define a custom field type called raw, which is equivalent to doing value|raw (we'll use the Twig_Markup() class, but the effect is the same).\n. @Pierstoval I was referring only to the list and show views. We won't create a real form type. In the edit and new views we always rely on the Form component (for better or for worse).\n. If it's \"common enough\", we'll provide a \"fast track\" in addition to the \"standard track\" (which requires to override a template, etc.)  That's why we provide a shortcut for images and booleans ... and that's why I'd like to provide the raw/html shortcut.\nBut don't worry, there won't be dozens of shortcuts. Just a few. SonataAdmin, after all these years, only has a few of them.\n. The raw field type will be added soon. There is a pull request for that: #478.\n. \"symfony/browser-kit\" and \"symfony/css-selector\" must be added to require-dev ... but even then, the build fails :sob: \n. Good catch! Thanks for reporting this error and for fixing it in #434.\n. Thanks @thomasbeaujean.\n. @thomasbeaujean thanks a lot for reporting this important bug and for providing a solution for it!\n. @xabbuh indeed! Thanks.\n. @thomasbeaujean thanks for providing this bug fix. I've created in #437 a new PR to add a commit that tweaks the HTML of the form errors. I've reused all your original commits, so you'll get full credit for your work. Thanks!\n. @Pierstoval because we already show a title that says ERROR and the text of the error messages is displayed in red color.\n. Closing it in favor of #432.\n. Lots of new errors appear after the latest changes:\nPHP 5.3 / deps = low\nPHP Fatal error:  Class 'Doctrine\\Common\\Inflector\\Inflector' not found in /home/travis/build/javiereguiluz/EasyAdminBundle/Reflection/ClassPropertyReflector.php on line 31\nPHP 5.6 / Symfony 2.3.x\nThis error is repeated lots of times:\nArgument 1 passed to Symfony\\Bridge\\Twig\\Extension\\SecurityExtension::__construct() must be an instance of Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface, instance of Symfony\\Component\\Security\\Core\\SecurityContext given, called in /home/travis/build/javiereguiluz/EasyAdminBundle/build/cache/default_backend/AppDefault_backendDebugProjectContainer.php on line 2496 and defined\n. @Pierstoval thanks to your suggested change, that error disappeared. But we still have the other problem and as mentioned by @ogizanagi, it looks not that easy to solve.\n. In fda0e3a I'm testing a new Travis configuration borrowed from the one used by our friends at FOSUserBundle: https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/.travis.yml\n. After the last changes, everything is green again. To be honest, I don't know if this is luck, or if the new config is wrong or if we finally fixed the problem.\n. @xabbuh thanks for starting this PR. We finally solved all problems are tests are green again, so I'm merging it.\n. This change makes a lot of sense. @thomasbeaujean thanks for implementing it.\n. Maybe I don't understand your question because this feature is already implemented:\nDEV\n\nPROD\n\n. I prefer to not add a configuration option for this. I'll remove the help message from the production page and I'll add it in the dev page.\n. This was on my TODO list for too long. Thanks @thomasbeaujean for fixing it!\n. @thomasbeaujean thanks for this improvement, but this time I was faster than you ;)  See #445\nYou could instead provide just the translation for the new labels, as I did for Spanish in https://github.com/javiereguiluz/EasyAdminBundle/pull/446\n. @thomasbeaujean thanks for this new feature! Your work is truly appreciated.\n. @Pierstoval the word you are looking for is \"repugnant\". I don't like it at all, but the test does it job and it's useful for the bundle, so I won't look back :)\nThe test suite already passes, except for this error with deps = low:\nPHP Warning:  Unexpected character in input:  '\u0012' (ASCII=18) state=0 in \n/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/symfony/symfony\n/src/Symfony/Bridge/Twig/Extension/CodeExtension.php on line 140\n. @ogizanagi thanks for the info. I'll take care of it in the other PR about tweaking the dependencies.\n. @xabbuh thanks a lot for updating the translation!\n. The max_results option is global for the entire backend:\n\nSee https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-number-of-item-rows-displayed\nThis should work as expected:\nyaml\neasy_admin:\n    list:\n        max_results: 5\n    # ...\n\n. @krish-damani there isn't any option to disable pagination ... but if you make the page size huge (e.g. 1,000,000 items) there you'll never see the pagination and all results will be displayed at once.. Closing it for the mentioned reasons.\n@ogizanagi thanks for working on this. Even if experiments sometimes fail, we always learn from them.\n. Thanks @Pierstoval.\n. The best solution to apply here is to define the template option for the property you want to customize. It's like defining a custom type but much easier, because you just have to create one small Twig template. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/advanced-design-customization.md#rendering-properties-with-custom-templates\n. Thanks for fixing this bug and for providing such a nice pull request with tests included.\n. @ogizanagi thanks for this improvement. It makes a lot of sense to separate things like this. Thanks!\n. @ogizanagi thanks for fixing this. You are right and this can be removed. We'll improve all this once we add support for all kinds of Doctrine associations.\n. @thomasbeaujean thanks for improving this code. I like it a lot because it simplify templates and it puts things where they should be. Thanks!\n. I'm really sorry but in this repository we can only consider issues written in English. Thanks for understanding it!\n. If you refer to the route name, it is admin (we use the same route for everything).\nIf you refer to the template path, it's @EasyAdmin/default/list.html.twig as explained in the documentation: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/advanced-design-customization.md\n. In this section of the documentation you have an example of how to use your own list.html.twig template but making use of the default list.html.twig template: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/advanced-design-customization.md#tweaking-the-default-templates-for-all-entities\n. I love the proposed changes because it declutters the AdminController a lot. I need more time to review it and to better understand the changes. But this looks really promising!\n. @ogizanagi and thanks again for completing the previous commit with these changes!\n. @ogizanagi thanks a lot for fixing this! It was on my TODO list because it was something that bugged me. I'm glad it's finally fixed. Thanks.\n. @ogizanagi I didn't know this :'(  Thanks again for improving this bundle.\n. :+1: I love it!  Can we hide in the output the long list of files checked: https://travis-ci.org/ogizanagi/EasyAdminBundle/jobs/88381185#L1189 ?\n. Nice!\n. @ogizanagi thanks for working on this. I love when boring tasks are automated so we can forget about them. Thanks!\n. @xabbuh thanks for proposing this improvement. For now, I've just made Twig 2.0 tests allowed to fail (https://github.com/javiereguiluz/EasyAdminBundle/commit/f98007897a52548f7ba617b9cb04282fbc5a51df). I think this is better for now because Symfony is very unstable at the moment and I'd like to return to green tests as soon as possible.\nOf course, onece Symfony 3 + Twig 2 are released, I trust in your ability to make Travis work with both of them, so we'll revisit this issue. Thanks!\n. @ogizanagi thanks for this fix and thanks to @xabbuh for noticing it!\n. Closing it as fixed since #550.\n. @ismailbaskin although this time your idea wasn't accepted, I appreciate the time you took to propose it and your willingness to help us improve the bundle. Thanks!\n. @ismailbaskin thanks for proposing this improvement. We'll add this feature, but it's planned for the long-term future. The reason is that right now we're focused on doing all the basic features right. Once we finish this, we'll go for these advanced features.\n. OK, I've found the reason why I didn't use it in the first place:\n1) You are in the list view and click on the Edit link (the referer of the request is the list page)\n2) You are in the edit form and click on Save changes (the referer is now the edit page and not the list page)\n3) In the controller we don't have \"the original referer\" (the list page) but \"the last referer\" (the edit page).\nI'm closing this issue as \"won't fix\" because I don't know how to use the referer HTTP header to solve our use case.\n. @Pierstoval the thing is that Symfony doesn't allow to add @author on the classes related to tests. I'm sorry ... but I'll try to do something to compensate you :)\n. @ogizanagi too late ... I already did it in 9fbb99f\n\n. @ogizanagi you are not wrong ... but we are looking at the same problem from different sides. You want to trigger a deprecation message when admin route is being used to generate the URL (which is very complex to do). I''m triggering the deprecation when admin route has been used to generate the URL.\n. @ogizanagi @Pierstoval I don't understand you. The _route attribute stores the route name. If your template uses path('admin'), the _route will be admin and the deprecation message will be triggered. If you use path('easyadmin'), no message will be triggered. Same goes for generateUrl() and `redirectToRoute().\n. OK, I understand now what you want to say :cry: \n. I tried to do the following in the exception listener:\nphp\nif ($event->getException() instanceof RouteNotFoundException and 'admin' === $event->getRequest->attributes->get('_route')) {\n  / ...\nBut I agree about the edge cases. So let's forge about the deprecation message for now. Thanks for guiding me through this. I appreciate it!\n. @Pierstoval that's fine! Thanks for helping us whenever you can.\n. @ismailbaskin thanks a lot for proposing this improvement. I was going to merge it, but as @ogizanagi pointed, we need to fix more things. That's why I'm closing this in favor of #532. Thanks!\n. @ismailbaskin thanks for providing this translation and congrats on your first contribution! Te\u015fekk\u00fcr ederim\n. @ismailbaskin you are right! I'm sorry.\n. @ogizanagi thanks for this nice bug fix. You are truly polishing this bundle!\n. Thanks for reporting this bug. I need to investigate it better because I'm sure this wasn't the previous behavior. I'm using a lot of boolean fields in my backends and I didn't have this problem before.\nAs a temporary fix, you can set the form field option required to false:\nyaml\nedit:\n    fields:\n        # ...\n        - { property: 'locked', type_options: { required: false } }\n. In the past we had a default/form.html.twig template which disabled the validation for forms precisely to avoid these errors:\ntwig\n{{ form_start(form, { attr: form.vars.attr|merge({ novalidate: 'novalidate' }) }) }}\nReference. https://github.com/javiereguiluz/EasyAdminBundle/blob/dec9694da0fe8bc3a50404937675e89683551d4b/Resources/views/default/form.html.twig#L1\nWe need to think about an alternative now that we no longer have the form.html.twig template.\n. This is now fixed as of #537 and it will be available in the next stable release. Thanks!\n. This is now fixed as of #537 and it will be available in the next stable release. Thanks!\n. @Pierstoval I like your proposal a lot and I appreciate the effort to create this pull request. However, I agree with @ogizanagi about the format of this information. So I'm going to close this pull request, but I'm going to reuse your commit and do some changes to create a new pull request. Thanks.\n. @Pierstoval I like your proposal a lot and I appreciate the effort to create this pull request. However, I agree with @ogizanagi about the format of this information. So I'm going to close this pull request, but I'm going to reuse your commit and do some changes to create a new pull request. Thanks.\n. Here you can see a WIP example of the configuration reference: https://github.com/javiereguiluz/EasyAdminBundle/pull/538/files\n. Here you can see a WIP example of the configuration reference: https://github.com/javiereguiluz/EasyAdminBundle/pull/538/files\n. :+1: this is exactly the behaviour that I think it's correct when dealing with checkboxs. Absolutely perfect! Thanks.\n. :+1: this is exactly the behaviour that I think it's correct when dealing with checkboxs. Absolutely perfect! Thanks.\n. @ogizanagi thanks for fixing this and for your continuous support!\n. @ogizanagi thanks for fixing this and for your continuous support!\n. Note to improve docs: explain somehow which public methods are used to read/write properties when the properties are private. See https://github.com/javiereguiluz/EasyAdminBundle/issues/579\n. I've merged this PR althought it's not 100% complete because the changes made so far improve the current documentation significantly. Instead of waiting lots of days for a \"perfect\" documentation, let's improve everything step-by-step. I'll document the config options related to entities in a separate PR.\n. @aleperin I'm reopening the issue so we can remember about improving this error message.\n. @aleperin I'm reopening the issue so we can remember about improving this error message.\n. This error is probably fixed in the master branch thanks to this change in the the Twig extension defined by the bundle: https://github.com/javiereguiluz/EasyAdminBundle/commit/d80005104f9027594ff6a20964ab31b9c0f13a4c#diff-0c199003d2370f3ea2800f894b951396R273\nIt will be available in the next stable release, but meanwhile you can copy+paste those five lines to check if they solve your issue. Thanks!\n. @ogizanagi minor but nice changes! Thanks.\n. @ogizanagi minor but nice changes! Thanks.\n. Thanks for reporting this bug. I remember fixing this issue a while ago thanks to this style: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/css/admin.css.twig#L741\nBut apparently I didn't fix it correctly. By the way, which browser are you using? Thanks.\n. Thanks for reporting this bug. I remember fixing this issue a while ago thanks to this style: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/css/admin.css.twig#L741\nBut apparently I didn't fix it correctly. By the way, which browser are you using? Thanks.\n. @enekochan thanks ... but you gave me everything except the browser name that I requested :laughing: Don't worry: from the version number I guess it's Google Chrome. Thanks!\n. @enekochan thanks ... but you gave me everything except the browser name that I requested :laughing: Don't worry: from the version number I guess it's Google Chrome. Thanks!\n. This PR is now \"finished\". I've removed all the error templates and exception classes have been simplified. We now just have an exception.html.twig template to display all exceptions.\n. This PR is now \"finished\". I've removed all the error templates and exception classes have been simplified. We now just have an exception.html.twig template to display all exceptions.\n. @tiraeth thanks for your first contribution and for adding this nice feature. Thanks also for your patience during the review process and for creating a perfectly rebased and ready-to-merge pull request.\n. @tiraeth thanks for your first contribution and for adding this nice feature. Thanks also for your patience during the review process and for creating a perfectly rebased and ready-to-merge pull request.\n. Closing it as fixed by #548. It will be available in the next stable release, which will be published very soon. Thanks!\n. @COil thanks for this bug fix ... and for perfectly illustrating how bad boolean arguments are!\n. Merged.\n. I've just caught this bug because I'm working on a full refactoring of the exception handling. Stay tuned for the massive simplification that I'll commit very soon.\n. @ogizanagi a brutal collision and conflict is coming :sob:  Don't worry, I'll merge your PR (thanks for it!) and I'll tweak my work afterwards.\n. @ogizanagi don't worry ... I've been working on other parts of the exception handling because I didn't know how to solve this problem. So I do need your solution :)\n. OK. I'm going to merge this as is and I'm gonna tweak it a bit afterwards. @ogizanagi thanks as always for your invaluable contributions!\n. My first impression is that this is a good idea ... but a \"niche\" idea and complex to do it. However, this could be a good stand-alone project, and not only for backends.\nBut that's just my first impression. Let's see if I think the same tomorrow :)\n. My first impression is that this is a good idea ... but a \"niche\" idea and complex to do it. However, this could be a good stand-alone project, and not only for backends.\nBut that's just my first impression. Let's see if I think the same tomorrow :)\n. That's something that sounds very reasonable to me.\n. That's something that sounds very reasonable to me.\n. I'm all in to start adding Behat tests ... but I don't like the original idea because we still need to maintain this bundle small and do as less things as possible while trying to be useful at the same time. Closing it for that reason.\n. Closing it in favor of the new method called isLegacySymfony() introduced in https://github.com/javiereguiluz/EasyAdminBundle/commit/5c0db57a7c53d2495a17e7eb361711c241d1850a#diff-324b1abf8a181b12c840bf5baefb86f3R171\n. Closing it in favor of the new method called isLegacySymfony() introduced in https://github.com/javiereguiluz/EasyAdminBundle/commit/5c0db57a7c53d2495a17e7eb361711c241d1850a#diff-324b1abf8a181b12c840bf5baefb86f3R171\n. What if we use the well-known notation of \"generics\" from C++, Java, etc.\n``` php\n// BEFORE\n$editForm = $this->executeDynamicMethod('create???EditForm', array($entity, $fields));\n// AFTER\n$editForm = $this->executeGenericMethod('createEditForm', array($entity, $fields));\n```\n. What if we use the well-known notation of \"generics\" from C++, Java, etc.\n``` php\n// BEFORE\n$editForm = $this->executeDynamicMethod('create???EditForm', array($entity, $fields));\n// AFTER\n$editForm = $this->executeGenericMethod('createEditForm', array($entity, $fields));\n``\n. OK, I've decided to do the following:\n- Call the methodexecuteDynamicMethod()- Use the<..>notation because:\n  - It's easier to understand when reading the code. Example: which method executescreate???EditForm()? And now: which method executescreateEditForm()?\n  - I prefer to use<...>because it's a very common notation in programming languages. The{...}notation is worse because it could be mistaken with the{{ ... }}` Twig notation and with the function/method enclosing brackets.\n  - We already use that notation in our documentation.\nIn any case, this is a utility method defined as a private class method. So we can change it at any point without breaking anything.\n. OK, I've decided to do the following:\n- Call the method executeDynamicMethod()\n- Use the <..> notation because:\n  - It's easier to understand when reading the code. Example: which method executes create???EditForm()? And now: which method executes create<EntityName>EditForm()?\n  - I prefer to use <...> because it's a very common notation in programming languages. The {...} notation is worse because it could be mistaken with the {{ ... }} Twig notation and with the function/method enclosing brackets.\n  - We already use that notation in our documentation.\nIn any case, this is a utility method defined as a private class method. So we can change it at any point without breaking anything.\n. @Pierstoval I agree with you.\n. @Pierstoval I agree with you.\n. :+1: yes! I love when we maintain the functionality of something but we remove lines of code and make it even more easier to understand.\n. :+1: yes! I love when we maintain the functionality of something but we remove lines of code and make it even more easier to understand.\n. @ogizanagi thanks!\n. @ogizanagi thanks!\n. I'm closing this as \"won't fix\" because the recent addition of the feature to use custom controllers per entity makes this irrelevant. In the future we'll prioritize this even more, so defining lots of methods for different entities in a single controller (as we promoted when this bundle was launched) will be discouraged.\n. Fixed as of #561 and available in the newly released 1.8.3 version. Thanks.\n. Fixed as of #561 and available in the newly released 1.8.3 version. Thanks.\n. @fcpauldiaz thanks for reporting this error. This bug should be fixed in the new 1.8.1 version of the bundle that has just been released.\n. @fcpauldiaz thanks for reporting this error. This bug should be fixed in the new 1.8.1 version of the bundle that has just been released.\n. @ogizanagi thanks for your fast reaction fixing this bug. I'm releasing a new version of the bundle right now. Thanks!\n. @ogizanagi thanks for your fast reaction fixing this bug. I'm releasing a new version of the bundle right now. Thanks!\n. @artggd this was a very nice catch! Thanks for reporting the error and for fixing it. And congrats on your first contribution!\n. @artggd this was a very nice catch! Thanks for reporting the error and for fixing it. And congrats on your first contribution!\n. @WouterJ right now I was trying to solve that problem. Thanks for the tip!\n. @WouterJ right now I was trying to solve that problem. Thanks for the tip!\n. @ogizanagi thanks! I've changed that too, but still have some issues. I'll take a look tomorrow because I'm pretty frustrated at the moment :(\n. @ogizanagi thanks! I've changed that too, but still have some issues. I'll take a look tomorrow because I'm pretty frustrated at the moment :(\n. I've done a lot of changes regarding forms ... but I'm running in circles: nothing works and I don't know why. If someone has some time to look into this, please help me spotting the error. Thanks.\n. I've done a lot of changes regarding forms ... but I'm running in circles: nothing works and I don't know why. If someone has some time to look into this, please help me spotting the error. Thanks.\n. Don't panic ... but I've broken the tests fo 2.8/3.0 somehow :fearful: \n. Back to green! Merging it before I break things again :sweat_smile: \n. ### THIS PROBLEM HAS BEEN FIXED\n~~This is the first problem that I don't know how to solve:~~\n~~In pre Symfony 3, we use:~~\nyaml\n<service id=\"easyadmin.form.type.extension\" ...>\n    <!-- ... -->\n    <tag name=\"form.type_extension\" alias=\"form\" />\n</service>\n~~In Symfony 3 we must use this:~~\nyaml\n<service id=\"easyadmin.form.type.extension\" ...>\n    <!-- ... -->\n    <tag name=\"form.type_extension\" extended-type=\"Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType\" />\n</service>\n~~Is there any way to make this work for both Symfony versions?~~\n. ### THIS PROBLEM HAS BEEN FIXED\n~~This is the first problem that I don't know how to solve:~~\n~~In pre Symfony 3, we use:~~\nyaml\n<service id=\"easyadmin.form.type.extension\" ...>\n    <!-- ... -->\n    <tag name=\"form.type_extension\" alias=\"form\" />\n</service>\n~~In Symfony 3 we must use this:~~\nyaml\n<service id=\"easyadmin.form.type.extension\" ...>\n    <!-- ... -->\n    <tag name=\"form.type_extension\" extended-type=\"Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType\" />\n</service>\n~~Is there any way to make this work for both Symfony versions?~~\n. The previous error was fixed thanks to @WouterJ's help. But now I see hundreds of these errors:\nTwig_Error_Syntax: Unknown \"asset\" function in \"@Twig/Exception/exception_full.html.twig\" at line 4.\nFull Travis output: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/90133540\n. The previous error was fixed thanks to @WouterJ's help. But now I see hundreds of these errors:\nTwig_Error_Syntax: Unknown \"asset\" function in \"@Twig/Exception/exception_full.html.twig\" at line 4.\nFull Travis output: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/90133540\n. Right now the only sure thing is that support for Symfony 2.3 will die on May 2016. I don't know if we'll go for 2.8 or 3.0 then.\n. @xabbuh yes ... and they can still use EasyAdmin. They just won't receive any new feature available in the following versions. By the way, I'm also planning to upgrade the PHP requirements to PHP 5.5 at least.\n. @Pierstoval nope :)  There will be no branches. We just have the master branch and we tag new versions frequently. In May 2016 we'll tag the last version for Symfony 2.3 and we'll upgrade the requirements in the composer.json for the next tag.\n. Closing it as fixed by [5c01292], [fad292f] and [8001f05]. If some error appears in the future related to Symfony 3, we'll deal with it in a new issue.\n. @artggd thanks for reporting this issue.\nIn the past we disabled the HTML5 validation, because we think that the default Symfony form behavior is annoying (your issue clearly shows that!).\nRecently we enabled the HTML5 validation ... but we disabled it for checkboxes. I need to read some more opinions about this before doing any change.\nFor now, you can disable validation by form by setting this option:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                form_options: { validation_groups: false }  # <-- ADD THIS\n    # ...\n. @artggd thanks for reporting this issue.\nIn the past we disabled the HTML5 validation, because we think that the default Symfony form behavior is annoying (your issue clearly shows that!).\nRecently we enabled the HTML5 validation ... but we disabled it for checkboxes. I need to read some more opinions about this before doing any change.\nFor now, you can disable validation by form by setting this option:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                form_options: { validation_groups: false }  # <-- ADD THIS\n    # ...\n. This should be fixed by the new 1.9.0 version. Please, upgrade and test it. Thanks!\n. :+1: this is excellent!! Very nice work! Thanks @ogizanagi.\nAbout the compiler pass ... it should probably not be very long or complex, so maybe it could make sense.\n. :+1: this is excellent!! Very nice work! Thanks @ogizanagi.\nAbout the compiler pass ... it should probably not be very long or complex, so maybe it could make sense.\n. I like your proposal for being more explicit. @ogizanagi thanks for this new feature!\n. I like your proposal for being more explicit. @ogizanagi thanks for this new feature!\n. How can the getName() issue be solved? If I remove it, pre-3.0 fails; if I keep it, 3.0 fails.\n. How can the getName() issue be solved? If I remove it, pre-3.0 fails; if I keep it, 3.0 fails.\n. Thank you guys for your help!! I was rying to solve the last issue related to the @asset() function in Symfony 3. Sadly I cannot update the easy admin demo application to Symfony 3. Nothing works for me :sob: \n. :tada: :tada: :tada: :tada: :tada: :tada: :tada: :tada: :tada: \n@ogizanagi you are the best!! And the master of the Symfony Forms too!!\n. Merged!\n. :+1: fantastic! Thanks @ogizanagi\n. It will be possible ... in the future. In this other issue (https://github.com/javiereguiluz/EasyAdminBundle/issues/208) we're discussion design-related options and the menu configuration is the last thing left to do. That's why I'm closing this issue to not duplicate the conversation. Thanks!\n. To redirect to the list view of any entity, you must use something like this:\nphp\n$this->redirectToRoute('easyadmin', array('entity' => '...', 'action' => 'list'));\nBut the question is ... where do you want to put that PHP code? A custom controller? A listener?\n. We cannot answer you correctly unless you tell us where are you putting that PHP code. Is a custom controller that you created? Another PHP class? An event listener?\n. If your custom controller is like this:\n``` php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    public function myCustomAction()\n    {\n        // ...\n    }\n}\n```\nThen you can use $this->entity['name'].\nIf you redefine the indexAction() in your own controller, you MUST call the parent indexAction() method or call the initialize() method. Otherwise, $this->entity will be null:\n``` php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    public function indexAction()\n    {\n        $this->initialize($request);  // <-- ADD THIS\n        // ...\n    }\npublic function myCustomAction()\n{\n    // ...\n}\n\n}\n```\nIf you are doing very advanced things, you can get the entity from the attributes of the request:\nphp\n$entityName = $request->attributes->get('entity');\n. Closing it as \"fixed\". Feel free to reopen if that's not the case. Thanks.\n. Closing it as \"fixed\". Feel free to reopen if that's not the case. Thanks.\n. I'm closing this issue to continue the conversation in the other issue that you opened: #569\n. @sfarkas1988 thanks for creating this feature request.\nInstead of creating a config parameter or a complex solution, could we update our layout template to use the same code suggested by the BazingaJsTranslationbundle?\ntwig\n<html lang=\"{{ app.request.locale|split('_')[0] }}\">\n. This issue has been fixed in the new 1.9.1 version that has just been released.\n. @yceruto yes, this is in our TODO list since long time ago: https://github.com/javiereguiluz/EasyAdminBundle/issues/124\nNow that the bundle has completed all its basic features, I think we can start working on advanced features like this one.\nHowever, there is a big problem: I can't work on that ... because I don't know how to do it. My Symfony Form skills are very limited, so I'll need help to implement this feature.\n. Closing it as fixed by #577.\n. There is no oficial integration with VichUploaderBundle yet, but you can ead this tutorial to learn how to setup everything: http://level7systems.co.uk/en/more-with-easyadminbundle/\nI'm closing this feature request, but I've labelled as \"future\", so we don't los track of it. Thanks!\n. @yceruto forget about the AppVeyor errors because they are broken (I just enabled the tests on Windows but I didn't look into the actual errors).\nFor the tests mentioned by @Pierstoval I'm planning to finish the easy-admin-demo application to configure the remaining *-to-many Doctrine relations, so we can test a real application. But I can't work on that until the weekend.\n. I've updated the EasyAdmin Demo application and tested this Pull Request changes. Everything works perfectly, both for one-to-many relations:\n\nAnd for many-to-many:\n\nI'd like to merge this as is ... and then improve the way relations are displayed in the show view.\n. @yceruto thanks for implementing this feature in such a nice way!\n. The type field option is interpreted in two different ways:\n- In form-based views (new, edit) this is the form type. I guess this works for you.\n- In the other views (list, show) we can't use form types, so this is interpreted as the type of data stored in the property.\nA quick fix for this problem is to use the raw type in list and show, which just outputs the contents of this property applying the |raw Twig filter:\nyaml\neasy_admin:\n    # ...\n    entities:\n        User:\n            list:\n                fields:\n                    - { property: 'phone', type: 'raw' }\nIf you still want to apply so custom formatting to better display the property contents, define the template option for the field and create the Twig template to display its contents:\nyaml\neasy_admin:\n    # ...\n    entities:\n        User:\n            list:\n                fields:\n                    - { property: 'phone', template: 'phonenumber' }\nAnd now create either of these templates (first one that exists is used):\n- app/Resources/views/easy_admin/User/phonenumber.html.twig\n- app/Resources/views/easy_admin/phonenumber.html.twig\n. Closing it as \"fixed\". In the near term I'm gonna revamp the documentation to make it easier to find solutions for common problems like this one.\n. Closing it as \"fixed\". In the near term I'm gonna revamp the documentation to make it easier to find solutions for common problems like this one.\n. The $is_active property is private, so your entity must have any of the following public methods to be  readable (the first one that exists is used):\ngetIs_active()\nisIs_active()\nis_active()\nhasIs_active()\ngetIsActive()\nisIsActive()\nisActive()\nhasIsActive()\nTo be writable/editable, we look for these methods:\nsetIs_active()\nsetIsIs_active()\nsetIsActive()\nsetIsIsActive()\n. Then this is a bug. I'll take a look into it.\n. I can confirm the bug and I've proposed a fix in #585.\n. Closing it as fixed. Update to the new 1.9.2 release to get the fix. Thanks!\n. It works perfectly for me now. Merged. Thanks!\n. I agree. It makes sense to allow to customize the template used to display errors.\n. @yceruto in theory they ask you to write the name of the person in charge of the bundle. But since this is a bundle made by several people, I created a user in SensioLabsConnect in behalf of EasyAdminBundle. So we are complying with the rules (we vote for a SensioLabsConnect user) but we don't personalize the vote in a single developer :smile: \n. The only reason you are not in the list is because I stopped updating this list because it's very boring. Anyone knows a quick-and-dirty script to get the updated list of contributors for a GitHub project? Thanks.\n. @Pierstoval but it doesn't work right:\n658  Javier Eguiluz\n    38  ogizanagi\n    23  Christian Flothmann\n    14  Alex Rock Ancelet\n     7  Alex \"Pierstoval\" Ancelet  // <-- wrong! duplicated\n     7  Thomas Beaujean\n     6  thomasbeaujean  // <-- wrong! duplicated\n     5  maxime.steinhausser  // <-- wrong! duplicated\n     3  Alex Pierstoval  // <-- wrong! duplicated\n     2  borislav\n     2  Alberto\n     2  Damien DECONINCK\n     2  Iker Ibarguren\n     2  \u0130smail BASKIN\n     2  Lo\u00efc Vernet\n     2  Maxime Steinhausser  // <-- wrong! duplicated\n..\n. For the show view I like the idea a lot, ideally adding links if the related entities are maanged by the backend too, as you say.\nFor the list view I'm not sure. I'd like to know how other admin generators (not necessarily for Symfony or PHP) resolve this issue.\n. Just a quick comment: the title option that you showed for entities, in fact is called label: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/3-backend-configuration.md#customize-the-label-of-the-main-menu-items\n. My opinion is: let's \"forget\" about this problem for a while, and link to the related entity. If the action is disabled, the user will see an error, but nothing wrong will happen (he won't see the information, which is the important thing when you disable the \"show\" view).\nWhat I want to do when I have some time is to improve the logic that processes the information of the entities. I want to do everything before executing the application (to cache that processing in the compiler and not do it again and again). And I want to move more entity processing logic to that \"offline processing\". IDeally, when executing the application, we'll have pre-processed all the needed information, so there is no need to do additional checks or complicate the bundle logic. I plan to start working on that next week during the SymfonyCon Hackday :)\n. @ogizanagi I hope you have some free time to discuss these topics in person next week during SymfonyCon or the Hackday. (When I say \"discuss these topics\", I really mean \"please show me those cool DunglasApiBundle examples and explain me your ideas\"). I'm looking forward to it. Thanks!\n. About entity inheritance, please forget about that. Even Doctrine creators strongly recommend to avoid it at all costs. Please, never use inheritance. It complicates everything for no real benefit. This comment by Stof says the same: https://github.com/symfony/symfony-demo/issues/21#issuecomment-126923645\n. In case is useful to make decisions about dropping PHP support, SonataAdmin run an interesting survey:\n\nPHP 5.3 support can safely be dropped ... but 50% of people still use PHP 5.4 or 5.5!!\n. I'm closing this issue because it's already too long and it's impossible to follow all the discussions. Besides, we now have a list of future features of this bundle so we can discuss about individual features/changes in separate issues and add them to the list. Thanks!. @yceruto thanks for investigating this issue and for providing a very nice fix. I'll release a new version of the bundle right away. Thanks!\n. Merged.\n. Closing it as \"fixed\". There have been several error messages in the past because people forgot to add the __toString() method. So, in the configuration preprocessing refactorization that will be made soon, we should handle this issue in a better way.\n. @ogizanagi thanks for your superb explanation. I really need to take a look at #206 because date handling is critical in this kind of applications. Thanks!\n. @ogizanagi I agree with you. I tried to make the code (ariable names, HTML classes, etc.) as future-proof as possible to improve this feature in the future.\nAbout the label, I'm going to think about \"empty\". It's very human-friendly and easy to understand. Thanks!\n. I've updated the label to \"Leave empty\":\n\nAnd here it is in action:\n\n. I've updated the code to display the <select> empty. I think this improves a lot the user experience. But I'd like to know your opinions. Thanks!\n\n. Here it is the latest version in action:\n\n. @ogizanagi you are right. Thanks for reminiding it to me.\nI've added two fallbacks based on Yaml dumper and on var_export();\nYaml dumper fallback\n\nvar_export() fallback\n\n. :+1: I think this change makes a lot of sense. I don't know why we shouldn't do it like this. Thanks!\n. Merged. Thanks @ogizanagi\n. I'm closing this because of two reasons:\n1) Disabling sorting per field is a \"niche feature\", so I prefer not to add it (for now).\n2) About \"sorting by virtual fields\", I know that some people have asked for it ... but it's very complex to do it. Besides, if I'm right, no other admin generator includes it either.\n. @yceruto sadly not yet, but I'll take a look next week.\n. I'm closing this issue as \"fixed\" after the recent search refactorization (details: #1016). The new search engine, which will require no change in your backend configuration, will be available in the next stable version of this bundle, to be released soon. Thanks!\n. @yceruto I'm still thinking about what is the supposed best behavior of such an application when the user looks for an empty string. I need to take a look at existing applications to see which would be the best solution.\n. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @mkalisz77 thanks for submitting this proposal. I like your idea and I want to implement it as soon as possible. However, I'm not sure about the proposed implementation. I've looked at Sonata and they define several config options for date/time properties (https://sonata-project.org/bundles/intl/master/doc/reference/datetime.html).\nMaybe we could define a boolean option called translate and make it true by default. This option could be defined for each date/time property, for each entity and globally for the entire backend. Besides, we could follow Sonata and define a pattern option to set the pattern used by IntlDateFormatter.\nThen we could copy the code of the localizeddate Twig filter because it's trivial and thus we don't depend on anything and we don't require the user to install or enable anything.\n. I'm closing because this is too old to be mergeable ... and I don't like the proposed solution much. However, I like a lot the related feature/issue ... so I'll keep thinking about a possible solution for this. Thanks!. @Pierstoval I feel really sad because we received so many votes!!\n. @ogizanagi there is another catch: a single person can only win one award. Luckily I won the \"MVP award\", so if someone had voted for me in this bundle category, I would had been disqualified too. In any case, I agree with you: this award is a bit misleading because the award is for a bundle but you have to vote for a person. Let's see if next year we clarify it a bit.\n. I remember that a very similar error was fixed in a recent version release. That's why I'd like to ask you if you are you using the latest version of the bundle. Thanks.\n. I'm going to take a look at this today.\n. @Flushdrew I'm glad the error is gone. I've you experience again the same problem, please reopen this issue. Thanks!\n. Thanks for this nice change. The PersistentCollection check not only was ugly since day one but it also looked like a hack.\n. I'm not very used to these bitwise operators, but the change looks cool. Sadly, in Travis I see the same error of the other PRs.\n. ...and another one merged! Thanks @ogizanagi. However, since the bitwise operator may be confusing for some people (e.g. me) I'm going to submit a commit right now to add some parenthesis around bitwise expressions. They are not technically needed, but it will increase code readability a bit. Thanks!\n. @ogizanagi thanks for investigating this issue and for providing a very nice solution!\nWhat I don't understand is the error showed by Travis:\n\n. @ogizanagi thanks, I'm going to investigate it right now.\n. Sorry it took me so long to merge this nice bugfix. Thanks for fixing it and for your detailed explanation.\n. @ogizanagi your fix looks great. However, there seems to be an error with PHP CS Fixer and PHP 5.3. But I cannot see the details, only a \"Segmentation fault\" error message :disappointed: \n\n. @ogizanagi thanks for fixing this bug. Hopefully Travis will go green soon.\n. @xabbuh I have a question: is it a common practice to add the dev-master version of Symfony in the test matrix (and allow it to fail) or is it better to leave it out for now until the next Symfony version release is closer? Thanks.\n. @ogizanagi I'm going to try to do that. Let's see if it works.\n. I'm merging this as \"completed\", but it would be great if someone who knows Travis well take a quick look at it. Thanks! This is the new test matrix used by Travis:\n\n. I've done the changes you mentioned. Thanks!  Another minor issue: I disabled the PHP CS fixer because it resulted in a very strange error. I tried to enable Style CI service, but it asks for too much private information (for example about all my GitHub organizations) so I cannot use it.\n. @yceruto probably. And less lines of code for us, less bugs, less maintenance, etc.  But first, let's try to make tests green for this change :smile: \n. I've refactored this code completely. It now supports 2.3, but I haven't added any BC layer. The problem is divided into two parts: read a value and set a value.\nBefore we had an introspectGettersAndSetters() that set isReadable, isWritable, getter, setter, etc. for each property of each entity and for each view. This was necessary because we used a custom solution instead of the PropertyAccessor component. Now I've removed everything.\n1. When reading a value, we wrap the readValue() method in a try ... catch and we display the usual Inaccessible label for values that cannot be read. When we drop support for 2.3, we can replace the try .. catch by a proper if .. $accessor->isReadable(...)\n2. When writing a value (this only happens in the controller), we don't check if isWritable and we don't wrap it in a try .. catch That's because in this case we wan't to fail hard. Otherwise, if we fail silently, the user may think that the value was modified. If you try to edit a value which is not writable, the app should fail in a clear way.\nThis change simplifies everything and shaves hundreds of lines of code. Thoughts?\n. Fixed all the details and added a note in the UPGRADE file (in c7c6331)\n. @Pierstoval we could add the silence operator then.\n. @shakaran thanks for proposing this improvement. I want to improve this too, but I agree with @ogizanagi: we already check if the method exists, so this error is strange. I agree with him too about the use of the is_callable() check. I've updated your pull request and created a new one in #634. That's why I'm closing this one. Thanks.\n. @Pierstoval thanks for this nice bugfix and for taking the time to prepare a fantastic and fully tested pull request. Thanks!\n. Fixed by #631.\n. @sebastianlp thanks for reporting this error in the first place and thanks for providing a solution. Thanks to @ogizanagi too who helped you and encouraged you to submit the pull request. I've \"squashed\" your commits before the merge, that's why GitHub displays this as \"closed\" instead of \"merged\", but your work was indeed merged. Thanks.\n. @pvdleek thanks a lot for reporting this bug and providing a very well-done pull request which fixes this and other missing translations. Thanks!\n. Fixed by #632.\n. AMAZING!! Thanks @ogizanagi. Just a question ... should we add this config in config_test.yml instead of config.yml?\n. @ogizanagi you are right. Sorry for the \"noise\". I'm going to merge your great pull request right away.\n. @ogizanagi thank you so much for this pull request! In my opinion these small but important features is what make people like a software project. Thanks!\n. Merci beaucoup @ogizanagi\n. @ogizanagi thanks for this fix and thanks to @xabbuh for this nice catch!\n. @ogizanagi thanks for this nice improvement. Although the changes look small, this increases code quality a lot and makes the application more robust. Thanks to @xabbug too for his original comment that  encouraged this pull request.\n. @ogizanagi another nice improvement. You are on a roll! Thanks for your contributions\n. @helios-ag thanks for working on this guide. I really liked your idea of showing short checklist for the common tasks (reporting bugs, submitting PRs, etc.) I liked it so much that I've opened a new pull request to finish this guide and I've pushed your idea further. I really like how straightforward the document is thanks to your checklist idea.\nI've finish this PR in #686. I reused your original commit, so you'll get full credit of your work when merging the new PR. That's why I'm closing this PR. Thanks again for your work!\n. Closing it as fixed because the best solution is the one provided by @Pierstoval.\n. At first this feature looked like \"too much\" for such a minor gain. However, I think that for some people it may be important to have this feature. I personally always change the favicon in the backend layout to better differentiate it from the public site. So I'm gonna merge it and after that I'll add the documentation. Thanks @ogizanagi for proposing and implementing this feature.\n. Another solution would be to create your own AdminController (as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md) and override the initialize() method:\nphp\nprotected function initialize(Request $request)\n{\n    $this->get('translator')->setLocale('en');\n    parent::initialize();\n}\n. Depending on how common we think this need could be ... we could define a new \"locale\" option for the backend. If it's set, we do the $this->get('translator')->setLocale('en'); in the initialize(). Otherwise, do nothing. But again, I don't know if this need is that common.\n. Closing it as fixed thanks to the two alternative solutions provided.\n. @Pierstoval are you against the feature, its implementation or both? I know it won't be the most used feature ... but it's useful in some scenarios.\n. @Pierstoval you are right. But I believe that the favicon code you showed is for public websites, where you have to deal with multiple device nonsenses. In the backend, one favicon is enough.\n. @motvicka that was a very nice catch. We recently removed this class and we totally overlooked this service. Thanks!\n. (@paquitodev just a comment about toggles: in the past we enabled the toggles automatically for boolean properties. But some users complained because it was \"dangerous\", so now you have to enable them explicitly).\n. I'm closing this old issue. We won't add for now the \"Save and Add a New One\" as built-in action ... but it should be possible to implement this as a custom action, as explained in this tutorial.\n. @shakaran this is definitely something we need to improve soon. From the developer point of view adding this delete link for each element is not that easy ... but for the end-user having this feature is a no brainer.\n. I'm closing this old issue as fixed because we now have the dql_filter for quick and simple search customization and the createSearchQueryBuilder() method for advanced/complex customization.\n. @Pierstoval I'm going to try first your solution.\n. @Pierstoval I'm going to try first your solution.\n. Closing it as fixed as of #676.\n. I explained myself really bad.\nThe problem is that PERSIST is only triggered when creating an entity. I don't understand why is not triggered when updating an entity (which of course is persisted in the database too).\n. Related to this:\nIn some of my backends I do the same operations for both new and updated entities (set the updatedAt field, transform some Markdown content into HTML, update the slug according to the title, etc.)\nI want to do this in my custom controller:\nphp\nclass AdminController extends EasyAdminController\n{\n    public function prePersistEntity($entity)\n    {\n        // do something for new and updated entities ...\n    }\n}\nBut now I have to do this:\n``` php\nclass AdminController extends EasyAdminController\n{\n    public function prePersistEntity($entity)\n    {\n        $this->doSomething($entity);\n    }\n    public function preUpdateEntity($entity)\n    {\n        $this->doSomething($entity);\n    }\nprivate function doSomething($entity)\n{\n    // ...\n}\n\n}\n```\nSo it's not only about the UPDATE event but also about the preUpdate*() method, which should be removed in favor of prePersist*()\n. Related to this:\nIn some of my backends I do the same operations for both new and updated entities (set the updatedAt field, transform some Markdown content into HTML, update the slug according to the title, etc.)\nI want to do this in my custom controller:\nphp\nclass AdminController extends EasyAdminController\n{\n    public function prePersistEntity($entity)\n    {\n        // do something for new and updated entities ...\n    }\n}\nBut now I have to do this:\n``` php\nclass AdminController extends EasyAdminController\n{\n    public function prePersistEntity($entity)\n    {\n        $this->doSomething($entity);\n    }\n    public function preUpdateEntity($entity)\n    {\n        $this->doSomething($entity);\n    }\nprivate function doSomething($entity)\n{\n    // ...\n}\n\n}\n```\nSo it's not only about the UPDATE event but also about the preUpdate*() method, which should be removed in favor of prePersist*()\n. Well, given the documentation linked by @ogizanagi it's clear that I'm wrong because I'm thinking exactly the opposite of Doctrine ... which happens quite frequently :sob: \n. Well, given the documentation linked by @ogizanagi it's clear that I'm wrong because I'm thinking exactly the opposite of Doctrine ... which happens quite frequently :sob: \n. @Pierstoval I don't like the *FLUSH name because a lot of people use \"implicit flushing\". Maybe it's better to not change anything.\n. @Pierstoval I don't like the *FLUSH name because a lot of people use \"implicit flushing\". Maybe it's better to not change anything.\n. Closing it because it's clear that this wasn't a bug and this can't be improved because it follows the same naming as Doctrine. Thank you all for the enlightening discussion.\n. Closing it because it's clear that this wasn't a bug and this can't be improved because it follows the same naming as Doctrine. Thank you all for the enlightening discussion.\n. Closing it as \"fixed\".\n. Closing it because it's not a real bug. As @ogizanagi said, we got rid of the form.html.twig template and now we use proper Symfony form themes.\n. Closing it as fixed by #672.\nBy the way, I loved the discussion that @ogizanagi and @Pierstoval had in this PR. And the http://symfony-collection.fuz.org/ library looks very nice! Thank you both!\n. Closing it as fixed by #672.\nBy the way, I loved the discussion that @ogizanagi and @Pierstoval had in this PR. And the http://symfony-collection.fuz.org/ library looks very nice! Thank you both!\n. :dizzy_face: :scream:\n. :dizzy_face: :scream:\n. @ogizanagi thanks for this fix. If possible, please update the UPGRADE.md file as follows:\nReplace this section...\n``````\nUpgrade to 1.8.0 (8/November/2015)\n\nThe options that define if a entity property is readable and/or writable have\nchanged their name to match the names used by Symfony:\n```php\n// Before\n$propertyMetadata['canBeGet'];\n$propertyMetadata['canBeSet'];\n// After\n$propertyMetadata['isReadable'];\n$propertyMetadata['isWritable'];\n```\nThis only affects you if you make a very advance use of the bundle and override\nlots of its functionalities.\n``````\n...by this one\n``````\nUpgrade to 1.8.0 (8/November/2015)\n\n\nThe options that define if a entity property is readable and/or writable have\n   changed their name to match the names used by Symfony:\n\n```php\n   // Before\n   $propertyMetadata['canBeGet'];\n   $propertyMetadata['canBeSet'];\n// After\n   $propertyMetadata['isReadable'];\n   $propertyMetadata['isWritable'];\n   ```\nThis only affects you if you make a very advance use of the bundle and override\n   lots of its functionalities.\n\nThe form.html.twig template has been removed and therefore, you cannot define\n   the easy_admin.design.templates.form to override it by your own template.\n   If you want to customize the forms of the backend, use a proper Symfony form\n   theme and enable it in the easy_admin.design.form_theme option.\n``````\n\nThanks!\n. @ogizanagi thanks for this fix. If possible, please update the UPGRADE.md file as follows:\nReplace this section...\n``````\nUpgrade to 1.8.0 (8/November/2015)\n\nThe options that define if a entity property is readable and/or writable have\nchanged their name to match the names used by Symfony:\n```php\n// Before\n$propertyMetadata['canBeGet'];\n$propertyMetadata['canBeSet'];\n// After\n$propertyMetadata['isReadable'];\n$propertyMetadata['isWritable'];\n```\nThis only affects you if you make a very advance use of the bundle and override\nlots of its functionalities.\n``````\n...by this one\n``````\nUpgrade to 1.8.0 (8/November/2015)\n\n\nThe options that define if a entity property is readable and/or writable have\n   changed their name to match the names used by Symfony:\n\n```php\n   // Before\n   $propertyMetadata['canBeGet'];\n   $propertyMetadata['canBeSet'];\n// After\n   $propertyMetadata['isReadable'];\n   $propertyMetadata['isWritable'];\n   ```\nThis only affects you if you make a very advance use of the bundle and override\n   lots of its functionalities.\n\nThe form.html.twig template has been removed and therefore, you cannot define\n   the easy_admin.design.templates.form to override it by your own template.\n   If you want to customize the forms of the backend, use a proper Symfony form\n   theme and enable it in the easy_admin.design.form_theme option.\n``````\n\nThanks!\n. Thanks @ogizanagi.\n. Thanks @ogizanagi.\n. As I said before, I'm open to integrate third-party libs in this bundle ... but the default experience we provide to our users must be exceptional. @Pierstoval, the default toolbar displayed by this bundle is a joke. Copy-pasting some editor config or even worse, defining your own global editor config is yet another step that erodes user experience.\nHaving said that, thanks for your comment because it made me realize that this PR must be improved. In case the user defines a global config, we totally ignore it and that leads to a WTF moment, as explained by @ogizanagi.\nSo, here is the problem to solve and I don't know how to solve it: \"I want to provide a default toolbar only if the form field doesn't define the type.options.config.toolbar option and only if no toolbar has been configured globally\". And this very same requirement would be applied to other widgets in the future (date picker, file upload, etc.) Anyone has a clue about how to solve this? Thanks!\n. As I said before, I'm open to integrate third-party libs in this bundle ... but the default experience we provide to our users must be exceptional. @Pierstoval, the default toolbar displayed by this bundle is a joke. Copy-pasting some editor config or even worse, defining your own global editor config is yet another step that erodes user experience.\nHaving said that, thanks for your comment because it made me realize that this PR must be improved. In case the user defines a global config, we totally ignore it and that leads to a WTF moment, as explained by @ogizanagi.\nSo, here is the problem to solve and I don't know how to solve it: \"I want to provide a default toolbar only if the form field doesn't define the type.options.config.toolbar option and only if no toolbar has been configured globally\". And this very same requirement would be applied to other widgets in the future (date picker, file upload, etc.) Anyone has a clue about how to solve this? Thanks!\n. @ogizanagi I keep doing small changes in this PR, so this is probably going to explode badly when merging.\nBy the way, what do you think about adding this check in 2b427cb ? It's OK or useless?\n. @ogizanagi I keep doing small changes in this PR, so this is probably going to explode badly when merging.\nBy the way, what do you think about adding this check in 2b427cb ? It's OK or useless?\n. OK. I've finished tweaking this PR. Tests are green and I've tested successfully in two real-world backends made with EasyAdmin.\nI don't know which is the best way to proceed now. Merged this PR and do changes later? Merged another PR?\n. OK. I've finished tweaking this PR. Tests are green and I've tested successfully in two real-world backends made with EasyAdmin.\nI don't know which is the best way to proceed now. Merged this PR and do changes later? Merged another PR?\n. @ogizanagi great! Thanks a lot for finishing everything. I'm closing this PR in favor of #676 then.\n. @ogizanagi great! Thanks a lot for finishing everything. I'm closing this PR in favor of #676 then.\n. I've added all the recommendations made by @ogizanagi Thanks!  Besides, I now promote the alternative of defining the ivory_ck_editor config option, as recommended by @Pierstoval. I agree that's the best way to go.\n. I've added all the recommendations made by @ogizanagi Thanks!  Besides, I now promote the alternative of defining the ivory_ck_editor config option, as recommended by @Pierstoval. I agree that's the best way to go.\n. I've reworded the last part of the article according to your suggestions. Thanks!\n. I've reworded the last part of the article according to your suggestions. Thanks!\n. @LogansUA thank you very much for reporting this error and for your very detailed explanation. It was really easy to spot what was happening :)\nIndeed there was a bug about boolean/toggle fields. It has been fixed in #669, so it will be available in the next stable release. Thanks again for your bug report!\n. @LogansUA thank you very much for reporting this error and for your very detailed explanation. It was really easy to spot what was happening :)\nIndeed there was a bug about boolean/toggle fields. It has been fixed in #669, so it will be available in the next stable release. Thanks again for your bug report!\n. @LogansUA thanks to you, for using it and for reporting issues.\nBy the way, let's not forget about SonataAdminBundle because EasyAdmin will always reject features for the most complex backends (we target \"the 80% easiest backends\"). So we need a more advanced alternative, such as Sonata.\n. @LogansUA thanks to you, for using it and for reporting issues.\nBy the way, let's not forget about SonataAdminBundle because EasyAdmin will always reject features for the most complex backends (we target \"the 80% easiest backends\"). So we need a more advanced alternative, such as Sonata.\n. @ogizanagi I'm amazed by your proposal :heart_eyes:  Your solution looks elegant, flexible and it's very Symfony-friendly. It truly feels natural.\nThinking about the future, I agree with you and I'd like to also introduce in this same pull request a easyadmin.form_type_configurator service tag. I'm only concerned about this part:\nphp\n        if ($container->has('ivory_ck_editor.config_manager')\n             && null === $container->get('ivory_ck_editor.config_manager')->getDefaultConfig()\n         ) { ... }\nI'd prefer if type configurators were always registered (if they have the mentioned service tag) and we make this check inside each configurator. Otherwise, people won't be able to create their own type configurators because they have to add the checks in the EasyAdminFormTypePass compiler pass.\nThinking about the solution, I don't know where should we move these checks. To support or configure methods? Creating a new method in the interface? Should we pass the entire container to that methods so they can do any check? I'm afraid I have more questions than answers.\n. @ogizanagi I'm amazed by your proposal :heart_eyes:  Your solution looks elegant, flexible and it's very Symfony-friendly. It truly feels natural.\nThinking about the future, I agree with you and I'd like to also introduce in this same pull request a easyadmin.form_type_configurator service tag. I'm only concerned about this part:\nphp\n        if ($container->has('ivory_ck_editor.config_manager')\n             && null === $container->get('ivory_ck_editor.config_manager')->getDefaultConfig()\n         ) { ... }\nI'd prefer if type configurators were always registered (if they have the mentioned service tag) and we make this check inside each configurator. Otherwise, people won't be able to create their own type configurators because they have to add the checks in the EasyAdminFormTypePass compiler pass.\nThinking about the solution, I don't know where should we move these checks. To support or configure methods? Creating a new method in the interface? Should we pass the entire container to that methods so they can do any check? I'm afraid I have more questions than answers.\n. @ogizanagi this PR is becoming more and more amazing. I truly love it!! Thanks a lot for your work.\n\n@Pierstoval first, thank you for your comments. It's not easy to go against \"the common opinion\" and say what someone really thinks.\nI wanted to create built-in widgets. You and others convinced me that it was an awful idea. But then, I want to provide \"second-party\" widgets. These are bundles which are documented in our tutorials and which work better out-of-the-box and the other bundles.\nYou asked:\n\nWhat if someone wants to use stfalcon/TinymceBundle?\n\nI don't know. If you want a WYSIWYG editor, we recommend you to use CKEditor. If you want to use the other one, you are on your own. Everything will work, but you'll have to take care of the details yourself.\nThis reminds me about Symfony and ORMs. In theory Symfony is agnostic. In practice only Doctrine works great and is tightly integrated with the framework.\n. @ogizanagi this PR is becoming more and more amazing. I truly love it!! Thanks a lot for your work.\n\n@Pierstoval first, thank you for your comments. It's not easy to go against \"the common opinion\" and say what someone really thinks.\nI wanted to create built-in widgets. You and others convinced me that it was an awful idea. But then, I want to provide \"second-party\" widgets. These are bundles which are documented in our tutorials and which work better out-of-the-box and the other bundles.\nYou asked:\n\nWhat if someone wants to use stfalcon/TinymceBundle?\n\nI don't know. If you want a WYSIWYG editor, we recommend you to use CKEditor. If you want to use the other one, you are on your own. Everything will work, but you'll have to take care of the details yourself.\nThis reminds me about Symfony and ORMs. In theory Symfony is agnostic. In practice only Doctrine works great and is tightly integrated with the framework.\n. @Pierstoval in the long term we'll document everything in detail ... but for now I'd like to do the opposite. That allows us to freely use and tweak this feature until we are sure it's finished. Then we'll document it.\n. @Pierstoval in the long term we'll document everything in detail ... but for now I'd like to do the opposite. That allows us to freely use and tweak this feature until we are sure it's finished. Then we'll document it.\n. Merging it to finish everything in the other PR and merge it as soon as possible to test it in real backends. Thanks again for this amazing PR.\n. Merging it to finish everything in the other PR and merge it as soon as possible to test it in real backends. Thanks again for this amazing PR.\n. The type property can never be toggle because this value is obtained through Doctrine metadata, so we only receive \"safe and official\" types.\n. The type property can never be toggle because this value is obtained through Doctrine metadata, so we only receive \"safe and official\" types.\n. @ogizanagi thanks for fixing this bug. And here is another example of \"let's refactor this little untested code to make it more readable. Nothing wrong will happen.\" :cry: \n. @ogizanagi thanks for fixing this bug. And here is another example of \"let's refactor this little untested code to make it more readable. Nothing wrong will happen.\" :cry: \n. @ogizanagi :bow: another nice improvement! The original code was a leftover of the first versions of this bundle. Your proposal is what this code should have been since day one. Thanks!\n. @ogizanagi :bow: another nice improvement! The original code was a leftover of the first versions of this bundle. Your proposal is what this code should have been since day one. Thanks!\n. @ogizanagi this was a long-standing task in my TODO list. Thanks for taking care of it. Regarding the use of buttons, I'm not sure because they can be confussed with labels. I'm going to rethink about this and I'll take a look to the plugin that you linked the other day.\n. @ogizanagi this was a long-standing task in my TODO list. Thanks for taking care of it. Regarding the use of buttons, I'm not sure because they can be confussed with labels. I'm going to rethink about this and I'll take a look to the plugin that you linked the other day.\n. @ogizanagi I'm speechless :no_mouth: You always have simple and elegant solutions. This \"hack\" bothered me since day one. Thanks to you it's now gone!\n. @ogizanagi I'm speechless :no_mouth: You always have simple and elegant solutions. This \"hack\" bothered me since day one. Thanks to you it's now gone!\n. ...and this was finally merged!! I'm very excited to release a new version of the bundle, but first I'll test the latest changes thoroughly in real-world backends. @ogizanagi thanks again for the incredible work you made in this pull request!\n. ...and this was finally merged!! I'm very excited to release a new version of the bundle, but first I'll test the latest changes thoroughly in real-world backends. @ogizanagi thanks again for the incredible work you made in this pull request!\n. After this change, the overall \"quality score\" of the bundle surpassed again the 8/10. Mostly was because of this improvement:\n\n. After this change, the overall \"quality score\" of the bundle surpassed again the 8/10. Mostly was because of this improvement:\n\n. I like this feature a lot. Thanks @Pierstoval. And I like @ogizanagi's comments too :)\n. I like this feature a lot. Thanks @Pierstoval. And I like @ogizanagi's comments too :)\n. I love features that have a small footprint but a big positive impact in user experience. @Pierstoval thanks for this!\n. I love features that have a small footprint but a big positive impact in user experience. @Pierstoval thanks for this!\n. @Pierstoval thanks for this feature. It took me so long to merge it, that this is probably the last merge of the year!\n. @Pierstoval thanks for this feature. It took me so long to merge it, that this is probably the last merge of the year!\n. This has been fixed by @ogizanagi in #682 and it will be available in the next version of the bundle (to be released very soon). Thanks for reporting the bug.\n. That string is defined in the EasyAdminBundle.xx.xlf file:\nxml\n<trans-unit id=\"list.row_actions\">\n    <source>list.row_actions</source>\n    <target>Actions</target>\n</trans-unit>\nIn order to customize it, you have to create a translation file in app/Resources/translations/ as explained  in this article.\n. @ogizanagi another nice bug fix. Thanks! The new Twig code looks a bit ugly, but I cannot think a better solution. Thank you!\n. @ogizanagi another nice bug fix. Thanks! The new Twig code looks a bit ugly, but I cannot think a better solution. Thank you!\n. It's odd that we suffer almost the same bug after so long! Luckily we can rely on you to solve it! Thanks.\n. It's odd that we suffer almost the same bug after so long! Luckily we can rely on you to solve it! Thanks.\n. @mkalisz77 thanks for reporting this error. I can confirm the bug and hopefully it's fixed in #688.\n. Thank you @ogizanagi.\n. Thank you @ogizanagi.\n. @mkalisz77 thanks for making the effort to contribute. I know the feel of being overwhelmed by the Git weirdness. I've just proposed in #767 some improvements for the CONTRIBUTING guide. Please let me know if that would help you. Thanks!\n. @ogizanagi this is the best gift :gift: we could receive for Christmas!! You are so amazing!! :bow: :bow:  I'm really honored to have you as contributor of this bundle.\n\nI've been playing a bit with this feature. So far everything works perfectly:\n\nThe only error I got was caused by the Doctrine configuration of the EasyAdmin demo application:\n\n. @Pierstoval exactly! That's what I tried to say.\n. This was finally merged! @ogizanagi thanks a lot for this huge contribution!\n. This was finally merged! @ogizanagi thanks a lot for this huge contribution!\n. @ogizanagi you are right. I wasn't referring to a new public configuration option. What I want to do is to create that option when processing the full backend configuration into the easy_Admin.config container parameter.\n. I've finished this feature in de01f1d.\n. I've fixed all the minor issues reported and in b54b648 I've tried to also fix the major issue raised by @ogizanagi. I agree with you that configuring the exception template per entity looks like \"too much\". However, I prefer to be consistent and provide a feature that almost nobody will use ... instead of having to treat the exception templates differently from the rest of the templates (we need to deal with this differences in the code, the docs, etc.)\n. @shakaran I completely agree with you. I've reverted everything in b6ff3d7 and thanks to the latest changes, I was able to fix some tests which were wrong.\n. Travis shows 1 test failing ... but I can't reproduce locally :confused:  Everything works for me!!\n\n. @ogizanagi I tried relaunching with no luck. Let's relaunch again. If it fails, I'll merge it anyway.\n. I also deleted all the caches of my Travis account but it didn't work. Let's merge it. \n. Yes. I found the error myself a while ago. I'm in the middle of a huge change of code. Stay tuned for the upcoming pull request :)\n. @ogizanagi thanks for this fix. I'm sorry it wasn't fixed when we made the change from \"css\" to \"css_class\". Luckily everything will be fixed now (and backedns will start breaking for people who didn't read the UPGRADE guide)\n. This seems like a \"very edgy edge-case\", but still it's better to always do the right thing. Thanks!\n. @sebastianlp thank you very much for reporting this issue in the first place and then for providing the fix yourself.\n. @rubengc thank you for this nice list of feature requests! We'll implement some of those ideas in the coming weeks.\n\nRegarding the search highlight, we already use the jQuery highlight plugin in the search results:\n\nRegarding the form tabs, I think it's \"mandatory\" for complex backends because they define very long forms. However I agree with @ogizanagi too about their drawbacks. We need to do this right. By the way, I don't want to add a new section option for properties. I have another idea to implement this feature more easily.\n. @Pierstoval this is how I'd like to implement form tabs.\nIf this is your original config:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\nThis is how you create a form showing two tabs (Basic and Advanced):\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nWe'd need to find the best name for this option (group, tab, ...) If you define groups for a form but you don't put some properties in a group, they are assigned to the Default group:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    # the first four fields are assigned to the 'Default' group\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nThis config allows us to extend it if needed:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced', default: true }\n                    - enabled\n                    - createdAt\n                    - tags\nIt's also compatible with the compact config:\n``` yaml\nBEFORE\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [id, name, price, ean, enabled, createdAt, tags]\nAFTER\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [ { group: 'Basic' }, id, name, price, ean, { group: 'Advanced' }, enabled, createdAt, tags]\n```\n. @Pierstoval this is how I'd like to implement form tabs.\nIf this is your original config:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\nThis is how you create a form showing two tabs (Basic and Advanced):\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nWe'd need to find the best name for this option (group, tab, ...) If you define groups for a form but you don't put some properties in a group, they are assigned to the Default group:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    # the first four fields are assigned to the 'Default' group\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nThis config allows us to extend it if needed:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced', default: true }\n                    - enabled\n                    - createdAt\n                    - tags\nIt's also compatible with the compact config:\n``` yaml\nBEFORE\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [id, name, price, ean, enabled, createdAt, tags]\nAFTER\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [ { group: 'Basic' }, id, name, price, ean, { group: 'Advanced' }, enabled, createdAt, tags]\n```\n. @Pierstoval actually is very easy to manage this option. In the code that parses the configuration when the container is dumped (therefore we only do this once), we can easily do anything we want (like adding this option to every property, creating a new option mapping groups with properties, etc.)\n. @Pierstoval actually is very easy to manage this option. In the code that parses the configuration when the container is dumped (therefore we only do this once), we can easily do anything we want (like adding this option to every property, creating a new option mapping groups with properties, etc.)\n. Let's keep discussing about \"tabbed forms\" in #698. Thanks!\n. Let's keep discussing about \"tabbed forms\" in #698. Thanks!\n. Closing it because some things have already been implemented (grouped menus, search highlight), others are in discussion (form tabs) and others won't be implemented for now.\n. @ogizanagi thanks for this nice little change. I love it.\n. @ogizanagi thanks for this nice little change. I love it.\n. This is the first proposal.\n\nIf this is your original config:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\nThis is how you create a form showing two tabs (Basic and Advanced):\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nWe'd need to find the best name for this option (group, tab, ...) If you define groups for a form but you don't put some properties in a group, they are assigned to the Default group:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    # the first four fields are assigned to the 'Default' group\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nThis config allows us to extend it if needed:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced', default: true }\n                    - enabled\n                    - createdAt\n                    - tags\nIt's also compatible with the compact config:\n``` yaml\nBEFORE\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [id, name, price, ean, enabled, createdAt, tags]\nAFTER\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [ { group: 'Basic' }, id, name, price, ean, { group: 'Advanced' }, enabled, createdAt, tags]\n```\n. This is the first proposal.\n\nIf this is your original config:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\nThis is how you create a form showing two tabs (Basic and Advanced):\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nWe'd need to find the best name for this option (group, tab, ...) If you define groups for a form but you don't put some properties in a group, they are assigned to the Default group:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    # the first four fields are assigned to the 'Default' group\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced' }\n                    - enabled\n                    - createdAt\n                    - tags\nThis config allows us to extend it if needed:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields:\n                    - { group: 'Basic' }\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - { group: 'Advanced', default: true }\n                    - enabled\n                    - createdAt\n                    - tags\nIt's also compatible with the compact config:\n``` yaml\nBEFORE\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [id, name, price, ean, enabled, createdAt, tags]\nAFTER\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            form:\n                fields: [ { group: 'Basic' }, id, name, price, ean, { group: 'Advanced' }, enabled, createdAt, tags]\n```\n. This is the second proposal\n\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                Basic:\n                    fields:\n                        - id\n                        - name\n                        - price\n                        - ean\n                Advanced:\n                    default: true\n                    fields:\n                        - enabled\n                        - createdAt\n                        - tags\n. This is the second proposal\n\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                Basic:\n                    fields:\n                        - id\n                        - name\n                        - price\n                        - ean\n                Advanced:\n                    default: true\n                    fields:\n                        - enabled\n                        - createdAt\n                        - tags\n. This is the third proposal\n\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 groups:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\nAn alternative:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 form_options:\n                      groups:\n                          Default: ['id', 'name', 'price', 'ean']\n                          Advanced: ['enabled', 'createdAt', 'tags']\n                      default_group: Advanced\n. This is the third proposal\n\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 groups:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\nAn alternative:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 form_options:\n                      groups:\n                          Default: ['id', 'name', 'price', 'ean']\n                          Advanced: ['enabled', 'createdAt', 'tags']\n                      default_group: Advanced\n. This is how Symfony 1 Backend generator did it. Reference\n\n``` yaml\napps/backend/modules/job/config/generator.yml\nconfig:\n  form:\n    # first you define the fields, then use the \"display\" option to define the groups\n    display:\n      Content: [category_id, type, company, logo, url, position, location, description, how_to_apply, is_public, email]\n      Admin:   [_generated_token, is_activated, expires_at]\n```\n. This is how Symfony 1 Backend generator did it. Reference\n\n``` yaml\napps/backend/modules/job/config/generator.yml\nconfig:\n  form:\n    # first you define the fields, then use the \"display\" option to define the groups\n    display:\n      Content: [category_id, type, company, logo, url, position, location, description, how_to_apply, is_public, email]\n      Admin:   [_generated_token, is_activated, expires_at]\n```\n. This is how Sonata Admin Bundle does it. Reference\n\n``` php\n<?php\n// src/AppBundle/Admin/PersonAdmin.php\nclass PersonAdmin extends Admin\n{\n    // ...\npublic function configureFormFields(FormMapper $formMapper)\n{\n    $formMapper\n        ->tab('General') // the tab call is optional\n            ->with('Addresses', array(\n                'class'       => 'col-md-8',\n                'box_class'   => 'box box-solid box-danger',\n                'description' => 'Lorem ipsum',\n                // ...\n            ))\n            ->add('title')\n\n            // ...\n\n            ->end()\n        ->end()\n    ;\n\n}\n```\nThey allow to define \"tabs\" (->addTab()) (our \"groups\") and \"boxes\" (->with()) inside each tab. We won't have the concept of \"boxes\".\n. This is how Sonata Admin Bundle does it. Reference\n\n``` php\n<?php\n// src/AppBundle/Admin/PersonAdmin.php\nclass PersonAdmin extends Admin\n{\n    // ...\npublic function configureFormFields(FormMapper $formMapper)\n{\n    $formMapper\n        ->tab('General') // the tab call is optional\n            ->with('Addresses', array(\n                'class'       => 'col-md-8',\n                'box_class'   => 'box box-solid box-danger',\n                'description' => 'Lorem ipsum',\n                // ...\n            ))\n            ->add('title')\n\n            // ...\n\n            ->end()\n        ->end()\n    ;\n\n}\n```\nThey allow to define \"tabs\" (->addTab()) (our \"groups\") and \"boxes\" (->with()) inside each tab. We won't have the concept of \"boxes\".\n. Django solves this with fieldsets. Reference\n\n``` python\nfrom django.contrib import admin\nclass FlatPageAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (None, {\n            'fields': ('url', 'title', 'content', 'sites')\n        }),\n        ('Advanced options', {\n            'classes': ('collapse',),\n            'fields': ('registration_required', 'template_name'),\n        }),\n    )\n``\n. Django solves this withfieldsets`. Reference\n\n``` python\nfrom django.contrib import admin\nclass FlatPageAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (None, {\n            'fields': ('url', 'title', 'content', 'sites')\n        }),\n        ('Advanced options', {\n            'classes': ('collapse',),\n            'fields': ('registration_required', 'template_name'),\n        }),\n    )\n``\n. @ogizanagi your proposal make sense but I still need to think about this feature.\n. @ogizanagi your proposal make sense but I still need to think about this feature.\n. @rubengc yes. But first we need to rest for a while. The development of this bundle is usually as this: add a lot of features ... stop for a while to work on maintenance and small things ... add again a lot of features and repeat the process.\n. I'm closing this as \"won't fix\" for now. The reason is that I'm going to propose a different but related feature which will also improve the design of the forms a lot, but without using tabs. If you don't like it ... then we'll reconsider introducing tabs. Thanks.\n. @ogizanagi that's a good question. Should an image type includevich_imageorstringas its CSS class? Or maybe we should get rid of this CSS class now that we allow to use your own templates forlistview very easily.\n. @ogizanagi that's a good question. Should an image type includevich_imageorstringas its CSS class? Or maybe we should get rid of this CSS class now that we allow to use your own templates forlistview very easily.\n. @ogizanagi I'm probably wrong but, why cannot we usefield-{{ block_prefixes[-2:1] }}instead offield-{{ block_prefixes[-2:][0] }}?\n. @ogizanagi you are right! I was :sleepy:  However,[-2:][0]still looks a bit hard to understand. What about[-2:]|first? I don't know, maybe that solution is worse.\n. Maybe theslice(-2)is \"better\" because it's trivial to understand and therefore improves code readability?\n. @ogizanagi thanks for fixing this issue so quickly and for enabling a nice discussion about syntactic sugar vs code readability :)\n. @Pierstoval thanks for this nice and fully-tested pull request!\n. Closing it because nobody volunteered to create this test. In any case, our code coverage is more than 88%, so we are pretty covered.\n. Closing it as fixed by #991.\n. @mkalisz77 I use LiipImagineBundle in other projects ... but I'm not sure it would fit our requirements. We always want to display the original image unmodified, so we cannot crop it or rescale it. I think a JavaScript solution may be better because we can show the \"thumbnail\" of the image and with 1 click we get the original image without reloading the page.\n. Closing it as fixed because now we display thumbnails that zoom to their original size when clicking on them.\n. Fixed by #819.\n. I'm closing this old issue as \"fixed\" because we have introduced lots of features for this: warning messages if you are missing the __toString() method, a way to sort the list contents, added support to sort by Doctrine associations, etc.\n. Closing this old issue because it looks like everything was fixed by @mkalisz77 himself. Thanks!\n. @reypm thanks for offering you to make this contribution ... but I prefer if you don't do it. Don't get me wrong. The only reason is that I prefer to write all the documentation myself. That gives the docs a consistent feel. In addition, I'm already working to revamp all the documentation, so a lot of changes are coming soon regarding docs. I hope you understand my comment in a positive way.\n. As a first step to write this new tutorial, I've integrated FOSUserBundle inside the EasyAdmin Demo application: https://github.com/javiereguiluz/easy-admin-demo/pull/25\n. (@Pierstoval it's very easy to solve it indeed :)  I'm creating lots of issues lately (most of them easy to solve) so people who want to contribute to this bundle can do that more easily. If nobody steps into one issue, I'll try to solve them myself)\n. This feature is currently not supported. I've created #720 to discuss about this. For now, you'll have to copy the translations from the FOSUserBundle.\n. @reypm yes, we'll add this feature in the near term (I cannot tell the exact date). I'm closing this issue as duplicate of https://github.com/javiereguiluz/EasyAdminBundle/issues/208\n. As usual, let's see how does Sonata solve this problem. In [this article](https://sonata-project.org/bundles/admin/master/doc/reference/translation.html) we can see that you can define the translation domain in two ways:\n- Globally for the entire Admin class (equivalent to ourEntityconfig) via the$translationDomain` property. Example:\nphp\nclass PageAdmin extends Admin\n{\n    protected $translationDomain = 'SonataPageBundle'; // default is 'messages'\n}\n- Locally for each field (equivalent to our entity properties) via the translation_domain option. Example:\nphp\n->add('publishable', 'checkbox', array(), array(\n    'translation_domain' => 'MyTranslationDomain',\n))\n. Closing it as fixed by #1347. This will be available in the next stable version (to be released soon).\n. Closing it as fixed by #1347. This will be available in the next stable version (to be released soon).\n. Indeed! Closing it.\n. Closing it as fixed by #978.\n. Thank you all for the discussion. This is not easy to solve (add a datepicker? integrate a existing one? do nothing but provide auto-configuration for popular datepickers? rely on HTML5 built-in datepickers?)  So I'm closing this issue for now and moving it to the list of future features of this bundle to revisit it in the near future. Thanks!\n. Just for the record: Firefox 57 adds a native date/time picker for <input type=\"date\" />.\n\nIt looks great, it works perfectly and it requires zero effort on our side ... so I wish other browsers follow soon. See https://hacks.mozilla.org/2017/09/firefox-quantum-developer-edition-fastest-firefox-ever/. I've addressed all the concerns raised by @ogizanagi. I'm going to merge it as is because this is just a refactor (not a new feature) and all tests pass.\n. I've addressed all the concerns raised by @ogizanagi. I'm going to merge it as is because this is just a refactor (not a new feature) and all tests pass.\n. @reypm everything you need to know about this is explained in this article: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. @reypm everything you need to know about this is explained in this article: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. @reypm I'm sorry if my comment sounded harsh. I was in a hurry and I wanted to reply fast. I just wanted to say that luckily there is documentation that explains how to solve the issue that you mentioned. Cheers!\n. @reypm I'm sorry if my comment sounded harsh. I was in a hurry and I wanted to reply fast. I just wanted to say that luckily there is documentation that explains how to solve the issue that you mentioned. Cheers!\n. I'm closing this because it was a \"false bug\". If I use the real property name (is_published) it works as expected. The problem is that I was using ispublished in the config file.\n@rubengc regarding the other issue that you mentioned about checkboxes ... if it persists, please open a new issue. Thanks!\n. @ogizanagi @Pierstoval let me explain this issue in a different way:\n1) You need a cache when you have some task which is heavy and which must be executed during runtime. Caches are \"horrible\" and introduce a lot of issues ... but it's a good trade-off for cases like this.\n2) Our problem is that the config code is wrong since the beginning. There is nothing that must be done during the app execution. Everything can be done once before running the app. You don't need a cache because nothing is dynamic once everything is configured.\nAnd now let me show you a detailed example:\n- Imagine that you are looking at the details of the Product number 100 (you browse the show view of the entity Product with an id equal to 100).\n- Imagine that you are using the prod environment.\n- Imagine that it's the first time you access the app (no cache is already generated).\nCurrent situation\n\nHalf of the EasyAdmin config is parsed and cached \"forever\".\nThe other half config is parsed during the request. Even if we are browsing the show view, the config for all the views (list, edit, etc.) is parsed (but only for this entity of course).\nThe dynamic config is cached in case the same config is requested (this is VERY unlikely: you must ask the same entity during the same request ... the cache is not stored between requests!!!)\nThe requested page is rendered.\nIf you ask the same or any other page ... everything except the first step happens AGAIN. Everything!\n\nProposed situation\n\nThe entire EasyAdmin config is parsed and cached \"forever\". This is a bit slower than before because we parse the config for ALL entities, not the one you are using.\nWhen browsing the show page, nothing is parsed. The entire config is cached, so we just use it.\nIf you ask the same or any other page ... NOTHING is parsed or executed again. Nothing!\n\nConclusion\n\nWe don't need a cache system because our config is not dynamic.\nRight now we parse a lot of config for every single backend request!!\nSolving this is very easy: we just need to get all the Doctrine metadata before executing the app.\nThe new system is a bit slower the first time (when compiling the app container) but it's much faster and easier to maintain afterwards.\nThanks to the new \"config normalizers\" this will be trivial to implement and it will simplify our code a lot.\n\n\nPS: by the way, I'm looking for a better name for \"config normalizers\". That was a good name at first because we just normalized different config formats into the full standard format. But right now we are normalizing and parsing the entire config. Something like \"Config Passes\" may be better. I'm open to new ideas. Thanks!\n. @ogizanagi @Pierstoval let me explain this issue in a different way:\n1) You need a cache when you have some task which is heavy and which must be executed during runtime. Caches are \"horrible\" and introduce a lot of issues ... but it's a good trade-off for cases like this.\n2) Our problem is that the config code is wrong since the beginning. There is nothing that must be done during the app execution. Everything can be done once before running the app. You don't need a cache because nothing is dynamic once everything is configured.\nAnd now let me show you a detailed example:\n- Imagine that you are looking at the details of the Product number 100 (you browse the show view of the entity Product with an id equal to 100).\n- Imagine that you are using the prod environment.\n- Imagine that it's the first time you access the app (no cache is already generated).\nCurrent situation\n\nHalf of the EasyAdmin config is parsed and cached \"forever\".\nThe other half config is parsed during the request. Even if we are browsing the show view, the config for all the views (list, edit, etc.) is parsed (but only for this entity of course).\nThe dynamic config is cached in case the same config is requested (this is VERY unlikely: you must ask the same entity during the same request ... the cache is not stored between requests!!!)\nThe requested page is rendered.\nIf you ask the same or any other page ... everything except the first step happens AGAIN. Everything!\n\nProposed situation\n\nThe entire EasyAdmin config is parsed and cached \"forever\". This is a bit slower than before because we parse the config for ALL entities, not the one you are using.\nWhen browsing the show page, nothing is parsed. The entire config is cached, so we just use it.\nIf you ask the same or any other page ... NOTHING is parsed or executed again. Nothing!\n\nConclusion\n\nWe don't need a cache system because our config is not dynamic.\nRight now we parse a lot of config for every single backend request!!\nSolving this is very easy: we just need to get all the Doctrine metadata before executing the app.\nThe new system is a bit slower the first time (when compiling the app container) but it's much faster and easier to maintain afterwards.\nThanks to the new \"config normalizers\" this will be trivial to implement and it will simplify our code a lot.\n\n\nPS: by the way, I'm looking for a better name for \"config normalizers\". That was a good name at first because we just normalized different config formats into the full standard format. But right now we are normalizing and parsing the entire config. Something like \"Config Passes\" may be better. I'm open to new ideas. Thanks!\n. @Pierstoval exactly! Configurator class is gone, Reflection/EntityMetadataInspector class is gone and the rest of config classes will be simplified.\n. @Pierstoval exactly! Configurator class is gone, Reflection/EntityMetadataInspector class is gone and the rest of config classes will be simplified.\n. I've started to work on this and I'll submit a pull request soon to see how it goes.\n. I've started to work on this and I'll submit a pull request soon to see how it goes.\n. Update on the progress of this change: I'm completely stuck and I can't get Doctrine metadata before the application has started (and therefore, the container has been compiled).\n\nDetails:\n- These are the code changes so far\n- I've created this compiler pass.\n- The problem is this line of code. I need the Doctrine service ... but I can only get the Doctrine definition. For that reason I get this error:\n\n\nI have no idea how to solve this problem. Call me crazy ... but I'm so despair that I was thinking about: 1) pass the entire $container to that class; 2) clone the container; 3) compile the cloned container; 4) use the compiled container to get the Doctrine service.\n. Update on the progress of this change: I'm completely stuck and I can't get Doctrine metadata before the application has started (and therefore, the container has been compiled).\n\nDetails:\n- These are the code changes so far\n- I've created this compiler pass.\n- The problem is this line of code. I need the Doctrine service ... but I can only get the Doctrine definition. For that reason I get this error:\n\n\nI have no idea how to solve this problem. Call me crazy ... but I'm so despair that I was thinking about: 1) pass the entire $container to that class; 2) clone the container; 3) compile the cloned container; 4) use the compiled container to get the Doctrine service.\n. @ogizanagi I used getDefinition() first but the result is the same.\n. @ogizanagi I used getDefinition() first but the result is the same.\n. @ogizanagi I was so focused on \"weird things\" (config passes, compiler passes, services definitions, etc.) that I couldn't see the obvious :(  You are right: I just need to get the service, not the definition. I'm sorry for the noise.\n. @ogizanagi I was so focused on \"weird things\" (config passes, compiler passes, services definitions, etc.) that I couldn't see the obvious :(  You are right: I just need to get the service, not the definition. I'm sorry for the noise.\n. Another update of the progress of this change.\n\n\nThe refactor is almost complete and everything seems to work in the backends.\nNow I'm trying to update the tests and this is the problem:\nA compiler pass is now in charge of processing the entire backend config.\nUnit testing a compiler pass is almost impossible (we need the entire doctrine service fully-working)\nI'm trying to change the unit tests for functional tests: we put the config in the app, create the entire container and check if the generated parameter is the good one.\n\n\nIn summary, this is the problem: I can't boot a Symfony kernel using config provided in an array instead of passing the config.yml file path.\nIn detail, this is the problem:\n- We have hundreds of YAML files which contain the minimal EasyAdmin config we want to test in each case.\n- I've created a new ConfigPassKernel.php which is able to load the config from an array instead of a file.\n- In this line I try to pass the config array to the kernel.\n- The problem is that I don't know how to tell Symfony that I want to use the ConfigPassKernel and not the regular AppKernel. The $this->initClient() logic is very obscure to me and I don't know how is created the kernel for the tests.\n. Another update of the progress of this change.\n\n\nThe refactor is almost complete and everything seems to work in the backends.\nNow I'm trying to update the tests and this is the problem:\nA compiler pass is now in charge of processing the entire backend config.\nUnit testing a compiler pass is almost impossible (we need the entire doctrine service fully-working)\nI'm trying to change the unit tests for functional tests: we put the config in the app, create the entire container and check if the generated parameter is the good one.\n\n\nIn summary, this is the problem: I can't boot a Symfony kernel using config provided in an array instead of passing the config.yml file path.\nIn detail, this is the problem:\n- We have hundreds of YAML files which contain the minimal EasyAdmin config we want to test in each case.\n- I've created a new ConfigPassKernel.php which is able to load the config from an array instead of a file.\n- In this line I try to pass the config array to the kernel.\n- The problem is that I don't know how to tell Symfony that I want to use the ConfigPassKernel and not the regular AppKernel. The $this->initClient() logic is very obscure to me and I don't know how is created the kernel for the tests.\n. This feature is completed and ready to review in #738. Thanks!\n. This feature is completed and ready to review in #738. Thanks!\n. Fixed as of #738.\n. @ogizanagi thanks for this! I love it. I still believe that \"normalizers\" code is too heavy, so please keep those tweaks coming!\n. @ogizanagi thanks for this! I love it. I still believe that \"normalizers\" code is too heavy, so please keep those tweaks coming!\n. @xabbuh the first merge of 2016! Happy new year to all of you!!\n. @xabbuh the first merge of 2016! Happy new year to all of you!!\n. Instead of solving this \"feature\", what do you think about removing it? I highly doubt anyone would ever use theme-easyadminbundle:form:bootstrap_3_horizontal_layout or theme-vichuploaderbundle:form:fields as part of a CSS selector.\nI agree with the other points you mentioned.\n. Instead of solving this \"feature\", what do you think about removing it? I highly doubt anyone would ever use theme-easyadminbundle:form:bootstrap_3_horizontal_layout or theme-vichuploaderbundle:form:fields as part of a CSS selector.\nI agree with the other points you mentioned.\n. @ogizanagi thanks! I love it when a pull request removes more than it adds.\n. @ogizanagi thanks! I love it when a pull request removes more than it adds.\n. @gabiudrescu documentation is truly important for this bundle, so thank you for fixing this issue.\n. @gabiudrescu documentation is truly important for this bundle, so thank you for fixing this issue.\n. Regarding the failing tests with --prefer-lowest I can't reproduce them :confused:\n1) composer update --prefer-lowest\n2) composer show -i\ndoctrine/annotations              v1.0    Docblock Annotations Parser\ndoctrine/cache                    v1.0    Caching library offering an object-oriented API for many cache backends\ndoctrine/collections              v1.0    Collections Abstraction library\ndoctrine/common                   v2.4.0  Common Library for Doctrine projects\ndoctrine/data-fixtures            v1.0.0  Data Fixtures for all Doctrine Object Managers\ndoctrine/dbal                     2.3.3   Database Abstraction Layer\ndoctrine/doctrine-bundle          v1.2.0  Symfony DoctrineBundle\ndoctrine/doctrine-fixtures-bundle v2.2.0  Symfony DoctrineFixturesBundle\ndoctrine/inflector                v1.0    Common String Manipulations with regard to casing and singular/plural rules.\ndoctrine/instantiator             1.0.1   A small, lightweight utility to instantiate objects in PHP without invoking their constructors\ndoctrine/lexer                    v1.0    Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.\ndoctrine/orm                      2.3.0   Object-Relational-Mapper for PHP\njdorn/sql-formatter               v1.1.0  a PHP SQL highlighting library\npagerfanta/pagerfanta             v1.0.1  Pagination for PHP 5.3\nphpunit/php-code-coverage         2.0.0   Library that provides collection, processing, and rendering functionality for PHP code coverage information.\nphpunit/php-file-iterator         1.3.2   FilterIterator implementation that filters files based on a list of suffixes.\nphpunit/php-text-template         1.2.0   Simple template engine.\nphpunit/php-timer                 1.0.3   Utility class for timing\nphpunit/php-token-stream          1.1.4   Wrapper around PHP's tokenizer extension.\nphpunit/phpunit                   4.4.0   The PHP Unit Testing framework.\nphpunit/phpunit-mock-objects      2.3.0   Mock Object library for PHPUnit\npsr/log                           1.0.0   Common interface for logging libraries\nsebastian/comparator              1.0.0   Provides the functionality to compare PHP values for equality\nsebastian/diff                    1.1.0   Diff implementation\nsebastian/environment             1.1.0   Provides functionality to handle HHVM/PHP environments\nsebastian/exporter                1.0.0   Provides the functionality to export PHP variables for visualization\nsebastian/global-state            1.0.0   Snapshotting of global state\nsebastian/version                 1.0.0   Library that helps with managing the version number of Git-hosted PHP projects\nsensio/distribution-bundle        v2.3.0  The base bundle for the Symfony Distributions\nsensio/framework-extra-bundle     v3.0.2  This bundle provides a way to configure your controllers with annotations\nsymfony/phpunit-bridge            v2.7.0  Symfony PHPUnit Bridge\nsymfony/symfony                   v2.6.6  The Symfony PHP framework\ntwig/extensions                   v1.0.0  Common additional features for Twig that do not directly belong in core\ntwig/twig                         v1.14.2 Twig, the flexible, fast, and secure template language for PHP\n3) phpunit\n```\nPHPUnit 5.1.3 by Sebastian Bergmann and contributors.\nSS.............................................................  63 / 290 ( 21%)\n............................................................... 126 / 290 ( 43%)\n............................................................... 189 / 290 ( 65%)\n............................................................... 252 / 290 ( 86%)\n......................................                          290 / 290 (100%)\nTime: 30.57 seconds, Memory: 605.25Mb\nOK, but incomplete, skipped, or risky tests!\nTests: 290, Assertions: 489, Skipped: 2.\n``\n. Regarding the failing tests with--prefer-lowest` I can't reproduce them :confused:\n1) composer update --prefer-lowest\n2) composer show -i\ndoctrine/annotations              v1.0    Docblock Annotations Parser\ndoctrine/cache                    v1.0    Caching library offering an object-oriented API for many cache backends\ndoctrine/collections              v1.0    Collections Abstraction library\ndoctrine/common                   v2.4.0  Common Library for Doctrine projects\ndoctrine/data-fixtures            v1.0.0  Data Fixtures for all Doctrine Object Managers\ndoctrine/dbal                     2.3.3   Database Abstraction Layer\ndoctrine/doctrine-bundle          v1.2.0  Symfony DoctrineBundle\ndoctrine/doctrine-fixtures-bundle v2.2.0  Symfony DoctrineFixturesBundle\ndoctrine/inflector                v1.0    Common String Manipulations with regard to casing and singular/plural rules.\ndoctrine/instantiator             1.0.1   A small, lightweight utility to instantiate objects in PHP without invoking their constructors\ndoctrine/lexer                    v1.0    Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.\ndoctrine/orm                      2.3.0   Object-Relational-Mapper for PHP\njdorn/sql-formatter               v1.1.0  a PHP SQL highlighting library\npagerfanta/pagerfanta             v1.0.1  Pagination for PHP 5.3\nphpunit/php-code-coverage         2.0.0   Library that provides collection, processing, and rendering functionality for PHP code coverage information.\nphpunit/php-file-iterator         1.3.2   FilterIterator implementation that filters files based on a list of suffixes.\nphpunit/php-text-template         1.2.0   Simple template engine.\nphpunit/php-timer                 1.0.3   Utility class for timing\nphpunit/php-token-stream          1.1.4   Wrapper around PHP's tokenizer extension.\nphpunit/phpunit                   4.4.0   The PHP Unit Testing framework.\nphpunit/phpunit-mock-objects      2.3.0   Mock Object library for PHPUnit\npsr/log                           1.0.0   Common interface for logging libraries\nsebastian/comparator              1.0.0   Provides the functionality to compare PHP values for equality\nsebastian/diff                    1.1.0   Diff implementation\nsebastian/environment             1.1.0   Provides functionality to handle HHVM/PHP environments\nsebastian/exporter                1.0.0   Provides the functionality to export PHP variables for visualization\nsebastian/global-state            1.0.0   Snapshotting of global state\nsebastian/version                 1.0.0   Library that helps with managing the version number of Git-hosted PHP projects\nsensio/distribution-bundle        v2.3.0  The base bundle for the Symfony Distributions\nsensio/framework-extra-bundle     v3.0.2  This bundle provides a way to configure your controllers with annotations\nsymfony/phpunit-bridge            v2.7.0  Symfony PHPUnit Bridge\nsymfony/symfony                   v2.6.6  The Symfony PHP framework\ntwig/extensions                   v1.0.0  Common additional features for Twig that do not directly belong in core\ntwig/twig                         v1.14.2 Twig, the flexible, fast, and secure template language for PHP\n3) phpunit\n```\nPHPUnit 5.1.3 by Sebastian Bergmann and contributors.\nSS.............................................................  63 / 290 ( 21%)\n............................................................... 126 / 290 ( 43%)\n............................................................... 189 / 290 ( 65%)\n............................................................... 252 / 290 ( 86%)\n......................................                          290 / 290 (100%)\nTime: 30.57 seconds, Memory: 605.25Mb\nOK, but incomplete, skipped, or risky tests!\nTests: 290, Assertions: 489, Skipped: 2.\n``\n. @ogizanagi OK, after a$ composer clear-cacheandrm -fr vendor/, Composer finally installed the right dependencies with--prefer-lowest. I can now reproduce the failing tests.\n. @ogizanagi OK, after a$ composer clear-cacheandrm -fr vendor/, Composer finally installed the right dependencies with--prefer-lowest`. I can now reproduce the failing tests.\n. Updates on the failing tests.\nIf I make this change, everything works again:\ndiff\n-        \"symfony/config\"                : \"~2.3|~3.0\",\n-        \"symfony/dependency-injection\"  : \"~2.3|~3.0\",\n-        \"symfony/doctrine-bridge\"       : \"~2.3|~3.0\",\n-        \"symfony/event-dispatcher\"      : \"~2.3|~3.0\",\n-        \"symfony/form\"                  : \"~2.3|~3.0\",\n-        \"symfony/framework-bundle\"      : \"~2.3|~3.0\",\n-        \"symfony/http-foundation\"       : \"~2.3|~3.0\",\n-        \"symfony/http-kernel\"           : \"~2.3|~3.0\",\n-        \"symfony/property-access\"       : \"~2.3|~3.0\",\n+        \"symfony/config\"                : \"~2.3.36|~3.0\",\n+        \"symfony/dependency-injection\"  : \"~2.3.36|~3.0\",\n+        \"symfony/doctrine-bridge\"       : \"~2.3.36|~3.0\",\n+        \"symfony/event-dispatcher\"      : \"~2.3.36|~3.0\",\n+        \"symfony/form\"                  : \"~2.3.36|~3.0\",\n+        \"symfony/framework-bundle\"      : \"~2.3.36|~3.0\",\n+        \"symfony/http-foundation\"       : \"~2.3.36|~3.0\",\n+        \"symfony/http-kernel\"           : \"~2.3.36|~3.0\",\n+        \"symfony/property-access\"       : \"~2.3.36|~3.0\",\nThe question is: which is the 2.3.x version that we should use to fix the tests? It must be higher than 2.3.0 and probably way lower than 2.3.36 to allow apps not updated to the latest version. Is there any empiric way of getting that magic 2.3 version?\nPS: I know that composer.json versions should be something like \"~2.3,>=2.3.36|~3.0,\" but I'm doing quick tests.\n. Updates on the failing tests.\nIf I make this change, everything works again:\ndiff\n-        \"symfony/config\"                : \"~2.3|~3.0\",\n-        \"symfony/dependency-injection\"  : \"~2.3|~3.0\",\n-        \"symfony/doctrine-bridge\"       : \"~2.3|~3.0\",\n-        \"symfony/event-dispatcher\"      : \"~2.3|~3.0\",\n-        \"symfony/form\"                  : \"~2.3|~3.0\",\n-        \"symfony/framework-bundle\"      : \"~2.3|~3.0\",\n-        \"symfony/http-foundation\"       : \"~2.3|~3.0\",\n-        \"symfony/http-kernel\"           : \"~2.3|~3.0\",\n-        \"symfony/property-access\"       : \"~2.3|~3.0\",\n+        \"symfony/config\"                : \"~2.3.36|~3.0\",\n+        \"symfony/dependency-injection\"  : \"~2.3.36|~3.0\",\n+        \"symfony/doctrine-bridge\"       : \"~2.3.36|~3.0\",\n+        \"symfony/event-dispatcher\"      : \"~2.3.36|~3.0\",\n+        \"symfony/form\"                  : \"~2.3.36|~3.0\",\n+        \"symfony/framework-bundle\"      : \"~2.3.36|~3.0\",\n+        \"symfony/http-foundation\"       : \"~2.3.36|~3.0\",\n+        \"symfony/http-kernel\"           : \"~2.3.36|~3.0\",\n+        \"symfony/property-access\"       : \"~2.3.36|~3.0\",\nThe question is: which is the 2.3.x version that we should use to fix the tests? It must be higher than 2.3.0 and probably way lower than 2.3.36 to allow apps not updated to the latest version. Is there any empiric way of getting that magic 2.3 version?\nPS: I know that composer.json versions should be something like \"~2.3,>=2.3.36|~3.0,\" but I'm doing quick tests.\n. @ogizanagi this is for instance the first error I get with 2.3.0:\n1) JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\BackendErrorsTest::testUndefinedEntityError\nFailed asserting that '    The file \"/Users/javier/sf/EasyAdminBundle/Tests/Fixtures/App/config/routing_base.yml\" must contain a YAML array. (500 Internal Server Error)\n' contains \"Error: The \"InexistentEntity\" entity is not defined in the configuration of your backend. Solution: Open your \"app/config/config.yml\" file and add the \"InexistentEntity\" entity to the list of entities managed by EasyAdmin.\".\nAnd it's fixed if I change this (!!!!!!!!??????):\ndiff\n// Symfony\\Component\\Routing\\Loader\\YamlFileLoader.php\n-$config = Yaml::parse($path);\n+$config = Yaml::parse(file_get_contents($path));\n. @ogizanagi this is for instance the first error I get with 2.3.0:\n1) JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\BackendErrorsTest::testUndefinedEntityError\nFailed asserting that '    The file \"/Users/javier/sf/EasyAdminBundle/Tests/Fixtures/App/config/routing_base.yml\" must contain a YAML array. (500 Internal Server Error)\n' contains \"Error: The \"InexistentEntity\" entity is not defined in the configuration of your backend. Solution: Open your \"app/config/config.yml\" file and add the \"InexistentEntity\" entity to the list of entities managed by EasyAdmin.\".\nAnd it's fixed if I change this (!!!!!!!!??????):\ndiff\n// Symfony\\Component\\Routing\\Loader\\YamlFileLoader.php\n-$config = Yaml::parse($path);\n+$config = Yaml::parse(file_get_contents($path));\n. @ogizanagi thanks for investigating this issue. I've just updated the dependencies and let's see if Travis becomes green again.\nPreviously I looked at one of the issues linked from the PR that you mention ... but it only talked about having both twig and php engines enabled at the same time and that producing errors. I'm still not sure about the exact error cause of this.\n. @ogizanagi thanks for investigating this issue. I've just updated the dependencies and let's see if Travis becomes green again.\nPreviously I looked at one of the issues linked from the PR that you mention ... but it only talked about having both twig and php engines enabled at the same time and that producing errors. I'm still not sure about the exact error cause of this.\n. @ogizanagi as usual, amazing detective work!! :bow: :bow:  Thanks!  Changes done. Let's see if Travis is happy again.\n. @ogizanagi as usual, amazing detective work!! :bow: :bow:  Thanks!  Changes done. Let's see if Travis is happy again.\n. For reference purposes, this is the evolution of the \"code quality\" stats after this merge according to Scrutinizer CI:\n\n. For reference purposes, this is the evolution of the \"code quality\" stats after this merge according to Scrutinizer CI:\n\n. Thanks for these tweaks. They all make sense. Despite my previous comments, I think it makes sense to make the strtolower() to the entity name to avoid ugly CSS or ID attributes. Thanks!\n. Closing it as fixed by #745.\n. Closing it as fixed by #745.\n. I have almost the exact same config in my backends and it works. At first sight, the only strange thing is the \"pipe\" at the end of the tag list. In your image we can see | after the articles tag. Do you know where that \"pipe\" comes from?\n. I have almost the exact same config in my backends and it works. At first sight, the only strange thing is the \"pipe\" at the end of the tag list. In your image we can see | after the articles tag. Do you know where that \"pipe\" comes from?\n. I use the Select2 widget in several EasyAdmin backends and I don't have any problem with it. We may need more info about the error. Can you please share some details about the constraint associated with the Cette valeur n'est pas valide error message?\n. Let's close this old issue because it doesn't look like a bug of this bundle.\n. Everything is explained in this tutorial including the optional form themes. Cheers!\n. Everything is explained in this tutorial including the optional form themes. Cheers!\n. I agree with these changes. We are facing a similar issue in Symfony 2.8: the version of Doctrine packaged in the standard edition of Symfony 2.8 requires PHP 5.5, which makes Symfony 2.8 require 5.5 even if it works with PHP 5.3.\n. I agree with these changes. We are facing a similar issue in Symfony 2.8: the version of Doctrine packaged in the standard edition of Symfony 2.8 requires PHP 5.5, which makes Symfony 2.8 require 5.5 even if it works with PHP 5.3.\n. @xabbuh you are right about the composer.lock. But even if that case, don't you think that the default version we define in composer.json should meet our desired requirements (PHP 5.3 support)? I find this  very reasonable, but I'm probably missing something because of my poor Composer skills.\n. @xabbuh you are right about the composer.lock. But even if that case, don't you think that the default version we define in composer.json should meet our desired requirements (PHP 5.3 support)? I find this  very reasonable, but I'm probably missing something because of my poor Composer skills.\n. Yes. But if I understand this change, it tells Composer to use the most modern Doctrine versions which are still compatible with PHP 5.3. That's what I think we want. If the user has a newer PHP version, Composer will go up in the version numbers.\n. Yes. But if I understand this change, it tells Composer to use the most modern Doctrine versions which are still compatible with PHP 5.3. That's what I think we want. If the user has a newer PHP version, Composer will go up in the version numbers.\n. @xabbuh you are right! I read ~2.3.0 as ~2.3. Indeed the new version is more restictive and people with modern PHP installations wouldn't get modern Doctrine versions.\n. @reypm thank you very much! Not only you reported this bug originally but now you also provide the fix. Thanks!\n. @reypm thank you very much! Not only you reported this bug originally but now you also provide the fix. Thanks!\n. You can customize errors by entities too: app/Resources/views/easy_admin/User/exception.html.twig\n. You can customize errors by entities too: app/Resources/views/easy_admin/User/exception.html.twig\n. I think I found the issue that was causing this error. It happened to me during the redesign of this bundle. The fix was to add these lines in the exception listener. Since this change is included in the latest stable version of the bundle, could you please try again and see if the error is gone? Thanks!\n. Thanks!\nThat's right. The border-top and the paddings should be applied to header-security element and be removed from the header-footer. The idea is that when the user is logged in, the result should be the same as of now. If the user is not logged in, nothing should be displayed.\n. @ogizanagi nice! That was a fast bug fix. Thank you.\n. There is no need to close this pull request.\n. OK I'll close it so you can create a branch for the change. Just do a git checkout -b fix_749, do your changes and the git commit -a and git push and we're done :)\n. I've tested it locally and it works as expected. Thanks @reypm for this contribution!\n. I'm closing this because nobody volunteered to update this translation.\n. Fixed by #803.\n. Fixed in #768.\n. Fixed by #782.\n. Fixed by #785.\n. @rubengc now it's possible to split the backend configuration in any number of files. You can define for instance each entity config in a separate file. This feature will be available in the next stable release, to be published soon.\n. I'll improve the docs to show a real example. In your case, the problem is that easyadmin/entities/category.yml should be:\nyaml\neasy_admin:\n    entities:\n        Category:\n            # ...\ninstead of:\nyaml\nCategory:\n    # ...\n. @reypm see #781 for the new tutorial added about this.\n. @julienbernier I've just merged the fix provided by @ogizanagi. This should probably fix your issue. The fix will be available in the next stable release, to be published soon.\n. @ogizanagi no worries! Your original suggestion was a great start to solve this issue. It was my fault for not fully understanding how Symfony Config works for array and variable nodes.\n. Yes! It works perfectly now:\n\n. @ogizanagi merged! Thanks a lot for providing this fix.\n. @peterkokot thanks for this contribution. It's nice to see that you not only do an impressive translation work for Symfony but also for some of its bundles! Hvala lepa\n. @fatihkahveci thank you very much for this contribution. Te\u015fekk\u00fcr ederim\n. Yes. I've almost finished the integration myself. Expect a PR soon.\n. @rubengc I'm sorry. The good thing is that when I submit my changes ... you can review them easily and tell me what I forgot or did wrong. Thanks!\n. @rubengc great detective work! Now that we know the cause, let's see if we can fix it.\n. I'm closing this old issue as probably fixed by #1804. Thanks!. I have a question about how to name and create Twig blocks which are easy to override.\nIf you have this code:\nhtml\n<div class=\"global-actions\">\n    <div class=\"row\">\n        ...\n    </div>\n</div>\nWhich Twig blocks would you create for EasyAdmin?\nOption 1\ntwig\n<div class=\"global-actions\">\n    <div class=\"row\">\n        {% block global_actions %}{% endblock %}\n    </div>\n</div>\nOption 2\ntwig\n{% block global_actions %}\n<div class=\"global-actions\">\n    <div class=\"row\">\n        ...\n    </div>\n</div>\n{% endblock %}\nOption 3\ntwig\n{% block global_actions %}\n<div class=\"global-actions\">\n    <div class=\"row\">\n        {% block global_actions_inner %}{% endblock %}\n    </div>\n</div>\n{% endblock %}\nOption 4\ntwig\n{% block global_actions_wrapper %}\n<div class=\"global-actions\">\n    <div class=\"row\">\n        {% block global_actions %}{% endblock %}\n    </div>\n</div>\n{% endblock %}\n. Update: I've almost finished the redesign. Here it is a \"sneak peek\" of the new default look of EasyAdmin:\nDesktop - List\n\nDesktop - Show\n\nMobile\n| List | Show |\n| --- | --- |\n|  |  |\n. I've just pushed the last changes. Now this is ready for review (except the tests, which I haven't fixed yet).\nSome screenshots of the dark/light theme in desktop/mobile for list/form views:\n\n\n\n\n. Tests are fixed. Thanks to our test suite, we can assure that these are the only relevant HTML/CSS changes that could break a heavily customized backend:\n| Before | After |\n| --- | --- |\n| #header-menu | .sidebar-menu |\n| form#content-search | .action-search form |\n| #content-actions | .global-actions |\nIt's a matter of changing 3 selectors, so I'm happy with the BC breaks.\nBesides, the name of the main CSS and JS files have changed:\n/admin/_css/admin.css -> /admin/_css/easyadmin.css\n/js/admin.js          -> /js/easyadmin.js\n. Tests are fixed. Thanks to our test suite, we can assure that these are the only relevant HTML/CSS changes that could break a heavily customized backend:\n| Before | After |\n| --- | --- |\n| #header-menu | .sidebar-menu |\n| form#content-search | .action-search form |\n| #content-actions | .global-actions |\nIt's a matter of changing 3 selectors, so I'm happy with the BC breaks.\nBesides, the name of the main CSS and JS files have changed:\n/admin/_css/admin.css -> /admin/_css/easyadmin.css\n/js/admin.js          -> /js/easyadmin.js\n. @ogizanagi I don't understand the first part of the question:\n\nShouldn't the search bar be aligned with title (in desktop version only)\n\nAbout the second part:\n\n... but also avoid the gap between the search bar and the add btn)?\n\nThis was done on purpose for three reasons. 1) When the search form and the button don't show a gap in the middle, the button looks like the Search button. I found myself several times clicking on that button when all I wanted is to search. 2) Removing the gap would mean to make the search input huge, and that usually looks wrong. 3) The gap allows to add more buttons to the \"global actions\" element, which is something that we'll allow in the future.\n. @ogizanagi I don't understand the first part of the question:\n\nShouldn't the search bar be aligned with title (in desktop version only)\n\nAbout the second part:\n\n... but also avoid the gap between the search bar and the add btn)?\n\nThis was done on purpose for three reasons. 1) When the search form and the button don't show a gap in the middle, the button looks like the Search button. I found myself several times clicking on that button when all I wanted is to search. 2) Removing the gap would mean to make the search input huge, and that usually looks wrong. 3) The gap allows to add more buttons to the \"global actions\" element, which is something that we'll allow in the future.\n. @ogizanagi I now understand your comment and I agree with you. I've pushed new changes.\nDesktop\n\nTablet\n\nMobile\n\n. @reypm my intention is to release this as soon as possible. I'm waiting a bit longer in case more people want to review the changes and provide feedback.\n. I've released a new version of the bundle (https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.10.3). The next version will only include this new theme, so this is the last opportunity to test and review. Thanks!  (And the version after the next one, will include the new feature to define custom menus).\n. This change has been merged and the new 1.10.4 version has been published. Enjoy! (and please, report bugs).\n. @Jjourde thanks for fixing this bug. I totally missed it.\n. First, thank you for this suggestion. I don't know if you are aware of it, but we already have a chapter about Tips & Tricks in the documentation.\nRegarding the tip you mentioned, I prefer not to include it. The reason is that it's not specific to EasyAdmin but generic for any HTML form. Anyway, if you have other ideas to add tips & tricks related to EasyAdmin, just ask and we'll try to include it. Thanks!\n. @amit0rana you are right ... but @SebTM has a method that generates the list of options dynamically. In this case, you must create your own AdminController (which is very easy to do) and then override the method that creates the form for your entity:\n``` php\nclass AdminController extends BaseAdminController\n{\n    public function createEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    // get the list of choices from your application and add the form field for them\n    $formBuilder->add(...);\n\n    return $formBuilder;\n}\n\n}\n```\n. Thanks a lot for raising this concern and for the detailed explanation!\nIt's true that you asked a lot of questions ... but I consider them easy to respond. The new design should behave as the old one, so I consider this a bug. We should add the fixed option and we should include the slimscroll plugin too.\n. Awesome! You were truly fast and this PR is great. Thank you for this ... and for the detailed explanation of the related issue.\n. Seems very reasonable. I'll do. Thanks for opening this issue.\n. Closing is as fixed because we recently refactored how actions are handled internally. Now the list action is treated like any other action, so you can apply the css_class option to it. This will be available after the next version release.\n. I can confirm this issue when the screen is very small (but not enough to activate the mobile design) or there are too many columns:\n\nIf we activate the responsive tables feature of AdminLTE, we get this:\n\nAnd this is the feature in action:\n\n. There is no need to enable this yourself. I'll make the change so this is the default behavior. But first I want to finish the new custom menus feature, which is almost done.\n. Closing it as fixed.\n. Closing it as fixed.\n. Yes ... I suffered this problem too but I didn't know how to solve it and I was in a rush to release the new theme :)  I need to investigate this further.\n. @ogizanagi thanks for fixing this annoying bug. I can't think of a better alternative, so this is merged now! Thanks.\n. For the menu you should write:\ntwig\n{% block main_menu_wrapper '' %}\nAnd for the top bar that displays the information about the user:\ntwig\n{% block user_menu '' %}\nIn any case, my recommendation would be to use the same design as the official Login page for the AdminLTE 2 template. See: https://almsaeedstudio.com/themes/AdminLTE/pages/examples/login.html\n. As you can see in the HTML code of the official template, the login page only contains the login form in the entire <body> element, so you must \"destroy\" everything else. In other words, you must do something like this:\n``` twig\n{# app/Resources/FOSUserBundle/views/Security/login.html.twig #}\n{% extends 'EasyAdminBundle:default:layout.html.twig' %}\n{% block wrapper %}\n    {% for type, messages in app.session.flashBag.all %}\n        {% for message in messages %}\n            \n                {{ message|trans({}, 'FOSUserBundle') }}\n            \n        {% endfor %}\n    {% endfor %}\n{% block fos_user_content %}\n    /# here goes the content\n{% endblock fos_user_content %}\n\n{% endblock %\n```\n. @anboto thanks you very much for updating the Basque translation and for fixing the Spanish errors (which is embarrassing for me!) eskerrik asko\n. Thanks for suggesting this feature. Indeed it's in our roadmap ... but for the long future. It won't be added soon because we first need to stabilize all the new features that we added recently and we need to improve/refactor/rethink the search feature, which is closely related to this CSV/Excel export.\nSo, for now I'm closing this issue, but I've added the Future + Feature labels to not loose track of it.\n. @gabiudrescu thanks a lot for offering yourself! Sadly we need first to improve and make more robust the part about searching. And that will take some time. Anyway, there will be more opportunities in the near future to work on this feature. Cheers!\n. This feature is not built-in, but it's possible to do it yourself.\n1) Create a custom template to display the association field (as explained here):\n``` twig\n{# app/Resources/views/easy_admin/field_association.html.twig #}\n{# HERE you put your code to display the link #}\n View xxx \n```\n2) In the template above I've created a link to a custom action in easyadmin (you should follow these instructions. But you can also link to any controller of your application. Just pass the entity name and the id to be able to look for the associations.\n3) You must create a custom template to display the list of associated entities. In your custom action or controller:\n``` php\n// look for the related entities with the given information\n$entities = ...;\nreturn $this->render('admin/my_custom_template.html.twig', array(...));\n```\nAnd the template:\n``` twig\n{# app/Resources/views/admin/my_custom_template.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block content_title %} ... {% endblock %}\n{% block main %}\n    ... your code to display the associated entities ...\n{% endblock %}\n```\n. @amit0rana awesome!! Your solution is much better than my proposal. Thanks for sharing it. In the near term we'll improve the documentation related to thing like this (customization of methods, templates, etc.)\n. @SebTM before answering your questions, keep in mind that if your backends are very complex, you probably need to use SonataAdminBundle ... so let's not forget about it.\n\n\nCustom menu entries: there is a pending pull request to add this. It's finished, so you can review it if you want: #784. The documentation of the feature is completed, so maybe you can read it to see if it fulfills your needs: How to Customize the Main Menu\nMatch custom routes: there is no official way, but this should work: define /admin/manage/user in a YAML config file and use this redirect technique to redirect to the easyadmin path with the appropriate action and entity params.\nSecuring routes: this is not possible, but it's in our long-term roadmap. Here are more details. If you make an extensive use of roles/security, you should probably keep using Sonata. In EasyAdmin you could solve this issue listening to the events we dispatch and/or customizing the AdminController.\nWrong labels for forms: I'm afraid I don't fully understand the problem. Maybe a screenshot showing the problem for this form field?\nCustom sort field or direction: yes, with the new menu feature that I mentioned in question 1.\nDesign issues for toggles: although you provided a screenshot, I don't fully understand the issue.\nNew global action in list view: there is no official support for this, but you can do it overriding the new_action block of the list.html.twig template:\n\n``` twig\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{# your button before the \"Add XXX\" button #}\n{% block new_action %}\n    YOUR BUTTON HERE\n{{ parent() }}\n\n{% endblock %}\n{# your button after the \"Add XXX\" button #}\n{% block new_action %}\n    {{ parent() }}\nYOUR BUTTON HERE\n\n{% endblock %}\n```\n1. Tutorial for FOSUserBundle: not yet, but there is an issue where I'm asking for help to the community so I can write the tutorial. See https://github.com/javiereguiluz/EasyAdminBundle/issues/714\n. > I think this is wrong: default action for an entity should be configured in the entity itself, not the menu. A simple default_action might be sufficient, with an enum to all EasyAdmin actions.\nI don't want to provide different ways of doing the same thing. That's a big mistake I did in the past :(\n. @Pierstoval the problem to solve is: \"when I click on this menu item, I want the listing sorted differently\". That's why it's configured in design.menu and not in the entity.\n. Closing it because questions have been replied and new features have been added.\n. Thanks for proposing this feature!\nFor now, this feature is not available. It's in our long-term roadmap, so it will take a while before we implement it. The reason is that it's very hard to do it right.\nThese are the alternatives that I can give you:\n1) If hiding things is to make it easier to use, you can use a CSS trick. Add the user role as a CSS class in the body of the layout:\ntwig\n{% block body_class %}{{ app.user.roles|default|([])join(' ')|lower }}{% endblock %}\nThen, in your custom CSS you just hide the parts you don't want those users to see:\ntwig\nbody.role_user .sidebar-menu ... { display: none; }\n2) If you really want to remove those elements from the page, you'll have to override the default templates. Luckily, after the last big redesign, the code of the templates will be stable and your maintenance work will be small.\nIf you must do a heavy use of security and roles, another alternative is to forget about EasyAdmin for that backend and use Sonata instead.\nI'm closing this issue because we are ware of this feature and we labeled it with future + feature so we don't loose track of it. Thanks!\n. This line:\ntwig\n{% block body_class %}{{ app.user.roles|default|([])join('')|lower }}{% endblock %}\nshould be:\ntwig\n{% block body_class %}{{ app.user.roles|default([])|join(' ')|lower }}{% endblock %}\nAnyway, keep in mind that this trick is just to hide things in an unsecure way. If you need real security, you can't use this.\n. This code app.user.roles|default([])|join(' ')|lower should make your <body> look like this:\nhtml\n<body ... class=\"... role_admin role_user\" ... >\n. I haven't tested this, but you could start as follows:\n- Add a new role (or roles to support several) to everything in EasyAdmin: menu items, entities, properties.\n- Since we are very liberal regarding configuration, this role option should survive our config processing. So you have the role available in every template.\n- Redefine every relevant template to show/hide things regarding the user role.\n\nQuick example for the menu.html.twig template:\nBEFORE:\ntwig\n<ul class=\"sidebar-menu\">\n    {% block main_menu %}\n        {% for item in easyadmin_config('design.menu') %}\n            <li class=\"\">\n                {{ helper.render_menu_item(item) }}\n        ...\nAFTER:\ntwig\n<ul class=\"sidebar-menu\">\n    {% block main_menu %}\n        {% for item in easyadmin_config('design.menu') if item.role in app.user.roles %}\n            <li class=\"\">\n                {{ helper.render_menu_item(item) }}\n        ...\n. I haven't tested this, but you could start as follows:\n- Add a new role (or roles to support several) to everything in EasyAdmin: menu items, entities, properties.\n- Since we are very liberal regarding configuration, this role option should survive our config processing. So you have the role available in every template.\n- Redefine every relevant template to show/hide things regarding the user role.\n\nQuick example for the menu.html.twig template:\nBEFORE:\ntwig\n<ul class=\"sidebar-menu\">\n    {% block main_menu %}\n        {% for item in easyadmin_config('design.menu') %}\n            <li class=\"\">\n                {{ helper.render_menu_item(item) }}\n        ...\nAFTER:\ntwig\n<ul class=\"sidebar-menu\">\n    {% block main_menu %}\n        {% for item in easyadmin_config('design.menu') if item.role in app.user.roles %}\n            <li class=\"\">\n                {{ helper.render_menu_item(item) }}\n        ...\n. I still think that if you make a heavy use of security/roles ... you should use Sonata or a custom development. Using EasyAdmin may hurt you in this case and make everything more complicated than it should be.\n. I still think that if you make a heavy use of security/roles ... you should use Sonata or a custom development. Using EasyAdmin may hurt you in this case and make everything more complicated than it should be.\n. @crossplatformdev I don't recommend you to do that. EasyAdmin provides its own overriding mechanism which is easier and more powerful than the default bundle overriding mechanism.\n. @crossplatformdev I don't recommend you to do that. EasyAdmin provides its own overriding mechanism which is easier and more powerful than the default bundle overriding mechanism.\n. > It would be nice to have a way to override templates globally, apart than per entity.\nThere are four ways to override templates: global or per entity and config-based or convention-based. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#advanced-design-configuration  and here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#advanced-design-configuration\n. > It would be nice to have a way to override templates globally, apart than per entity.\nThere are four ways to override templates: global or per entity and config-based or convention-based. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#advanced-design-configuration  and here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#advanced-design-configuration\n. @zkkan currently there is no official way to implement that feature with this bundle. If you need this feature and must develop your project soon, the only solution is to use instead this other bundle: SonataAdminBundle.\nIn any case, it's going to take us a bit before we complete this feature, so I'm going to lock this issue to prevent people adding more comments and asking about this. Thanks!. We intend to implement this feature sooner that later on EasyAdmin. For those needed it now, you can take a look at this community bundle that provides more features to EasyAdmin: https://github.com/alterphp/EasyAdminExtensionBundle#define-access-permissions. We intend to implement this feature sooner that later on EasyAdmin. For those needed it now, you can take a look at this community bundle that provides more features to EasyAdmin: https://github.com/alterphp/EasyAdminExtensionBundle#define-access-permissions. This feature is now implemented thanks to the new \"custom menu\" features, which lets you configure the sorting field and direction. See https://github.com/javiereguiluz/EasyAdminBundle/pull/784. It will be available in the next EasyAdmin stable version.\n. @reypm good catch! Thanks for reporting this eror. Hopefully it will be fixed by #811. If tests pass, I'll publish a new bugfix version right away.\n. I did a quick test in 3a67a4c to add links. It works, but when I have some time I'd like to improve it:\n\n. @Pierstoval but this is a common need for most people, right? I prefer to provided a built-in feature for that :smile: \n. The code has been refactored to tackle the issues discussed by @yceruto.\n. I've finished this feature and (if test pass) I'll merge it soon. Last chance to review. Thanks!\n. I was thinking about removing that \"About Us\" chapter ... so I think is a good idea to create the ROADMAP.md file for long-term planning. The short-term will keep being the GitHub issues page.\n. The problem I see with Wikis is that if forces us to split contents into repository and wikis. Since we'd only add one page in the wiki (the roadmap), let's stick for now with regular GitHub pages.\nI've just created the ROADMAP.md file so I'm closing this issue as \"fixed\". Thanks!\n. The problem I see with Wikis is that if forces us to split contents into repository and wikis. Since we'd only add one page in the wiki (the roadmap), let's stick for now with regular GitHub pages.\nI've just created the ROADMAP.md file so I'm closing this issue as \"fixed\". Thanks!\n. Yes, for now it's only for Doctrine ORM. In the (far) future we may consider changing this, but for now we can't consider this feature. I'm sorry.\n. Closing it as \"fixed\". By the way, we've just added a ROADMAP.md file in the project root dir and sadly, this feature is listed in the things that we'll never implement.\n. Closing it as \"fixed\". By the way, we've just added a ROADMAP.md file in the project root dir and sadly, this feature is listed in the things that we'll never implement.\n. Yes, you are right. The latter form theme always wins. I'll improve the docs about that. \n. Anyone knows an ultra-lightweight JavaScript plugin (if possible for Bootstrap) which allows to display an image full-screen when clicking on it? Thanks!\n. Thank you all for the discussion and the recommendations. At the end I didn't use the Bootstrap Lightbox plugin because I couldn't make it work and because it's officially deprecated. I used http://noelboss.github.io/featherlight/ instead.\nThis feature is now finished and ready for review. We now have lightbox images everwhere: list, show, edit and new views!\n. Thank you all for the discussion and the recommendations. At the end I didn't use the Bootstrap Lightbox plugin because I couldn't make it work and because it's officially deprecated. I used http://noelboss.github.io/featherlight/ instead.\nThis feature is now finished and ready for review. We now have lightbox images everwhere: list, show, edit and new views!\n. My guess is that loading your bundle after EasyAdmin bundle could work. If not, I'll update the docs. Instead of Compiler Passes, there might be another option: http://symfony.com/doc/current/cookbook/bundles/prepend_extension.html\n. My guess is that loading your bundle after EasyAdmin bundle could work. If not, I'll update the docs. Instead of Compiler Passes, there might be another option: http://symfony.com/doc/current/cookbook/bundles/prepend_extension.html\n. @ogizanagi I love it!! Thanks for the fix. Done!\n. @ogizanagi I love it!! Thanks for the fix. Done!\n. @unexge thanks a lot for this contribution. This was definitely in my list of things to fix. It feels unnatural to lose the collapsed/expanded state of the menu in each page load. I'll wait a bit before merging this so others can review and test if they want.\n. @unexge thanks a lot for this contribution. This was definitely in my list of things to fix. It feels unnatural to lose the collapsed/expanded state of the menu in each page load. I'll wait a bit before merging this so others can review and test if they want.\n. I can confirm those issues. In https://github.com/javiereguiluz/EasyAdminBundle/commit/d8e71fcc218a58851fbabd67dee3b070d88ed150 I implemented this feature with localStorage. The result is this annoying animation when the page loads:\n\nThe solution based on cookies works as expected, so I guess we can safely merge it. Thanks @unexge.\n. I can confirm those issues. In https://github.com/javiereguiluz/EasyAdminBundle/commit/d8e71fcc218a58851fbabd67dee3b070d88ed150 I implemented this feature with localStorage. The result is this annoying animation when the page loads:\n\nThe solution based on cookies works as expected, so I guess we can safely merge it. Thanks @unexge.\n. @unexge since we barely use the cookies.js features, in #827 I propose to remove that library and keep the only two methods that we use.\nThat's why I'm closing this in favor of the other pull request. Of course I kept all your original commit so you get full credit of your work. If you don't agree with this, please tell me. Thanks!\n. @unexge since we barely use the cookies.js features, in #827 I propose to remove that library and keep the only two methods that we use.\nThat's why I'm closing this in favor of the other pull request. Of course I kept all your original commit so you get full credit of your work. If you don't agree with this, please tell me. Thanks!\n. The reason is that the property is treated as a numeric value. You have two options to solve this:\n- Use the format option in that property to remove decimals (see https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/format-date-number.md#customizing-numeric-properties)\n- Set the type: raw to that property, so their value is rendered unmodified (see \"types\" in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-properties-appearance)\n. The reason is that the property is treated as a numeric value. You have two options to solve this:\n- Use the format option in that property to remove decimals (see https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/format-date-number.md#customizing-numeric-properties)\n- Set the type: raw to that property, so their value is rendered unmodified (see \"types\" in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-the-properties-appearance)\n. I'm closing this as \"fixed\". We cannot provide the exact solution to this problem, but it should be definitely doable.\nYou just need to \"forget\" about EasyAdmin to define this form and do it entirely with Symfony. Then, you define a Data Transformer and attach it to this form. Finally, you override the creation of the form in EasyAdmin as explained in this section.\n. I'm closing this issue as \"won't fix\" ... but if someone sets up this multiple upload thing with VichUploader bundle and explains the process to me, I will gladly improve the How to Upload Files and Images tutorial. Thanks!\n. @rubengc thanks for proposing this fix. I agree that this is a bug.\nHowever, I'm closing this in favor of #832, which includes a fix for this among other things. Given how we manage action configuration, the only reliable way I found to maintain the order was to add this new method: https://github.com/javiereguiluz/EasyAdminBundle/commit/428443d65c3c3e217b86d69403b3518ac4fb0980#diff-f0b0905f7c9ca22e2e8074d152257a4dR310\n. OK. I've simplified everything as you asked.\n. I'm closing this one because it's too old. If the problem persists in newer versions of the bundle, let's create new issues. Thanks!. I'm closing this as \"won't fix\" because it's not easy at all to deal with embedded forms in a generic way. I hope you understand this decision. Thanks.\n. The \"natural\" solution would be to use Doctrine listeners. But that solution is verbose, complicated, etc. The trick I use in my backends is to create a custom AdminController and then use the following:\n``` php\nnamespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as EasyAdminController;\nclass AdminController extends EasyAdminController\n{\n    public function preUpdateEntity($entity)\n    {\n        $this->updateEntityProperties($entity);\n    }\npublic function prePersistEntity($entity)\n{\n    $this->updateEntityProperties($entity);\n\n    if (method_exists($entity, 'setCreatedAt')) {\n        $entity->setCreatedAt(new \\DateTime());\n    }\n}\n\nprivate function updateEntityProperties($entity)\n{\n    // ...\n\n    if (method_exists($entity, 'setUpdatedAt')) {\n        $entity->setUpdatedAt(new \\DateTime());\n    }\n}\n\n}\n```\n. Closing it as \"fixed\" thanks to the two alternative solutions provided.\n. I'm going to take care of 1) very soon and then I'll look the other issues. Thanks!\n. @SebTM that's right: 2) is fixed by the other PR. So I'm going to create a new issue to tackle your issue number 3.\n. @SebTM yes, about the first point, there is a fix which has already been fixed (https://github.com/javiereguiluz/EasyAdminBundle/pull/867). It will be available in the next stable release.\n. I haven't used these \"translatable entities\", but after reading a bit about them, I'd say it's \"impossible\" to manage them in an easy way with EasyAdmin. I'll leave this issue open in case someone with experience in this wants to share his/her opinions. Thanks!\n. I'm closing this issue because it seems @abdielcs explained the steps to get this problem solved. Thank you all for the discussion.\n. I'm testing this solution:\n$options['label'] = $metadata['label'];\nIt works ... but the problem is that $metadata['label'] is null. I'm trying to figure out why.\n. I'm testing this solution:\n$options['label'] = $metadata['label'];\nIt works ... but the problem is that $metadata['label'] is null. I'm trying to figure out why.\n. Closing it as fixed by #921. It will be available in the next stable release.\n. @SebTM thanks for reporting this issues!\nThe second one is easy to fix. I've created #879 for it.\nThe first one is \"impossible to fix\" because we would need to introspect all the menu items to find the matching item (if any). Luckily if you browse from list view to edit/show/new and save changes, you return to the same list view and the menu entry keeps selected.\n. Closing it as fixed by #879. It will be available in the next stable release.\n. Closing it as fixed by #879. It will be available in the next stable release.\n. @slmcncb since you closed this, I guess you know this issue was recently fixed ... but it's still only available in the master branch. I'll release a new stable version of the bundle soon.\n. Cool. In the next version of the bundle you can get rid of the label: 'action.show' thing.\n. Thanks for this improvement. I like it! I'm closing this PR in favor of #874, where I've made a minor tweak and I've added the fix in the README file too. I reused your original commit, so you'll get full credit for your work. Thanks!\n. If we are talking about a form, then this has to be solved via the Symfony Form component options. I don't know which option controls this, but from EasyAdmin point of view, you must use the type_options option:\nyaml\nDeparturePoint:\n    form:\n        fields:\n            - { property: 'city', label: 'Ciudad', type_options: { ... }  }\n. @gastoncs can't you just use the @OrderBy({\"name\" = \"ASC\"}) annotation provided by Doctrine? See http://doctrine-orm.readthedocs.org/projects/doctrine-orm/en/latest/tutorials/ordered-associations.html\n. @unexge thanks for your contribution. However, we're not sure about adding this feature yet. So while we decide on this, please don't keep working on this pull request. I'd feel terribly if I make you waste your time. Thanks for understanding it.\n. @unexge thanks for sending this proposal to improve the bundle. I appreciate the time and effort you dedicated to this ... but sadly I'm going to close it as \"won't fix\" for now. The reason is that I don't feel comfortable including this feature now. We don't allow to define \"global actions\" for the list/search views yet, so we cannot make use of this batch action feature.\nWe'll probably add this in the future, so I've labeled this with Future tag to review it once we are ready to include this.\nI feel ad closing this pull request, but I hope you understand it. Thanks!\n. The form.html.twig template was removed in version 1.8.0 (see https://github.com/javiereguiluz/EasyAdminBundle/blob/master/UPGRADE.md#upgrade-to-180-8november2015)  We now use \"pure Symfony form themes\" to customize things.\n\nThe form.html.twig template has been removed and therefore, you cannot define the easy_admin.design.templates.form to override it by your own template. If you want to customize the forms of the backend, use a proper Symfony form theme and enable it in the easy_admin.design.form_theme option.\n. @twifty thanks for your kind comments. This is definitely a problem for medium-sized backends and I want to solve it. I've been thinking about this, but I still don't know which is the best way to solve it.\n\nA temporary solution could be to use traits in your admin controller:\n``` php\nuse AppBundle\\Controller\\Admin\\UserAdmin;\nuse AppBundle\\Controller\\Admin\\ProductAdmin;\nclass AdminController extends BaseController\n{\n    use UserAdmin;\n    use ProductAdmin;\n    // ...\n}\n// ...\nnamespace AppBundle\\Controller\\Admin;\ntrait UserAdmin\n{\n    // ...\n}\n```\n. Closing it as fixed by #1185.\n. @samouraii thanks for your contribution. The changes you propose are correct ... but I prefer to not complicate this example with the distinction between Symfony 2 and 3. In #889 I propose a different solution: let's change the original example to make it compatible both with Symfony 2 and 3.\nIn any case, thanks again for your contribution.\n. @samouraii thanks for your contribution. The changes you propose are correct ... but I prefer to not complicate this example with the distinction between Symfony 2 and 3. In #889 I propose a different solution: let's change the original example to make it compatible both with Symfony 2 and 3.\nIn any case, thanks again for your contribution.\n. Just in case someone reads this closed issue: the number is appended only when necessary. You can always use your own names/alias independent from entity names:\nyaml\neasy_admin:\n    entities:\n        ProductCategory:\n            class: ProductBundle\\...\\...\\Category\n        ItemCategory:\n            class: ItemBundle\\...\\...\\Category\n. This is explained in this tutorial: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-backend-actions.md\n. @twifty don't worry for the tests. I can fix them myself. They are a bit tricky when you add a new config option because lots of YAML files must be updated.\nIn case you want to try to fix them, the trick is to add 1 line of code in this method:\n``` php\nprivate function assertConfigurationParameterMatchesExpectedValue($expectedConfigFile)\n{\n    // add the following line to update the test fixtures\n    file_put_contents($expectedConfigFile, Yaml::dump(array('easy_admin' => $container->getParameter('easyadmin.config')), 100));\n// ...\n\n}\n```\nHowever, I'm not 100% convinced about this feature yet, so please, don't dedicate much time on it. Thanks!\n. @twifty don't worry for the tests. I can fix them myself. They are a bit tricky when you add a new config option because lots of YAML files must be updated.\nIn case you want to try to fix them, the trick is to add 1 line of code in this method:\n``` php\nprivate function assertConfigurationParameterMatchesExpectedValue($expectedConfigFile)\n{\n    // add the following line to update the test fixtures\n    file_put_contents($expectedConfigFile, Yaml::dump(array('easy_admin' => $container->getParameter('easyadmin.config')), 100));\n// ...\n\n}\n```\nHowever, I'm not 100% convinced about this feature yet, so please, don't dedicate much time on it. Thanks!\n. @rubengc not yet, I'm thinking about this.\n. @rubengc not yet, I'm thinking about this.\n. @yceruto you are right! Closing it thanks to #1185.\n. @yceruto you are right! Closing it thanks to #1185.\n. Sorry, I still don't have an opinion about this.\n. Sorry, I still don't have an opinion about this.\n. I'm afraid that this feature is not implemented yet ... and it's going to take a while before including it in the bundle. If this feature is essential to your backend, I recommend you to use SonataAdminBundle instead.\nI'm closing this issue because there are other issues related with this feature and we are aware of this. Thank you!\n. I'm afraid that this feature is not implemented yet ... and it's going to take a while before including it in the bundle. If this feature is essential to your backend, I recommend you to use SonataAdminBundle instead.\nI'm closing this issue because there are other issues related with this feature and we are aware of this. Thank you!\n. This is a bug (in fact, an \"unimplemented feature) which will be solved in this pending pull request: #812\n. This is a bug (in fact, an \"unimplemented feature) which will be solved in this pending pull request: #812\n. By the way, there is a typo in one header of your table. It displays Apeido but it should be Apellido.\n. By the way, there is a typo in one header of your table. It displays Apeido but it should be Apellido.\n. Closing it as fixed by #812. It will be available in the next stable release.\n. Closing it as fixed because the massive #966 PR has been merged.\n. Thanks for fixing this translation bug. Merged! Te\u015fekk\u00fcr ederim\n. Thanks for fixing this translation bug. Merged! Te\u015fekk\u00fcr ederim\n. @TomasVotruba you are the best! :tada: :tada: :tada:  We have PHP code syntax checks again :heart_eyes:\nThe fail in this pull request is the best proof that it works like a charm:\n\n. @TomasVotruba you are the best! :tada: :tada: :tada:  We have PHP code syntax checks again :heart_eyes:\nThe fail in this pull request is the best proof that it works like a charm:\n\n. Merged! Thank you very much @TomasVotruba!\n. @DIOHz0r when the forms to manage entities are not trivial (for example when you want to display a field as a country selector) you need to \"build\" the forms to manage those entities. In your case, you should do the following:\nyaml\n    entities:\n        Estado:\n            class: AppBundle\\Entity\\Estado\n            form:\n                fields:\n                    - id\n                    - { property: 'pais', type: 'country' }\n                    - nombre\nIf you prefer to reuse your existing forms to manage entities, that's possible too. Read this chapter until the Customize the Form Used to Create New Entities section.\n. Closing it as \"fixed\". If the provided solution didn't solve your problem, please reopen this issue. Thanks!\n. The answer provided by @ogizanagi is absolutely correct ... but I want to add something.\nLots of people define the label for each field. That's correct. But, if you use the same labels again and again (think about name, title, price, createdAt, etc.) it's better to not define the label option repeatedly and let EasyAdmin display the labels as they are. Then, you define a translation file in your own language and translate each label only once. Everything is better explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/i18n.md#translate-property-labels\n. The answer provided by @ogizanagi is absolutely correct ... but I want to add something.\nLots of people define the label for each field. That's correct. But, if you use the same labels again and again (think about name, title, price, createdAt, etc.) it's better to not define the label option repeatedly and let EasyAdmin display the labels as they are. Then, you define a translation file in your own language and translate each label only once. Everything is better explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/i18n.md#translate-property-labels\n. @amit0rana you are right. Thanks for reporting this. Instead of an issue is an \"unimplemented feature\". But I agree that this is wrong and I'll add this feature anytime soon. Thanks!\n. I've created #898 to implement this feature. If you can, please test the changes. Thanks!\n. @gabiudrescu thank you very much for your contribution. I'm very sad to say this: the issue was already solved in the master branch: #863.\nI'm going to release a stable version today to avoid this kind of mistakes because of issues that have been solved.\n. I've just released the new 1.11.5 version which contains this fix. So I'm closing this pull request. Thanks!\n. My guess is that splitting configuration is working well ... but there is an issue with the AppBundle\\Entity\\Sinister class, which is used twice in the same file (using different names: Sinister and SinisterExpediented). EasyAdmin assigns different entity names automatically (Sinister and Sinister2).\nI need to look closely at this because this automatic entity renaming is causing some troubles in other places. Right now I have a work overload, but trust me I'll look into this.\n. I don't know. That's why I want to carefully review this part, make changes if needed, add more tests, etc.\n. This issue was finally fixed and it's available in the just released 1.12.0 version.\n. Closing it as fixed by #1025.\n. Closing this as \"fixed\" because the solution is probably what @javierrodriguezcuevas suggested. If you don't agree and the error persists, please reopen this issue. Thanks!\n. The main drawback of your proposal is that it would change the philosophy of the bundle too much. I know that you can't configure things dynamically and security roles are not supported ... but all that is \"by design\" and we can't change it anytime soon.\nIn my opinion, your backend is probably too complex for EasyAdmin. The good news is that we have SonataAdminBundle as an alternative for these complex backends.\n. Let's close this as \"won't fix\" for now. @rubengc thanks for initiating this discussion and I'm sorry this time we couldn't implement the proposed feature.\n. More translation fixes. I like it! Thanks @simcncb Te\u015fekk\u00fcr ederim\n. Thanks for reporting this issue (and thanks for the great GIF ... which I totally love!!)\nThis error may be related to a VichUploaderBundle issue explained in this section: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/upload-files-and-images.md#preparing-your-entities-to-persist-images\n\n. I'm glad to hear that. I'm closing this as \"fixed\" then. Thanks!\n. And thanks for reporting this issue too. This one I'm sure it was fixed in a recent version, so please update to the latest 1.11.5 version. Thanks!\n. Thanks for reporting this issue. Please update EasyAdmin to the latest version (1.11.5) because this issue should be gone.\n. The solution to this issue is a bit tricky because you are navigating between entities and at the end you want to return to the original listing ... but we only save the last page you visited. I'll think about possible solutions.\n. The back button is one of the few that remains in most browsers, so I guess we don't need to replicate that. In any case, we'll find a way to fix this.\n. @anthony-launay yes ... but what I'm trying to say is that we don't need to create the generic \"back\" button because that button is one of the few things browsers provide and most people understand.\n. @yceruto yes, that's exactly the right solution. I'm going to submit a pull request soon. Thanks!\n. @yceruto yes, that's exactly the right solution. I'm going to submit a pull request soon. Thanks!\n. @Ziiweb the value of the form_theme is any valid template path for Symfony. If you define this:\nyaml\ndesign:\n    form_theme: 'custom_layout.html.twig'\nThe template must be located at app/Resources/views/custom_layout.html.twig.\nBut you can save your templates in any bundle and refer to them with the old syntax (AppBundle:Default:custom_layout.html.twig) or the modern syntax (@App/Default/custom_layout.html.twig)\n. Closing it as \"fixed\", because the provided solution should be enough. @Ziiweb if the problem still persists, please reopen this issue. Thanks!\n. I understand the concerns of @Pierstoval and @ogizanagi ... but I still think is OK to add this small feature. I don't plan to add more configuration options for menu items, so this is the last one (and that means that we won't clutter the menu feature). Besides, we allow links to absolute URLs and external systems in the menu, so it's important to be able to open them in new tabs/windows.\nThe problem with attr is that it forces you to remember which options are first-level options and which ones nested inside attr. And nested arrays are ugly in YAML files. We do that when we have no other option (line type_options for form fields) but we try to avoid that as much as possible.\nSo, I'm going to merge this feature. But, in the future, we can reconsider this decision. And since the feature is minimal, and removing it won't break the backend, BC breaks won't matter. Thanks!\n. @Pierstoval thanks for this. I like the idea of adding these templates ... but I don't like using the same template as in Symfony. It's a bit overkill for a simple project like this. I'll take over this pull request (reusing your original commits) to propose something different.\n. I'm closing it in favor of #980. I was not convinced with the Pull Request template. I don't think we need to be as strict as Symfony. On the other hand, I think we need to provide more information in the Issue templates.\n@Pierstoval thanks for bootstraping this issue!\n. I can confirm the bug too. @abdielcs thanks for reporting it.\nSolving this issue is \"trivial\" from a technical point of view ... but it's very hard from the design point of view. The reason is that the new action is included inside the search action. Otherwise, the form and buttons don't look right. I'll try to come up with a solution.\n. @Pierstoval I've tested your changes and they don't work for me :cry: \n\n\n. @abdielcs I'm closing this feature as \"won't fix\" for now because it's no easy at all to implement. However, in the coming days (weeks?) I'm going to refactor all the code related to the search feature. My wish is that this will allow in the future to implement features like the one you asked for. Thanks!\n. So far the results are promising. Tests now take 30 minute less to complete:\n\n. @Pierstoval code coverage barely changes from one commit to another, so I think it's OK to calculate it \"from time to time\". Don't you think saving 30 minutes in the test suite is worth it?\n. @ogizanagi good idea! I'm trying to do that in 90a582c.\n. Everything seems to work as expected and tests are fast again. Thanks for the discussion and the ideas!\n. @SebTM you are right: in theory, 5.4 and 5.5 could have problems different from 5.3 or 5.6. But in practice I have never seen an error which affects only to any of those versions. I can't also recall this situation ever happening for Symfony repository.\n. This is better than the previous proposal ... but still too different from the current design:\n\n\n\n\n. I remember having lots of problem with this design and that's why the new action si embedded inside search (I acknowledge that the current \"solution\" is an ugly hack). I didn't try it ... but maybe using the calc() function (which is supported in all browsers) might be useful.\n. Closing it in favor of #927.\n. @remedge thank you very much for updating this translation! Regarding the Scrutinizer issue, I relaunched the analysis and it worked, so everything is right. \u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0441\u043f\u0430\u0441\u0438\u0431\u043e\n. For the show view I prefer to not support that widget. The reason is that show should be a \"read only\" view and the widget allows to modify information.\nFor the new and edit views, the problem is that we should create a form type for this widget. I'd prefer not to do that because it would complicate things. In any case, I'll wait to read the comments and opinions of other developers.\nThanks!\n. For the show view I prefer to not support that widget. The reason is that show should be a \"read only\" view and the widget allows to modify information.\nFor the new and edit views, the problem is that we should create a form type for this widget. I'd prefer not to do that because it would complicate things. In any case, I'll wait to read the comments and opinions of other developers.\nThanks!\n. I've been thinking about this and for now I'm going to close it as \"won't fix\". In addition to my previous comments, there might be another issue: in list view the widget actually changes a value in the database, but in the edit (and obviously in new) it wouldn't change it. This different behavior could confuse end-users.\nIn any case, as always, this decision is not definitive. We'll review it in the future and we'll change our mind if necessary. Thanks again for proposing this feature.\n. The screenshots in https://github.com/symfony/symfony/pull/17860 are for Sonata, but exactly the same happens in EasyAdmin. Click on the images to see them in detail.\n. The screenshots in https://github.com/symfony/symfony/pull/17860 are for Sonata, but exactly the same happens in EasyAdmin. Click on the images to see them in detail.\n. Defining two different list views for the same entity is trivial:\nyaml\neasy_admin:\n    entities:\n        Inventory:\n            class AppBundle\\Entity\\Product\n            list:\n                fields: ['title', 'color']\n        Product:\n            class AppBundle\\Entity\\Product\n            list:\n                fields: ['title', 'color', 'enabled']\nHowever, filtering the lists is not trivial because that feature is not built-in. The solution nowadays is to override the needed method in your own AdminController, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. Defining two different list views for the same entity is trivial:\nyaml\neasy_admin:\n    entities:\n        Inventory:\n            class AppBundle\\Entity\\Product\n            list:\n                fields: ['title', 'color']\n        Product:\n            class AppBundle\\Entity\\Product\n            list:\n                fields: ['title', 'color', 'enabled']\nHowever, filtering the lists is not trivial because that feature is not built-in. The solution nowadays is to override the needed method in your own AdminController, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md\n. @anthony-launay this is a bug of the bundle. I'm working right now to fix it, so you can expect to have it solved soon. For now, the quick solution is to use Partenariat2 when you want to refer to Affiche entity (and in the next stable version, do the opposite change).\n. @anthony-launay this is a bug of the bundle. I'm working right now to fix it, so you can expect to have it solved soon. For now, the quick solution is to use Partenariat2 when you want to refer to Affiche entity (and in the next stable version, do the opposite change).\n. This issue was finally fixed and it's available in the just released 1.12.0 version. Remember that you'll need to do the opposite change to keep the backend working. Thanks!\n. @ogizanagi yes!!! Once again your genius Symfony expertise saved me :)  Thanks!\nThis change requires to do some other internal changes ... so I'm working on it right now.\n. @ogizanagi yes!!! Once again your genius Symfony expertise saved me :)  Thanks!\nThis change requires to do some other internal changes ... so I'm working on it right now.\n. This issue was finally fixed and it's available in the just released 1.12.0 version.\n. @rubengc thanks for proposing this feature and for providing some code to better estimate the impact of it. However, I'm not sure yet about adding this feature.\n. @rubengc thanks for understanding it. We're really focused on creating a robust core ... but at some point we'll allow those strong customizations.\n. Update\nSince this change can break things, I plan to release the 1.12.0 version containing only this change. In 074988c I've improved the error message of the \"Undefined entity\" exception to add a link to the changelog of the future 1.12.0 version. There we'll explain the change and the simple solution to fix it.\nHopefully this change won't cause much pain. :pray: \n. @Pierstoval probably not. That's our biggest \"Wow factor\" and it's very powerful from the marketing point of view.\n. I've tested this further and now it works as expected when you remove just the New or Search action and when you remove both of them.\n. I would prefer to not do that. The advantages of CDNs are clear, but they have some disadvantages too. For instance, in lots of companies is common to whitelist the external hosts you can access from inside the company. Right now our backends work on those companies. If we switch to CDN, they will break and no repair would be possible.\n. Let's close this as \"won't fix\" for now because of the reasons mentioned above. In any case, the frontend world evolves so fast, that we might need to reevaluate this decision in the near term. Thanks!\n. Thanks for reporting these issues.\n1) It should be fixed by #935\n2) This works for me when translating the contents as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/i18n.md#translate-property-labels  I need more information to fix the error. Maybe show me a small sample of your translation file? (And its name and location)\n3) I would also need a bit more information about this error. In which view occurs? Is the only missing translation? Thanks!\n. The second error is now fixed in #937  (we did this change a while ago in the list view, but I forgot to apply it to the show view too).\n. I don't know if #938 will solve the problem number 3), but it will certainly solve some \"Missing Translation\" errors.\n. Reopening just in case any of the three issues is not solved yet.\n. Closing it as fixed in #972 thanks to the great work made by @javierrodriguezcuevas. You'll be able to use it in the next stable version to be released soon.\n. @mkalisz77 if you have some time, please review if these changes would solve your issues. Thanks!\n. Thanks for testing ... and thanks for opening this issue. Your comments help us a lot smoothing the rough edges of the bundle.\n. I don't know what to do about this. In your case it's clear that you want a \"clean URL\" without our query parameters. But the normal use case (as I see it) is to need those parameters to maintain the selected menu item.\nLet's see if someone can provide a solution for this (obviously without introducing any new config option or complicated stuff).\n. @SebTM menu items can define custom route parameters with the params option. Maybe this could work?\nyaml\neasy_admin:\n    design:\n        menu:\n            - { label: 'menu.visit_site', route: 'homepage', target: '_blank', params: { menuIndex: null, submenuIndex: null } }\nAnother option would be to use the \"link\" menu entry and use / as the URL:\nyaml\neasy_admin:\n    design:\n        menu:\n            - { label: 'menu.visit_site', url: '/' }\n. @slmcncb yes, but we cannot solve it that way because for other users that might be a wrong solution.\nHave you tried this config?\nyaml\neasy_admin:\n    design:\n        menu:\n            - { label: 'menu.visit_site', url: '/' }\n. @slmcncb I finally could find a solution for this problem. See #1035 for details :smile: \n. I'm sorry I didn't replied earlier to this issue.\nTo be completely honest, I don't understand the problem :confused:\nThis check is needed because we only display links to entities if their show view is enabled. Otherwise we just display the value without a link:\nphp\n$isShowActionAllowed = $this->isActionEnabled($view, 'show', $targetEntityConfig['name']);\n. @slmcncb nice! Another translation completed :) Te\u015fekk\u00fcr ederim\n. Yes, it's possible. You just need to define a custom menu and set default: true to the option you want to be the backend homepage. See https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/custom-menu.md#customizing-the-backend-index-page\n. You are right, but we can't do this because of Symfony 2.3. The logout_path() Twig function requires to pass the name of the firewall (more exactly, the provider key) so we can't use it. Since Symfony 2.7 this argument is optional and we could use it to add this logout feature.\n. I'm closing this issue as \"won't fix\" (because of Symfony) but I've added the future label to it so we can reconsider this feature once we drop Symfony 2.3 support. (The good news is that the AdminLTE template which we use is prepared to display a menu for the user actions, so the integration will be easy).\n. Ironically this happens to me sometimes with SonataAdmin in a backend which contains tens of thousands of users and the edit form can't load all of them in the <select> element (I know I should use autocomplete ... but I cannot make it work).\nMy questions would be:\n- Has the number of entities grown a lot recently?\n- In your development machine, do you have the same order of magnitude entities than in production? \n- Would it be possible to perform a quick profiling with Blackfire to see where the memory consumption happens? Right now we have three possible culprits: Doctrine, ChoiceType/Form and EasyAdmin.\n. @enekochan thanks for the Sonata autocomplete tip. Everything worked like a charm!\nI'd like to help you with this ... but I really need to see the profile to find out who is consuming so much memory. I hope you find some time to do it. Thanks!\n. @enekochan thanks for the Sonata autocomplete tip. Everything worked like a charm!\nI'd like to help you with this ... but I really need to see the profile to find out who is consuming so much memory. I hope you find some time to do it. Thanks!\n. @enekochan sent me the profiles privately and after analyzing it, I can confirm that all the memory issues are due to Doctrine. @enekochan showed the CPU profiling, but if you switch to the memory dimension, you'll see the following:\n\nSo, I'm closing this issue as \"fixed\" ... but we will really fix it when we create a custom form type to autocomplete fields. That is very high in my TODO list.\n. @enekochan sent me the profiles privately and after analyzing it, I can confirm that all the memory issues are due to Doctrine. @enekochan showed the CPU profiling, but if you switch to the memory dimension, you'll see the following:\n\nSo, I'm closing this issue as \"fixed\" ... but we will really fix it when we create a custom form type to autocomplete fields. That is very high in my TODO list.\n. I'm closing this as \"solved\" and I've opened #1043 to start discussing about the new easyadmin_autocomplete form field. Thanks!\n. @rubengc thanks for reporting this issue. If confirmed, this is a very serious bug.\nSadly I cannot reproduce it (and we have some tests for this feature too). So, could you please check the following:\n1) In the profiler panel, check the value for the template option of the corresponding field and entity (in the show view). The value should be easy_admin/<your-template-path>\n2) If the previous value is wrong, please add some var_dump() or logs in these lines: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Configuration/TemplateConfigPass.php#L119L137 which is where we define this template.\nThanks!\n. I can see the error now. I will fix it soon. Thank you very much for investigating the error origin!\n. I can see the error now. I will fix it soon. Thank you very much for investigating the error origin!\n. Not yet because these last days I've been working on other issues (and the big doc reorganization that you proposed :smile: ) But I don't forget about this.\n. :+1: I like it! @yceruto thank you very much for this nice improvement.\n. I'm going to merge this as is and treat the weird errors in another issue.\n. @hrvojebrkasic I'm afraid that I don't understand the issue, so let's try to guess what's happening:\n1) Do you create the form manually with the new, edit or form options of EasyAdmin? ... or do you create the form with Symfony and use it overriding the AdminController?\n2) The choice field to customize: how does it get the values to show? Ajax? And what about the JavaScript needed by the field?\n. @hrvojebrkasic I'm afraid that I don't understand the issue, so let's try to guess what's happening:\n1) Do you create the form manually with the new, edit or form options of EasyAdmin? ... or do you create the form with Symfony and use it overriding the AdminController?\n2) The choice field to customize: how does it get the values to show? Ajax? And what about the JavaScript needed by the field?\n. The only thing you must keep in mind is that for form-related stuff we always rely on Symfony Forms instead of recreating those features. So, if you wanted to customize the template for the show or list views, you just need to define the template to use in the template option:\nyaml\nentities:\n    Employee:\n        list:\n            fields:\n                - { property: 'status', template: 'my_template.html.twig' }\nAnd that's all! 5 seconds and you are done. However, for customizing the form template, you'll need to work a bit more and follow Symfony practices.\n1) You need to create a custom form theme template anywhere you want.\n2) You need to override the block used to display your widget as you perfectly explained in the previous comment.\n3) Tell EasyAdmin that it must use your own theme (as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/5-design-customization.md#customizing-form-design):\nyaml\neasy_admin:\n    design:\n        form_theme: '@AppBundle/form/custom_layout.html.twig'\nIf your custom form theme extends from the default form_div_layout or bootstrap_3_layout themes, there is nothing else to do. If not, then tell EasyAdmin to use two themes: your own theme and the default one:\nyaml\neasy_admin:\n    design:\n        form_theme: ['@AppBundle/form/custom_layout.html.twig', 'vertical'] # or 'horizontal'\nThis should be all. Please tell us if it works. Thanks!\n. The only thing you must keep in mind is that for form-related stuff we always rely on Symfony Forms instead of recreating those features. So, if you wanted to customize the template for the show or list views, you just need to define the template to use in the template option:\nyaml\nentities:\n    Employee:\n        list:\n            fields:\n                - { property: 'status', template: 'my_template.html.twig' }\nAnd that's all! 5 seconds and you are done. However, for customizing the form template, you'll need to work a bit more and follow Symfony practices.\n1) You need to create a custom form theme template anywhere you want.\n2) You need to override the block used to display your widget as you perfectly explained in the previous comment.\n3) Tell EasyAdmin that it must use your own theme (as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/5-design-customization.md#customizing-form-design):\nyaml\neasy_admin:\n    design:\n        form_theme: '@AppBundle/form/custom_layout.html.twig'\nIf your custom form theme extends from the default form_div_layout or bootstrap_3_layout themes, there is nothing else to do. If not, then tell EasyAdmin to use two themes: your own theme and the default one:\nyaml\neasy_admin:\n    design:\n        form_theme: ['@AppBundle/form/custom_layout.html.twig', 'vertical'] # or 'horizontal'\nThis should be all. Please tell us if it works. Thanks!\n. You can forget my previous comment :)  (I mentioned the list and show views because those depend 100% on us and tweaking them is very easy. The new and edit views depend entirely on Symfony ... so they are more complex).\n\nLooking at your code, I'm afraid that you are not on the right track :cry:  I propose you something different: your custom form field is really simple. A two element choice type and a bit of JavaScript code. So, let's forget about everything and let's start over.\nI recommend you to create a JavaScript file anywhere in your application (the location doesn't matter). It's contents should be:\njs\n$(document).ready(function () { \n    $(\"body.easyadmin.new #employee_status\").on('change', function() {\n        if ($('#employee_status').val() == 1) {\n            $(\"#employee_quitAt\").parent().parent().parent().hide();\n        }\n        else {\n            $(\"#employee_quitAt\").parent().parent().parent().show();\n        }\n    })\n});\nThen, use the design.assets.js option to load your own JavaScript in the backend. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/5-design-customization.md#adding-custom-web-assets\n. You can forget my previous comment :)  (I mentioned the list and show views because those depend 100% on us and tweaking them is very easy. The new and edit views depend entirely on Symfony ... so they are more complex).\n\nLooking at your code, I'm afraid that you are not on the right track :cry:  I propose you something different: your custom form field is really simple. A two element choice type and a bit of JavaScript code. So, let's forget about everything and let's start over.\nI recommend you to create a JavaScript file anywhere in your application (the location doesn't matter). It's contents should be:\njs\n$(document).ready(function () { \n    $(\"body.easyadmin.new #employee_status\").on('change', function() {\n        if ($('#employee_status').val() == 1) {\n            $(\"#employee_quitAt\").parent().parent().parent().hide();\n        }\n        else {\n            $(\"#employee_quitAt\").parent().parent().parent().show();\n        }\n    })\n});\nThen, use the design.assets.js option to load your own JavaScript in the backend. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/5-design-customization.md#adding-custom-web-assets\n. @hrvojebrkasic everything seems complicated because you are using Symfony to create your forms instead of creating them with EasyAdmin.\nIf your forms are complicated, you must use Symfony Forms. But the form you showed looks simple because it's just a choice field with two options. In EasyAdmin you can do it like this:\nyaml\neasy_admin:\n    entities:\n        Employee:\n            # ...\n            form:\n                fields:\n                    # ...\n                    - { property: 'status', type: 'choice', type_options: { choices: { 'active': 'Working', 'inactive': 'Not working' } } }\nThe only thing left would be the JavaScript magic that shows/hides things. That should be done as shown in my previous comment.\n. @hrvojebrkasic did you finally manage to fix this issue? do you need more help? Just ask us!\n. I'm closing this as \"fixed\" because of the lack of feedback ... but please feel free to ask us anything else you might need. Thanks!\n. @rubengc thanks for this proposal (and thanks for being so active reporting issues and asking for features!!).\nI'm going to close this issue as won't fix, but I want to explain why. In my experience, these shortcuts look great at first ... but in the long term they are a pain. If we allow 'all' in a option that we previously only allowed to define arrays, we must update our change introducing a special use case and maintain it forever.\nIf we prefer to use arrays (['all']) then we have a problem because all is a valid custom action name. Then we have to introduce a special syntax: ':all', '@all', etc.\nEither way we must document this option and users need to learn it. It's a small thing, but it's another thing to learn ... and all these small things add up a lot at the end. I like to compare this to the number of reserved keywords per programming language: Cobol has 357, C# 102 and Go  just 25 (PHP has 49). That's one the biggest reasons why learning Go is so easy.\n. I think this problem could be solved easily. In the form (or edit or new) fields, you must use valid Symfony Form types. These can be the built-in Symfony types or any other type created by your application or by some bundle that you installed.\nSo, my guess is that string is not a valid Symfony Form type. You should use text instead of string and textarea instead of text in your config ... and hopefully everything will be solved :)\n. I think this problem could be solved easily. In the form (or edit or new) fields, you must use valid Symfony Form types. These can be the built-in Symfony types or any other type created by your application or by some bundle that you installed.\nSo, my guess is that string is not a valid Symfony Form type. You should use text instead of string and textarea instead of text in your config ... and hopefully everything will be solved :)\n. I'm glad to hear that. Closing it as fixed :smile: \n. I have very limited experience with FOSRestBundle so I don't fully understand the problem ... but it's true that we always return HTML and the proposed change seems harmless to us ... so I'm :+1:\nI'll wait a bit before the merge in case someone points to possible issues. Thanks!\n. So maybe adding this config in the app is enough?\n``` yaml\napp/config/config.yml\nfos_rest:\n    format_listener:\n        enabled: true\n        rules:\n            - { path: '^/admin', methods: [ 'GET', 'POST'], priorities: ['html'], fallback_format: 'html', prefer_extension: false }\n```\n. I wish I knew more about REST APIs and FOSRestBundle to better decide about this. From my ignorance, the last comment from @joserobleda makes sense: we're adding a default format for the Request, not the response. This looks harmless to the bundle and convenient for end-users. But I'm also considering the previous comment from @ogizanagi. So I don't know what to do.\nI'd appreciate any comment from people with experience in these topics. Thanks!\n. @joserobleda I think it's a good idea to write a mini-tutorial about how to integrate EasyAdmin with FOSRestBundle. We're in the middle of a big doc reorganization, so I'll write this tutorial after merging the doc changes.\nBesides this request format thing, do you know any other useful tip or information for developers using FOSRestBundle with EasyAdmin? Thanks!\n. As promised, a new mini-tutorial has been proposed: #973\n. :+1: A quick win! It totally makes sense to have the same behavior for new and edit actions. Thanks @yceruto\n. @javierrodriguezcuevas thanks for this AMAZING analysis of the reported errors. I'm sorry I didn't reply to you earlier, but I was busy revamping the documentation. I could finally review your comments and I can't thank you enough for them!!\nIn #972 I'm trying to fix everything but I'm having some problems:\n1) The first error was gone with your proposed fix. Thanks!\n2) The second error (__name__label__ translation) is still there because I have no idea how to solve it. Maybe we could leave it unfixed?\n3) You analysis about the Delete? missing translation is perfect. However, I'm trying to fix it and I can't. In my ideal world, this would be the solution:\ntwig\n{{ form_row(form.delete, { translation_domain: null }) }}\nI don't know why is translation_domain ignored for this form :sob: \n. @javierrodriguezcuevas once again you nailed it! Thanks for your great help.\nIn ab2c481 I implemented your proposal for the Delete? missing translation. \nIn 559b1ea I implemented the \"hacky idea\" of translating the __name__label__ string. Let's see what people think about this :grin: \n. @xevivila thanks for your comments :)\n\nI'll tell you the steps needed to submit a pull request with these changes in case you want to give it a try. And don't worry, if you don't have time for this, I'll merge your changes myself. Thanks!\n\n\nGo to https://github.com/javiereguiluz/EasyAdminBundle\nClick on the Fork button to create a copy of this project under your own GiHub user name\nInstall Git in your computer if you haven't done it already: https://git-scm.com/\nOpen a console command and enter in your projects directory (e.g. /users/xevivila/projects/)\nClone the forked repository in your computer: git clone git@github.com: xevivila/EasyAdminBundle.git\nEnter into the cloned project (cd EasyAdminBundle)\nCreate a new branch to make the changes (git checkout -b fix_catalan)\nUpdate the contents of the EasyAdminBundle.ca.xlf file\nTell Git to upload all the changes to your forked project: git commit --all and git push\nGo again to https://github.com/javiereguiluz/EasyAdminBundle and you'll see a GitHub message asking you if you want to create a Pull Request. You just need to fill in the GitHub form and that's all.\n\nI know the process looks awful, boring and complicated ... but it's much better in practice :)\n. I'm checking the fix_catalan branch of your fork: https://github.com/xevivila/EasyAdminBundle/tree/fix_catalan\nGitHub tells me that your branch \"is even with the master branch of the original repository\":\n\nThis means that your changes to the .xlf file haven't been uploaded to your own repository. Did git commit --all and git push commands show any errors? Maybe you must do a git push origin the first time.\n. @xevivila thanks a lot for trying to make the pull request yourself. You did it great and your changes are already merged. You are officially a full contributor to this bundle! Thanks.\n. I'm not sure at all about this change :cry:\nIt's 100% sure that we'll add full security support in future versions (to restrict access to entities, menu options, form fields, etc.) But I don't understand the need to complicate the routing part so much (there are other pull requests and issues about this topic).\nI look for example at a Sonata backend which I have and I can see that there are more than 200 routes added by that bundle. Why? They complicate everything, they make the routing slower and I never use them.\nThe same goes for the \"pretty URLs\". This is a backend, so no one looks at URLs. And modern browsers (e.g. latest versions of Safari) already hide by default the URL, so it doesn't matter if it's pretty or ugly.\n\n@yceruto in any case, excuse me for this rant. I'll review this pull request in the coming days to see if there are things we can use to improve the bundle. Thanks for sending this PR.\n. @xevivila thank you very much for fixing this translation. And congratulations on your first contribution! You did it great. Moltes gr\u00e0cies\n. @yceruto thanks for reporting this issue, providing a detailed explanation and contributing the solution.\nI agree with this change but I have a question: shouldn't we add the cookie for the path of the backend? This is /admin by default but the user can configure it when importing the routes. My concern is that this cookie with path: / would be sent to any website page, being a backend one or not.\n. It won't be easy. I'd say \"let's merge this as it is\". The only (very minor) issue is that (the few) people who access the backend will send the cookie of the menu when visiting any other part of the website. I don't think that's an issue.\n. @yceruto we tried localStorage ... but the result was very ugly: https://github.com/javiereguiluz/EasyAdminBundle/pull/822#issuecomment-173323912\n. @yceruto thanks for fixing this. Personally I prefer merging all these small improvements rather than merging big features. Thanks!\n. @yceruto thanks for opening this detailed issue. I wasn't ware of this limitation and to me it doesn't make any sense. The \"menu dividers\" should work for submenus too. If you already have a PR for that, it would be far easier to implement it :)\n. Closing it as fixed by #967.\n. I see two things in your code:\n1) The service definition is not correct for the tag section. Instead of this:\nyaml\ntags:\n    - { name: easy_admin.pre_update, event: preUpdate }\nYou should use this:\nyaml\ntags:\n    - { name: kernel.event_listener, event: easy_admin.pre_update, method: preUpdate }\n2) The argument of the preUpdate() method is not correct. Please note that this is not a Doctrine event. You'll receive a Symfony\\Component\\EventDispatcher\\GenericEvent object with all the arguments inside of it.\n. As a matter of fact, we have an example in the docs: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/customizing-admin-controller.md#customization-based-on-symfony-events\nIt's about even subscribers instead of event listeners, but it will help you. By the way, we are reorganizing all the doc soon to make things easier to find, so the previous link will only work for some days :)\n. @javierrodriguezcuevas thanks for providing this feature! I finally tested it and your proposal is interesting ... but it would still need some changes.\n1) I'd like the buttons to behave exactly like SonataAdmin. In this animation you can see that they are sticky only when needed, not all the time:\n\n2) In dev environment, the Symfony toolbar hides the actions:\n\nThis second issue is minor and we could even ignore it ... but I'd like to make 1) a reality. We already have jQuery and Bootstrap plugins loaded ... so maybe the solution is simpler than it seems. Sadly I don't know :disappointed: \n. @javierrodriguezcuevas no worries. This is not urgent but a \"nice to have\" feature. So we'll merge it when we're happy with it. Enjoy your holidays!\n. Yes!! :tada: That's exactly what I wanted. You are amazing :+1: \nI only have a minor comment: if possible, the footer should be stuck (if needed) after the page load. Now you need to go to the end and then, when you scroll up, the footer becomes stuck. Do you think this change could be easy to implement? Thanks!\n. @javierrodriguezcuevas thanks for updating the code. I have a final question though.\nI was reviewing everything to see if licenses are OK for our bundle, etc. and I realized that Waypoint.js creators also provide a library called \"Sticky Elements\" http://imakewebthings.com/waypoints/shortcuts/sticky-elements/ which work similarly to the easyAdminStickyFooter  plugin that you propose. I haven't tried it, but if we set the direction option to up, it seems that \"Sticky Elements\" do what we want.\nSo the question is: is there any reason to add this custom plugin instead of using the other library? Thanks!\n. @javierrodriguezcuevas I've tested your PR thoroughly and I love it! Thank you very much for this contribution :clap: I've opened #1025 to make some minor tweaks to your work. That's why I'm closing this without merging it ... but I've reused your original commits, so you'll get full credit for your great work.\n. By default we don't show the show action because it's a bit redundant with edit. You can enable it on some specific entities:\nyaml\neasy_admin:\n    entities:\n        MyEntity:\n            # ...\n            list:\n                actions: ['show']\nAnd you can also enable it globally for all entities:\nyaml\neasy_admin:\n    list:\n        actions: ['show']\n. Let's merge this now because it's easier to spot errors when reading the published docs.\n. @yceruto thanks contributing this improvement. Merged!\n. The YAML syntax is definitely our biggest challenge.\nHowever, can't you do something like this today?\nyaml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            form:\n                fields:\n                    - property: gender\n                      type_options:\n                            choices: { 'Male': 'm', 'Female': 'f', 'Not specified': 'n' }\nOr even:\nyaml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            form:\n                fields:\n                    - property: gender\n                      type_options:\n                            choices:\n                                'Male': 'm'\n                                'Female': 'f'\n                                'Not specified': 'n'\n. And you can even use a third format:\nyaml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            form:\n                fields:\n                - property: gender  # <-- there is no need to indent here\n                  type_options:\n                        choices: { ... }\nI've validated all these formats and are \"valid YAML\". Let's see if \"Symfony YAML\" considers them valid too:\n\n\n\n. Closing it as fixed because I've just verified that syntax like the following work as expected:\nyaml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            form:\n                fields:\n                    # ...\n                    - property: 'imageFile'\n                      type: 'Vich\\UploaderBundle\\Form\\Type\\VichImageType'\n                      help: 'Lorem Ipsum'\n                      type_options:\n                          disabled: true\n. This PR is now ready to review. It solves all the \"missing translation\" errors ... but I'd like to read your opinions, specially about the 559b1ea commit. Thanks!\n. I must confess that I don't have a clue about what could be happening. My (wild guess) is that maybe there is a circular inheritance issue somewhere. Could we have more information about the error? Apache just displays a coredump, but maybe the Symfony app logs something?\n. Friendly ping to ask if you could fix this issue. If not, maybe you could send to me the troubling template privately (javier.eguiluz @gmail.com) so I can debug the issue. Thanks!\n. Closing because of the lack of feedback. Hopefully it's fixed by now.\n. I agree with changing this in the README file ... but I don't want to change this in the actual docs. The reason is that one day this doc will be integrated on symfony.com and that's the style they use for section titles.\n\nBy the way, the title casing is one of my favorite topics to discuss it with our beloved Symfony doc managers (Ryan, Wouter and Christian). From time to time I propose to change everything (https://github.com/symfony/symfony-docs/issues/5830)  but then I realize the amount of work it would require and forget about it :)\n. Yes, we'll need to convert docs to RST. I'll do it :)  (I've already done it for several bundles!)\n. @Pierstoval thanks for this doc improvement.\n. It worked! We now have Windows testing!! :tada: :tada: :tada:\n\nThe only drawback is that they take around 20 minutes to complete.\n. Closing it as \"won't fix\" because the results are not significant enough (for Symfony the speedup on Travis is just 10 seconds per job, and on AppVeyor is just 1 minute in total).\n. @Pierstoval you voted :+1: without using the shiny new GitHub icons !?!?!?\n\n. Not only I agree, but I think this is a very serious bug!! Thanks for reporting it, thanks for the detailed explanation and thanks for offering yourself to fix it. Please send the PR.\n. @truckee thanks for include such detailed information in your issue report!\nIn the main Symfony repository, some people complained recently that compiling the container in production environment consumed too much memory and that resulted in errors in some hosting services.\nThe details are here: https://github.com/symfony/symfony/pull/18048 but basically the problem is in the way we try to remove comments from PHP code when dumping the Symfony container in the prod environment.\nA fix was proposed and it looks like it's working. The problem is that it's not yet available in stable Symfony versions (this is the pull request: https://github.com/symfony/symfony/pull/18048/files). Maybe you could do a quick test and use the dev version of Symfony in your application to see how it goes.\n. The aforementioned Symfony change has landed in the dev version of Symfony 2.8, so maybe you can try changing this dependency:\njson\n\"symfony/symfony\": \"2.8.*\",\nby this one:\njson\n\"symfony/symfony\": \"2.8.*@dev\",\nAnd see if the issues are gone.\n. This is really strange. I'm not aware on any disproportionate memory consumption in the bundle. In my local computer, when using the list view of the Product entity of the EasyAdmin Demo application, I get 24 MB of peak memory consumption after emptying the cache:\n\nAnd then, around 10 MB peak when the cache is not empty:\n\n. Closing this as \"fixed\" because it looks like the issue is caused by an external piece of software.\n. Closing this as \"fixed\" because it looks like the issue is caused by an external piece of software.\n. @yceruto yes, I was thinking the same! I'll release a new version right away. Thanks for the PR and the issue report.\n. 1.11.8 has been released: https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.11.8\n. > Why? We could not do it without this restriction?\nBecause we use a hardcoded entity. in all our current queries. For example: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Controller/AdminController.php#L494-L503  I don't see it like a problem because entity. name is easy to understand that it refers to the current entity. (SonataAdmin uses this other convention: $query->getRootAlias() which in my opinion is harder to understand)\n. @yceruto thanks for the review. I've added an example with parameters.\n. I think I've found a \"pain point\" for this feature.\nIn this example:\nyaml\neasy_admin:\n    entities:\n        VipCustomers:\n            class: AppBundle\\Entity\\User\n            list:\n                dql_filter: 'entity.budget > 100000'\n        RegularCustomers:\n            class: AppBundle\\Entity\\User\n            list:\n                dql_filter: 'entity.budget <= 100000'\nThe dql_filter config is very easy ... but you must duplicate all the customizations made for the User entity.\nI see two possible solutions:\n1) Introduce a extends config which makes an entity inherit all the config from another one:\nyaml\neasy_admin:\n    entities:\n        VipCustomers:\n            class: AppBundle\\Entity\\User\n            # customize a lot of things ...\n            list:\n                # customize everything about the 'list' option...\n                dql_filter: 'entity.budget > 100000'\n        RegularCustomers:\n            extends: VipCustomers\n            list:\n                dql_filter: 'entity.budget <= 100000'\n2) Copy the \"Index Scopes\" feature from Ruby's ActiveAdmin (see http://activeadmin.info/docs/3-index-pages.html)\nThe config would look like this:\nyaml\neasy_admin:\n    entities:\n        Customers:\n            class: AppBundle\\Entity\\User\n            # customize a lot of things ...\n            list:\n                # customize everything about the 'list' option...\n                scopes:\n                    - { label: 'VIP', dql_filter: 'entity.budget > 100000' }\n                    - { label: 'Normal', dql_filter: 'entity.budget <= 100000' }\n                    - { label: 'All Customers', default: true }\nAnd the list page would show this as a filter:\n\n. @yceruto very nice comment. I faced the problem about users as well. I need to think about this.\n\nIn addition, I think that we can implement both dql_filter and scopes. First option comes in very handy in lots of situations and the second one is useful while we don't have filters.\n. @Pierstoval I disagree with you about dql_filter. I think this small feature would provide lots of value to our users. Filtering the list of elements is a very common and basic need.\n. @Pierstoval actually ... I'm not ready yet to merge the \"scopes\" feature. I'd like to do that in the future as part of the filter feature. What I'm willing to add right away is the dql_filter feature.\n. @Pierstoval actually ... I'm not ready yet to merge the \"scopes\" feature. I'd like to do that in the future as part of the filter feature. What I'm willing to add right away is the dql_filter feature.\n. @tiraeth sorry I didn't explain myself better: I'd like to have both features. The dql_filter is a quick way to do things that you commonly need. The scopes (and filters) feature takes more time to configure but they are more powerful and useful for complex backends. I think both are needed (and therefore, your work will be needed when implementing the \"scopes\"). Thanks!\n. I prefer to keep the name dql_filter because it's self-explanatory: it only accepts Doctrine DQL code. In the future, if we support ODM, etc. (very unlikely), we can rename it to query_filter. By the way, I plan to introduce for the search view another option called dql_query (so you can define the entire DQL query to look for in joined entities, etc.)\n. @xabbuh yes, the tests were done with OpCache enabled (and Twig extension enabled too).\nThe entire page loads in 86ms, so we can't really save a lot. And the four slowest elements are Composer and Twig, which are a bit out of our control:\n\n. I'm going to merge this to test it in real applications. If something bad happens, it will be trivial to revert it. Thanks for the discussion.\n. I need to think a bit more about this, but my first impression is positive (and as you said, aligned with the dql_filter proposal). Django having this exact same feature is a big plus. I think we could simplify some options (for example we don't need the alias because it will always be hardcoded to entity.)\n. You are on a roll today! Thanks for your contributions. Muito obrigado\n. A nice catch, an easy fix and a quick win! Thanks for this contribution.\n. The problem is that using the FQCN is very verbose in YAML files. In PHP files is equally horrible, but you can at least hide part of it thanks to the use ... import and the ...::class instruction. In any case, both formats work on EasyAdmin, so users can decide which one to use.\n. @safrazik thanks for this proposal. I need to think about it because, even if the proposed change is minor, it could be a big change for user experience. Probably a positive change ... but I need to think about it a bit more. Thanks! \n. I'm going to think about this too. For reference purposes, these are the field types supported by Sonata: https://sonata-project.org/bundles/admin/master/doc/reference/field_types.html\n. I'm going to think about this too. For reference purposes, these are the field types supported by Sonata: https://sonata-project.org/bundles/admin/master/doc/reference/field_types.html\n. @Babacooll thanks for reporting this issue and for investigating the cause. As you said in your last comment, this is probably something related to Symfony/Doctrine instead of this bundle. According to Doctrine docs about embeddables, they are \"transparent\" to the entity because Doctrine just copy+paste the properties of the embeddable into the parent entity.\nFor that reason I'm closing this issue, but feel free to reopen it if you think we could fix something on our own. Thanks!\n. I wish I could help you, but the error message that you mentioned comes from the Symfony Form component (FormConfigBuilder:validateName()), so I don't know what to do:\n\n. @emmanuelballery thank you very much for fixing this. It's true that it looks like a small change ... but it's GREAT because I don't use Internet Explorer and I would have never discovered this bug! Thanks.\n. @emmanuelballery thank you very much for fixing this. It's true that it looks like a small change ... but it's GREAT because I don't use Internet Explorer and I would have never discovered this bug! Thanks.\n. I'm not an expert on PagerFanta ... but your issue report clearly shows that this is a bug. The solution looks easy and reasonable. I'd say let's fix this. If you even have a pull request for this, it's a no brainer :)  \nBy the way, thanks for the great issue reports your always create.\n. I'm not an expert on PagerFanta ... but your issue report clearly shows that this is a bug. The solution looks easy and reasonable. I'd say let's fix this. If you even have a pull request for this, it's a no brainer :)  \nBy the way, thanks for the great issue reports your always create.\n. Closing it as fixed by #1012.\n. Closing it as fixed by #1012.\n. @yceruto a small change ... but a nice fix. Thank you.\n. @yceruto a small change ... but a nice fix. Thank you.\n. The simplest solution is to create your own AdminController (as explained in \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#customizing-the-behavior-of-list-search-and-show-views) and override the editAction() method just for the Setting entity:\n``` php\npublic function editSettingAction()\n{\n    parent::editAction();\nreturn $this->redirectToRoute('admin', ['entity' => 'Setting', 'action' => 'edit', 'id' => '1']);\n\n}\n``\n. The simplest solution is to create your own AdminController (as explained in \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#customizing-the-behavior-of-list-search-and-show-views) and override theeditAction()method just for theSetting` entity:\n``` php\npublic function editSettingAction()\n{\n    parent::editAction();\nreturn $this->redirectToRoute('admin', ['entity' => 'Setting', 'action' => 'edit', 'id' => '1']);\n\n}\n``\n. :+1:\n. :+1:\n. @emmanuelballery thanks for this fix. I haven't merge it yet because I don't see that missing translation when using the [EasyAdmin Demo application](https://github.com/javiereguiluz/easy-admin-demo) and I'd like to investigate why. Thanks!\n. You are right. I've removed the translation in the demo application (https://github.com/javiereguiluz/easy-admin-demo/commit/dd33ce5f6285906867d10faf8f1049d30f3b9506) and I will now merge this. Thanks for contributing actively in this bundle!\n. @yceruto I've tried putting acontinue;inside theforeach ($entityConfig['search']['fields'] as $name => $metadata) { ... }loop to skip defining anyorWhere()clause and it works as expected: it returns all results. So #611 will probably be fixed by this.\n. @kpicaza did you solve this problem? I cannot reproduce it with EasyAdmin 1.12.4, Symfony 3.0.3 and FOSUserBundledev-master`. This GIF shows how I can delete users from the EasyAdmin Demo application successfully:\n\n. Maybe the problem is related to FOSUserBundle? Keep in mind that I'm using dev-master version of the bundle because it's the only one compatible with Symfony 3.\n. @dayofr nice catch! I hate this kind of errors because they can confuse newcomers a lot. Thank you very much for fixing it!\n. @emmanuelballery it's true that when you don't use the entity name, this forces you to translate it unnecessarily. But some people use the entity name and not the label, so the opposite problem occurs to them. Sadly there is not a solution for everyone. Fortunately, the number of entities is usually not huge and translation their names will be very easy.\nI'm closing this pull request because it seems there is nothing left to do. In any case, thanks for sending this contribution.\n. @Pierstoval thanks for initiating this discussion. I've been thinking about this ... and I don't feel comfortable with the proposed change. That's why I'm closing this as \"won't fix\" for now.\nWe had that chapter in the past ... but we changed everything very recently. I want to give a try to this new documentation to see how it goes. If people complain or if we feel it's not good enough, we'll change it as you propose. Thanks!\n. Yes ... and you already have that. If you want to customize list or show go to that chapter and if you want to customize edit or new go to the other chapter. Besides, I like (at least for now) this distinction because list/show views are very different from edit/new.\n. @jasonkx the \"best\" solution I can imagine for this is:\n1) Decorate the easyadmin.data_collector with your own service (see decorating Symfony services)\n2) Since getEasyAdminParameters() is private, you can override getRequestParameters() and modify the returned data:\n``` php\npublic function getRequestParameters()\n{\n    // here you can add some data to the\n    // $this->data['request_parameters'] array\nreturn $this->data['request_parameters'];\n\n}\n```\n3) Finally, you'll need to override the template of the data collector (see overriding Symfony's bundles templates)\n. I'm glad it worked. I'm closing this as fixed then.\n. In the future (not far future) we'll add this feature: #986  Would that be enough for your case? If not, please tell us what changes are you thinking for the query. Thanks!\n. Closing it as fixed by #986.\n. In the recent versions of this bundle we display a warning message when the __toString() method is missing.\n. @mkalisz77 thank you very much for reporting this issue and for investigating the cause of it. @xabbuh was lightning fast fixing it in #1028 and I've just released the new 1.12.2 version. I hope things work again as expected. Thanks!\n. @xabbuh thank you very much! I suffered this strange bug randomly and I was going crazy. MErging it right away!\n. @mkalisz77 I'm really sorry for this bug. I've fixed it in #1030 and I'll publish a new version of the bundle right away. Thanks for reporting this error.\n. Closing it as fixed by #1030 and available in the latest stable version 1.12.3 which has just been released.\n. @Pierstoval thanks for this nice catch!\n. @MHaendel thanks for reporting this issue. Just asking: would you like to try to submit a pull request for this issue? If you have experience contributing to open-source projects, it will take you just a minute (and I trust you more because I don't use this kind of fields). And if you don't have experience contributing, I can help you through the process.\nIf you don't want to do it or don't have time ... don't worry, I'll do it myself. Thanks!\n. @MHaendel amazing! Thanks for reporting the issue and providing the solution.\n. Merged! Thanks for this contribution.\n. Closing it as (probably) fixed by #1392, which allows to sort results by any property of a Doctrine association.. I'm closing this because in the next version of the bundle (to be released very soon) we're going to change everything related to config processing. I'd like you to test the new code and then, if needed, open a new issue explaining why the new code falls short for your backend and, if possible, proposals to improve it. Thanks!\n. I'm closing this because in the next version of the bundle (to be released very soon) we're going to change everything related to config processing. I'd like you to test the new code and then, if needed, open a new issue explaining why the new code falls short for your backend and, if possible, proposals to improve it. Thanks!\n. @luispabon I suspect which could be the cause of this error. Could you please do a quick test for me? Just delete or comment the line 52 of the DependencyInjection/EasyAdminExtension.php class to remove 'JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\Controller\\\\AdminController', from the list of classes to compile. Thanks!\n. @luispabon thank you very much for confirming the fix. I'm going to release a new stable version of the bundle right away.\n. Closing it as fixed by #1039, which has been included in the new 1.12.4 stable version.\n. As we said when we revamped the templates, we'll keep adding as many Twig blocks as needed to make things easily customizable. So I'm :+1: to this change. Thanks @Pierstoval.\n. This fixes #1037.\n. @nitrique thanks for proposing this feature. I agree that this is commonly needed for backends. The good news is that we'll add this feature in the near future ... but not yet. First we need to finish more basic features and then we need to carefully think about the implementation of this feature (it will support roles not only for menus and entities but also for properties, fields,... We'll also add a security voter, etc.).\nEven if this is something we're going to implement, I'm going to close the issue for now. The main reason is that if someone sees this issue open, he/she might send a PR to fix it ... and we don't want that yet.\nThanks again for proposing this feature!\n. @Yunyun548 I've looked at your EasyAdmin config at everything looks good. The error is caused by our MetadataConfigPass.php (line 36) where we ask Doctrine for the metadata of all the entities. Then Symfony initializes hundreds of things to get that metadata. Among them, your mam.register_listener and mam.mailer services. The last one seems to need the kernel service and makes everything explode :sob:\nThe reason why Symfony initializes mam.mailer when asking for the metadata of some Doctrine entity remains a mystery to me. I'll keep looking for a solution.\n@xabbuh the reason is that anything that can be calculated is calculated during the container compiling phase. This is why the bundle is so fast during execution. Anyway, we do things very late in the compiling phase (because of the second argument of addCompilerPass()):\nphp\npublic function build(ContainerBuilder $container)\n{\n    $container->addCompilerPass(new EasyAdminConfigurationPass(), PassConfig::TYPE_BEFORE_REMOVING);\n    // ...\n}\n. @Yunyun548 passing around the @kernel service is not common at all. If you just need the environment name, pass the %kernel.environment% parameter. However, most of the times you just need to know if debug is enabled or not, so use %kernel.debug% instead.\n@xabbuh my brain is on holidays these days :sleeping: so honestly I can't estimate the amount of work or implications of what you proposed about the cache warmer :grin: \n. @xabbuh thanks for offering yourself to help with this. In any case, I'd like to ask you to please not submit a pull request. The reason is that I'd prefer to not change this compiler pass for now. This is the first report we have about this error and the cause was the use of the @kernel service. I'd say this is an edge case we could happily ignore ... unless we find other error cases.\nFor now I'm closing this error as \"fixed\". @Yunyun548 feel free to reopen it if you find other errors related to this. Thanks!\n. @davialexandre thanks for offering yourself for this. As you said, there are some things that must be thought better. I propose this: I'll submit a PR with the documentation of this new form type so we can discuss about it before implementing it.\n. Closing it as fixed because the autocomplete field has been added in #1071 and it will be available in the next stable release of the bundle.\n. @MHaendel thanks for proposing this feature. I'd like to have this too ... but I don't know how to implement it. Does anyone know if this could be solved in a simple way (without including too much code)? Thanks!\n. Closing it because nobody proposed a solution for this. Sadly this is more difficult than it looks (I mean it's difficult to do it in a general way which works always right for any kind of entities and relations). Anyway, I'm sure that in the future we'll end up implementing it because more people will ask for it and because it's the typical \"rough edge\" which you fix when a project matures. Thanks!\n. @javierrodriguezcuevas thanks for sending this proposal. It's true that we don't show the page numbers ... but we do that on purpose.\nIn my opinion, this information is rarely used and it only adds \"noise\" to the page. For now I prefer to not add this feature. That's why I'm closing this feature request as \"won't fix\". In any case, please keep sending proposals about new features. Thanks!\n. @javierrodriguezcuevas I think it makes sense and (I guess) this shouldn't be too hard to implement.\n. Closing it as fixed by #1048.\n. @javierrodriguezcuevas I like it! The new code is minimal ... but the new feature will be useful.\n. @javierrodriguezcuevas just asking: did you close it to try a new implementation or do you think it's \"impossible\" to fix it? Thanks!\n. @juzefwt thanks for reporting this. You explained it perfectly ... and I agree that this looks like an error (at least a BC break). I'll wait a bit to read other opinions before making the change in case I've missed something.\n. I'm trying to fix this issue in #1061.\n. I've been thinking about this and to me it looks something \"too custom\" for your project. I'm not saying that this feature is wrong or useless. I'm saying that I don't think it would be used on most backends. That's why I'm closing it for now as \"won't fix\". Anyway, as I always tell you, please keep those suggestions coming. Thanks!\n. @javierrodriguezcuevas thanks for contributing this improvement. My only minor comment is that the \"empty\" template used is the standard one ... but users can customize this template globally or per entity. In any case, this is a very edge case that I'm happy to ignore.\n. @javierrodriguezcuevas I'm happy with the current block name. Let's keep it for now and change it only if people complain. Thanks!\n. I agree with this feature request. If someone works on this, his/her work is guaranteed to be merged :)  If not, I'll do it myself when I get the chance. Thanks!\n. I agree with this feature request. If someone works on this, his/her work is guaranteed to be merged :)  If not, I'll do it myself when I get the chance. Thanks!\n. @Skiba260 thanks for reporting this issue. Sadly that old version of EasyAdmin used a custom design which contained some errors. Luckily, in recent EasyAdmin versions, we changed our design to the famous AdminLTE template. The result is a better design with less issues.\nCould you please try to update to a recent version of EasyAdmin and check if errors are gone? Thanks!\n. @Skiba260 thanks for reporting this issue. Sadly that old version of EasyAdmin used a custom design which contained some errors. Luckily, in recent EasyAdmin versions, we changed our design to the famous AdminLTE template. The result is a better design with less issues.\nCould you please try to update to a recent version of EasyAdmin and check if errors are gone? Thanks!\n. @Skiba260 just to make things clear to me: you are using EasyAdmin 1.5.x (which was released 1 year ago) and not 1.12.5-DEV, which will be released in a few days.\n. @Skiba260 just to make things clear to me: you are using EasyAdmin 1.5.x (which was released 1 year ago) and not 1.12.5-DEV, which will be released in a few days.\n. @Skiba260 OK thanks. Then this fix is only for the old version of the bundle. I'll close this issue then because we cannot merge it in our code (we use a completely new template now). Thank you.\n. @Skiba260 OK thanks. Then this fix is only for the old version of the bundle. I'll close this issue then because we cannot merge it in our code (we use a completely new template now). Thank you.\n. @grekpg as @xabbuh said, this is probably because that entity doesn't exist (at least not with that namespace). In any case, even if this is true, I think we need to improve this to output a meaningful error message.\n. @grekpg as @xabbuh said, this is probably because that entity doesn't exist (at least not with that namespace). In any case, even if this is true, I think we need to improve this to output a meaningful error message.\n. @xabbuh yes :grin: \n. @xabbuh yes :grin: \n. @grekpg on the contrary. No need to say sorry. Thanks to you we'll improve this bundle for all users. Thank you!\n. @grekpg on the contrary. No need to say sorry. Thanks to you we'll improve this bundle for all users. Thank you!\n. @xabbuh I'm going to open a RFC issue in this repo to try to find a definitive solution for these issues.\n@grekpg I'm really sorry about this :disappointed: \n. The new version of the bundle, 1.12.5, has been published. Please let me know if the error persists after updating. Thanks!\n. @MHaendel I'm closing this issue because I'm pretty sure is caused by the way we manage backend configuration. The code works 99% of the times ... but it should work 100%. Otherwise, errors like yours will happen.\nWe are trying to solve this in #1060 and I'll propose a pull request for it in the coming days.\n. The new configuration system, which no longer uses compiler passes, is merged in the master branch and it will be available in the next version. Hopefully this error will be fixed then.\n. The new configuration system, which no longer uses compiler passes, is merged in the master branch and it will be available in the next version. Hopefully this error will be fixed then.\n. @xabbuh thank you! You were really fast implementing this improvement.\n. @xabbuh thank you! You were really fast implementing this improvement.\n. @xabbuh while adding a test for this in #1059 I realized that the if (...) check is not enough because Doctrine throws a RuntimeException, so I changed your code a bit to use a try ... catch\n. @xabbuh while adding a test for this in #1059 I realized that the if (...) check is not enough because Doctrine throws a RuntimeException, so I changed your code a bit to use a try ... catch\n. @rubengc don't hesitate to open new issues showing those errors. Please attach a screenshot of the issue and please make sure that are reproducible with the standard CSS theme that we include. Thanks!\n. @rubengc I prefer to keep using pure CSS (+Twig) instead of adding LESS. For complex backends people can set up complex JavaScript-based solutions to generate the assets and then just include the final assets in the backend.\nBy the way, in my opinion LESS has no future because Sass won this battle. All major projects (including Bootstrap) have switched to Sass in their latest versions.\n. @rubengc I'm not sure about that because in my opinion this is a critical mistake: either the entity doesn't exist or you defined the wrong namespace. In either case you must fix those errors.\n. @xabbuh this is the error when I remove the try...catch:\n```\nFailed asserting that exception of type \"ReflectionException\" matches expected exception \n\"Symfony\\Component\\Config\\Definition\\Exception\\InvalidTypeException\".\nMessage was: \"Class ThisBundleDoesNotExist\\Entity\\ThisEntityDoesNotExist does not exist\" at\n/vendor/doctrine/common/lib/Doctrine/Common/Persistence/AbstractManagerRegistry.php:197\n/Configuration/MetadataConfigPass.php:37\n/DependencyInjection/Compiler/EasyAdminConfigurationPass.php:49\n/vendor/symfony/dependency-injection/Compiler/Compiler.php:107\n/vendor/symfony/dependency-injection/ContainerBuilder.php:540\n/vendor/symfony/http-kernel/Kernel.php:477\n/vendor/symfony/http-kernel/Kernel.php:117\n/Tests/DependencyInjection/Compiler/EasyAdminConfigurationPassExceptionsTest.php:34\n```\n. @xabbuh you are right! I totally missed that. Thanks for making the pull request.\n. I've done a super quick test with cache warmers and I'm not sure this would solve our problem.\nThis is the outline of the code:\n``` php\npublic function warmUp($cacheDir)\n{\n    // execute here some complex tasks...\n$this->container->setParameter('easyadmin.config', $processedConfig);\n\n}\n```\nProblem? Symfony shows this message error:\nImpossible to call set() on a frozen ParameterBag.\n. This is what I want:\n- The entire backend configuration in the easyadmin.config container parameter\nWhy?\n- Because processing the entire backend config for every request is not possible because this config can be amazingly complex.\n- Besides, this config is \"static\": it never changes once it's been fully processed\nHow do we solve this currently?\n- With a compiler pass ... but this is very limited because we can't access to the container services.\n. @ogizanagi you are so right! And you even proposed a PR for this: #414  I'll need to review that again very carefully.\n. This is now merged and it will be available in the next version. The compiler pass is gone and replaced by some PHP code + cache warmer + file system Doctrine cache.\n. This is now merged and it will be available in the next version. The compiler pass is gone and replaced by some PHP code + cache warmer + file system Doctrine cache.\n. @Grazulex given the code you showed, the problem is what @rubengc said: you forgot to call $this->em->persist($invoice); If you don't do that, Doctrine won't notice that you want to store this in the database.\nI'm closing this issue as \"fixed\", but if the error persist, please reopen it. Thanks!\n. Adding an autocomplete form field is very high in our TODO list. See https://github.com/javiereguiluz/EasyAdminBundle/issues/1043 for details.\n. Closing it as fixed because the autocomplete field has been added in #1071 and it will be available in the next stable release of the bundle.\n. I'm trying to reduce our backlog of pending issues, so I'm closing this as \"won't fix\". It's true that it may be useful in some scenarios ... but at the same time we already trigger events just before each template rendering (POST_LIST, POST_UPDATE, etc.). @rubengc at the moment nothing works: the data transformation is wrong, the autocomplete can't even make a network request for the Ajax things, etc.\n. Update: @yceruto's idea seems to be working :smile: The basic autocomplete is now working :tada:\n. Update: the feature is now complete and ready to review. The docs have also been updated.\n\nFor now this easyadmin_autocomplete field has zero configuration options. I'm happy with that ... but I'll carefully read your comments and opinions about adding some config options.\n\nNow I'm pinging the people who showed interest in this autocomplete feature so they can share their comments if they want to. Thanks!\nPing @davialexandre @rubengc @yceruto @antondachauer @enekochan\n. @yceruto you are right: all database records were loaded initially. This is fixed in e8c7aef following your recommendation. The problem is that now when the form loads, the value stored in this field is not displayed.\n. @yceruto let me recap the problem.\nUsing $options['choices'] = array(); makes the autoload field work as expected. I've created 20,000 users in the application and the results are crystal clear:\nBefore\n\nAfter\n\nHowever, there are several issues:\n- Initially no value is displayed (although the field stores a value in the database)\n- Clicking on the autocomplete field makes an HTTP request, even if you don't type anything\n- Submitting the form gives you a This value is not valid error.\nIn practice:\n\nDetails about the error:\n\n\nSadly all this is way beyond my limited Form component knowledge :sob: \n. Of course! That would be great. thanks!\n. Closing it in favor of #1071. Thanks @yceruto.\n. I love this kind of PRs that improve the error messages. They truly improve the DX of the bundle. Thanks for contributing this!\n. The new configuration system, which no longer uses compiler passes, is merged in the master branch and it will be available in the next version. Hopefully this and other related errors will be fixed then.\n. Closing it in favor of #1204.\n. I've been thinking about this feature a lot and I'm going to close it as \"won't fix\". My reasoning:\n\nThis would be super useful for the form/edit/new features ... where you can define common things in \"form\" and tweak them in edit/form. The good news is that this feature is already supported and with the proposed syntax. See https://symfony.com/doc/current/bundles/EasyAdminBundle/book/edit-new-configuration.html#the-special-form-view\nFor the other views is not that useful in real backends. To do something quick it would be useful (tell EasyAdmin to display all fields except \"foo\" and bar\") ... but in a real backend you need to configure some options of the fields or at least the order in which they are shown. It's not realistic to let EasyAdmin decide how all fields are displayed.\nIf we introduce this feature in list/search/show ... we'd need a new option (not consistent with form/edit/new) or make a BC break. For example:\n\n```yaml\nthis requires a new option ... not consistent with the rest of the bundle\nfields:\n    exclude: ['id', 'email']\nthis would be a BC break ... add all fields except the ones excluded explicitly\nfields:\n    - '-id'\n    - '-email'\n```\nFor these reasons I'm closing this as \"won't fix\" ... but in future versions of this bundle, where we'll introduce some relevant changes, we can reconsider this decision. Thanks!. @CruzyCruz thanks for proposing this feature. For now I'm going to close it as \"won't fix\" because to me it doesn't look like it's needed for most users.\n\nHowever, I understand that you need this, so I'll tell you the easiest way to solve this that I can come up. Just create a simple template which overrides the head_javascript block of layout.html.twig and use this code:\ntwig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block head_javascript %}\n    {{ parent() }}\n    <script src=\"{{ '[...]/js/' ~ _entity_config.name ~ '.js' }}\" />\n{% endblock %}\nThis will load Product.js file for Product entity, User.js file for User entity, etc.\n. I'm closing this issue because there is nothing we can do. Managing contents in different languages and stored in the database is really a pain with Symfony. Hopefully one day someone will volunteer to improve this situation. Thanks.\n. I made a variable because all this Twig code is ugly and I wanted to make the template easier to read. But obviously you are right and this must be a block to make it \"overridable\".\n. @raistlin super nice catch! Thanks for fixing it.\n. ... and it's merged! One step closer to including autocomplete in the next stable version.\n. First, if you are just adding some JS assets to the backend, there is no need to override the template. Just use the design.assets.js option as explained here.\nIf you really need to override the template, keep reading.\n\nIf I'm right, this is a well known issue/limitation of Symfony bundles. See this issue for details.\nThe solution is to use the EasyAdmin custom override mechanism, which was created precisely to overcome Symfony's problems. This is how you could override the default layout template:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block body_javascript %}\n    {{ parent() }}\n    {# the scripts here #}\n{% endblock %}\n```\nEverything is explained in detail here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#advanced-design-configuration\n. Yes, you need to override the template because of the reasons you said.\nMaybe you missed that section in the docs because we recently revamped it from scratch. Docs should be more stable from now on.\nAnd don't worry for being a \"noob\". First, you probably are not. Second, we love when users of any level (beginners, experts, etc.) try this bundle. Their questions, comments, problems and ideas are very different ... and we need them all to keep improving. Thanks!\n. As you said, currently is not possible to do it. Luckily the solution is a bit annoying but not super verbose. Something like this:\n``` yaml\n...\n\n{ property: 'updatedAt', template: 'carbon.html.twig' }\n```\n\nAnd then define the app/Resources/views/easy_admin/carbon.html.twig template.\n. @bassrock how are those properties mapped in your entities? Which data type do you use?\n. @bassrock forget my last comment ... you said that you've defined a custom data type which extends datetime.\n. I'm closing issue this because we are not planning to add this feature soon. Anyway, we'll revisit this decision in the future. Thanks for helping us proposing new features!\n. @SebTM this is a very nice feature request ... and we're already discussing about it. See #986 for details. Hopefully we'll implement it sooner than later. Thanks!\n. I'm closing this issue to avoid duplicated issues. We're discussing about this feature in the mentioned PR, so we'll ultimately implement it. Thanks!\n. @matudelatower nice catch! Thanks for reporting this error. It's being fixed in #1099.\n. @matudelatower thanks again for reporting documentation errors! This one is being fixed in #1102.\n. @SahnounM91 EasyAdmin doesn't include any security feature because it relies on Symfony for that. In other words, if you can't access to the backend is because of the Symfony Security feature.\nThe solution to this problem depends completely on your security configuration. Maybe you are requiring that users have a special ROLE which your current user doesn't have. Maybe you forgot to add the /admin URL to the access_control or its regular expression contains some error. I'm afraid that without more details about your config we can't know the exact reason.\n. Your security and routing config looks correct. My guess is that you are not accessing with a user with the required ROLE_ADMIN role. To check this, uncomment the following line in security.yml:\n``` yaml\napp/config/security.yml\nsecurity:\n    access_control:\n        # ...\n        # - { path: ^/admin/, role: ROLE_ADMIN }  <-- COMMENT THIS LINE\n```\nNow try to access the backend. Everything should work.\n\nNow, how can you enable security and make the backend work? If you don't have any users in the system, create them with a script or with the fos:user:create console command. If you have some users, make sure that in the form login you are entering the username/password of a user with the ROLE_ADMIN role. Otherwise, you won't be able to access.\nIn case it's useful, the Symfony Demo application uses FOSUserBundle and protects the access to the backend in the same way you want to achieve.\n. If you click on the username in the Symfony Toolbar, you'll see all the information of the user, including their roles. Check if ROLE_ADMIN is there. This can be the only reason for the original problem, because the rest of the configuration looks perfect!\n. I'm closing this issue as \"fixed\" but if other errors persist, feel free to reopen it. Thanks!\n. I would implement a custom AdminController to override the preRemove() method for the User entity and I'd do the check there (for example, if the user has a ROLE_ADMIN role, don't allow to delete it).\nThis kind of behavior customization is explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customizing-the-behavior-of-edit-and-new-views\n. I'm closing this issue as \"fixed\". However, if the provided solution doesn't work, feel free to reopen it to ask for more info. Thanks!\n. Just create the flash message and return the user to the list action of the same entity:\n``` php\npublic function preRemoveEntity($entity)\n{\n    if ($entity->hasRole('ROLE_ADMIN')) {\n        $this->addFlash('error', 'You cannot delete admin users.');\n    return $this->redirectToRoute('easyadmin', ['action' => 'list', 'entity' => $this->entity['name']]);\n}\n\n}\n``\n. I've investigated this issue a bit more and it's indeed a bug. You cannot prevent entity removal unless you override the entiredeleteMethod()or use events. I'm going to think about how to solve this issue.\n. I've investigated this issue a bit more and it's indeed a bug. You cannot prevent entity removal unless you override the entiredeleteMethod()` or use events. I'm going to think about how to solve this issue.\n. This will be finally possible in the next stable version thank to this feature #1679 which is documented in #1987. Closing as fixed then.. @Eng3l two quick comments:\n1) Before executing any controller, EasyAdmin initializes some properties with useful config values. For instance, $this->entity returns the config of the current entity. So you can get the class and other useful info without executing the get_class() and explode() logic.\n2) This problem seems related to how Doctrine works. In this article they explain it well: http://doctrine-orm.readthedocs.org/projects/doctrine-orm/en/latest/reference/working-with-objects.html#entities-and-the-identity-map  If you look for an entity which has already been looked for before ... you get the same object because Doctrine doesn't look for in the database again. If you make changes to the entity, you get the modified entity and not the original entity stored in the database.\n. @Eng3l even better than that. There is a way to tell Doctrine to show the changes of a given entity, which is what you really need. Here it's an example: http://stackoverflow.com/a/9057705/2804294  and here it's explained a bit more: http://doctrine-orm.readthedocs.org/projects/doctrine-orm/en/latest/reference/unitofwork.html\n. @Pierstoval I don't fully understand your problem. Please give me more details. In any case, I released the 1.12.7 tag but deleted it very quickly (for other reasons). So this is merged but not released yet.\n. @Pierstoval have you tested the code in your applications? I'm asking this because the condition we use:\nphp\nif ('' === trim($this->request->query->get('query'))) { ... }\nIf you redirect to the search action, the query won't be set, so the condition won't match. This only matches when you click on Search button and the input text is empty.\n. @yceruto damn! Another solution may be to remove the trim() and only care for the case when the search query is really empty and forget about the query which is a bunch of white spaces\n. @yceruto @Pierstoval see #1111 for the proposed tweaks. Thanks!\n. @ogizanagi when I change anything in the dev env, the backend is updated without clearing/warming the cache. I need to test it better, but it seems to be working.\nAbout Doctrine ... let me first finish this and then we'll see if the other option is better.\n. @ogizanagi in the unit tests it's true that the cache must be cleared for each tests (see this ugly code here: https://github.com/javiereguiluz/EasyAdminBundle/pull/1107/commits/44b59d409837a54f921664a29478105be04480d4#diff-e642e792947da78a4698b302a0bba9d3R39)  Otherwise the first loaded config is cached and reused for every test.\n. @ogizanagi I'm a bit lost. I need ideas to solve this in a better way. Thanks!\n. @ogizanagi your proposal is infinitely better than my original proposal \ud83d\ude47 \ud83d\ude47 \nI've implemented it in 636b663  It's WIP but it should be almost definitive. I'll fix tests now. Two comments:\n- easyadmin.configurator service (and class) disappear in favor of easyadmin.config.manager (and there's a new easyadmin.cache.manager too)\n- I've injected service_container into easyadmin.config.manager because otherwise I was getting circular service exceptions. By the way, we were injecting 4 services and 3 parameters individually ... so injecting the whole container is not worse at all ... but I'm open to suggestions of course!\n. @ogizanagi this is one of the messages I saved about the circular service error:\n[2016-04-23 16:14:25] request.CRITICAL: Uncaught PHP Exception \nSymfony\\Component\\DependencyInjection\\Exception\\ServiceCircularReferenceException:\n\"Circular reference detected for service \"easyadmin.config.manager\",\npath: \"easyadmin.config.manager -> twig\".\" at easy-admin-demo/var/bootstrap.php.cache\nline 2081 {\"exception\":\"[object] (Symfony\\\\Component\\\\DependencyInjection\\\\Exception\\\\ServiceCircularReferenceException(code: 0): \nCircular reference detected for service \\\"easyadmin.config.manager\\\", path: \n\\\"easyadmin.config.manager -> twig\\\". at easy-admin-demo/var/bootstrap.php.cache:2081)\"} []\n. @ogizanagi I have a big problem which I cannot solve. I'm going crazy. In this test there is a problem with these lines. I'm using a data provider to load +150 different configurations. Well, only the first configuration is loaded correctly. After that, the rest of configs are ignored, and the kernel always returns the same config. It seems like the $app variable is created once for the test suite and reused it after all. Is a PHPUnit issue? Is a Symfony issue? Is something I did wrong? I'm so stuck at this!!!! \ud83d\ude21 \ud83d\ude21 \n. @ogizanagi about my previous comment, if I add this line:\nphp\n$configuration = Yaml::parse(file_get_contents($backendConfigFilePath));\n$app = new \\DynamicConfigLoadingKernel($configuration['easy_admin']);\n$app->boot();\n$backendConfig = $app->getContainer()->get('easyadmin.config.manager')->loadConfig();\necho md5(serialize($backendConfig)); // <-- I've added this line\nThe result is always the same, so the kernel always return the same config ... but we are using a data provider and the original config is different each time!!!!!!\n. This is crazy! I've added this in the kernel which loads the config:\n``` php\n    public function registerContainerConfiguration(LoaderInterface $loader)\n    {\n        parent::registerContainerConfiguration($loader);\n    $backendConfig = $this->backendConfig; // needed for PHP 5.3\n    $loader->load(function (ContainerBuilder $container) use ($backendConfig) {\n\nvar_dump(\"LOADING THIS CONFIG -->\", md5(serialize($backendConfig)));\n            $container->loadFromExtension('easy_admin', $backendConfig);\n        });\n    }\n```\nAnd this is the output of PHPUnit:\n\nEven if we are executing a data provider with 168 different configs ... Symfony/PHPUnit/our tests only instance the kernel once!\n\ud83d\ude31 \ud83d\ude31 \ud83d\ude31 \n. Update if I add this at the end of the test:\nphp\nexec('rm -fr '.$app->getContainer()->getParameter('kernel.cache_dir'));\nIt loads each config correctly:\n\n. @ogizanagi thank you very much for the info! Right now I'm solving it just by deleting the class of the container, because it's faster than removing the entire cache dir:\nphp\nunlink($app->getContainer()->getParameter('kernel.cache_dir').'/AppTestDebugProjectContainer.php');\n. After tens and tens of hours of exasperating work on this PR, tests finally were fixed \ud83d\ude0c  I'm merging it because it's impossible to review due to all the test fixtures changes. In any case, the main changes are simple: the compiler pass is gone, the config is processed in the new ConfigManager class and performance is good in production thanks to a cache warmer + filesystem cache.\n@ogizanagi thanks for your great help. I couldn't make it without you \ud83d\ude47 \n. After tens and tens of hours of exasperating work on this PR, tests finally were fixed \ud83d\ude0c  I'm merging it because it's impossible to review due to all the test fixtures changes. In any case, the main changes are simple: the compiler pass is gone, the config is processed in the new ConfigManager class and performance is good in production thanks to a cache warmer + filesystem cache.\n@ogizanagi thanks for your great help. I couldn't make it without you \ud83d\ude47 \n. @jxamorro sorry I didn't reply earlier. Can you try to set the type of the jugadores property explicitly?\nyaml\neasy_admin:\n    entities:\n        Grupo:\n            show:\n                fields:\n                    # ...\n                    - { property: 'jugadores', type: 'association' }\n. Forget about my previous idea! Now I really see the problem: this is a virtual field, which is more complex than usual because it returns a collection of fields. These two solutions should work:\n1) Create your own template to display this field. You just need to add the template option for the jugadores field and then create that template anywhere you like in your application.\n2) Apply the same solution as in 1) ... but instead of creating your own template, reuse the default field_association.html.twig template used by EasyAdmin. This is more a \"hack\" than a solution, but you could give it a shot. The config should be:\n``` yaml\n...\n\n{ property: 'jugadores', template: '@EasyAdmin/default/field_association.html.twig' }\n``\n. I think there is a misunderstanding: in EasyAdmin we have some read-only views (list,show, they are explained [here](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md)) and others which are read-write (editandnew`, they are explained here).\n\nThe types you mentioned (toggle, boolean, smallint, etc.) are for displaying information in read-only views. But in this example, you are configuring the fields for the form, which corresponds to read-write views.\nIn this case, you must use any valid Symfony Form type (here it is the full list). Specifically, if you have a \"boolean\" field, you must use choice as the form type.\n. @NodokaMurmevent no worries! These things happen \ud83d\ude04 \n. @Pierstoval I've tested this and it should work as you expect. I'm going to merge to be able to finally release the new version of the bundle. If you find any error in your apps, rest assured that we'll fix it as soon as possible.\n. @ismailbaskin thanks for keeping the Turkish translation updated! Te\u015fekk\u00fcr ederim\n. This feature is not included out-of-the-box in the current version of EasyAdmin. The good news is that we are planning to introduce a config option to define the DQL of the search query to perform. This will solve most of the problems and it will allow to perform very complex search queries.\nMeanwhile, the solution is to override any of the methods related to the search feature. The overall explanation about how to do this is here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#customizing-the-behavior-of-list-search-and-show-views  and if you check out the source code of the AdminController class you'll find all the methods you can override.\n. Chaging the $searchableFields won't work. You need to override the entire logic to make the actual Doctrine Query yourself. At the moment I can't give you more specific details, but I'll do later.\n. This issue can be solved by overriding the method which creates the \"Doctrine query builder\" used to search Product entities. To do so, create your AdminController as explained in the docs and then add this method:\n``` php\n<?php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    // ...\npublic function createProductSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null)\n{\n    /** @var DoctrineQueryBuilder */\n    $queryBuilder = $this->em->createQueryBuilder()\n        ->select('entity')\n        ->from($entityClass)\n        ...\n        ->setParameters(...)\n        ->orderBy('entity.'.$sortField, $sortDirection ?: 'DESC');\n    ;\n}\n\n}\n```\nInside this method you can use any Doctrine feature you want to create the query builder. So you can add joins with the category tables if needed to look for in those fields too.\n. This issue can be solved by overriding the method which creates the \"Doctrine query builder\" used to search Product entities. To do so, create your AdminController as explained in the docs and then add this method:\n``` php\n<?php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    // ...\npublic function createProductSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null)\n{\n    /** @var DoctrineQueryBuilder */\n    $queryBuilder = $this->em->createQueryBuilder()\n        ->select('entity')\n        ->from($entityClass)\n        ...\n        ->setParameters(...)\n        ->orderBy('entity.'.$sortField, $sortDirection ?: 'DESC');\n    ;\n}\n\n}\n```\nInside this method you can use any Doctrine feature you want to create the query builder. So you can add joins with the category tables if needed to look for in those fields too.\n. Closing this old issue as \"fixed\". I even recently added an example of this to the EasyAdmin Demo App: https://github.com/javiereguiluz/easy-admin-demo/commit/5b5bc81070e74e4eeeb62cd8a3d6c28fb086b998\n. @ktrzos thanks for bringing this issue up for discussion. Sadly I don't know how to fix this. But the good news is that I was going to create an issue to openly discuss about improving the design of collections.\nThe numeric label of each collection item is awful. In your case it looks horrible because each collection item is huge. But when the collection is very simple, like in the EasyAdmin Demo app, it looks horrible too:\n\nI want to revamp this completely to make it look beautiful.\n. I like your idea but it's impossible for me to implement it. I don't understand the Symfony Form component and I don't have time to fight with it. Someday in the future we'll improve this (because it's in our public Roadmap) but it won't be fixed soon. I'm sorry and I hope you understand it. Thanks!. I like your idea but it's impossible for me to implement it. I don't understand the Symfony Form component and I don't have time to fight with it. Someday in the future we'll improve this (because it's in our public Roadmap) but it won't be fixed soon. I'm sorry and I hope you understand it. Thanks!. Let's try to fix the origin of this error: you click on \"Add another item\" and nothing happens. Could you please check with your web browser inspector if a JavaScript error is happening in the background? Thanks!\n. In the latest version of EasyAdmin we changed the web assets (CSS and JS files). Instead of loading multiple small files, we now load 1 big CSS file and 1 big JS file. If you open the source code of your pages, you should see this i the <head>:\n\nIf those links are present, click on any of them to see if the CSS or JS contents are correctly loaded. If not, the assets:install command didn't work properly. This is generated automatically after doing a composer update, so this should have been executed.\nIf not, please execute by hand the assets:install command and see if any error happens and check that the web/bundles/easyadmin/ directory contains the mentioned CSS and JS files.\n. I'm glad the CSS issue was gone. I'm not sure which piece should we blame here (Windows, Symfony or  this bundle). I'm closing this issue as \"fixed\" ... but I'll keep an eye on this kind of asset-related errors. Thanks!\n. I'm glad the CSS issue was gone. I'm not sure which piece should we blame here (Windows, Symfony or  this bundle). I'm closing this issue as \"fixed\" ... but I'll keep an eye on this kind of asset-related errors. Thanks!\n. @rubengc this looks really impressive!!  Sadly I have bad news: due to an infinite amount of pending work, I'm going to stop for a while working on big new features for this bundle. I'll focus on minor things and fixing reported bugs.\nIn any case, your GIF contains tens of good ideas besides the association select and I like most of them. So, I'm going to try to \"steal\" some of those ideas in the future. Thanks!\n. Sadly I won't be able to implement this feature and we need a clean backlog to start working on the next major version of this bundle, so I must close it. I'm really sorry but I hope you understand it. Thanks!. @ahmed-bhs @tikumo it's not the same, but @yceruto is improving this bundle to allow creating entities while editing others. See https://github.com/EasyCorp/EasyAdminBundle/pull/2164.. Maybe there was a problem with the web assets of the bundle? We now load 1 CSS file and 1 JS file with all the assets. If you execute ./bin/console a:i --symlink everything works OK?\n. Or maybe not \ud83d\ude31\nIf you view the source code of the page, do you see the correct CSS link in the <head>?\n\nAnd if you click on that CSS, do you see its contents?\n\n. I don't know what to say ... asset:installs just copies whatever the bundles stores in Resources/public/. If there is some error copying those files, you should see an error message. This is very strange.\n. In the MapBundle\\Entity\\Marker entity you must add a __toString() method. It's explained a bit more in a NOTE in this section of the docs: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-properties-displayed\nI'm closing it as fixed, but if the error persist, please reopen it. Thanks!\n. In the MapBundle\\Entity\\Marker entity you must add a __toString() method. It's explained a bit more in a NOTE in this section of the docs: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-properties-displayed\nI'm closing it as fixed, but if the error persist, please reopen it. Thanks!\n. @zboina thanks for this proposal. This is definitely something we want to add ... but we'll do it in the future. We've received other issues asking for batch actions and global actions, so I'm going to close this as \"duplicated\". But do't worry because we won't forget about this. Thanks!\n. I'm afraid I must close this because we're not going to implement this feature soon and I want to clean our backlog as much as possible so we can focus on making this bundle compatible with Symfony 3.4/4.0 and start working on its new version. I hope you understand this. Thanks!. I'm afraid I must close this because we're not going to implement this feature soon and I want to clean our backlog as much as possible so we can focus on making this bundle compatible with Symfony 3.4/4.0 and start working on its new version. I hope you understand this. Thanks!. @Talv I like this idea. I can't promise to implement it soon, but I think I will do eventually.\n@ktrzos good comment ... but bad example \ud83d\ude04  The CSS class (and the icon) can already be customized for the actions. See https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/5-actions-configuration.md#customizing-the-actions-displayed-in-each-view\n. @Talv I like this idea. I can't promise to implement it soon, but I think I will do eventually.\n@ktrzos good comment ... but bad example \ud83d\ude04  The CSS class (and the icon) can already be customized for the actions. See https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/5-actions-configuration.md#customizing-the-actions-displayed-in-each-view\n. A bit late ... but here is the pull request that implements this feature: #1345.\n. A bit late ... but here is the pull request that implements this feature: #1345.\n. Instead of a bug it's a \"feature\" because of the default values of the list action. In any case, before fixing this, I'd like to know what is the purpose of this action. You are in the list action , so when you click on a link to the list action, what will happen?\n. @ktrzos in #1173 I've made a minor change to solve this issue. The label will still be \"wrong\" because we need it to display \"Back to listing\", but you can easily tweak that.\n. @ccab we don't have a config option to change the sidebar menu to a top menu ... and we don't plan to add it. The good news is that the template we use (AdminLTE) already supports this feature. Here it is an example: https://almsaeedstudio.com/themes/AdminLTE/pages/layout/top-nav.html\n. I'm closing as \"won't fix\" for now, but hopefully this is doable thanks to the AdminLTE template options.\n. \ud83d\udc4d I think this makes a lot of sense. Thanks!\n. @vrobic thanks for this nice change! It will be available in the next stable version of the bundle. Cheers!\n. According to the changelogs, support for URLs, telephones, etc. was added in 1.12.6 version and you are using the previous version: https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.12.6\n. According to the changelogs, support for URLs, telephones, etc. was added in 1.12.6 version and you are using the previous version: https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.12.6\n. About sorting relationship fields, it's something that we don't support ... and I don't think we'll support it soon either.\n. About sorting relationship fields, it's something that we don't support ... and I don't think we'll support it soon either.\n. @martixy maybe sometimes we release new versions too fast ... but we prefer to release lots of small versions instead of few huge versions (which usually introduce errors and break apps).\n. @martixy maybe sometimes we release new versions too fast ... but we prefer to release lots of small versions instead of few huge versions (which usually introduce errors and break apps).\n. @ktrzos I make the GIFs with a free tool called LICEcap: http://www.cockos.com/licecap/\n. I've made some further tweaks to the sidebar. The changes are subtle but I think that the overall design is better now. As a bonus, the menu dividers are now displayed as straight separator lines when collapsing the sidebar:\n| Sidebar normal | Sidebar collapsed |\n| --- | --- |\n|  |  |\n. @ktrzos very nice catch! This bug has been fixed in #1151. And your GIF was truly useful ... but beware that making GIFs is very addictive \ud83d\ude01 \n. I'm checking this issue:\n1) In our form template we do this:\ntwig\n{% block easyadmin_autocomplete_widget %}\n    {{ form_row(form.autocomplete, { label: false, ... }) }}\n{% endblock %}\n2) In theory, when the label is false, Symfony's default form theme doesn't display it:\ntwig\n{%- block form_label -%}\n    {% if label is not same as(false) -%}\n        ...\n    {% endif %}\n{% endblock %}\n3) The problem is that the label value is null and not false:\n\n\nIf we set the label to false explicitly, why is turned it into null automatically?\n. @forsetius don't worry about the size of the bug. We appreciate any fixed bug. Besides, small changes are great to start contributing. And don't worry if you make any mistakes during the contribution process. That's a great way to learn and we'll help you in any way you may need.\n. @forsetius great! Just a comment for future contributions: for small bugs it's OK to send a pull request, but for requesting features is better to open an issue so we can discuss about it instead of trying to create a feature request for that new feature. Thanks!\n. @forsetius thanks for reporting this bug in detail. Thanks for offering yourself to fix this!\n. @forsetius you did everything great and this pull request is ready to be merged!\nDon't worry about the failures in the tests. I will update this myself later because I have another pending pull request which will make changes related to this. In short: it's not your fault and everything is OK :)\n. @gui-don in the current version of this bundle we still use a CompilerPass to process the backend configuration. If no database exists yet, you'll see an error when booting the application. That's why your tests fail.\nIn the next version of the bundle (or in the current dev-master version) we removed the compiler pass and we now use a cache warmer and a more friendly way to process the backend configuration. My guess is that your problems will be solved automatically. It'd be great if you could check if installing the dev-master version solves your issue. Thanks!\n. I'm glad the error was fixed!  I'm closing this as fixed because the new version will be released very soon.\n. I'm glad the error was fixed!  I'm closing this as fixed because the new version will be released very soon.\n. @arijmachfar please update the description of your issue to write it in English. Otherwise we won't be able to help you. Thanks!\n. Closing it in favor of #1136.\n. @arijmachfar much better in English. Thanks!\nI have a question: you say \"I want to include and show this in the menu of my project\". Do you mean that you want to display in the menu a link to the backend when the user is an administrator?\n. This is how you check if the user is an admin and show a link to the EasyAdmin backend:\ntwig\n{% if is_granted('ROLE_ADMIN') %}\n    <a href=\"{{ path('easyadmin') }}\">Admin</a>\n{% endif %}\nIf you are using an old Symfony version, use this code instead:\ntwig\n{% if app.user and is_granted('ROLE_ADMIN') %}\n    <a href=\"{{ path('easyadmin') }}\">Admin</a>\n{% endif %}\n. I'm closing this as \"fixed\". @arijmachfar if you still have some problems with this, maybe it's better to ask on http://stackoverflow.com/questions/tagged/symfony2-easyadmin  where more people can see your question and help you. Thanks!\n. @forsetius thanks for bringing up this discussion because these days I've been mulling about this. The change I was going to propose was, once again, originated by this issue created by @rubengc. See this screenshot:\n\nI think it would be better to always display the full logo (+name, +icon, +everything) and change how the sidebar toggle works. In the position where today we show the first letter of the logo, we would show the sidebar toggle. What do you think about this?\n. First, thank you for your comments and for providing screenshots and GIFs to better compare them. That's great!\n@forsetius what I don't like about this proposal is that the handle looks \"out of place\" and that the clickable surface is very small (that always annoys users!)  By the way, I don't understand the issue about the menu icon, could you please post a screenshot? Thanks!\n@davialexandre I don't understand why in the Desktop version the toggle icon is very small and faded at the bottom ... but in the header they show a huge icon which I'd definitely click to toggle the sidebar. I'm not fan either about having different toggle patterns in desktop/mobile ... even if they are very different mediums.\n\nI'm going to post some examples of popular products which use a similar design as the one proposed in this PR.\nGmail (in tablets):\n\nGoogle Adsense:\n\nAtlassian Jira:\n\nYouTube:\n\n. @forsetius you are right about the movement of the backend title. But we do this to achieve perfect alignment in both position: normal and collapsed.\nIn normal position, the title is aligned with the menu items:\n\nIn collapsed position, the title is aligned with the page title:\n\nWe can't do this if we don't move the title. It may be annoying ... but keep in mind that this movement won't be triggered continuously. In the past we toggled the sidebar when you put the mouse hover it. But now we no longer toggle it. So most people will never see the movement. They'll toggle the sidebar and it will stay there forever.\n. I've made some more tweaks. The toggle icon is now aligned too and the movement of the backend name is done with a smooth transition:\n\n. At the end I've merged this as it is because otherwise we'll keep discussing forever. Now that it's merged, it will be easier for people to try it and I'm sure they'll create issues if they don't like something about it. Thank you all for the discussion. It was really insightful!\n. I haven't had time to think about this yet. However, I'd like to tell you that the next version of the bundle will change config management completely. Instead of a compiler pass, we'll use a cache warmer, a Doctrine Cache store and simpler methods to get the configuration.\nOnce we release the new version, we can talk again about this and see how can we help you. For now it's better to not create a pull request and keep discussing in this issue. Thanks!\n. I'm closing this issue as \"won't fix\" for two reasons:\n1) We've always said that granular security is not integrated in the bundle yet (it's in our roadmap). We even recommend to use SonataAdmin for those backends in which granular security is a must.\n2) It's already possible to do this thanks to the Symfony features. Using service decorators you can change the behavior of the easyadmin.config.manager service and therefore, you can change the config dynamically. Since that service receives the service_container you have access to the security (the current user) and to the request stack (to get the full request parameters).\nThanks for understanding it.. There's no plan to extract any part as a component \ud83d\ude1e The reason is that it would complicate maintenance and our resources are very limited. I understand your need though, so I wonder if we could do some (minor) changes that would ease your work.\n. I'm closing this issue because, as mentioned, we don't plan to make this change. It's sad because I appreciate you and I'd like to help you ... but at the same time we need to be disciplined and keep our focus. Thanks!\n. I'm not sure I understand your question. To extend from the original bundle layout you can use:\ntwig\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n. I'm closing this as fixed, but if this didn't solve your problem, please reopen it. Thanks!\n. We don't plan to add that option by default because it's not very common. But this should be doable (and not hard at all) with a custom action, as explained in this tutorial.\n. I'm closing this as \"fixed\", but if you find any issue while creating your custom action, please open an issue. Thanks!\n. That's right. Defining your own AdminController is explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customizing-the-behavior-of-edit-and-new-views  It requires you to create 1 controller and make 1 change in the routing file.\n. We need the 1.5 constraint because 1.6 requires PHP 5.5 and or bundle works with PHP 5.3. My guess is that we could replace this:\njson\n\"doctrine/cache\" : \"1.5.x\",\nby this:\njson\n\"doctrine/cache\" : \"~1.5|~1.6\",\nBut I need to test it.\n. @zboina this is one of the situations where this bundle has to make a compromise. Since our config is based on YAML, there are some dynamic features we cannot configure. In those cases, we use PHP to complement the YAML config.\nSpecifically, you need to create a simple controller to override the default one (this takes less than a minute) and then add the needed methods to redefine some behavior. In this section of the docs everything is explained in more detail: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customizing-the-behavior-of-edit-and-new-views\nPS: the solution from @pomporov may also work ... but when you need a truly dynamic behavior, you'll need to use some PHP code.\n. @xabbuh thanks for always solving our Composer problems! \ud83d\ude47 \n(Test errors are unrelated)\n. I know that there are some guys who have done something like that (@rubengc probably). This is how you should do it:\n1. Define a custom \"editAjax\" action, display it in the \"list\" view and remove the default \"edit\" action\n2. Override the default \"list\" template and make use of the built-in Bootstrap CSS and JS to make the modal\n3. Use an \"iframe\" in the modal to open the \"editAjax\" action, which will need to extend from a new \"layout\" to remove the header and navigation\n4. Then add more JavaScript magic in the overridden \"list\" template because you have to update in real-time the listing to show the updated information, not the old one\nIn summary, this is a lot of work and in my opinion the gain is negligible. Yes, the modal window with a form seems handy, but if the form is not very simple, the modal window will be very inconvenient and it's better to see the form in a full-width page.\nBesides, in most situations the user won't save a lot of time because the backend is already very fast, so a page refresh is not something to avoid.\nI strongly recommend you to not do this ... but if you really need it, maybe it's better to check out if SonataAdminBundle has better support for Ajax actions.\n. My recommendation would be to forget about the full calendar view and use instead a regular datepicker to select the date.\nOtherwise, you'll need to:\n1. Override the edit template for the Event entity (this is very easy)\n2. Apply some JavaScript to open a modal window with an <iframe> which loads the edit view of the Event entity and to close it when the user clicks on the Save changes button (this is easy too)\n3. Lastly, you need to tweak your overriden templates to remove all the things that shouldn't be displayed in the modal window, such as the header, the menu, etc. (this could be a bit tricky)\n. My recommendation would be to forget about the full calendar view and use instead a regular datepicker to select the date.\nOtherwise, you'll need to:\n1. Override the edit template for the Event entity (this is very easy)\n2. Apply some JavaScript to open a modal window with an <iframe> which loads the edit view of the Event entity and to close it when the user clicks on the Save changes button (this is easy too)\n3. Lastly, you need to tweak your overriden templates to remove all the things that shouldn't be displayed in the modal window, such as the header, the menu, etc. (this could be a bit tricky)\n. I'm closing this because for now we \"can't\" do more on our side. Ajax is possible in theory but it's not a feature guaranteed to work easily with the bundle. We may change that in the future, but for now we are not going to change this. I'm sorry!\n. Thanks for completing this translation! Muito obrigado\n. @HeahDude thanks ... but EasyAdmin won't be the name of the organization :)  And yes, the transfer of repos in GitHub is transparent and everything works. But here we're talking about the code namespaces, so I'm not sure about that.\n. Closing it because it seems that nobody can come up with ideas to solve this. In any case, this will change for the next major version, so it's a matter of time to get this fixed.\n. This issue is really strange and I can't reproduce it. In fact, the EasyAdmin Demo application uses labels in some forms and fields don't change from input text to textarea \ud83d\ude15 \n. This issue is really strange and I can't reproduce it. In fact, the EasyAdmin Demo application uses labels in some forms and fields don't change from input text to textarea \ud83d\ude15 \n. The solution that it could work is to define the field type explicitly to text, so it doesn't use textarea:\nyaml\nedit:\n  # ...\n  fields:\n        - { property: 'NAME', label: 'admin.user.label.name', type: 'text' }\nBut doing this is very boring.That's why EasyAdmin uses the guessing mechanism of Symfony to guess the best type for each property. In your case the backend guesses textarea for these properties. This is probably because in your entity these properties are mapped in Doctrine as text instead of varchar (Doctrine text = Form textarea and Doctrine varchar = Form input text).\nAnother thing that disturbes me is the use of uppercase in the entire property names. Does this really work as expected?\n. Let's close this old issue because there is no more feedback.\n. @pomporov I want to improve this ... but I need more time to do it.\n. I'm sorry but I'm closing this old issue as \"won't fix\". The reason is that this is one of those occasions were the YAML simplicity is a problem. The solution should be to move this logic to PHP as explained by @yceruto. Thanks for understanding it.\n. @appyapp I'm sorry about this issue. I've never experienced anything similar ... but once we got a report from some user who suffered this. The good news is that the next stable version of the bundle (to be released very soon) has changed completely the wat we process configuration. This has solved some issues for some people and it may help here too.\nAs a side comment, it looks like this error is because of the \"template cache warmer\", which compiles all the Twig templates when you do a cache clear with a warm up. Have you tried to disabled this bundle and see if the error persist? Thanks!\n. In AdminController we store the request object in $this->request property, so you can do $this->request->get('id_parent') in the controller you used to override the default AdminController.\n. If you only want to override for Category action, you can create your own AdminController and then define the method prePersistCategoryEntity(). In that method you can put your own logic, but reuse the properties we provide to make things easier: $this->request, $this->em, etc.\n. @forsetius thanks for reporting this issue. You are right ... but I can't understand why this happened. In Packagist the new version didn't appear automatically (as usual) so I forced the version update manually. It should be fixed now. Thanks!\n. @forsetius thanks for this proposal! I agree with it. You don't usually need to apply CSS to the listings, but centering text is a perfectly valid example to do it.\n. @forsetius I like it! What do you think about applying the same CSS class to the <th> cell too? (In the line 106 of the same file).\n. Let's close this as \"won't fix\" and keep things as they are now. Thanks for the comments.. I've read the docs of the CKFinder bundle that you mentioned and I can't see the (step 3). Is it really mandatory? If not, the integration would be as easy as creating a small JavaScript file and loading it in your backend with the design.assets configuration option.\nIn any case, are you proposing that we update the tutorial about integrating CKEditor and EasyAdmin to mention this CKFinder too?\n. I've created #1588 to add your updated code. Thanks!. @forsetius yes, @joazvsoares is right: Symfony doesn't load services.xml files automatically. Be careful with that.\n\nAnother idea to not override the original service. Why don't you override the indexAction() method in your own AdminController and check there if the action is enabled for the current user? In indexAction() you can easily access everything: the full config, the user information, the request, etc.\n. About changing the visibility of some methods, we haven't made a decision yet. About extending the ConfigManager to create some sort of dynamic config, it's already possible using Symfony service decorators, as explained in this comment: https://github.com/javiereguiluz/EasyAdminBundle/issues/1139#issuecomment-263071601. About changing the visibility of some methods, we haven't made a decision yet. About extending the ConfigManager to create some sort of dynamic config, it's already possible using Symfony service decorators, as explained in this comment: https://github.com/javiereguiluz/EasyAdminBundle/issues/1139#issuecomment-263071601. I need ideas from the community to help me solve a very strange issue:\n1) After applying this PR, the demo application keeps working as usual.\n2) Travis says that tests pass for this PR\n\n3) However, in my local computer tests are a mess:\n\n\nI'm getting errors like this one:\n\nThis is the full text stack trace:\n```\n[1] InvalidArgumentException: The controller for URI \"/admin/\" is not callable. Class \"JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController\" does not have a method \"__invoke\".\n    at n/a\n        in EasyAdminBundle/vendor/symfony/http-kernel/Controller/ControllerResolver.php line 79\nat Symfony\\Component\\HttpKernel\\Controller\\ControllerResolver->getController(object(Request))\n    in EasyAdminBundle/vendor/symfony/http-kernel/Controller/TraceableControllerResolver.php line 46\n\nat Symfony\\Component\\HttpKernel\\Controller\\TraceableControllerResolver->getController(object(Request))\n    in EasyAdminBundle/vendor/symfony/http-kernel/HttpKernel.php line 127\n\nat Symfony\\Component\\HttpKernel\\HttpKernel->handleRaw(object(Request), '1')\n    in EasyAdminBundle/vendor/symfony/http-kernel/HttpKernel.php line 62\n\nat Symfony\\Component\\HttpKernel\\HttpKernel->handle(object(Request), '1', true)\n    in EasyAdminBundle/vendor/symfony/http-kernel/Kernel.php line 169\n\nat Symfony\\Component\\HttpKernel\\Kernel->handle(object(Request))\n    in EasyAdminBundle/vendor/symfony/http-kernel/Client.php line 79\n\nat Symfony\\Component\\HttpKernel\\Client->doRequest(object(Request))\n    in EasyAdminBundle/vendor/symfony/framework-bundle/Client.php line 131\n\nat Symfony\\Bundle\\FrameworkBundle\\Client->doRequest(object(Request))\n    in EasyAdminBundle/vendor/symfony/browser-kit/Client.php line 317\n\nat Symfony\\Component\\BrowserKit\\Client->request('GET', '/admin/?action=list&entity=Category&view=list')\n    in EasyAdminBundle/Tests/Fixtures/AbstractTestCase.php line 62\n\nat JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Fixtures\\AbstractTestCase->getBackendPage(array('action' => 'list', 'entity' => 'Category', 'view' => 'list'))\n    in EasyAdminBundle/Tests/Controller/CustomEntityControllerTest.php line 48\n\nat JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\CustomEntityControllerTest->requestListView()\n    in EasyAdminBundle/Tests/Controller/CustomEntityControllerTest.php line 28\n\nat JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\CustomEntityControllerTest->testListAction()\n    in  line\n\nat ReflectionMethod->invokeArgs(object(CustomEntityControllerTest), array())\n    in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php line 910\n\nat PHPUnit_Framework_TestCase->runTest()\n    in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php line 770\n\nat PHPUnit_Framework_TestCase->runBare()\n    in phar:///usr/local/bin/phpunit/phpunit/Framework/TestResult.php line 685\n\nat PHPUnit_Framework_TestResult->run(object(CustomEntityControllerTest))\n    in phar:///usr/local/bin/phpunit/phpunit/Framework/TestCase.php line 726\n\nat PHPUnit_Framework_TestCase->run(object(PHPUnit_Framework_TestResult))\n    in phar:///usr/local/bin/phpunit/phpunit/Framework/TestSuite.php line 747\n\nat PHPUnit_Framework_TestSuite->run(object(PHPUnit_Framework_TestResult))\n    in phar:///usr/local/bin/phpunit/phpunit/TextUI/TestRunner.php line 429\n\nat PHPUnit_TextUI_TestRunner->doRun(object(PHPUnit_Framework_TestSuite), array('listGroups' => false, 'loader' => null, 'useDefaultConfiguration' => true, 'testSuffixes' => array('Test.php', '.phpt'), 'configuration' => 'EasyAdminBundle/phpunit.xml.dist'))\n    in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php line 155\n\nat PHPUnit_TextUI_Command->run(array('/usr/local/bin/phpunit', 'EasyAdminBundle/Tests/Controller/CustomEntityControllerTest.php'), true)\n    in phar:///usr/local/bin/phpunit/phpunit/TextUI/Command.php line 106\n\nat PHPUnit_TextUI_Command::main()\n    in /usr/local/bin/phpunit line 514\n\n```\n. @ogizanagi that's a very nice proposal! I'll need to make some tests, specially for these two scenarios that should work:\n1) It's not mandatory for the custom controller to extend from the default AdminController\n2) If it extends from AdminController ... the initialize() method should be called automatically without the user having to do so.\n. @yceruto thanks for trying to reproduce the bug locally. I'm still suffering it. Let's see if it persists when I try @ogizanagi's idea.\n. Update: I've changed the code completely according to @yceruto and @ogizanagi comments and using @yceruto's code. Thanks guys! Your solution is infinitely better than mine.\nI still suffer the same weird issues with the tests locally ... but Travis says that everything is OK.\nI've tweaked the entire documentation and I've added a new \"Chapter 7\" to explain the override mechanism based on PHP. I think everything is better explained now. Please tell me what you think about it.\nThanks!\n. Update: everything is working again on my local computer. The problems were caused by some modifications that I made in the Symfony code inside the vendor/ directory and which I didn't remember. \ud83d\ude21 \n. @yceruto thanks ;) We achieved 1,000 stars yesterday ... but I'm waiting until tomorrow Monday to make some noise on Twitter \ud83d\ude04 \n. Thanks for providing these fixes. I've tweaked the mentioned translation in 321494e.\n. @forsetius thanks for completing the Polish translation. Dzi\u0119kuj\u0119 bardzo\n. The solution is the one provided by @forsetius. Here is another example of this little known YAML feature: https://gist.github.com/bowsersenior/979804\n. Closing it as \"fixed\" because the YAML format already allows to do this.\n. Closing it as \"fixed\" because the YAML format already allows to do this.\n. @Pablossoo sorry for the late reply. Most of those features have already been asked in the past and are in our TODO list. Specifically, this is our plan:\n- Certainly: filters and export to CSV/XLS\n- Probably: bulk/batch actions\n- Unlikely: Ajax actions\nI'm closing this issue for being \"too generic\" (it asks for lots of features) and we'll discuss each feature in a separate issue. Thanks!\n. @Pablossoo sorry for the late reply. Most of those features have already been asked in the past and are in our TODO list. Specifically, this is our plan:\n- Certainly: filters and export to CSV/XLS\n- Probably: bulk/batch actions\n- Unlikely: Ajax actions\nI'm closing this issue for being \"too generic\" (it asks for lots of features) and we'll discuss each feature in a separate issue. Thanks!\n. I'm closing this because we've merged #1700 to change some private methods into protected and #1686 to make ConfigManager extensible. I'll add docs for the last PR in the coming days.. I haven't thought about this feature before ... but I think I like it. I want to think a bit more about the details, but I can imagine allowing to define an icon + label, just the icon or just the label. Thanks for the idea!\n. I haven't thought about this feature before ... but I think I like it. I want to think a bit more about the details, but I can imagine allowing to define an icon + label, just the icon or just the label. Thanks for the idea!\n. A bit late ... but after thinking about this, I've decided to not add an option to display icons. Instead, we can use the existing features. If you put this in the \"list\" view:\nyaml\nlist:\n    fields:\n        # ...\n        - { property: 'price', label: '<i class=\"fa fa-money\"></i> Price'\nThe icon is already displayed:\n\nSo you can display the icon before or after the text label, you can display only an icon, etc.\nIn the \"show\" view this doesn't work, but I've opened #1488 to fix this issue.. I want to test this feature a bit more before merging, but the PR looks fantastic! @yceruto thanks for this gift and for the super high quality PR.\n. I want to test this feature a bit more before merging, but the PR looks fantastic! @yceruto thanks for this gift and for the super high quality PR.\n. @yceruto thanks a lot for your incredible work in this PR and for testing several alternatives until finding the best solution. I love that the problem is now properly solved and we can get rid of the previous hackish solution. Thanks to @ogizanagi too for reviewing and validating the changes and for providing ideas to solve it.\n. @yceruto thanks a lot for your incredible work in this PR and for testing several alternatives until finding the best solution. I love that the problem is now properly solved and we can get rid of the previous hackish solution. Thanks to @ogizanagi too for reviewing and validating the changes and for providing ideas to solve it.\n. You have two resources about this:\n- A mini tutorial that we've published to explain how to integrate FOSUser into this bundle.\n- The EasyAdmin Demo application which uses FOSUser to manage the users.\nI'm closing this issue as fixed, but when you try this for real, if you have any problem please create a new issue with the error details. Thanks!\n. Let me know if I have understood your question well:\n- You have inherited some database\n- You want to create a backend to manage it with EasyAdmin\nIs this correct?\n. In the best case scenario, this will be easy to do:\n1. Create a Symfony application and configure in app/config/parameters.yml the credentials to access to the database.\n2. Create the Doctrine entities from the database automatically (as explained here: http://symfony.com/doc/current/cookbook/doctrine/reverse_engineering.html)\n3. Install EasyAdmin and create your first backend in a few seconds as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started.md\n4. Tweak and customize the backend to fit your needs as explained here: https://github.com/javiereguiluz/EasyAdminBundle#the-book\n. @R1sen the demo application is just for learning purposes and to test EasyAdmin for real to see if it's what you need in your project. But in this case it's better if you create a new Symfony project. With the Symfony Installer is just a matter of executing one command: symfony new your_project_name\n. Let's close this as \"fixed for now\". @R1sen if you have problems setting up or using EasyAdmin in your Symfony app, please open a new issue. Thanks!\n. Let's close this as \"fixed for now\". @R1sen if you have problems setting up or using EasyAdmin in your Symfony app, please open a new issue. Thanks!\n. I haven't looked into this with detail ... but keep in mind that recently we changed the internals of this bundle. We now use a \"cache warmer\" to pregenerate the cache in the prod environment (in \"dev\" there is no cache and the config is generated live for each request). All \"config passes\" are executed during the \"cache warmer\" and therefore, during the \"cache:clear\" command.\n. I haven't looked into this with detail ... but keep in mind that recently we changed the internals of this bundle. We now use a \"cache warmer\" to pregenerate the cache in the prod environment (in \"dev\" there is no cache and the config is generated live for each request). All \"config passes\" are executed during the \"cache warmer\" and therefore, during the \"cache:clear\" command.\n. I'm afraid I don't know what is the cause of this problem. In the past we used compiler passes and that caused a lot of troubles when accessing services (like security). But now we use a normal \"cache warmer\" were all services should be accessible.\nIf the problem is that getToken() is called on a null object, I guess that 'security.token_storage' service is not available ... but I don't know why \ud83d\ude1e \n. @forsetius do you think we can close this old issue? Thanks!. OK, let's close it for now then. Thanks!. Closing it because the issue doesn't contain a proper description. If the problem persists, please open a new issue. Thanks!\n. Closing it because the issue doesn't contain a proper description. If the problem persists, please open a new issue. Thanks!\n. @OndraM very nice catch! Thanks for fixing it.\n. @OndraM very nice catch! Thanks for fixing it.\n. First of all, this is more difficult to achieve than it should because at the moment EasyAdmin doesn't support defining config based on security.\nI'd say that you can do a couple of things:\n- Override the templates to add your own logic to hide/show actions based on user roles.\n- To be sure that nobody \"hacks\" the URL to access actions forbidden for them, override the AdminController and define just the indexAction() method, where you can again check for user roles and grant/reject the action request.\n. First of all, this is more difficult to achieve than it should because at the moment EasyAdmin doesn't support defining config based on security.\nI'd say that you can do a couple of things:\n- Override the templates to add your own logic to hide/show actions based on user roles.\n- To be sure that nobody \"hacks\" the URL to access actions forbidden for them, override the AdminController and define just the indexAction() method, where you can again check for user roles and grant/reject the action request.\n. @martixy my intention is to integrate security in the 2.x version of this bundle (I don't know when it will be released). If this feature is essential for you and you make a very heavy use of security, maybe you should consider using SonataAdmin for this particular backend and use EasyAdmin for other simpler backends.\nRegarding the config, the new mechanism is already implemented. We now use Doctrine Cache + Symfony Cache Warmers to process and cache the config avoiding the issues caused by Symfony Compiler Passes. I agree that we probably need to think about how easy/hard is to manipulate the config programmatically and make some changes if needed.\n. @martixy my intention is to integrate security in the 2.x version of this bundle (I don't know when it will be released). If this feature is essential for you and you make a very heavy use of security, maybe you should consider using SonataAdmin for this particular backend and use EasyAdmin for other simpler backends.\nRegarding the config, the new mechanism is already implemented. We now use Doctrine Cache + Symfony Cache Warmers to process and cache the config avoiding the issues caused by Symfony Compiler Passes. I agree that we probably need to think about how easy/hard is to manipulate the config programmatically and make some changes if needed.\n. Closing because the security will be implemented in future versions of the bundle and because the new config system was already implemented. To make very advanced things, you can use service decorators to override all the public methods of the ConfigManager class.. @gonzakpo thanks for your fixing the docs and congratulations on your first contribution!\n. @gonzakpo thanks for your fixing the docs and congratulations on your first contribution!\n. @bretanac93 just a quick comment in case you are thinking about sending a pull request about this feature: we're not ready to merge this yet; the Ajax request + modal form + dynamic item creation is simply too complex for us right now. I'm sorry!\n. @bretanac93 just a quick comment in case you are thinking about sending a pull request about this feature: we're not ready to merge this yet; the Ajax request + modal form + dynamic item creation is simply too complex for us right now. I'm sorry!\n. @bretanac93 thanks for the reference. Even if the example displayed is simple ... developing it is not simple at all. For example, when clicking on the Save button, the <select> of the first form must be updated dynamically with the new value.\n. I still think this is a very nice feature to implement it in the future ... but I'm closing this issue because we're collecting the list of future features in a separate list to not pollute the Issues list. I've added your proposal to that list. Thanks!\n. No luck. PHP 5.3 keeps failing:\n```\nLoading composer repositories with package information Updating dependencies\n(including require-dev)\nPHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted (tried to\nallocate 71 bytes) in phar:///home/travis/.phpenv/versions/5.3.29/bin/composer/s\nrc/Composer/DependencyResolver/RuleWatchGraph.php on line 47\nFatal error: Allowed memory size of 1073741824 bytes exhausted (tried to\nallocate 71 bytes) in phar:///home/travis/.phpenv/versions/5.3.29/bin/composer/s\nrc/Composer/DependencyResolver/RuleWatchGraph.php on line 47\nCheck https://getcomposer.org/doc/articles/troubleshooting.md#memory-limit-\nerrors for more info on how to handle out of memory errors.\nThe command \"composer update --prefer-dist --no-interaction $COMPOSER_FLAGS\"\nfailed and exited with 255 during .\n```\n. No luck. PHP 5.3 keeps failing:\n```\nLoading composer repositories with package information Updating dependencies\n(including require-dev)\nPHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted (tried to\nallocate 71 bytes) in phar:///home/travis/.phpenv/versions/5.3.29/bin/composer/s\nrc/Composer/DependencyResolver/RuleWatchGraph.php on line 47\nFatal error: Allowed memory size of 1073741824 bytes exhausted (tried to\nallocate 71 bytes) in phar:///home/travis/.phpenv/versions/5.3.29/bin/composer/s\nrc/Composer/DependencyResolver/RuleWatchGraph.php on line 47\nCheck https://getcomposer.org/doc/articles/troubleshooting.md#memory-limit-\nerrors for more info on how to handle out of memory errors.\nThe command \"composer update --prefer-dist --no-interaction $COMPOSER_FLAGS\"\nfailed and exited with 255 during .\n``\n. @ogizanagi thanks for validating this change ... and I'm sorry @yceruto for having lost some of your changes while rebasing/merging!\n. Thanks for reporting this issue and I'm sorry it took me forever to fix this. It's finally fixed as of #1395.\n. I'm closing because this is too old and we don't have more details about the issue. I'm sorry!. I think we can close this issue as \"fixed\" thanks to the help provided by @ogizanagi and @yceruto. Thanks!\n. I think we can close this issue as \"fixed\" thanks to the help provided by @ogizanagi and @yceruto. Thanks!\n. I'm trying some possible solutions for this issue ... but Doctrine isn't helping me much. @martixy could you please try to define your entity associations asEXTRA_LAZYas [explained here](http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/extra-lazy-associations.html). They don't reduce the number of SQL queries ... but they get the same results _without_ having to load the entire collections.\n. I'm trying some possible solutions for this issue ... but Doctrine isn't helping me much. @martixy could you please try to define your entity associations asEXTRA_LAZYas [explained here](http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/extra-lazy-associations.html). They don't reduce the number of SQL queries ... but they get the same results _without_ having to load the entire collections.\n. I'm going to close this one for now. In thelist` view, we use this code:\ntwig\n{% elseif 'list' == view %}\n    <span class=\"badge\">{{ value|length }}</span>\n{% endif %}\nAccording to Doctrine documentation, count() (which is what Twig's |length does) it's one of the functions that get the result without loading the entire association (see http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/extra-lazy-associations.html). So, in theory, the solution should be to use the fetch=\"EXTRA_LAZY\" feature of Doctrine in the collections that you know that can be huge.\nIf this doesn't work, let's open a new issue with more details and, if possible, a detailed profile of the application execution so we can find the bottleneck. Thanks!. I'm going to close this one for now. In the list view, we use this code:\ntwig\n{% elseif 'list' == view %}\n    <span class=\"badge\">{{ value|length }}</span>\n{% endif %}\nAccording to Doctrine documentation, count() (which is what Twig's |length does) it's one of the functions that get the result without loading the entire association (see http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/extra-lazy-associations.html). So, in theory, the solution should be to use the fetch=\"EXTRA_LAZY\" feature of Doctrine in the collections that you know that can be huge.\nIf this doesn't work, let's open a new issue with more details and, if possible, a detailed profile of the application execution so we can find the bottleneck. Thanks!. @ogizanagi thanks for your comments! I think you are right for the \"group\" element. I saw that Sonata solves this differently but I thought ... maybe a simpler solution would do the trick. But it won't! I'm facing lots of troubles in my local testing of this \"group\" element. So I'd opt for the Sonata solution. For the others, the divider and the section, it looks like it's working, so maybe we can keep using the trick. We'll see. This is still very WIP.\n. @ogizanagi thanks for your comments! I think you are right for the \"group\" element. I saw that Sonata solves this differently but I thought ... maybe a simpler solution would do the trick. But it won't! I'm facing lots of troubles in my local testing of this \"group\" element. So I'd opt for the Sonata solution. For the others, the divider and the section, it looks like it's working, so maybe we can keep using the trick. We'll see. This is still very WIP.\n. Update:  this is still \"work in progress\" ... but I'm starting to like how things are going on. Let me show you an example.\nThis is the form to add/edit Product in the EasyAdmin Demo app:\n\nAnd, thanks to this PR, if we add five simple lines to the form config:\ndiff\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # ...\n            form:\n                fields:\n+                   - { type: 'group', css_class: 'col-sm-8' }\n                    - { property: 'name', css_class: 'large' }\n                    - { property: 'description', type: 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'ean', help: 'EAN-13 valid code. Leave empty if unknown.' }\n                    - { property: 'price', type: 'number' }\n                    - { property: 'enabled', label: 'Published' }\n                    - { property: 'createdAt' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'imageFile', type: 'Vich\\UploaderBundle\\Form\\Type\\VichImageType', type_options: { required: true } }\n+                   - { type: 'group', css_class: 'col-sm-8' }\n                    - { property: 'features' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'categories', type: 'easyadmin_autocomplete' }\n                    - { property: 'tags' }\nThis is how the form looks now:\n\n. Update:  this is still \"work in progress\" ... but I'm starting to like how things are going on. Let me show you an example.\nThis is the form to add/edit Product in the EasyAdmin Demo app:\n\nAnd, thanks to this PR, if we add five simple lines to the form config:\ndiff\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # ...\n            form:\n                fields:\n+                   - { type: 'group', css_class: 'col-sm-8' }\n                    - { property: 'name', css_class: 'large' }\n                    - { property: 'description', type: 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'ean', help: 'EAN-13 valid code. Leave empty if unknown.' }\n                    - { property: 'price', type: 'number' }\n                    - { property: 'enabled', label: 'Published' }\n                    - { property: 'createdAt' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'imageFile', type: 'Vich\\UploaderBundle\\Form\\Type\\VichImageType', type_options: { required: true } }\n+                   - { type: 'group', css_class: 'col-sm-8' }\n                    - { property: 'features' }\n+                   - { type: 'group', css_class: 'col-sm-4' }\n                    - { property: 'categories', type: 'easyadmin_autocomplete' }\n                    - { property: 'tags' }\nThis is how the form looks now:\n\n. Update: the design of the new form elements is now finished. This is how they look:\n\nWhat's left to do:\n- Take care of some edge cases (e.g. group some form fields but not all of them)\n- Code cleaning, optimizing, etc.\n- Fix tests\nSo, if someone is interested, this is now ready for review. Thanks!\n. Update: the design of the new form elements is now finished. This is how they look:\n\nWhat's left to do:\n- Take care of some edge cases (e.g. group some form fields but not all of them)\n- Code cleaning, optimizing, etc.\n- Fix tests\nSo, if someone is interested, this is now ready for review. Thanks!\n. Update:\n- Tests are green\n- New feature is fully tested\n- Doc has been completed and screenshots have been added\n- Code has been optimized\nThis is now ready to be tested in real applications before merging it into master. Thanks!\n. Update:\n- Tests are green\n- New feature is fully tested\n- Doc has been completed and screenshots have been added\n- Code has been optimized\nThis is now ready to be tested in real applications before merging it into master. Thanks!\n. Tests are green for Symfony 2.8 and 3.x, but are failing for 2.3 and 2.7 because of this error:\nCould not load type \"easyadmin_group\"\n2.3 details: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/142241761#L444\n2.7 details: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/142241764#L443\nCould anyone please help me to find what I'm missing here? Thanks!\n. Tests are green for Symfony 2.8 and 3.x, but are failing for 2.3 and 2.7 because of this error:\nCould not load type \"easyadmin_group\"\n2.3 details: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/142241761#L444\n2.7 details: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/142241764#L443\nCould anyone please help me to find what I'm missing here? Thanks!\n. This is merged now! That'll make it easier to test it in real apps.\n. @anthony-launay you are right! We started with the edit/new forms because this feature was a \"must have\" for them. In the case of the \"show\" view we consider it a \"nice to have\". So we'll add it in the near term.\n. The autocomplete search feature has been added to our list of future features. About restricting the search to just one field (or a few) that should work: just define the fields option for the search view, as explained in this section:\n\nIf this option doesn't work, please reopen this issue. Thanks!\n. Thanks @peterkokot.\n. The template that we use and the modern CSS practices favor the use of class instead of id. In #1411 I've made sure that we have unique classes for every action, so it should solve your problem without the need of adding id. Maybe in some cases we need to use id for some elements, but let's discuss about that in a separate issue and pointing to specific elements. Thanks!. Good catch, thanks @n1c01a5.\n. Good catch, thanks @n1c01a5.\n. @slmcncb thanks for creating this PR and @Pierstoval thanks for reviewing it. Sadly I must put it \"on hold\" because I can't review it soon. The reason? At the moment I'm 100% focused on this other PR to create complex form layouts: #1214.\n. @slmcncb thanks for creating this PR and @Pierstoval thanks for reviewing it. Sadly I must put it \"on hold\" because I can't review it soon. The reason? At the moment I'm 100% focused on this other PR to create complex form layouts: #1214.\n. After reviewing this PR, I think @slmcncb's proposal is correct and we don't need to introduce a config option for this.\nToday we display the widget in English for everyone. This PR will force to use the same language as the rest of the page. That's the behavior that makes sense in my opinion. I can't imagine for example someone reading the page in French but wanting to see the Select2 widgets in Japanese.\n. @Pierstoval you are right and you made a valid point. Sadly we can't translate Select2 on our own and they only provide canonical translations (nl, fr, etc.) So there is no point worrying about nl_NL and nl_BE, etc. because we can't solve this issue \ud83d\ude22 \n. I'd say it's worth it, although it's not critical. I'd like to have the entire backend translated into user's locale. Besides this widget I'd also like to work on translating the date/time/datetime values (there is #614 but I'd like to solve this differently).\n. @slmcncb if you can work finishing this, there is a script in Resources/bin/ that compiles all the JS into a single file, so there is no need to do it manually. If you can't work on this, I can finish it.\n. I'm closing this PR because the original branch+repository was deleted. I've recreated this work in #1319 and added some minor changes.\n. I'm closing this PR because the original branch+repository was deleted. I've recreated this work in #1319 and added some minor changes.\n. I'm \ud83d\udc4d  Thanks @Pierstoval.\nHowever, could we please change the block name? The pattern we use is block_name_wrapper (e.g. main_menu and main_menu_wrapper) Thanks!\n. I'm \ud83d\udc4d  Thanks @Pierstoval.\nHowever, could we please change the block name? The pattern we use is block_name_wrapper (e.g. main_menu and main_menu_wrapper) Thanks!\n. I'd prefer content_title and thus, this block should be called content_title_wrapper \n. I'd prefer content_title and thus, this block should be called content_title_wrapper \n. Thanks @Pierstoval.\n. This will probably be fixed by #1341.\n. Closing it as fixed by #1341.\n. @HamidDarash it looks like you've mixed the routing config with the normal config:\n- This is how the routing.yml config should look like: https://github.com/javiereguiluz/EasyAdminBundle#step-3-load-the-routes-of-the-bundle\n- And the entities config should be defined in the app/config/config.yml as showed here: https://github.com/javiereguiluz/EasyAdminBundle#your-first-backend\n. @HamidDarash it looks like you've mixed the routing config with the normal config:\n- This is how the routing.yml config should look like: https://github.com/javiereguiluz/EasyAdminBundle#step-3-load-the-routes-of-the-bundle\n- And the entities config should be defined in the app/config/config.yml as showed here: https://github.com/javiereguiluz/EasyAdminBundle#your-first-backend\n. I'm closing this because the error message shows that this is just a copy+paste problem. If you move the config that you put on routing.yml to config.yml, this should work. If not, please reopen the issue with the new error message. Thanks!\n. @UFTimmy thanks for fixing this broken link. You guessed the right link perfectly! Thank you.\n. @UFTimmy thanks for fixing this broken link. You guessed the right link perfectly! Thank you.\n. I'm closing this as \"solved\" because in the recent versions of this bundle it's now possible to reuse the fields defined in form and you can override individual options of those fields, remove some of them in edit or new, etc. The updated docs explain it: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#the-special-form-view\n. I've made a quick test with the EasyAdmin Demo application using Purchase and User (similar to your Post and User) and I can't reproduce this error. The sorting by user works as expected.\nCan you please show the config in your User entity related to Post. Do you define the inverse OneToMany config?\n. I've made a quick test with the EasyAdmin Demo application using Purchase and User (similar to your Post and User) and I can't reproduce this error. The sorting by user works as expected.\nCan you please show the config in your User entity related to Post. Do you define the inverse OneToMany config?\n. I'm closing this issue because in #1392 we're trying to implement a feature requested in a very similar issue. Thanks!\n. @anthony-launay you are right and this option can't be defined per entity. For now we don't plan to introduce this option because we find this need not common enough (somewhat related to this: we're going to introduce soon an option to configure the max results displayed on \"show\"-related views: #1204).\nIn case this is a must for some application, it's possible to do it by overriding a method in a custom AdminController, as explained in this article. Of course it's not convenient as setting an option, but it's definitely doable.\nI'm sorry that this is the second time today that I say \"no\" to a feature proposed by you. I appreciate the proposals made by the community, but we are still a small project and that requires to focus our limited resources on as few features as possible and to be disciplined to say \"no\" to most proposals. Thanks for understanding it.\n. @anthony-launay sadly it's not possible to create menus with more than two nesting levels.\nThe direct reason is that it complicates a lot the PHP code and the HTML/CSS contents. The indirect reason is that an application which requires a 3-level menu is probably very large/complex ... and we're not targeting to those applications (because this bundle will fall short on many other things for complex apps besides the menu).\nTherefore, I must close this feature proposal as \"won't fix\". I hope you understand it. Thanks!\n. @anthony-launay sadly it's not possible to create menus with more than two nesting levels.\nThe direct reason is that it complicates a lot the PHP code and the HTML/CSS contents. The indirect reason is that an application which requires a 3-level menu is probably very large/complex ... and we're not targeting to those applications (because this bundle will fall short on many other things for complex apps besides the menu).\nTherefore, I must close this feature proposal as \"won't fix\". I hope you understand it. Thanks!\n. @i--storm nice catch! Thanks for reporting it. I'm fixing it in #1230. As you can see, some mistake while merging some PR made me make some changes in composer.json and I wasn't aware of them!\n. Thank you @dayofr.\n. Thank you @anthony-launay.\n. @forsetius thanks a lot for updating this translation, specially considering how hard is to translate one of the messages. I loved your clever trick to make it a bit easier!\nRegarding your question, I'm not a super expert in i18n, but I think that ]1, Inf] is correct to say \"any positive number higher than 1\". In the Symfony Docs they use it too:\n\n. @forsetius thanks a lot for updating this translation, specially considering how hard is to translate one of the messages. I loved your clever trick to make it a bit easier!\nRegarding your question, I'm not a super expert in i18n, but I think that ]1, Inf] is correct to say \"any positive number higher than 1\". In the Symfony Docs they use it too:\n\n. @anthony-launay thanks for fixing this issue! We do the same for all the other views, so it's consistent to do the same for the \"list\" view. Thanks!\n. @anthony-launay thanks for fixing this issue! We do the same for all the other views, so it's consistent to do the same for the \"list\" view. Thanks!\n. @jansabat thanks for proposing this fix. I agree with it completely ... but I haven't merged yet because I found other errors similar to this that must be fixed.\nI've created #1249 to fix them all, so I'm closing this pull request. I reused your original commit so you'll get full credit when merging. Thanks.\n. @jansabat thanks for proposing this fix. I agree with it completely ... but I haven't merged yet because I found other errors similar to this that must be fixed.\nI've created #1249 to fix them all, so I'm closing this pull request. I reused your original commit so you'll get full credit when merging. Thanks.\n. \ud83d\udc4d \nI always write this wrong \ud83d\ude22  Thanks @Pierstoval.\n. Merged! Thank you.\n. Merged! Thank you.\n. Great! @anthony-launay thanks for helping us finish another translation.\n. Great! @anthony-launay thanks for helping us finish another translation.\n. @SebTM I agree that null is not very human friendly ... but the most appropriate value depends on the application/entity: none, nothing, empty, -, (an empty string), etc.\nThat's why the solution is the one provided by @ogizanagi: override the label_null.html.twig template for each entity or for the entire backend.\nI'm closing this issue as \"fixed\". If you have any problem with this solution, please reopen. Thanks!\n. @SebTM I agree that null is not very human friendly ... but the most appropriate value depends on the application/entity: none, nothing, empty, -, (an empty string), etc.\nThat's why the solution is the one provided by @ogizanagi: override the label_null.html.twig template for each entity or for the entire backend.\nI'm closing this issue as \"fixed\". If you have any problem with this solution, please reopen. Thanks!\n. @SebTM we made some trade-offs when creating templates ... and you caught us here :)  I'll check if this is fixable and I'll propose a PR. Thanks.\n. @SebTM we made some trade-offs when creating templates ... and you caught us here :)  I'll check if this is fixable and I'll propose a PR. Thanks.\n. @SebTM hopefully it will be fixed in #1252.\n. @hhamon thank for your feature proposal. I agree with Maxime that this can be trickier than it sounds. For example: if your createNewEntity() method returns a DTO ... you should also need to override the createNewForm() methods because they expect a Doctrine entity:\n\n\nMaybe for these cases you could use a custom controller for just this entity and override the newAction() entirely to render a simple Symfony Form to manage the creation of those DTOs.\n. @hhamon thank for your feature proposal. I agree with Maxime that this can be trickier than it sounds. For example: if your createNewEntity() method returns a DTO ... you should also need to override the createNewForm() methods because they expect a Doctrine entity:\n\n\nMaybe for these cases you could use a custom controller for just this entity and override the newAction() entirely to render a simple Symfony Form to manage the creation of those DTOs.\n. I'm closing this as \"fixed\". In the EasyAdminTwigExtension.php class we build the link_parameters variable in some cases (it's an association, that related entity is managed by the backend, its 'show' view is enabled, etc.)  and then we pass all this information to the Twig template that renders the field (in this case your custom template).\nI'd recommend to do an empty dump in the Twig template to check all the passed variables, that should let you do anything you need. If you think some variable is missing in that template, please open a new issue to discuss about that. Thanks!\n. If you are using Symfony 3, the form type should be the FQCN of the type:\nyaml\n- { property: 'hasAdminRole', type: 'AppBundle\\Form\\Field\\RoleType' }\nIf you are using Symfony 2.x, then I'm not sure about the error cause, so let me think about it :)\n. If you are using Symfony 3, the form type should be the FQCN of the type:\nyaml\n- { property: 'hasAdminRole', type: 'AppBundle\\Form\\Field\\RoleType' }\nIf you are using Symfony 2.x, then I'm not sure about the error cause, so let me think about it :)\n. Let's close this issue as \"fixed\" thanks to the solution that you shared in your last comment. Thanks!\n. @peterkokot thank you very much for these improvements. I can't verify them myself ... but I trust you blindly in i18n-related things. Thanks.\n. @peterkokot thank you very much for these improvements. I can't verify them myself ... but I trust you blindly in i18n-related things. Thanks.\n. Thanks @forsetius.\n. Thanks @forsetius.\n. I agree with everything you say:\n- We need to add this feature\n- It's not high priority at the moment\n- We'll do it eventually in the future\nAbout the implementation: I'd like to have an Ajax pagination to see all the related items. But let's plan carefully this feature to not overcomplicate the code. Thanks.\n. I agree with everything you say:\n- We need to add this feature\n- It's not high priority at the moment\n- We'll do it eventually in the future\nAbout the implementation: I'd like to have an Ajax pagination to see all the related items. But let's plan carefully this feature to not overcomplicate the code. Thanks.\n. I'm closing this because I've added it to the list of future features.\n. I agree with this proposal to make things easier to style. However, I don't like the proposed class name much (.metainfo) because it's too generic. What if we use .more or .more-items or .show-more-items or ...?\n. I agree with this proposal to make things easier to style. However, I don't like the proposed class name much (.metainfo) because it's too generic. What if we use .more or .more-items or .show-more-items or ...?\n. @forsetius thanks for this change. I'm sorry it took me forever to merge it. It's finally merged now!\n. @forsetius thanks for this change. I'm sorry it took me forever to merge it. It's finally merged now!\n. I have two quick comments:\n1) The _actions.html.twig template is just a fragment that we use internally to avoid template repetition. But it's not a real template and that's why it's not exposed publicly or documented.\n2) Currently we allow to override templates by configuration or by convention. For example, by convention you could create this file in this location to override the list.html.twig template for some entities:\n``` twig\n{# app/Resources/views/easy_admin//list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block item_actions %}\n    {# here do something with the '_list_item_actions' variable to\n       add or remove actions depending on some conditions #}\n{{ parent() }}\n\n{% endblock item_actions %}\n```\nIf the logic is similar or identical for several entities, you can again override the template for all entities by configuration or by convention (creating instead the app/Resources/views/easy_admin/list.html.twig file).\nWould this comment help you solve this issue?\n. I've tested this template in the EasyAdmin Demo application and it works as expected. It would require you to create just 1 file to manage all those common entities:\n``` twig\n{# app/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block item_actions %}\n    {% if _entity_config.name in ['Product', 'Article', 'Page'] %}\n        {% set filtered_actions = {} %}\n        {% for action_name, action_config in _list_item_actions %}\n            {% if action_name == 'delete' and item.publication|default(false) == 'PUBLISHED' %}\n                {# remove the 'delete' action from published items #}\n            {% else %}\n                {% set filtered_actions = filtered_actions|merge([action_config]) %}\n            {% endif %}\n        {% endfor %}\n    {% set _list_item_actions = filtered_actions %}\n{% endif %}\n\n{{ parent() }}\n\n{% endblock item_actions %}\n```\n. Closing this as \"fixed\" ... and added the tip about dynamic item actions in #1264. Thanks!\n. The version of VichUploaderBundle should not be a problem. Any non-legacy version should work. Maybe you want to check out:\n- How to Upload Files and Images tutorial that explains the integration of EasyAdmin + VichUploader\n- EasyAdmin Demo application which uses VichUploader to manage the images and PDF files of some entities.\n. The version of VichUploaderBundle should not be a problem. Any non-legacy version should work. Maybe you want to check out:\n- How to Upload Files and Images tutorial that explains the integration of EasyAdmin + VichUploader\n- EasyAdmin Demo application which uses VichUploader to manage the images and PDF files of some entities.\n. We don't have more information about this issue and a possible solution has been provided, so let's close it as \"fixed\".. Good catch, thanks @hhamon.\n. @ogizanagi thanks! I'll give that a try.\n. I can't reproduce this error. Please follow the installation instructions as shown in https://github.com/javiereguiluz/EasyAdminBundle#installation\nIf you still have problems, please tell me your PHP version and your operating system. Thanks!\n. @diriy this error is really strange. It looks like a problem related to Composer. Have you installed other Symfony bundles before with this same Composer version? Thanks.\n. @diriy wow! That was a tricky issue! Thanks for providing the details in case someone else faces the same problem. Closing it as \"fixed\" then.\n. Thanks for reporting this issue. In #1263 I'm trying to do the change that you proposed. Let' wait and see how it goes. Thanks!\n. The change in #1263 seems to be working, so I've merged it. The fix is now available in dev-master version and it'll be part of the next stable version. Thanks.\n. Yes. It was fixed recently ... but I haven't released a new version of the bundle yet. Tomorrow morning I'll release the new version.\n. This is the commit that fixed it: https://github.com/javiereguiluz/EasyAdminBundle/commit/c5563ee41412628eb6bd72716246f75e2534121e\n. @alborq I'm not sure if this proposed change would break existing backends. Have you tried using the base_path config option? See https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#image-data-type\n. @alborq thanks for this change. I finally merged it ... and I added this small note in the UPGRADE file about this change.\n. @alborq thanks for this change. I finally merged it ... and I added this small note in the UPGRADE file about this change.\n. If I understand the code correctly, the problem is that EasyAdmin sees your Manager entity as any other entity. Therefore, it doesn't understand that a password field must be hashed before persisting it. For EasyAdmin this is just a normal form field.\nIf you use FOSUserBundle, read this tutorial about how to integrate it. Otherwise, you need to create your custom AdminController and override some method to call to the Symfony's password encoding service and save the change in the entity. This is way easier than it sounds! It's explained here in detail: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\n. @aLkRicha if you feel more comfortable with entity listeners, go for it! There's definitely more than one way to solve this.\nHowever, \"entity listeners\" or \"lifecycle callbacks\" are considered a bad practice by Doctrine creators. See these slides for details.\nThe controller based solution feels a bit more \"natural\" for Symfony and it's a matter of adding a few lines of code.\nIn any case, let's close this issue as \"fixed\" because some valid solutions were proposed. Thanks!\n. I'm sorry but I must close this old issue as \"won't fix\".\nFirst, I'm trying to clean our backlog so we can move forward with the second version of this bundle.\nSecond, I don't think the number of database queries is important for a backend. The public part of a website must be super optimized, but the backend is browsed by 1 or 2 people and it doesn't matter if you make 10 database queries (in 1 ms) or 120 queries (in 4 ms).. @nedelenbos I thought this could be inferred from the rest of the article ... but I agree with you and it's better to be explicit and add this property in the sample code. Thanks!\n. A bit late ... but here is the pull request that implements this feature: #1347.\n. A bit late ... but here is the pull request that implements this feature: #1347.\n. I'm sorry but let's close this feature request as \"won't fix\" because this form field type looks a bit \"niche\" to include it as built-in.\n. I'm sorry but I'm closing this feature request as \"won't fix\". The reason is that we don't like to display confirmation messages when things work (which should be 99% of the times). We prefer to display error messages when things don't work.\nHowever, in the past someone asked us the same, and we updated the layout.html.twig template to display the flash messages if they exist (this is the included template: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/default/flash_messages.html.twig)  So you can add that message with any of the various ways available to override the default actions, from events to custom controllers.\n. I forgot to reply to this old issue. The reasoning was:\n\npre_*() methods make sense because you can actually modify the entity contents before saving them.\npost_*() wouldn't make much sense because the entity is already saved and you can change anything.\n\nIn case you want to do something after the entity save, instead of the post_*() method, you can use the EasyAdminEvents::POST_PERSIST where you can do anything ... even changing the Request itself and redirecting to another URL.\nSo, for now, let's keep things as they are. Thanks for understanding it!. I forgot to reply to this old issue. The reasoning was:\n\npre_*() methods make sense because you can actually modify the entity contents before saving them.\npost_*() wouldn't make much sense because the entity is already saved and you can change anything.\n\nIn case you want to do something after the entity save, instead of the post_*() method, you can use the EasyAdminEvents::POST_PERSIST where you can do anything ... even changing the Request itself and redirecting to another URL.\nSo, for now, let's keep things as they are. Thanks for understanding it!. @shakaran you are right. Let's close it as fixed. Thanks for helping us clean the issue backlog.\n. @slmcncb thanks for updating this translation. I'm sorry it took me forever to merge it ... but the summer holidays slowed down the activity of this bundle.\n. @slmcncb thanks for updating this translation. I'm sorry it took me forever to merge it ... but the summer holidays slowed down the activity of this bundle.\n. A bit late ... but I'm fixing this issue in #1374 \n. A bit late ... but I'm fixing this issue in #1374 \n. @annaos thanks for updating these translations. I'm sorry it took me forever to merge it ... but the summer holidays slowed down the activity of this bundle. By the way, I think this is your first contribution to the bundle, so welcome and thank you very much!\n. @annaos thanks for updating these translations. I'm sorry it took me forever to merge it ... but the summer holidays slowed down the activity of this bundle. By the way, I think this is your first contribution to the bundle, so welcome and thank you very much!\n. Closing because this probably was fixed. @CruzyCruz thanks as always for your help.. Closing because this probably was fixed. @CruzyCruz thanks as always for your help.. I started working on this feature ... but I don't like the result because it's too complicated. Therefore, for now we won't provide this feature ... but I've added it to the List of future features.\nI know that it's not the same, but you can now display global help messages in every page. So maybe, you could turn the confirmation message into a global warning message. It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#display-a-help-message-in-the-page. @shakaran I'm sorry I overlooked your message. Thanks a lot for helping me close solved issues!\n@Xavier-IV I'm glad everything was solved with the help of the community.\n. @shakaran I'm sorry I overlooked your message. Thanks a lot for helping me close solved issues!\n@Xavier-IV I'm glad everything was solved with the help of the community.\n. We're not planning to implement this feature anytime soon ... but it's interesting enough to add it to the list of \"future features\" that will probably be implemented some day.\nWe have just created a GitHub project to group those \"future features\" so it's easier to scan them instead of using the list of GitHub issues: https://github.com/javiereguiluz/EasyAdminBundle/projects/1\nTherefore, I'm closing this issue for now. Thanks!\n. The default \"Save\" action can only be overridden via the form theme because it a bit special ... but if you want to remove the other actions (list, delete) that's explained in this chapter and if you want to add your own actions, that's explained in this tutorial.\n. @Pierstoval nice! thanks for these fixes.\n. @Pierstoval nice! thanks for these fixes.\n. @rudak I'm afraid that it's not possible because type_options allow to use any of the EnttiyType options defined by Symfony and repository_method is not one of them.\nI admit that this is one of the shortcomings of using just YAML to config the form. Luckily, EasyAdmin allows you to combine YAML config and PHP code for cases like this one, so you can override one of the methods of the AdminController as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\n. @rudak I'm afraid that it's not possible because type_options allow to use any of the EnttiyType options defined by Symfony and repository_method is not one of them.\nI admit that this is one of the shortcomings of using just YAML to config the form. Luckily, EasyAdmin allows you to combine YAML config and PHP code for cases like this one, so you can override one of the methods of the AdminController as explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\n. After reading your comments, it looks like it's something out of our control. Let's wait for the PHP 7.1 release, which won't take too long. Here we can check the updated roadmap: https://wiki.php.net/todo/php71\nThank you all for your help.\n. @Yunyun548 I like it! thanks for improving this article. In ce5c239 I've made some minor tweaks.\n. @Yunyun548 I like it! thanks for improving this article. In ce5c239 I've made some minor tweaks.\n. @Pablossoo thanks for your suggestions. I've added those features to the list of future features of the bundle. Therefore, I'm closing this issue to not have this information duplicated.. @shakaran thanks for this improvement. I like it ... but in 1bbe02d I've made some minor tweaks to make the docs more compact and follow the same format used in other parts of the docs.\n. @shakaran thanks for this improvement. I like it ... but in 1bbe02d I've made some minor tweaks to make the docs more compact and follow the same format used in other parts of the docs.\n. @ktrzos thanks for working on this feature. I've created #1317 to finish it adding some minor changes to it. I've reused your original commit, so you'll get full credit for your original work. Thanks.\n. The main factors that decide if we display links or text for associations are:\n1) The related entities must be managed by the backend\n2) The show action must be enabled for the related entities (if User entity disables show, then the user information is displayed as text).\nCan you please update EasyAdmin to the latest version to see if this error persist? Thanks!. closing because we don't have more information ... and because maybe this was solved by changing the property name as suggested by @ndench. Thanks!. I'm afraid this is a massive bug happening at the moment at GitHub. Lots of Twitter messages about this \ud83d\ude22 \n. I'm afraid this is a massive bug happening at the moment at GitHub. Lots of Twitter messages about this \ud83d\ude22 \n. \ud83d\udc4d I think it makes sense to create these global options to avoid repetitions.\nIf you can make a PR, that'd be great. If tests don't pass, don't worry. Sometimes when we change the configuration options, a lot of fixtures files must be updated. I use a trick to update them automatically.\nSadly the coming days I'll be very busy, so it'll take me longer than usual to review/merge your PR.\n. \ud83d\udc4d I think it makes sense to create these global options to avoid repetitions.\nIf you can make a PR, that'd be great. If tests don't pass, don't worry. Sometimes when we change the configuration options, a lot of fixtures files must be updated. I use a trick to update them automatically.\nSadly the coming days I'll be very busy, so it'll take me longer than usual to review/merge your PR.\n. Closing it as fixed by #1330.\n. @rouflak it makes a lot of sense and your pull request was prefectly explained and implemented. Thanks!\n. @rouflak it makes a lot of sense and your pull request was prefectly explained and implemented. Thanks!\n. @runciters thank you very much for adding these missing translations!\n. @runciters thank you very much for adding these missing translations!\n. @ogizanagi it's true that you can redefine the edit.page_title translation message ... but I think this makes sense for two reasons:\n1) It's probably better to have all the main config in a single YAML file, instead of having some things in the translation file.\n2) I'd like to make more options \"global and local\": you can define them globally for all entities but override them locally for each entity. Most of our config options behave in this way, so let's complete the ones missing yet (e.g. title and max_results)\n@annaos thanks for creating this pull request. I've finished it in #1330 to simplify some code, tweak some docs and add some tests. But I've reused your original commits, so you'll get full credit for your contribution. Thanks!\n. @ThomasBerends sorry for the late response. I thought this was already explained in this article of our docs ... but after reading your issue, I've added in #1335 a note to better explain that Symfony Forms Themes must be used to customize the forms. Thanks!\n. @rudak the URL field type is only for displaying pre-generated URLs as clickable elements. In your case you want to generate a URL using Twig's path() function and the entity data. To do so, the best resource is this section in the docs.\nAs you can see, it's a matter of creating a really small template fragment and telling EasyAdmin to use your fragment to display the contents of that entity property.\nGiven all this, I'm closing this issue as \"fixed\". Thanks.\n. Closing it as fixed by #1477 which is included in the 1.16.4 release. If the error persist, please reopen. Thanks!. I'm closing this as \"fixed\" because of the multiple Pull Requests that we've merged about this in the past weeks. Of course we'll keep looking at these dependencies in detail.\n. @ktrzos it's not possible at the moment. I'm still \ud83d\udc4e on adding this feature ... but to be honest, I'm not as strongly against it as before ... so perhaps in the future we add this field for edit/new actions. Thanks for understanding it.\n. @ktrzos it's not possible at the moment. For now I prefer to not add this option because it still looks like a niche option to me. In any case, each page / action / entities apply different class attributes to the <body> element. So, although you cannot load different styles/js for each page, you can target each page/action/entity individually.\n. @KhanMaytok very nice catch! I always make this mistake :(  Thanks for fixing it.\n. @CruzyCruz the problem is that in this line we make an array_replace() instead of an array_replace_recursive():\n\nThe original intention was to allow granular overriding ... so maybe we could change it to *_recursive() (it shouldn't be a BC break because the new and edit configs always have preference over form)\n. I was wrong. As shown in #1341, array_replace_recursive won't solve this problem because fields are defined in numeric arrays instead of associative arrays ... so a custom processing will be needed. I'll do that.\n. Closing it as fixed by #1341\n. @CruzyCruz I agree. Thanks for proposing this improvement. I've created #1316 to fix it.\n. Yes ... but let's keep this issue open. When PR are merged, related issues are automatically closed.\n. Yes ... but let's keep this issue open. When PR are merged, related issues are automatically closed.\n. @yceruto not at all \ud83d\ude04  I'm sorry I haven't reviewed it yet \ud83d\ude22  I'll do it soon. Thanks!\n. @yceruto not at all \ud83d\ude04  I'm sorry I haven't reviewed it yet \ud83d\ude22  I'll do it soon. Thanks!\n. To be honest, I don't fully understand the code. But that's because Symfony Forms and I don't get along \ud83d\ude01\nIn any case, I'm going to merge this because tests pass and I because I trust you blindly!  @yceruto  thank you for working on this. I love the overall refactor/simplification!\n. @yceruto Scrutinizer CI agrees that you did a fantastic job here \ud83c\udf89  \ud83c\udf89  \ud83c\udf89 \n\n. @shakaran thanks for fixing this error.\n. @yceruto thanks for the review!  Regarding the comment that you linked, I'd say that we've taking into account most of @ogizanagi's comments. The only missing thing would be the merge of all the i18n files into the big easyadmin.js file. I'm not sure about that because there are a lot of translations and it would make the file pretty big.\n. @xabbuh thanks a lot for this forward-compatibility fix!\n. @xabbuh thanks a lot for this forward-compatibility fix!\n. :+1: good idea! And Symfony does the same for the form_table_layout.html.twig template. Thanks @ogizanagi\n. Thanks @ogizanagi.\n. This Doctrine bug (reported months ago and still unfixed) has caused and is still causing lots of problems in lots of situations for lots of users.\nIn any case, focusing on our own problems, I'd say that we could somehow check if the database exists ... or at least catch some exception and silently ignore this error and create instead an empty backend configuration.\n. I'm going to close this for now. Why? Because I recently tried to move the assets of this bundle to Webpack Encore and I failed miserably because of the legacy jQuery plugins we use. So I don't want to add more jQuery plugins to this bundle. I'm sorry!. @ogizanagi I was going to restrict this to 1049 error, but then I looked up a bit about PDO errors and found several of them that could also occur:\n- 1045: Access denied for user '%s'@'%s' (using password: %s)\n- 1049: Unknown database '%s'\n- 2005: Unknown MySQL server host '%s' (%d)\n- 2003: Can't connect to MySQL server on '%s' (%d)\n- etc.\nSo maybe it's better to not check the exception code?\n. Good catch, thanks @anthony-launay.\n. @truckee I was about to look into this issue :)  I'm glad you solved it.\n. Fabien, thanks a lot for this fix!\n. In theory, the security bundle shouldn't be mandatory. In practice it's hard to imagine a backend without security protection, so I'm totally \ud83d\udc4d about this PR.\nRegarding the template code, we included a lot of safeguards here and there to make sure the backend never fails when some features are not enabled. We wanted to make the bundle setup as simple as possible.\n. @ogizanagi let's merge this PR and then I'll make some tweaks to the template to use if app.user is defined\n. Thanks Fabien.\n. @ogizanagi can you give me some clue about what to do to solve this issue? Thanks!\n. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @benr77 I'm not sure I understand your question, but I'll give you two links that may help you:\n- Doctrine defines a @OrderBy annotation to sort relationships: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/ordered-associations.html\n- EasyAdmin allows to sort listings by any property when defining a custom menu: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#selecting-the-form-theme\n. Closing it as fixed by #1392, which will be available in the next stable release.. Thanks @COil.\n. I'm really sorry but I must close this proposal as \"won't fix\". I apologize for not having closed it earlier and I understand if you are angry about this decision. As explained in #2059, we are going to make trascendental changes very soon to this bundle, so we must merge or close every pull request first.. @bertinl0609 sadly I understand that you have problems with this because EasyAdmin relies on Symfony's Form component to solve it. Forms are arguably the most difficult part of Symfony.\nTo customize the form appearance, you have to read this article of the official Symfony Docs that explain how to create a form theme. Then you have to tell EasyAdmin that you want to use your own theme for the forms as explained in this section of our docs.\nThe bad news is that it will take you some time to do this because of the complexity of Symfony's Forms. The good news is that the solution (creating a form them) is something related to Symfony, not EasyAdmin, so you can reuse it in the rest of the Symfony application and with other bundles.\nI'm closing this issue as \"fixed\" for now. If you don't agree, please reopen. Thanks!\n. @bertinl0609 you don't need to create an entire form theme to redesign just the collection widget. Your form them will be a very small Twig template with just the needed fragment to override that.\n. @CruzyCruz the new code committed in this PR should fix your issue in #1311 and it also brings in some new features. If you can, please read the docs for the new feature and review this PR. Thanks!\n. @CruzyCruz this is now merged, so it should be easier to test it directly from the dev-master branch.\n. @CruzyCruz this is now merged, so it should be easier to test it directly from the dev-master branch.\n. @martixy you are right. The reason is that we don't include the glyphicons by default because we prefer to include the amazing FontAwesome icons. You could include the glyphicons by hand (if you redefine the layout template and link to those font files) but I strongly recommend you to use FontAwesome because of the built-in support and because they are probably the best icon pack out there. Thanks.\n. @Glideh in #1355 I'm implementing this feature.\n. @Glideh in #1355 I'm implementing this feature.\n. We've just merged a feature that will simplify this a lot. Here is the doc for this feature: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#filtering-entities\nIt will be available in the next stable version of the bundle to be released in the next days.\n. We've just merged a feature that will simplify this a lot. Here is the doc for this feature: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#filtering-entities\nIt will be available in the next stable version of the bundle to be released in the next days.\n. Much better! Thanks @ogizanagi\n. Much better! Thanks @ogizanagi\n. I can confirm this:\n``` cli\n$ symfony new project_28 2.8\n$ composer require javiereguiluz/easyadmin-bundle\nUsing version ^1.15 for javiereguiluz/easyadmin-bundle\n...\nInstalling javiereguiluz/easyadmin-bundle (v1.15.2)\n```\n``` cli\n$ symfony new project_31 3.1\n$ composer require javiereguiluz/easyadmin-bundle\nUsing version ^1.15 for javiereguiluz/easyadmin-bundle\n...\nInstalling javiereguiluz/easyadmin-bundle (v1.15.3)\n```\n. I can confirm this:\n``` cli\n$ symfony new project_28 2.8\n$ composer require javiereguiluz/easyadmin-bundle\nUsing version ^1.15 for javiereguiluz/easyadmin-bundle\n...\nInstalling javiereguiluz/easyadmin-bundle (v1.15.2)\n```\n``` cli\n$ symfony new project_31 3.1\n$ composer require javiereguiluz/easyadmin-bundle\nUsing version ^1.15 for javiereguiluz/easyadmin-bundle\n...\nInstalling javiereguiluz/easyadmin-bundle (v1.15.3)\n``\n. @CruzyCruz the1.15.2-DEVversion number for1.15.2is \"normal\" because I made a mistake when releasing the new version: https://github.com/javiereguiluz/EasyAdminBundle/blob/v1.15.2/EasyAdminBundle.php#L24 Anyway, the number is wrong, but your version is correct: 1.15.2.\n. @CruzyCruz the1.15.2-DEVversion number for1.15.2` is \"normal\" because I made a mistake when releasing the new version: https://github.com/javiereguiluz/EasyAdminBundle/blob/v1.15.2/EasyAdminBundle.php#L24 Anyway, the number is wrong, but your version is correct: 1.15.2.\n. @shakaran thanks for investigating this! I propose to wait a bit before we fix this because Twig is furiously changing its internals and deprecating a lot of things. At the moment this could be an internal Twig error or a real deprecation that we must deal. We'll see :)\n. @shakaran thanks for investigating this! I propose to wait a bit before we fix this because Twig is furiously changing its internals and deprecating a lot of things. At the moment this could be an internal Twig error or a real deprecation that we must deal. We'll see :)\n. The exact cause seems to be this line in the TranslationDefaultDomainNodeVisitor.php file of the Symfony Twig Bridge. It's already fixed in the dev branches, so it'll be soled in the upcoming 3.1.7 version.\nClosing it as fixed then.\n. The exact cause seems to be this line in the TranslationDefaultDomainNodeVisitor.php file of the Symfony Twig Bridge. It's already fixed in the dev branches, so it'll be soled in the upcoming 3.1.7 version.\nClosing it as fixed then.\n. @vrobic sorry for the late response. You are right about this bug ... and at first sight it doesn't look hard to fix: that function \"just\" needs to be made recursive or at least support more nesting levels.\nSadly anything related to the Symfony Forms is immensely complicated to me, so I cannot fix this on my own. If someone can help me here, I'll be glad to review, help, tweak and merge. Thanks!\n. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because it's probably fixed thanks to the help of @CruzyCruz. If you don't agree or can't make this work, please reopen it. Thanks!\n. I have a question: should this new option be called sort or sort_by ?\n``` yaml\nentities:\n    Product:\n        list:\n            sort: 'name'\n            # sort: ['name', 'ASC']\nProduct:\n    list:\n        sort_by: 'name'\n        # sort_by: ['name', 'ASC']\n\nProduct:\n    list:\n        order_by: 'name'\n        # order_by: ['name', 'ASC']\n\n``\n. I have a question: should this new option be calledsortorsort_by` ?\n``` yaml\nentities:\n    Product:\n        list:\n            sort: 'name'\n            # sort: ['name', 'ASC']\nProduct:\n    list:\n        sort_by: 'name'\n        # sort_by: ['name', 'ASC']\n\nProduct:\n    list:\n        order_by: 'name'\n        # order_by: ['name', 'ASC']\n\n``\n. @ogizanagi I've added theorder_byto the list of candidates. Thanks for this nice proposal!\n. @ogizanagi I've added theorder_byto the list of candidates. Thanks for this nice proposal!\n. OK, let's keep this option assortto not give the impression that you can use the same syntax as SQLorder_by. Thanks!\n. OK, let's keep this option assortto not give the impression that you can use the same syntax as SQLorder_by. Thanks!\n. Nice! Thanks @mmoreram.\n. @kbardi I'm not sure if it will be simple to do it, but to answer you I need to know how this action works: do you upload an Excel file in the default edit/new views and then you execute a custom action ... or is this a completely custom action? Thanks!\n. Quick update about this. I tried to add aconfirmation` config option for actions. It would display a modal window with any custom message provided in the config. However, after working on it, the feature is much more complex than anticipated.\nSo I've decided to not implement this feature ... but in exchange, we recently added the option to display a global help message in any view (same message in all of them, different messages pre view, messages only in some specific views, etc.)  It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#display-a-help-message-in-the-page\nAnd since the template renders any HTML code that you put in the help message, you can use some HTML+CSS to display a huge warning message if needed for some specific action.. I can't reproduce it \ud83d\ude15 \n```\n$ symfony new my_project\n\u2714  Symfony 3.1.6 was successfully installed\n$ cd my_project/\n$ composer require javiereguiluz/easyadmin-bundle\n\nInstalling twig/extensions (v1.4.1)\nInstalling pagerfanta/pagerfanta (v1.0.3)\nInstalling javiereguiluz/easyadmin-bundle (v1.15.3)\n\n$ composer require friendsofsymfony/rest-bundle\n\nInstalling willdurand/jsonp-callback-validator (v1.1.0)\nInstalling willdurand/negotiation (v2.2.1)\nInstalling friendsofsymfony/rest-bundle (2.1.0)\n```\n. This is how this bug can be reproduced:\n\n```\n$ symfony new my_project\n\u2714 Symfony 3.1.6 was successfully installed\n$ cd my_project/\n$ composer require javiereguiluz/easyadmin-bundle 1.15.1\n\nInstalling twig/extensions (v1.4.1)\nInstalling pagerfanta/pagerfanta (v1.0.3)\nInstalling javiereguiluz/easyadmin-bundle (v1.15.3)\n\n$ vim composer.json\nReplace \"easyadmin-bundle\": \"1.15.1\" by \"easyadmin-bundle\": \"^1.15.3\"\n$ composer require friendsofsymfony/rest-bundle\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - The requested package javiereguiluz/easyadmin-bundle (locked at v1.15.1,\n      required as ^1.15.3) is satisfiable by javiereguiluz/easyadmin-bundle[v1.15.1]\n      but these conflict with your requirements or minimum-stability.\nInstallation failed, reverting ./composer.json to its original content.\n```\nOddly enough, if you follow the same steps but change the version constraint of any other package (for example, \"symfony/symfony\": \"3.1.*\" to \"symfony/symfony\": \"^3.1\") everything works right.\n. @xabbuh No, that's the point. I install 1.15.1 on purpose ... and then I change composer.json to ^1.15.3 and I don't execute composer update. I acknowledge that this behavior is really strange ... but it works for other packages and not for our bundle.\n. @xabbuh after you execute this:\ncomposer require javiereguiluz/easyadmin-bundle 1.15.1\n- Open composer.json and change 1.15.1 to ^1.15.3.\n- Then, don't execute any other Composer command to update that dependency (composer.json and composer.lock are out of sync!!)\n- Finally, try to install FOSRestBundle and you'll see the error:\ncomposer require friendsofsymfony/rest-bundle\n. Let's close this as \"fixed\" (although it still fails when using the unorthodox upgrade method). Thanks.\n. Let's close this as \"fixed\" (although it still fails when using the unorthodox upgrade method). Thanks.\n. I can confirm this error. For example, in the EasyAdmin Demo app:\n1. Product and Category are related many-to-many.\n2. If you create a product, its categories are saved.\n3. If you create a category, its products are lost.\nSadly, for now I don't know how to solve this problem \ud83d\ude15 \n. I can confirm this error. For example, in the EasyAdmin Demo app:\n1. Product and Category are related many-to-many.\n2. If you create a product, its categories are saved.\n3. If you create a category, its products are lost.\nSadly, for now I don't know how to solve this problem \ud83d\ude15 \n. Thanks to this comment in StackOverflow, I've found the solution: you must set the by_reference option to false in some field of your Symfony form:\nyaml\nUserGroup:\n    # ...\n    new:\n        fields:\n            - nom\n            - { property: 'users', type_options: { 'by_reference': false } }\nMy questions: is this a feature or a bug of the Symfony Form component? Can we do something to enable this option by default? Would that be dangerous for some users? Thanks!\n. Thanks to this comment in StackOverflow, I've found the solution: you must set the by_reference option to false in some field of your Symfony form:\nyaml\nUserGroup:\n    # ...\n    new:\n        fields:\n            - nom\n            - { property: 'users', type_options: { 'by_reference': false } }\nMy questions: is this a feature or a bug of the Symfony Form component? Can we do something to enable this option by default? Would that be dangerous for some users? Thanks!\n. @jordan-garay as you can see, it seems that this problem is something commonly suffered when using Doctrine + Symfony Forms. Therefore, I'm closing it because there's nothing left we can do from this bundle.\nIn the demo application I've added a small example + help note for future reference: https://github.com/javiereguiluz/easy-admin-demo/commit/452d402a0600d29228fb6ed366ae256c0d2f2180#diff-8b369a630fd4a6cad1d6bf3c574530bb\n. @jordan-garay as you can see, it seems that this problem is something commonly suffered when using Doctrine + Symfony Forms. Therefore, I'm closing it because there's nothing left we can do from this bundle.\nIn the demo application I've added a small example + help note for future reference: https://github.com/javiereguiluz/easy-admin-demo/commit/452d402a0600d29228fb6ed366ae256c0d2f2180#diff-8b369a630fd4a6cad1d6bf3c574530bb\n. @michau85 the solution proposed by @BenoitSauvage should fix this error. In the doc we mention this solution too in this section:\n```\nNOTE\nFields that represent an association with another entity are displayed as  lists. For\nthat reason, you must define the __toString() PHP method in any entity which is used in a\nDoctrine relation. Otherwise you'll see an error message because the backend cannot\nrepresent the related object as a string.\n``\n. The__toString()method is a special PHP method (they are called \"magic methods\"). It's invoked by PHP whenever your code needs to display the contents of an object as a string. For example, in your backend you may have aBookobject that sometimes must be displayed as part of the template. How can PHP represent this object? Should PHP just display \"This is a Book object\"? If you define the__toString()` method in a class, PHP executes that method to transform an object into a string.\nFor example, for the Book class, you should do the following:\nphp\npublic function __toString()\n{\n    return $this->title;\n}\nBut you can do more advanced things, like the following:\n``` php\npublic function __toString()\n{\n    return sprintf('%s (%s)', $this->title, $this->author);\n}\npublic function __toString()\n{\n    return sprintf('\"%s\", by %s ($%s)', $this->title, $this->author, $this->price);\n}\n```\nThe same goes for Category, where you should do something like this:\nphp\npublic function __toString()\n{\n    return $this->title;\n    // return $this->slug;\n}\n. The usual cause of this error is that the translator service is not enabled (Symfony doesn't enable it by default). It's explained here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/i18n.md\nThe second common reason is that you haven't cleared the cache of the application. Translation is a bit tricky sometimes in Symfony and you must clear the cache.\n. @appleandpear if you are starting with Symfony, clearing the cache is always the first solution that you should try \ud83d\ude04  When you have more experience Symfony, you'll see that you have only have to clear it in some edge cases (like when adding new translation files).\n. I can't understand why this is required either. Thanks Fabien.\n. I can't understand why this is required either. Thanks Fabien.\n. @bgatellier thanks for initiating this discussion. Undoubtedly it's a very important topic. The problem I have with CSP is that I love it in theory and I hate it in practice. It complicates everything so much! I don't know when ... but eventually we'll make this bundle CSP-compliant.\n. I've added Make the bundle CSP-compatible in the list of future features of this bundle. This is the list of things that we'll do, but not in the short term. It allows us to clean the Issues backlog closing issues that won't be fixed immediately. In any case, I assure you that we won't forget about this feature (I'm very interested in it). Thanks!\n. I'd like to merge this little improvement ... but I wonder if this check is the right thing to do under any circumstances. Does anybody foresee any potential problem with it? Thanks!\n. I'd like to merge this little improvement ... but I wonder if this check is the right thing to do under any circumstances. Does anybody foresee any potential problem with it? Thanks!\n. @ogizanagi thanks for reviewing this PR. I agree with your comments ... and I'll close this PR if we don't think it's robust enough.\nIn 7bbcdf6 I've made some last minute changes to see if they improve the original PR. If they are correct I'll update the tests. Thanks!\n. @ogizanagi thanks for reviewing this PR. I agree with your comments ... and I'll close this PR if we don't think it's robust enough.\nIn 7bbcdf6 I've made some last minute changes to see if they improve the original PR. If they are correct I'll update the tests. Thanks!\n. Let's merge this feature to test it for real ... and if something goes wrong, we can revert it very easily. Thank you all for the review!\n. I'm sorry for not reviewing this PR earlier. To be honest, I find it a bit confusing. Is the purpose to allow to define a menu config in different files or even the children of some menu item in different files?. I've been thinking about this for a long time ... and I'm afraid I must close it as \"won't fix\". I hate doing this and \"wasting\" the effort put to create this pull request, but the current solution looks a bit complex for something that should be a rare edge case.\nMoreover, keep in mind that you can define any part of the EasyAdmin config in its own file. For example, if the menu config is complex, instead of splitting it in several files, you can create a file just for the menu. That's what we do for example in the EasyAdmin Demo app: https://github.com/javiereguiluz/easy-admin-demo/blob/master/app/config/admin/menu.yml\nAlthough it didn't make it, thanks for your contribution and I hope you understand this decision. Thanks!. @andrewrutter in case it's useful, I've just added an example to the EasyAdmin Demo app to create a custom search query for related Doctrine entities: https://github.com/javiereguiluz/easy-admin-demo/pull/33/files\n. I'm glad to hear that. Let's close this for now ... and if you face any other problem with this, please open a new issue. Thanks!. Thanks for reporting this error. I'm afraid that I don't know what's going on because this goes beyond my limited Symfony Forms knowledge. In any case, I propose a simple solution to this issue in #1376.\n. Thanks for reporting this error. I'm afraid that I don't know what's going on because this goes beyond my limited Symfony Forms knowledge. In any case, I propose a simple solution to this issue in #1376.\n. Let's close this issue for now ... and we'll reopen if there is more information/details from the reporter. Thanks!. @ogizanagi thanks for improving this file.\n. @ogizanagi thanks for improving this file.\n. This feature should work. We even have tests for it and they pass:\n1. Config: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Fixtures/App/config/config_custom_entity_controller.yml\n2. Custom controller: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Fixtures/AppTestBundle/Admin/CustomCategoryController.php\n3. Test: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Controller/CustomEntityControllerTest.php\nI don't know what could be the cause of this error. Your code and class inheritance looks correct.\n. This feature should work. We even have tests for it and they pass:\n1. Config: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Fixtures/App/config/config_custom_entity_controller.yml\n2. Custom controller: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Fixtures/AppTestBundle/Admin/CustomCategoryController.php\n3. Test: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Controller/CustomEntityControllerTest.php\nI don't know what could be the cause of this error. Your code and class inheritance looks correct.\n. @forsetius any news about this? Did you manage to solve it? Thanks!\n. In case it's useful, I've just added an example of using custom controllers to the EasyAdmin Demo app: https://github.com/javiereguiluz/easy-admin-demo/pull/33/files\n. Let's close this as probably caused by what @robertfausk explained: using user as the name of the table, which is not allowed in PostgreSQL.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I love it! I wanted to get rid of the Markdown hack since day one. Thanks @ogizanagi\n. I love it! I wanted to get rid of the Markdown hack since day one. Thanks @ogizanagi\n. It tooks us so long to enable HTTPS on symfony.com ... that we should use it at every opportunity. Thanks!\n. It tooks us so long to enable HTTPS on symfony.com ... that we should use it at every opportunity. Thanks!\n. Let's close this because it's not the right fix ... and we'll wait for more info in the related issue.\n. Minor ... but I like it! Thank you.\n. Minor ... but I like it! Thank you.\n. Minor ... but I like it! Thank you.\n. Let's merge this \"as is\" because it fixes the error and we'll update to PHPCS 2.0 when the stable version is released. @ogizanagi thanks for fixing this and thanks for providing an example of your projects' config. I likt it a lot and we'll definitely use something like that in the future for this bundle!\n. Let's merge this \"as is\" because it fixes the error and we'll update to PHPCS 2.0 when the stable version is released. @ogizanagi thanks for fixing this and thanks for providing an example of your projects' config. I likt it a lot and we'll definitely use something like that in the future for this bundle!\n. Let's merge this \"as is\" because it fixes the error and we'll update to PHPCS 2.0 when the stable version is released. @ogizanagi thanks for fixing this and thanks for providing an example of your projects' config. I likt it a lot and we'll definitely use something like that in the future for this bundle!\n. @ogizanagi thanks for fixing this bug. It's sad that we've been using the wrong syntax for months :sob: Travis should notify you automatically when the syntax of the .travis.yml file is not valid! Anyway, this is now fixed thanks to you.\n. @ogizanagi thanks for fixing this bug. It's sad that we've been using the wrong syntax for months :sob: Travis should notify you automatically when the syntax of the .travis.yml file is not valid! Anyway, this is now fixed thanks to you.\n. @sadortun thanks for proposing this feature. However, I'm afraid that I agree with @ogizanagi and my sense is that this feature is not used commonly enough in backends.\nTherefore, I'm going to close this issue as \"won't fix\" ... but of course in the future we'll revisit this decision, as we do with other similar decisions. Thanks!\n. @sadortun thanks for proposing this feature. However, I'm afraid that I agree with @ogizanagi and my sense is that this feature is not used commonly enough in backends.\nTherefore, I'm going to close this issue as \"won't fix\" ... but of course in the future we'll revisit this decision, as we do with other similar decisions. Thanks!\n. @haithem-rihane I think that the problem is the following:\n1. You updated the YAML config as explained in the docs:\nyaml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n1. Your custom admin controller is not located in @AppBundle but in @BackendBundle.\nSo you should use instead the following config:\nyaml\neasy_admin_bundle:\n    resource: \"@BackendBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n. @haithem-rihane I think that the problem is the following:\n1. You updated the YAML config as explained in the docs:\nyaml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n1. Your custom admin controller is not located in @AppBundle but in @BackendBundle.\nSo you should use instead the following config:\nyaml\neasy_admin_bundle:\n    resource: \"@BackendBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n. Your issue implies that these links are displayed since 1.16.0 version ... but they should have always been displayed (that't the case in my apps for example).\nThese links are created when the related entity has the show action enabled. Therefore, to remove these links, disable the show action:\nyaml\neasy_admin:\n    #\u00a0disable it for every entity ...\n    disabled_actions: ['show']\n    # ...\n    entities:\n        Foo:\n            #\u00a0... or disable it individually for each entity\n            disabled_actions: ['show']\n            # ...\nI'm closing this as \"fixed\" ... but if you have any problem with this, please reopen it. Thanks!\n. Your issue implies that these links are displayed since 1.16.0 version ... but they should have always been displayed (that't the case in my apps for example).\nThese links are created when the related entity has the show action enabled. Therefore, to remove these links, disable the show action:\nyaml\neasy_admin:\n    #\u00a0disable it for every entity ...\n    disabled_actions: ['show']\n    # ...\n    entities:\n        Foo:\n            #\u00a0... or disable it individually for each entity\n            disabled_actions: ['show']\n            # ...\nI'm closing this as \"fixed\" ... but if you have any problem with this, please reopen it. Thanks!\n. @zsimaiof I'm sorry but, as you said yourself, the problem is that this bundle doesn't support composite Doctrine keys. We don't plan to add this feature anytime soon, so I must close this issue as \"won't fix\".\nI know that this is disappointing, but to make this bundle as simple as possible, we needed to make some trade-offs and not include support for some features, like this one.\n. @zsimaiof I'm sorry but, as you said yourself, the problem is that this bundle doesn't support composite Doctrine keys. We don't plan to add this feature anytime soon, so I must close this issue as \"won't fix\".\nI know that this is disappointing, but to make this bundle as simple as possible, we needed to make some trade-offs and not include support for some features, like this one.\n. @zsimaiof the problem is that PHP doesn't know how to transform the Issue entity into a string. The solution is very simple: define a __toString() method in the Issue entity. More details: https://github.com/javiereguiluz/EasyAdminBundle/issues/1360\nClosing it as \"fixed\", but if you still have problems, please reopen it. Thanks!\n. @zsimaiof the problem is that PHP doesn't know how to transform the Issue entity into a string. The solution is very simple: define a __toString() method in the Issue entity. More details: https://github.com/javiereguiluz/EasyAdminBundle/issues/1360\nClosing it as \"fixed\", but if you still have problems, please reopen it. Thanks!\n. I'm not sure about adding this change. In these cases, I always use the @OrderBy annotation provided by Doctrine. Would that annotation help you solve this issue?\n. I'm not sure about adding this change. In these cases, I always use the @OrderBy annotation provided by Doctrine. Would that annotation help you solve this issue?\n. @maldoinc in #1392 I'm trying to solve this in a different way without the need to define new config options. But my PR is just a proof of concept, so lets keep this one open too for the moment :)\n. @xabbuh thanks for fixing this bug. I'm merging it so others can easily test it before releasing a new version of the bundle. Thanks!\n. Are you using an unmodified version of this bundle or do you use your own templates, form themes, controllers, etc.?\n. Are you using an unmodified version of this bundle or do you use your own templates, form themes, controllers, etc.?\n. I've tested your blog.zip application and it's working as expected (the design issues are because the ZIP didn't include the assets):\n\nSo I'm closing this issue as \"not related to this bundle\". @xabbuh is probably right and there might be some problem related to the session. I recommend you to ask about this issue in the official Symfony support channels: https://symfony.com/support\n. Very nice catch! Thanks for fixing it.\n. I haven't looked into this in detail ... but I know that we have some code that guesses if some property is nullable. So, is the group property nullable in the user entity?\n. This is now ready for the final review :)\nFor now, I prefer to make the trade-off of not supporting sorting by multiple fields in exchange of a simpler codebase. However, I've added the \"sort by multiple fields\" to the list of Future Features of this bundle.\n. @maldoinc thanks for reviewing this.\n\nFor multiple relations/sorting, for now we'll do nothing. This PR only allows to sort by one association. I'm sorry but to keep this bundle simple we continuously do trade-offs like this.\nAbout the sorting issue, I cannot reproduce it with the EasyAdmin Demo App. If I use a custom sort and I click on that column, the sorting is maintained. If I click on other columns or on any menu item, the sorting may change.. @tomaszhanc thank you very much for fixing this error. I totally forgot about this reported issue!\n. Closing it in favor of #1411.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\n\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @anthony-launay you can do that ... but this kind of \"global actions\" are not supported natively by the bundle.\nThe solution is to override the default list.html.twig (for the entire backend or just for an entity) and then define that new action in the global_actions Twig block. For example, to add this action just for the User entity, create this simple Twig template:\n```twig\n{# app/Resources/views/easy_admin/User/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block global_actions %}\n  {{ parent() }}\nHERE you can add the button for your own action\n{% endblock %}\n```\nYou can also define the custom template in any other location, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#advanced-design-configuration\nThe feature to add \"global actions\" has been added to the list of future features of this bundle so I'm closing this issue. Thanks!. I'd say that the best solution for this is:\n\nUse dql_filter option when possible (not possible in your app)\nOverride the createListQueryBuilder() to build your own Doctrine query used to retrieve the entities displayed in the list view\n\nIn https://github.com/javiereguiluz/easy-admin-demo/blob/master/src/AppBundle/Controller/Admin/PurchaseController.php you can see a similar example, but overriding the createSearchQueryBuilder() to only modify the search query.. If you only want to filter the entities listed in the list view, you just need to override the method that I mentioned. There is no need to override other methods or change any template. The pagination and sorting will keep working.. I'm closing this old issue because it's probably no longer relevant. In any case, there are different ways to achieve something like this: use a custom controller and override only the needed methods (https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html), define a custom action and use pure Symfony code to create the controller and the template (https://symfony.com/doc/current/bundles/EasyAdminBundle/tutorials/custom-actions.html), etc.. I'm not sure if it will fix this issue, but in #1704 I've added a note about the use of custom namers.. Thanks @xabbuh.. Sadly we must close this as \"can't fix\". This option expects a QueryBuilder object or a PHP closure (https://symfony.com/doc/current/reference/forms/types/entity.html#query-builder) but in YAML there's not a simple way to represent those (in Symfony you can do that serializing objects, but it's really ugly: https://symfony.com/doc/current/components/yaml.html#object-parsing-and-dumping).\nThis is one of those edge-cases where YAML config format is not enough. Luckily, we can use PHP to solve this issue, although is not as simple and fast as using YAML.. Sadly we must close this as \"can't fix\". This option expects a QueryBuilder object or a PHP closure (https://symfony.com/doc/current/reference/forms/types/entity.html#query-builder) but in YAML there's not a simple way to represent those (in Symfony you can do that serializing objects, but it's really ugly: https://symfony.com/doc/current/components/yaml.html#object-parsing-and-dumping).\nThis is one of those edge-cases where YAML config format is not enough. Luckily, we can use PHP to solve this issue, although is not as simple and fast as using YAML.. @ikvasnica if you don't define which fields to display in the show action, EasyAdmin selects some fields automatically. One of those fields seems to be a Doctrine association ... and those associations require to define the __toString() to avoid PHP errors ... that's why you see the error message (that we introduced in recent versions of the bundle).\nIn any case, your issue made me realize that we have an issue here ... if the show action is disabled, we shouldn't check this. So I'm going to fix this in a pull request. Thanks.. Closing it as fixed by #1407.. @COil which one of the two related error messages do you see? The first one is about Doctrine associations and the second one about autocomplete fields.\n\nIt's strange that this fails because the check is trivial:\nphp\nif (!method_exists($fieldConfig['targetEntity'], '__toString')) { ... }. @COil at the end I reverted this feature. If you upgrade to the new 1.16.3 version, this error should be gone. Thanks!. I've just tested this in the EasyAdmin Demo app and it worked for me.\nThe Product entity defines this:\nphp\n    /**\n     * Indicate if the product is enabled (available in store).\n     *\n     * @var bool\n     * @ORM\\Column(type=\"boolean\")\n     */\n    private $enabled = false;\nWhen adding the following, the list of products is filtered as expected:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # ...\n            list:\n                dql_filter: entity.enabled = true\nThe following also worked for me:\n\ndql_filter: 'entity.enabled = true'\ndql_filter: 'entity.enabled = 1'\ndql_filter: entity.enabled = 1\n\nI don't know which could be the cause of this error \ud83d\ude15 . Please try to stop redirections and look for the SQL queries executed for the delete action:\n```yaml\napp/config/config_dev.yml\nweb_profiler:\n    intercept_redirects: true  # <-- change this to true\n```. The only thing I can think of is this condition at the beginning of the delete action:\nphp\nif ('DELETE' !== $this->request->getMethod()) {\n    return $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n}\nUsing the DELETE HTTP method requires to enable support for it in Symfony uncommenting this line in web/app.php:\nphp\n// Request::enableHttpMethodParameterOverride();\nSee http://api.symfony.com/master/Symfony/Component/HttpFoundation/Request.html#method_enableHttpMethodParameterOverride\n. In this section of the docs: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#form-groups  we have this tip:\n\nIn any case, thanks for your tip too. Moreover, I'm thinking about another way to solve this for once and for all :)\n. In this section of the docs: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#form-groups  we have this tip:\n\nIn any case, thanks for your tip too. Moreover, I'm thinking about another way to solve this for once and for all :)\n. This is simply great!! Thanks @ogizanagi for compiling this list and thanks to all the people who contribute to this bundle in one way or another.. This is simply great!! Thanks @ogizanagi for compiling this list and thanks to all the people who contribute to this bundle in one way or another.. @NodokaMurmevent I'm sorry but I don't understand this issue. You are seeing this log message because things like template : \"money\" are deprecated and you perfectly fixed to use it template : \"money.html.twig\" (or any other valid Symfony template path).\nSo everything seems correct here, right?. @NodokaMurmevent I'm sorry but I don't understand this issue. You are seeing this log message because things like template : \"money\" are deprecated and you perfectly fixed to use it template : \"money.html.twig\" (or any other valid Symfony template path).\nSo everything seems correct here, right?. @NodokaMurmevent I understand the problem now. You are right!! It's fixed in #1416. Thanks for noticing this.. @NodokaMurmevent I understand the problem now. You are right!! It's fixed in #1416. Thanks for noticing this.. I've been thinking about this feature and I'm afraid I'm \ud83d\udc4e. The reason is that it feels like \"abusing\" the comment option. In fact, Doctrine itself uses these comments sometimes for its own features, so I don't know if it's safe to use it for every property. Besides, the help messages of a real backend can be very long and we support adding HTML tags in it (to use <strong> for example or add links to external resources), so I don't know how those messages would look as a database comment.\n\nIn any case, I can understand the pain of duplicating the information in this case. So I propose you something. When parsing fields, we copy all the properties provided by Doctrine for them. So in the easyadmin.field property inside the form templates you must have this comment information. You could define your own form theme and only override the form_row block:\n```twig\n{% block form_row -%}\n    {# ... copy here the original code of EasyAdmin form theme ... #}\n{# BELOW you can customize the field help to show your database comments#}\n\n    {% if easyadmin.field.help|default('') != '' %}\n        <span class=\"help-block\"><i class=\"fa fa-info-circle\"></i> {{ easyadmin.field.help|trans(domain = easyadmin.entity.translation_domain)|raw }}</span>\n    {% endif %}\n</div>\n\n{%- endblock form_row %}\n```\n\nEven if this time it didn't make it, thanks for proposing new features and I hope you understand this decision. Thanks!. @ogizanagi thanks for fixing this. I've dared to propose new CS rules. If you can, please tell me what you think about them. Thanks!. @ogizanagi thanks for fixing this wrong config.. @ogizanagi awesome! Thank you very much for this!. @ogizanagi no worries!!! It was a super easy fix ... and I think it was worth it to fix these minor issues.. We have a failure when testing PHP 7.1 and Symfony 3.2:\n```diff\nThere was 1 failure:\n1) JavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\CustomMenuTest::testExternalRoutesDontIncludeIndexParameters\nFailed asserting that two strings are identical.\n--- Expected\n+++ Actual\n@@ @@\n-/custom-route?custom_parameter=Lorem+Ipsum\n+/custom-route?custom_parameter=Lorem%20Ipsum\n/home/travis/build/javiereguiluz/EasyAdminBundle/Tests/Controller/CustomMenuTest.php:199\n```\nI didn't find anything in the Symfony changelog. Is this something expected? Is this a Symfony bug? Is this a PHP 7.1 change? Thanks for your help!\n\nThis code:\nphp\necho http_build_query(['custom_parameter' => 'Lorem Ipsum']);\nReturns custom_parameter=Lorem+Ipsum from PHP 5.6 to PHP 7.1 as seen in https://3v4l.org/FkeUR. @ogizanagi thanks for your help! I fixed the failing test and we're now green in PHP 7.1 + Sf 3.2  \ud83c\udf89  Thanks for updating the Symfony UPGRADE guide too.. @truckee thanks for reporting this issue. I agree with @ogizanagi and in #1423 I'm removing this feature. Once tests pass, I'll release the 1.16.3 version of the bundle.. Closing it as fixed by #1423 and available in the just released 1.16.3 version.. I want this feature to be merged as soon as possible ... but the proposed solution is too complex. @ldaguise of course is not your fault. The problem is the way we handle exceptions. I'm proposing to improve them in #1473, so for now I'm closing this PR in favor of the newer one. Thanks!. I want this feature to be merged as soon as possible ... but the proposed solution is too complex. @ldaguise of course is not your fault. The problem is the way we handle exceptions. I'm proposing to improve them in #1473, so for now I'm closing this PR in favor of the newer one. Thanks!. Thanks for this contribution. Although your proposal looks OK, I'd like to test it before merging it. I'm a bit busy these days, so I haven't tested this yet, but I'll do.. @user121216 thanks for this contribution. I finally tested it and it worked for me as expected. It's now merged.. @czeslav87 I can't thank you enough for investigating the tricky #1409 issue and for providing the solution. It would have taken me ages to find the cause of this issue and its solution!  I'm finishing this PR in #1477. I tried to make those changes here ... but I failed. I also tried to reuse your original commits ... but I failed again. I'm sorry but Git is not my strong suit. In any case, yours are the full credits of the solution. Thanks!. @benyang2015 I'm sorry I didn't reply to this earlier. I'm afraid that we can't make this change. To make things simpler we only define 1 route and it can contain lots of different query parameters. That's why we use query params instead of route placeholders.\nI agree that the URL is a bit ugly ... but this is a backend, so only people internal to the company should look at it ... and some browsers are even hiding the URLs by default, so the end-users don't see it.\nI hope you understand it!. For anything related to forms, this bundle relies on the features provided by Symfony Forms. This means that you need to use the novalidate form attribute or set false to the validation_groups option of the form. For example:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                form_options: { validation_groups: false }\n                # ...\nClosing it as fixed, but please reopen if the error persist.. I agree too ... and I'm going to implement this soon (I've needed this in several occasions myself). I'll call it help instead of description to use the same naming everywhere.. I'm afraid I cannot reproduce this error. I can't see anything wrong in your config and testing the same config in the EasyAdmin Demo app gives me the expected result.\ndid you manage to solve this issue or have more info about it? Thanks!. I must close this because I can't reproduce it. If you still experience this problem, please create a new issue and include the needed code to reproduce the error. Thanks!\nBy the way, the documentation about \"form_group\" is here: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/edit-new-configuration.html#customizing-the-form-layout. I must close this because I can't reproduce it. If you still experience this problem, please create a new issue and include the needed code to reproduce the error. Thanks!\nBy the way, the documentation about \"form_group\" is here: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/edit-new-configuration.html#customizing-the-form-layout. Closing it as fixed because this bundle was already compatible with Twig 2.x. There were some problems in the Travis tests, but they were solved in #1432.. @krecu thanks for fixing this PostgreSQL issue. I've refactored your code a bit ... and I've removed the changes related to mb_strtolower(). I'll add those changes in a separate PR because using mb_*() will require to use the Symfony polyfill. Thanks!. Closing it because this doesn't make tests faster. I like this feature, but I prefer to implement it in the future. If we do that now, we'd need to duplicate a lot of code and the result will be a mess. I prefer to wait until the 2.0 version of this bundle is released, where we'll simplify a lot of things and we'll remove all the legacy stuff.\nI added this feature to the Roadmap of this bundle so I'm closing this issue. Thanks!. @yceruto thanks for your quick fix. I could verify that #1441 fixes the reported issue, so I'm closing this as fixed. Thanks!. Closing as fixed by @CruzyCruz solution. Thanks!. Closing as fixed by @CruzyCruz solution. Thanks!. The feature is now complete and ready for review. This is how it looks (but we can do design tweaks later if needed):\n\n\n\n\n. The feature is now complete and ready for review. This is how it looks (but we can do design tweaks later if needed):\n\n\n\n\n. Thanks for this bug fix! I've tested the solution and it works like a charm! Cheers.. @bmanolov thank you very much for updating and cimpleting this translation! \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0442\u0438 \u043c\u043d\u043e\u0433\u043e. @janit thank you so much for adding a new translation to this bundle! Paljon kiitoksia. @yceruto I love when PRs remoe more lines than they add! Thanks for this.. Closing as duplicate of #1447.. Closing as duplicate of #1447.. Closing as something related to Doctrine/Symfony, not this bundle. @laurent-bientz thanks for your help!!. Closing as something related to Doctrine/Symfony, not this bundle. @laurent-bientz thanks for your help!!. Let's close this as \"fixed\".\n@marcnava13 upgrading the contents of the bundle templates is indeed a problem for those who customize them a lot. We try to minimize the changes, but we can't avoid them. Some possible solutions would be to try to make some customizations using pure CSS code instad of changing the HTML contents ... and also try to reuse the original blog contents as much as possible, specially for those which don't contain template code but programming code (e.g. {% block delete_form %}{{ parent() }}{% endblock %}). If you think we should add more Twig blocks to improve reusability, please tell us. Thanks!. Sadly it's not possible ... and because of our architecture, it won't be possible anytime soon. One solution that I used successfully is to define multiple kernels in the Symfony application and load different easy_admin configs in each of them. It's not worth it in small apps, but it's definitely not a complex solution to implement for larger apps.\nGiven that we can't fix this issue, sadly I must close it as \"won't fix\". Thanks for understanding it.. Thanks for this contribution. I'm a bit busy these days, so I haven't reviewed this yet, but I'll do.. I finally reviewed this and reproduced the issue. I've opened #1708 to fix it, so I'm closing this PR in favor of the new one. Thanks!. @dannyvw thanks for contributing this fix. We're always cautious about changing the dependencies ... but this looks like a no-brainer and it only affects to require-dev ... so let's merge it. Thanks!. @ogizanagi I'm confused. The composer install help says:\n--dev     Enables installation of require-dev packages (enabled by default, only present for BC).\n--no-dev  Disables installation of require-dev packages.\n. OK ... I understand you now ... and you are right \ud83d\ude0a  I'm sorry. Closing it.. I definitely like this feature because it makes the bundle accessible to lots of new people. I'm a bit busy these days and that's why I can't review this in detail yet ... but I wonder if we should define a configuration option for this.\nIf I'm right, some languages must always be displayed RTL and the other languages must always be LTR. I guess there are no languages that can define both styles. So, if this is true, we could enable/disable RTL based on the value of the application locale.. Sorry, I tried to push some changes to your repository ... but I failed.. Sorry, I tried to push some changes to your repository ... but I failed.. In #1464 I'm continuing your work (I made some tweaks and added tests). Of course I maintained your original commit, so you'll get full credit of your contribution. Thanks!. In #1464 I'm continuing your work (I made some tweaks and added tests). Of course I maintained your original commit, so you'll get full credit of your contribution. Thanks!. @ikvasnica CSP is in our ROADMAP (see https://github.com/javiereguiluz/EasyAdminBundle/projects/1) but I can't promise any date for solving it. I'm afraid that at the moment we have many other priority features/bug to deal with. I'm sorry.. I've tested this query in MySQL and it works as expected:\n\nI've checked the numeric types in PostgreSQL and the problem is that integer columns can only store up to 2147483647 and you are looking for 92611125088891231131, which requires a bigint, etc.\nI guess we could do some extra checks to not check integers when the number to look for is too big.. I've tested this query in MySQL and it works as expected:\n\nI've checked the numeric types in PostgreSQL and the problem is that integer columns can only store up to 2147483647 and you are looking for 92611125088891231131, which requires a bigint, etc.\nI guess we could do some extra checks to not check integers when the number to look for is too big.. @arendvw thanks for proposing this improvement ... and thanks for preparing the demo. Docs look lovely. However ... I'm trying at the moment a different strategy ... I'm trying to move EasyAdminBundle docs (and other popular bundles docs) to http://symfony.com/doc/bundles/ \nIf they don't allow me to do that ... I'll keep exploring your solution. Thanks!. @arendvw thanks for proposing this improvement ... and thanks for preparing the demo. Docs look lovely. However ... I'm trying at the moment a different strategy ... I'm trying to move EasyAdminBundle docs (and other popular bundles docs) to http://symfony.com/doc/bundles/ \nIf they don't allow me to do that ... I'll keep exploring your solution. Thanks!. The docs of this bundle were finally merged on symfony.com. See http://symfony.com/doc/current/bundles/EasyAdminBundle/index.html\n@arendvw thanks again for working on this and for proposing to improve docs. You were an inspiration to make us publish those docs on symfony.com ... and we did it! Thanks.. @arendvw could you please remove (or make private) these docs? --> https://easyadminbundle.readthedocs.io/en/latest/\nSadly that URL is the top result when googling for EasyAdmin docs, but it's totally outdated. Moreover, we now have the docs published on the official Symfony website (https://symfony.com/doc/master/bundles/EasyAdminBundle/index.html) so it doesn't make sense to duplicate the docs. Thanks!. @arendvw could you please remove (or make private) these docs? --> https://easyadminbundle.readthedocs.io/en/latest/\nSadly that URL is the top result when googling for EasyAdmin docs, but it's totally outdated. Moreover, we now have the docs published on the official Symfony website (https://symfony.com/doc/master/bundles/EasyAdminBundle/index.html) so it doesn't make sense to duplicate the docs. Thanks!. @arendvw thank you! I agree your proposal is better. Let's see how this goes. Thanks!. @arendvw thank you! I agree your proposal is better. Let's see how this goes. Thanks!. If I put the following in my backend config:\nyaml\neasy_admin:\n    list:\n        max_results: 50\n    # ...\nThe pagination works as expected (using the latest version of EasyAdmin):\n\nIf you click on the Doctrine panel in the Symfony Web Debug Toolbar, you should see a query for the 50 items. Something like this:\n\nDo you see that?. Closing it because this was probably fixed. Otherwise, please reopen.. Nice catch! That's indeed a bug. If you want to create the pull request yourself, go ahead. Otherwise, please tell me and I fix it myself. Thanks!. Nice catch! That's indeed a bug. If you want to create the pull request yourself, go ahead. Otherwise, please tell me and I fix it myself. Thanks!. After reading the RTL article on the Wikipedia, auto-detecting this option looks safe: true for ar, fa and he locales and false for the rest of locales. That's why I've tweaked the original PR to implement this behavior.. After reading the RTL article on the Wikipedia, auto-detecting this option looks safe: true for ar, fa and he locales and false for the rest of locales. That's why I've tweaked the original PR to implement this behavior.. @B-GH this feature is merged now. Thanks for implementing it!. @B-GH this feature is merged now. Thanks for implementing it!. That's a very interesting proposal!  I never thought about this, but now that you mentioned, it looks too obvious \ud83d\ude04  I'm going to hardcode this to the templates because I guess there is no need to add an option to enable/disable this.. That's a very interesting proposal!  I never thought about this, but now that you mentioned, it looks too obvious \ud83d\ude04  I'm going to hardcode this to the templates because I guess there is no need to add an option to enable/disable this.. I'm glad this is fixed now.. I'm glad this is fixed now.. @esmiz very nice catch! Thanks for your contribution.. @esmiz very nice catch! Thanks for your contribution.. @xabbuh I had this in my TODO list ... so thanks for contributing it!. @xabbuh I had this in my TODO list ... so thanks for contributing it!. I recently closed an issue which was very similar to this one. The problem is that creating a generic way to create new entities on-the-fly while you editing other entity is very complex. I'd like to have that feature as a user ... but it would be a nightmare for us to implement and maintain it. I'm sorry.. That's strange. If you override just the main block, the styles should be loaded. If you view the source of your page, do you see something in the <head> section of the page? Are the CSS files linked but they don't work?. That's strange. If you override just the main block, the styles should be loaded. If you view the source of your page, do you see something in the <head> section of the page? Are the CSS files linked but they don't work?. This is really strange. I don't have any problem with any of my apps, inlcuding the EasyAdmin Demo app:\n\nMy Google Chrome version is 55.0.2883.95 (64-bit).\nIf you view the source code of the application, do those <select> elements contain anything or are they empty?. Closing it because this is probably fixed. Otherwise, please reopen.. This is now ready for the final review before merge. I've updated the design of the error messages slightly to always display them centered in the page:\n\n. I'm really sorry, but we can't merge this proposal \ud83d\ude22  It's true that PHP 5.3 (and Symfony 2.3) are dead ... but there's still a high number of production servers and applications that haven't been updated. That's why I don't feel comfortable deprecating them yet.\nI'm afraid that stats like Composer's PHP Versions Stats - 2016.2 Edition are incredibly misleading because they mainly focus on the development machines used by developers ... but that's not where applications are run in production.\nI'm sorry.. I'm really sorry, but we can't merge this proposal \ud83d\ude22  It's true that PHP 5.3 (and Symfony 2.3) are dead ... but there's still a high number of production servers and applications that haven't been updated. That's why I don't feel comfortable deprecating them yet.\nI'm afraid that stats like Composer's PHP Versions Stats - 2016.2 Edition are incredibly misleading because they mainly focus on the development machines used by developers ... but that's not where applications are run in production.\nI'm sorry.. I like this proposal and the code required to implement it is minimal. See #1478.. @BenoitSauvage I don't know if I'm right ... but I'd say that custom validators don't have any relation with this bundle. If you define the validator class, register it as a service and use it in your entities, it should work anywhere, even if you use or don't use this bundle.. Let's close it for now as \"probably unrelated to this bundle\". In case it's useful, in StackOverflow there are some related resources:\n\nMaybe the validator name was wrongly used in the entity\nMaybe the validate method doesn't return violation objects\nMaybe the validatedBy() method has a typo. @mysiar this will probably be merged soon and released as part of the next version of the bundle ... so maybe you can wait a bit? Otherwise you can download this branch ... or even copy+paste the changes because they are minimal.. After thinking about this, I agree with @ogizanagi and we don't need this new option because we can already achieve this in other ways. The problem was that our CSS styles were wrong, so if you used  css_class: text-right that style wasn't applied because our own CSS styles override it.\n\n\nMaybe you are thinking: but align: right is better than css_class: text-right  It's true that it's shorter, but it requires you to learn and memorize a new config option and it requires us to maintain a new config option forever. Instead, using the css_class is \"natural\" and you can already use any of the CSS utilities provided by Bootstrap, such as text-right, text-center, etc.. @mysiar yes, css_class: text-right will work exactly as align: right was going to work. It aligns both the header and all of the contents of that column.. @Alex-Design I'd say there is some routing and/or security misconfiguration somewhere in the application. Maybe some access_control route is wrong (the user's roles or the route pattern)? . Closing this old issue report hoping it was somehow fixed.. Closing this old issue report hoping it was somehow fixed.. I haven't looked into the details of this issue yet ... but if you just want to sort alphabetically the contents of some Doctrine association, you may just use @OrderBy. Something like this:\n```php\nuse Doctrine\\ORM\\Mapping as ORM;\n/ @ORM\\Entity /\nclass Influencer\n{\n    // ...\n/**\n * @ORM\\ManyToMany(targetEntity=\"Country\")\n * @ORM\\OrderBy({\"name\" = \"ASC\"})\n **/\nprivate $country;\n\n}\n``. I don't know if you solved this issue ... but if you only need to make this field non required, maybe you can just define therequired` option for that type:\nphp\nfor ($i = 1; $i <= 6; $i++) {\n    $formBuilder->add(\n        'following_country_rank_' . $i,\n        EntityType::class,\n        array(\n            'class' => 'AppBundle:Country',\n            'required' => false,  // <------- ADD THIS\n            'query_builder' => function (CountryRepository $repo) {\n                return $repo->createQueryBuilder('c')->addOrderBy('c.name', 'ASC');\n            },\n        )\n    );\n}. Thank you for updating this asset. Cheers!. The inspection results agree with this \ud83d\ude04 \n\n. Never happened to me :(  My guess is that it's caused by some strict access_control rule?  If it doesn't contain any sensitive information, could you please try to access to the CSS file directly in your browser and take a screenshot to see the error details? Thanks!. Let's close this for now because it seems related to the hosting or other config outside this bundle. We'll reopen if there's more information about a bug in this bundle. Thanks!. Let's close this for now because it seems related to the hosting or other config outside this bundle. We'll reopen if there's more information about a bug in this bundle. Thanks!. Thanks for reporting this! I can reproduce it and #1490 fixed the problem for me. I'll release a new bundle version right after this fix is merged. Thanks!. Thanks for reporting this! I can reproduce it and #1490 fixed the problem for me. I'll release a new bundle version right after this fix is merged. Thanks!. I'd say that you need to define the password property as repeated and Symfony Forms will do the rest.. I'd say that you need to define the password property as repeated and Symfony Forms will do the rest.. Closing it as \"fixed\" ... but feel free to reopen if you have any problem. Thanks!. Closing it as \"fixed\" ... but feel free to reopen if you have any problem. Thanks!. I'm not sure I understand the problem ... but if you just need to open the custom route in a new browser window, you can do that with the target config option, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/6-menu-configuration.md#targets. I'm not sure I understand the problem ... but if you just need to open the custom route in a new browser window, you can do that with the target config option, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/6-menu-configuration.md#targets. @Uplink03 thanks or your comment. I think I understand the original question now. You are right in your last comment.\nWhen using a Symfony route, your backend \"leaves\" EasyAdmin ... but in the return $this->render(...) of your controller you can render a template in your application that extends any of the default templates of the bundle. If you want to make minor changes, just override some of the blocks defined in those templates. If you just want to maintain the main layout and the menu navigation, use the template shown by @Uplink03:\n```twig\n{% extends \"@EasyAdmin/default/layout.html.twig\" %}\n{% block main %}\nYour custom content that you want to see in EasyAdminBundle context.\n{% endblock %}\n```\nClosing it as \"fixed\" then. Thanks!. We have two possible solutions for this issue:\n1) The long-term solution, which requires changing your app, is storing those calculated values in the database itself. For example, if the number of comments is important in your blog, it's always better to store the num_comments value in the table (it solves all problems instantly, such as sorting, searching, etc. by this value). However, I guess it's not easy to add the number_of_passes, number_of_loans etc. in your database, so ...\n2) The alternative solution is to override the method used by the bundle to find the items to display in the \"list\" view. This is explained in this chapter: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md  and specifically, you must override 1 method called createListQueryBuilder().\nLet's close this as \"fixed\", but if you have problems with this solution, please reopen or create a new issue. Thanks!. Instead of defining the listAbuseAction() method, you can define the createAbuseListQueryBuilder() to override just the Doctrine query used to get the results, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\nThis tutorial by @ikvasnica may be useful for you too: http://blog.ikvasnica.com/entry/easy-admin-bundle-how-to-remove-null-values-when-sorting-entities\nI'm closing it as \"fixed\", but if you have problems, please reopen. Thanks!. Instead of defining the listAbuseAction() method, you can define the createAbuseListQueryBuilder() to override just the Doctrine query used to get the results, as explained in https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\nThis tutorial by @ikvasnica may be useful for you too: http://blog.ikvasnica.com/entry/easy-admin-bundle-how-to-remove-null-values-when-sorting-entities\nI'm closing it as \"fixed\", but if you have problems, please reopen. Thanks!. Thanks a lot for reporting this issue. Even if your fix is correct ... I think we can fix it even better. I was reviewing 8a7e3e4e25b10c01b308d48e60417e9aa5ada348 and I think I've spotted the error:\n\nWhat do you think about changing this PR to revert instead the change introduced in that commit?. Thanks a lot for reporting this issue. Even if your fix is correct ... I think we can fix it even better. I was reviewing 8a7e3e4e25b10c01b308d48e60417e9aa5ada348 and I think I've spotted the error:\n\nWhat do you think about changing this PR to revert instead the change introduced in that commit?. You made me doubt ... so I need to carefully think if we need only your fix or both fixes.. You made me doubt ... so I need to carefully think if we need only your fix or both fixes.. I've thought about this and I consider this PR as it is as the right solution ... so I'm merging it. Thanks @Pierstoval.. I've thought about this and I consider this PR as it is as the right solution ... so I'm merging it. Thanks @Pierstoval.. Really strange because this part is managed entirely by Symfony and not EasyAdmin. When using params in the YAML file, Symfony converts them before EasyAdmin can access to that config.\nTry to get the value of the parameter in the console with this command:\nbash\n$ ./bin/console debug:container --parameter=app.version. Really strange because this part is managed entirely by Symfony and not EasyAdmin. When using params in the YAML file, Symfony converts them before EasyAdmin can access to that config.\nTry to get the value of the parameter in the console with this command:\nbash\n$ ./bin/console debug:container --parameter=app.version. @degouville I think I know what's going on. The app.version parameter is only an example and Symfony doesn't define it automatically. If you need that param, you must define it yourself.\nAbout app.user.username the problem is that the app thing provided by Symfony is a variable and not a parameter. You cannot use it in config files (not for EasyAdmin or any other bundle). The app variable can only be used in the templates.\nThe main difference between the two is that \"app.version\" is just a string which defines the name of a param, whereas \"app.user.username\" is equivalent to $app->getUser()->getUsername(). @degouville I think I know what's going on. The app.version parameter is only an example and Symfony doesn't define it automatically. If you need that param, you must define it yourself.\nAbout app.user.username the problem is that the app thing provided by Symfony is a variable and not a parameter. You cannot use it in config files (not for EasyAdmin or any other bundle). The app variable can only be used in the templates.\nThe main difference between the two is that \"app.version\" is just a string which defines the name of a param, whereas \"app.user.username\" is equivalent to $app->getUser()->getUsername(). 1) The type option in edit / new views uses the Symfony Form types:\n\nIt's explained in: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-form-fields\n2) About the files, if you use VichUploaderBundle to manage those files, here is a tutorial about the seamless integration of that bundle and EasyAdmin: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/upload-files-and-images.md\nIf you manage those files on your own ... you'll need to define a new form theme with just 1 small Twig block to define how the contents of that file are displayed.\n. 1) The type option in edit / new views uses the Symfony Form types:\n\nIt's explained in: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-form-fields\n2) About the files, if you use VichUploaderBundle to manage those files, here is a tutorial about the seamless integration of that bundle and EasyAdmin: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/upload-files-and-images.md\nIf you manage those files on your own ... you'll need to define a new form theme with just 1 small Twig block to define how the contents of that file are displayed.\n. @gsinkovskiy thank you so much for contributing an entire new translation! \u0414\u0443\u0436\u0435 \u0434\u044f\u043a\u0443\u044e. @g21designz I'm afraid this must be some misconfiguration in the server. We have hundreds of automated tests, so a huge error like that one couldn't get unnoticed \ud83d\ude15 . @alberto-coolshop thanks for this proposal. I'm interested ... unless implementing the new feature is \"too complex\". First, could you show me how this feature could work for end-users? Do you have an example of the config needed? Thanks!. Let's close this for now and rethink about this feature for the next major version of the bundle. Thanks!. Let's close this for now and rethink about this feature for the next major version of the bundle. Thanks!. In #1510 I'm trying to improve the debug of errors like this one.\nBy the way, the mentioned error was fixed in https://github.com/symfony/symfony/pull/20701 and it's part of Symfony 3.2.1.. In #1510 I'm trying to improve the debug of errors like this one.\nBy the way, the mentioned error was fixed in https://github.com/symfony/symfony/pull/20701 and it's part of Symfony 3.2.1.. @gigib82 thanks for contributing this bug fix and I'm sorry for not having replied earlier. I've created #1545 to solve this and other issues, so I'm closing this in favor of it. Thanks!. @gigib82 thanks for contributing this bug fix and I'm sorry for not having replied earlier. I've created #1545 to solve this and other issues, so I'm closing this in favor of it. Thanks!. I'll be honest: I don't fully understand this option, so I don't know if it's better to leave it null or not. Where can I find more information about this option? Thanks!. @egraumann thanks for this great explanation! Everything is clear to me now and the references were very useful. You saved me a lot of time! I'm trying to fix this in #1515.. @egraumann thanks for this great explanation! Everything is clear to me now and the references were very useful. You saved me a lot of time! I'm trying to fix this in #1515.. @timonf thanks for explaining the problem brilliantly. I'm going to look into this ... but it looks safe to do the proposed change (it's true that Twig syntax will be ugly in this case, but we'll add a comment explaining it!)  Thanks!. I don't know what to say about this ... but some quick comments:\n\nMost of our strings use EasyAdmin domain ... but the few strings related to actions use messages. Why? Because we allow to define custom actions and we must use the default Symfony domain (messages) to allow people override the translations of actions such as list, edit, etc.\nIf you set the translation_domain option, then we only use EasyAdmin domain for our internal strings and the value of translation_domain for everything else.\n\nSo, I'd say that if you use your own translation_domain, you must copy+paste all the strings defined in the messages.locale.xlf file (but not the strings from EasyAdmin.locale.xlf).\nDoes it make sense?. I don't know what to say about this ... but some quick comments:\n\nMost of our strings use EasyAdmin domain ... but the few strings related to actions use messages. Why? Because we allow to define custom actions and we must use the default Symfony domain (messages) to allow people override the translations of actions such as list, edit, etc.\nIf you set the translation_domain option, then we only use EasyAdmin domain for our internal strings and the value of translation_domain for everything else.\n\nSo, I'd say that if you use your own translation_domain, you must copy+paste all the strings defined in the messages.locale.xlf file (but not the strings from EasyAdmin.locale.xlf).\nDoes it make sense?. Just an opinion but, creating a new translation file for each entity will only complicate things. It's better to have all translations in a single file and a single domain.\nRegarding the second comment, I can't reproduce the error. If you check the Twig templates, you'll see that we always use things like: translation_domain: _entity_config.translation_domain  We never use messages for translation directly ... only as a fallback ({{ helper.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}). Just an opinion but, creating a new translation file for each entity will only complicate things. It's better to have all translations in a single file and a single domain.\nRegarding the second comment, I can't reproduce the error. If you check the Twig templates, you'll see that we always use things like: translation_domain: _entity_config.translation_domain  We never use messages for translation directly ... only as a fallback ({{ helper.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}). Not yet ... but it will be possible sooner than later. I'm closing this issue because it's a duplicate of other issues that have asked for the same ... but we'll consider your issue too. Thanks!. Not yet ... but it will be possible sooner than later. I'm closing this issue because it's a duplicate of other issues that have asked for the same ... but we'll consider your issue too. Thanks!. Thanks for proposing this feature. Sadly, I can't fully understand what you are asking for \ud83d\ude1e   Do you have a screenshot of some application that implements what you need here ... or can you explain it with more detail using a concrete example? for example:\n\nIn my app I have \"managers\" and \"products\"\nI go to the \"list\" view of products, and I click on the \"Show\" action of any row\n\nThere, I want to see .... Thanks for proposing this feature. Sadly, I can't fully understand what you are asking for \ud83d\ude1e   Do you have a screenshot of some application that implements what you need here ... or can you explain it with more detail using a concrete example? for example:\n\n\nIn my app I have \"managers\" and \"products\"\n\nI go to the \"list\" view of products, and I click on the \"Show\" action of any row\nThere, I want to see .... I'm sorry but I'm going to close this issue because we're not going to implement this feature soon and I want to clean our backlog so we can work on preparing this bundle for Symfony 4 and for the new features and changes introduced for EasyAdmin 2.0.. In theory you don't have to do anything. This bundle always asks Doctrine which is the entity manager related to the entity before performing any action on that entity.. In theory you don't have to do anything. This bundle always asks Doctrine which is the entity manager related to the entity before performing any action on that entity.. Did it work for you?  As I mentioned, this feature is built-in, so if you find any issue, please report it because that must be a bug. Thanks!. Did it work for you?  As I mentioned, this feature is built-in, so if you find any issue, please report it because that must be a bug. Thanks!. I'm closing this for now because I don't want to add more templates for this (we have a ton of templates and splitting this one in two adds more templates). Something like this would hopefully work:\n\n```twig\n{% extends '@EasyAdmin/default/menu.html.twig' %}\n{% import '@EasyAdmin/default/menu.html.twig' as macros %}\n{% block menu_item %}\n    \n        {{ macros.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}\n    \n{% endblock %}\n```\nI don't know if you can import macros from a template that you are extending from, but I hope it does :)  Thanks!. I'm closing this for now because I don't want to add more templates for this (we have a ton of templates and splitting this one in two adds more templates). Something like this would hopefully work:\n```twig\n{% extends '@EasyAdmin/default/menu.html.twig' %}\n{% import '@EasyAdmin/default/menu.html.twig' as macros %}\n{% block menu_item %}\n    \n        {{ macros.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}\n    \n{% endblock %}\n```\nI don't know if you can import macros from a template that you are extending from, but I hope it does :)  Thanks!. The error in this PR was in fact unrelated to the proposed change (it was a misconfiguration in a test) ... so this change looks OK now. @yceruto you are right about being careful with the second parameter ... but as you said, the default value is now true, so we don't have to pass it as true explicitly. Thanks!. @slmcncb I'm sorry for not having merged this earlier. Thanks a lot for contributing these translations!. As per @CruzyCruz comments, I'm closing this because it looks related to Symfony itself. We can reopen if this is not entirely true. Thanks!. As per @CruzyCruz comments, I'm closing this because it looks related to Symfony itself. We can reopen if this is not entirely true. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because it's probably too old to be still relevant. Thanks!. I'm going to close this old issue because I can't reproduce it. About the suggestion to do $( document ).ready(function() { .. }); we already put the $('.form-actions').easyAdminSticky(); call inside $(function() { ... }); so I think they are equivalent. Thanks!. @nikunjkabariya thanks for suggesting this improvement. I agree ... and we implement it eventually. But I'm afraid it won't be possible to include it soon. I'm closing it because I've added it to the list of features that will be implemented some day: https://github.com/javiereguiluz/EasyAdminBundle/projects/1 Thanks!. I've replied to your StackOverflow question, so let's close this to avoid duplicities. Thanks!. @Demonil I don't use these translatable behaviors, so I cannot provide any clue. Hopefully the answer from @txurdi will guide you a bit. I'm closing this for now ... but if we receive more issues about this, we'll add a short tutorial explaining how to use one of these translatable libraries/bundles.\n@txurdi thanks a lot for your detailed answer!. This is one of those cases when using YAML is a problem. Displaying just 5 years is the default behavior of Symfony forms. The \"right\" solution would be to create a Symfony Form to define the options using PHP and then override some method in EasyAdmin to use that form, etc.\nBut another simpler solution would be to use the widget option to replace the <select> by <input>. You can do it like this:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            # ...\n            form:\n                fields:\n                    # ...\n                    - { property: 'formaFechaDesde', type: 'datetime', type_options: { widget: 'text' } }\n                    - { property: 'formaFechaHasta', type: 'datetime', type_options: { widget: 'text' } }. This is one of those cases when using YAML is a problem. Displaying just 5 years is the default behavior of Symfony forms. The \"right\" solution would be to create a Symfony Form to define the options using PHP and then override some method in EasyAdmin to use that form, etc.\nBut another simpler solution would be to use the widget option to replace the <select> by <input>. You can do it like this:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            # ...\n            form:\n                fields:\n                    # ...\n                    - { property: 'formaFechaDesde', type: 'datetime', type_options: { widget: 'text' } }\n                    - { property: 'formaFechaHasta', type: 'datetime', type_options: { widget: 'text' } }. Let's close this as \"fixed\". If you don't agree, please reopen it. Thanks!\n\nBy the way, your form field labels look very long. Maybe you should consider using the \"vertical\" Bootstrap form theme instead of the default \"horizontal\" theme:\nyaml\neasy_admin:\n    design:\n        form_theme: 'vertical'. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Thanks a lot for working on this. I haven't said anything yet ... because it's related to Symfony Forms and I don't understand anything. But the related issue explains that this doesn't work for them ... so I'll merge this of course :) Thanks!. Thanks a lot for working on this. I haven't said anything yet ... because it's related to Symfony Forms and I don't understand anything. But the related issue explains that this doesn't work for them ... so I'll merge this of course :) Thanks!. @yceruto what do you think about this proposal of yours? Would it be easy to finish it before the feature freeze of 1.x version? ... or could we close it and work on it for the next major version? Thanks!. Thanks @yceruto.. @Tim59 thanks for contributing this bug fix. I prefer to not use the Symfony Validator for this because a simple regex will do the job easier and faster. That's why I've created #1545 and I'm closing this in favor of it. Thanks!. @wtfred we don't provide built-in support for defining granular security filters (such as what a user can see or do). It's in our long-term TODO list. Meanwhile, you can see if the solution provided by @xabbuh works for you. Since we have a central controller (if you want, also a controller per entity) it shouldn't be hard to implement some global checks/filters to only get the needed information.\nClosing it as \"fixed\" for now. Thanks!. At first this might look weird ... but we decided to do this because it's the only way to be able to customize everything (widgets, error messages, labels, etc.) with just 1 config option.\nIt's explained in this section: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-form-fields\n\nDo you think that we should improve that description? Thanks!. At first this might look weird ... but we decided to do this because it's the only way to be able to customize everything (widgets, error messages, labels, etc.) with just 1 config option.\nIt's explained in this section: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#customize-the-form-fields\n\nDo you think that we should improve that description? Thanks!. Let's close this as \"fixed\". If you don't agree or have other issues, please reopen it. Thanks!. We reference the easyadmin.css.twig template in this line: https://github.com/javiereguiluz/EasyAdminBundle/blob/8f6fe6225997637083297939018de989e721069a/src/Configuration/DesignConfigPass.php#L67\nAs you can see, we're using the Symfony bundle notation to get the template, so the template overriding mechanism should work. If you create your own template in app/Resources/EasyAdminBundle/views/css/easyadmin.css.twig it should work.\nIn any case, if you are making just some CSS tweaks without executing advanced Twig logic, you can define your own styles in a regular CSS file and include it in your backend as explained in https://symfony.com/doc/current/bundles/EasyAdminBundle/book/design-configuration.html#adding-custom-web-assets\nLet's close this as \"fixed\" then and if we have more details about how to reproduce this error, we can reopen it. Thanks!. First, YouTube thumbnails can be obtained like this:\n```\n// Default resolution:\nhttp://img.youtube.com/vi//0.jpg\nhttp://img.youtube.com/vi//1.jpg\nhttp://img.youtube.com/vi//2.jpg\nhttp://img.youtube.com/vi//3.jpg\n// High resolution\nhttps://img.youtube.com/vi//maxresdefault.jpg\n```\n\nIf you want to show this in list/show/search views, define a custom template fragment to display that property:\nyaml\neasy_admin:\n    # ...\n    entities:\n        Screencasts:\n            list:\n                fields:\n                    - { property: 'youtubeUrl', template: 'admin/youtube_thumbnail.html.twig' }\nAnd the app/Resources/videos/admin/youtube_thumbnail.html.twig is something like this (the details vary depending on how you store the YouTube URL or video ID):\ntwig\n<img src=\"http://img.youtube.com/vi/{{ value|trim('/')|explode('/')|last }}/0.jpg\">\n\nIf you want to show this in edit/new/form views, it won't be that easy. I guess you have to define a custom Symfony Form type, or maybe you could add some little JavaScript code to the edit/new templates of that entity (explained here https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#advanced-design-configuration) and display the thumbnail dynamically based on the value of some specific form field.. First, YouTube thumbnails can be obtained like this:\n```\n// Default resolution:\nhttp://img.youtube.com/vi//0.jpg\nhttp://img.youtube.com/vi//1.jpg\nhttp://img.youtube.com/vi//2.jpg\nhttp://img.youtube.com/vi//3.jpg\n// High resolution\nhttps://img.youtube.com/vi//maxresdefault.jpg\n```\n\nIf you want to show this in list/show/search views, define a custom template fragment to display that property:\nyaml\neasy_admin:\n    # ...\n    entities:\n        Screencasts:\n            list:\n                fields:\n                    - { property: 'youtubeUrl', template: 'admin/youtube_thumbnail.html.twig' }\nAnd the app/Resources/videos/admin/youtube_thumbnail.html.twig is something like this (the details vary depending on how you store the YouTube URL or video ID):\ntwig\n<img src=\"http://img.youtube.com/vi/{{ value|trim('/')|explode('/')|last }}/0.jpg\">\n\nIf you want to show this in edit/new/form views, it won't be that easy. I guess you have to define a custom Symfony Form type, or maybe you could add some little JavaScript code to the edit/new templates of that entity (explained here https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/4-edit-new-configuration.md#advanced-design-configuration) and display the thumbnail dynamically based on the value of some specific form field.. \ud83d\udc4d   you can also use {{ value[-11:] }} to get the last 11 chars of the string and avoid creating the temporary variable.\nIn any case, let's close it as \"fixed\". Thanks!. \ud83d\udc4d   you can also use {{ value[-11:] }} to get the last 11 chars of the string and avoid creating the temporary variable.\nIn any case, let's close it as \"fixed\". Thanks!. Can you please share some links to resources explaining what this type does? Thanks!. Can you please share some links to resources explaining what this type does? Thanks!. I understand: you want to create new entities on the fly while editing/creating other entities.\nThis was asked for in #1206 and it's in our long-term roadmap (https://github.com/javiereguiluz/EasyAdminBundle/projects/1) so I'm afraid we won't have this feature anytime soon. Closing this issue then as \"duplicated\" and future feature\". Thanks!. I understand: you want to create new entities on the fly while editing/creating other entities.\nThis was asked for in #1206 and it's in our long-term roadmap (https://github.com/javiereguiluz/EasyAdminBundle/projects/1) so I'm afraid we won't have this feature anytime soon. Closing this issue then as \"duplicated\" and future feature\". Thanks!. The Roadmap is here: https://github.com/javiereguiluz/EasyAdminBundle/projects/1. The Roadmap is here: https://github.com/javiereguiluz/EasyAdminBundle/projects/1. I haven't used A2lix_translation, but in their docs they seem to use textarea: http://a2lix.fr/bundles/translation-form/3.x.html#bundle-installation\nBy the way, ckeditor is only available when installing IvoryCKEditorBundle.\nLastly, for translations I strongly recommend you to not use a WYSIWYG editor. You don't want translations to have undesired characters. A textarea could be better to avoid any issue.. Closing it because it looks like it's \"fixed\". Please reopen if you don't agree. Thanks!. @ondrejmirtes not yet because I've just started testing it and we already use other analyzers (Scrutinizer, SensioLabsInsight and PHP-CS-Fixer). But I'm looking into your project and its evolution to eventually add it. Thanks for contributing PHPStan to the community!. There is no built-in way to display all the association properties at once ... but you can show those properties by adding them explicitly using the gallery.property-name notation. Example:\nyaml\nLocation:\n    show:\n        fields:\n            - id\n            - name\n            - category\n            - address\n            - city\n            - postalCode\n            - country\n            - description\n            - contactPerson\n            - openHour\n            - { property: 'website', type: 'url' }\n            - { property: 'qrcode', type: 'image' }\n            - code\n            - discount\n            - gallery.name\n            - gallery.address\n            - gallery.phonenumber. I'm closing it as \"fixed\" for now. The real fix would be to allow full embedding of entities. I've added that to the list of future features of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Nice to know! Thanks for fixing this issue.. I haven't released a new version of the bundle in a long time (I'll do in a few days) so I wonder if you updated any other dependency (or even Symfony itself)?. @haithem-rihane I really like your proposal and this has been asked for before. However, it's going to take a while to implement it because it's not a simple feature. We added it to our list of future features so we'll eventually include it ... but it won't be soon. I'm sorry!\nI'm closing this because this feature is already on our feature list. Thanks!. We already have a feature that prevents closing the browser or browsing to another page:\n\nI'm afraid we cannot provide an \"autosave\" feature because when you are filling in a form, 90% of the time is in an invalid state (because you have some fields left to fill in) so the autosave would generate lots of errors, etc.. The \"back button\" and \"browser closing\" cases are already covered by the current solution, so the only missing case would be when the session expires.\nIn any case, although I like this feature request, I must close it as \"won't fix soon\". The reason is that we're still lacking some basic features (e.g. filters) and this looks like a feature for a more advanced version of the bundle. Besides, we already cover most of the cases where info can be lost (except the \"session expire\" scenario).\nLastly, I've added your proposal to the list of \"future features\" of the bundle. It's at the bottom of the first column here: https://github.com/javiereguiluz/EasyAdminBundle/projects/1\nThanks!. Thanks @fabx2dan.. Thanks for fixing the missing dependency!\nAbout adding validator too, in theory it wouldn't be needed (well, we use it once in 1 test) ... but in practice I think it should be required: you can't really create a backend without validating the data.. Thanks Fabien.. Can you please check if reverting this change fixes the problem for you? https://github.com/javiereguiluz/EasyAdminBundle/commit/70e5185c98a0fd9d75f9657796d84196548f9fd5  Thanks!. Yes please, make this change in Search/Paginator.php:\ndiff\n+        $paginator = new Pagerfanta(new DoctrineORMAdapter($queryBuilder, true, false));\n-        $paginator = new Pagerfanta(new DoctrineORMAdapter($queryBuilder));\n(and leave the other change of that pull request because it's needed to fix a test)\nThanks!. This has been fixed by @Benjamin-Porquet in #1559 and a new version has been released: https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.16.7. I'm closing this because I want to clean our backlog as much as possible so we can focus on making this bundle compatible with Symfony 3.4/4.0 and start working on its new version. These refactorizations could be done in that new major version of the bundle. Thanks!. I'm sorry it took me so long to reply here! I must close this because I can't reproduce it. In the Twig extension we have this code:\nphp\n$templateParameters['uuid'] = md5($templateParameters['value']);\n$templateParameters['value'] is what you return from the getter associated to the virtual field. Even if it's an empty string or null, the md5() function returns a value, so uuid always has a value and the Twig template works as expected.\nIf you can reproduce this issue, please reopen it. Thanks!. I'm sorry but I must close this because I cannot reproduce it. If the issue persists for you, please fork the EasyAdmin Demo application (https://github.com/javiereguiluz/easy-admin-demo) and reproduce the bug so we can fix it. Thank you!. Closing this old issue because it's probably no longer relevant. Thanks!. @alrick I fully understand your concern and I agree with you about this. Sadly, this is a lacking feature of the Select2 JavaScript library that we use. If you look for \"Select2 preserve order\", you'll find lots of discussions, issues and bug reports ... but no solutions. That's why I must close this as \"can't fix\" because this is something to be solved in Select2. I'm really sorry.. I'm glad you quickly fixed this, but to avoid the same issues for other developers, I'm proposing some improvements in the docs: #1742. Thanks!. If you mean putting each item of a collection in a different from group, I'm afraid it's not possible to do that.. Thanks @Pierstoval.. I don't think you can define the empty data like that in the form. See https://symfony.com/doc/current/reference/forms/types/text.html#empty-data\nMaybe you can read this article https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md and override createNewEntity() or createEditForm(), etc. depending on your needs.. I thought that default-template.html meant that you want to include the content of that page as the empty data. But it looks like you want to use this string that resembles the name of a template --> default-template.html  The solution proposed by @yceruto should be the easiest one, but the one you shows should work too.. That's exactly how Symfony Forms work. The empty data is only used when that field doesn't have any data. I use this option myself in some backends so it should definitely work (I mean, it should work because it's provided by Symfony and not by this bundle).\nDo you see any error or do you just never see that empty data?. I can confirm this bug ... but I don't know why it happens or how to solve it.\n\nIn the EasyAdmin Demo app, I add the same default value as you:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # ...\n            form:\n                fields:\n                    - { property: 'name', type_options: { empty_data: 'default-template.html' } }\nThen, I do a dump() in this line of the EasyAdminformType class, just before adding the form field to the form. The empty data value is still there:\n\nHowever, if I do a dump() in this line of our form theme, just inside the form_widget_simple block, I no longer see the empty data:\n\n\nSo the information is lost and I don't know why \ud83d\ude2d \n. Closing this because it's not really a bug but the way Symfony Forms work.. Sadly it's not possible to create dynamic listings like the one you mentioned.\nAbout the number of database queries, you are completely right. However, keep in mind that this bundle creates backends, where few people will log in.\nIn other words, making 100 database queries for the public home page of a web site with lots of traffic is stupid, but making 100 queries for a backend page accessed by 1 or 2 people is acceptable (moreover given that those database queries will take just a few milliseconds). That's why I'm closing this as \"won't fix\" for now. I'm sorry!. @ifdattic \ud83d\udc4d  thank you very much for fixing this issue! Sadly (see #1590) we're in the middle of moving our docs from Markdown to ReStructuredText (to integrate them on symfony.com). So, there was a conflict with your PR that I couldn't fix :( At the end I reproduced your changes here: 8b9a68537c694cfeaa9ab6920bd3cb1db79ec2a0  Thanks again for your help!. I'd like to have this feature ... but sadly it won't happen soon. That's why I prefer to close this issue for now, to not let people think that this will be implemented soon. In any case, thanks for proposing this feature and to not forget about this, I've added it to our future roadmap: https://github.com/javiereguiluz/EasyAdminBundle/projects/1. Thanks for reporting this issue. I'm trying to fix it but I can't:\n\nAs you said, the infinite scroll is only enabled when there is a certain amount of results. In this StackOverflow question they mention the same thing, so I think this is a Select2 bug which we cannot fix ourselves. I'm sorry.. @nnmer thanks for fixing this! Let's see if the docs are merged soon on symfony.com.. After thinking about this, I'm afraid I'm going to close this as \"won't fix\".\nOf course your proposal is correct, but we haven't been asked for this feature yet, so we prefer to wait until there's demand. In any case, thanks to you PR, anyone can copy+paste your template to override the default pager template easily. Thanks!. Please, create your issue following the given instructions. Thanks.. Closing as fixed because this is trivial to do since EasyAdmin 1.17.8, which includes this feature: https://github.com/javiereguiluz/EasyAdminBundle/pull/1679 . Closing as fixed because this is trivial to do since EasyAdmin 1.17.8, which includes this feature: https://github.com/javiereguiluz/EasyAdminBundle/pull/1679 . I'm afraid my answer comes too late to this question ... but we have a tutorial that explains How to Define Custom Actions.\nI'm going to close this as \"fixed\", but if you have any problem implementing custom actions, please open new issues. Thanks!. Thanks @xabbuh.. A note for myself: if we update this value, we must update the associated recipe in https://github.com/symfony/recipes \nFor example, this issue: https://github.com/symfony/flex/issues/59 was fixed by https://github.com/symfony/recipes/commit/f5bd6e0. The best solution would be to create a custom route that uses pure Symfony code to handle this logic and build this small form. Then, add it as a menu item and use a Twig template that extends from EasyAdmin layout so you can integrate it with the rest of the backend. Let's close as \"fixed\" and if you have any problem, please reopen. Thanks!. The best solution would be to create a custom route that uses pure Symfony code to handle this logic and build this small form. Then, add it as a menu item and use a Twig template that extends from EasyAdmin layout so you can integrate it with the rest of the backend. Let's close as \"fixed\" and if you have any problem, please reopen. Thanks!. Thanks for sharing your ideas for new features ... but that's not something that we plan to do. Being completely dynamic and not generating code/templates is one of the core features of the bundle, so we cannot change it. I'm sorry.. Implementing this feature right and exposing it in a simple way to users is really complex. That's why I've decided to postpone it until the second version of the bundle (and it's already on our roadmap). If this feature is a must for your backend, you may consider using SonataAdmin instead.\nClosing it then as \"we'll fix it\". Thanks!. @ety001 thanks for this contribution! \u975e\u5e38\u611f\u8c22\u4f60. If I'm right, what you are asking it's already possible and it's explained our docs: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html\nClosing it as \"fixed\" then. Thanks!. We already reuse some external libraries (for example for the paginator) but for the grid feature we don't intend to reuse external libraries.\nThis is a core feature of the bundle, so we cannot \"outsource\" it. Besides, if you check the EasyAdmin documentation you'll see that our grids already have all the features that we need (with the exception of the filters), so we're happy with them.\nThanks!. Fixed by #1824.. Fixed by #1824.. The code of your examples look correct and it should definitely work. Maybe it's not working because of what you said about embedded forms? Anyway, this issue is too old, so hopefully you have fixed it.. Just saying: in your original comment you shared this code:\n```php\n/\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\Panel',\n        'label' => false,\n        'validation_groups' => function (FormInterface $form) {\n            / @var Panel $panel **/\n            $panel = $form->getData();\n        switch($panel->getType()){\n            case Panel::TYPE_INTRO:\n                return [\"Default\", \"PanelIntro\"];\n            case Panel::TYPE_LANG:\n                return [\"Default\", \"PanelLang\"];\n            case Panel::TYPE_QUESTION:\n                return [\"Default\", \"PanelQuestion\"];\n            case Panel::TYPE_FORM:\n                return [\"Default\", \"PanelForm\"];\n            case Panel::TYPE_SPLASH:\n                return [\"Default\", \"PanelSplash\"];\n            case Panel::TYPE_THANKS:\n                return [\"Default\", \"PanelThanks\"];\n        }\n\n        return [\"Default\"];\n    },\n));\n\n}\n```\nToday I saw this in the Symfony Docs repo: https://github.com/symfony/symfony-docs/pull/8522/files\nWould replacing return [\"...\", \"...\"] by return new GroupSequence([\"..\", \"..\"]), solve this problem?. Just saying: in your original comment you shared this code:\n```php\n/\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\Panel',\n        'label' => false,\n        'validation_groups' => function (FormInterface $form) {\n            / @var Panel $panel **/\n            $panel = $form->getData();\n        switch($panel->getType()){\n            case Panel::TYPE_INTRO:\n                return [\"Default\", \"PanelIntro\"];\n            case Panel::TYPE_LANG:\n                return [\"Default\", \"PanelLang\"];\n            case Panel::TYPE_QUESTION:\n                return [\"Default\", \"PanelQuestion\"];\n            case Panel::TYPE_FORM:\n                return [\"Default\", \"PanelForm\"];\n            case Panel::TYPE_SPLASH:\n                return [\"Default\", \"PanelSplash\"];\n            case Panel::TYPE_THANKS:\n                return [\"Default\", \"PanelThanks\"];\n        }\n\n        return [\"Default\"];\n    },\n));\n\n}\n```\nToday I saw this in the Symfony Docs repo: https://github.com/symfony/symfony-docs/pull/8522/files\nWould replacing return [\"...\", \"...\"] by return new GroupSequence([\"..\", \"..\"]), solve this problem?. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. It's not possible ... but in #1596 you can find a template made by @nnmer that you can copy+paste in your project to override the default pager template.. I'm afraid there's no news about this and I can't work on this. I know nothing about translatable entities, except that people have a lot of issues working with them. My guess is that this is something that Doctrine should fix or improve and then we (Symfony, bundles) could use them more easily. I'm really sorry.. If it can be shared in public, please copy here the config of that entity. Thanks!\nYou can also check these examples of entities config: https://github.com/javiereguiluz/easy-admin-demo/tree/master/app/config/admin/entities. To be honest, I'm lost at this. The config is so simple, that it should work. And the ContextErrorException is so confusing to me :( Let's wait and see if anybody comes up with an idea about this.. I'm closing this hoping that it's fixed ... but please reopen if it's not. Thanks!. @luispabon please share with us the full error message you are seeing. Thanks!. @luispabon please share with us the full error message you are seeing. Thanks!. @reypm it's documented here https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration  In theory, 100% of th e features of this bundle are documented, so if you don't find something or if it's not explained well, please tell me. Thanks!. I don't know what could be failing here. The logic to execute actions of the controller is very simple (just check the indexAction() of the main AdminController) so it shouldn't be hard to debug. Anyway, I'm closing because this issue is too old so it's already fixed or it's no longer relevant. I hope you understand. Thanks!. More and more people are asking this ... so I guess it makes sense. I'm still thinking about it. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I think here there are two different issues:\n\nThe collection type is something provided by Symfony, so we don't do anything about it and that's why we don't document it. The docs are here: https://symfony.com/doc/current/reference/forms/types/collection.html\nNot doing anything about the collection form is a problem for us ... because the default look and behavior of the Symfony Form Collection type is ugly. I don't like it at all. I want to improve it, but the Form Component is so complex that I don't know how to do that.. Closing this as fixed because the doc is already there and the improvement of the design of this collection type has already been asked in other issues. Thanks!. I don't fully like the proposed solutions, so I've added this to our roadmap to see if we can solve this more easily when we refactor things for the 2.0 version of this bundle. Thanks for your proposals!. Good catch, thanks @welcoMattic.. @CruzyCruz you are right and it's true that it's recommended to define the method of the routes. But in this case, we use a single route for the entire backend, so we really need all methods to work for it. We use GET and POST, other people could use other methods. So that's why I prefer to not define this. Thanks!. I'm sorry it took me some time to merge this. Thanks for your patience ... and for fixing this issue!. All this is explained in this tutorial: https://symfony.com/doc/current/bundles/EasyAdminBundle/tutorials/i18n.html\n\nIf you have any problem following it, please open new issues. Thanks!. Closing because we won't implement this feature anytime soon. I'm sorry.. @alexhoma thanks for contributing these missing translations! It's a nice first-time contribution :). I agree with this feature, but I'm closing it because it's duplicated of other similar proposals we received in the past. We have it in the public Roadmap so we'll implement it some day. Thanks!. I agree with this feature, but I'm closing it because it's duplicated of other similar proposals we received in the past. We have it in the public Roadmap so we'll implement it some day. Thanks!. Thanks for fixing this bug Alex.. I'm closing this old issue because it's not a common enough need to create an official config option. In any case, this can be solved setting the option as an unofficial option in the parameter and then using a custom fragment to render that parameter. Thanks!. Closing it as fixed by #1647.. I'm sorry but I don't know how can we help here. This bundle makes a simple use of Doctrine, which is the one who creates, modifies and deletes entities. My guess is that this was caused by some  Doctrine misconfiguration. I'm sorry I can't be more useful. Thanks!. @tacman this was a very nice catch. Thanks for reporting the issue and for contributing the solution.. @tacman thanks for proposing this feature, but I'm afraid I must close it as \"won't fix\". I'm not familiar with the Serializer, so I can't implement this, or review an implementation made by someone else or estimate the complexity of this feature. I'm sorry.. I'm checking this issue report, but I can't reproduce it.\nHelp messages for form fields should be translated:\ntwig\n{% if easyadmin.field.help|default('') != '' %}\n    <span class=\"help-block\">\n        <i class=\"fa fa-info-circle\"></i>\n        {{ easyadmin.field.help|trans(domain = easyadmin.entity.translation_domain)|raw }}\n    </span>\n{% endif %}\nThe entity name in edit/new should be translated too because we do this:\ntwig\n{% trans_default_domain _entity_config.translation_domain %}\n{% set _trans_parameters = { '%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans, '%entity_id%': _entity_id } %}\nThe trans_default_domain config should make all |trans filters use that.\nDo you still experience this issue?. Let's close this issue as \"fixed\" and we can reopen when we have more details about how to reproduce the error. Thanks!. Let's close this issue as \"fixed\" and we can reopen when we have more details about how to reproduce the error. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Closing because I don't know what to do with this. We've also merged #1838, which returns the FQCN if the given type is not in the list of Symfony built-in types, so this bundle at least shouldn't overwrite custom FQCN. Please reopen if you can still reproduce this issue. Thanks!. @grachevko thanks a lot for this feature! I'm going to propose some minor changes (and docs) in a separate PR.. @vkhramtsov thanks for proposing this. To be honest, this idea was on my TODO list for the next major version of the bundle. I think it makes A LOT of sense and it will simplify our work. I'll try to find time to do something about this, but for now, I'm closing this issue to not let people think that we're going to do this soon and to avoid people submitting pull requests to fix this. . @laurent-bientz is right ... you are talking about JSP/Java, but this is a PHP project. I guess there was a mistake in the repo that you used to report the issue.. We don't use anything fancy to load the CSS and JS, so this must be a problem with the asset installation. Open the web inspector in your browser and verify that the CSS and JS are loaded correctly:\n\n. I'm glad this is finally fixed. Closing it then. Thanks!. @chrisyue in fact, we guess this with the information provided by Doctrine entity metadata. I think that property is wrongly guessed as a \"datetime\" instead of a \"date\".. I could reproduce this issue in the EasyAdmin Demo app. I'm trying to fix it in #1708.. Closing as fixed by #1708.. Closing as fixed by #1708.. There's not a config option in the bundle to change this, but you have two options:\n\nUse the prototype_data option in the appropriate form field (https://symfony.com/doc/current/reference/forms/types/collection.html#prototype-data).\nOverride the {% block collection_row %} using a custom form them (in this case, not a full theme but just a form theme fragment overriding just that block): https://github.com/javiereguiluz/EasyAdminBundle/blob/master/src/Resources/views/form/bootstrap_3_layout.html.twig#L272. @devkbsc I'm glad this was solved for you. Here https://github.com/javiereguiluz/easy-admin-demo/tree/master/app/config/admin you have an actual example of how to split the config in different files. Cheers!. I'm afraid I don't understand this comment:\n\n\nBut I couldn't find my constructed data of my usergroup entity in the form after modified the configuration.. I'm closing this old issue because it's probably fixed (thanks @laurent-bientz for your help!).\n\nIf the error persists, please provide the full stack trace displayed by the Symfony error page. Thanks!. I'm closing this old issue because it's probably fixed (thanks @laurent-bientz for your help!).\nIf the error persists, please provide the full stack trace displayed by the Symfony error page. Thanks!. Closing it as fixed by @yceruto comment: it's a known limitation ... but there's a way to overcome it.. A few days ago I merged #1657 to get rid of the templating component ... but we haven't released a new version of the bundle, so I don't understand how can this fail in your 1.16.10 version :(. Thanks for reporting this bug! I'm trying to fix it in #1826. It'd be great if you could verify that the proposed solution works for you. Thanks!. Thanks for reporting this bug! I'm trying to fix it in #1826. It'd be great if you could verify that the proposed solution works for you. Thanks!. @Cethy thanks for testing it. It's now merged and it will be available in the next stable version.. @Cethy thanks for testing it. It's now merged and it will be available in the next stable version.. If you want to use your own controllers but keep the rest of the design and features, you can read this chapter https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html  which explains 3 ways to override the bundle and the second one is what you are looking for.\nI'm closing this as \"fixed\", but if you have problems when implementing this solution, you can open new issues with more specific issues. Thanks!. @vudaltsov thanks for fixing this issue! \u0421\u043f\u0430\u0441\u0438\u0431\u043e. I'd say the easiest way to solve this issue is to override the default template of the list view (of all entities or just a particular entity) and then override the {% block item_actions %} Twig block to add your own logic to display/hide actions. I do that in a backend and it works as expected. It's explained here: https://symfony.com/doc/master/bundles/EasyAdminBundle/tutorials/tips-and-tricks.html#defining-dynamic-actions-per-item\nI'm closing as \"fixed\", but reopen if you don't agree with the proposed solution. Thanks!. I wanted to fix this ... but I can't find where do we use this deprecated ConsoleEvent in our code. The fix should be simple: check if ConsoleEvents::ERROR event exists and use it; otherwise use ConsoleEvents::EXCEPTION. But I can't find where do we use that.. To be honest, I don't understand why $metadata['associationType'] is not defined. This information comes from Doctrine, not this bundle, so it should be set for associations. Can you see any Doctrine entity errors in the Doctrine panel of the Symfony web debug toolbar? Can you make a dump($metadata) just before $metadata['associationType'] to see if it contains any information? Thanks!. Fixed by #1833.. Fixed by #1833.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @jkroepke thanks for this! I'm tweaking your work a bout in #1740, but I reused your original commit, so you'll get full credit for your work. Thanks!. @Pierstoval is right. Instead of copy+pasting the entire method, you can make your own changes and then call the parent method to reuse the default logic. Another tip: you can use $this->getUser() to get the current user because the admin controller extends from the base controller of Symfony, so you can access to all the cool shortcuts.\nIn any case, let's close this as \"fixed\" and if something doesn't work as expected, you can open new issues. Thanks!. @grachevko looking at your PR it now looks obvious that we should have done this before. So thank you for doing this!. I'm afraid I'm going to close this as \"won't fix\". Even if it's technically correct, I don't see the need to do this. We have PHP namespaces to differentiate EasyAdmin from your own app and in case of collision, you can use the use ... as ... so there's no problem.\nYou are right that some classes already have the \"EasyAdmin\" prefix. I think that's an error. We should use the prefix in the obvious things (route name, Twig functions/filters, translation files), but remove it from the rest. But I'll do that in the future as part of a bigger change. Thanks!. @SebTM thanks a lot for this contribution. I'm sorry I forgot about it and resulted in a merge conflict which I can't solve. That's why I replicated your pull request in #1818.\nBy the way, I don't know why I used {% set %} in the first place \ud83d\ude35 . Your code is obviously the right way to do this! Thanks.. This would be an interesting feature ... but we can't implement it because of the limitations of the YAML format used to configure things. I want to slowly move into a PHP-based config, which is infinitely flexible and, thanks to PHP 7.1, almost as concise and readable as YAML config. But that would be implemented in a future major version of this bundle and after a thorough design and planning. So, let's close it as \"won't fix\" for now. Thanks!. This would be an interesting feature ... but we can't implement it because of the limitations of the YAML format used to configure things. I want to slowly move into a PHP-based config, which is infinitely flexible and, thanks to PHP 7.1, almost as concise and readable as YAML config. But that would be implemented in a future major version of this bundle and after a thorough design and planning. So, let's close it as \"won't fix\" for now. Thanks!. @piterssson depending on your needs, any of the solutions proposed by @CyberBLN and @grachevko should work. If they don't work, please reopen this issue and tell us the error you are facing. Thanks!. Closing as fixed by @forsetius comments. Thanks!. I'm sorry it took me so long to respond here.\n1) First, you should have seen an error page in the dev environment. I don't know why Symfony didn't display it for you. For example, if I use this config:\nyaml\neasy_admin:\n    design:\n        brand_color: 'hsl(0, 100%, 50%);'\nI see this error:\n\n2) Second, you are right about the doc issue. I've fixed that in #1810.. I'm sorry it took me so long to respond here.\n1) First, you should have seen an error page in the dev environment. I don't know why Symfony didn't display it for you. For example, if I use this config:\nyaml\neasy_admin:\n    design:\n        brand_color: 'hsl(0, 100%, 50%);'\nI see this error:\n\n2) Second, you are right about the doc issue. I've fixed that in #1810.. I can't reproduce this. I've just executed this without problems:\n```\n$ composer create symfony/framework-standard-edition issue_1724\n$ ./bin/console\n  (everything OK)\n$ composer require javiereguiluz/easyadmin-bundle\n  Add new JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle(), in AppKernel.php\n  Add routes to app/config/routing.yml\n  Add empty config to app/config/config.yml\n$ ./bin/console\n  (everything OK)\n```\nNote that I didn't even configure any database (I use the default config options defined by Symfony), so the database is even wrong because it doesn't exist ... but still I can't see any error in the console.. Can we do something from this bundle to mitigate this issue? I think Doctrine did something about this in some pull request, but I don't know if it's been released or if it's working. Thanks!. Can we do something from this bundle to mitigate this issue? I think Doctrine did something about this in some pull request, but I don't know if it's been released or if it's working. Thanks!. Let's close this because it seems related to Doctrine and not this bundle strictly (see https://github.com/doctrine/DoctrineBundle/issues?q=is%3Aissue+server_version+is%3Aclosed for reference). Thanks!. In case it's useful, the EasyAdmin Demo application defines categories with parents .Not sure if it's exactly the same, but here is the config: https://github.com/javiereguiluz/easy-admin-demo/blob/master/app/config/admin/entities/category.yml. At first sight, I'd say that the solution is exactly what you said ... define an isAdmin() method in your User entity and add the needed logic to add or remove the admin role. Doctrine entities are simple PHP objects, so it's OK to add as many helper methods as we need, not only the usual setters/getters.\nHave you tried this? Did it work for you?. Closing as fixed then. Thanks!. I'm afraid you can't do this in YAML. Can you try instead to initialize the start property to new DateTime() in the constructor of the associated class?. I'm glad this is fixed now \ud83c\udf89   Closing then.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm really sorry but I don't think there's nothing we can do here. Closing then.. I'm really sorry but I don't think there's nothing we can do here. Closing then.. Someday we'll have the same design features of the \"new/edit\" view in the \"show\" view. We have another issues asking for this (#1437) so I'm closing this as a duplicate.. You are right! Thanks for reporting this bug. Luckily this was reported before (see #1647) and it's already been fixed. It will be available in the next stable version which I'm about to release.. The command is in this file: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/.github/RELEASE_CHECKLIST.md\nBut don't worry, I'll run it myself before releasing the next version. Thanks!. Thanks @ogizanagi.. Maybe this is related to the issue that was solved in #1804? If you update to the latest stable version, this could be fixed. Please, tell me if that's true. Thanks!. Maybe this is related to the issue that was solved in #1804? If you update to the latest stable version, this could be fixed. Please, tell me if that's true. Thanks!. Yes, we are going to introduce this feature. It's included in our Roadmap since long ago. We'll do that in the upcoming 2.0 version of this bundle. I'm closing this for now ... and I'm blocking the comments of the issue so nobody can ask again about this. Thanks!. This feature about Doctrine types is managed exclusively by Doctrine and Symfony. It should be transparent to EasyAdmin. If the type exists and it's defined, you should be able to use it as a built-in type.\nTo know the exact error, we'd need to see the full stack trace. Maybe you can copy+paste the text-based stack trace that you can see in the error page. If it contains private information, don't forget to remove it. Thanks!. I'm really sorry but I must close this because I'm not able to fix it. I'm totally lost between custom Doctrine types, guessing mechanism, Symfony Forms, etc.\nLuckily there's a simple alternative in this case: use the ChoiceType directly with the same values of the Enum.\nI'm sorry I cannot provide a better solution. Cheers!. I'm really sorry but I must close this because I'm not able to fix it. I'm totally lost between custom Doctrine types, guessing mechanism, Symfony Forms, etc.\nLuckily there's a simple alternative in this case: use the ChoiceType directly with the same values of the Enum.\nI'm sorry I cannot provide a better solution. Cheers!. I need time to think about this. At first sight I think it complicates things. We now deal with false, null, strings, etc. This feature should be simple: if there's a referrer query param, follow it: Otherwise, don't follow it. No need to deal with false or null, only empty or not empty params, right?\nBesides, there's a pending bug that we must solve: we can't redirect to the list action when the referrer is empty if the list action is disabled. We must check disabled actions before deciding which URL to go back to.. It took me a lot of time, but I finally merged it. Thanks for your contribution @grachevko.. It took me a lot of time, but I finally merged it. Thanks for your contribution @grachevko.. @man08 this was a very nice catch! Thanks for fixing this bug and for your first contribution to this project. Cheers!. Thanks for proposing improvements for EasyAdmin \ud83d\ude03 \nI've check very quickly the Sonata article ... but it looks like you can dispatch EventDispatcher events from Twig templates. Maybe I'm missing something, but this looks as bad as executing SQL queries in a PHP template. Is this really considered a good practice?\nIn any case, please tell me what do you want to do in a template that you can't today to see if we can improve it without introducing this. Thanks!. I'm really sorry but I must close this as \"won't fix\". The truth is that the complexity of this bundle is too much for me. I want to remove things, instead of adding more things. I've seen the code you linked above and it looks like you can solve this need using Sonata features and linking them with this bundle and other third-party apps.\nIf there is a super small change that we can do in this bundle to make applications like this easier (e.g. changing a private method to protected, etc.) then please ask us and we'll look into it. But adding a whole integration with state machines is out of the current scope of the bundle. I'm sorry but I hope you understand it. Thanks!\n. I'm really sorry but I must close this as \"won't fix\". The truth is that the complexity of this bundle is too much for me. I want to remove things, instead of adding more things. I've seen the code you linked above and it looks like you can solve this need using Sonata features and linking them with this bundle and other third-party apps.\nIf there is a super small change that we can do in this bundle to make applications like this easier (e.g. changing a private method to protected, etc.) then please ask us and we'll look into it. But adding a whole integration with state machines is out of the current scope of the bundle. I'm sorry but I hope you understand it. Thanks!\n. Symfony defines a BirthdayType form field so you can use 'birthday'  as the type of this property and it should work. I'm closing this as \"fixed\", but if you have any problem, please reopen. Thanks!. @carlotodeschini that's a very common issue ... and not only when starting with Symfony \ud83d\ude04    That's why it's recommended to use PHPStorm, which adds all those boring use ... automatically.\nIn any case, closing it as \"fixed\". Thanks!. @amustill thanks for reporting this issue!\nSadly I don't understand the Symfony Forms, so I don't know why this doesn't work. In theory, if you configure your own form theme as explained in https://symfony.com/doc/current/bundles/EasyAdminBundle/book/edit-new-configuration.html#selecting-the-form-theme, this should work.. @yceruto thanks for your proposal. I've moved it to #1749 so we can discuss more about it. Let's keep this PR to discuss whether this is really a fix of the referenced issue or not. Thanks!. @yceruto in f2a8270 I needed to do something weird because in 2.3 twig.loader.native_filesystem doesn't exist and in newer Symfony versions twig.loader.filesystem doesn't exist.. I'm afraid I don't understand why this error happens. Maybe you can check out the EasyAdmin Demo application and compare its configuration with your own configuration to see if you can find the problem.. I'm closing this as \"fixed\" ... but if you find any other problem with the bundle, feel free to create a new issue. Thanks!. @NaveNO thanks for reporting this issue and @enrique-esteban thanks for providing the solution.\nAll this is explained in the tutorial about translation: https://symfony.com/doc/master/bundles/EasyAdminBundle/tutorials/i18n.html but your issue report made me realize that we should add a note in the tutorial that shows how to create your first backend (see #1779).. I'd say there shouldn't be any problem implementing this application. In fact, we have a very similar example in the EasyAdmin Demo application. The equivalence would be:\n\nFood -> Purchase\nMaterial -> Product\nFoodMaterial -> PurchaseItem\n\nClosing as \"fixed\" then.. I've created #1829 to try to fix this issue (although I fear we'll create the other issues I mentioned before).. I've created #1829 to try to fix this issue (although I fear we'll create the other issues I mentioned before).. Yes ... my holidays \ud83c\udfd6  But I'll come back soon. Cheers!. @marcverney very nice catch! Thank you.. I'm afraid that's one of the shortcomings of using YAML. It's not easy (or even possible) to reuse some config, or override it or defining it conditionally. The solution is simple, although boring, duplicate the \"edit\" and \"new\" config when you need to do that.. > I don't know if it would be possible to accomplish this without overriding methods of EasyAdminBundle: be able to create Member and then create the Certification automatically.\nNo, that won't be possible. You'll need to override at least the createNewEntity() as explained here: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html. Closing ... but feel free to create new issues about other specific issues related to this. Thanks!. Closing ... but feel free to create new issues about other specific issues related to this. Thanks!. We are not planning to implement this feature \"as is\" ... but in the next major version of this bundle we want to implement a security-based feature to allow showing/hiding columns and menu items depending on the user. thanks!. @Stoakes thanks for providing these missing translations. @forsetius thank you for providing these translations and for the explanation about them.. I agree with all you said. I'm interested in this feature and I'm going to implement it. But first, I need to make some important changes to this project. Stay tuned. I'm closing this issue because we already have this feature in our roadmap and trust me, it has a lot of priority for us: https://github.com/javiereguiluz/EasyAdminBundle/projects/1. @cataragak90 I'm sorry but we don't have plans to add support for MongoDB :(. A bit unrelated to your question but, do you really define a custom form type for this? If the property is boolean, Symfony and this bundle gives you everything you need without having to do anything.. I've looked at it a bit. Thanks! Could you please create a pull request so others can review it too? Thanks!. This change should be made to the log message generated internally. The public error message in the web page must remain the same. Why? Because we received A LOT of reports in the past asking us to never display technical error messages in the public error pages, which are seen by end-users.. This change should be made to the log message generated internally. The public error message in the web page must remain the same. Why? Because we received A LOT of reports in the past asking us to never display technical error messages in the public error pages, which are seen by end-users.. @maccer83 even if I agree with some of the things you said, we can't make that change. The reason is what I mentioned before: we received in the past lots of comments telling us that public error messages should never include internal details. So, in #1778 we've improved the error you see in the log file and in the dev environment, but the prod environment will remain the same. I hope this change will help you when looking for the real cause of an error. Cheers!. @maccer83 even if I agree with some of the things you said, we can't make that change. The reason is what I mentioned before: we received in the past lots of comments telling us that public error messages should never include internal details. So, in #1778 we've improved the error you see in the log file and in the dev environment, but the prod environment will remain the same. I hope this change will help you when looking for the real cause of an error. Cheers!. @iluuu1994 I don't know, but this is what I see on Insight website:\n\nI've relaunched the analysis.\n. @iluuu1994 I don't know, but this is what I see on Insight website:\n\nI've relaunched the analysis.\n. Yes!! I'm really sorry but I'm still waiting for other peoples reviews. I needed to merge #1787 as soon as possible because it introduces massive changes and I don't want to break more pending PRs.. You are right. No need for legacy here.. @iluuu1994 thanks for this contribution and for helping us simplify some parts of this bundle!. @iluuu1994 thanks for this contribution and for helping us simplify some parts of this bundle!. After this change, nothing works :(  I can't even see any namespace (EasyCorp\\ or the previous one) in the dumped Composer autoloading. I need help! Thanks.. After this change, nothing works :(  I can't even see any namespace (EasyCorp\\ or the previous one) in the dumped Composer autoloading. I need help! Thanks.. Thanks for your help! I'm testing your first proposal (see ca07da2) but I cannot make it work. This is the error I see:\n\nAnd if I execute composer dump-autoload --optimize I can't see the Legacy/ folder anywhere:\n\n. Thanks for your help! I'm testing your first proposal (see ca07da2) but I cannot make it work. This is the error I see:\n\nAnd if I execute composer dump-autoload --optimize I can't see the Legacy/ folder anywhere:\n\n. Update: @ogizanagi thanks for your help, but still I can't make it work. I'm so desperate that I tried to use this project: https://github.com/TYPO3/class-alias-loader  but it doesn't work either \ud83d\ude2d \nIn the latest commit (19827e6) I've reorganized the contents of the bundle:\n\nsrc/ for all the code with EasyCorp\\* namespaces\nlegacy/ for the fake new classes with the old namespace\ndoc/\ntests/\n\nHere is the autoload config:\n\"psr-4\": {\n            \"EasyCorp\\\\Bundle\\\\EasyAdminBundle\\\\\": \"src/\",\n            \"JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\\": \"legacy/\"\n        }\nwhich generates the right thing in Composer's dumped autoload:\n```\n'EasyCorp\\Bundle\\EasyAdminBundle\\EasyAdminBundle' => DIR . '/../..' . '/src/EasyAdminBundle.php',\n// ...\n'JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle' => DIR . '/../..' . '/legacy/EasyAdminBundle.php',\n```\n\nThe latest legacy EasyAdminBundle class: https://github.com/javiereguiluz/EasyAdminBundle/blob/19827e66ba3d243d0c07765ac81362b3ec1a9757/legacy/EasyAdminBundle.php\nThe latest new equivalent class: https://github.com/javiereguiluz/EasyAdminBundle/blob/19827e66ba3d243d0c07765ac81362b3ec1a9757/src/EasyAdminBundle.php\n\nAnd this is the error I see:\n\n. @ogizanagi thanks! About your missed comment, you are right ... but I'm focused on making just 1 class work: the EasyAdminBundle.php class. Once I make just 1 example work, I'll probably be able to make the entire bundle work. In the mentioned EasyAdminBundle class I followed your comment and the alias should be correct:\nphp\nclass_alias('EasyCorp\\Bundle\\EasyAdminBundle\\EasyAdminBundle', 'JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle', false);. Tests pass on Travis CI, but I see some issues when running tests locally \ud83d\ude15 \u2753 \n```\n$ ./vendor/bin/phpunit PHPUnit 4.8.36 by Sebastian Bergmann and contributors.\n........SS...SS....SS....S.....................................  63 / 392 ( 16%)\n............................................................... 126 / 392 ( 32%)\n............................................................... 189 / 392 ( 48%)\n......PHP Fatal error:  Cannot declare class AppKernel, because the name is\nalready in use in tests/Fixtures/App/AppKernel.php on line 83\nFatal error: Cannot declare class AppKernel, because the name is already in use\nin tests/Fixtures/App/AppKernel.php on line 83\n```. I'm stuck ... again \ud83d\ude22  This is the error:\n```\n$ ./vendor/bin/phpunit --stop-on-failure\n........SS...SS....SS....S.....................................  63 / 392 ( 16%)\n............................................................... 126 / 392 ( 32%)\n............................................................... 189 / 392 ( 48%)\n.......E\n1) EasyCorp\\Bundle\\EasyAdminBundle\\Tests\\Controller\\ActionTargetTest::testEditViewActions\nArgumentCountError: Too few arguments to function\nEasyCorp\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminFormType::__construct(), 0\npassed in vendor/symfony/form/FormRegistry.php on line 85 and at least 1 expected\nsrc/Form/Type/EasyAdminFormType.php:43\nvendor/symfony/form/FormRegistry.php:85\nvendor/symfony/form/FormFactory.php:74\nsrc/Controller/AdminController.php:578\nsrc/Controller/AdminController.php:710\nsrc/Controller/AdminController.php:624\nsrc/Controller/AdminController.php:550\nsrc/Controller/AdminController.php:710\nsrc/Controller/AdminController.php:203\nsrc/Controller/AdminController.php:710\nsrc/Controller/AdminController.php:75\nvendor/symfony/http-kernel/HttpKernel.php:153\nvendor/symfony/http-kernel/HttpKernel.php:68\nvendor/symfony/http-kernel/Kernel.php:171\nvendor/symfony/http-kernel/Client.php:61\nvendor/symfony/framework-bundle/Client.php:131\nvendor/symfony/browser-kit/Client.php:315\ntests/Fixtures/AbstractTestCase.php:64\ntests/Fixtures/AbstractTestCase.php:130\ntests/Controller/ActionTargetTest.php:41\nFAILURES!\nTests: 197, Assertions: 229, Errors: 1, Skipped: 7.\n```\nAnd I also see a strange deprecation message that I don't understand:\nPassing four arguments to the Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension::__construct() method is deprecated since Symfony 3.3 and will be disallowed in Symfony 4.0. The new constructor only accepts three arguments: 2x\n    1x in ActionTargetTest::testListViewActions from EasyCorp\\Bundle\\EasyAdminBundle\\Tests\\Controller\n    1x in ActionTargetTest::testEditViewActions from EasyCorp\\Bundle\\EasyAdminBundle\\Tests\\Controller. I'm not sure what could be happening here. Could you please try to use the default settings for this property and see what happens? Just use this config:\nyaml\n- { property: 'imeis' }. I'm closing this as fixed by @crowdbytes's answer ... but if this problem persists, please reopen. Thanks!. I'm closing this as fixed by @crowdbytes's answer ... but if this problem persists, please reopen. Thanks!. I'm closing this as fixed by @crowdbytes's answer ... but if this problem persists, please reopen. Thanks!. Thanks for reporting this. It looks related to this: https://github.com/twigphp/Twig/issues/2336  I'll have a look.\nAnd the solution seems to be: https://stackoverflow.com/questions/41590051/twig-2-0-error-message-accessing-twig-template-attributes-is-forbidden\nAnd here is what Sylius did to support Twig 2.x: https://github.com/Sylius/Sylius/pull/7629/files. @san-developer I'm sorry for the misunderstanding, but I never thought it was your fault and I didn't said or implied that :)  I just did a quick search and found \"a Twig issue\" and I'll look into it. But now that you've looked into it, it will be easier to solve it. Thanks!. I'm trying to reproduce the errors, but I can't. I'm using Twig 2 with this bundle and I see no deprecation. Something must be wrong on my side, but I can't find it. In #1806 I'm trying to reproduce the errors in Travis servers.. I'm going crazy with this issue:\n1) In #1806 we're testing the bundle against Twig 2.x and there are no errors in Travis CI logs.\n2) The mentioned error (\"Accessing Twig_Template attributes is forbidden\") looks related to macros imported in a parent template and used in a child template (see https://github.com/twigphp/Twig/issues/2336, https://stackoverflow.com/questions/41590051/twig-2-0-error-message-accessing-twig-template-attributes-is-forbidden, https://github.com/twigphp/Twig/issues/2344, etc.)\n3) We only define 1 macro (in the menu.html.twig template) and it's used in the same template where it's defined and imported, so we don't suffer the above issue.\nConsidering all this, I'd say this issue is not related to this bundle but to another one used in your app. Would that make sense? Thanks!. I'm closing this one because we don't have more information to reproduce the error ... but we can reopen later if needed. Thanks!. @dragosprotung thanks a lot for your contribution! Thanks also for creating a great test to avoid future regressions!!. @dragosprotung I'm really sorry. Once #1787 is merged, I want to start simplifying tests and fixing any issue on them . Thanks!. Usually you can do this --> property: 'user' (instead of user_id or user.id, etc.) and the article would correctly show the author or a select list to pick the author. If this doesn't work, please reopen this issue and add a comment with the full error details shown by Symfony. Thanks!. I'm not sure if this bug is caused by this bundle. The error mentions the line number 52 of XmlUtils.php file. That file belongs to Symfony Config component. Besides, the error is very strange because the related code is $dom = new \\DOMDocument(); ... and that's correct because DOMDocument is a PHP class and it comes built-in.. I'm going to close this because it looks unrelated ... but we can reopen later if we have more information. Thanks!. I'm afraid this feature is not provided by this bundle. I guess this could be implemented by the project itself, but it would require redefining some templates, modifying the ConfigManager class, etc. In my opinion it's not worth it.\nI know it's disappointing, but you'll have to pick the best value for your application and \"force\" all users to use that value. I'm sorry.. It makes a lot of sense to me. Thanks for improving this!. @dragosprotung thanks for fixing this bug. Due to some dir structure changes, I can't merge this PR and I've replicated it in #1798 ... but all the credit goes to you. Thanks!. Thanks for reporting this issue. I could reproduce it and this is now fixed in #1807.. @innerspirit thanks for finding and fixing this issue. Sadly, we recently changed the whole directory structure of the bundle, so I cannot merge your pull request. I replicated your changes in #1796, so I'm closing this in favor of that. Thanks!. @TiDJ thanks for fixing this! Sadly, we recently changed the whole dir structure of the bundle, so there are conflicts. I replicated your changes in #1797 to merge this quickly, but all the credit goes to you. Thank you!. @JoeKre thanks a lot for providing more info! Sadly, the Xdebug difference distorts the results. It's better to always disable Xdebug when profiling. I'll tell you what I did:\n1) I profiled the application in \"prod\" env and without Xdebug, using EasyAdmin 1.16.12 and 1.16.13:\n\n2) Then, I compared the two profiles as follows:\n\nComparing the profiles is the key ... because there you'll see which new functions/methods are now called or which part of the application degraded its peformance.. @JoeKre thanks! That was exactly what we needed. In the comparison, we can see the following:\n\n\nNow I need to optimize our findFirstExistingTemplate() method. Thanks!. I've been checking this issue and I found a quick solution that works for me, but I'd need you to please verify it yourself. It only requires to change 1 line of code, so maybe you can change it directly in the vendor/  dir and see if it improves performance.\nIn src/Configuration/TemplateConfigPass.php, the findFirstExistingTemplate() method contains this line:\nphp\nif ($this->twigLoader->exists($templatePath)) {\nCould you please change it as follows?\nphp\nif (null !== $templatePath && $this->twigLoader->exists($templatePath)) {\n. I'm going to close this as \"probably fixed\" by #1821. Now that 1.17.1 version has been published, it's easy to test if the changes are working. Thank you all for your help profiling your apps!!. @ogizanagi thank you very much for updating the contributors list and for sharing the script. I'll try to take over the script and update it to generate the next contributors file. Thank you!. Yes, we switched to assertArraySubset() because comparing everything was CRAZY and the fixtures were huge (several megabytes). Let's think about an alternative solution.. You can for example check some specific nested config options, without having to dump the entire backend config. If you have any problem, please ask me because I spent a lot of time with the tests and I know sometimes they are not easy to make them work :(. Thanks for fixing this bug @alterphp.. I'm sorry but I don't know if this is an error of this bundle or Doctrine or Symfony :(\nIn the EasyAdmin Demo application we define OneToMany relations (see Products, Users, Purchases) and they seem to work. Could you create a reproducer for this issue? Thanks!. Thanks for your proposal. Sadly, I never use DTO with Symfony Forms, so I can't estimate how big would this change be. Can someone give a brief overview of the needed changes? Thanks!. Sadly I must say this doesn't look trivial to implement. I'm putting it on hold until we restart the development of new features for this bundle. So, I'm closing this as \"won't fix now\" but I've added it to our public Roadmap. Thanks for understanding.. I've tried to refactor the form theme to extract the Twig code related to the actions into a new template fragment. That way I can define the Twig block in the edit/new template and you can override it. But this is not possible because then the action buttons are out of the <form> element and don't work.\nThat's why sadly I must close this as \"won't fix\". You can at least add/remove actions using the configuration and you can apply some CSS styles if you want to change the style of those actions. But it's not possible to allow a simple Twig template override for this. If someone comes up with a brilliant idea about how to solve this in a simple way, please comment and we'll reopen. Thanks!. Good catch, thanks @ludovicm67.. Thanks! But you are right and I prefer to wait until 2.0 version of this bundle.. @forsetius thanks for the details. I'm closing this issue, but not because I don't like it but because we already have it in our roadmap. That's why we close these issues to not make people believe that this will be soon implemented. Thanks!. You are right about ODM: we don't have a single line of code about that in this bundle. Your PHP class is ODM + ORM ... but for this bundle it should be a regular ORM entity.\nIf this worked in 1.17.0 and failed in 1.17.3 ... then the list of potential changes is small. My first guess would be this one: #1780.. Let's close because we don't have more feedback. Hopefully it's fixed!. I'm really sorry but I must close this again. I don't use MongoDB so I can't debug this and we haven't receive more feedback or more comments from others.. If you could profile the execution of PHPUnit (with Blackfire command utilities for example) we'll discover the bottleneck in less than a minute. Otherwise, we'll spend a lot of time guessing what's happening :(. First you should install Blackfire following these instructions: https://blackfire.io/docs/up-and-running/installation\nThen you can profile PHPUnit execution running the command as blackfire run phpunit instead of just phpunit. Lastly, when you profile both the before and after of PHPUnit, you can easily compare them and see where the problem is.\nIf you need it, I can help you with this in the Symfony Slack channel here: https://symfony.com/support. I'm sorry it took me so long to reply here. Even if this feature could be useful for some, I don't think it's that commonly needed. That's why I prefer if you could implement it yourself overriding templates. If we get more requests for this feature, then we could include it. I'm sorry but I hope you understand we don't have enough resources to maintain this bundle, so I want to keep new features to the minimum. Thanks!. I'm really sorry but I can't help you because this looks like a JavaScript error when integrating those libraries. The real mistake was to include the JavaScript code in the tutorial that you mentioned. That's wrong because the needed code can be very different according to your application/setup and there are a lot of CKEditor/CKFinder versions, so it's impossible to show a fully working solution.\nIn #1855 I'm rewording this tutorial to remove the JavaScript details and just explain the things related to this bundle: how to load the JavaScript file you need to create to integrate this. I know my answer can be disappointing but I hope you understand it. Thanks!. If you set the translation_domain option to false, the translation is disabled. The problem is that the interface translation is disabled too, so you'll see action.edit instead of Edit, etc.\nIs there a simple solution to disable the translation for everything except for the EasyAdmin translation domain?. Let's close this as \"fixed\" because translation can be disabled per entity or for the entire backend. However, this bundle is really designed to have translation enabled (for the interface, etc.) Thanks!. I don't like adding more config options ... so I'm going to think a bit more about this. About the interface ... the problem is that we translate actions with messages instead of EasyAdmin domain, so you can customize them. Not sure if we can solve that.\nMoreover, this is related to some controversial Symfony feature/behavior. See https://github.com/symfony/symfony/pull/21726. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I use this in a backend, but I put the choice values in the opposite order. MAybe that's the issue here?\nyaml\n- { property: 'sendstyle', ..., type_options: { choices: { 1: 'text1', 2: 'text2', 3: 'text3' }} }. I'm sorry but I didn't read this issue description right. You want to display a form widget (ChoiceType) in a list view? If that's your need, I'm afraid you can't do that natively. You can do it with a custom template fragment (as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type) but I don't think it makes sense to display a form widget (something to modify information) in the lsit view (which only display information and doesn't change it).\nI'm closing this as \"fixed\", but if you disagree, please reopen. Thanks!. I'm sorry but I didn't read this issue description right. You want to display a form widget (ChoiceType) in a list view? If that's your need, I'm afraid you can't do that natively. You can do it with a custom template fragment (as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type) but I don't think it makes sense to display a form widget (something to modify information) in the lsit view (which only display information and doesn't change it).\nI'm closing this as \"fixed\", but if you disagree, please reopen. Thanks!. I'm sorry but I don't understand your issue report. If you have created a custom controller, all actions go by default to it ... but since your controller extends from the EasyAdmin base controller, only the actions that you explicitly override are changed ... the others will be executed by the default controller.. OK, so in the first screenshot I see that you have two entities called Shiftment and Skill ... and only skill defines a custom controller. In the second screen I see that you are browsing a Shiftment-related page and you say that the custom controller is wrongly used ... but I can't see the custom controller anyway in the screenshot.\nMoreover, in the EasyAdmin Demo application we use a custom controller in one entity and I've just verified that it's only used for that particular entity and not for the others.. I'm afraid I must close this issue report because I cannot reproduce it in any way \ud83d\ude1e  However, if you can reproduce the bug using the EasyAdmin Demo application, please share the bug reproducer and we can reopen this. Thank you!. In case it's useful to you, today I faced a similar bug. The custom controller of some entity was used in another entity. Why? I was updating my app to Symfony 3.3 + Flex and I did this:\n```yaml\nconfig/routes.yaml\nbackend:\n    resource: '../src/Controller/'\n    prefix: /admin\n    type: annotation\n```\nBut that's wrong because I had several controller files and everything was messed. I fixed it like this, which by the way is the same that the default Symfony Flex recipe for this bundle does:\n```yaml\nconfig/routes.yaml\nbackend:\n    resource: '../src/Controller/AdminController.php'\n    prefix: /admin\n    type: annotation\n```. I'm afraid this is not possible and it's not in our short-term roadmap either because of the complexity of making this feature right. I'm sorry!. Thanks for reporting this ... but I can't reproduce it!! \ud83d\ude31  Using the EasyAdmin Demo application with 1.17.4 works as expected. It's strange that none of our tests have caught this bug.\nIf anyone else is suffering this issue, could you please create a reproducer? Thanks!. @iamromeo this command should work, according to StackOverflow:\nsql\nSET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));. I've found this Doctrine issue: https://github.com/doctrine/doctrine2/issues/5622 which was fixed as a bug in https://github.com/doctrine/doctrine2/pull/6143 and probably released in their 2.5.7 version https://github.com/doctrine/doctrine2/releases/tag/v2.5.7.\nSo, let's close this as a Doctrine bug that can be solved by upgrading the doctrine2 dependency.. I've found this Doctrine issue: https://github.com/doctrine/doctrine2/issues/5622 which was fixed as a bug in https://github.com/doctrine/doctrine2/pull/6143 and probably released in their 2.5.7 version https://github.com/doctrine/doctrine2/releases/tag/v2.5.7.\nSo, let's close this as a Doctrine bug that can be solved by upgrading the doctrine2 dependency.. Thanks @BoShurik.. @xawiers thank you so much for reporting this issue and fixing it!! While reviewing this I found more errors, so I propose to fix them in this alternative pull request: #1862.\nThat's why I'm closing this pull request. I'm sorry to do that, but I thank you again for spotting this bug!. @xawiers thank you so much for reporting this issue and fixing it!! While reviewing this I found more errors, so I propose to fix them in this alternative pull request: #1862.\nThat's why I'm closing this pull request. I'm sorry to do that, but I thank you again for spotting this bug!. Thank you very much for fixing this issue!. Thank you very much for fixing this issue!. Great! This was on my TODO list, so thanks for contributing it!. Great! This was on my TODO list, so thanks for contributing it!. @cezarystepkowski thanks for fixing this bug and for making your first contribution to this bundle!. @cezarystepkowski thanks for fixing this bug and for making your first contribution to this bundle!. Thanks for reporting! A community contribution recently changed this to:\n\"sensio/framework-extra-bundle\": \"~2.3|~3.0,>=3.0.2|4.0.x|~5.0\",\nIt's in \"master\" only for now. I'll release a new version very soon.. Thanks for reporting! A community contribution recently changed this to:\n\"sensio/framework-extra-bundle\": \"~2.3|~3.0,>=3.0.2|4.0.x|~5.0\",\nIt's in \"master\" only for now. I'll release a new version very soon.. Let's keep it open until we release the new version and verify that this is indeed solved. Thanks!. Let's keep it open until we release the new version and verify that this is indeed solved. Thanks!. Closing now that https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.17.5 has been released. Thanks!. Does anyone see any problem making this change? Thanks!\ndiff\n-        \"twig/twig\": \"~1.14,>=1.14.2|~2.0\"\n+        \"twig/twig\": \"~1.26|~2.0\". There's no need to use the disabled_actions thing. You can define the property as boolean instead of toggle. Here is explained: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#toogle-and-boolean-data-types. There's no need to use the disabled_actions thing. You can define the property as boolean instead of toggle. Here is explained: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#toogle-and-boolean-data-types. I could reproduce this bug and I'm trying to fix it in #1873. Thanks!. The given path has 219 chars, but path-to-project could be longer. On Windows the max path length is between 258 and 260 (260 in theory but in Symfony we use 258). Otherwise, I'd say this is a transient error of Windows or Git or GitHub (this happened to me occasionally in the past). Removing the entire vendor/ dir and reinstalling everything should work.. The given path has 219 chars, but path-to-project could be longer. On Windows the max path length is between 258 and 260 (260 in theory but in Symfony we use 258). Otherwise, I'd say this is a transient error of Windows or Git or GitHub (this happened to me occasionally in the past). Removing the entire vendor/ dir and reinstalling everything should work.. Let's close this for the moment because it doesn't look strictly related to this bundle. By the way, there's a new version released (https://github.com/javiereguiluz/EasyAdminBundle/releases/tag/v1.17.5) so maybe you can try if it now works as expected. Thanks!. I thought this was some Doctrine or Pager thing, but this may be caused by our code in QueryBuilder. I don't really know what to do. If I check the SQL query done in the EasyAdmin Demo app, it's correct and that's why I don't see that MySQL error:\nSELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT p0_.id AS\nid_0, p0_.created_at AS created_at_1, p0_.tags AS tags_2, p0_.ean AS ean_3,\np0_.enabled AS enabled_4, p0_.image AS image_5, p0_.features AS features_6,\np0_.price AS price_7, p0_.name AS name_8, p0_.description AS description_9 FROM\nproduct p0_ ORDER BY p0_.name DESC) dctrn_result) dctrn_table\nWhat can we do here?\n. I thought this was some Doctrine or Pager thing, but this may be caused by our code in QueryBuilder. I don't really know what to do. If I check the SQL query done in the EasyAdmin Demo app, it's correct and that's why I don't see that MySQL error:\nSELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT p0_.id AS\nid_0, p0_.created_at AS created_at_1, p0_.tags AS tags_2, p0_.ean AS ean_3,\np0_.enabled AS enabled_4, p0_.image AS image_5, p0_.features AS features_6,\np0_.price AS price_7, p0_.name AS name_8, p0_.description AS description_9 FROM\nproduct p0_ ORDER BY p0_.name DESC) dctrn_result) dctrn_table\nWhat can we do here?\n. You said that 1.17.3 works and 1.17.4 does not work ... so I'm comparing them: https://github.com/javiereguiluz/EasyAdminBundle/compare/v1.17.3...v1.17.4\nCould you please try to make this change in src/Search/Paginator.php and see if the  problem disappears? Thanks!\ndiff\n public function createOrmPaginator($queryBuilder, $page = 1, $maxPerPage = self::MAX_ITEMS)\n {\n-    $paginator = new Pagerfanta(new DoctrineORMAdapter($queryBuilder));\n+    $paginator = new Pagerfanta(new DoctrineORMAdapter($queryBuilder, true, false));. @sylvaindeloux thanks for testing that. I've changed that line of code back and forth several times in the past. I think I'm not going to change it again.. I recently tried to solve this or at least improve it. However, as it always happens to me with anything related to Symfony Forms, I failed miserably. Specifically, I tried to solve this #1823 and there you'll find an alternative solution provided by the issue reporter. I hope it helps you.. Thanks a lot for taking care of this and solving it so nicely!. The most probably cause is that in production the application uses a different path to serve images. Check out the base_path option of the image type as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#image-data-type. Cool! Let's close as fixed then. Thanks!. This PR is much more complicated than I anticipated because of all the legacy jQuery plugins. Given that this is a \"nice to have\" feature instead of a critical and urgent feature, I'm closing this as \"won't fix\" and I'll rework on this in the future (when we may even update our base Bootstrap theme for a more modern and Webpack-friendly theme).. Good catch, thanks @yceruto.. I don't think that Doctrine query is going to work. In the \"list\" view, you need to get a list of entities to display ... but you are selecting a pair of values for each result (select('entity, max(entity.id), ...). It should be just select('entity, to only pick 1 value per result.. I'm afraid I can't help you because Doctrine always drives me crazy. But here you can find the official documentation of the Doctrine Query Builder: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/query-builder.html\nWhat I'd try is this:\n```php\n// Before\n$queryBuilder->select('entity, max(entity.id), COALESCE(IDENTITY(entity.contrats),\nentity.id) AS OrderGroup')->GroupBy('OrderGroup');\n// After\n$queryBuilder->select('entity, COALESCE(IDENTITY(entity.contrats), entity.id)\nAS HIDDEN OrderGroup')->GroupBy('OrderGroup');\n```\nThe idea is to remove anything different from entity in select() or make them HIDDEN so Doctrine only uses them from GroupBy/OrderBy/etc. and not for the select.. @fadoe thanks a lot for providing the solution details. @diedna this is now a matter of creating the Doctrine query, so let's close this issue and if you have any issue, please use the Doctrine support channels. Thanks!. I'm afraid I don't understand this issue report. I've just tested the buttons and they work as expected:\n\nCould you please provide a sample of the HTML code used in the buttons, a screenshot of how they look and a screenshot or example of how should they look like? Thanks!. The thing is that we tweaked the design of the original AdminLTE design to give this bundle a bit more \"personality\" (identity). I'm afraid we're not planning to revert those changes and use the default AdminLTE design.\nIf you need the original design, you can define your own CSS and include it as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/design-configuration.html#adding-custom-web-assets. At first sight, I'd say that your best option would be to use a custom controller for this particular entity (as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html#customization-based-on-entity-controllers) and then override just one of these methods:\n\nIf you want to do a lot of customizations, maybe it's better to create the edit/new form manually overriding the createEditForm() method and use a entity type field (even if you have lots of results, it's not problem because we use a JavaScript widget to make it easy to select the value). If you have thousands and thousands of results, then this solution doesn't work...\n... and you should instead override the autocompleteAction() method to make the custom autocomplete query yourself and return the results. It's a bit boring because you need to take into account the pagination, etc. but you can copy+paste the original code.. I'm glad to hear that you solved this by creating a new form. Closing as fixed. Thanks!. I've tested this and it works like a charm. the entity types now display a full Select2 widget, like an autocomplete. I love it. thank you very much for fixing this bug.. The pagination strings are part of the EasyAdmin interface and translated using the EasyAdmin translation domain, so you must use the translation override mechanism provided by Symfony: (https://symfony.com/doc/current/bundles/override.html#translations).\n\nThis is mentioned in the main article about translating EasyAdmin backends: https://symfony.com/doc/current/bundles/EasyAdminBundle/tutorials/i18n.html\nChanging the paginator strings is uncommon ... but changing the action names is more common. that's why we translate them with the normal messages translation domain. So it should be easy to translate them. This wasn't fully explained in that article, so I'm improving it here: #1886.\nLastly, if you want to tweak just some actions and not ALL actions of ALL entities, you can define the label property of the customized actions:\n``yaml\nentities:\n    # ...\n    Customer:\n        # ...\n        list:\n            actions:\n                - { name: 'edit', label: 'my-custom-label' }\n            # ...\n. I've tested this in a real application and it works ... but a lot of tests are failing because somehow this doesn't work in tests. If I do avar_dump($this->client->getResponse());in the first failing testActionOverrideTest::testEditViewActions()` I can't see any action in the generated HTML.\nUpdate: for some reason, the changes now don't work in the real application either. Not sure why because your changes look right to me \ud83d\ude15 . It's working great now. Thanks!. @naitsirch don't worry! I'll take a look at tests when I review this proposal. Thanks!. @naitsirch thanks a lot for contributing this feature. It was a stellar first contribution to this bundle. And to be completely honest, I would have never been able to implement this feature myself :). It's not possible yet. We'll implement that feature in the 2.0 version of this bundle. Thanks!. If you see the Duplicate entry exception, then the Symfony validation is not working and the database is throwing that error. Please check this tutorial https://symfony.com/doc/current/bundles/EasyAdminBundle/integration/fosuserbundle.html because maybe you must configure the validation_groups option somewhere.. This feature it not built-in ... but you can easily do that using a custom template fragment to display that entity property. It's explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#rendering-entity-properties-with-custom-templates\nI'll close as \"fixed\" then. Thanks!. In my opinion, the most appropriate solution for this case would be to use an event listener or subscriber. EasyAdmin triggers lots of events before and after doing lots of things (as explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html#customization-based-on-symfony-events) so you can for example listen to EasyAdminEvents::POST_EDIT or EasyAdminEvents::POST_UPDATE depending on your needs.\nHere you can read more about event listeners and subscribers in Symfony: https://symfony.com/doc/current/event_dispatcher.html and please note that starting from the upcoming Symfony 4.0 version (released at the end of November) we are recommending to always use subscribers and never listeners.\nI think we can close this as \"fixed\" then. Thanks!. We may implement this feature in the future. Right now I'm afraid I don't have time for this. I want to work on 1) fixing important bugs reported recently; 2) ensuring a perfect integration with Symfony 3.4/4.0; 3) start working on 2.0 version which removes all legacy stuff and which I want to start as soon as possible.\nMeanwhile maybe you can implement this feature on your own backend and in the future, if we work on implementing this, you can share your thoughts and experience with us. In any case, let's close this for the moment. Thanks!. @diaboloshogunate the solution that you shared is one of the possible solutions to implement this feature. At the end EasyAdmin is run on top of a Symfony application, so you have an endless set of tools to solve problems. However, in this bundle docs we only document the features that are exclusive to this bundle.\nThat's why we've documented how to add custom routes/pages to the sidebar menu, how to link them to regular Symfony actions, how to change the home page of the backend, etc. To make docs easier to manage I prefer to not add docs about features that are mostly related to Symfony. I hope you understand it. Thanks!. Good catch, thanks @gregoirepaqueron.. @gregoirepaqueron thanks for reporting this. I agree that it is a bug and I'm trying to fix it in #1903.. I'm afraid I can't reproduce this. In the EasyAdmin Demo app, the original situation is:\n\nIf I force the value to null, it works as expected:\n\nSame with an empty collection:\n\nCan you please dump(value) in the Twig template just before the error? Thanks!. Closing as \"not a bug\" then. About your last comment, I wish I could work on more issues/PRs of this bundle. Sadly I can't promise anything. I'm sorry \ud83d\ude22 . Your proposal makes a lot of sense and other people asked about this before (#1437, #1750). However, I'm afraid that I must close it as \"won't fix now\" because of the reasons given in this comment:\n\nI like this feature, but I prefer to implement it in the future. If we do that now, we'd need to duplicate a lot of code and the result will be a mess. I prefer to wait until the 2.0 version of this bundle is released, where we'll simplify a lot of things and we'll remove all the legacy stuff.\nI added this feature to the Roadmap of this bundle so I'm closing this issue. Thanks!. Much better indeed! Let me check it in different browsers to see if it always work as expected. Thanks!. @iluuu1994 vey nice catch! I've fixed it in #1912. Thanks!. Finally fixed by #2045.. Finally fixed by #2045.. Just asking: does it make any sense to display the HTML tags on the contents of the list view? Given that we have a raw type that renders the HTML tags, we could apply |striptags by default to the text property. For example:\n\nBEFORE:\ntwig\n{# field_text.html.twig #}\n{% if view == 'show' %}\n    {{ value|nl2br }}\n{% else %}\n    {{ value|easyadmin_truncate }}\n{% endif %}\nAFTER:\ntwig\n{# field_text.html.twig #}\n{% if view == 'show' %}\n    {{ value|nl2br }}\n{% else %}\n    {{ value|striptags|easyadmin_truncate }}\n{% endif %}. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Thanks @crashiura.. Thanks for fixing this bug @dragosprotung.. @j1top I'm closing this as a duplicate of #1913 and please, don't ping several people at once for a simple bug. Thanks!. @RealJamesMoriarty thanks for reporting this issue and for investigating why it happens. I'm fixing it in #1920.. According to past issues reported to this repo, this is probably related to Doctrine and not this bundle. I show bellow the example I always use to set up a bidirectional many-to-many relation in Doctrine, so you can check if you have all these needed methods and configs:\n```php\n// src/Entity/Article.php\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/\n * @ORM\\Entity()\n */\nclass Article\n{\n    /\n     * @ORM\\Id()\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     * @ORM\\Column(type=\"integer\", name=\"id\")\n     */\n    protected $id;\n/**\n * @ORM\\ManyToMany(targetEntity=\"Tag\", inversedBy=\"articles\")\n */\nprotected $tags;\n\npublic function __construct()\n{\n    $this->tags = new ArrayCollection();\n}\n\npublic function addTag(Tag $tag)\n{\n    if ($this->tags->contains($tag)) {\n        return;\n    }\n\n    $this->tags->add($tag);\n    $tag->addArticle($this);\n}\n\npublic function removeTag(Tag $tag)\n{\n    if (!$this->tags->contains($tag)) {\n        return;\n    }\n\n    $this->tags->removeElement($tag);\n    $tag->removeArticle($this);\n}\n\n}\n// src/Entity/Tag.php\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/\n * @ORM\\Entity()\n */\nclass Tag\n{\n    /\n     * @ORM\\Id()\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     * @ORM\\Column(type=\"integer\", name=\"id\")\n     */\n    protected $id;\n/**\n * @ORM\\ManyToMany(targetEntity=\"Article\", mappedBy=\"tags\")\n */\nprotected $articles;\n\npublic function __construct()\n{\n    $this->articles = new ArrayCollection();\n}\n\npublic function addArticle(Article $article)\n{\n    if ($this->articles->contains($article)) {\n        return;\n    }\n\n    $this->articles->add($article);\n    $article->addTag($this);\n}\n\npublic function removeArticle(Article $article)\n{\n    if (!$this->articles->contains($article)) {\n        return;\n    }\n\n    $this->articles->removeElement($article);\n    $article->removeTag($this);\n}\n\n}\n```. Closing as fixed. Thanks!. Thank you Yonel.. Thanks for fixing this issue. \u0634\u0643\u0631\u0627. @cabsil thanks for reporting! I recently merge two bug fixes related to this but I haven't released a stable version yet. Could you please check if they solve this issue for you? Thanks!\n\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/1915\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/1919. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\n\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Sadly I must close this feature as \"won't fix\". We no longer have resources to work on big and complex features like this. However, I've added it to our public roadmap in case some day we can work on this again. Thank you all for the discussion.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm done for now! I don't know how to solve the latest issues \ud83d\ude22 . If I put this in composer.json autoload-dev:\n\"files\": [\n    \"tests/Fixtures/App/DynamicConfigLoadingKernel.php\"\n]\nI see this error:\nPHP Fatal error:  Class 'AppKernel' not found in\nEasyAdminBundle/tests/Fixtures/App/DynamicConfigLoadingKernel.php on line 18\nBut if I put this:\n\"files\": [\n    \"tests/Fixtures/App/AppKernel.php\",\n    \"tests/Fixtures/App/DynamicConfigLoadingKernel.php\"\n]\nI see this other error:\nPHP Fatal error:  Cannot declare class AppKernel, because the name is already in\nuse in EasyAdminBundle/tests/Fixtures/App/AppKernel.php on line 83. Closed in favor of #1933.. Thanks Christian.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @xabbuh could you please help me here? I have some questions:\n1) Is this config line still correct? https://github.com/javiereguiluz/EasyAdminBundle/blob/829467919e624382f577c76d64d862d858b9adb6/.travis.yml#L65  We no longer use symfony/symfony but individual components.\n2) I can't reproduce the errors for Symfony 4 beta dependencies. Locally it works, but on Travis I see this: https://travis-ci.org/javiereguiluz/EasyAdminBundle/builds/303982341\nThanks!. I'm getting a very strange error in Symfony 4 tests:\nTwig_Error_Syntax:\nUnknown \"asset\" function.\n  at /home/travis/build/javiereguiluz/EasyAdminBundle/src/Resources/views/default/layout.html.twig:13\n  at Twig_ExpressionParser->getFunctionNodeClass('asset', 13)\n     (/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/twig/twig/lib/Twig/ExpressionParser.php:364)\n  at Twig_ExpressionParser->getFunctionNode('asset', 13)\n     (/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/twig/twig/lib/Twig/ExpressionParser.php:152)\n  at Twig_ExpressionParser->parsePrimaryExpression()\n     (/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/twig/twig/lib/Twig/ExpressionParser.php:92)\n  at Twig_ExpressionParser->getPrimary()\n     (/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/twig/twig/lib/Twig/ExpressionParser.php:45)\n  at [...]. And we are green from Symfony 2.3 to 4.0 and from PHP 5.3 to 7.1 \ud83c\udf89\nThanks @xabbuh for your help!. Could you please copy+paste the text of the error or a screenshot of your command console to get more information about this? Thanks!. Closing because we don't have more feedback.. Closing because we don't have more feedback.. @Pierstoval thanks for reporting this bug and proposing a fix for it. I've confirmed it and, after some investigation, I'm afraid the proposed fix won't solve the issue in all cases. I've thought about an alternative solution, but it requires more changes, so I'll implement it as soon as I have some time, maybe this weekend. Thanks!. Closing in favor of #1998, which provides the same solution than this pull request but adds more checks and handles some edge cases. Thank you @Pierstoval.. Yes, we'll add this feature ... but in the future 2.0 version of this bundle. People has asked lots of times about this (and it's already on our roadmap) but we need to change a lot of things first. Moreover, right now we're focused on making this work with Symfony 4.\nSo, I'm closing this issue for the moment ... but we're aware of it and we'll implement it. Thanks!. Thanks fore reporting this. It was fixed in #1932 by @xabbuh (that's why I'm closing). I just need to release a new stable version of the bundle. I was waiting until #1933 is finished ... but I cannot make it work, so maybe I'll release a new version soon.. This is what we call a \"virtual field\" because it doesn't really exist in the entity as a property ... it's just a method. Sadly sorting contents by a virtual field is not supported (and it won't be supported in the near future).\nThe easiest solution in this case is to use the real size property (to enable sorting) and then use a custom template fragment to format the data of this property before displaying it. It's explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration. I think the problem is that you are trying to use json_array as a form type in edit or new ... but that's not a valid Symfony Form Type (https://symfony.com/doc/current/reference/forms/types.html) (is a valid Doctrine Data Type). If you change it to choice it should probably work. I'm closing as \"fixed\" then. Thanks!. I think the problem is that you are trying to use json_array as a form type in edit or new ... but that's not a valid Symfony Form Type (https://symfony.com/doc/current/reference/forms/types.html) (is a valid Doctrine Data Type). If you change it to choice it should probably work. I'm closing as \"fixed\" then. Thanks!. @EvaldasAlcauskis thanks for contributing this translation to the project! labai a\u010di\u016b. I agree with adding the internal changes needed to process these immutable fields as expected (all Doctrine, guesser, etc. stuff) ... but about adding new field types, I'm not sure. Why would you want to display immutable dates differently from regular dates? If the only change that makes sense is that immutable dates must be read only by default, we can do some changes to apply that property ... but what other things would you like to change when displaying an immutable date?. I agree with adding the internal changes needed to process these immutable fields as expected (all Doctrine, guesser, etc. stuff) ... but about adding new field types, I'm not sure. Why would you want to display immutable dates differently from regular dates? If the only change that makes sense is that immutable dates must be read only by default, we can do some changes to apply that property ... but what other things would you like to change when displaying an immutable date?. I want to finish this feature soon, so I've created #2057 as an alternative to this with less changes. @jdecool I'm sorry to close your pull request but I thank you for starting the work on this. Cheers!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Closing as fixed then. And thanks again to @yceruto for fixing this issue!. Let's close this as \"fixed\" thanks to the idea suggested by @dfinfo. To be honest I prefer it because the dependency injection extensions to merge and prepend things are too complex for such a simple need. Thanks!. Let's close this as \"fixed\" thanks to the idea suggested by @dfinfo. To be honest I prefer it because the dependency injection extensions to merge and prepend things are too complex for such a simple need. Thanks!. My guess is that some URL rewriting on the server went wild. Not sure how can I help here \ud83d\ude15 . My guess is that some URL rewriting on the server went wild. Not sure how can I help here \ud83d\ude15 . I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Closing because this was probably fixed by the PR suggested by Christian.. Fixed by #1953.. I agree with the new Twig blocks because we always add them when needed ... but about this new CSS class field_name-{{ field }} I'm not sure. We already allow each field to define its own CSS class, which is a less fragile solution that also allows to reuse styles for fields with different names.. I agree with the new Twig blocks because we always add them when needed ... but about this new CSS class field_name-{{ field }} I'm not sure. We already allow each field to define its own CSS class, which is a less fragile solution that also allows to reuse styles for fields with different names.. Thanks Krzysztof.. Thanks for investigating this issue. I'm very interested in helping you make this work on GAE. If the problem is that we can't write files during the execution of the app, then we could detect that in a compiler pass and replace the FilesystemCache by the ArrayCache. I'll try to look in detail into this soon.\n. Thanks for investigating this issue. I'm very interested in helping you make this work on GAE. If the problem is that we can't write files during the execution of the app, then we could detect that in a compiler pass and replace the FilesystemCache by the ArrayCache. I'll try to look in detail into this soon.\n. I'm not sure I can remove the constructor check because that would work in this case ... but would cause problems in other legitimate cases when the exception must be thrown because the cache dir is not writable (but the filesystem is). I'm trying another approach in #1965.\nIn any case, I'm very interested in all the problems you are facing with GAE ... not only for this bundle but for the entire Symfony project. So please, report any problem you find with Symfony components so we can fix them. Thanks!. I'm not sure I can remove the constructor check because that would work in this case ... but would cause problems in other legitimate cases when the exception must be thrown because the cache dir is not writable (but the filesystem is). I'm trying another approach in #1965.\nIn any case, I'm very interested in all the problems you are facing with GAE ... not only for this bundle but for the entire Symfony project. So please, report any problem you find with Symfony components so we can fix them. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm really sorry but I can't help you in any way because I don't use DDD. @fadoe says that you can do DDD with this bundle, but it requires some changes, so I guess that EasyAdmin is not prepared for DDD. I'm sorry!. I'm really sorry but I can't help you in any way because I don't use DDD. @fadoe says that you can do DDD with this bundle, but it requires some changes, so I guess that EasyAdmin is not prepared for DDD. I'm sorry!. Closing as solved by @iluuu1994's comments (thank for your help!). The problem of FOSUserBundle and Symfony 4 is out of the scope of this repository.. Closing as solved by @iluuu1994's comments (thank for your help!). The problem of FOSUserBundle and Symfony 4 is out of the scope of this repository.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. This error message looks like it's coming from VichUploaderBundle. See https://stackoverflow.com/questions/28777825/problems-with-vichuploaderbundle-render-image-using-twig\nSo, I'm closing but we can reopen in the future if we can prove that the error comes from this bundle. Thanks!. This error message looks like it's coming from VichUploaderBundle. See https://stackoverflow.com/questions/28777825/problems-with-vichuploaderbundle-render-image-using-twig\nSo, I'm closing but we can reopen in the future if we can prove that the error comes from this bundle. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @4arda I'm afraid I don't see the problem in your code. In the EasyAdmin Demo Application we have an example which is almost identical to your case and it works as expected. Instead of Job and Category, we have Product and Category. Please, check them out:\n\nhttps://github.com/javiereguiluz/easy-admin-demo/blob/master/src/Entity/Product.php\n\nhttps://github.com/javiereguiluz/easy-admin-demo/blob/master/src/Entity/Category.php. @4arda I'm afraid I don't see the problem in your code. In the EasyAdmin Demo Application we have an example which is almost identical to your case and it works as expected. Instead of Job and Category, we have Product and Category. Please, check them out:\n\n\nhttps://github.com/javiereguiluz/easy-admin-demo/blob/master/src/Entity/Product.php\n\nhttps://github.com/javiereguiluz/easy-admin-demo/blob/master/src/Entity/Category.php. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\n\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Closing because we don't have any feedback from people using read-only filesystems and I don't use that, so I can't test it.. Closing because we don't have any feedback from people using read-only filesystems and I don't use that, so I can't test it.. We already apply the dasherized entity name to the CSS of the <body> element: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/design-configuration.html#css-selectors \nAnd list/search/show fields can define a css_class option that is applied to the table header too: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customize-the-properties-appearance\nWould that be enough?. Not sure what to say ... I haven't experience this error ever and I don't remember any reported issue about this. But it looks important enough to keep investigating it.. Thanks Yonel for helping Victor with this. I wish I could understand anything about it to add some docs somewhere, but I don't. If anyone wants to give a shot, I can help them with the pull request and the review of the docs. Thanks!. I already did that in the past (see https://github.com/javiereguiluz/EasyAdminBundle/pull/1547) and I intend to continue doing that regularly. But if want to do it yourself, go ahead.\nHowever, we won't do changes that make the code worse just to make a static analyzer happy. I'm talking about changes like this one:\n\nThis was the result on analyzing Symfony Demo app with PHPStan (see https://github.com/symfony/demo/pull/733). We're discussing about it because some of us don't think that change is an improvement at all. Thanks!. Let's close this ... but we can create pull requests after applying PHPStan to this bundle regularly. However, keep in mind that I don't want to make \"useless changes\" (like the one explained above) just to please this tool. Thanks for understanding it!. I'm afraid this is a well-known limitation when using the Symfony Form component. You must make your getters return nullable types (they are needed when creating a new object because the entity values are null and so, the getters return null). That's why in the Symfony Demo app we needed to do changes like this:\nhttps://github.com/symfony/demo/blob/0d3e58650bf72cf152cd6bfebe9594e8d792fac3/src/Entity/Post.php#L136\nAnother solution could be to always give some default value to all entity properties used in the form, but I don't really recommend to do that. You may forget to change some of the default values.. The solution should be in the article that you linked: https://symfony.com/doc/master/bundles/EasyAdminBundle/integration/vichuploaderbundle.html#displaying-the-images-in-the-list-and-show-views  The type: image config is only for list/show, but according to the error, you are using Symfony Forms, so you are in edit/new. You should use the other types explained in that tutorial. Please tell me if that solves the issue.. That's true ... but lately I've seen problems like this in Flex. I can't find the exact URLs, but I think there was some issues and some comments on Symfony Slack. Not sure if theres's any special change to make for Flex besides changing app_dev.php for index.php in your server config.. @ktrzos thanks for your work on this and thanks everybody else for reviewing and improving it. I want to merge this soon, so I'm finishing it and adding tests to it in #2045. Thanks!. Given that the logo property should contain the image path, you can transform that string into a <img src=\"...\" /> HTML element using a small Twig fragment to render just that property. It's explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type  If that doesn't solve your issue, please tell me. Thanks!. @tomde @uncle-scrooge I'm trying to fix this in #2040. Could you please review it? Thanks!. @matesko in Sf4 when you store the template sin the default templates/ dir, there's no need to add the @App/ Twig namespace. In fact, I think that's not going to work. This should work:\nyaml\nlayout: 'partials/backendbase.html.twig'\n. @webs86 I'm afraid we don't have (yet) a built-in way to display money values on list/show views. We'll add it in the future if more people ask for it.\nMeanwhile you can solve this issue by creating a small Twig fragment to render your property as you wish. It's explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type. @kamalkech as others commented, you need to do \"something\" yourself to hash passowrds. For example if you use FOSUserBundle, you can do this: https://symfony.com/doc/current/bundles/EasyAdminBundle/integration/fosuserbundle.html  Otherwise, you need to call the password encoder in some method before persisting the user.. @kamalkech as others commented, you need to do \"something\" yourself to hash passowrds. For example if you use FOSUserBundle, you can do this: https://symfony.com/doc/current/bundles/EasyAdminBundle/integration/fosuserbundle.html  Otherwise, you need to call the password encoder in some method before persisting the user.. To do this kind of \"data transformation\" you need to create a small Twig fragment and use it to render that property. It's explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type  If this doesn't solve your issue, please tell me. Thanks!. @blackbart420 I'm sorry about that. It's probably related to a bug that was fixed in #1998 and released as part of the latest stable version: 1.17.8. Please tell me if it's working for you after upgrading your EasyAdmin bundle version. Thanks!. @emulienfou I'm sorry but this is not going to work! The special toggle widget is only for read-only views: list/show/search (https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html).\nThe read/write views (edit/new) use Symfony's Form component, as explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/edit-new-configuration.html\n. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Thanks for fixing this bug Konstantin.. Doctrine is removing it (https://github.com/doctrine/doctrine2/issues/6118) so let's remove it here too. Thanks Konstantin.. I don't have a response yet about this, but please don't send a pull request to implement this feature. I don't want to introduce any new feature until we complete the move of the repository and until we get rid of old Symfony version support. Thanks for understanding!. You are right. We don't have resources for 1.x and 2.x and all the bugs and features that are continuously being asked. I decided to change things because the development has stalled and we can't move forward because of all the issues and PRs asking for new features. So I'm going to close most things as \"wont' fix\" and then we start working on new features. Thanks for understanding!. You are right. We don't have resources for 1.x and 2.x and all the bugs and features that are continuously being asked. I decided to change things because the development has stalled and we can't move forward because of all the issues and PRs asking for new features. So I'm going to close most things as \"wont' fix\" and then we start working on new features. Thanks for understanding!. Closing as \"fixed\" thanks to the comments by @anybug and @fabianbloching. Thanks for your help! If this didn't solve your problem, please reopen. Thanks!. This is the expected behavior ... but it didn't happen in previous versions because of a bug. You can edit information in two ways: via a form and via Ajax. The form is the regular workflow and is handled by editAction() and the Ajax edit is only for the boolean toggles of the list view. This is handled by the updateEntityProperty() method. So, maybe someone edit some data and then clicked on a toggle or viceversa.\nIf this is correct, you can remove the toggle from the list view or you can detect if the request is via Ajax and not execute the logic in that case. You can inject the RequestStack service to get the current request and execute the isXmlHttpRequest() method.. This is the expected behavior ... but it didn't happen in previous versions because of a bug. You can edit information in two ways: via a form and via Ajax. The form is the regular workflow and is handled by editAction() and the Ajax edit is only for the boolean toggles of the list view. This is handled by the updateEntityProperty() method. So, maybe someone edit some data and then clicked on a toggle or viceversa.\nIf this is correct, you can remove the toggle from the list view or you can detect if the request is via Ajax and not execute the logic in that case. You can inject the RequestStack service to get the current request and execute the isXmlHttpRequest() method.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @mrbase thanks for contributing this new translation! It was a great first contribution to this bundle. Mange tak. @mrbase thanks for contributing this new translation! It was a great first contribution to this bundle. Mange tak. @R2c I appreciate that you suggested a new feature to improve this bundle. However, I prefer to not add this feature. It doesn't look like a very common option to me. Besides, you can solve it thanks to YAML features:\n```yaml\nparameters:\n    prefix: 'My Admin  - '\neasy_admin:\n    entities:\n        Category:\n            title: '%prefix% Lorem Ipsum'\n            # ...\n```\nAnother simpler solution would be to use Twig features and override the layout template and override just one block:\ntwig\n{% block content_header %}\n    <h1 class=\"title\">My prefix - {% block content_title %}{% endblock %}</h1>\n{% endblock content_header %}\nYou can also override the individual show, new, list, edit templates if you need something more fancy. All this is explained in https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration. @R2c I appreciate that you suggested a new feature to improve this bundle. However, I prefer to not add this feature. It doesn't look like a very common option to me. Besides, you can solve it thanks to YAML features:\n```yaml\nparameters:\n    prefix: 'My Admin  - '\neasy_admin:\n    entities:\n        Category:\n            title: '%prefix% Lorem Ipsum'\n            # ...\n```\nAnother simpler solution would be to use Twig features and override the layout template and override just one block:\ntwig\n{% block content_header %}\n    <h1 class=\"title\">My prefix - {% block content_title %}{% endblock %}</h1>\n{% endblock content_header %}\nYou can also override the individual show, new, list, edit templates if you need something more fancy. All this is explained in https://symfony.com/doc/current/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration. Thank you Konstantin.. Thank you Konstantin.. The Add new item (or the generic Add new <EntityName>) are automatically added for collections. When you have -to-many relations, we display that (unless you add some option to disable it) to allow you creating new elements in that collection. You can see it in action in this demo application: https://github.com/javiereguiluz/easy-admin-demo  Cheers!. The Add new item (or the generic Add new <EntityName>) are automatically added for collections. When you have -to-many relations, we display that (unless you add some option to disable it) to allow you creating new elements in that collection. You can see it in action in this demo application: https://github.com/javiereguiluz/easy-admin-demo  Cheers!. Thank you Martin.. Thank you Martin.. @c33s I appreciate that you suggested a new feature to improve this bundle. It's true that it would be useful for some people, but keep in mind that most apps are not as simple as:\nyaml\neasy_admin:\n    entities:\n        Product:\n            form:\n                fields:\n                    - name\n                    - description\n                    - category\n                    - { property: 'imageFile', type: 'vich_image' }\nYou usually need to configure properties for most/all fields (labels, form type options, etc.) That's why I've decided to not implement this feature. I understand if this is disappointing for you, but sadly we no longer have resources to add lots of new features. Thanks for understanding it.. @c33s I appreciate that you suggested a new feature to improve this bundle. It's true that it would be useful for some people, but keep in mind that most apps are not as simple as:\nyaml\neasy_admin:\n    entities:\n        Product:\n            form:\n                fields:\n                    - name\n                    - description\n                    - category\n                    - { property: 'imageFile', type: 'vich_image' }\nYou usually need to configure properties for most/all fields (labels, form type options, etc.) That's why I've decided to not implement this feature. I understand if this is disappointing for you, but sadly we no longer have resources to add lots of new features. Thanks for understanding it.. I can't remember why I did it like that (the new code was a refactor of the previous code that already contained this logic).. I can't remember why I did it like that (the new code was a refactor of the previous code that already contained this logic).. Fixed by #2020.. Fixed by #2020.. @andreybolonin thanks for this. To fix the failing test maybe we can get inspiration from this newly added docs: https://symfony.com/doc/current/bundles/best_practices.html#continuous-integration. @andreybolonin although I appreciate your work here, I must close this without merging. Why? Because according to our plans (see #2059) we need to finish all the pending features ass soon as possible to create the new major version and get rid of all the legacy stuff and start using PHP 7.1 in the code, provide 100% compatibility with PHP 7.2 and PHP nightly, etc.\nAs you can see in Travis CI logs, this change results in a core dump error ... and that's also what happened to me in #2021 when I try to make PHP 7.2 related changes. So, let's close, let's wait a bit and then let's improve this Travis file. Thanks!. @grachevko I don't understand why that could be the problem :(. @grachevko I don't understand why that could be the problem :(. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @alex-ception thanks for this contribution. I like the idea a lot (and I know it's needed by lots of people) but I don't like the proposed implementation. Why? Because it looks too complex to me and forces you to learn more things and concepts about this bundle.\nIn #2068 I'm proposing an alternative solution. It's much simpler and you can reuse everything you already know about this bundle and how to override the different controller actions. @alex-ception what do you think about it. Would it be useful for your case? Thanks!. Thanks for sharing the example. What do you think about this two possible solutions? Would they be enough for oyu?\n1) The obvious one: if MyController is really too different for both entities, then it may make more sense to just create two different controllers (which could extend from another one or use traits to avoid some duplication).\n2) The other solution is almost identical to your solution: instead of preRenderEasyAdminEntity1List() define listEasyAdminEntity1Action(), instead of preRenderEasyAdminEntity2List() define listEasyAdminEntity2Action() methods, etc.\nThe listAction(), editAction(), etc. methods are dynamic per entity name, so you can define multiple of them in the same custom controller and you'll pass different template params in each of them.. @alex-ception I thought about a solution similar to the one proposed by @grachevko but I refused it because that method depends on two things: entity and view and the other solution removes the \"view\" variable because you override the right method listAction, editAction, etc.\nBut, if you don't see that too complicated, I can try to implement it.. I've just updated the other PR to implement the feature similarly as proposed by @grachevko ... except that I didn't create a separate render method for each action because that looks too much to me. What do you think?. Closed in favor of #2068.. Sadly I don't know if there is a solution for this. We've tried all possibilities (true, false, etc.) and it always failed for some people. Honestly I don't know if this problem is because of Doctrine, the paginator or this bundle.. Sadly I don't know if there is a solution for this. We've tried all possibilities (true, false, etc.) and it always failed for some people. Honestly I don't know if this problem is because of Doctrine, the paginator or this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Thanks for fixing this bug Amine. It was a great first contribution to this bundle.. Thanks for fixing this bug Amine. It was a great first contribution to this bundle.. Closing because I can't make this work until we get rid of all deprecations and stop supporting deprecated Symfony versions.. Thanks Alexey.. Thanks Alexey.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @Allandore thanks for your encouragement and thanks for proposing features to improve this bundle.\nSadly it's not possible to do what you want. This bundle is not very flexible in that way. It's designed for being a simple CRUD application. In the future we may add more flexibility, but right now we have stopped the development of new features because we want to fix bugs, close all issues, get rid of Symfony deprecations and move this bundle to another GitHub organization.\nMaybe you can check if the alternative SonataAdminBundle supports this feature. Thanks!. @Allandore thanks for your encouragement and thanks for proposing features to improve this bundle.\nSadly it's not possible to do what you want. This bundle is not very flexible in that way. It's designed for being a simple CRUD application. In the future we may add more flexibility, but right now we have stopped the development of new features because we want to fix bugs, close all issues, get rid of Symfony deprecations and move this bundle to another GitHub organization.\nMaybe you can check if the alternative SonataAdminBundle supports this feature. Thanks!. Closing as fixed then. Thanks!. I'm afraid that the shown config is not supported. You'll need to add a property or a getter/setter in the related entity to add it as a field of type hidden. Cheers.. I'm afraid that the shown config is not supported. You'll need to add a property or a getter/setter in the related entity to add it as a field of type hidden. Cheers.. There's a public service to get the config manager. See https://github.com/javiereguiluz/EasyAdminBundle/blob/59ef2bd3f2d10db0649c40d68785f15ed5234298/src/Resources/config/services.xml#L16  I hope that helps you. Cheers!. There's a public service to get the config manager. See https://github.com/javiereguiluz/EasyAdminBundle/blob/59ef2bd3f2d10db0649c40d68785f15ed5234298/src/Resources/config/services.xml#L16  I hope that helps you. Cheers!. @jenyak it's true that those methods don't exist ... but we use a trick to define \"dynamically named methods\" (they are explained here: https://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html#override-the-admincontroller-methods-per-entity).\nOf course if your entity is not called exactly User, those methods don't exist, so that's why we added this note in that article:\n```rst\n .. note::\n If your user entity is not called ``User``, you need to change the above\n method name. For example, if the entity is called ``Customers``, the method\n to define is ``updateCustomersEntity()``.\n\n```\nSo we can close this as \"won't fix\" ... but thanks anyway for double checking the docs. Cheers!. @jenyak you are totally right and I was wrong! I apologize for having closed it and I'm merging it right away. Thank you!. @jenyak you are totally right and I was wrong! I apologize for having closed it and I'm merging it right away. Thank you!. @hason I didn't know that! Thanks for reporting and fixing it. Cheers!. @lucassaraiva5 I'm sorry but I don't understand your issue. Are you using some default EasyAdmin feature and it doesn't work or are you trying to use some EasyAdmin feature in a custom way and it doesn't work?. Can you please share a screenshot of how does it look now the default style? Thanks!. Thanks for fixing this bug @alterphp.. Try replacing this:\ntwig\n{% set form.role.vars.disabled = false %}\nwith this:\ntwig\n{% set form['role']['vars']['disabled'] = false %}\nIn any case, I'm closing because this looks like a Twig thing or Symfony Forms thing ... so it's unrelated to this bundle. Cheers!\n. I'm using the latest stable version and can't reproduce. Icons and/or labels work as expected:\n\nPlease check that the config is correct according to the docs (https://symfony.com/doc/current/bundles/EasyAdminBundle/book/actions-configuration.html) and that the FontAwesome font link is working:\n\n. I honestly don't understand this ... so I'll need more review from people who understand Symfony Forms. Thanks!. @hason thanks for fixing this bug and for the detailed explanation. I always have problems when trying to understand how Symfony Forms work ... but your explanation was very clear. Thanks! @yceruto I don't know if form.parent and form.vars would cause the same problems, but we can fix them if needed in a separate pull request. Thanks!. @hason thanks for fixing this bug and for the detailed explanation. I always have problems when trying to understand how Symfony Forms work ... but your explanation was very clear. Thanks! @yceruto I don't know if form.parent and form.vars would cause the same problems, but we can fix them if needed in a separate pull request. Thanks!. @Soullivaneuh I understand your use case but I prefer to not add this feature. We recently improved/fixed the behavior of custom template fragments to always use them no matter what because that's what the majority of users need (see https://github.com/javiereguiluz/EasyAdminBundle/blob/master/src/Twig/EasyAdminTwigExtension.php#L140-L143).\nLuckily, dealing with null properties is not that cumbersome and you can include the null template when needed with this simple Twig include: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/src/Resources/views/default/field_association.html.twig#L25\nCheers!. @COil thanks for reporting! This was fixed in #2020 which is part of the latest 1.17.10 release.. @Icewild thanks for proposing new features to improve this bundle. I think I understand the proposal ... but it looks too \"edgy\" to me. I don't think this is common enough :(\nMy guess is that most of the times you don't display __toString() contents in the public part of the website (only in some forms) and also most of the times, if you use __toString(), it's OK to be the same in the public and the private parts of the website. For those rare cases where you want to display sensitive info in the __toString() and only in the backend, I guess it's OK to add that method name in the config file.\nWe're trying to reduce the features of this bundle to make it maintainable ... so we usually don't add \"edge case\" features. I hope you understand it. Thanks!. @grachevko we're not imposing toString, we're defaulting to toString. If you can't use it, you can configure it to your needs (as showed previously by @sc0rp10) and you can even use a template fragment to tweak the displayed contents.. There is no option to configure this and we're not planning to add it (please, don't submit a pull request for this). The alternative to overriding templates (in fact it's not about overriding templates but creating little template fragments) is to use the config as shown in the example above.. OK you are right, we're imposing toString() in autocompletion but defaulting to toString() in the rest of the bundle. But I haven't changed my opinion about this. I'm sorry.. This kind of problems are usually solved defining the by_reference option in the Symfony Form. See https://github.com/javiereguiluz/EasyAdminBundle/issues/1971#issuecomment-351018763 and https://symfony.com/doc/current/reference/forms/types/collection.html. @ddlzz there's not an option for that ... but you could solve it by adding this to the constructor of your entity (as seen on https://stackoverflow.com/a/8714179/2804294):\n```php\nclass YourEntity\n{\n    /*\n     * @var \\DateTime\n     /\n    private $created;\npublic function __construct()\n{\n    $this-> created = new \\DateTime();\n}\n\n}\n``. Fixed by #2046 and available in the next stable version, to be released in a moment.. Fixed by #2046 and available in the next stable version, to be released in a moment.. @ktrzos @maximecolin this feature is finally merged! Thanks a lot for your work and reviews.. @ktrzos @maximecolin this feature is finally merged! Thanks a lot for your work and reviews.. @ad3n thanks for the quick fix to this bug. It was a nice first contribution to this bundle. Cheers!. @ad3n thanks for the quick fix to this bug. It was a nice first contribution to this bundle. Cheers!. Closing as fixed because the user reported that error was triggered by something else.. Closing as fixed because the user reported that error was triggered by something else.. @R2c thanks for proposing this feature. In #2063 I've created an alternative implementation which requires less changes and it supports theshow.max_results` option too. I've added a unit test too. So, I'm closing this in favor of the newer pull request. Thanks!. @harikumar99 I'm sorry but I must close this issue report. You need to follow the instructions explained in the issue description so you provide all the needed information and we can help you fixing the issue. Thanks!. @harikumar99 I'm sorry but I must close this issue report. You need to follow the instructions explained in the issue description so you provide all the needed information and we can help you fixing the issue. Thanks!. @aminebenhariz thanks a lot for reporting this issue, investigating it and providing a solution!. @aminebenhariz thanks a lot for reporting this issue, investigating it and providing a solution!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @TheKassaK the template property is a custom feature of EasyAdmin and it only works in  the list/search/show views. For the edit/new views, we rely on Symfony, so you can use any of the standard ways of customizing a Symfony Form. It's explained in http://symfony.com/doc/current/form/form_customization.html but you basically need to create a custom form theme and add it to the app config so it's used when rendering that form field.. Closing because, as explained, for the edit/new views, you should use the Symfony Form themes. Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I don't care much about PHP 5.3 because soon this bundle will only support PHP 7.1 and Symfony 4 ... but it'd be great if someone could look into why tests are now failing in Travis CI with PHP 5.3. Thanks!. But I added class_exists checks everywhere to not use that class in PHP 5.3. Maybe I did something wrong. Can you please help me? Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. For those who want to help, I'm creating issues with the label help wanted: https://github.com/EasyCorp/EasyAdminBundle/labels/help%20wanted  They are small and actionable issues. If you want to take any of them and don't understand anything, please ask! Thanks!. @Soullivaneuh yes, we could ... but I prefer to not make that effort. For the ultra-legacy support for Symfony 2 to 3 and 4, we have the 1.x branch. I want 2.x to be Symfony 4 only and move quickly the requirements to be inline with the latest Symfony. We're transforming this bundle from ultra-legacy to cutting-edge :). @Soullivaneuh yes, we could ... but I prefer to not make that effort. For the ultra-legacy support for Symfony 2 to 3 and 4, we have the 1.x branch. I want 2.x to be Symfony 4 only and move quickly the requirements to be inline with the latest Symfony. We're transforming this bundle from ultra-legacy to cutting-edge :). I'm closing here because the plan has been explained and we just need to finish the last steps. Thanks!\nFor now I'd prefer to not change the master branch code much to not introduce conflicts with 1.x while we maintain it for some time (only for bugfixes). Thanks!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. @lucassaraiva5 I don't know if this is related, but we've have received hundreds of bug reports similar to this and 99% of the times is a Doctrine or Symfony Form issue. I know this is very confusing \ud83d\ude22  Please try to set the by_reference option (https://symfony.com/doc/current/reference/forms/types/collection.html#by-reference) and see if the error fixes (that has solved this more than once according to the bug reports of this repository).. @katsenkatorz I'm afraid that this feature is not provided by this bundle and it's not in our roadmap either. I strongly believe that this feature should be in the core of Symfony Forms ... but I don't think it will be implemented ever. Maybe you can find some third-party bundle that it implements this. I'm sorry.. I'm sorry about this! If someone knows Doctrine well, please send a pull request to fix this. Thank you!. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. I'm closing this issue because we're starting a new phase in the history of this bundle (see #2059). We've moved it into a new GitHub organization and we need to start from scratch: no past issues, no pending pull requests, etc.\nI understand if you are angry or disappointed by this, but we really need to \"reset\" everything in order to reignite the development of this bundle.. Good catch, thanks @nykopol.. Thanks! I've merged it in the new 1.x branch and then I'll upmerge it to master.. I like the idea of creating a minimal Console script to run Symfony commands. That way we can run more commands if needed (see #2084). Thanks for taking care of this and investigating the possible alternatives!. @scaytrase thanks a lot for fixing this!. @kaizokou I'm afraid @xabbuh is right. Symfony Flex always deletes files when removing packages (see https://github.com/symfony/flex/issues/43). Hopefully it's impossible that a real application doesn't use Git or similar (or some sort of backup). By the way, we added a safeguard in Flex to ensure that the main .git dir is never deleted (https://github.com/symfony/flex/pull/250), so we can always rely on it. Closing as \"can't fix\" then. Thanks!. @aminebenhariz the code syntax will be updated after all the legacy stuff has been removed. That's why we need to finish these small issues first and then we'll refactor all code to use all PHP 7.1 features.. That's sad. In the Symfony Demo app we use it: https://github.com/symfony/demo/blob/master/.travis.yml#L40. @aminebenhariz thanks a lot for working on this. I love the way you solved this!. @aminebenhariz don't worry about those because those tests are being removed in https://github.com/EasyCorp/EasyAdminBundle/pull/2088/files because they were needed just to check the different behavior of old Symfony versions.. Fixed by #2091.. @grachevko I loooove this! Thanks so much for working on cleaning all this legacy stuff. Cheers!. This is fantastic! It feels so good to get rid of all this legacy stuff! Thanks a lot!. Nice! Less and less legacy and weird stuff. Thanks for working on this.. I don't use this EnumType, so I won't be able to help you. But I've added the help wanted label so other people from the community can help you. Thanks!. I don't use this EnumType, so I won't be able to help you. But I've added the help wanted label so other people from the community can help you. Thanks!. @glaubinix thanks for taking care of this issue! Let's close here then. Cheers!. @glaubinix thanks for taking care of this issue! Let's close here then. Cheers!. Perfect! Thanks for fixing this and thanks for contributing to this bundle!. @aminebenhariz thanks for contributing this feature. I love automatic checks that continuously review things like this. Cheers!. @Farshadi73 what @albemumo said is correct. We support up to 2-level menus. We don't plan to add support for arbitrary level menus. The reason is that when an app is so complex to need 3-level menus, it's probably too complex for this bundle. We'll fall short on many other features and then people will get angry with us.\nIf you really need this feature, you can try with Sonata Admin Bundle (https://symfony.com/doc/master/bundles/SonataAdminBundle/index.html) which is similar to this bundle, but more advanced and has more features. Cheers!. I like this. @Arthur-min in order to merge this, we need to fix the minor syntax issue included in the code. In this line, there are a lot of white spaces, but new lines should contain nothing:\n\nI know it's a very minor thing, but we cannot merge without fixing this. Thanks!. It's merged now. Thanks for this!. @laurent-bientz sorry for the lack of response. I want to study this in detail before deciding if it's a bug, something to improve, or change entirely, etc.  I'll try to find time for this soon. Cheers!. @laurent-bientz sorry for the lack of response. I want to study this in detail before deciding if it's a bug, something to improve, or change entirely, etc.  I'll try to find time for this soon. Cheers!. @Nyholm thanks for contributing these improvements. A great first contribution to this bundle! tack s\u00e5 mycket. The solution provided by @uncle-scrooge is the correct one:\n1) If you just want to pass some custom parameters to your variables, use the recently added renderTemplate() method to pass them. Look at this test for inspiration: https://github.com/EasyCorp/EasyAdminBundle/blob/master/tests/Fixtures/AppTestBundle/Controller/CustomTemplateParametersController.php\n2) If you want to override the newAction() features completely to do vey custom things, then override the method entirely.\n3) If you want to override just some things instead of everything, you can override some of the methods used by the newAction(), such as createNewEntity(), createNewForm(), persistEntity(), etc.\n4) Lastly, you can also listen to any of the events triggered during the execution of newAction() to customize the application using events.\nThe 2), 3) and 4) options are explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html.\nClosing as fixed then.. The solution provided by @uncle-scrooge is the correct one:\n1) If you just want to pass some custom parameters to your variables, use the recently added renderTemplate() method to pass them. Look at this test for inspiration: https://github.com/EasyCorp/EasyAdminBundle/blob/master/tests/Fixtures/AppTestBundle/Controller/CustomTemplateParametersController.php\n2) If you want to override the newAction() features completely to do vey custom things, then override the method entirely.\n3) If you want to override just some things instead of everything, you can override some of the methods used by the newAction(), such as createNewEntity(), createNewForm(), persistEntity(), etc.\n4) Lastly, you can also listen to any of the events triggered during the execution of newAction() to customize the application using events.\nThe 2), 3) and 4) options are explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html.\nClosing as fixed then.. @ad3n thanks for reporting! Sadly this is a bug introduced in the latest Symfony version. See https://github.com/symfony/symfony/issues/26364  So we need to wait them to fix it. Cheers!. Or install the previous Symfony version. If you updated to 4.0.5, edit your composer.json and change any ^4.0 by 4.0.4 and do a \"composer update\". Then, when 4.0.6 is released with this bug fix, you can go to ^4.0 again.. For those reading this issue, a simpler solution given in the related Symfony issue is to add this to your require-dev of composer.json to only require the old version of WebProfilerBundle instead of changing the other dependencies:\njson\n\"symfony/web-profiler-bundle\": \"4.0.4\". Thanks Konstantin.. Nice! And it's true that the Paginator constant should be private because it's not used outside. Thanks!. Thanks! By the way, the more legacy code we remove, the more new legacy code appears :laughing:. This is easily my favourite new PHP 7 feature. I :heart: it. Thanks! (I plan to use the ?? shortcut in many other parts of the source code).. Good catch, thanks Konstantin.. The LegacyFormHelper class now has a ton of class imports :see_no_evil: ... but I agree it's better to make this change.. This is really great. Thank you!. Not a big fan of this ... but let's merge it because it's good for performance and Symfony also does it in some parts of its code.. Thanks a lot for this and all the other PRs that you submitted recently. Amazing contributions!. Thanks a lot for this and all the other PRs that you submitted recently. Amazing contributions!. Yes! Love it. Thanks.. Thanks for contributing this feature. I like it, but I'd want to make some minor changes. I'm going to open a different PR so we can discuss about that. Cheers!. Thanks for contributing this feature. I like it, but I'd want to make some minor changes. I'm going to open a different PR so we can discuss about that. Cheers!. I like this idea a lot, because it's a simple way to improve security (or at least privacy). Thanks @samuel-girard for proposing it.\nI also like your implementation, but I'd like to make a change. Let's use the noreferrer attribute always when using an external URL (except if the menu item defines a rel attribute explicitly). This would be the change in your code (I haven't tested it):\ndiff\n-$itemConfig['rel'] = false;\n+$itemConfig['rel'] = array_key_exists('url', $itemConfig) ? 'noreferrer' : false;\nAlso, let's change the link to W3C Schools to this one: https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types\nThanks!. I like this idea a lot, because it's a simple way to improve security (or at least privacy). Thanks @samuel-girard for proposing it.\nI also like your implementation, but I'd like to make a change. Let's use the noreferrer attribute always when using an external URL (except if the menu item defines a rel attribute explicitly). This would be the change in your code (I haven't tested it):\ndiff\n-$itemConfig['rel'] = false;\n+$itemConfig['rel'] = array_key_exists('url', $itemConfig) ? 'noreferrer' : false;\nAlso, let's change the link to W3C Schools to this one: https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types\nThanks!. @samuel-girard thanks! I need to update the PR template to better explain the policy: bug fixes to 1.x branch and new features to master (which will be soon 2.0.0 version). So this should go to master.. @samuel-girard thanks! I need to update the PR template to better explain the policy: bug fixes to 1.x branch and new features to master (which will be soon 2.0.0 version). So this should go to master.. Thanks @samuel-girard for working on this feature, this is much appreciated.. Thanks @samuel-girard for working on this feature, this is much appreciated.. Fixed by #2134 and #2142.. Fixed by #2134 and #2142.. Menu can only have 2 nested levels. The reason is explained here: https://github.com/EasyCorp/EasyAdminBundle/issues/2092  Basically, more than 2 level menus are needed for very big and complex apps ... which are probably not appropriate for this simple bundle. I'm sorry!. Menu can only have 2 nested levels. The reason is explained here: https://github.com/EasyCorp/EasyAdminBundle/issues/2092  Basically, more than 2 level menus are needed for very big and complex apps ... which are probably not appropriate for this simple bundle. I'm sorry!. @lex111 the fail is because the cod enow triggers deprecations and one of the Travis CI builds checks that there are no deprecations. The solution is to follow this explanation -> https://symfony.com/doc/current/components/phpunit_bridge.html#write-assertions-about-deprecations and do this:\n1) Duplicate all the tests that use preXXX() methods (or at least 1 test for each different preXXX() method) and add the @expectedDeprecation annotation on them.\n2) Fix the existing tests that use preXXX() methods to just use xxx() methods.\n. @lex111 the fail is because the cod enow triggers deprecations and one of the Travis CI builds checks that there are no deprecations. The solution is to follow this explanation -> https://symfony.com/doc/current/components/phpunit_bridge.html#write-assertions-about-deprecations and do this:\n1) Duplicate all the tests that use preXXX() methods (or at least 1 test for each different preXXX() method) and add the @expectedDeprecation annotation on them.\n2) Fix the existing tests that use preXXX() methods to just use xxx() methods.\n. This is more complex than I thought because we should only trigger the deprecation when the user is using this method, not when we are suing this method (and we use it to keep BC) ... but I'm going to merge your PR and then I'll continue making some changes in another PR. Thanks for helping us!. This is more complex than I thought because we should only trigger the deprecation when the user is using this method, not when we are suing this method (and we use it to keep BC) ... but I'm going to merge your PR and then I'll continue making some changes in another PR. Thanks for helping us!. I've been thinking a lot about this. The thing is that we are not Symfony and we don't have their resources \ud83d\ude2d. The BC policy of Symfony is amazing and I'd love to do the same here, but we can't. So, I prefer to be realistic and the policy I'd like to follow is the same as ApiPlatform (https://github.com/api-platform/docs/pull/405):\n| | New Features | Bug Fixes | Security Fixes\n| ------------ | --- | --- | ---\n| master     | x | x | x\n| master - 1 |   | x | x\n| master - 2 |   |   | x\n\nSo, I want to create the 2.0 branch as soon as possible and release 2.0.0 version (requires PHP 7.1 and Sf 4.0). Then, work on the new features in master and soon after Sf 4.1 is released in May, release 2.1.0 (requires PHP 7.1 and Sf 4.1).\nSo, in May we'll have:\n\n1.x branch: security fixes only\n2.0 branch: bug fixes + security fixes\nmaster branch: features + bug fixes + security fixes\n\n\nAs it happened to Symfony when it changed its release policy, we could make an exception in the case of 1.x and keep fixing some important bugs until the end of Nov 2018, when 2.8 support ends.\n\nI can understand if someone is disappointed, but this is not a commercial project, se just do the best we can. Also, there's Sonata as an alternative admin generator with more features and probably better long term support.\n. I've been thinking a lot about this. The thing is that we are not Symfony and we don't have their resources \ud83d\ude2d. The BC policy of Symfony is amazing and I'd love to do the same here, but we can't. So, I prefer to be realistic and the policy I'd like to follow is the same as ApiPlatform (https://github.com/api-platform/docs/pull/405):\n| | New Features | Bug Fixes | Security Fixes\n| ------------ | --- | --- | ---\n| master     | x | x | x\n| master - 1 |   | x | x\n| master - 2 |   |   | x\n\nSo, I want to create the 2.0 branch as soon as possible and release 2.0.0 version (requires PHP 7.1 and Sf 4.0). Then, work on the new features in master and soon after Sf 4.1 is released in May, release 2.1.0 (requires PHP 7.1 and Sf 4.1).\nSo, in May we'll have:\n\n1.x branch: security fixes only\n2.0 branch: bug fixes + security fixes\nmaster branch: features + bug fixes + security fixes\n\n\nAs it happened to Symfony when it changed its release policy, we could make an exception in the case of 1.x and keep fixing some important bugs until the end of Nov 2018, when 2.8 support ends.\n\nI can understand if someone is disappointed, but this is not a commercial project, se just do the best we can. Also, there's Sonata as an alternative admin generator with more features and probably better long term support.\n. Yes, we'll add this feature in the future ... but not in the search engine but as part of the new \"filter system\". But first we need to finish things for 2.0 version and work on adding advanced security features, which is the top priority for the bundle. Given that this is in our public roadmap, I'm closing this issue for the moment. Cheers!. Yes, we'll add this feature in the future ... but not in the search engine but as part of the new \"filter system\". But first we need to finish things for 2.0 version and work on adding advanced security features, which is the top priority for the bundle. Given that this is in our public roadmap, I'm closing this issue for the moment. Cheers!. Thanks Konstantin.. Thanks Konstantin.. @zorn-v thanks for reporting these problems. We've fixed them in #2180 ... except the template location path because it's complicated. This bundle works in Symfony 2.x, 3.x and 4.x with and without Flex. So we're leaving 1.x branch docs untouched and we'll updated master branch docs to assume that the reader is using Flex. Thanks!. Fixed by #2180.. I'm afraid you are right. In fact, I'd like to get rid of this function for EasyAdmin itself. I've never liked it, so we may do that in the future. Cheers!. It looks like something really bad is happening in the library we used for toggles. Sadly I can't reproduce this error. I've just recorded this on Google Chrome:\n\nWe'd need more people to confirm this issue and provide some info about how to reproduce it. Thanks!. I'm closing here because I still can't reproduce this. Sorry! If you can reproduce, please submit a pull request fixing the issue and I will help you review it. Thanks!. @aminebenhariz because that usually adds \"noise\". Better be practical and show the links as straightforward as possible.\nSo, people seem to agree with this format, so let's use it:\n```rst\n( ... content ... )\n\nNext chapter: Title of the next chapter_\n```\nAny volunteer to add these links? Thanks!. @aminebenhariz because that usually adds \"noise\". Better be practical and show the links as straightforward as possible.\nSo, people seem to agree with this format, so let's use it:\n```rst\n( ... content ... )\n\nNext chapter: Title of the next chapter_\n```\nAny volunteer to add these links? Thanks!. Fixed by #2146.. Fixed by #2146.. Although this feature is not provided by the bundle, you have several options to implement it depending on your needs:\n1) For displaying the <select>, you can override the entire list.html.twig template for that entity (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration) ... or more easily you can just define the small Twig fragment used to render that specific property of the list view of that entity (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type)\n2) If the data of the <select> must be selected dynamically, you can do a normal render(controller('...')) like in any Symfony app ... or you can override the list() action for that entity (as explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html) or even you can just override the recently introduced renderTemplate() method which was added so people could easily pass custom variables to any template.\n3) Then, for the logic that happens when use select something in the <select> you can create a regular Symfony action and integrate it if needed inside the backend (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/tutorials/custom-actions.html).\nI hope any of these possibilities helps you implement this feature. Cheers!. Although this feature is not provided by the bundle, you have several options to implement it depending on your needs:\n1) For displaying the <select>, you can override the entire list.html.twig template for that entity (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#advanced-design-configuration) ... or more easily you can just define the small Twig fragment used to render that specific property of the list view of that entity (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type)\n2) If the data of the <select> must be selected dynamically, you can do a normal render(controller('...')) like in any Symfony app ... or you can override the list() action for that entity (as explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html) or even you can just override the recently introduced renderTemplate() method which was added so people could easily pass custom variables to any template.\n3) Then, for the logic that happens when use select something in the <select> you can create a regular Symfony action and integrate it if needed inside the backend (explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/tutorials/custom-actions.html).\nI hope any of these possibilities helps you implement this feature. Cheers!. Great! Thanks for taking care of this. A really nice first contribution to this bundle!. Great! Thanks for taking care of this. A really nice first contribution to this bundle!. I think you are right. Let's close this and I'll try to work on an alternative solution to the issue I mentioned about getting the wrong cache item.. I think you are right. Let's close this and I'll try to work on an alternative solution to the issue I mentioned about getting the wrong cache item.. Can you please elaborate a bit about this PR in reference to #2099. Are both PR complementary? Does this one replace the other? Thanks.. Can you please elaborate a bit about this PR in reference to #2099. Are both PR complementary? Does this one replace the other? Thanks.. @laurent-bientz thanks for this bug fixing! Even if you have participated in lots of issues in this repo, this was your first code contribution, so thanks a lot! I'm going to add tests for this in a separate PR.. @laurent-bientz thanks for this bug fixing! Even if you have participated in lots of issues in this repo, this was your first code contribution, so thanks a lot! I'm going to add tests for this in a separate PR.. @pyrech nice catch! The code of that bundle verifies this change --> https://github.com/dustin10/VichUploaderBundle/blob/33c3c70ac6962e520119b6ac41ff877ad1e93e11/Twig/Extension/UploaderExtension.php#L40 Thanks for your first contribution to this bundle!. @pyrech nice catch! The code of that bundle verifies this change --> https://github.com/dustin10/VichUploaderBundle/blob/33c3c70ac6962e520119b6ac41ff877ad1e93e11/Twig/Extension/UploaderExtension.php#L40 Thanks for your first contribution to this bundle!. Some answers:\n1) I'm afraid I cannot debug these errors because I'm not used to RTL and I can't spot bugs. But I'm happy to review and merge a pull request from yours fixing these problems.\n2) This is the default behavior and I use it continuously. Not sure if you are asking because you haven't tested it or because it doesn't work for you.\n3) For associated entities we show a subset of them. You can change the related config option to show more elements.\n4) No. This bundle is designe to create just one admin per app.. Some answers:\n1) I'm afraid I cannot debug these errors because I'm not used to RTL and I can't spot bugs. But I'm happy to review and merge a pull request from yours fixing these problems.\n2) This is the default behavior and I use it continuously. Not sure if you are asking because you haven't tested it or because it doesn't work for you.\n3) For associated entities we show a subset of them. You can change the related config option to show more elements.\n4) No. This bundle is designe to create just one admin per app.. For 1) I'm going to make a pull request to fix this.\nFor 2) I don't know what to say. Symfony should parse that YAML correctly and give you the right field name. In any case, I propose you to use segment as field name, and then define the template property for this field and inside that template do some logic to display the field you want in the way you want. See https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type\nFor 3) the option is called show.max_results and is explained here: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/configuration-reference.html#id3. For 1) I'm going to make a pull request to fix this.\nFor 2) I don't know what to say. Symfony should parse that YAML correctly and give you the right field name. In any case, I propose you to use segment as field name, and then define the template property for this field and inside that template do some logic to display the field you want in the way you want. See https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#customizing-the-template-used-to-render-each-property-type\nFor 3) the option is called show.max_results and is explained here: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/configuration-reference.html#id3. Fixed by #2158.. @crashiura thanks for reporting this error adn for providing the fix!. @Holicz amazing attention to detail! Thanks a lot. We've merged this in 1.x branch and then we'll merge it up to master. D\u011bkuji. @Holicz amazing attention to detail! Thanks a lot. We've merged this in 1.x branch and then we'll merge it up to master. D\u011bkuji. @Farshadi73 thanks a lot for contributing a new translation! Don't worry about having created two separate pull requests. It's OK. By the way, we merged this in 1.x branch so it's available in older versions too. \u062e\u06cc\u0644\u06cc \u0645\u0645\u0646\u0648\u0646. @yceruto I still haven't tested it. I'm sorry. I'll have some busy days in the coming weeks, so I can only review minor issues. But I don't forget about this and sooner or later I'll merge it. Thanks for your patience \ud83d\ude4f . I've tested this in Firefox + Mac and I cannot reproduce it. When Source Sans is not available, a beautiful sans-serif replacement is used, instead of the typography you showed. Maybe you changed this for some reason in your browser config? Check the default typography options:\n\nAlso, we \"can't\" change this because it comes from the styles of the template we use. See https://github.com/almasaeed2010/AdminLTE/blob/156f56c3c183a3b8486c47b122c7fa8819510a90/build/less/core.less#L135-L149\nI'm closing this as \"can't fix\" but I hope you at least use this alternative solution. Thanks!\n. Fixed by #2168.. Closing this old issue because it's probably no longer relevant. Thanks!. You are right but I'm not sure if it's such a big deal. This \"missing translation\" in practice is not a missing translation and only developers in dev mode will notice that. There are no downsides for end-users and a big improvement for them (they'll see the actual flash messages instead of some key or strange message).. @grachevko sorry! I'm glad you asked and please keep reviewing the issues and PRs :)  I agree with you that these missing translation messages are annoying ... but luckily the end users won't know about them, so maybe we can make an exception here and merge this. Cheers!. @tdsat thanks a lot for contributing this new translation. You did it great, but we're going to merge it in 1-x branch instead of master so old versions of this bundle can use it too. Also, there's no need to translate the comments in translation files, but don't worry because I'll change them in a separate pull request. Lastly, it's an honor that your first pull request ever it's made to this repository. Thank you! \u0395\u03c5\u03c7\u03b1\u03c1\u03b9\u03c3\u03c4\u03ce \u03c0\u03bf\u03bb\u03cd. I'm afraid this question is not related to this bundle. It's a generic Symfony question. You can find the answer and some examples in this article: https://symfony.com/doc/current/security/password_encoding.html If you need further help, please use these support options: https://symfony.com/support. @KenKilmartin thanks for this contribution! Sadly this is a bit more complicated. If you use this bundle without Symfony Flex structure (and Symfony Flex recipes) then the config is done by default in app/config/config.yml. If you use Symfony Flex recipes and Symfony 3.x, the file is app/config/easy_admin.yaml. If you use Symfony Flex recipes and Symfony 4.x, the file is config/packages/easy_admin.yaml.\nSo, I propose to do the following. Let's keep the 1.x branch doc untouched because we're going to abandon it soon. Let's update the master branch to consider that the reader is using Symfony Flex and Symfony 4.x. I'm going to do that myself very soon.\nEven if this time your contribution didn't make it ... we hope to see more contributions from you in the future! Cheers.. I wasn't sure about removing it ... because people upgrading would see an error instead of silently ignoring the deprecated option. But I guess my reasoning is wrong and it's better to do the same as Symfony: deprecate in old versions and fail hard in new versions.. I wasn't sure about removing it ... because people upgrading would see an error instead of silently ignoring the deprecated option. But I guess my reasoning is wrong and it's better to do the same as Symfony: deprecate in old versions and fail hard in new versions.. We'd need more information about this issue because as @ktrzos said, this should work in recent versions. In fact, something very similar to this it's working for me.. Closing this old issue as probably fixed ... or no longer relevant. Thanks!. Thanks @mrbase.. About searching in json-array, etc. I'd like that. My fear is that it won't work in PsotgreSQL. We have lots of problems because PostgreSQL is super strict about everything, so I don't know if a text search would work on that fields. Could you please do a quick test if you use PostgreSQL? Thanks!\nAbout your second idea, we definitely need to do that. Silently ignoring search fields is not OK. At least we should add some log message, but we should probably throw an exception.. Sadly the Doctrine + PostgreSQL strictness make this feature \"impossible\" to implement without introducing lots of bugs and problems. Let's close for now as \"can't fix\". I'm sorry.. Sadly the Doctrine + PostgreSQL strictness make this feature \"impossible\" to implement without introducing lots of bugs and problems. Let's close for now as \"can't fix\". I'm sorry.. @devkbsc I'm glad this is fixed for you thanks to @laurent-bientz solution. Closing as solved then.. There are some issues in your code. First, you should remove the code of the constructor of your AdminController. There's no need to created the dispatcher, subscriber, etc.\nSecond, if you use autowiring, you can remove the config in services.yml. If you are not using autowiring, you need to use this config instead:\nyaml\nservices:\n    app.easy_admin.send_email:\n        class: AdminBundle\\EventListener\\EasyAdminSubscriber\n        tags:\n            - { name: kernel.event_subscriber }. Let's close this because it looks like a Symfony issue and not specifically related to this bundle. Please reopen if you can provide a reproducer of this bug as explained here. Thanks!. Let's close this because it looks like a Symfony issue and not specifically related to this bundle. Please reopen if you can provide a reproducer of this bug as explained here. Thanks!. If you are using Doctrine inheritance with parent/child entities, I'm afraid that is not supported in this bundle and we don't plan to add support for it. I'm sorry.. Let's close this because it looks like a parent/child entity issue, which is something that we sadly don't support.. Let's close this because it looks like a parent/child entity issue, which is something that we sadly don't support.. Thanks for this fix and for your first contribution to this bundle!. @va5ja I wish I could help you but I don't understand this code well. Maybe @yceruto can answer to the question of your last comment? Thanks!. closing because we can't provide more help here. Thanks Yonel and Maxime for your help!. @uncle-scrooge I've edited your comment because you probably wanted to link to #2164. @carlespibernat as you can see in #2164 @yceruto is working hard to allow editing/adding entities while working on other entities. Could you please test the demo project he created to see if that works for you? Thanks!\nMeanwhile, let's close this issue as duplicate.. I'm closing this for now as \"won't merge\" because I'm not comfortable with the proposed solution. I'm not saying that this is wrong ... and this may be the best solution for this feature (and we may need to reopen this in the future) ... but for now I want to try to find a different/simpler solution. In any case, I thank you your contribution!. I'm closing this for now as \"won't merge\" because I'm not comfortable with the proposed solution. I'm not saying that this is wrong ... and this may be the best solution for this feature (and we may need to reopen this in the future) ... but for now I want to try to find a different/simpler solution. In any case, I thank you your contribution!. We'd need more info about this feature. Where does this collapsible option comes from? Is it a standard feature of the theme? Does it require some JavaScript plugin? Thanks!. @alterphp thanks for this feature! I've tweaked it a bit to show a different icon and toggle it when changing the state:\n\n. @alterphp thanks for this feature! I've tweaked it a bit to show a different icon and toggle it when changing the state:\n\n. We recently did a change to keep in the URL the query params that users may have defined. I think we should remove the referer query param if it's present to not increase the URI length each time.. @abdulrayman the important thing about this error is this:\n\nThe configured class \"AppBundle\\Entity\\Product\" does not exist. Did you forget to create the entity class or to define its namespace?\n\nSo, you must create AppBundle\\Entity\\Product or change that to your own entity; for example: App\\Entity\\SomethingHere. I'm sorry if it's a bit confusing. The text says \"Let's suppose that your Symfony application defines three Doctrine ORM entities called Product, Category and User.\" So we're supposing that you have some entities like that ... I'm fixing it in #2197.. Hi @hirenaspl. Thanks for taking the time to propose a new feature. However, in the past we decided to not support this feature because of its complexity. I'm really sorry.\nAs an alternative, you may consider using https://github.com/sonata-project/SonataAdminBundle instead.. Closing because this issue is too old. I'm sorry we didn't respond on time. The linked VichUplaoder issue will be fixed soon. Thanks!. I've just tested this fix in my apps and it worked like a charm! @nckenn thanks a lot for providing this bug fix!. I've just tested this fix in my apps and it worked like a charm! @nckenn thanks a lot for providing this bug fix!. Closing this as \"won't fix\" because in #2415 we're creating a completely new form theme as part of the whole redesign.. I'm closing this old issue because it's probably no longer relevant. I'm sorry we didn't reply on time.. Fixed by #2374.. @CheapHasz I'm sorry it took me forever to merge this. I don't use embedded classes so I was always hesitant to merge this without testing it myself ... but let's merge it and see how it goes. Thanks!. @nikophil we're going to add this feature in the future. See our roadmap. We intend to restrict views, actions, fields, etc. For now I'm closing this to not have it duplicated. Thanks!. @nikophil we're going to add this feature in the future. See our roadmap. We intend to restrict views, actions, fields, etc. For now I'm closing this to not have it duplicated. Thanks!. @nikophil yes ... but not yet! I prefer to create this feature from scratch and then, once we create the PR for it, you can review it and compare with your own PR and then tell us things that we've missed or done wrong. Thanks!. @nikophil yes ... but not yet! I prefer to create this feature from scratch and then, once we create the PR for it, you can review it and compare with your own PR and then tell us things that we've missed or done wrong. Thanks!. This is probably solved, but the issue here is that form types are only used in form-type views (new and edit). For the list view (and show and search) those Symfony Form types are ignored. The solution is to add something like template: 'fields.html.twig' to tell Symfony to use that Twig template to display the content of that property in the \"list\" view.. I'm afraid I don't understand this issue well. But if you want to change the data displayed in the \"list\" view ... you could override the default list.html.twig template, or override the default listAction() method in the admin controller, or use the EasyAdminEvents::PRE_LIST and EasyAdminEvents::POST_LIST events, or override the findAll() method in the admin controller or use the template property to set the template fragment used to display each property in the list view. Cheers!. Closing as solved :). @luxferoo I thank you the effort you took to create this feature. It's the most important missing feature of this bundle. We want to work on it ... but we'll add it in the new 2.x version to be released \"soon\". I'm closing this pull request meanwhile, because the feature will require many more changes (in the templates too) and it will support more use cases. Thanks!. @luxferoo I thank you the effort you took to create this feature. It's the most important missing feature of this bundle. We want to work on it ... but we'll add it in the new 2.x version to be released \"soon\". I'm closing this pull request meanwhile, because the feature will require many more changes (in the templates too) and it will support more use cases. Thanks!. I've read the related Twig issue and I'm afraid this problem can't be solved in any way. Macros have indeed changed in Twig 2.x when inheriting templates, so there's no other way than copy+pasting the macro. I know this is not ideal, but I'm afraid we don't have any other choice. I'm sorry!. I'm sorry for not having replied on time. Let's close this because it looks no longer relevant. Thanks!. I'm sorry for not having replied on time. Let's close this because it looks no longer relevant. Thanks!. Fixed by #2209.. @jfreynik thanks for reporting this and for providing a solution. @moynzzz thanks for investigating it further.\nAbout the question of creating a separate easyadmin_form.js file ... I'd prefer to not do that. Given that this bundle is to create admins/backends, we can make things that you can't in a public app. Having only 1 big JS file may be bad for a public app, but for a private backend it's OK and it simplifies our work a lot. So I'd prefer to keep having 1 file. But let's fix the reported issue if possible. Thanks!. @artem328 thanks for fixing this bug! I'm sorry it took me so long to merge.. You need to use {% extends '@EasyAdmin/default/....html.twig' %} as explained in the docs: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#tweaking-the-design-of-the-default-templates  Cheers!. You need to use {% extends '@EasyAdmin/default/....html.twig' %} as explained in the docs: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/list-search-show-configuration.html#tweaking-the-design-of-the-default-templates  Cheers!. Let's close for now and see what Symfony does about this. Thanks @moynzzz for taking care of this!. @luxferoo this is the most important lacking feature of the bundle. We're going to add this feature in the future. See our roadmap. We intend to restrict views, actions, fields, etc. For now I'm closing this to not have it duplicated. Thanks!. @luxferoo this is the most important lacking feature of the bundle. We're going to add this feature in the future. See our roadmap. We intend to restrict views, actions, fields, etc. For now I'm closing this to not have it duplicated. Thanks!. There is a pending pull request for this. Also, it's my top priority at the moment, so it will be implemented soon.. There is a pending pull request for this. Also, it's my top priority at the moment, so it will be implemented soon.. I'm sorry but I can't help you here because I don't understand the form collections well enough. In any case, in #2164 we're trying to add a feature to add entities while editing others. Thanks!. @maximecolin thanks for this contribution and I'm sorry it took me so long to merge! You did it great submitting to \"master\" because it's a new feature ... but we display the help message in all the other form fields, so let's consider it a \"bug\" instead. That's why I merged this in \"1.x\" branch. Thanks!. @pesseyjulien as @ktrzos these messages are not shown by default in this bundle. This is done on purpose. We decided to make this admin work like a Desktop app, where you don't see feedback messages when things work (99% of the times) but only when things fail.\nHowever, we include a flash_messages.html.twig template and we include it in the main layout. So, if you override the actions and add your own flash messages, they will automatically appear on the page.\nIf enough people ask for this feature, we may reconsider it in the future. but for now, we prefer to keep this behaviour. Thanks!. @nielsvandermolen thanks a lot for taking the time to investigate this issue and fix it! I'm sorry it took me so long to merge. Thanks!. Let's do this because we do the same in other templates and properties. So let's be consistent! @matthieuleorat thanks for your contribution!. Gonzalo, thanks a lot for working on this. Sadly, we've changed our minds about this. The reason is that EasyAdmin 2.0 will be completely redesigned (see #2415) and we'll remove the two form themes in favor of just one theme with an \"opinionated\" design. We'll no longer allow to configure between horizontal and vertical forms. The new design decides which is the best design depending on how you build your form.\nAgain, I'm really sorry for not merging your pull request, but I appreciate and thank you for your effort creating it. Thanks!. Thanks Gonzalo! I'm sorry it took me so long to merge it.. Closing as fixed by #2267.. Closing as fixed by #2267.. I'm closing this as a duplicate of #2267. Thanks!. I'm closing this as a duplicate of #2267. Thanks!. Hopefully fixed by #2380.. Fixed by #2242. Available in the next stable release.. @Rindhal I'm sorry it took me forever to merge your contribution. I just merged it. Thanks!. I've just checked this and it's caused by the way Flex/Symfony loads the routes. The config/routes/annotations.yaml takes precedence and that's why EasyAdmin route is ignored. You could copy+paste config/routes/easy_admin.yaml contents at the bottom of the annotations.yaml file ... or better just use the annotation in the Admin controller, as suggested by @prototypecreative .\nBy the way we have other reports of other issues caused by the way routes are loaded by Flex. For example: https://github.com/symfony/symfony-docs/issues/9608. The translation_domain option only passes that value to Symfony's trans functions. We don't do anything related to translation ourselves.\nThe data you showed looks correct, but maybe the file extension is not? In modern Symfony apps is always .yaml instead of .yml. Rename your file to translations/record.en.yaml and see if it works (and remember to delete the cache whenever you create a new translation file!). Closing this old issue because it's probably solved ... or no longer relevant. Thanks!. I'm afraid @kiler129 is right. It's really hard to add support for this feature in this bundle ... so for the moment we're not planning to add it. I'm sorry!. @proArtex I understand your needs ... but we're not planning to implement this feature. Also, I'm afraid you'll have lots of issues if you model your entities after DDD instead of traditional app entities. In the past some people told us that this project doesn't work at all with DDD. I'm sorry!. @proArtex I understand your needs ... but we're not planning to implement this feature. Also, I'm afraid you'll have lots of issues if you model your entities after DDD instead of traditional app entities. In the past some people told us that this project doesn't work at all with DDD. I'm sorry!. I'm not sure what to do here. In the default admin controller we validate the entity:\nphp\nif ($newForm->isSubmitted() && $newForm->isValid())\nSo, this should trigger the Symfony validation. We don't do anything related to validation ourselves, so if it works in a normal Symfony app, it should work when using this bundle.\nCan you please provide more details about this error so we can double-check if it's a bug or not on our side? Thanks!. Thanks Christian! The change looks good to me (failing tests are unrelated). Also, he shared with me some Blackfire profiles showing thousands of functions calls saved with this change.\nIn the past we optimized these \"template exists\" calls because they are very slow, but this alternative approach looks indeed better.. Thanks Christian! I appreciate the time you took to improve this!. Thank you Christian.. Minor but nice. Thanks!. @GyniO this \"mess\" is because there are some templates who are usually overridden (the ones in the default/ dir) and that's why we created a custom mechanism to override them easily.\nThe CSS Twig template is not part of our simple mechanism, so you must use Symfony's way of overriding template s(as @yceruto shown, this changed from Symfony 3 to 4). We should only stick to Symfony's way of overriding templates, now that Symfony 4 is as simple as it has always been with EasyAdmin (@yceruto started to work on this. I plan to keep working on that).\nBy the way, overriding the CSS Twig template may be more complex than creating your own small CSS file and load it in all pages to override the default styles (see https://symfony.com/doc/master/bundles/EasyAdminBundle/book/design-configuration.html#adding-custom-web-assets).. Thanks Daniel.. Closing as fixed by #2040 and other related issues ... and others that I will commit soon. Thanks for reporting!. Thanks Konstantin.. I know this fixes an important bug ... but it's for master, which hasn't been released yet, so it's not urgent.\nMy only concern is that I've been thinking is it OK to create a whole new class to replace these two lines of code:\n// turns 'design.menu' into '[design][menu]', the format required by PropertyAccess\n$propertyPath = '['.str_replace('.', '][', $propertyPath).']';\nI'm still divided. I know the class is OK and \"clean\" ... but I love code that's easy to understand and change. So, I'm still thinking about this.. I know this fixes an important bug ... but it's for master, which hasn't been released yet, so it's not urgent.\nMy only concern is that I've been thinking is it OK to create a whole new class to replace these two lines of code:\n// turns 'design.menu' into '[design][menu]', the format required by PropertyAccess\n$propertyPath = '['.str_replace('.', '][', $propertyPath).']';\nI'm still divided. I know the class is OK and \"clean\" ... but I love code that's easy to understand and change. So, I'm still thinking about this.. After thinking a lot about this ... I've decided to simplify things a lot. In #2385 the bug is fixed and some code is delete to revert things and keep them simple.\n@grachevko I totally understand if you are upset right now. But please, keep in mind that this is not personal. I deleted some of the code that you contributed because I must keep this bundle simple to maintain in order to survive. There's no alternative. I hope you understand it \ud83d\ude4f  Thanks!. This is \"expected\" because we don't really have a \"dashboard\" concept, so there's no option to configure the translation domain to use here and the default one (messages) is used.\nYou can solve it adding this to your custom template:\ntwig\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% trans_default_domain 'the-name-of-your-domain' %}. Closing because it's not possible to use it as explained by @yceruto. Hopefully our friend Yonel can take some time to release his autocomplete field library. Thanks!. Closing because it's not possible to use it as explained by @yceruto. Hopefully our friend Yonel can take some time to release his autocomplete field library. Thanks!. > However, I think the problem comes from the lack of a central security system.\nI fully agree. So I'm closing this issue so we can focus on working on that feature for the next stable version of this bundle. Thanks!. @neni thanks a lot for this contribution! I'm sorry it took me so long to merge it.. Not possible yet, but we're working on something similar (see #2164) so I'm closing this as a duplicate. Thanks!. I'm really sorry but I need to close this feature request as \"won't fix\". I understand if this is disappointing, but the only way for this bundle to survive is to focus and say no to 90% of feature requests.\nThe good news is that there are other admin generators that already implement this feature. So, if this feature is a must for your backend, please check out SonataAdmin bundle and API Platform admin. Thanks!. @orlant I deeply thank you for your proposal. Sorry I didn't reply earlier. However, we don't plan to get a logo for this project anytime soon. Also, we have other projects and it's strange to have a logo for one project and no others. We prefer to keep Symfony's philosophy of not having logos for projects.\nIn any case, if you still have time to collaborate with open source projects, you can ask in Symfony's Slack chat (https://symfony.com/slack-invite) because I'm sure lots of people will be interested.\nAgain, thank you!. @orlant I deeply thank you for your proposal. Sorry I didn't reply earlier. However, we don't plan to get a logo for this project anytime soon. Also, we have other projects and it's strange to have a logo for one project and no others. We prefer to keep Symfony's philosophy of not having logos for projects.\nIn any case, if you still have time to collaborate with open source projects, you can ask in Symfony's Slack chat (https://symfony.com/slack-invite) because I'm sure lots of people will be interested.\nAgain, thank you!. @botjaeger I'm sorry we couldn't answer to your question on time. To be completely honest, I don't know how to do this or even if it's possible to do it. I'm sorry!. Yes, the versions of that dropdown refer to the bundle. 2.x is the current \"master\" branch that will be soon released as 2.0. Cheers!. Yes, the versions of that dropdown refer to the bundle. 2.x is the current \"master\" branch that will be soon released as 2.0. Cheers!. I prefer to not make this change for now. It's true that resulting URLs would be a bit more beautiful ... but they will still be ugly and long ... so I don't think it's worth it. I love the simplicity and flexibility of having just one route and using query params vs the approach of other admins which generate hundreds of routes. Thanks for understanding \ud83d\ude4f !. I prefer to not make this change for now. It's true that resulting URLs would be a bit more beautiful ... but they will still be ugly and long ... so I don't think it's worth it. I love the simplicity and flexibility of having just one route and using query params vs the approach of other admins which generate hundreds of routes. Thanks for understanding \ud83d\ude4f !. I'm closing this as \"fixed\":\n\nWe use asset() to link to any CSS, JS file ... so any Symfony assets configuration options should work and you could configure CDN URLs, etc.\nWe use in 2.x versions Webpack Encore and we provide both the compiled assets and the source SCSS/JS assets, so you can integrate them into your Webpack Encore based workflow.\n\nIf you think we could do something else to improve this, please add a comment here and we can reopen the issue. Thanks.. I'm sorry about this. Sometimes routing ordering is hard in Symfony apps. I've merged #2378 as an initial fix for this issue. Thanks!. Closing as fixed by #2298.. @helmuthva you are completely right! This is one of the most important lacking features of this bundle (granular security is another one!)  Anyway, this feature is on our roadmap, so we're closing this issue to not have it duplicated. Thanks!. @helmuthva you are completely right! This is one of the most important lacking features of this bundle (granular security is another one!)  Anyway, this feature is on our roadmap, so we're closing this issue to not have it duplicated. Thanks!. This should have been fixed by the latest stable releases. Thanks!. This should have been fixed by the latest stable releases. Thanks!. I'm sorry we couldn't reply to your question on time. I'm afraid I don't use FOSUserBundle and there's a growing effort to \"eliminate\" that bundle because apparently it introduces more problems than it solves. I'm sorry I can't be of more help here.. I'm afraid this is a known limitation of this bundle. The rationale to not complicate the bundle making this configurable was that when using an autocomplete, you always type enough characters to get a short list of results. When the list is short, is not a big deal to not sort the results by some criteria.\nI understand that there could be some scenarios where this limitation is a \"no go\", but for now we don't intend to implement this feature. I'm sorry!. @ndench thanks so much for updating this! I'm really sorry it took me so long to merge it.\nIt was merged in https://github.com/EasyCorp/EasyAdminBundle/commit/798504641ba1127dc2a5e11d3143665bd5c7ee3c and https://github.com/EasyCorp/EasyAdminBundle/commit/bdfb3c90eb79af91f80a1c8a0f34bc25dbfb358c. This error only happens in the dev-master branch. We're working on it in #2260. No stable version should have this issue. If you suffer it in a stable version, please reopen. Thanks!. This error only happens in the dev-master branch. We're working on it in #2260. No stable version should have this issue. If you suffer it in a stable version, please reopen. Thanks!. Fixed in #2370. Thanks for reporting!. @c33s yes, lately I didn't have much time for this project. However, don't worry much. I personally use this project in lots of important things. I depend on this project AL LOT, so I have a strong interest in keeping it alive. That's the best guarantee for its future. Cheers!. @c33s yes, lately I didn't have much time for this project. However, don't worry much. I personally use this project in lots of important things. I depend on this project AL LOT, so I have a strong interest in keeping it alive. That's the best guarantee for its future. Cheers!. Support for FOSCKEditorBundle was merged recently and it will be available in the next stable  version of this bundle. Instead of type: 'ckeditor' you can now use type: 'fos_ckeditor'. Thanks!. Support for FOSCKEditorBundle was merged recently and it will be available in the next stable  version of this bundle. Instead of type: 'ckeditor' you can now use type: 'fos_ckeditor'. Thanks!. Done in #2435.. Let's close this old issue. I'm sorry we couldn't be of more help here.. Fixed in #2379.. Thanks Christian! Sorry it took so long to merge.. Thanks Christian! Sorry it took so long to merge.. I'm afraid I'm a bit lost here. I don't fully understand the problem being solved here. But I trust @xabbuh completely, so please tell me if you think this is ready and I'll merge it. Thanks!. I love this attention to detail. Thanks @ThomasLandauer! Sorry it took so long to merge.. I love this attention to detail. Thanks @ThomasLandauer! Sorry it took so long to merge.. I'm closing this because the original text is what we want to say: \"the view is where you are\". If this keeps being confusing when reading it, please propose another rewording. Thanks!. I'm closing this because the original text is what we want to say: \"the view is where you are\". If this keeps being confusing when reading it, please propose another rewording. Thanks!. I'm afraid I don't understand this issue. There's a search_action Twig block inside the list.html.twig template:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/82c1c3cce0f81fd30ba703405b362d232eaa972c/src/Resources/views/default/list.html.twig#L57-L79\nIn any case, let's close this because it's an old issue, so it's probably no longer relevant.. In addition to the value variable, each field template receives other variables to do advanced things. For example: backend_config, entity_config, field_options, item and view.\nYou probably want to use here item because it contains the entity instance and you can get its id property, etc. I hope this helps you!. In addition to the value variable, each field template receives other variables to do advanced things. For example: backend_config, entity_config, field_options, item and view.\nYou probably want to use here item because it contains the entity instance and you can get its id property, etc. I hope this helps you!. I'm afraid this is not really a bug but \"a feature\". The site name is not translated in the template. I don't want to make it translatable because 99% of people don't need to translate this and they'll see unnecessary \"missing translation\" errors.\nThe solution is to override this part of the layout.html.twig template:\ntwig\n{% block header_logo %}\n    <a class=\"logo {{ easyadmin_config('site_name')|length > 14 ? 'logo-long' }}\" \n       title=\"{{ easyadmin_config('site_name')|striptags }}\"\n       href=\"{{ path('easyadmin') }}\">\n        {{ easyadmin_config('site_name')|raw }}\n    </a>\n{% endblock header_logo %}\nYou only need to override the header_logo block, not the entire template! Cheers!. I'm afraid this is not really a bug but \"a feature\". The site name is not translated in the template. I don't want to make it translatable because 99% of people don't need to translate this and they'll see unnecessary \"missing translation\" errors.\nThe solution is to override this part of the layout.html.twig template:\ntwig\n{% block header_logo %}\n    <a class=\"logo {{ easyadmin_config('site_name')|length > 14 ? 'logo-long' }}\" \n       title=\"{{ easyadmin_config('site_name')|striptags }}\"\n       href=\"{{ path('easyadmin') }}\">\n        {{ easyadmin_config('site_name')|raw }}\n    </a>\n{% endblock header_logo %}\nYou only need to override the header_logo block, not the entire template! Cheers!. I want to update the theme to something more modern because AdminLTE is already looking dated. But I haven't found yet a beautiful-enough open-source modern Bootstrap 4 admin template. I've seen and tested a lot of them ... but I don't like any of them :(\nWe'll keep looking for new templates in the future. Meanwhile, let's close this issue. Thanks!. I want to update the theme to something more modern because AdminLTE is already looking dated. But I haven't found yet a beautiful-enough open-source modern Bootstrap 4 admin template. I've seen and tested a lot of them ... but I don't like any of them :(\nWe'll keep looking for new templates in the future. Meanwhile, let's close this issue. Thanks!. Closing this as \"probably fixed\" in recent versions. Thanks!. Thanks @BackEndTea.. Thanks @BackEndTea.. I'm sorry we didn't reply here on time. I'm afraid I can't be of much help because I don't have a clue about what could be happening here. I'm sorry!. Sorry for the late reply. This is something we don't officially support, so it's not documented and I don't know if it will work ... but in src/Form/Type/* you can find the actual form types used when adding something like type: section in the YAML config. In this case, it's the EasyAdminSectionType class ... but you have other types too. Cheers!. Sorry for the late reply. This is something we don't officially support, so it's not documented and I don't know if it will work ... but in src/Form/Type/* you can find the actual form types used when adding something like type: section in the YAML config. In this case, it's the EasyAdminSectionType class ... but you have other types too. Cheers!. Thank you @alterphp.. I can reproduce the error. You can fix it like this:\nyaml\ncreatedAt:\n    # ...\n    type: 'datetime'\nBut I don't know why this happens. Would you please have some time to investigate the reason why this happens? Thanks!. Thanks Gonzalo.. Sadly this is a know limitation. See #2363. We'll improve this in the future, though. Thanks!. I'd love to have this feature! Problem is that Symfony Forms don't implement it. I don't want to implement this feature in this bundle because it's a lot of work and it'll take some effort to maintain it in the future. So let's wait and see if Symfony Forms implement this feature some day (... although sadly this will never happen ... people have asked for it lots of times and it has been rejected all the times).. As others said, this is in our roadmap. So I'm closing this issue as a duplicate. Thanks!. I've been thinking about this and I've decided to not implement it. The reason is that for real apps (not quick prototypes) is not that common to say: \"add all fields, except these ones, and do whatever you want to do them\". In real apps you must configure fields to make them display/behave like you want. So you must configure the fields and thus, adding them manually is not a big deal.\nAlso, the true real problem is that we repeat the same config again and again for fields. We should have a single method/config for all fields (the same done by the Nova admin generator; see https://nova.laravel.com/docs/1.0/resources/fields.html). We'll fix this in the future.\nEven your proposal didn't make it this time, I thank you for opening this issue and helping us improve this bundle. Thanks!\n. @guice12 sadly this is another nice feature missing from this bundle. It's going to take us some time to implement this ... so I recommend you to use meanwhile the SonataAdmin bundle. Cheers!. @andrea-daru we're working on this. See #2164. Our friend Yonel created a pull request for this ... but it stalled a bit. We hopefully recover it soon. Meanwhile, I'm going to close this feature request as a duplicate. Cheers!. @guice12 I'm afraid this feature is not supported yet ... and it's going to take us some time to implement it. That's why I recommend you to use instead SonataAdmin bundle which is great and supports this feature. Cheers!. Given that the config is defined in a YAML file, you can't get this value dynamically. The solution would be to override the menu.html.twig template and add some element somewhere in it (you have different Twig blocks to override what you need). Cheers!. @guice12 you are right about this limitation. However, after having thought about this, I've decided to not implement this feature or make it configurable because I think it's not a common enough need.\nI understand if this is disappointing to you ... but in this bundle we try to make a (tricky) balance between giving enough configurable options (so this is useful to users) but not too many configurable options (so it doesn't become imposible to manage for us). I hope you understand it. Thanks!. I'm afraid this bundle is not designed for your use case. It might work, but it probably won't. This bundle requires that you define some Doctrine ORM entities and then use the bundle itself for the CRUD operations on those entities.\nYou can integrate non-EasyAdmin actions in the backend ... but if you plan to do that for EVERY action (so you can use your own API) then this bundle won't save you much work. You would end up doing everything yourself ... so maybe it's better just to do that in the first place and not use this bundle. Cheers!. @KaiCMueller I'm really sorry because I just closed another pull request of yours as \"won't merge\" ... but I prefer to close this one too. But I have nothing personal against you!!  It's just that I don't want to make the pagination more complex. Again, this is not wrong ... and it could be useful for some users ... but I prefer to keep this feature simple for now. Thanks for understanding it.. @ivanbogomoloff just for your information, I've merged #236, where @moynzzz proposed a different solution than mine ... and I think it's much better!. Fixed by #2343.. @Benjamin-Porquet  I like this for consistency. Thanks for your contribution!. We're going to add this feature, but in future versions. See the issues mentioned above for more details and meanwhile you can use the solution @PierreJoube showed meanwhile. Thanks!. @666mon I've just reproduced this and I can indeed confirm both the bug and your fix. Thanks a lot for contributing it!. If you look at the source code of the editAction(): https://github.com/EasyCorp/EasyAdminBundle/blob/0414a2dc12384a469e75c862a90ec1d83153a33d/src/Controller/AdminController.php#L187 and the EasyAdmin documentation you'll find different ways of solving this issue.\n1) The best and recommended way is to use the EasyAdminEvents::POST_UPDATE event triggered after OngColab edit changes have been successfully save. You can listen to that event and make a special redirection just for that entity and action.\n2) A hacky alternative would be to manipulate somehow the referrer parameter in the query string because the edit action does simply: redirectToReferrer().\nI'm sorry there's no simpler solution, but this use case is a bit edgy, you are editing an entity but want to make it look like you are inside another entity. Cheers!. Fixed by #2357.. I thank you your contribution, but I'm afraid I'm going to close it as \"won't merge\". The reason is that this new behaviour is too restrictive. Personally speaking, I use numbers a lot of times when searching. I like that when you put an integer, results include the entities whose IDs match partially/totally that integer and also entities whose other fields match too (e.g. prices and other codes). In any case, thanks again for proposing new features, even if this time it didn't make it.. @moynzzz thanks for reporting this issue and for contributing the oull request for it. You said it was your first pull request ... so I can only say ... congrats!! You did it perfectly. Cheers!. Actually, I think we did this on purpose to use the label of our delete action instead of VichUploader label. But does it make sense to do that? So I agree with this change and the new label name is correct, as you can see in https://github.com/dustin10/VichUploaderBundle/blob/master/Resources/translations/VichUploaderBundle.en.yml Thanks @mpiot!. Thanks Mathieu.. The main bug reported in this issue has been fixed in #2369. Thanks!. @mike3012 thanks for this contribution! I think this is very useful, so we merged it in 1.x instead of \"master\" only. Cheers!. @beknownst sadly I must close this feature request for now. There's no official way to separate the \"show\" information as you can do in the form views. We'll do that ... but I can't estimate a completion date for that feature. It will be done in the next major version of the bundle. I'm sorry!. This feature is nice ... but we have a pending pull request related to it: #2164. So I'm closing this for now. Thanks!. @KaiCMueller brilliantly explained the most probably cause of this issue and the possible solution. Setting the by_reference option (or double checking your entity config) should solve this ... so I'm closing this as fixed. Thanks!. I've just tested this on my own apps using this bundle and it worked as expected. @moynzzz thanks for fixing this!. Thanks @gonzakpo!. @moynzzz thanks a lot for fixing this bug. I didn't know how to do this myself.. Thank you all for your help. I tried defining the following service but the deprecation didn't disappeared. I'm probably not doing it right \ud83d\ude13 \nxml\n        <service id=\"easyadmin.controller\" class=\"EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController\" public=\"true\">\n            <tag name=\"container.service_subscriber\" />\n        </service>. Thanks for your help. So, I did this:\n\nRemoved the service for the controller\nMade the controller implement ContainerAwareInterface\nThat's incompatible with AbstractController, so I stopped extending from it\nI copied the methods from AbstractController so it's like we're using it even if we are not actually using it\n\nAll deprecations are gone now ... although the resulting code is really ugly. I don't like it at all.\nOne test is failing though. The error message says:\nThe \"property_accessor\" service or alias has been removed or inlined when the container was compiled. You should either make it public, or stop using the container directly and use dependency injection instead.\nI added property_accessor explicitly to the getSubscribedServices() list. Is this a bug of Symfony ... or am I doing something wrong? Thanks!. I'm not sure I can fix this myself \ud83d\ude05  Also, I'd prefer to not switch to a controller as service. I want to minimize the breaking changes ... even if this is a major version. So, if someone is up for the task, I'd appreciate if you could send a pull request to replace this one.\nI want to release the EasyAdmin 2.0.0 stable version in 3 days (during the Hackday of SymfonyCon Lisbon 2018). If the fix for this \"problem\" is not ready, I don't think it's a big deal. This \"error\" is just a deprecation message. It doesn't break anything important. Thanks!\n. OK, if you think the service is the best idea ... I trust you!. Closing in favor of #2490.. Yes, I think adding a ConfigPass is a better solution. And it's not limited in any way because you can change any existing config created by any other config pass. (I know Konstantin's solution was more correct technically speaking ... but as I said in the related PR, I prefer to keep things as simple as possible).. Yes. I think that would make sense. I'd appreciate if any volunteer could contribute that PR. Thanks!. The trans_default_domain tag only affects to the current template, not the included ones (https://symfony.com/doc/current/reference/twig_reference.html#trans-default-domain).\nWe use this code to define the translation domain of the menu:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/55e91818a9abff7657aeaa33044f50c1b23299d7/src/Resources/views/default/menu.html.twig#L45\nYou can solve this setting the translation_domain config option of EasyAdmin as explained in https://symfony.com/doc/current/bundles/EasyAdminBundle/tutorials/i18n.html#using-a-custom-translation-domain. Please, try to define the translation_domain option in your entity, not as a global easy_admin option. Maybe that's our bug. Thanks!. @guice12 could you please check if that worked in 1.x version? Thanks!. I've just checked this. It works for me both in 1.x and 2.x. Can you click on the Web Debug Toolbar and see if the missing translations appear under the blog domain? Thanks!. @guice12 thanks a lot for the reproducer app. It helped me a lot to discover this edge-case bug. It's being fixed in #2487.. Fixed by #2487.. I'm probably wrong but ... this change won't work in Symfony 4.1, right?. Thanks for validating! I didn't know if this escaping was also necessary inside these PHP methods. It's strange that I cannot reproduce this issue ... but let's merge it anyway. Thanks!. Thanks for the issue report! Fixed in 3b72da9d36f6eaf6464f4aa972a95d91108957ba.. Thanks Yonel.. I've just installed FOSCkEditor in a EasyAdmin app successfully. Basically you need to run these three commands:\nbash\n$ composer require friendsofsymfony/ckeditor-bundle\n$ ./bin/console ckeditor:install\n$ ./bin/console assets:install --symlink\nThis worked for me ... but please tell me if the error persists. Thanks!. If the JS files haven't been included, maybe they don't exist. When you run the ckeditor:install command, do you see something like this?\n```\n$ ./bin/console ckeditor:install\n\n| CKEditor Installer |\n// Downloading CKEditor ZIP archive from \"https://github.com/ckeditor/ckeditor-releases/archive/full/latest.zip\"\n 1713963/1713963 [============================] 100%\n// Extracting CKEditor ZIP archive to \"vendor/friendsofsymfony/ckeditor-bundle/src/Resources/public\"\n 521/521 [============================] 100%\n// Dropping CKEditor ZIP archive \"/private/var/folders/p7/b39_689x3lldn1r49x1dc2v40000gn/T/ckeditor-full-latest.zipWCu64z\"\n[OK] - CKEditor has been successfully installed...\n``. @Nogrod thanks for this issue report. I need to study this change proposal carefully to not break things for people not installing this inside a subfolder of webroot, which is the most common use case. Thanks!. I'm sorry this translation is wrong ... but this file comes directly from select2 repo and we copy it automatically to thesrc/Resources/public/select2/` dir using Webpack:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/811f2492d65598e7ec65af62ab34838e10bf8655/webpack.config.js#L19-L26\nIf we merge this, the change will be overridden next time we update the assets \ud83e\udd14  Maybe updating the assets (or only select2 asst if we prefer) solves this?. I've just release 2.0.0-RC1 version with updated frontend dependencies: https://github.com/EasyCorp/EasyAdminBundle/releases/tag/v2.0.0-RC1  Please let me know if the problem was solved. Thanks!. I'm sorry. I missed that. I thought this was for 2.x only. Let's merge it. Thanks!. Yonel, thanks for your work on this deprecation and for providing a smooth upgrade path!. @mchojrin thanks for this contribution. I'd like to think about this a bit more, but I think it makes sense to return a JsonResponse with some dat. We just need to figure out the details.. Sadly at the end the proposed change resulted more limited than it looked to me at first. So maybe we should do what Yonel suggests. Overriding the redirectToReferrer() could work because you can detect if the request is AJAX and you have all the information about the current entity, so you can return the result of the parent redirectToReferrer() when you don't need your special JSON response. Thanks!. Thanks @RevisionTen.. @odolbeau thanks for fixing this bug! I made some minor tweaks while merging (5af0e2613a2bf8e1a3004dc7496b9053a70d61a6).. Olivier, thanks for this nice bug fix! I couldn't have fixed it myself. Cheers!. Thanks! I totally forgot about this. Merged!. @kelerq not yet ... because of the \ud83c\udf84 Xmas holidays. I'm sorry.. @alterphp thanks a lot for this taking care of this! And thanks for all your other pull requests too!. I don't know if it's enough ... but you need to make your form extend from EasyAdminFormType::class and you must also use our @EasyAdmin/form/bootstrap_4_layout.html.twig theme.. Let's close as fixed and we'll reopen if this doesn't work. Thanks!. @arzurchris nice catch! Thanks for fixing it.. Thanks Gr\u00e9goire.. I'm afraid it's not possible to use the old style in 2.0. If more people ask for it, I'll try to make it responsive. But this is not a promise and I don't know when or if it will be implemented. Thanks!. @Gemorroj this is explained in the updated chapter about design: https://symfony.com/doc/master/bundles/EasyAdminBundle/book/design-configuration.html#loading-the-entire-bootstrap-framework  We no longer load the entire Bootstrap framework, but it's easy to do it if you need that in your backend.  If doing that doesn't work for you, please reopen this issue.. @mmondino thanks for reporting this issue. Sadly I don't know how to debug it or solve it. Maybe there's some config in Webpack or Encore that we can activate to generate more compatible code? Thanks!. @mmondino thanks for reporting this issue. Sadly I don't know how to debug it or solve it. Maybe there's some config in Webpack or Encore that we can activate to generate more compatible code? Thanks!. I'm closing because I can't reproduce and we don't have more information ... but we can reopen if more info is provided about how to reproduce it. Thanks!. Thank you Dominik.. Thank you Dominik.. @alterphp I'm afraid I dislike that proposal :(  Adding artificial &nbsp; to fix a spacing issue feels wrong to me. I prefer to use CSS for controlling spacing.\nBut you are right about the reported issue, so we must find a solution. Thanks!. @alterphp I'm afraid I dislike that proposal :(  Adding artificial &nbsp; to fix a spacing issue feels wrong to me. I prefer to use CSS for controlling spacing.\nBut you are right about the reported issue, so we must find a solution. Thanks!. Yes. I think it's the only possible solution. I've looked for and there's no way to select normal text not enclosed in a tag, not even with tricks or hacks.. Yes. I think it's the only possible solution. I've looked for and there's no way to select normal text not enclosed in a tag, not even with tricks or hacks.. @softwarelimits you are completely right. We assume something that may not be know by everybody. So in #2570 we're updating the docs a bit to explain things better.\nI can understand your frustration with this and with the demo project. We're going to improve that too. I hope you can give EasyAdmin a second chance because I believe it's better than this awful first experience you had. Thanks!. I don't use PostgreSQL so I want to ask you something: if you a dump($metadata['dataType']); just before that line, do you see citext as the value of the data type? I want to be sure that Doctrine doesn't change that value. Thanks!. Thanks for adding this missing translation! D\u011bkuji. Thanks so much for this contribution! However, I merged #2564 because it adds more cases to the translation, so it looked \"more complete\". That's why I'm closing this pull request; I hope that's OK to you. I know that Polish is quite complex for translations like this. In any case, thanks a lot for your help! Dzi\u0119kuj\u0119 bardzo. Yes ... but we do that from time to time (we update all front-end deps at once). In the past this was cumbersome, but now that we use Webpack, it's very easy to do, so we'll do that more frequently. So I'm closing this, but we'll fix it soon as long as other dependency updates. Thanks!. @alterphp thanks a lot for bootstraping this feature. I've been playing with it for some time and I started to create a commit for your pull request to change some things.\nHowever, even if I like the overall idea, there are too many things that I don't like how they look or feel, so I've decided to start from scratch. I've been playing with CSS grid, and this is a prototype of the responsive behavior I propose to implement:\n\n\nThere will be 2 breakpoints for contents (992px = '.lg' in Bootstrap 4 terminology):\nless than 992px -> hide nav\n992px or more -> show nav\nWhen nav hidden is hidden, a toggler is shown next to the backend name/logo\nWhen toggler is clicked, nav appears as a sliding menu and can be closed when clicking one of its elements or when clicking anywhere outside the nav\nThe rest of changes to create a perfect responsive experience (such as the tables we had in EasyAdmin 1.x) will be done later in a separate PR. @alterphp thanks a lot for bootstraping this feature. I've been playing with it for some time and I started to create a commit for your pull request to change some things.\n\nHowever, even if I like the overall idea, there are too many things that I don't like how they look or feel, so I've decided to start from scratch. I've been playing with CSS grid, and this is a prototype of the responsive behavior I propose to implement:\n\n\nThere will be 2 breakpoints for contents (992px = '.lg' in Bootstrap 4 terminology):\nless than 992px -> hide nav\n992px or more -> show nav\nWhen nav hidden is hidden, a toggler is shown next to the backend name/logo\nWhen toggler is clicked, nav appears as a sliding menu and can be closed when clicking one of its elements or when clicking anywhere outside the nav\nThe rest of changes to create a perfect responsive experience (such as the tables we had in EasyAdmin 1.x) will be done later in a separate PR. I forgot to mention a thing. Instead of creating a config option to display contents in full width or not ... I prefer to create something dynamic based on JavaScript and persisted in the browser so each user can use the backend as they want. This is a prototype too:\n\n\nThe red zone is a \"draggable border\". If you click on it, contents go full width or normal width.. I forgot to mention a thing. Instead of creating a config option to display contents in full width or not ... I prefer to create something dynamic based on JavaScript and persisted in the browser so each user can use the backend as they want. This is a prototype too:\n\nThe red zone is a \"draggable border\". If you click on it, contents go full width or normal width.. So, I've been working on this during the weekend. It's almost finished, but I need more polishing, so probably tomorrow I'll submit the pull request. These are the main changes:\n1) The content area has two resize handles on the left and right:\n\n2) The left handle allows to minimize the sidebar menu:\n\n3) The right handle allows to make the content as wide as the browser window. And both handles can be used at the same time:\n\n4) In addition to the above, when the screen is too narrow, the sidebar hides and a toggle icon is displayed next to the logo. When clicking on it, the sidebar slides in as the usual menu of mobile sites:\n\n. So, I've been working on this during the weekend. It's almost finished, but I need more polishing, so probably tomorrow I'll submit the pull request. These are the main changes:\n1) The content area has two resize handles on the left and right:\n\n2) The left handle allows to minimize the sidebar menu:\n\n3) The right handle allows to make the content as wide as the browser window. And both handles can be used at the same time:\n\n4) In addition to the above, when the screen is too narrow, the sidebar hides and a toggle icon is displayed next to the logo. When clicking on it, the sidebar slides in as the usual menu of mobile sites:\n\n. Closing in favor of #2584.\n@yceruto I've made the resizer more subtle: it's narrower now and it has a longer transition, so it's not activated when you move the mouse quickly over it, but when you put the mouse over it a while.. Closing in favor of #2584.\n@yceruto I've made the resizer more subtle: it's narrower now and it has a longer transition, so it's not activated when you move the mouse quickly over it, but when you put the mouse over it a while.. @alterphp thanks a lot for taking care of fixing this issue. It's this attention to detail what makes a project successful. Thanks!!. @alterphp thanks a lot for taking care of fixing this issue. It's this attention to detail what makes a project successful. Thanks!!. Thanks for fixing this bug in #2564.. Thanks a lot! I see it's quite complex compared to other languages, so thanks for taking care of this. Dzi\u0119kuj\u0119 bardzo. @TomasVotruba to be completely honest about your last question: I don't know. It could be a bug of this bundle maybe. Someone with experience in forms should investigate this. Thanks!. Very nice catch! Thanks for fixing it. I'm going to fix the recipe too.. And here's the proposal to update the official EasyAdmin recipe for Symfony Flex: https://github.com/symfony/recipes/pull/520. Thanks! I merged it in \"master\" because 1.x doesn't contain that translation (I wrongly merged it for another language). Veel dank. Thanks Samuel.. This was a bit tricky, but I'm glad it's been fixed and simplified. Thanks Dominik!. This was a bit tricky, but I'm glad it's been fixed and simplified. Thanks Dominik!. Fixed by #2574. Thank you all for your help.. Fixed by #2574. Thank you all for your help.. Thanks Dominik ... and thanks to the people who helped you select the best possible translation. Thanks Dominik ... and thanks to the people who helped you select the best possible translation. Thanks @umadesign.. Thanks @umadesign.. @yceruto thanks a lot for contributing this feature. I love it. I'm going to review it soon and merge it. In your description you say that \"docs\" and \"tests\" are left to do.\nI propose you something: let's finish this feature making sure all existing tests pass and merge it. Later, I can work on both tests and docs. That way I'll learn how this works and could propose changes/tweaks if needed. Thanks.. Thanks a lot Yonel. This is now merged and I'll play with it to create the docs and tests. Thanks.. Sorry for the lack of response here. The problem is that I'm not sure about how to fix this without breaking anything or complicating any existing feature. Suggestions are welcomed!. Good catch, thanks @UNIT23.. @pesseyjulien we've just merged a pull request (#2584) that improves the layout responsiveness. My guess is that this bug will be fixed by it (we're going to release a new stable version, so you can test it easily). If the error persists after the upgrade, please add a comment here so we can reopen it. Thanks!. I've submitted some tweaks. This is ready for the final review. Thanks!. @Bloodysunset it's not possible to disable them with a config option. For now we're not going to add that option because they are very subtle and if you don't use them, they don't distract the user. Also, even if you \"never\" use them ... sometime you may need them for some very complex listing that you need to see it expanded.. @yceruto good catch. I'm working on a fix.. Looking at your proposed changes it's clear that the current code was really bad and didn't make sense :(  Thanks for fixing it!. I think this feature is not supported. You can list related properties with the \"dot notation\":\n```yaml\ntypical case\n\n{ property: 'price' }\n\ndisplay the 'value' property of the 'price' associated with 'product'\n\n{ property: 'price.value' }\n\nyou can go deeper if needed\n\n{ property: 'price.value.currency' }\n```\n\nBut this info is not sortable. Someone with experience in Doctrine should take a look at this: maybe implementing this feature is not complicated and therefore, this is an arbitrary limitation in this bundle.\nI don't have time for this, so we'll need some volunteer. Thanks!. I haven't looked at this ... but if it's like you showed, indeed it looks like this could be implemented. We'll need some volunteer to take a look if this is true. Thanks!. I can't reproduce it, so we'd need more details to reproduce it. This is a screenshot of a real app using the latest version in master branch:\n\n. @MartianGreed thanks for creating this pull request for master branch. You did it great creating one for 1.x and another one for master, but given that the changes are identical (although in different files) we can close this pull request because we'll be able to make the changes in master if we merge #2590 in 1.x because we always merge 1.x in master. Thanks!. @MartianGreed to better understand why you need this feature: do you want to override the \"save\" label for all forms in the same way ... or do you want to use different values for each form?. @MartianGreed I've been thinking about this and I'm afraid I'm going to close this as \"won't merge\". Let me explain:\n\nYou are right ... in your app you want to customize the label of the \"Save Change\" button.\nHowever ... this button is a bit special in this bundle because it's hardcoded.\nIt's not a normal action, so it cannot be customized as the other actions.\nMerging this pull request would introduce a special case for this already-special action. That's always a pain to maintain in the future.\n\nAs possible alternatives I'd say you could override the action.save translation. That would be the easiest solution ... but you cannot provide a different text for each entity. In that case ... you may need to override one of the default templates and change only the block where this action is created, reusing all the other contents.\nI'm sorry my answer is disappointing ... but we try hard to keep things as simple as possible in this bundle to keep it maintained in the future. Thanks for understanding!\n. Let's close this in favor of #2598 ... but thank you @qporion for proposing this improvement, which in one way or another, will be implemented. Thanks!. Thanks Yonel.. We change the CSS of the main layout elements (sidebar, wrapper, content-wrapper, etc.) but the internal CSS should be unaffected. In other words, this JS datepicker is positioned using the inout field as reference and not the wrapper, so this shouldn't be a problem.\nPlease, can you check the styles that make the position be wrongly calculated? That way we could add some fixes if needed. Thanks!. I still don't understand why the .wrapper styles affect this. This popup should be positioned relatively from the <input>. The .wrapper styles (or the body styles, etc.)  shouldn't affect it. I don't remember performing queries like this in our code ... so maybe it comes from the paginator we use which is called Pagerfanta (https://github.com/whiteoctober/Pagerfanta)\nCould you please check if this comes from the paginator and in this case, could you please open an issue in their repo or investigate if there is some config option to remove this \"distinct\"? Thanks.. @KDederichs brilliant detective work! Thanks. I'd say we can enable the HINT_DISTINCT safely in our code. Would you like to submit a PR to do that? If you can, please send it to 1.x branch and I'll merge it in master too. If you can't, I'll do the PR myself. Thank you!. If the field is of type GUID and the search query matches an UUID pattern, this condition should match and the search should work:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/575671a54d1fc403752dba9ccb41318ddf763870/src/Search/QueryBuilder.php#L131\nI don't use PostgreSQL, so could you please debug around that line to see which condition is failing? Thanks!. Thanks Yonel. I merged it in 1.x.. @Nogrod if you have some time, please test this pull request. The only thing you have to do is to make this change in EasyAdmin's Webpack config and run yarn encore production to recompile the assets ... and see if your problems are fixed. Thanks!\n\n. @Nogrod thanks for reviewing. I'm going to merge this so it's included in the next stable version. We'll be on alert to see if it breaks apps for some users. If that's the case, I'm afraid we'd need to revert. Thanks.. @KDederichs thanks so much for discovering this problem, investigating why it happened, finding the solution and contributing the fix so all users can beenfit from it!. Thanks Yonel ... I cannot test this myself much, but hopefully @Pierstoval will do and he'll share some feedback. Thanks!. Thanks Yonel ... I cannot test this myself much, but hopefully @Pierstoval will do and he'll share some feedback. Thanks!. Nice catch, perfect explanation and great fix! Thanks Yonel.. @odolbeau I'm sorry about this. CSS grid may be a bit difficult to work with at first ... but it's the definitive solution to create grid layouts in CSS. In case you want to learn a bit about it, this article explains it super nicely.\nWe need the grid for the things we do ... but for a totally custom page like yours it's not needed. I'm drafting a feature to provide some page templates for needs like yours. Meanwhile, as a temporary solution, please add something like this in your section.html.twig template:\ncss\n<style>\n    .content-wrapper { display: block; }\n</style>. No, there are no plans to drop Bootstrap. And with the future roadmap of Bootstrap (in which they even plan to remove jQuery dependency) I see Bootstrap being used for many years.. To give some more context, guid database type comes from:\n\nhttps://github.com/doctrine/dbal/blob/92920ede68e1d16246712cd41318dd82bb72c015/lib/Doctrine/DBAL/Types/Type.php#L42\nhttps://github.com/doctrine/dbal/blob/master/lib/Doctrine/DBAL/Types/GuidType.php\n\nBut let's merge this to fix the other occurrences. Thanks Olivier!\n. As I explained in the pull request that introduced the last redesign, the design is inspired by https://dashboard.stripe.com. So I took their colors and changed the minimum possible so they still look very similar but they are not exactly the same.\nI use HSL because I find it better to work with. You \"lock\" the H (hue) component and then play with the S (saturation) and L (lightness) to create variations of the same color. I learned this from https://twitter.com/steveschoger. @lou-theo I'm sorry, but we don't intend to support any IE browser version. We use modern CSS and JavaScript features which are not supported on IE, so it's impossible to make it work.\nIn any case, we're not judging you or your project. We know sometimes certain apps must be used for some reasons. So using IE, even if it's legacy compared to other browsers, may be fine in your case \ud83d\udc4d. Guillaume, thanks for reporting this error and for fixing it perfectly!. Who would have thought that this is so complicated :(  Maybe we need to stop using Pagerfanta and use Doctrine's Paginator directly? (https://www.doctrine-project.org/api/orm/latest/Doctrine/ORM/Tools/Pagination/Paginator.html)  Maybe doing that we have the same problems but we need to fix them ourselves \ud83e\udd14\nIn any case, let's merge this. Thanks Yonel!. To be honest, I'm not sure about this. I still think that the number of queries in the backend is almost irrelevant. Let's wait a bit before making a decision. Thanks!. To be honest, I'm not sure about this. I still think that the number of queries in the backend is almost irrelevant. Let's wait a bit before making a decision. Thanks!. @emonin-web thanks! Although you are right, if we take a look at the data displayed in your article:\n\nThe \"before\" situation is: 56 queries in 106 milliseconds.\n56 queries may look a lot ... but 106 milliseconds is negligible to me (fun fact: the average human eye blink takes 100 milliseconds!).\nThe \"after\" situation is: 4 queries in 2 milliseconds. Great!\nHowever, the total page time went from 289 to 235 milliseconds ... so the time saved on the database was spent on something else!\n\nBeing super-pragmatic is what allows us to survive, so let's keep saying \"no\" to changes and features with not so clear benefits in practice :). @emonin-web thanks! Although you are right, if we take a look at the data displayed in your article:\n\nThe \"before\" situation is: 56 queries in 106 milliseconds.\n56 queries may look a lot ... but 106 milliseconds is negligible to me (fun fact: the average human eye blink takes 100 milliseconds!).\nThe \"after\" situation is: 4 queries in 2 milliseconds. Great!\nHowever, the total page time went from 289 to 235 milliseconds ... so the time saved on the database was spent on something else!\n\nBeing super-pragmatic is what allows us to survive, so let's keep saying \"no\" to changes and features with not so clear benefits in practice :). I'm going to close this ... although is not a definitive close. I prefer to focus first on other features that are more general-purpose and when those are completed, we can reconsider this. Thanks for understanding!. I'm going to close this ... although is not a definitive close. I prefer to focus first on other features that are more general-purpose and when those are completed, we can reconsider this. Thanks for understanding!. This was very high in my TODO list, so thank you for implementing it!\nI prefer the \u22ef icon because that's the most popular icon for this kind of thing and it's also the icon used by Stripe:\n\n. This was very high in my TODO list, so thank you for implementing it!\nI prefer the \u22ef icon because that's the most popular icon for this kind of thing and it's also the icon used by Stripe:\n\n. Yes. I can add de docs :). Yes. I can add de docs :). Another super nice feature! Thanks Yonel. I'll add docs (and maybe do some minor tweaks in a separate PR).. Another super nice feature! Thanks Yonel. I'll add docs (and maybe do some minor tweaks in a separate PR).. @seb-jean as Yonel explained, you have two options:\n1) Create a CSS file and redefine the value of those variables (that's why we created them as CSS variables and not SCSS vars). Then you have to include that CSS file in your layout with the config options given by EasyAdmin or overriding the layout template.\n2) You can fully embrace Webpack Encore and create a new SCSS or CSS file and import our variables.css (and variables.scss) into your own files and let Webpack compile the CSS file for your app. Then you have to include this CSS file as before (via a config option or overriding the layout template).\nThis is explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/design-configuration.html so I think we can close this. If you find any issue in the docs of any bug in the code, please reopen this with the error details. Thanks!. @seb-jean as Yonel explained, you have two options:\n1) Create a CSS file and redefine the value of those variables (that's why we created them as CSS variables and not SCSS vars). Then you have to include that CSS file in your layout with the config options given by EasyAdmin or overriding the layout template.\n2) You can fully embrace Webpack Encore and create a new SCSS or CSS file and import our variables.css (and variables.scss) into your own files and let Webpack compile the CSS file for your app. Then you have to include this CSS file as before (via a config option or overriding the layout template).\nThis is explained in https://symfony.com/doc/master/bundles/EasyAdminBundle/book/design-configuration.html so I think we can close this. If you find any issue in the docs of any bug in the code, please reopen this with the error details. Thanks!. Thanks for fixing this bug @dev-sl.. @IgorTimoshenko yes ... but we do that from time to time, not after every merge \ud83d\ude05  Thanks for understanding it!. Thanks Robert!. Thanks Robert!. @yceruto thanks for reporting this error! It's been fixed in https://github.com/EasyCorp/EasyAdminBundle/commit/2374f42eee24466ce687f09b739afdc310baa94d.. I'm not an expert in Symfony Forms ... but maybe this is fixed if you set the following at the beginning of your Twig template:\ntwig\n{% form_theme form with easyadmin_config('design.form_theme') %}. How strange. In my own apps I sometimes don't define any field, other times I configure everything and most of the times I only define the list of fields and rely on the automatic config introspected by EasyAdmin thanks to Doctrine metadata.\nWhich database are you using? And which EasyAdmin version?. @Glioburd No worries! These things happen \ud83d\ude03  Glad to see that this was not a bug on our side!. Thanks Yonel.. @rernesto when we introduced this feature, I knew some edge-cases would be unsolved. However, given that the value of the current config option is a property path and given that it can refer to a PHP method (which can literally do anything) I prefer to not complicate this anymore.\nIn your case, I propose to add a method getAvatarUri() or something like that to the User entity and use avatar_uri as the property path. Inside that method, you can hardcode the '/upload/images/user_profile' string or better, define it as a PHP constant inside the class ... and refer to that constant inside the Symfony configuration file.\nI'm sorry if this solution doesn't satisfy you ... but I hope you understand that we don't want to complicate things too much. Thanks.. I'm sorry but I haven't changed my opinion about this \ud83d\ude04  Things will work 99.999999% of the times you use the backend ... so you don't need a \"Entity saved correctly\" message everything you make some change. Most applications work that way: \"say nothing when things work; display useful error messages when they don't\".\nIn any case, the bundle is ready for \"flash messages\" ... template is ready, design is ready and messages will be displayed automatically if they exist ... but we won't add them ourselves ... for now (things could change in the future). Thanks for understanding.. @bozhidargyurov thanks a lot for your contribution to complete this translation! \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0442\u0438 \u043c\u043d\u043e\u0433\u043e\nNote: I changed the branch while merging (to merge in 1.x). That's why GitHub shows it as closed instead of merged ... but it's merged.. @hks thanks a lot for contributing these missing translations. I've merged it in the 1.x branch and I'll merge it in \"master\" branch later. Since I changed the branch while merging, GitHub displays it as \"closed\" instead of \"merged\", but it's merged. Te\u015fekk\u00fcr ederim. Yes, this is on purpose ... to avoid too-wide pages. But content has on the left and on the right some \"resize handlers\". If you click on them ... the page is made wider on the left, right or both. Also, this is controlled by CSS classes ... so if you are doing something custom, you could hide the resizers and apply the CSS classes directly to <body>.\nIf this doesn't work, tell us and we'll reopen this issue. Thanks.. @ArminVieweg thanks for your kind comments and thanks for your proposal!\nI'm afraid that for the moment I don't want to include this feature in the bundle itself. We always do the same for features that we don't think will be popular enough ... or for features we think are not that easy to implement.\nHowever, we listen to user's feedback continuously ... and change our mind if we receive enough feedback. For example, when we launched 2.0 we removed the responsive design for some reasons we thought were \"correct\". But as it happens often, I was wrong ... and we restored the responsive design soon.\nSo, this is not a definitive \"no\" ... we'll keep thinking about this. Thanks!. @Puerco-Potter yes, sadly this is one of the constraints of using YAML-based config (if this was purely based on PHP, reusing config would be easier). However, the good news is that YAML supports some kind of copy+pasting. They call it \"references\" and Symfony Yaml component supports them. See this article for some examples: https://blog.daemonl.com/2016/02/yaml.html\nI know that this is working because on Symfony's Slack, some people have told me that they use this successfully precisely to solve the same problem you mentioned here, so I hope it helps you too.. Good catch, thanks S\u00e9bastien.. I think there is a small error in this statement:\nphp\n!in_array(strtoupper($request->query->has('sortDirectory')), array('ASC', 'DESC'))\n->query->has('sortDirection') should be ->query->get('sortDirection'), right?\n. I think that this extra condition about the sortDirection parameter is not needed. Why? Because findAll() is called by listAction(), which passes to it the parameters from the Request ... and these parameters are safe because the initialize() method enforces their values thanks to the condition that you added above.\n. And you are right of course! In this controller everything is \"overridable\", so I should always take that into account. Thanks.\n. I have two comments about this change:\n1. This line should be moved outside the foreach loop to not repeat it for each field.\n2. I don't think that calling the quote() method is the right thing to do here. I've made some tests:\n| What the user typed in the search box | The result of quote() | The expected result |\n| --- | --- | --- |\n| foo' | 'foo\\'' | foo\\' |\n| %foo% | '%foo%' | \\%foo\\% |\nKeep in mind that the query is wrapped like this to do the full-text search: '%'.$searchQuery.'%'  This means that it cannot be quoted, we just have to escape the special chars in the context of the LIKE query.\n. Uste dut itzulpen hau ez da zehatza. In English is used as the title of the search results (1 result, XX results):\n\n\n. I didn't know this method, but looking at its source code, it looks like it's doing the same than us, but in a better way:\nphp\n/**\n * Gets the name of the single id field. Note that this only works on\n * entity classes that have a single-field pk.\n *\n * @return string\n *\n * @throws MappingException If the class has a composite primary key.\n */\npublic function getSingleIdentifierFieldName()\n{\n    if ($this->isIdentifierComposite) {\n        throw MappingException::singleIdNotAllowedOnCompositePrimaryKey($this->name);\n    }\n    return $this->identifier[0];\n}\n. Very nice catch! Thanks.\n. Good idea! I've changed it for $urlGenerator in 78ab378b9b43b062f0f4f11f85f17fb22a88f329\n. @xabbuh about the alignment, I know that 99% of developers don't agree with me, but I love to align (and sort alphabetically) the dependencies of the projects.\n@mmoreram sorry for bothering you, but could you please sort them alphabetically and add one additional white space before all semicolons (:) to turn this:\n\"sensio/framework-extra-bundle\": \"~2.3|~3.0\",\ninto this:\n\"sensio/framework-extra-bundle\" : \"~2.3|~3.0\",\nThanks a lot!\n. @stof, yes Service is a bad name, but I can't think of a better name right now :(\n@Pierstoval the problem with your proposal is that the FQCN looks a bit verbose to me: --\\EasyAdminBundle\\Configuration\\Configurator.\nLet's think about other alternatives.\n. @Pierstoval to be honest, everything about the Form component looks verbose and complicated to me, not only the FQCN.\nI don't like the EntityGenerator class name because it's too long and this project will probably never add support for Doctrine ODM, Propel, etc. The reason is that there are already good admin generators that support all of that, such as AdmingeneratorGeneratorBundle\n. In other cases, I would agree to reuse the existing code instead of reinventing it. However, there are three main reasons why I don't like this DoctrineOrmTypeGuesser class:\n1. It calls the method to get the class metadata. If you don't use metadata cache, this introduces yet another performance penalty for no reason.\n2. I find it lacking for some types. For instance, json_array and simple_array types would be displayed with text form field instead of the more natural textarea and collection.\n3. It looks more complicated than it should be, with those \"guess probabilities\".\nMoreover, there are two arguments in favor of using our own custom (and simple) solution:\n1. It requires zero maintenance because new Doctrine types are very rarely added.\n2. It will allow in the future to use our custom form fields. In my opinion, Form component is very lacking of form field types for real-world applications. In the future, I'd like EasyAdmin to provide what people expect from a Form component: dynamic datetime selects, color pickers, WYSIWYG textareas, dependent select lists, multiple files uploader, etc.\n. Yes. In my case it was a 23% performance increase and thousands of less function calls:\n\n. Double ?? at the end of the sentence?\n. Excellent catch! Thanks.\n. I don't know if Symfony validates this value, but the target-language value for Italian should be it.\n. No, because there is no edit button. There's only the \"Edit\" action label in the listing rows and the \"Save Changes\" button in the edit page.\nRight now I'm preparing a massive update of labels and titles for all actions and pages in all languages. Stay tuned!\n. You are right. That was a copy+paste leftover. I've just removed it. Thanks.\n. Strictly speaking you are completely right. But I prefer if the field metadata options are consistent and the same for every action. We don't need this option in actions different from list, but maybe some developer wants to do some advanced stuff with it in his/her own customized backend.\n. I love these small quality improvements! Thanks.\n. You both are right. This is not needed at all. Thanks.\n. You are right. I'll create a new PR with lots of new tests.\n. Fixed. Thanks.\n. I've changed it here: 982f401 Let me know if it's better that way. Thanks.\n. Indeed I think it may be too intrusive.\n. You clearly spotted a dirty hack here. I've refactored it in 0e529b6 and I think now it's a cleaner and safer solution.\n. Fixed. I can't believe I committed this monstrosity!\n. I don't know if that would fix the problem.\nWhen the user configures this:\nyaml\nactions: ['delete']\nThey are in fact defining this:\nphp\n$customAction = array(\n    'name'  => 'delete',\n    'type'  => null,\n    'label' => null,\n    'class' => null,\n    'icon'  => null,\n);\nAnd the default delete action configuration is:\nphp\n$defaultAction = array(\n    'name'  => 'delete',\n    'type'  => 'method',\n    'label' => 'action.delete',\n    'class' => '',\n    'icon'  => 'trash',\n);\nThe resulting action configuration should be:\nphp\n$result = array(\n    'name'  => 'delete',\n    'type'  => 'method',\n    'label' => 'action.delete',\n    'class' => '',\n    'icon'  => 'trash',\n);\nI guess you suggest to do this:\nphp\n$result = array_merge($defaultAction, $customAction);\nBut then the result wouldn't be what we expect.\n. Good point. In any case, I will soon fix this ID hack which I absolutely hate.\n. The link of your comment doesn't work for me. Are you suggesting to switch the first and second levels?\n. Understood. You are right and I've just fixed it. Thanks!\n. I don't really know if that would be better. I always use the IN clause to do \"a query within an array of values\" but here the exact_value is just one simple string. Do you think it's better to use th IN clause? Would it work without problems in PostgreSQL?\n. I've just updated the code to use IN clauses.\n. You are right. done in 306ae3c. Thanks.\n. A very nice catch and great suggestion! I've just updated the test to use #. Thanks!\n. But this can only be an integer, right? It's the numeric index of a plain PHP array. The user cannot do anything to modify this value, so we always get an integer or a string.\n. OK, you are right. It's better to change it to is_numeric. Done in e2dd77c70da80cfb05758df0285eae241b80ff5f\n. You are right. But right now the function is only executed once when you load a page and whenever you resize the browser window (which is not very common). I think we're safe here.\n. Sadly this doesn't work for me. The admin route is defined, but the prefix value is ignored :cry: \n. Please forget my comment! It works perfectly if you do the things right.\n. That's a limitation done on purpose :)  Your use case is very \"edgy\" for us because embedding one backend inside another backend is out of the scope of this bundle. You can probably set up a listener that checks if the given URL should be served by EasyAdmin or the other backend. Fortunately our URLs are very recognizable.\n. How hard would things break if we rename admin route to easy_admin? Probably it's something we can do without causing much trouble.\n. @Pierstoval it's a catastrophic BC break because some backends no longer work ... but fixing it takes 5 seconds: you have to change 1 word in 1 method in 1 controller.\nNow that we are small we could do this change. Later, if we grow, it will be impossible :(\n. Right. I don't like to make the route name configurable.\n. Currently this method is not used, so we can remove it for now and add it back later when needed.\n. @Pierstoval the reasons are perfectly explained by @ogizanagi: first, I don't know how to do it. Second, in this case it's not that relevant to use the entity name and entity id (this is the help message of a particular form field, not a general page title).\n. @Pierstoval what I've done is to update the show template to not apply the trans_parameters variable. This ensures that the behavior is consistent in the entire backend.\n. I prefer to use array() as the default value instead of null. With the current code, the parameters property is always properly initialized. Keep in mind that this property corresponds to the Twig template parameters, so I think it's better to pass an empty array.\n. Because I want to display a beautiful and useful error page instead of the default Symfony exception page.\n. Nice addition! Thanks for the suggestion.\n. This code is much better. Short and sweet. I love it. Thanks.\n. Good point! Fixed. Thanks.\n. You are right. This logic contained some errors. It's been fixed in 5b7f4a76bf75d0c3a06ccb890e70b16e22303326\n. Awesome catch! Thanks.\n. Nice catch! It's fixed in https://github.com/javiereguiluz/EasyAdminBundle/commit/6110c5ad0289d17876f0ffba78e820e49fae997b.\nSomeday you and @Pierstoval will explain to me how do you manage to catch these errors :)  Thanks.\n. I've made some changes. I'd appreciate if you could review it again. Thanks!\n. Adding 0 is a trick to convert a numeric string into its numeric counterpat, no matter if it's an integer or float. There is no single PHP function to do this (you must combine intval(), etc.)\nIf we don't add the 0 and the search query is 56 for example, this is the query I get:\n\nIf we add the 0 and search again 56, this is the query:\n\n. You mean:\ntwig\n{% block flash_messages %}\n    {{ include(_entity_config.templates.flash_messages) }}\n{% endblock %}\n. Good point! Changed. Thanks.\n. But couldn't we require the entire framewrok in the require-dev section? If you are a regular user, you don't get the entire framework ... but if you are advanced or want to run tests or whatever, you get the full framework. To me this makes sense, but I'd liek to know your opinion.\n. Because I took the first screenshot with another pull request. This is the right screenshot when no 0 is added to the numeric query:\n\n. The doc is clear ... but it doesn't work like that for me :(\n. To be completely honest, when a Twig snippet (even it it's short) includes several ternary operators, I find it a bit confusing. You are of course reducing duplication ... but (in my opinion) at the expense of code readability.\nI'm curious: what would you think of the following alternative version?\ntwig\n{% if value == true %}\n    <span class=\"label label-success\">{{ 'boolean.true'|trans }}</span>\n{% else %}\n    <span class=\"label label-danger\">{{ 'boolean.false'|trans }}</span>\n{% endif %}\n. Sure! Fixed.\n. Can we simplify this instruction by the following?\ntwig\n{% if form.parent.vars.allow_delete|default(false) %}\n. You are right! Fixed. Thanks.\n. Regarding alignment, I prefer that a human decides whether we should or should not align. In this case I don't mind, but in others (this one for example) I'd prefer to not \"unalign\".\n. I haven't tested it. Deprecation messages should be gone by now. Anything else we should do to achieve this compatibility?\n. I thought a bit about that and I have the same questions. Showing the null template is convenient ... but since this is a rare advanced use case where you want to customize the rendering, I guess you ALWAYS want to use that template, regardless of its value. So for now, let's maintain this behavior. Thanks for reviewing and commenting on this.\n. If I'm right, that old format cannot happen because of the way we parse and configure the template paths.\n. could you please tweak this condition so we install this dependency only when analyzing the code coverage?\nif [[ \"$skip\" != \"yes\" && \"$SYMFONY_VERSION\" == 2.7.* ]]; then composer require --dev satooshi/php-coveralls:~0.6; fi```\n. Much better! I've changed it.\n. Because relative URLs only work inside GitHub.\nWhen you download this project to your machine, these relative URLs no longer work. Besides, in some external websites these relative URLs don't work (they work on PAckagist but not on KnpBundles.com). Absolute URLs are ugly but they always work right.\n. I need to investigate this further. With the false value, the tests failed, even when using enableProfiler() method. With true everything works.\n. I agree with you. It's much better/simpler to do that. Changed. Thanks.\n. Yes. But for now, I prefer not to add that configuration option.\n. Sorry, I didn't understand you then. What attribute are you thinking about and how would it work?\n. In https://github.com/javiereguiluz/EasyAdminBundle/commit/3aabf5bfcc149d5f4e808e8612a043b6c34a1a2c I implemented your idea. I like it a lot! Thanks.\n. Done here: https://github.com/javiereguiluz/EasyAdminBundle/commit/758f2f34ec784538558601a05c9614a695428458\n. According to @ogizanagi we can simplify form.vars.allow_add as allow_add\n. I neverliked the name of this variable (add_item_javascript) because it looks like you are adding an item called \"javascript\". What about js_add_item, add_item_js, js_code_add_item or something like that. Any other proposal?\n. Just asking: should this new srevice be private?\n. Just asking: should these three new services be private?\n. OK. Thanks! I'm going to merge this now and then we'll tweak anything if needed.\n. Fixed. Thanks.\n. I was creating it at runtime. Not it's created at compile-time. We'll review this when we allow to configure this value (it depens on the menu configuration system that will be completed someday).\n. Sorry. Done. Thanks.\n. Shouldn't we remove ClassMetadataInfo because of this comment? https://github.com/doctrine/doctrine2/blob/2.3/lib/Doctrine/ORM/Mapping/ClassMetadata.php#L25\n. Much better. Done. Thanks.\n. Fixed. Thanks.\n. I'd say that this is irrelevant because it's a very minor BC break. But just in case, I've added a note in the UPGRADE file: https://github.com/javiereguiluz/EasyAdminBundle/commit/41204b58b01ea8003a58cc55f694b54b7ba1561d  Thanks!\n. It was still WIP. I'm about to submit the definitve version.\n. $templating should be typehinted with Symfony\\Bundle\\TwigBundle\\TwigEngine right?\n. You are right. Done in 926f361. Thanks.\n. yes! Done. Thanks.\n. In this case, I think that getting an element via the id two times is \"better\" than creating a temporary variable.\n. @Pierstoval because it was inlined previously in this same template.\n. I agree. Done! Thanks.\n. Following the comments of @ogizanagi, in ddd990e I've refactored everything to make it even more agnostic. This can be useful for the future, when we edit via Ajax more than boolean properties.\n. Done.\n. I've changed it by: The type of the \"%s\" property is not \"toggle\"\n. Good catch. Updated. Thanks.\n. Correct ... but if we hide the <select> without disabling them ... their values will be sent in the <form> and we don't want that.\n. You are right again :smile: There is no need to require the VarDumper. We'll use it if it's available. Regarding the suggest section, I prefer to not use that section because I think it's useless.\n. Because the var_export() solution looks more elegant and simple (and the result is the same).\n. Good idea. Done, Thanks.\n. Thanks for this super nice catch! Fixed in https://github.com/javiereguiluz/EasyAdminBundle/commit/268917795711cd6eb53b4fa2462793dd70b73f08  Thanks!\n. Nice catch! Fixed. Thanks.\n. I don't understand this proposal. I'm afraid that my Travis skills are limited.\n. These are really bad news :sob:  I'll add that BC layer then.\n. Nice catch. Fixed (with a markTestSkipped for 2.3).\n. Yes. I know we should remove this test. I maintained it because we are doing the transition and I wanted to be sure that it works as we expect.  Should I remove it this very same pull request?\n. overriden -> overridden\n. Nice catch! Updated.\n. I definitely need some holidays! That dependency was meant for another project I was developing yesterday. Now I'm not sure if I'm mixing commits across projects :sob: \n. Good catch! That's exactly what I wanted to write :)\n. To be honest, I added this option because I don't know how to get the field type inside a form theme. Since you know the Form component so well, you may know a better solution for this problem.\n. And the same goes for field_help ... maybe there is a better way to integrate it with the Symfony Form's help property.\n. @ogizanagi I have a question about this change:\ndiff\n-{{ attr.field_css_class|default('') }}\n+{{ attr.class|default('') }}\nWe configure CSS classes using our custom css_class option instead of Symfony Form's default attr thing. Will our CSS classes keep working after this change?\n. OK. Shouldn't be easyadmin.field.css_class instead of easyadmin.field.class\n. You are right. It must be easyadmin.field.class. However, this CSS class was applied in multiple places. However, we should only apply it in the row of each widget. That's the only option to tweak both the row (to display forms in two columns for instance) and the widget itself (<input>, <textarea>, <select>, etc.)  I've done those changes in 500b66a\n. We'll probably re-enable the PHP CS checker in Travis soon, so I prefer not to mention this tool.\n. Because it was \"wrong\" in the first place. I'll refactor all the tests because now we can focus on testing small parts of the config. Hopefully this prevent the massive test fixture update when doing some config change.\n. We are lucky because we don't have to make a decision: we use the Symfony coding style ... so that means we must use the inline style :smile: \n. Changing the original entity name always scares me. I prefer to maintain it untouched. We may even remove this strtolower() call. The result will be uglier of course ... but leaving user-defined values \"untouched\" is usually safer (for us).\n. You are right. Updated. Thanks.\n. Indeed. Removed. Thanks.\n. You are right again. I've simplified this and I've also removed the unused Tests/CommonPhpUnitTestCase.php. Thanks.\n. @xabbuh I agree with you. If you don't know what you're doing, that's a bad practice. I've changed it in 76d9601.\n. There's a minor issue here: target-language should be ro instead of en\n. Right. Removed. Thanks!\n. Very nice catch! Fixed. Thanks.\n. Another nice catch. Thanks for the review! Fixed.\n. It looks like an error, but I did this on purpose.\nThe Delete button in normal forms now looks \"dimmed\", so it doesn't distract the user:\n\nWhen clicking the Delete button, the modal window appears and there the new Delete button displays the usual red color to convey the danger of the action:\n\n. I agree. I've changed it 15416db. This is the only way I could make it work for every combination (edit/new forms, horizontal/vertical themes, etc.)  But I'm not sure about it. Could you please review it? Thanks!\n. I prefer to not add a YAML option for this. Few people will change this.\n. Good catch. I'll propose a solution for this and my guess is that it will simplify the Twig extension too. Thanks!\n. Thanks! That fixed it.\n. Good catch. I totally forgot. Fixed.\n. I agree with you. Changed it. Thanks!\n. Super nice catch! Fixed. Thanks for reviewing this awfully long pull\nrequest.\nOn Sun, Jan 24, 2016 at 5:02 PM, Maxime Steinhausser \nnotifications@github.com wrote:\n\nIn Configuration/ActionConfigPass.php\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/832#discussion_r50637431\n:\n\n\n}\n  +\n/**\n* copied from Symfony\\Component\\Form\\FormRenderer::humanize()\n* (author: Bernhard Schussek bschussek@gmail.com)\n*\n* @param string $content\n*\n* @return string\n*/\nprivate function humanizeString($content)\n{\nreturn ucfirst(trim(strtolower(preg_replace(array('/([A-Z])/', '/[\\s]+/'), array('$1', ' '), $content))));\n}\n  +\nprivate function reoderArrayItems($originalArray, array $newKeyOrder)\n\n\nTypo (s/reoderArrayItems/reorderArrayItems).\nAlso shouldn't $originalArray be typehinted as array too ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/832/files#r50637431\n.\n. @yceruto you are right about everything you say here ... but this is \"impossible\" to fix for us. So for now, let's stick with this limitation: when you click on a related entity, you see the first configured entity of that class. It's not perfect ... but it's not entirely wrong either.\n. This defines the maximum number of fields to display ... so the default number can't be 0 but \"infinite\" ... thus the PHP_INT_MAX value ... which is later used in if (count($filteredFields) > $maxNumFields) { ... }\n. Not a bug ... but a bad practice. I'm biased towards using null for default values ... but code is better and cleaner when using sensible defaults.\n. I've been reviewing this again and this problem has no solution. Inside the Twig extension we only have the information provided by EasyAdmin config and Doctrine introspection. There is no way to get the entity name (or any other info) of the related entity. We only have the FQCN of the related entity, so there is nothing we can do here.\n\nThe only way to solve this is to add some config option. @Pierstoval proposed augmenting the syntax of type option, but I agree with @yceruto here. Anyway, since this issue won't break the backend and it's an edge case, I propose to leave it as \"won't fix\" for now.\n. I like your idea!  This is how it looks now:\n\nThanks!\n. Yes ... but in the docs we no longer promote it. It's better to use a proper template name or path and avoid this small magic.\n. I've introduced the deprecation in 19b2544 and 15ddbdd.\n. Looking at the previous condition, I wonder if we could just change this by:\ntwig\n{% if item.type == 'empty' %}\n. Good catch! I'm going to do some changes in a separate PR. Meanwhile, let's merge this change.\n. Typo: iiles -> files\n. typo: Entity -> entity\n. Yes ... but I want to propose improvements for the search view in a separate PR. It will be compatible but more powerful than this.\n. You mean for your own form types?\n. It's not possible :(  (I don't want to add a configuration option for that ...at least not yet)\n. I don't know if there is a way to do this automatically. Sonata does it manually too: https://github.com/sonata-project/SonataAdminBundle/blob/master/SonataAdminBundle.php#L48\n. It could be possible to do it automatically ... but it would be too magic. In the compiler pass we could get all the services tagged with form_type and get their getBlockPrefix() result to map short types to FQCN. But it would only work for types as services (which is not mandatory). Let's reconsider this solution in the future.\n. This change doesn't look right. Keep in mind that we define both the entity name and the entity label. There are two parameters that can be used in the translation: entity_name and entity_label. This change would make both parameters to store the same value.\n. Much better indeed. Changed. Thanks.\n. Fixed.\n. Correct. Changed!\n. I'd prefer to keep them separated ... but you are right and we can remove some lines of the tutorial code. I've done that. Thanks!\n. I agree. Much better that way. Updated. Thanks!\n. I explain it later (https://github.com/javiereguiluz/EasyAdminBundle/pull/1024/files#diff-a93195814c30aadd5d54816adefb0d63R55). This is because I reworded some things and now the order of explanations is weird. I'll reword everything again. Thanks.\n. Much better indeed! Done. Thanks!\n. You are right of course. But for now I0m trying to make the simple hardcoded example to work. Once I get this, I'll think about that. I will probably reuse the search feature to look for on any entity property unless the user configures some property explicitly.\n. I'm going to try your proposal. Thanks!\n. Yes. I'm using that example. But I couldn't make it work. It looks better now. Thanks.\n. I'm not sure about adding that option. But in b68c0d5 I've changed things so we use as limit the value of the list.max_results config option. Hopefully this will provide a more consistent experience.\n. I don't understand the code ... and I don't understand either what you are discussing about :confused: Anyway, I trust both of you so I'm sure you'll do the right thing. Thanks!\n. That was a leftover of my first tests. Nothing worked right until I added this. But I guess now we can remove it.\n. \ud83d\udc4d yes! This was exactly the error. Everything works again after this change. Thanks @ogizanagi.\n. We no longer load JS scripts in the closing body tag \ud83d\ude04   We changed it here: https://github.com/javiereguiluz/EasyAdminBundle/pull/1073 \n. @yceruto I have a question about this comment. I don't really understand it: // settings inherited options  Could you please explain it to me? Thanks!\n. As soon as it's feasible I'd like to switch Doctrine Cache by Symfony Cache. That's why I though it was a good idea to create this custom class to make the rest of the bundle independent of the specific cache. Besides, we are using the Doctrine Cache library instead of the bundle, so there are no services for cache and we would need to create a service for Filesystem cache.\n. I agree! Renamed it. Thanks.\n. I'm not sure about this translation because \"toggle\" means \"to enable if disabled or to disable if enabled\". I know it's hard to translate it into French, but what about Activer/d\u00e9sactiver la navigation ?\n. I thought about that ... but strictly speaking it's not mandatory to extend from the default AdminController ... but I'm going to add that check to the method which calls initialize() if it exists. Thanks for your comment!\n. Nice catch! In 3cc25bc I've added an initialized property which prevents this. \n. I remember having lots of problems related to this: https://github.com/javiereguiluz/EasyAdminBundle/pull/1149 and https://github.com/javiereguiluz/EasyAdminBundle/issues/1129#issuecomment-217548679\n. The Resources/meta/ dir was the original location recommended by Symfony ... but here we are only talking about CSS and JS libraries. In fact there are no LICENSE files .... just a few CSS/JS comments at the top of the files located in Resources/public/\nAnyway I'm not sure about this message. Maybe it's better to remove it and let the user guess where the licenses are. And by the way, everything is MIT, so there are no surprises here :)\n. Thanks for the review! I've done all the proposed changes ... except this one. Do you know how could this be solved in a different way without complicating the code much? Thanks!\n. It worked like a charm! Thanks for your priceless help \ud83d\ude47 \n. Actually PHP-CS-Fixer made those changes \ud83d\ude15 \n. @yceruto your comment clearly shows that removing this line shouldn't break anything because a bit later we have a very similar check. So I'm going to merge this as is. Thanks!\n. You are right ... but in this case the quotes are optional ... and in most examples similar to this one we don't add the quotes, so it's better to be consistent in the docs.\n. \ud83d\udc4d you are right ... I'm going to remove some of these default filters\n. Thanks to your last changes this is no longer the case: https://travis-ci.org/javiereguiluz/EasyAdminBundle/builds/175469118  The code coverage job seems to be out of the main job matrix again.\n. I agree with you. Let's display an error message instead of hiding the underlying error. I'm thinking about something like this:\ntwig\n{% is easyadmin is defined %}\n    {{ include(easyadmin.entity.templates.label_empty) }}\n{% else %}\n    ERROR: The 'easyadmin' variable is not defined in your form template ...\n{% endif %}\nBut I need help deciding which error message to display: it should explain (very briefly) what's happening and how to solve it.\n. Thanks for the insights \ud83d\ude47. We'll wait a bit to get more information about #1368 then.\n. Well spotted! I'm going to translate that later in another commit. Thanks!. Thanks!. I don't know why we used position: absolute, but if we remove it, the design changes slightly:\n\nI don't care about that minor change ... but I don't understand either why you see the asterisk at the bottom of the label. I also don't understand why we need the display: inline style. That would be the default value in this case, right?. No, it's OK. Let's leave it. But I still don't understand how can you see the asterisk at the bottom \ud83d\ude05 . Because in the array of possible templates, some values are null because we use a isset(...) ? ... : null condition.. But I've just checked and it's OK to pass null to exists(...) so I'm removing this condition.. Will it cause problems for someone doing weird things? (not storing the templates in the filesystem) ... or should we forget about those edge-cases?. It looks like this phrase hasn't been translated.. I don't know... But the error message looked related to this. Do you think we should solve this differently? Thanks. You are right. I've been thinking about the \"data structures\" that we must introduce to simplify everything. But we'll need to do that for the next major version of the bundle.. Yes, we always do that in Symfony docs ... but this bundle doc is much less important and popular than Symfony, so let's keep it simple. Thanks!. Thanks! I'm struggling with this. I'm going to remove PHPUnit and use Symfony Bridge only.. We had some problems in the past when we didn't cast to int ... I don't remember ... maybe some issue with super old Symfony versions.. Thanks for the heads up! You are right. I've fixed it using single quotes, which is what we use in Symfony Docs. Cheers!. I think here we want the use of empty() to take care of empty strings. If you put dql_filter: '' in your YAML config ... this will add ->andWhere('') and it will fail, right?. To be honest, I don't know why we added empty($sortDirection) || in the first place. If it's null, it should be DESC, if it's empty string it should be DESC, if it's not ASC or DESC, it should be DESC ... so maybe !in_array(strtoupper($sortDirection), array('ASC', 'DESC')) is enough?. I've looked for and sadly it's legal. If you set dql_filter to null or an empty string, it's not applied but no exception is triggered. We even have a test for that. The reason is that sometimes you want to filter list but no search, so the solution is to set dql_filter to null or empty string in the search view only.. The %s is deprecated... -> The %s method is deprecated.... Minor typo: ...in 2.0 veresion -> ...in 2.0 version. In addition to the normal preXXX() methods, we need to update the executeDynamicMethod() and check if the user is executing a preXXX() method to trigger the error message in that case too.. Instead of redirect() we can use the shortcut redirectToRoute(). In case list is allowed, we can redirect directly to the referrer URL instead of building it again, yes?. We recently fixed a bug where custom query params weren't saved. People often add custom params and now we maintain them continuously, from the list view, to the actions shown in list, the buttons of the edit/new views and back to the original list view. Moreover, we use certain params to store the sorting and with this code that would be lost.\nI propose you the following. Let's extract the query string from the referrer URL and let's overwrite just the action query string param to redirect to edit or new.. The policy of this bundle is to never display messages when things work (because that's the normal case); only when they fail. So let's remove this confirmation messages. By the way, the workflow you designed makes a lot of sense, so redirects will always be common sense and the user won't be lost.. My only remaining question about this is: why do we need to add an id query param in the case of new? Can't we just make this?: 'id' => $this->request->query->get('id') In new, the id query attribute will be null and that's OK in this case, right?. I understood your code wrongly. This looks OK to me!. You are right! My text editor showed it in a very light grey, so I didn't see it \ud83d\ude48 . @hason I'm sorry! Do you think it's solvable with some simple code ... or should we fix it differently:\n\nFirst maintain this check to look into existing templates\nIf it doesn't exist, use the $this->twigLoader->exists(...) check as before (to not break BC).\n\nThanks!. I know inline styles are generally discouraged ... but this is just used once and it's a very edgy edge-case ... so creating a CSS class looks too much to me.. In the original bundle they do differently ... but they don't have the same features as we do. See https://github.com/dustin10/VichUploaderBundle/blob/86aca89442e061d1d3885847225a050e3d6b1368/Resources/views/Form/fields.html.twig#L34-L39. Yes ... but in this case I'm afraid it's not possible. There's no upgrade path for this option. You must remove vertical and/or horizontal. Otherwise you'll see an exception when using 2.0 version.. You are right! Thanks for your warning. I've added more deprecation messages ... but I need to be careful to only display them if the user actually wrote that form theme path. We transform null into the deprecated path ... so we shouldn't display the deprecation message in that case. I need to take a look at that.. According to MDN this is a bad idea for accessibility :(  https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#Buttons\nLet's use a plain <span> element instead. Thanks!. Actually, I don't want to show this icon because it looks dated and not very great (most FontAwesome icons look great, but I don't like this one at all). Also, saving is the main action so it's OK to not display an icon (it's the only button highlighted by default). And if sometimes someone really needs to display some icon in this button, t's possible to do that via config. Thanks!. I've lowered it from 0.20 to 0.15 \ud83d\ude48 . Yes!! This solved the issue. Thank you.. Yes ... sadly I needed to remove it to not have to deal with the translation of this message dynamically in JavaScript \ud83d\ude22  I propose to keep it like this for now ... but I'll listen to user's feedback in case they think this feature is missing from the batch actions. Thanks!. Maybe we could add array too?. Please, can you explain to me where does this value come from? It looks arbitrary ... but I'm sure it has some reasoning behind it, so I'd like to know. Thanks.. ",
    "lyrixx": "I don't know ;) Feel free to close this PR if it does not match.\n. @TheCelavi replace entity by module do not increase security. I did not test it, but I think you can use the name you want. It could be something else than your entity . Did you try something like that  ?\nyaml\neasy_admin:\n    entities:\n        foobar: # <- change this name\n            class: App\\Entity\\Customer. IMHO, this is still easy, if you choose convention, it add only one line of code (template: foo/bar.html.twog)\nFor the record, simple !== easy . I never had to deal with firewalls.<current>.switch_user.parameter :/ How can I do to fix your issue?. Typo: impersonnalisation. Thanks. I will try to find some time to achieve that. . But before that, I would like a :+1: about the feature.. ",
    "Pierstoval": "The homepage could also be a dashboard with statistics.\nWhat about having a dynamic homepage option:\n``` yml\nconfig.yml\neasy_admin:\n    homepage:\n        type: controller\n        resource: \"AppBundle:Admin:homepage\" # A complete render(controller())\n```\nOr this :\n``` yml\nconfig.yml\neasy_admin:\n    homepage:\n        type: template\n        resource: \"::admin.html.twig\" # a simple \"include\"\n```\n``` yml\nconfig.yml\neasy_admin:\n    entities:\n        'Active Clients':\n            class: AppBundle\\Entity\\Customer\n        'Pending Orders':\n            class: AppBundle\\Entity\\Order\n        'Inventory (2015)':\n            class: AppBundle\\Entity\\Product\n    homepage:\n        type: entity\n        resource: 'Active Clients' # or any key from the \"entities\" array\n```\nWhat do you think ?\n. Was thinking about some other features for the \"Controller\" option I mentioned above:\n``` yml\nconfig.yml\neasy_admin:\n    homepage:\n        type: controller\n        resource: \"AppBundle:Admin:homepage\" # A complete render(controller())\n```\nWe could add a param option that will have 2 options : render for using render(controller()) in the EasyAdmin template, or override that will completely override the AdminController. This can be done with a simple kernel.request or even kernel.controller listener, depending of what suits the best for this behavior.\nThis would allow developers to create a controller with multiple actions integrated in his own templates, and best of all, it will rely only on the masterRequest, and will not create a subrequest. \n. I made a first test commit for this feature, here : 507261c9\nTomorrow I'll add a third parameter, \"params\", which will allow the user to either choose between \"render controller\" or \"forward controller\", which is quite different. By default, \"forward\" shall be used.\nDo you think it to be good ?\n. I made a first test commit for this feature, here : 507261c9\nTomorrow I'll add a third parameter, \"params\", which will allow the user to either choose between \"render controller\" or \"forward controller\", which is quite different. By default, \"forward\" shall be used.\nDo you think it to be good ?\n. Same as @nicolaskern for testing, I got a \"big\" app which is still in development, so I'm glad to test it in real conditions :) \nSorry for being such enthusiastic, I admit I may not realize yet all the big goals of developing such an inovative app :wink: \n. Same as @nicolaskern for testing, I got a \"big\" app which is still in development, so I'm glad to test it in real conditions :) \nSorry for being such enthusiastic, I admit I may not realize yet all the big goals of developing such an inovative app :wink: \n. @javiereguiluz The people I work with/for are familiar with dashboards, mostly for statistics. This is why I wanted to implement it, especially with a \"controller\" parameter that allows me to create \"dashboard controllers\" depending on the different apps.\nNo problem, we'll wait for this bundle to be more used to think about it, but I hope the issues/PR won't be closed before this time ;) \n. It's because the proposed feature has never been implemented.\nDid you really read the issue?\n. Nice one ! I'll be glad to contribute ;) \n. I'm currently working on translations.\nWith my translator I can extract both in XLIFF and YML format, but I have to be sure : is there a particular reason for you to prefer XLIFF instead of more readable YML format ?\n. @javiereguiluz No problem, was just questioning, then I'll dump them in XLIFF :smiley: \n. Voil\u00e0 ! Tell me if any word or behavior is unexpected or incorrect :smile: \n. Is this issue \"closed\" after the different commits ? \n. In the upcoming commits & releases, there'll probably need some more translations, I'll try to check it all in my tests, and make a \"global\" modification when needed.\n. Or else, if you use the bundle inheritence system, you could also use blocks in twig, in order to add/change some elements. I'm thinking about banners, brand pictures or footer, or even changing the Icon's user with a gravatar one, etc.\nAll of these could be in classic twig blocks, or even variables (but maybe less \"clean\") , so in your inheritence system you can have a \"layout\" twig template that extends a \"design\" template (or vice-versa) , the last extending EasyAdmin base layout. \nI hope I'm not too confusing :stuck_out_tongue_closed_eyes: \nEDIT : As an addition, why don't use a simple easy_admin: { layout: AppBundle::admin_layout.html.twig } structure, and provide the skeleton in the documentation, to help people position the twig blocks whereever they want ? They could then use their own javascripts, css, etc. ?\n. If you only want to change the color scheme, then this method is probably the best, for sure.\nBut there's no need to make the AdminController heavier than it is, just create an \"AssetsController\" to handle these routes :laughing: \nThe color scheme does need some documentation, by the way\n. I'm coming back in this issue:\nWhy don't you set all the colors directly in the css files, and then if there are some overrides in the color scheme, add them in a <style> tag in the head?\nI mean, for example, you keep your badge colors in the css at first.\nNext, if the user sets the badge_color under the color_scheme param, then you just add it in the view like this:\ntwig\n<style type=\"text/css\">\n{% if config.color.scheme.badge_color %}\n    span.badge { background-color: {{ config.color.scheme.badge_color }}; }\n{% endif %}\n</style>\nI know it sounds heavy in terms of code, but it's slightly lighter than creating a new controller...\n. I asked my team about this issue, and in fact, both developers and html/css integrators agree with the fact that the assets override feature you already implemented is really sufficient, because you can inject a single css file to completely change the backend look. The other lead-dev also added that any developer using EasyAdmin knows how to inject css and how to change the back-end look, whether he knows the best practices or not. He'll simply search for the css selectors with \"firebug-like\" tool to override it in his own, and if he doesn't, a front-end specialist will do it.\nI think that some code lines in the design section in the docs might be enough to give the developer the css selector he needs, but IMO and in my colleagues' opinion, what EasyAdmin already provides is really enough.\nHope it might help ;)\n. May I come back on this issue for more discussion ?\nI've been looking at what is possible to ensure layout customization is easy.\nAnd what I saw when talking about colleagues about customizing EasyAdmin's backend is simple : layout override. \nThe layout override is the most used way of changing the design, and right now we don't have the possibility to do this.\nI've been thinking about adding a new template layer to our layout, just by using the twig blocks system.\nHow to do it ?\nEvery view extends the logical_layout, in which we have all must-have elements in the admin layout (such as navbars, assets). This logical_layout extends a skeleton_layout, in which we ONLY have the html \"top-frame\" code, and all the blocks names we want to use and that will be filled by the logical_layout.\nThen, we use a simple request listener like the one on Orbitale CmsBundle : we inject the layout configuration (parsed with the Configuration and Extension classes), and the logical_layout extends this configured layout, still like in Orbitale CmsBundle's views, but in EasyAdmin we put this dynamic extension inside the logical_layout in order to show the navs and assets we need.\nThen, a simple documentation chapter might tell the developer how to customize his back-end, and the advantage we have is that the proposed default layout will be so much a skeleton that the developer will only have to copy/paste it inside his own layout.\nI start to think that back-end design shouldn't be changeable in configuration, but instead should be configurable directly inside a twig template, even if this one only contains variables setters like classes and colors by using Twig blocks.\nWhat do you think about this?\n. May I come back on this issue for more discussion ?\nI've been looking at what is possible to ensure layout customization is easy.\nAnd what I saw when talking about colleagues about customizing EasyAdmin's backend is simple : layout override. \nThe layout override is the most used way of changing the design, and right now we don't have the possibility to do this.\nI've been thinking about adding a new template layer to our layout, just by using the twig blocks system.\nHow to do it ?\nEvery view extends the logical_layout, in which we have all must-have elements in the admin layout (such as navbars, assets). This logical_layout extends a skeleton_layout, in which we ONLY have the html \"top-frame\" code, and all the blocks names we want to use and that will be filled by the logical_layout.\nThen, we use a simple request listener like the one on Orbitale CmsBundle : we inject the layout configuration (parsed with the Configuration and Extension classes), and the logical_layout extends this configured layout, still like in Orbitale CmsBundle's views, but in EasyAdmin we put this dynamic extension inside the logical_layout in order to show the navs and assets we need.\nThen, a simple documentation chapter might tell the developer how to customize his back-end, and the advantage we have is that the proposed default layout will be so much a skeleton that the developer will only have to copy/paste it inside his own layout.\nI start to think that back-end design shouldn't be changeable in configuration, but instead should be configurable directly inside a twig template, even if this one only contains variables setters like classes and colors by using Twig blocks.\nWhat do you think about this?\n. I rebased my branch on the master , tell me if there's anything that is not translated :) \n. For the second point, after a few minutes thinking about it, it's really a good argument, because if people don't understand well english (and you can't even imagine the number of people that use Symfony and that don't speak english very well) , they'll probably google these messages, and for the best stackoverflow google links (or EasyAdminBundle issues :+1: ) in the results, they'd better google the original message.\nI'm gonna work on this tonight, you'll probably get one more commit tonight or tomorrow :smile: \n. Rebased and made the modifications :smile: \n. @xabbuh Maybe if some people want to override the controller to add some actions, but be able to use the basic actions ?\n. Why don't you create a service tag to allow end user to manipulate the entity during the process of creation/edition ? Like using constructEntity and some more methods like prePersist or postPersist, etc. \n. IMO we should create a createNewObject() method in the controller, with a basic trick to instantiate without invoking the controller. This would allow the possibility to override it in a controller extending EasyAdmin's one, if we want to.\nLike @stof, half of my entities have constructors, but they never use any argument, they just setup my entity with default values, and \"skeleton\"-like relations for some of them, so I'd like to call it when using EasyAdmin.\nIf you think it's right, it's easy to implement in the controller!\n. I agree. I don't know about statistics, but most of the default entities use constructor to define default values, and to define doctrine collections for *ToMany relations for instance, which are very important, especially if you are using them for validation.\n. I think that the PR #223 solved the problem: now you can simply override one method in the controller to change the way your entiites are instanciated :smile: \n. What do you think about this solution ?\n. I proposed this to @xabbuh:\nphp\n$wildcards = $this->getDoctrine()->getConnection()->getDatabasePlatform()->getWildcards();\nif (!count($wildcards)) {\n    $wildcards = array('%','_');\n}\n$wildcards = implode('', $wildcards);\n$searchQuery = addcslashes($searchQuery,$wildcards);\n. I added this deal because I don't know what it's about for other platforms, but if you say so, it means avoiding this method should not be a problem :) \n. You can still use a classic \"onbeforeunload\" method which will be compatible with many modern browsers, and moreover we can translate the message easily :) \n. Trust me I've been searching some months ago for a solution, and in fact, we can't do many things for this. If you want a nice modal, you'll have to trigger an event on each a,input,button tags \"onclick\" event, and on form submit events.\nIf you test it on different browsers, the message can differ, and some Firefox versions, for example, won't event show your message !\nThe best solution would probably be to keep the \"native\" onbeforeunload message, and don't add anything to keep the alert-box the cleanest possible. Imagine an english message wrapped by a spanish message, it could be awkward, couldn't it ? :stuck_out_tongue_winking_eye: \n. @markitosgv Actually we're waiting for @javiereguiluz, he has a big commit waiting to be pull-requested, and it'll handle many new features we'll have to test :smiley: \n. Wooo, can't wait ! :smile: \n. My urls branch has been rebased on master and updated with docs, if one day it's discussed again\n. @ninsky You mean like what this documentation page explains? => https://symfony.com/doc/current/security/form_login_setup.html. :+1: \n. :+1: \n. For this, we first need to settle a solution on how-to manage \"new\" action types, I don't think @javiereguiluz've decided yet\n. For this, we first need to settle a solution on how-to manage \"new\" action types, I don't think @javiereguiluz've decided yet\n. I've found out that you can specify \"global\" actions for listings, and some of them are useless, for example \"search\" is useless in a listing (it's handled only by the search input above the list) , and \"delete\" may never work because deletion is handled only on HTTP method DELETE, it seems.\n. I've found out that you can specify \"global\" actions for listings, and some of them are useless, for example \"search\" is useless in a listing (it's handled only by the search input above the list) , and \"delete\" may never work because deletion is handled only on HTTP method DELETE, it seems.\n. This feature is available in the PR #137 \n. With the high number of possibilities, I'm wondering if we'd have to make some phpunit tests in order to test all correct/incorrect behaviors...\n. With the high number of possibilities, I'm wondering if we'd have to make some phpunit tests in order to test all correct/incorrect behaviors...\n. +1 for the Config component, I saw that you just use the \"VariableNode\" , which is kinda \"light\" for this kind of behavior.\nPlus, I'd recommend to make tests the sooner we can, because this bundle will only grow up in time, and the bigger it is, the harder the test will be to develop... :astonished: \nCreating a \"Config tester\" is kinda hard, I looked at Fos, Sonata Project, Symfony and Doctrine repositories to see examples of configuration tests, many of them focus on the service definition, some of them look at the configuration, but they almost all have a different method... Putting confs in yaml and xml fixtures, putting them raw in the Test class, etc.\nI made a little \"test tester\" on my local repo, ~~I'll push it during the afternoon~~ you can see it here, maybe @stof can be available to check if it's a good one to start with or not :) \n. +1 for the Config component, I saw that you just use the \"VariableNode\" , which is kinda \"light\" for this kind of behavior.\nPlus, I'd recommend to make tests the sooner we can, because this bundle will only grow up in time, and the bigger it is, the harder the test will be to develop... :astonished: \nCreating a \"Config tester\" is kinda hard, I looked at Fos, Sonata Project, Symfony and Doctrine repositories to see examples of configuration tests, many of them focus on the service definition, some of them look at the configuration, but they almost all have a different method... Putting confs in yaml and xml fixtures, putting them raw in the Test class, etc.\nI made a little \"test tester\" on my local repo, ~~I'll push it during the afternoon~~ you can see it here, maybe @stof can be available to check if it's a good one to start with or not :) \n. Thanks @xabbuh I'll check this out to make better config tests :+1: \nTo come back to the subject, I've tested some config schemes, and I think that the fields array \"prototype\" is too restrictive.\nThe class attribute only applies to the created widget (input, select, textarea ...) , but if I want to add a custom class to the label, it's actually impossible.\nIMO, we should find a solution to merge a formField attribute with usual form field definition we use in our FormTypes classes.\nFor example, with my TranslationBundle:\nyml\neasy_admin:\n    entities:\n        Translation:\n            class: Pierstoval\\Bundle\\TranslationBundle\\Entity\\Translation\n            form:\n                fields:\n                    - token\n                    - source\n                    - translation\n                    - { property: locale, label: \"Langue\", type: \"choice\", \"help\": \"Choisissez une langue\", class: \"test\" }\n                    - domain\nThe possible choices should be the %locales% parameter, parsed by the PierstovalTranslationExtension class. Actually, there is no way of defining it in EasyAdmin, so to handle the new and edit functions for the Translation Entity, I may need to create my own controller.\nIt would be great if we had a formField attribute (or any possible name, like formType or whatever) to pass parameters like the ones I'd put in my FormType:\nphp\n$formBuilder->add('locale', 'choice', array('choices' => $locales));\nThis is my first issue, I may have some other in the future :) \n. Thanks @xabbuh I'll check this out to make better config tests :+1: \nTo come back to the subject, I've tested some config schemes, and I think that the fields array \"prototype\" is too restrictive.\nThe class attribute only applies to the created widget (input, select, textarea ...) , but if I want to add a custom class to the label, it's actually impossible.\nIMO, we should find a solution to merge a formField attribute with usual form field definition we use in our FormTypes classes.\nFor example, with my TranslationBundle:\nyml\neasy_admin:\n    entities:\n        Translation:\n            class: Pierstoval\\Bundle\\TranslationBundle\\Entity\\Translation\n            form:\n                fields:\n                    - token\n                    - source\n                    - translation\n                    - { property: locale, label: \"Langue\", type: \"choice\", \"help\": \"Choisissez une langue\", class: \"test\" }\n                    - domain\nThe possible choices should be the %locales% parameter, parsed by the PierstovalTranslationExtension class. Actually, there is no way of defining it in EasyAdmin, so to handle the new and edit functions for the Translation Entity, I may need to create my own controller.\nIt would be great if we had a formField attribute (or any possible name, like formType or whatever) to pass parameters like the ones I'd put in my FormType:\nphp\n$formBuilder->add('locale', 'choice', array('choices' => $locales));\nThis is my first issue, I may have some other in the future :) \n. I've got a really minor suggestion : You may need to rebase this branch with your master, at least to integrate #32 ;) \n. Awesome !! Didn't notice this one ! :+1: \n. I looked at it, and it's GREAT, it really looks like Sonata's Admin class system, but inside a controller, so we have access to all the application & container, and can customize routes, which is really better :+1: \n. When this PR is merged and correctly set up, I may work on the Configuration class to allow this kind of validation directly from the builder.\nI prefer to wait before it's fully merged because you may make some modifications, and I want the feature to be fully designed before working on the future ;) \nAs @MacFJA said in #43 , use the field name as key could improve really better the understandability of the configuration, so ... ;) \n. Maybe a serialized non-stdclass object (like a non-entity class) ?\n. Maybe a serialized non-stdclass object (like a non-entity class) ?\n. Depending on the software it can be transposed to MySQL table definitions, like with JMerise or MysqlWorkbench. Then with the table def, you can use doctrine-reverse-mapping to generate a bunch of entities based on this diagram.\n. I don't think that this bundle is intended to be used elsewhere Symfony standard edition.\n@javiereguiluz  ?\n. Basically it's an admin generation for symfony AND doctrine orm :smiley: \nMay I recall the repository description:\nThe new (and simple) admin generator for Symfony applications.\n. This can be a good feature by the way, even if it's not the subject of the day, I think that you can propose an implementation to @javiereguiluz with a Pull-request, and then it's gonna be in the TODO-list for the future enhancements :) \n. Can you show your configuration for the two entities and for EasyAdminBundle ?\n. You might have a problem not linked with EasyAdmin then, it seems that there's something with your autoloader. Did you namespaced correctly your Ciudad entity ?\nEDIT : In case of, can you run a php app/console doctrine:schema:valdidate and show the output if it's incorrect ?\n. It's an issue coming from FOSUserBundle .\nThis bundle does not allow classic user creation by using a simple instanciation like new Usuario()  in your case. For this we must use the UserManager in the controller like this:\nphp\n/** @var AppBundle\\Entity\\Usuario $usuario **/\n$usario = $this->container->get('fos_user.user_manager')->createUser();\nDon't know if we shall make an exception if the class is instance of\nFOS\\UserBundle\\Model\\UserInterface ...\n@javiereguiluz  ?\n. It's an issue coming from FOSUserBundle .\nThis bundle does not allow classic user creation by using a simple instanciation like new Usuario()  in your case. For this we must use the UserManager in the controller like this:\nphp\n/** @var AppBundle\\Entity\\Usuario $usuario **/\n$usario = $this->container->get('fos_user.user_manager')->createUser();\nDon't know if we shall make an exception if the class is instance of\nFOS\\UserBundle\\Model\\UserInterface ...\n@javiereguiluz  ?\n. A generic but simple way : we create a UserAdminController that extends the AdminController, and we load its routing only if we find that FOSUserBundle is activated and/or when the user adds an information about it in the config, for example use_fos_user: true\n. A generic but simple way : we create a UserAdminController that extends the AdminController, and we load its routing only if we find that FOSUserBundle is activated and/or when the user adds an information about it in the config, for example use_fos_user: true\n. When you talk about \"two-level nested main menu\", do you think about \"categorizing\" entities and add drop-down menus ?\n. When you talk about \"two-level nested main menu\", do you think about \"categorizing\" entities and add drop-down menus ?\n. Yup, very fine, we'll just need to completely review the configurator then :stuck_out_tongue_closed_eyes: \n. Yup, very fine, we'll just need to completely review the configurator then :stuck_out_tongue_closed_eyes: \n. Depends only on @javiereguiluz's pressure about this :D \n. Depends only on @javiereguiluz's pressure about this :D \n. @paquitodev It's about the menu refactoring, and the work hasn't been started yet for this subject :)\n. @paquitodev It's about the menu refactoring, and the work hasn't been started yet for this subject :)\n. Linking the service id sounds to be more relevant to me, because it's then a form you can re-use, and it's still available in EasyAdmin \n. Great, looks well ! :+1: \n. Great, looks well ! :+1: \n. Great :+1: \nThe \"Delete\" action should also be implement~~ed~~able on the list, I think, with the same modal :) \n. Great :+1: \nThe \"Delete\" action should also be implement~~ed~~able on the list, I think, with the same modal :) \n. Indeed, the SoftDeletable Doctrine extension is simply AWESOME, and it totally replaces the remove method from the entity manager, which is really great to avoid loosing datas.\nHowever, I'm starting a new project soon which will store some definitions for something like a temporary thesaurus/dictionary/lexical index, and this back-end will certainly need to delete easily old datas that are not relevant anymore, and even if I use the SoftDeletable extension, it needs to delete many entities a bit faster than clicking on edit/delete/listing/edit/delete/listing etc.\nWhy don't simply delete with an AJAX request made with the DELETE HTTP method ? :) \n. Indeed, the SoftDeletable Doctrine extension is simply AWESOME, and it totally replaces the remove method from the entity manager, which is really great to avoid loosing datas.\nHowever, I'm starting a new project soon which will store some definitions for something like a temporary thesaurus/dictionary/lexical index, and this back-end will certainly need to delete easily old datas that are not relevant anymore, and even if I use the SoftDeletable extension, it needs to delete many entities a bit faster than clicking on edit/delete/listing/edit/delete/listing etc.\nWhy don't simply delete with an AJAX request made with the DELETE HTTP method ? :) \n. @mdilg For form types you must use FQCN but if you are using Symfony 2.8 you can still use the getName() method that is kept for BC.\nIs this what you ask for?\n. If your User entity has an array field, it certainly means that in your database, the field is empty instead of being a serialized empty array \"a:0:{}\" .\nCheck your database, and if the problem persists, can you show both database content and user class mapping ?\n. By the way, to manage a FosUser entity, you would need to use the FOSUserManager with this\nphp\n $this->container->get('fos_user.user_manager')->createUser();\nSo if you attempt to create users from EasyAdminBundle, there'll probably be some unexpected issues because of this mandatory behavior from FOSUserBundle, as EasyAdmin does not use the FOSUserManager\n. Can't we inject the configurator inside this twig extension and check the entity config in order to retrieve the primary key value ?\n. I think that injecting the configurator in the twig extension might be right, as it's also probably the best way to get the whole entities list and make it a \"view-accessible\" property, instead of passing it as parameter from the controller (which is kind boring when extending the AdminController).\nSounds good to me to add this dependency to the twig extension :)\ntag @javiereguiluz \n. Shouldn't this be fixed directly in the translation files instead of the views ?\n. Haha it's terrific :laughing: \n. @javiereguiluz As I made the PR, may I look at it and add my commits on it ? If it does not suit your need, we can remove the PR later. But if it suits you, let me squash the commits before merging, because it's gonna look dirty instead :p \n. It seems that I'm facing the limits of either my skills or the layout's design.\nI tried many combinations, and the only \"pure-css\" one that I found was putting the scrollbar on the whole left sidebar, and I think it's not enough for what you need @javiereguiluz.\nMaybe I'll try to refactor some html code in order to facilitate the process, it's gonna take some more time. Unless you accept to have the scrollbar on the whole left sidebar, which is easier ^^ \n. Yup there's a better solution : \ntwig\n<a href=\"{{ path('admin', { action: action, entity: entity.name, id: attribute(item, entity.primary_key_field_name) }) }}\">\n    {{- ('actions.' ~ action)|trans -}}\n</a>\nAdding the \"-\" sign is sort of a shortcut to indicate that this \"side\" of the twig tag has to be spaceless. If you put it on each side, there will be no space in either the beginning and ending of the tags :) \n. Hop, voil\u00e0 : http://twig.sensiolabs.org/doc/templates.html#whitespace-control :wink: \n. @jcrombez If this issue is solved, can you close it ?\n. @javiereguiluz I don't know why you're against the spaceless methods, it's really great to limitate the weight of pages. You can't imagine now much weight a page can loose if there's no space between tags ! :D  (and also, the spaceless tags and dash trick cures the spacing problem with inline-blocks :D )\n. Too bad, but I like your answer, and as I said, it was more for ODM users than for me. Good point to have it in the future tag though ! :) \n. For the Edit and New actions, the jQuery plugin you mention sounds great, even if I'd prefer vanilla js. The advantage of this plugin is that it allows the same usage for *ToMany relations, which would be incredibly awesome to handle easily these relations in EasyAdmin.\nUsing the Form component is great too, because it allows the persistence of a brand new object, which I'm gonna need soon for a project in which there'll be entities that only are in the middle of a \"ManyToMany with attribute\" relation.\nCombining the two options does not seem to be a bad idea though it's gonna be harder to implement.\nWhy don't allow the developer to set up this parameter in the entity configuration ? This would allow to use both systems, with a simple \"if\" statement in the controller.\nWhat do you think ?\n. So nice thanks :+1: \n. What's the alternative for <2.5.0 ?\n. Haha,  this one is very nice, but I was thinking first of a solution without js :laughing: \n. Flex is the future of css scaffolding :) Thanks @ogizanagi for pushing innovative apps into this direction :+1: \n. Hm... I really do not agree this feature. Even if EasyAdmin does not have a basic support for locale, I personally use it in translated environments, and the locale is directly prepended to the url manually in my routing config.\nWhy ? Because this backend is so easy to setup that I can create a whole backend in a few minutes, and I work with both french, american and spanish people, and even if some of them speak french, I won't force them to use a french back-end. EasyAdmin is translated, so I don't understand why we would force the locale in the back-end.\nBasically, the fallback locale is always set in the Symfony configuration, and now has been put in config.yml instead of parameters.yml (which is great for versionning), so the developer can already change his locale, so changing it in EasyAdmin sounds wrong to me.\n. @ogizanagi : Nope, the elements are all translated in each languages. I have an entity named \"Marker\", it's translated in French with \"Marqueur\", and in spanish \"Marcador\". I'm using my own TranslationBundle (you can see it in my repos) to manage this. I also use its Translation entity in the EasyAdmin backend, so I can manage translations faster in the backend for instant validation (no cache clear needed.).\nTo manage the locale in the backend is easy:\n``` yml\napp/config/routing.yml\neasy_admin:\n    resource: \"@EasyAdminBundle/Controller/\"\n    type:     annotation\n    defaults:\n         _locale: %locale%\n    prefix:   /{_locale}/admin\n```\nIf you force the locale in EasyAdmin as you do in this PR, this routing behavior would never work because you'll set the locale for each request using the AdminController.\nAnd personally, my whole translated backend will fall :laughing: \n. In the header, the label is universal and in english. What I translate is the form fields, which are sent to the translator by default by the form_div_layout.html.twig default templates in Symfony :) \nThe help tags are also translated IIRC.\nEdit: I'm thinking about proposing a PR with a single trans filter in the header label... I think it might be good.\n. You're right about #122 , which should be merged IMO. Any untranslated element will still look the same if it's untranslated, and if it is translated, it will simply be shown as translated depending on the current locale.\nIf @javiereguiluz wants to merge this PR and not #122, it might sound like a paradox to me :) \n. For sure :wink: \n. :+1: \n. Yep I plan to introduce this kind of feature but only if it's convenient for everyone. I try to organize myself the best possible way not to work for nothing :smile_cat: \nI agree for adding some style on the grouped items, a darker background is good and I wanted to do something similar.\nFor the point where I put grouped entities in configuration, in fact I don't want where to put it. I thought about doing it in the twig views, but manipulating arrays is tricky in twig, and this behavior belongs to technical logic, not views.\nDo you have a better idea ? Put it in the configurator ?\n. I'll wait then\n. You're probably going too much forward in time for me to imagine all potential features :laughing: \nIn fact all your proposals seems really good, I'll probably wait for @javiereguiluz to choose a solution ^^ \n. I've pushed a37f84e in which I move the config into the extension, what do you think?\n. I've pushed a37f84e in which I move the config into the extension, what do you think?\n. Should I close this PR as we are working on #208 soon?\n. Should I close this PR as we are working on #208 soon?\n. @romaricdrigon I also urgently need this feature (I actually have a back-end with more than 20 entities to be managed in 5 different contexts, so grouping the menu is important to me) , but I've been convinced by @javiereguiluz  and @ogizanagi in the fact that the menu should almost be \"standalone-able\" in its configuration.\nThe real extension point in the menu config would be to allow creating custom menu links and routes, which is currently only possible when overriding the templates (even though it's really simpler with v1.4.0 now released).\nWe'll discuss about this soon don't worry :) \n. I think it's better to keep the use of the configurator, in fact I'd probably use a function, or set the configurator as global directly from the Twig Extension. \nOverriding in a such way sounds a bit heavy to me, and I think that the 2 best solutions are functions and parameters injection.\nIn fact, as you can see here, the config is still available as a parameter, so you can always get it with a simple $this->container->getParameter('easyadmin.config'); in your controller, and inject it manually into your views. And if you need more, using the Configurator with a $this->container->get('easyadmin.configurator'); is also easy.\nIMO there's no need for more injection, because we already have 2 great ways of doing it, and adding twig globals/functions would only add a heavy brick on a stable wall. Plus, it may not be compatible with future versions of the bundle.\n. For \"future\" enhancements, I mean that the configuration format may change in the future, as well as the Configurator service, so having a dedicated implementation for config injection might need to refactor it if we change the configuration format. I'm not talking about huge BC break ;) \n\nThe current twig extension seems a particularly good place, as it already has a dependency on the Configurator... If only the easyadmin config was exposed publicly in it.\n\nFor this, we can simply add the config var as dependency in the extension declaration:\n``` yaml\nResources/config/services.xml\n    <service id=\"easyadmin.twig.extension\" class=\"JavierEguiluz\\Bundle\\EasyAdminBundle\\Twig\\EasyAdminTwigExtension\" public=\"false\">\n        <argument type=\"service\" id=\"router\"></argument>\n        <argument type=\"service\" id=\"easyadmin.configurator\"></argument>\n\n\n%easyadmin.config%\n\n\n```\n\nAnd voil\u00e0, you have the config in the twig extension :)\nBut that said, I don't think it's convenient to implement the same feature twice, so I'd personally rely on $container->getParameter('easyadmin.config'); and $container->get('easyadmin.configurator'); for it.\n. Yup, I agree that relying on the container might sound boring, but in fact, it has the best representation of a static frozen configuration, so injecting it in twig globals would just do exactly the same.\nThat's why using functions sounds to be a good solution to me, because you would only use the actual configuration. If you inject it in globals, there is still a way to override it, which can be treacherous, whereas twig functions would only allow \"get\"-like methods, which is the best.\n. I think twig functions are the best solution, even if we finish with something like this : \ntwig\n{{ easyadmin_config().entities.Post.label }}\n. I think the implementation in 019a2f8 is great and functional, and for getters, we might just use a \"recursive\"-like getter by dot syntax, with something like this:\ntwig\n{{\u00a0easyadmin_config('assets.css') }}\n{# Returns the equivalent of $backendConfig['assets']['css'] #}\nFor a260d00 I think it's simple enough, but maybe we should add a security verification to return the entity configuration only in 2 specific cases:\n- An $entity argument is passed\n- If no $entity argument is passed, we check in the request that the current controller extends the AdminController, if so, we get the entity from the request, to avoid any query string injection.\nWhat do you think?\n. Great ! Love this one :) \n. I don't know, in fact, I have no specific case in mind, I'm just obsessed by avoiding all possible GPCF injection in any way :joy_cat: \n. Awesome ! This is exactly what I had in mind :smile: :+1: \n. It seems good!\nWhat do you think about adding a \"has-er\" to the extension? Something like configHasEntity? It's just an idea, I don't know if it can have a bunch or uses or not...\n. I'm also thinking about implementing security options right inside this \"has-er\", to avoid getting the whole entity config whereas the user doesn't have the proper role to see the entity in the menu...\nAs security is not handled in EasyAdmin, of course I'm thinking about overriding it to allow menu customization, but anyway, it seems legit to propose such a feature, what do you think?\n. You'll just have to use the bundle inheritance system to rewrite the extension. In fact, I was thinking about extending the configurator in my own AdminBundle (which extends EasyAdminBundle) where I'd simply override some parts just to setup security. And a \"has-er\" has its place in this kind of \"world\", because I intended to remove entities in the config depending on the current user permissions :) \nSo the entities list would remain the same, but the configuration would return an empty element if we try to check the entity's existence. \nIf the entity is not here => no right to see it. As simple as that :) \n. Using label is good for a field, title is more for a page.\nI think the key should be \"standard\", for example if we want to set up custom actions different than actual ones (like \"dashboard\" or \"statistics\"), so they also should implement a title and submit_label option, I think.\n. A default translation id might be better:\nyml\nedit:\n    title: action.{actionName}.title\n    button_label: action.{actionName}.button_label\nThis sounds good, it works like the action.{actionName} token when you create a custom action, and it's easier to translate.\nWhat do you think ?\n. I find this much more intuitive than the actual behavior, a switch design is much more valuable in UX terms IMO.\n. @sr972 marks a point on security issues. I haven't thought about it, but after looking at the code, you're creating a new toggle action, which adds to the back-end complexity.\nFor the security issues, I think we should implement something, event a light feature, because security is prominent in many many back-ends, especially big ones. I will personally need this feature very much, (as well as custom actions, homepage and 2-level grouping) because one of my apps is divided into 3 apps : a \"game\", a \"map\" and a \"portal\" system, which will all have their own entities to manage. Plus, I'll need a special security \"firewall\" for some other roles, because some people will only have the rights to manage translations. \nAnd even if \"toggling\" boolean values in the list is cool, it sounds more \"gadget\" (in french terms) than important features.\nIn fact, that's why I think that focusing on the roadmap might be preponderant. And as I said, I think that a toggle action for such a \"little\" feature is maybe too much.\n. It's totally understandable, but the problem is a question of overridance. A Twig extension has been created especially in the goal of rendering the configuration directly in the views with the best possible semantics.\nSomething like this is better for me:\ntwig\n{% if admin_allowed_action('delete', entity) %}\n    {# ... #}\n{% endif %}\nBehind the scenes, the function will retrieve both global and per-entity configuration in order to check whether the action is allowed, knowing that any entity conf overrides the global conf.\nWhat do you think?\n. Nice! I don't know how you intend to implement your unit tests, because everybody has his own method, but once you've set up the bases, I'm gonna write some (in fact, I've been writing tons of tests for my own libraries for the last weeks, so I'm in right now xD )\n. I also created some unit tests in an old unit_tests branch, with a basic setup just awaiting for some other tests, if it might help. (even though I don't know if it's useful)\n. Start by forking the repo\nOnce you forked it, create a new file named EasyAdminBundle.pt.xliff in the translations directory in your own repository\nUse the english file as reference, and edit all the <target> nodes to suit your own language. Don't forget to change the en notations to pt ones for Portuguese\nIf there are words that can change in both Portugal and Brazil Portugese, I recommend you to translate with common words if you can, to avoid non-brazilian or non-portuguese-native people to confuse some words.\nOnce you've done, check the Create a new branch for this commit and start a pull request box and submit your pull request for us to examine it and merge it in EasyAdmin :)\nIf you need more infos, the github docs are your friends :)\n. :+1: Great!\nWhen you're finished with it I can work on some more tests to maximize code coverage (plus, it's easy, because there's only some files to add :+1: ) (edit: we're at 53.52% coverage for the extension)\n. Your method sounds a bit strange, why don't take example on FOSRestBundle's travis file just by setting up env vars ?\n. I opened PR #233 to fix this issue\n. :+1: \n. First google search and I found this: http://egeloen.fr/2013/12/08/unit-test-your-symfony2-bundle-di-like-a-boss/\nIt allows to test the extension directly with the configuration class\n. May I just say that testing the config this way is a GREAT step forward in generating the whole config directly in the Configurator class? :) \n. Oh ok sorry I misunderstood, I thought that you were talking about the Configuration DI :smile: \n. In this whole PR I see many calls to {% if 'edit' in easyadmin_config('actions') %}\nWhat if we provide a new twig function like easyadmin_action_exists('edit') instead ? It would permit then to propose the use of a second argument entity which, if specified, will search in the entity configuration (search by key index for faster check) if the specified action exists ?\nWe could also name it easyadmin_action_allowed, then in the future we can add some security checks with the current logged user, just an idea :) \n. I was looking at your implementation of the easyadmin_list_item_actions function method, and I started thinking about something: actions remind me of annotations, let me explain why:\nAn action can be executed on a global scale (search, dashboard, statistics), on an entity scale (list, search) and on an object scale (edit, new, delete). \nWhen setting up actions, why couldn't we provide a \"mapping\" of our actions, exactly the same way we do with our entities ? We define an action with its id (edit, new, list...) , and we define the scope(s) on which it becomes available.\nI think that @ogizanagi proposed something quite similar some time ago, but it's this method that made me thought about it. You exclude actions from you research. What if I want my custom action to also be excluded from this list ?\nThis way, we can easily move our entity system with a \"back-end instance\" system. \nWhat I mean with \"back-end instance\" is a simple menu to the left, that corresponds to some configuration. The basic conf is an entity (as we do right now), so any backend_type parameter would be equal to entity, but if we want to define a back-end homepage with a dashboard, we define a new backend instance in which the backend_type is a controller shorthand or render_template with twig view, etc.\nWhat do you think ? \n. What I meant in my proposal is to setup things like this:\nyaml\neasy_admin:\n    actions: \n        edit: { type: controller, resource: EasyAdmin:Admin:edit }\n        custom: { type: controller, resource: AppBundle:Admin:custom }\n    entities:\n        Post:\n            available_actions: [ 'edit', 'custom' ]\nDo you see it ?\nAnd by default, if you don't specify anything in the actions \"global\" param, the result would be\n{ type: controller, resource: EasyAdmin:Admin:%action_id% }, for example:\nyaml\neasy_admin:\n    actions: \n        another: ~ # this form\n    actions: [ 'another' ]\u00a0# or this form\nWill result in this:\nyaml\neasy_admin:\n    actions: \n        another: { type: controller, resource: EasyAdmin:Admin:another }\nThis allows overridance of the actions in a much more \"configurable\" way, instead of doing it entirely inside the controller which will totally extend the AdminController\n. First, sorry for the huge paved text :smile: \nI'd prefer to keep the use of the actions parameter, and instead of adding a whole custom_actions, using the global actions parameter as reference, and if it's not set, use the six default actions as reference, and add a override_default_actions boolean parameter that would be false by default.\nGlobal scale:\nIf override_default_actions is true, then only the specified actions are allowed, PLUS the \"list\" action (which is mandatory).\nIf it's set to false, any action specified in the actions parameter will be merged with the six default actions.\nPer-entity scale:\nIf override_default_actions is true, the actions will finally contain only specified actions (per-entity), and if it's false, the actions will be merged with the back-end global actions (global + per-entity).\nThis would lead to something like this:\nyaml\neasy_admin:\n    actions: [ 'show', 'statistics' ]\n    # With this param set to \"true\", we'll never see the \"edit\" or \"new\"\n    #  default actions, nor the \"toggle\" one.\n    override_default_actions: true \n    entities:\n        Product:\n            class: AppBundle\\Entity\\Products\n            # Here we force the override because we don't want \"statistics\"\n            #  for products, but we have a \"stocks\" action dedicated to this entity\n            actions: [ 'show', 'stocks' ]\n            override_default_actions: true\n        User:\n            class: AppBundle\\Entity\\User\n            # Here, there is no \"override_default_actions\" attribute,\n            #  so we'll see all global actions (\"show\" and \"statistics\")\n            #  PLUS the \"edit\" action\n            actions: [ 'edit' ]\nThe very good point of this is that with a default false override_default_actions attribute, there is no fundamental BC break, and any actual back-end can work the same way.\nDefault actions... Are also \"custom\" actions!\nOne another bonus is that the default back-end actions can be treated as \"custom\" actions with the default parameters already set in the AdminController.\nAnd any other action can have its parameters overriden with the route and label parameter.\nAnd with this, you can ALSO change the label of the current actions, like this:\nyaml\neasy_admin:\n    entities:\n        User:\n            class: AppBundle\\Entity\\User\n            actions: \n                - { name: 'edit', label: \"Modifier les param\u00e8tres\" }\n(I'm writing while @javiereguiluz just posted his point of view with his 3 methods :smile: )\nThe future: action \"types\"\nOne another lack I see here is that with this system, we may need to specify which type of action we have.\nWhat is an action type? Well... Remember CRUD!\nIn fact, most of the custom actions can:\n- Be entity-related or not (a simple boolean for a global action like a dashboard): Any of the CRUD\n- Show an entity's specific datas (statistics) : READ\n- Edit the entity in a specific way (for example with custom embedded form types, calls to webservices for instant modifications, etc): CREATE/UPDATE\n- Delete an entity, but also update other parts of the application: DELETE (of course it can be with a listener, but it's faster in the controller)\n- Export a list of entities in CSV/PDF/TXT/XLS : READ\nWe always rely on CRUD in a back-end, and sometimes we want to do things that are NOT entity-related (mostly for search and dashboards).\nSo, using a entity_related parameter in our action details might be one solution for this, because all non-entity-related actions can be showed elsewhere in the bundle (for example in the left navbar)\nAnd for the rest, the six default actions already rely on the CRUD, so we just might change the default array('edit', 'new', 'list', 'show', 'toggle', 'delete') with a much more complex array BUT with the use of our CRUD system.\nThis will allow any user to create a dasboard with a defaulted \"READ\" CRUD parameter, and (it's my case in my actual back-ends) create a specific EDIT crud action to manage entities in a much more different way.\nI can give you my example if you need it to see:\nOne of my apps is a maps manager, but always custom maps (example here with a tabletop rpg map).\nBUT, managing a map is made in 2 ways: managing the map parameters (name, slug, reference image, zoom level, description...), and managing the map datas: markers, routes and zones.\nAnd for this use, I absolutely needed a custom interactive_edit action, which would be a page that shows the same map as the link above, but with all the tools to dynamically and interactively add and position markers, zones and routes, and edit their parameters live onto the map. This action would be of \"UPDATE\" crud type. And if I don't specify a controller action, it would then use the editAction() with some more parameters given in the config, for example the repository action used (in my case it would be getMapWithFullDatas($id)) , and a simple template attribute (in which I'll add edit_interactive.html.twig, or it can also be defaulted) and voil\u00e0, you just have a custom action setup with no controller overridance, just a single template created in app/Resources/views/edit_interactive.html.twig or app/Resources/views/EasyAdminBundle/edit_interactive.html.twig.\nAre they good ideas? :) \n. Ah, and if you'd like to know, I'd be very happy to work on this feature if it corresponds to my vision of it :laughing: \n. @javiereguiluz Your implementation with the - to remove the action sounds really great to me, in fact that's exactly the behavior I'd like to have in the config, and it prevents using another attribute like the override_default_actions I proposed!\nIf you all agree with it, I think we got our solution :+1: \nFor the last use about \"action types\" it was just an idea, and you're right about it: it looks too complex and maybe too specific to be loved by other developers. And the route option can in the end override any \"action type\", so let's forget about this idea :wink: \n. I find your comment very good for the action types, as the tree types you noted are probably all we need as an action_type parameter.\nFor your last point, I don't fully understand the question :confused: \n. Hmm... \nI'm not familiar enough with container build process, but the only thing I have in mind for this is to register a service with a tag, and the only goal of the service will be to return an array of actions that will be added to the back-end global actions, and an array of entities that will be added to the back-end entities.\n. Something like this:\n``` yaml\nvendor/custom/VendorBundle/Resources/services.yml\nvendor_bundle.admin.register:\n    class: VendorBundle\\Admin\\Register\n    tags: \n        - {\u00a0name: easyadmin.register_config }\n```\n``` php\n<?php\nnamespace VendorBundle\\Admin;\nuse JavierEguiluz\\Bundle\\EasyAdmin\\Configuration\\RegisterConfigInterface;\nclass Register implements RegisterConfigInterface\n{\n    public function getEntities()\n    {\n        return array(\n            'User' => array(\n                'class' => 'VendorBundle\\Entity\\User',\n            ),\n        );\n    }\npublic function getGlobalActions()\n{\n    return array(\n        'edit_interactive' => array(\n            'scope' => 'entity',\n            'label' => '\u00c9dition interactive',\n            'route' => 'custom_action_edit_interactive',\n        ),\n    );\n}\n\n}\n``\n. No, it's the third-party bundle that will need to register this service and add it to its resources, so it's called after configuration computation.\nIn the order it's this:\n- Create the configuration from the config (with theEasyAdminExtension)\n- Call theConfiguratorto compute it\n- Check all services tagged aseasyadmin.register_config, get all the configuration created by these services, and add them to the back-end config. If you have such service in yourAppBundle, it's gonna be loaded, but if you also have one service in aThirdPartyVendorBundle, it's gonna be loaded too.\n- \"Reset\" the containereasyadmin.config` parameter to get the new modifications\nI'm not familiar enough with tagged services, but I hope it's the expected behavior, and I hope I'm clear enough to be understandable :smile: \n. @ogizanagi Of course, my example should have been in some kind of vendor bundle, I'm gonna change that in my example\n. For the two last points, I think the first of them is the only one that should be kept.\nUsing the - notation should become intuitive with this behavior.\nAbout the action types, I don't think that the types repository or entity would be used most of the time... Even if they're handy, they're quite hard to understand the first time. A custom route is obvious for example.\nBut it may be personal, I don't know what would think other people about these specific types. method (which implies extending the controller for custom actions) and route (which is handier) are good enough. Let me just share my feeling about it:\nRemember that we don't need to \"think for users\", because the final users will be developers, which, most of the time, will choose this bundle for one of 2 reasons (or both): easy to setup, easy to customize.\nPerformances and adaptability come in background, that's precisely the reason why I abandoned Sonata suite and chose EasyAdmin.\nA simple back-end with the actual functions EasyAdmin now offers is \"never enough\" when creating an application (and it's the same for any other bundle) and many developers that are in companies that develop complex apps would want to always have a hand on every feature.\nThe simple entity and repository types will only have one feature, and worse than that, they can only apply on one entity at a time, and is a simple \"customized edition\", whereas method and route offer all possibilities provided by the framework, and the developer can do whatever he wants.\nIt may be tough to say it, but I don't think that they would be used whatsoever.\nNonetheless they're both very smart ideas! It just sounds too (very very very) much specific to me.\nFor the rest, I don't have anything to say: it's great :+1: \n. Sorry for double-posting, I'd prefer two notification mails than that you read the first message without reading the \"edit\" part.\nI really forgot something...\nWhy did you \"changed\" the actions list notation?\nI mean, the \"old\" one was this like:\nyaml\neasy_admin:\n    actions:\n        - { label: \"edit\", type: \"method\" }\n        - { label: \"list\", type: \"method\" }\n        - { label: \"custom\", type: \"route\", action: \"custom_route\" }\nand the new one is like:\nyaml\neasy_admin:\n    list:\n        actions:\n            - { label: \"edit\", type: \"method\" }\n            - { label: \"list\", type: \"method\" }\n            - { label: \"custom\", type: \"route\", action: \"custom_route\" }\nFirst, this notation implies a huge BC break (unless you accept to merge two big complex arrays, but I don't think it's worth it...), and second, a really simple and tiny show_in array would be easier to implement in the current back-end:\nyaml\neasy_admin:\n    actions:\n        - { label: \"edit\", type: \"method\", show_in: [ 'show', 'list' ] }\n        - { label: \"list\", type: \"method\", show_in: [ 'new', 'edit', 'show', 'delete' ] }\n        - { label: \"custom\", type: \"route\", action: \"custom_route\", show_in: [ 'list' ] }\nWhat do you think about this?\n. I don't know, maybe a quatuor name, label, type and value|resource|action might sound more explicit?\n. > - The main constraint of your custom actions is the template used to display them: this is hardcoded and cannot be modified: some actions are displayed as buttons and other as links, depending on the page and the type of action.\nDo you have a concrete example of this behavior? I don't fully get it :confused: \n. So if I resume:\n- Buttons for action of types entity will be showed next to the current add button?\n- Buttons for action of types item will be showed in the actions column of the list page and/or (depending on the location where you put your action in the config) next to the save , delete and back to list buttons in the edit, new and show pages?\nWe're missing the non-entity related actions, such as dashboards. \n. Great then !\nFor non-entity related actions, I think we'll need to setup an easy method later, because I think these kind of actions will have their own place in the navbar...\n. By the way, I think, with some steps back over the situation, that making a difference between entity and item is not very easy. Maybe something like list_head and object_view would be easier to understand, because in fact this attribute is a link_position or button_placement.\nWhat do you think about it?\n. With EasyAdmin it should be easy to customize forms rendering : create your own \"form definition\" like the form_div_layout.html.twig in the framework, and add it in the Twig config, it's the simplest way to do it, and it works with EasyAdmin.\nPlus, it also works when creating custom form types and adding their layout in your twig config.\nFor the rest, I agree in the fact that EasyAdmin should be extensible in every possible way, and in fact, I'm wondering if we had to create a whole new bundle for it, that adds features to EasyAdmin (exactly like what SensioFrameworkExtraBundle does to the FrameworkBundle, for instance)\n. @javiereguiluz => For the Doctrine Associations, work will be quite hard, but I still think that we can just use configuration values on \"how to render the relation\", combined with specific twig views for how to represent it. Managing the form is easier if you need an embedded form, a little JS script for *ToMany relations (in order to duplicate the embedded form) , some loops, and in theory it does not sound so hard. And it may work on each relation type. (remember this comment on #133 )\n@ogizanagi : Using a form theme is the easiest way to do it whatsoever, in my opinion. You create a theme, use it, and if you want to customize it, some docs about template overridance in Resources/EasyAdminBundle/views/easyadmin_form_theme.html.twig , or even as a config parameter form_theme: AppBundle:Form:admin_form_theme.html.twig and in the admin views you load the form_theme dynamically from the config parameter...\nI think I might theorize very fast and very much about all of this, but I make the best I can to propose a very good solution to each needs with the most extensible way possible :confused: \nThat said, I think this issue should be renamed \"State of the project\" :wink: :smile: \n. This is a huge step, you made it perfectly, and I'm really glad that this bundle is becoming really big in terms of features!\n. This is a huge step, you made it perfectly, and I'm really glad that this bundle is becoming really big in terms of features!\n. I think you talked about all what I thought, because (blame me ^^) I didn't use Blackfire.io to profile the bundle (there are bugs with xdebug, and I don't understand it well yet by the way).\nIf the config parameter is already in the container and the metadatas are already cached, I think there should not be any more cache to do.\nThanks for the answer :+1: \n. Have you tried putting list_actions instead of actions right under the easy_admin parameter?\nTip: activate the translator in your app to avoid seeing things like action.edit or action.new ;) \n. Try ~1.0@dev ?\n. Don't worry then, a new release will come soon ;) \n. Wow... Such a hard work, It's gonna be tough for code reviews :) I'm gonna test it manually, sounds faster ^^ \n. First, I think you should rebase with the master (but it's a personal opinion on the future merge of this PR).\nNext, I tested this PR on my back-end for custom routes, and it works very well! \nBut I think the customization of the action type is not very intuitive: the name attribute should be only related to the action showed in the query string, like ?action=customActionName, and the label only to show the text on the button/link (for this, it's already working).\nThere should be something else to store the value of the action type: the method and the route. I propose to add the two options, so even if we can set both, only the one specified by the type will be used, but with it it's gonna be very verbose and very explicit (and easier to remember how to set it up)\nWhat do you think ?\n. My opinion is because we don't know if one day we'll implement a new type, that's why the best solutions would be a type attribute and a value parameter (or a word related, like resource, type_params, etc.).\nI'd personally like to change the parameters sent to the route for instance, to change the primary key, or change the route params to be a value from the entity (I have some pages that are identifiable by their tree attribute, which is the result of a function, and is not mapped in Doctrine).\nSo keeping the type makes sense to me, the problem resides in the name we'll give to the related attribute which will give the \"value\" to the \"type\". \nI don't know if I'm clear enough :laughing: \n. > If your concern is about the fact that adding a new type one day means adding a new option, I don't think there will be so much other types (a service id ? There is no point doing that). \nAnd why not ? In the end, we could think about creating custom types , and a service_id might be one, the controller executes it and returns in the list page, for example. It can be something like a database backup, export translations, refresh statistics, even clear cache, etc.\nvalue is a solution I like (and obviously, if we use this behavior, we have to get rid of method and route ^^ ), I thought about params because maybe we can not only use just one param, for example when you want to send something else than the primary key.\n. That's why an array option might be a good solution (even though more complex)\n. Is this PR ready to be merged ?\nI personnally tested it and it works for my 2 back-ends, but maybe we should wait for more tests ?\n. Is this PR ready to be merged ?\nI personnally tested it and it works for my 2 back-ends, but maybe we should wait for more tests ?\n. BC break policy :smile_cat:  (and no worry for the busy week, it's totally normal that you work on this repo in your afterwork)\n. BC break policy :smile_cat:  (and no worry for the busy week, it's totally normal that you work on this repo in your afterwork)\n. Great :+1: \n. Great :+1: \n. Of course it does not comply with my previous wishes about this feature, but at the moment, as long as we can make a difference with the label\n, type and name, without problem, it's good enough for me. Especially fi the method action name is based on the lable (like restockAction in your example).\nIf we add other action types, we'll discuss on how to implement them, we'll have time for that later :) \n. Of course it does not comply with my previous wishes about this feature, but at the moment, as long as we can make a difference with the label\n, type and name, without problem, it's good enough for me. Especially fi the method action name is based on the lable (like restockAction in your example).\nIf we add other action types, we'll discuss on how to implement them, we'll have time for that later :) \n. I don't think that EasyAdmin will propose features similar to the ones proposed by SonataAdmin, like blocks, UserBundle or Doctrine-specific features (like the odm, phpcr...). EasyAdmin is not a \"full-stack\" admin generator, it's an easy admin generator.\nIf we need this kind of features, maybe we'll create another repo, an EasyAdmin wrapper that adds many features. \nThe main goal of EasyAdmin right now is to support every doctrine association, to facilitate layout's customization (I'll propose a PR in a few days/weeks for that), and after that we'll be able to think new out-of-the-box features. \n. I don't think that EasyAdmin will propose features similar to the ones proposed by SonataAdmin, like blocks, UserBundle or Doctrine-specific features (like the odm, phpcr...). EasyAdmin is not a \"full-stack\" admin generator, it's an easy admin generator.\nIf we need this kind of features, maybe we'll create another repo, an EasyAdmin wrapper that adds many features. \nThe main goal of EasyAdmin right now is to support every doctrine association, to facilitate layout's customization (I'll propose a PR in a few days/weeks for that), and after that we'll be able to think new out-of-the-box features. \n. I don't know, let's ask @javiereguiluz :smile: \n. I don't know, let's ask @javiereguiluz :smile: \n. There is no apparent reason why those two commits could create a conflict.\nCould you try using blackfire.io profiler to see where the memory \"leak\" might be occuring?\nI've used a back-end where I have thousands of records in, or one where the entities have many properties (so many table columns), and I never had this kind of problem :confused: \n. There is no apparent reason why those two commits could create a conflict.\nCould you try using blackfire.io profiler to see where the memory \"leak\" might be occuring?\nI've used a back-end where I have thousands of records in, or one where the entities have many properties (so many table columns), and I never had this kind of problem :confused: \n. Yep, push your branches so we can still have a trace of it. I'm not able to reproduce the bug with my environment at work, on MacOSX10, so we'll have to wait for further tests :/\n. Yep, push your branches so we can still have a trace of it. I'm not able to reproduce the bug with my environment at work, on MacOSX10, so we'll have to wait for further tests :/\n. The array node configuration would be very good, but the problem we have with our config is that every prototype is prototypable, so we would need to make prototypes inside prototypes. Also, we have maaaaany \"defaultable\" options, and we can't use default params in prototypes...\n. The array node configuration would be very good, but the problem we have with our config is that every prototype is prototypable, so we would need to make prototypes inside prototypes. Also, we have maaaaany \"defaultable\" options, and we can't use default params in prototypes...\n. Just set the default value to null and the date will render as null in the back-end.\nWhy would you need a date with a '0000-00-00 00:00:00' value?\n. Just set the default value to null and the date will render as null in the back-end.\nWhy would you need a date with a '0000-00-00 00:00:00' value?\n. Hmm.. Indeed, and with @sylvaincombes's usage, I think it might be better to keep the possibility to use operations and date comparisons.\nI'm gonna investigate a little for this issue\n. Hmm.. Indeed, and with @sylvaincombes's usage, I think it might be better to keep the possibility to use operations and date comparisons.\nI'm gonna investigate a little for this issue\n. After some investigation, I think we can close the issue, because it's really not an EasyAdmin problem, and solving this kind of problem might be a too much big thing, and IMO, this problem is easily circumvented.\nFor the rest, there are two solutions for you @sylvaincombes (and for other people with this problem):\n- Create a custom Doctrine type that will probably be your own class extending DateTime, in order to handle properly the 0000-00-00 00:00:00 value, which is probably the most efficient but the most complex.\n- Use the null value and when you need to make queries with Doctrine, don't forget to replace WHERE {date_field} < :date with WHERE {date_field} < :date OR {date_field} IS NULL, because it's the only way to do this operation, which is really the easy and fast way.\n. After some investigation, I think we can close the issue, because it's really not an EasyAdmin problem, and solving this kind of problem might be a too much big thing, and IMO, this problem is easily circumvented.\nFor the rest, there are two solutions for you @sylvaincombes (and for other people with this problem):\n- Create a custom Doctrine type that will probably be your own class extending DateTime, in order to handle properly the 0000-00-00 00:00:00 value, which is probably the most efficient but the most complex.\n- Use the null value and when you need to make queries with Doctrine, don't forget to replace WHERE {date_field} < :date with WHERE {date_field} < :date OR {date_field} IS NULL, because it's the only way to do this operation, which is really the easy and fast way.\n. If the date is nullable, every <select> will have a default empty value available, so the problem will not be triggered.\nWhat we can do is propose a custom date and datetime widget with a datepicker, like the one there is in phpmyadmin, for instance.\n. If the date is nullable, every <select> will have a default empty value available, so the problem will not be triggered.\nWhat we can do is propose a custom date and datetime widget with a datepicker, like the one there is in phpmyadmin, for instance.\n. When you have a soft deleteable filter on your entities, you should never show this field anywhere in your app. Actually these filters are mostly here to avoid data loss, so they're handled by listeners only.\nA solution might be the use of an HTML5 date field, or a JS/jQuery datepicker which returns a string, so you don't use your classic setters, but create a specific setter that converts the string into a \\DateTime object.\nI still think it's an issue from outside EasyAdmin and we should not handle this \"manually\", because every entity can handle its date or datetime properties differently.\n. When you have a soft deleteable filter on your entities, you should never show this field anywhere in your app. Actually these filters are mostly here to avoid data loss, so they're handled by listeners only.\nA solution might be the use of an HTML5 date field, or a JS/jQuery datepicker which returns a string, so you don't use your classic setters, but create a specific setter that converts the string into a \\DateTime object.\nI still think it's an issue from outside EasyAdmin and we should not handle this \"manually\", because every entity can handle its date or datetime properties differently.\n. Then if you want this super-hero-admin, you're forced to modify the formBuilder manually depending on current user's role, so you can add some lines of code in your controller to check the date's consistency with the DBMS. It's an issue that may have to be solved in the Form component (maybe a single option can be added to handle this), so available only on SF2.8+ (at the moment), or at a lower level, in Doctrine, or at an even lower level, in PHP itself, so its DateTime class can use dates like 0000-00-00 00:00:00.\nBy the way, nullable dates are handled by EasyAdmin IIRC.\n. Then if you want this super-hero-admin, you're forced to modify the formBuilder manually depending on current user's role, so you can add some lines of code in your controller to check the date's consistency with the DBMS. It's an issue that may have to be solved in the Form component (maybe a single option can be added to handle this), so available only on SF2.8+ (at the moment), or at a lower level, in Doctrine, or at an even lower level, in PHP itself, so its DateTime class can use dates like 0000-00-00 00:00:00.\nBy the way, nullable dates are handled by EasyAdmin IIRC.\n. A date should always be nullable if the entity property is nullable, so even if this feature does not solve the problem for \"0000-00-00 00:00:00\" date, it solves the one with nullable\n. A date should always be nullable if the entity property is nullable, so even if this feature does not solve the problem for \"0000-00-00 00:00:00\" date, it solves the one with nullable\n. I agree with the fact that we may never handle the 0000-00-00 00:00:00 value.\n\n(I'm pretty sure you share this opinion, I'm only exposing the point)\n\nYou're right, I share this opinion, but there's still the only one problem of the mathematical comparison where 0000-00-00 00:00:00 < 2015-01-01 00:00:00 returns true, and null < 2015-01-01 00:00:00 returns false :confused: \nMaybe the DBAL could do this itself, but it's another problem, as you say\n. I agree with the fact that we may never handle the 0000-00-00 00:00:00 value.\n\n(I'm pretty sure you share this opinion, I'm only exposing the point)\n\nYou're right, I share this opinion, but there's still the only one problem of the mathematical comparison where 0000-00-00 00:00:00 < 2015-01-01 00:00:00 returns true, and null < 2015-01-01 00:00:00 returns false :confused: \nMaybe the DBAL could do this itself, but it's another problem, as you say\n. I'm totally in favor of the menu part, especially because it allows nesting the menu in a theoretical infinite number of levels (as long as you use the children attribute) and the form_theme is also great :+1: \nI don't like the main theme and color_scheme , because it would \"force\" (or at least \"propose\") the contributors to create custom themes, so multiple themes would be proposed and only one would be used at a time in the back-end, and I don't agree with it because a great part of the code would be unused in all backends. What would be better for this is to add a new component to EasyAdmin, something like a \"theme generator\", and the output of this generator would be a simple template override to save into the app/Resources/EasyAdminBundle/ directory. It would be much simpler.\nBut in the end I don't know if this feature would be used.\nThat said, a big twig refactoring would have to be made in order to still allow users to override the default layout without breaking the design configuration\n. I'm totally in favor of the menu part, especially because it allows nesting the menu in a theoretical infinite number of levels (as long as you use the children attribute) and the form_theme is also great :+1: \nI don't like the main theme and color_scheme , because it would \"force\" (or at least \"propose\") the contributors to create custom themes, so multiple themes would be proposed and only one would be used at a time in the back-end, and I don't agree with it because a great part of the code would be unused in all backends. What would be better for this is to add a new component to EasyAdmin, something like a \"theme generator\", and the output of this generator would be a simple template override to save into the app/Resources/EasyAdminBundle/ directory. It would be much simpler.\nBut in the end I don't know if this feature would be used.\nThat said, a big twig refactoring would have to be made in order to still allow users to override the default layout without breaking the design configuration\n. Ah, also, would the first menu item be the homepage of the back-end ?\n. Ah, also, would the first menu item be the homepage of the back-end ?\n. I'd like to propose the use of a new design layout option.\nI'm facing a problem: if I want to override the layout, there is not many solutions... In fact, I cannot \"really\" override the layout without copying the entire layout itself in my own file.\nWhat I'm asking is a layout configuration option in order to easily override the layout this way:\n- Create my own layout in whatever directory I want.\n- Set up the option:\nyaml\n  easy_admin:\n      design:\n          layout: \"@App/admin_layout.html.twig\" # or anything else\n- Inside my layout, extend the original layout:\ntwig\n  {% extends '@EasyAdmin/layout.html.twig' %}\n- Override whatever blocks I want, so I don't have to force the recreation of the whole layout in my app, which may entirely break the back-end whenever I make an EasyAdmin update.\nIn technical terms, it's nothing more than what I've set up in Orbitale/CmsBundle: \n- An option in the Configuration class (not the Configurator), which default value is @EasyAdmin/layout.html.twig\n- A listener to set it up automatically in each request attributes\n- An automatic load in each view with {% extends app.request.attributes.get('_easyadmin_layout') %} in each EasyAdmin view.\n. For this, we can use the exact same system of what I proposed but with every template, where would be the problem for this ? \nWe can replace the listener I proposed with a simple twig extension, like {% extends easyadmin_layout('edit') %} , as the layouts will be set in the configuration.\nWe can also configure a directory where to find the views, but it might be too dangerous if the template does not exist.\nThe most important goal is to be able to extend EasyAdmin's view, in order to keep the natural behavior when extending the view without writing anything but \"extends ...\". \nOnce this is done, we'll be able to create a bunch of other twig blocks to allow the user to extend them the most naturally possible, so it does not break the entire back-end.\nWhat do you think?\n. Which folder are you talking about exactly? This issue talks about design, are you talking about the app/Resources/easy_admin directory used to override EasyAdmin's template?\n. Which folder are you talking about exactly? This issue talks about design, are you talking about the app/Resources/easy_admin directory used to override EasyAdmin's template?\n. This issue is a proposal, not a final feature. The menu part is not implemented, and the design option may look a bit different.\n. This issue is a proposal, not a final feature. The menu part is not implemented, and the design option may look a bit different.\n. :+1: \nI'm glad you did not set the menu option in this PR because I think that the menu should not be under design, but directly under the root node.\nEverything sounds well to me\n. :+1: \nI'm glad you did not set the menu option in this PR because I think that the menu should not be under design, but directly under the root node.\nEverything sounds well to me\n. Everything seems well, I think you can merge this !\nThe BC break convenience is really good !\n. Everything seems well, I think you can merge this !\nThe BC break convenience is really good !\n. I'm not a fan of this idea of naming a theme.\nI don't know if we'll provide \"downloadable\" themes, and if so, a theme should then be a configuration parameter defining assets and form design, etc.\nMaybe we should decide on a strategy between those two ideas:\n- Everything related to design lies under the \"theme\" option, and any theme would be a simple yml file configuration that will be merged with the parameters under the theme attribute. By this, I mean this kind of usage:\n  You specify the \"dark\" theme. Every parameter under the theme will be loaded from, at first, the @EasyAdminBundle/Resources/themes/dark.yml.\n  If you specify any parameter directly under the theme option, everything will override the default theme params, but the other theme params will stay. This allows us to define a theme \"skeleton\".\n- You keep the actual behavior, but in the end, the theme name won't have that much impact on the back-end because the theme name is only informative... :confused: \n. I'm not a fan of this idea of naming a theme.\nI don't know if we'll provide \"downloadable\" themes, and if so, a theme should then be a configuration parameter defining assets and form design, etc.\nMaybe we should decide on a strategy between those two ideas:\n- Everything related to design lies under the \"theme\" option, and any theme would be a simple yml file configuration that will be merged with the parameters under the theme attribute. By this, I mean this kind of usage:\n  You specify the \"dark\" theme. Every parameter under the theme will be loaded from, at first, the @EasyAdminBundle/Resources/themes/dark.yml.\n  If you specify any parameter directly under the theme option, everything will override the default theme params, but the other theme params will stay. This allows us to define a theme \"skeleton\".\n- You keep the actual behavior, but in the end, the theme name won't have that much impact on the back-end because the theme name is only informative... :confused: \n. I'm really sad that the admin css is now loaded directly in the page :confused: \nThought a better solution could be used...\n. I'm really sad that the admin css is now loaded directly in the page :confused: \nThought a better solution could be used...\n. Nice :+1: I think some cache can be used for this route, like 3600s :) It's still a css file\n. Nice :+1: I think some cache can be used for this route, like 3600s :) It's still a css file\n. The dynamic css in a route is better for theme switching, because we can easily add css directly under the theme or design option :+1: \n. The dynamic css in a route is better for theme switching, because we can easily add css directly under the theme or design option :+1: \n. The last stable version is 1.1.0.\nIf you have any doubt, just look at the releases.\nFor the rest, I couldn't reproduce the bug, I think @javiereguiluz is totally right: you are certainly using the \"design\" parameter whereas it's not available yet in the last release\n. The last stable version is 1.1.0.\nIf you have any doubt, just look at the releases.\nFor the rest, I couldn't reproduce the bug, I think @javiereguiluz is totally right: you are certainly using the \"design\" parameter whereas it's not available yet in the last release\n. Yep, but even if the project is not \"that mature\", the difference between dev-master and the latest release will often be consequent ... :confused: \n. At least to see how you managed, I'd be glad to see a branch or a PR for this :)\nBy the way, actually, the question about \"securing\" EasyAdmin is not in the roadmap, because the Symfony's Security Component can do it in several ways. I have many times proposed an easy solution to handle a simple security based on the access_control security parameter, but it has never been merged yet.\nThe main goal is to keep EasyAdmin as the most stand-alone possible, without relying on any other component, but as it's a bundle it's kind of hard indeed..\nMaybe we will talk about it in a further issue ^^\n. @javiereguiluz We are if we manage the simplest possible solution for the \"security basics\" :wink: :wink: \n. The one I implemented does not rely directly on the Security component, but allows a simple way of using it\n:laughing: :laughing: \nSeriously, your solution is the one I implemented on a small back-end I made some time ago, and it's really great when using the full-stack framework ;) \n. A generic attr attribute sounds more like the HTML attributes of the widget.\nPlus, there is already an attr attribute in the widget parameters.\nHere, we are talking about form_widget and form_row twig attributes, visible in the docs chapter I linked in my first post (here is the link again).\nThe goal is to provide an easy way to handle all the twig parameters we want directly in the configuration, so even if disabled, class and label might be used most of the times, I'm also talking about attr (to handle any other HTML attribute), required (which might cause issues in form validation sometimes), but also label_attr which directly adds parameters to the form_label component, etc.\nThis is an easy way of doing it, and it's simpler than extending the form layout in Twig, or use a custom form type, or, or, or ....\nPlus, it does not affect the configuration, nor the tests, and is FULLY compatible with previous and upcoming Symfony versions (as it's the user's role to fix the deprecated parameters, etc.).\nPlus, as it's not extending the form type, you cannot put php code like you would do in the form type (by changing the query builder, etc), so as it's only in the yaml config, it's secure :) \n. I agree all your table of ideas, but I'm quite skeptical with the nullable option. IIRC, the ORM  can easily make the difference between an empty value and a null value depending on the entity metadata, without throwing any error.\nFor example, if you have a name property rendered with a text widget (input type text), and put an empty value in the form input, the sql datas will be \"\", and if the property is nullable (if it's set in the orm annotation and in the sql table structure), then an empty form will set a null value automatically.\nAlso, how would you \"force\" the form component to have a null value whereas any html input will render an empty value and not a null value ?\nPlus: in your table I'll add some attr option to add HTML attributes to the different widgets.\n. I rebased the branch and this option is still available, and I still think it might be good to have it, tell me if you're :+1: or :-1:  :smile: \n. I rebased the branch and this option is still available, and I still think it might be good to have it, tell me if you're :+1: or :-1:  :smile: \n. I think that @javiereguiluz will not merge this PR but anyway it's a good use if the security component to manage roles in the back-end.\nIf I might introduce some \"cons\", I think that directly relying on the component is not \"standalone enough\", but anyway, who's using Symfony without this component ? ^^ \n. > We cannot add great features to something which is not great\nObviously, but it's adding great features that makes something great :wink: \n. I also have this problem.\nIt seems that the normalized actions are not properly merged with the default action...\nIt seems like we need to change a little the method that normalizes actions both for entity and back-end.\n. We have a really huge new project at work and I succeeded in convincing my colleagues to use EasyAdmin, so don't worry, I'll certainly have A LOT of new proposals :D \n. Yep, no problem for that!\nFor this PR, it was mainly discussed in #22 , and in fact, this workaround is the best possible solution to make everyone happy with the constructor issue :)\n. Language barrier, thanks for fixing :+1: \n. Textarea is not a doctrine type, so using text should render as a textarea IIRC\n. We should create some new phpunit tests that tests the controller and the form type generated for an entity.\nNot forced to create complex functional tests with a client, but at least instantiate a kernel and manipulate the controller to allow testing the different protected functions, even by using a hack like extending the controller in the Test directory and override all methods with a public method to test them separately...\nWe are facing bigger functional problems these days, so it sounds like it's becoming mandatory to test the controller (which is certainly the core of EasyAdmin)\n. :+1: \n. When you talk about centering the text vertically, you mean relative to what?\nBecause the goal of the padding: 20px 10px; is the best solution for this.\n. Plus, changing the line-height does not center anything vertically. \nHere is how it renders:\n\n. Hmm ... You're right, I'm gonna update this PR to fix responsive issues\n. Heya, sorry for being soooo late on this PR, but I totally refactored it, and now it works for every responsive mode, with multiline text and images.\nBUT, this does not support more than 3 lines of text in responsive mode. 2-lines are showed very well, one line is completely centered, and images fit all necessary sizes automatically.\nBonus: I also found a bug in the definition of the \"long\" class in the header logo <a> tag.\n. Heya, sorry for being soooo late on this PR, but I totally refactored it, and now it works for every responsive mode, with multiline text and images.\nBUT, this does not support more than 3 lines of text in responsive mode. 2-lines are showed very well, one line is completely centered, and images fit all necessary sizes automatically.\nBonus: I also found a bug in the definition of the \"long\" class in the header logo <a> tag.\n. Everything seems to work well in your screenshots.\nThere is no default support for \"long\" names in desktop, because we would need a letter-wrapping.\nOn mobile/tablet, the long name is simply modifying the width of its container, naturally.\nI think we cannot have a \"generic\" function for this, because the design on mobile/tablet is restricted in height, and the design in desktop is restricted in width...\nMaybe @ogizanagi you can find a better idea ? :) \n. Everything seems to work well in your screenshots.\nThere is no default support for \"long\" names in desktop, because we would need a letter-wrapping.\nOn mobile/tablet, the long name is simply modifying the width of its container, naturally.\nI think we cannot have a \"generic\" function for this, because the design on mobile/tablet is restricted in height, and the design in desktop is restricted in width...\nMaybe @ogizanagi you can find a better idea ? :) \n. Hehe no worries, you're far from stupid, you just made EasyAdmin at least from scratch, that's reaaaally far from stupid :+1: :wink: \n. Hehe no worries, you're far from stupid, you just made EasyAdmin at least from scratch, that's reaaaally far from stupid :+1: :wink: \n. The css file was deleted in favor of a dynamic css file powered by twig, right here\n. @javiereguiluz : Seriously? I didn't notice that, but seriously, you pass the parameters in GET to the controller?\nI know it's out of the context, but as these parameters are set in the config, why not retrieve them directly in the config instead of passing parameters in the url? :confused: \n@mrkoch : Clear the cache and assets with rm -rf app/cache/* web/bundles/* , reset the assets with app/console assets:i --symlink --relative , and re-launch your app. The issue should be solved then\n. Maybe just activate the cache in non-debug mode, and it's set. There is no need in caching these files in dev/debug mode.\n. I'll test this tomorrow, it's an \"urgent\" need for our new app at work, so I'll test it the best I can\n. :+1: Great!\n. I don't know if it's quite a good idea, because anyway the header has to redirect to any of the admin pages, because there's no sense to me in specifying another kind of route, like the website homepage or anything.\nBut this feature could be used/inspiration for the great upcoming features about customizing the left menu, so I think we might need to wait until @javiereguiluz presents his ideas with the menu before merging this :)\n. We should then wait until the left menu feature is planned. @javiereguiluz , do you want to work on it, or would like to let someone else do it?\n. @javiereguiluz : I would also like to propose this modification with this PR, but as it's a BC break, I'd like to have your opinion on it before cherry-picking it on this branch :)\n. @ogizanagi these two functions are used right before $em->flush(), so why would you use a new instance? :confused:\n. For the rest, in the new action, there's an instantiateNewEntity() method that can be overriden ;)\n. :wink:\nCan you also tell me what you think about the other modification I proposed in my first comment? \n. Maybe then we could supply a new labels option under design, and propose \"sprintf\"ed strings to each form field, like this:\nyml\neasy_admin:\n    design:\n        labels:\n            null: '<span class=\"label\">%s</span>'\n            error: '<span class=\"custom_error\">%s</span>'\n            integer: '<div class=\"text-center\">%d</span>'\nWhat do you think \n. Maybe then we could supply a new labels option under design, and propose \"sprintf\"ed strings to each form field, like this:\nyml\neasy_admin:\n    design:\n        labels:\n            null: '<span class=\"label\">%s</span>'\n            error: '<span class=\"custom_error\">%s</span>'\n            integer: '<div class=\"text-center\">%d</span>'\nWhat do you think \n. Wow, this is simply AWESOME! :+1: \n. They were removed, you're right, and I'm not in favor of keeping them in the form. \nActually, I have a personal back-end that is secured depending on each entity, and the search becomes unsecured if we keep the parameters in the form instead of the form-action. It's related to my \"urls\" branch , and putting the attributes directly in the url is better for overriding the EasyAdmin's routing.\nBut for the rest, I'm :+1: with separating the search form, but it could be better if you also added a twig block wrapping the whole form (including the {% if easyadmin_action_is_enabled_for_list_view('search', _entity.name) %} part ).\nLet's wait for Javier to know his opinion :) \n. They were removed, you're right, and I'm not in favor of keeping them in the form. \nActually, I have a personal back-end that is secured depending on each entity, and the search becomes unsecured if we keep the parameters in the form instead of the form-action. It's related to my \"urls\" branch , and putting the attributes directly in the url is better for overriding the EasyAdmin's routing.\nBut for the rest, I'm :+1: with separating the search form, but it could be better if you also added a twig block wrapping the whole form (including the {% if easyadmin_action_is_enabled_for_list_view('search', _entity.name) %} part ).\nLet's wait for Javier to know his opinion :) \n. Well...\nAfter some tests, I think that #240 is a problem directly because of the fact that the inputs are not present in the form...\nThen, my solution about security might be solved by #238 after all, so we can keep the inputs very well.\n. Well...\nAfter some tests, I think that #240 is a problem directly because of the fact that the inputs are not present in the form...\nThen, my solution about security might be solved by #238 after all, so we can keep the inputs very well.\n. Using FOSUserBundle is quite different, because it's not a \"natural\" entity.\nFor this, you have to override the EasyAdmin's AdminController, and override the instanciateNewEntity method like this:\nphp\nprotected function instantiateNewEntity()\n{\n    if ($this->entity['name'] === 'YourUserEntityNameInEasyAdmin') {\n        return $this->get('fos_user.user_manager')->createUser();\n    }\n    return parent::instantiateNewEntity();\n}\nCan you test this and tell me if it works? If it does not, I'll try to check on one of my back-ends.\n. Using FOSUserBundle is quite different, because it's not a \"natural\" entity.\nFor this, you have to override the EasyAdmin's AdminController, and override the instanciateNewEntity method like this:\nphp\nprotected function instantiateNewEntity()\n{\n    if ($this->entity['name'] === 'YourUserEntityNameInEasyAdmin') {\n        return $this->get('fos_user.user_manager')->createUser();\n    }\n    return parent::instantiateNewEntity();\n}\nCan you test this and tell me if it works? If it does not, I'll try to check on one of my back-ends.\n. Look at this section of the doc to see how it works ;) \n. Look at this section of the doc to see how it works ;) \n. Hi @paquitodev , could you experiment extending the controller?\n. When using FOSUserBundle, your custom User entity must set up the $id ORM property, and if not set already, use the different getters.\nPlus you have to use the fos_user.user_manager service to create a new user entity, else the user won't work properly.\n. When using FOSUserBundle, your custom User entity must set up the $id ORM property, and if not set already, use the different getters.\nPlus you have to use the fos_user.user_manager service to create a new user entity, else the user won't work properly.\n. Yes, the $FOSUserManager->createUser() is optional but it guarantees you the best compatibility, allowing you to change the class without problem. Plus, if one day the FOSUserBundle implements new behaviors inside this createUser() method, it might create edge cases not to trigger them (even though it's still a big \"if\")\n. Managing entities provided by third-party bundles (like FOSUserBundle) should stick the behavior explained in the bundle, I think you should first read FOSUserBundle docs to know exactly what happens when you manage a user, and how to manage it.\nI personally overrode some controller actions to change the way the user is created/updated and it works like a charm for me :confused: \n. And the same for prePersistUserEntity() :+1: \n. Actually, the method should be protected, but public is good too.\n2015-05-20 13:47 GMT+02:00 Cl\u00e9ment Jardin aka Aruk\u0101do \nnotifications@github.com:\n\nMy entity is called User (in easy-admin too).\nI got a new error when I try to create a user with easy-admin:\nError: Call to private method Groupware\\UserBundle\\Controller\\AdminController::prePersistUserEntity() from context 'JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController'\nI solved it by making public preUpdateUserEntity and prePersistUserEntity\nmethods, but unfortunately the user isn't correctly created (password\nwithout salt again).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/237#issuecomment-103855412\n.\n. I think we should be able to add a section \"Community cookbooks\" in the documentation so it can be PR-ed and populated by anyone\n. @javiereguiluz So sad you want to write them all, because I think that some users facing complex logics might be really helpful in explaining very advanced features that can be plugged to EasyAdmin :confused: Then, I think I'll plug my CmsBundle into my website and write cookbooks myself for some features :yum: (you got the idea :wink: )\nFor FOSUserBundle, I currently have 2 EasyAdmin backends that use it, and I think @ogizanagi and I have used this bundle maaany times in our previous projects, so you just need to ask :wink: \n. The docs are VERY simple for this.\n1. Install FOSUserBundle \n2. Add this config for EasyAdmin:\n\nyml\n   easy_admin:\n       entities:\n           Users:\n               class: AppBundle\\Entity\\User\n               list:\n                   fields:\n                       - id\n                       - username\n                       - email\n               form:\n                   fields:\n                       - username\n                       - email\n                       - plainPassword\n                       - roles\n                       - enabled\n3. Create your own AdminController extending EasyAdmin's one.\n4. Add these three methods: \n``` php\n   public function createNewUsersEntity()\n   {\n      return $this->container->get('fos_user.user_manager')->createUser();\n   }\npublic function prePersistUsersEntity(User $user)\n   {\n      $this->container->get('fos_user.user_manager')->updateUser($user, false);\n   }\npublic function preUpdateUsersEntity(User $user)\n   {\n      $this->container->get('fos_user.user_manager')->updateUser($user, false);\n   }\n   ```\nAnd you're done for user management! \nYou can manually add other fields, but the most important is here.\n. I also think so :) \n. By the way, it is now in the first blog article from @Orbitaleio :) \nhttp://www.orbitale.io/en/manage-fosuser-in-easyadmin\n. You could set up the roles property as a choice field, get the security.role_hierarchy.roles container parameter, flatten it (or retrieve only the keys) and send it to the choices attribute in the form.\n. Your proposal is great, I can't think of a better solution for all our problems :+1: \n. Your proposal is great, I can't think of a better solution for all our problems :+1: \n. @javiereguiluz Do you think we can work \"together\" (I mean all the contributors) to this very big feature?\nFor this you may propose a pull request, contributors can work on it by fetching the PR in their local environment, and push commits that you'd cherry-pick+push in your own branch if they suit well. What do you think ?\n. @javiereguiluz Do you think we can work \"together\" (I mean all the contributors) to this very big feature?\nFor this you may propose a pull request, contributors can work on it by fetching the PR in their local environment, and push commits that you'd cherry-pick+push in your own branch if they suit well. What do you think ?\n. This is certainly one of the coolest features ! :+1: \n. Everything's good for me :+1: \n. Everything's good for me :+1: \n. Hep hep, I spoke too fast, there's a problem (let me a second to make a screenshot)\n. Hep hep, I spoke too fast, there's a problem (let me a second to make a screenshot)\n. This issue happens when clicking the last button and not releasing the click (the \"mousedown\" event). \n\nBut I think it's not linked to this issue :confused: \n. This issue happens when clicking the last button and not releasing the click (the \"mousedown\" event). \n\nBut I think it's not linked to this issue :confused: \n. It's linked to the fact that the input tags were removed from the search form. It's a bug, and it's gonna be fixed soon ;) \n. It's linked to the fact that the input tags were removed from the search form. It's a bug, and it's gonna be fixed soon ;) \n. Yet I still don't understand what is the real use of the view parameter in the urls: it's not really useful, isn't it ?\n. Yet I still don't understand what is the real use of the view parameter in the urls: it's not really useful, isn't it ?\n. I'm totally ok with that, you solved the problem with more maestria than me :+1: :wink: \n. I'm totally ok with that, you solved the problem with more maestria than me :+1: :wink: \n. In the extension, I see that you don't check if the $entityConfiguration['templates'] exists nor is set, because it may be good to allow override with a totally different template, or use the same template for two entities but not the others, which is not possible with the actual implementation. \nThe templates already set in the entity should be the \"0-level\" priority IMO.\nEDIT: A simple if (isset($entityConfiguration['templates'][$templateName])) { continue; } should be enough?\n. In the extension, I see that you don't check if the $entityConfiguration['templates'] exists nor is set, because it may be good to allow override with a totally different template, or use the same template for two entities but not the others, which is not possible with the actual implementation. \nThe templates already set in the entity should be the \"0-level\" priority IMO.\nEDIT: A simple if (isset($entityConfiguration['templates'][$templateName])) { continue; } should be enough?\n. Plus, I'd like to see a special template for the search form, because it can be customized easily (with AJAX, etc), can you add it ?\n. Plus, I'd like to see a special template for the search form, because it can be customized easily (with AJAX, etc), can you add it ?\n. > Which specific file are you referring to? Could you please elaborate a bit more your use case? Thanks.\nI'm talking about DependencyInjection/EasyAdminExtension.php , and the multiple loops inside the processEntityTemplates method.\nIn fact, you do this (to summarize):\n``` php\nforeach ($backendConfiguration['entities'] as $entityName => $entityConfiguration) {\n    foreach ($this->defaultBackendTemplates as $templateName => $defaultTemplatePath) {\n        // 4th-level - Default value\n        // 3rd-level - Existing template\n        // 2nd-level - Existing entity-specific template\n        // 1st-level - Template defined in main config\n    // After that you have your resolved template\n    // And set it in this \"resolved\" config :\n    // $backendConfiguration['entities'][$entityName]['templates'][$templateName] = $template;\n}\n\n}\n```\nBut we're missing something.\nWith this implementation, I cannot do this:\nyml\neasy_admin:\n    entities:\n        Category:\n            class: AppBundle\\Entity\\Category\n            templates:\n                edit: \"@App/admin/category_edit.html.twig\"\nBecause you automatically override this parameter with your 4-level checks.\nThat's why I'm talking about a \"0-level\" check which should be looking like this (right after the 1st-level check):\nphp\n// 0-level priority: template directly set in the entity configuration\nif (isset($entityConfiguration['templates'][$templateName])) {\n    continue;// Don't do anything because the template is already set\n}\nDo you see what I mean?\n. Everything looks good to me ! If you made tests for each use case, I think we're ok to merge this PR soon :smile: \n. Seems good to me. For other blocks, I think it's gonna be easier to find out what new blocks might be added by practicing in different back-ends.\nAs I said, I have a big project at work using EasyAdmin, to come on May 15th, so I think I'm gonna practice and optimize until then :)\n. Great :+1: \n. Great :+1: \n. A try/catch block is a good idea, but in fact, I think it'd be better to use a kernel.exception event listener, and render EasyAdmin's error template if the resolved controller was the AdminController.\nThere is such implementation in the JsonResponseListener from the Orbitale/ApiBundle, we can easily be inspired by this usage to render another response, it would allow us to still use the whole EasyAdmin's layout and still have all request params in the response, or use a custom ExceptionController... There are many possibilities for this, it just depends on what we need in the end :) \n. @fadoe Errors in forms can be thrown using Symfony's Validation. This is what you need here.\nRead the docs for more infos. If you are using constraints on your entities, any form type with the data_class set to this entity will use the Symfony validator to check whether the form is valid or not. And the errors are correctly shown in EasyAdmin, as long as you use the native validation system.\nWhat I was talking about is internal errors, like 500 errors that could be anything else \n. In fact we can catch any exception thrown while executing the AdminController. In my example, it checks for the ApiController and returns a different response, but in the case of the AdminController, we can easily render a classic error template with all errors reported, and append the backtrace only if in debug mode. That could be kind of flexible because we could add the former template in the design config and let the user override it if he wants.\n. I'll work on it soon then :smile: \n. I'll work on it soon then :smile: \n. I worked on this on #313 :wink: \n. Can you show your config?\nDid you extend the controller and/or the EasyAdminBundle?\n. The correct directory is app/Resources/EasyAdminBundle/views/, the file name is layout.html.twig, and you have to clear your cache when first using this feature, according to the docs\nFor the others (default and easy_admin), this behavior is not yet released, but it'll be soon, please be patient :smile: \n. The views you are trying to override are the correct ones, I'm gonna test the configuration to see whether it works or not with v1.4.0. Stay tuned :) \n. I tried on two different back-ends, and it works for me. I could override each main template (list, edit, new, show) , so I don't get what could be happening... \nMaybe @javiereguiluz or @ogizanagi can test on their own envs ?\nEdit: what is your environment ? (php version, OS ...) \n. Try to dump the templates paths generated by the processEntityTemplates method in the EasyAdminExtension class.\nFor instance, right in this class, try to dump this:\nphp\ndump(\n    $applicationTemplateDir.'/easy_admin/'.$entityName.'/'.$templateName.'.html.twig',\n    $applicationTemplateDir.'/easy_admin/'.$templateName.'.html.twig'\n);\nAnd see the output.\n. You can use var_dump instead of dump if you don't use the Symfony Debug bundle nor the VarDumper component :smiley: \n. Use the var_dump function, and right after the foreach loop, use exit to see the output in your app.\nLike this:\n``` php\n    private function processEntityTemplates(array $backendConfiguration)\n    {\n        $applicationTemplateDir = $this->kernelRootDir.'/Resources/views';\n        foreach ($backendConfiguration['entities'] as $entityName => $entityConfiguration) {\n            foreach ($this->defaultBackendTemplates as $templateName => $defaultTemplatePath) {\n                // 1st level priority: easy_admin.entities..templates. config option\n                if (isset($entityConfiguration['templates'][$templateName])) {\n                    $template = $entityConfiguration['templates'][$templateName];\n                // 2nd level priority: easy_admin.design.templates. config option\n                } elseif (isset($backendConfiguration['design']['templates'][$templateName])) {\n                    $template = $backendConfiguration['design']['templates'][$templateName];\n                // 3rd level priority: app/Resources/views/easy_admin//.html.twig\n                } elseif (file_exists($applicationTemplateDir.'/easy_admin/'.$entityName.'/'.$templateName.'.html.twig')) {\n                    $template = 'easy_admin/'.$entityName.'/'.$templateName.'.html.twig';\n                // 4th level priority: app/Resources/views/easy_admin/.html.twig\n                } elseif (file_exists($applicationTemplateDir.'/easy_admin/'.$templateName.'.html.twig')) {\n                    $template = 'easy_admin/'.$templateName.'.html.twig';\n                // 5th level priority: @EasyAdmin/default/.html.twig\n                } else {\n                    $template = $defaultTemplatePath;\n                }\n                $entityConfiguration['templates'][$templateName] = $template;\n                /Add this/var_dump(\n                    $applicationTemplateDir.'/easy_admin/'.$entityName.'/'.$templateName.'.html.twig',\n                    $applicationTemplateDir.'/easy_admin/'.$templateName.'.html.twig'\n                );\n            }\n            $backendConfiguration['entities'][$entityName] = $entityConfiguration;\n        }\n        /And this/exit;\n        return $backendConfiguration;\n    }\n```\n. Once you got the output, you can check whether the files shown exist or not\n. Which entity are you trying to set up ? I see that many of your entities are defined twice in the admin, or you have entities with the same name (it's the case for BonReception, BonLivraison, BonCommande, Devis, and more).\nBe sure that you override the correct directory for your entity.\nIf you have two entities with the same name in your backend, one of them will have its name appended with an _, so please check your EasyAdmin config file again.\n. I truely don't get it... I think I can't figure out what it can be.\nI bet you already tried to remove the cache rm app/cache/* and reinstall composer autoloader with\nrm -rf vendor/* && rm composer.lock && composer install && composer du -o ?\n. What do you want to change on these buttons exactly ? Only the label ?\n. Hmm... It's out of this topic.\nAs the template override is solved for you, let's close this issue and create a new one talking about what you need, because it's not implemented in EasyAdmin yet.\nMaybe we can think about a feature to reproduce what you need.\n. :+1: \n. I personnally don't see what you want, do you have a \"real\" case to explain more concretely what you need?\n. Then as @javiereguiluz said, if you can wait until next release (or if you use the dev-master version), you will be able to override any template, so you can just override the views only for your Product entity, and also override the form (template and action in controller), but as Javier said, it's kind of a tricky feature, as it would be in a \"classic\" back-end ;) \n. These two ltrim won't work on Windows.\nCan the final template name be simply be prepended by easy_admin/ ? Twig understands this notation as long as the root name (easy_admin in this case) is a valid view/directory in the app/Resources/views/ directory.\nRelying on absolute paths does not seem good to me, in fact :confused: \nEDIT: \nTo be clearer (I know I might have misty words sometimes :smile_cat: ), I mean replacing this way:\nphp\nif (isset($entityConfiguration['templates'][$templateName])) {\n    $template = $entityConfiguration['templates'][$templateName];\n    // 2nd level priority: easy_admin.design.templates.<templateName> config option\n} elseif (isset($backendConfiguration['design']['templates'][$templateName])) {\n    $template = $backendConfiguration['design']['templates'][$templateName];\n    // 3rd level priority: app/Resources/views/easy_admin/<entityName>/<templateName>.html.twig\n} elseif (file_exists($templateFilePath = $applicationTemplateDir.'/easy_admin/'.$entityName.'/'.$templateName.'.html.twig')) {\n-    $template = ltrim(str_replace($applicationTemplateDir, '', $templateFilePath), DIRECTORY_SEPARATOR);\n+    $template = 'easy_admin/'.$entityName.'/'.$templateName.'.html.twig';\n    // 4th level priority: app/Resources/views/easy_admin/<templateName>.html.twig\n} elseif (file_exists($templateFilePath = $applicationTemplateDir.'/easy_admin/'.$templateName.'.html.twig')) {\n-    $template = ltrim(str_replace($applicationTemplateDir, '', $templateFilePath), DIRECTORY_SEPARATOR);\n+    $template = 'easy_admin/'.$templateName.'.html.twig';\n    // 5th level priority: @EasyAdmin/default/<templateName>.html.twig\n} else {\n    $template = $defaultTemplatePath;\n}\n. Why not simply override the form.html.twig only for the User entity ? I know it's too soon to talk about the new templating system but it might be the best options IMO, even if there's just a form(form) inside it.\n. @manuelj555 could you fix your issue with the new templating system ? \n. :+1: \n. It's a known issue to me, but I'm sadly not professionnal enough in CSS to fix this issue. And I tried in an old PR to fix it, without success.\nMaybe @ogizanagi can look at it ?\n. Can't you just create an app-like directory right inside your Tests directory, so you can use one AppKernel class, and then load multiple config files for each config you want to test?\nThat's what I dit on OrbitaleCmsBundle and it works very well, you can really define a proper app and change its config as you want.\nThis way you can easily create fixtures-controllers that extend EasyAdmin's one and test overriding the controller and so on :smiley: \n(And I'm proud that this bundle is 100% covered, even small it is :yum: )\n. Plus, I don't believe in mocking systems. It's not clear to me what it is and how it works (I'm not familiar enough with the mocking system), but also I think that testing in a real environment (even if you \"fake\" it inside the Tests directory) is more relevant to create real working scenarios.\n. One other solution might be to configure travis in this kind of behavior you wrote in this test app.\nYou can configure your phpunit.xml.dist file to run tests on both applications by specifying two test suites. Even if it can be a bit harsh to do it, it might do what you want.\nYou can also configure your .travis.yml file to run something like \nshell\n$ phpunit ; phpunit -c {symfony_demo}/app/\nTheoretically, both tests will be executed. This allows putting app-specific phpunit config in both applications.\nThere is also another solution. You can use Github hooks to run the tests on the other repository whenever you push something in the bundle, I think there might be some documentation about Travis' API somewhere.\nBut for compatibility reasons I'd recommend two test suites and the whole config in the main bundle.\nAnd ideally I'd recommend to put the app right inside the Tests folder, because it's the best solution to me :smiley: \nPlus, you can already copy/paste the whole app in a Tests/Fixtures/ to recreate the symfony structure, redirect all logs to the build/ directory, prepare the kernel to work on multiple environments, prepare an AbstractWebTestCase class that allows you to create a kernel with different test environments. Everything is settled in the OrbitaleCmsBundle I mentioned above, you just can copy/paste that all.\nIf you want me to set this up in the bundle, based on your demo app, feel free to ask!\nI think using a standardized and clean solution for tests is better, because relying on two different repositories might be something unstable, because you're forced to run tests on both applications when you update the bundle :confused: . Plus, the main issue in this solution resides on the fact that new contributors have to be warned about this...\n. Here we are, I copied all files and integrated all tests in the EasyAdmin's environment. Feel free to move the tests to another location if you need to, but I think they are well distributed with my structure :)\nSee the PR #270 \n. This is a good idea, IMO we should implement that :) \n. This issue is not a PR and I did not talk about overlapping my PR ;) \nI think that we still need to discuss the way we'll allow form customization, because we certainly all have different ideas of how to do it. Though I'd still like to see my PR also implemented in the new features ;)\n. This is a great idea :+1: \nThrowing events is one of the best ways to allow interoperability between applications and bundles.\nPlus, create events like preFormCreation , postFormCreation , or postFormSubmission, or many others, is the best way to put entities logic outside the controller, and only in a listener per entity, for instance. \nAwesome idea :+1: \n. Nice, can't wait to test this :+1: \n. :+1: \n. In fact, everything in the Tests/AppBundleTest directory is related to the bundled bundle dedicated to tests, and the others are to test the main functions of EasyAdmin. So here you can define your own \"production-like\" parameters to test the bundle in situ .\nThe Tests/Controller directory is only here to test the default behavior of the AdminController : check that the routes are properly executed (index, css, etc.). There should not be any entity-linked logic in there. Only configuration.\nWith the environment parameter in the different kernel methods in the AbstractTestCase class, you can specify different config files that will recreate the environment based on a real configuration, contrary to all the files we use to test only the DependencyInjection classes.\nWhat do you think about this @javiereguiluz ?\n. No problem for the waiting! \nThanks a lot for approving my work :+1: \n. At the moment it's impossible to search only by a specific field, so if the whole table is retrieved after a search, it may mean that the words you have in the username are found somewhere else. \nWe had an issue in the search engine some days/weeks ago, but it has been fixed in v1.4.0, are you using this version?\n. @javiereguiluz I think that we should propose something like a \"cookbook\" extension of EasyAdmin on how-to customize the search action. Actually, I really think that a template + controller override is not that hard to do when you want to use a field-specific search, and it would allow users to completely change the behavior of the search action.\nBy this, I mean that the user can add its own search inputs, search himself on related entities, etc..\nA search_query sounds too much to me, whereas a simple search_fields configuration is enough.\nAn extension is better if you want a bigger search engine...\n. Maybe add the referer as a hidden field to the forms, and not override it if it's already set, so we can check directly in the form values?\n. You're right about the history, javascript is not a good idea\n. Sounds awesome :+1: \n. I'd still prefer a solution based on the namespace and/or the bundle name, because numbers are not relevant at all to make a difference between entities...\nBy the way it's actually a better alternative than the underscores\n. You're right, but the entity name can also be used as a logical parameter. For instance, in most of my backends, where I override the controller I often do things like if ($this->entity['name'] === '...'), and this would really be a pain if I had to check whether it's the Post or Post2 entity I'm looking for.\nI don't remember right now, but is the entity name overridable manually?\n. For me no, because I always develop my entities in the most standaloneable way, but I was thinking about some issues we had some days ago, in which one user had many entities with the same name, but they were from different parts of the app. So, it does not seem that uncommon.\n. We could proceed in multiple checks.\nFirst, collect all \"doubled\" entities.\nOnce all entities are processed, we retrieve the \"doubled\" entities, and for each, we check whether they are part of a bundle, and if so, use the bundle syntax as their name, like \"App_Post\" for AppBundle:Post, and \"Another_Post\" for AnotherBundle:Post , for instance. And if they're somewhere else, use the underscored FQCN as name, even if it's long like MyAwesomeVendor_Bundle_CommercialBundle_Entity_BooThisIsSuchALongEntityName \n. > - delete the search field (but keep search activated)\nIf you want the search field to be activated, the search action has to be allowed, so just a bit of CSS by adding your own assets might be enough for this if you need to hide the search field.\n\n\ninsert something between the form and the buttons\ninsert something after\n\n\nActually you can. Just override the form.html.twig template the way you want, and you'll just have to override the item_actions block like this:\ntwig\n{% block item_actions %}\n    {# Stuff before the actions #}\n    {{ parent() }}\n    {# Stuff after the actions #}\n{% endblock\n\n\ndelete some buttons\n\n\nIIRC you can specify this behavior in the configuration directly like this:\nyml\neasy_admin:\n    edit:\n        - '-delete' # This removes the `delete` button in the `edit` view\nThis needs to be tested because I don't remember correctly how it works (in fact, it has changed since the first bundle's release, so I might be a bit confused. Maybe @javiereguiluz can lighten our minds about this :smile: ) \nFor the last point, I think we might need to completely refactor configuration, because it's kinda confusing, even for me. Some days ago, I had to re-check almost all documentation files for a feature, and it kinda bored me, I think we need a good discussion about this...\nHope it helps :)\n. Can re-close the issue if it's ok :)\n. At first I'd prefer to think about a new documentation architecture.\nIn fact, I think we should differ \"base\" documentation and a cookbook.\nBy \"base\" doc, I mean explaining configuration use, without even talking about override.\nSimply all the basic use cases.\nAnd the cookbook is the full explanation of more advanced use cases that the api written in EasyAdmin that allows to:\n- Override any kind of template, globally or per-entity\n- Override the controller and use some methods that can facilitate the different actions in the back-end. (For this, I think we clearly should trigger custom events like proposed in #268 )\n- .. And maybe some other cases I did not think about yet, but we can either pick in every Github issue.\nThe good point about the cookbook is that it allows us not to read only documentation, but specific cases we might encounter in our personal and professional back-ends.\nWhat do you think ?\n. I'd prefer to see what kind of architecture you'll propose before you directly work on this, can you do this? It might save you some time to discuss about it before :) \n. And what may be the \"chapters\" of each of the two parts?\n. Getting Started: \nI'd wrap the points 4, 5, 6 and 7 into a \"Backend views and actions\" chapter that briefly explains what is the concept of views and actions in EasyAdmin.\nPlus, in the 6th point, I'd talk only about field configuration, not form or \"prepareEntity\" methods for instance.\nAdvanced Tutorials:\nI'd rename the point 2 to \"The AdminController\" and add children to it for each form of override in the controller: persist events, entity constructor, create_Form method, etc. Even if all these informations are in the same file, I think it's better to see more subjects at the same time in a single list.\nAlso, the 3rd point might sound better being called \"EasyAdmin Kernel events dispatched\" or alike.\nFor the 5th point, I'd change the name for \"Tips\", because the two parts in the actual chapter 9 are more *Tips_ or best practices than a advanced techniques, because it does not rely on complex behavior.\nExcept these points I agree with this :)\n. I think it can be quite disturbing to directly use the referrer when the page is the same.\nFor instance imagine a scenario: you are on the search list, you edit an entity, but the form is invalid. You're then still on the same page. So what does become the referrer? Is it changed to the edit page, or does\u00a0it keep the referrer value?\nI'm afraid I did not test it because I don't have any easyadmin env right now and tired to install one, but if what I'm talking about works like expected, then the PR would be fine for me :) \n. Then it's good for me I think you can merge this, and we'll test the feature in the next release :+1:  (In fact, the big app I'm working has begun staging process so I can't use dev-master anymore until next release. But when 1.5 comes out, I'll run all phpunit tests on the app to see whether it's still compatible)\n. In fact, there's a debate over the web about \"save return to edit page\" and \"save return to listing\" two arguments.\nFor this, SonataAdmin, for instance, found a solution by adding both buttons : \"Save\" and \"Save and finish\".\n. When something is wrong, it means that the problem is internal, so no need for flash messages, just an error might be enough. So this means that the back-end config is wrong, or that the entities are not well managed. The most frequent might come from validation and entities mapping I think.\n. Oh, blimey, sorry for the inconvenience :smiley: \n. Do you have a true example of the \"before>after\" effect of this PR? Especially for the css part\n. I'm :+1: for changing the width reference in the plugin, seems the best option right now\n. For the method_exists checks, do you think it might improve readability to have some private method like $this->resolveAction('new') that will automatically check the function existence ? And for the functions that accept one or more argument, use it as a variadic function and send the parameters automatically, except the first one that is the action name.\n. Might I also suggest using a system like the one you have in the twig extensions, like this:\nphp\n// Entity currently used: Post\n$this->resolveAction('new'); // Returns 'newPostAction'\n$this->resolveAction('prePersist*Entity'); // Returns 'prePersistPostEntity'\nWhen there is no wildcard, the entity name is appended. Unless, the wildcard is replaced by the entity name.\n. Excluding what I said, seems all good :+1: \n. The goal is mainly to prevent this:\n``` php\npublic function newAction() {\nif ($this->entity['name'] === 'Post') {\n    return $this->newPostAction();\n} if ($this->entity['name'] === 'Product') {\n    return $this->newProductAction();\n} if ($this->entity['name'] === 'Category') {\n    return $this->newCategoryAction();\n} if ($this->entity['name'] === 'Customer') {\n    return $this->newCustomerAction();\n} if ($this->entity['name'] === 'Page') {\n    return $this->newPageAction();\n} if ($this->entity['name'] === 'Video') {\n    return $this->newVideoAction();\n} if ($this->entity['name'] === 'BlogArticle') {\n    return $this->newBlogArticleAction();\n}\n\nreturn parent::newAction();\n\n}\n```\n. I still think that this part:\nmarkdown\n **\u276e NOTE \u276f** you are reading the documentation of the bundle's **most recent stable\nversion**. You can also [read the documentation of the development version \u279c]\n(https://github.com/javiereguiluz/EasyAdminBundle/tree/master/Resources/doc).\nshould be replaced with:\nmarkdown\n **\u276e NOTE \u276f** you are reading the documentation of the bundle's **dev** version. You\ncan also [read the documentation of the **latest stable** version \u279c]\n(https://github.com/javiereguiluz/EasyAdminBundle/tree/v1.5.0/#easyadmin).\nAnd change the version before each new release.\n(and don't forget to remove the newlines in this code, because it's just here for readability in the issues ^^ )\n. > @Pierstoval I don't agree with your proposal to change that note about dev/stable versions ... but anyway I've done the change as you suggested. Let's see if that makes me chage my mind about this :)\nIn fact, people will always read the docs for master, because it's always the HEAD ref of the git repository, and the homepage on Github. So, as the latest stable version is (almost) never the same as master, it's better to explicitly tell the user that the viewed docs are the master's one. And this code must then be changed depending on the version. I know it can be boring to always think about this, but it does not make sens to me to write that you're viewing the latest stable docs, whereas you are in fact viewing the master docs...\n. > @Pierstoval I don't agree with your proposal to change that note about dev/stable versions ... but anyway I've done the change as you suggested. Let's see if that makes me chage my mind about this :)\nIn fact, people will always read the docs for master, because it's always the HEAD ref of the git repository, and the homepage on Github. So, as the latest stable version is (almost) never the same as master, it's better to explicitly tell the user that the viewed docs are the master's one. And this code must then be changed depending on the version. I know it can be boring to always think about this, but it does not make sens to me to write that you're viewing the latest stable docs, whereas you are in fact viewing the master docs...\n. I'm truely not in favor of this auto-generated camelCased name. We already generate the name if it's not specified, and the docs from #284 clearly indicates that we intend to help the developer to have full and total control of the entity name. If we change it specificly for PHP methods, I think we might invoke some new magic that might confuse users.\nPlus, if we tell developers to use only alphanumeric characters + underscore as valid characters for the entity name, we can propose UpperCamelCase as a best practice for entity naming. Or, we can at least let the developer realize himself that his naming was a mistake, simply by explaining the method override looks like new<EntityName>Action. If he names his entity my_awesome_entity, he then must name his method newmy_awesome_entityAction, and he'll be conscious of the bad entity naming. If we force the use of the UpperCamelCase, I personnally will have some problems with one of my back-ends that manages multiple parts of the app.\nFor instance, one of my apps uses a Map generator, it has a User management, a CMS, and a game system. These are all parts of the app, (and that's why I need to customize the menu urgently, because managing 20 or more entities is quite hard right now with EasyAdmin :D ) and I created and grouped methods based on the app part, in the controller.\nFor instance I have this:\nphp\nfunction newMap_MapAction();\nfunction newMap_MarkerAction();\nfunction newGame_CharacterAction();\nfunction newCms_PageAction();\nfunction newCms_CategoryAction();\nAnd so on... And it implies more readability for me, because actually I'm doing much security on the base entity naming. I created automatic roles checks based on the basename, so I extract it, and if the user does not have the ROLE_ADMIN_<BASENAME> or the ROLE_ADMIN_<BASENAME>_<ENTITYNAME> role, I throw a 403. \nIt can simply conduce to ROLE_ADMIN_MAP and ROLE_ADMIN_MAP_MAP always uppercased roles, and for me it's really important to check that.\nI'm definitely :-1: for this kind of magic \n. In my config using underscores, the new name generator will use the camel cased names to match method, so I won't be able to use them anymore, and I don't like it.\nI still think that automatic generation of a camel cased name is \"too much\" magic. Plus, there's an edge case in the developers understanding on how to override the controller methods, because any name \"not respecting the best practices\" can conduct the user to confusion.\nPlus, the camel case name seems to be used exclusively in the controller, so there is no use of it anywhere else, so it sounds very much specific to me, and has no place here.\nI'm totally against this idea...\n. Plus, as entity names are the main entry point for developers to add entity-specific logic to their back-ends, so if you add a second entry point, it's too much modifications. I prefer having a method name not respecting the best practices instead of having myself be forced to use one nonsense standard that will only block me in creating my own customized backend. \nEasyAdmin proposes an easy and very flexible way of creating backends, so having something as restricted as this proposal sounds non-flexible enough to be refused, IMO.\n. Plus, as entity names are the main entry point for developers to add entity-specific logic to their back-ends, so if you add a second entry point, it's too much modifications. I prefer having a method name not respecting the best practices instead of having myself be forced to use one nonsense standard that will only block me in creating my own customized backend. \nEasyAdmin proposes an easy and very flexible way of creating backends, so having something as restricted as this proposal sounds non-flexible enough to be refused, IMO.\n. Thanks for reviewing your decision !\nI have another idea linked to this feature, I'll make an issue for this.\n. Thanks for reviewing your decision !\nI have another idea linked to this feature, I'll make an issue for this.\n. :+1: \n. :+1: \n. We can still change the test environment to fit with some kind of Symfony 2.3 config, and change it to 2.7 once it's released :laughing: \n. We can still change the test environment to fit with some kind of Symfony 2.3 config, and change it to 2.7 once it's released :laughing: \n. Look at this example , you can get it with the _entity_config var\n. Look at this example , you can get it with the _entity_config var\n. Great ! In fact yes, I have a virtual field that is used in a doctrine listener in which I execute some webservice calls that will use the virtual property to be handled (in fact this property is useless once the webservice is called and has populated the entity).\nThanks for this @javiereguiluz !\n. Great ! In fact yes, I have a virtual field that is used in a doctrine listener in which I execute some webservice calls that will use the virtual property to be handled (in fact this property is useless once the webservice is called and has populated the entity).\nThanks for this @javiereguiluz !\n. :+1: \n. :+1: \n. I don't think that we'll implement such features \"natively\", but when the bundle will reach some \"true-stable\" version, some kind of \"finished\" one, I'm gonna write many cookbooks entries to propose users to create such system.\nFor now, you can do it this way:\n- Override the AdminController to manage your translated entity manually.\n- Create a Form service that will handle your entity and a specific locale.\n- Override the form.html.twig template for your entity and add one form per locale.\n- We are using Twitter Bootstrap so it's not hard to handle a simple Tab system.\n- In the controller you created earlier, just manage the forms so that your entity is persisted with all its translated elements. (I bet you'd use something like Gedmo's Translatable Doctrine behavior for easier support).\nEven though it's hard work, you can already do it in EasyAdmin :smiley: \n. I don't think that we'll implement such features \"natively\", but when the bundle will reach some \"true-stable\" version, some kind of \"finished\" one, I'm gonna write many cookbooks entries to propose users to create such system.\nFor now, you can do it this way:\n- Override the AdminController to manage your translated entity manually.\n- Create a Form service that will handle your entity and a specific locale.\n- Override the form.html.twig template for your entity and add one form per locale.\n- We are using Twitter Bootstrap so it's not hard to handle a simple Tab system.\n- In the controller you created earlier, just manage the forms so that your entity is persisted with all its translated elements. (I bet you'd use something like Gedmo's Translatable Doctrine behavior for easier support).\nEven though it's hard work, you can already do it in EasyAdmin :smiley: \n. Use the basic validation system that is available in Symfony by default :smile: \n. Use the basic validation system that is available in Symfony by default :smile: \n. @RogerBCA There's some work to do to allow locale selection, It's not possible to do it \"100% natively\", because the locale used in EasyAdmin will almost always be your application's default locale.\nYou have to do the job manually to allow Gedmo to translate in the correct locale. It's too complicated to explain here, and I have not tested it, so I think you might have to work on this yourself :confused: \n. What you are proposing is not a fix, it's a hack :)\nI think we might need to add 'fieldName' => null, in the $defaultEntityFieldConfiguration attribute inside the Configurator.php class. It would be a better workaround. But anyway, I asked @javiereguiluz whether this field name was used or not, and I still did not investigate enough to be sure of that.\n. What you are proposing is not a fix, it's a hack :)\nI think we might need to add 'fieldName' => null, in the $defaultEntityFieldConfiguration attribute inside the Configurator.php class. It would be a better workaround. But anyway, I asked @javiereguiluz whether this field name was used or not, and I still did not investigate enough to be sure of that.\n. I don't understand completely what you need, but it seems to be such kind of conditional association between two entities. \nWhat are the relations between your two Client and Project entities?\n. I don't understand completely what you need, but it seems to be such kind of conditional association between two entities. \nWhat are the relations between your two Client and Project entities?\n. Can you show the two entities' mapping ?\n. Can you show the two entities' mapping ?\n. If the php property is named $project; in your Client object, then use this name in the admin config, and add a __toString() method in the Project class that returns $this->projectName (or project_name, whatever name you use in your class). EasyAdmin will simply add a <select> tag allowing you to select the project.\nIf you are using Doctrine relations (with the annotation @ORM\\ManyToOne(...) in your Client class) , everything will be OK.\n. If the php property is named $project; in your Client object, then use this name in the admin config, and add a __toString() method in the Project class that returns $this->projectName (or project_name, whatever name you use in your class). EasyAdmin will simply add a <select> tag allowing you to select the project.\nIf you are using Doctrine relations (with the annotation @ORM\\ManyToOne(...) in your Client class) , everything will be OK.\n. You could simply override the form, add the field manually, and modify the query builder inside it with the query_builder form field option.\n. Oh right, sorry for that ^^\nThen, overriding the list action for this specific might be a good solution, either by catching the events or overriding the method in the controller, sounds the best to me, if I understood correctly what is needed here\n. Your cat_id property should be renamed to cat or category. As it's a relational property, you get the whole object when you need it.\nLike this:\nphp\n// Client\n/**\n * @var Category\n * @ORM\\ManyToOne(targetEntity=\"YourBundle\\Entity\\Category\")\n * @ORM\\JoinColumn(name=\"category_id\")\n */\nprotected $category;\nThat's all. This is handled by default by EasyAdmin in rendering a simple <select> in forms, or a stringified version of the object in list and show views.\n. I'm not asking you to \"write the category for each\" Client.\nI'm asking you to review your Doctrine usage. \nIf your database already contains the ID, and if every ID exists in the other table, just change your entity code to this:\nphp\n/**\n * @var Category \n * => This var should be hydrated as a Category object, instead of an integer.\n *       Doctrine does this automatically when you set up relations in a proper way.\n * \n * @ORM\\ManyToOne(targetEntity=\"YourBundle\\Entity\\Category\")\n * @ORM\\JoinColumn(name=\"cat_id\")\n * => \"cat_id\" is the SQL field that will represent the relation in \"database\" terms.\n */\nprotected $cat_id; // Or the property you are already using in your object\nIf you're using MySQL, an index and a foreign key will be created automatically by doctrine schema manager when executing it.\nIf this works, it seems that your mapping is good. You can use app/console doctrine:schema:validate to see if it's correct, and app/console doctrine:schema:update --dump-sql to see what are the potential sql queries that are to be executed with this change.\nIf you stick in having the integer value in your Client object instead of having the whole Category related object, then you'll have to update the way you retrieve objects with your repository, and this is not an easy deal.\nIf you have a \"relational\" database and do not use proper Doctrine relations, you might experience unexpected behaviors. In Doctrine we almost never think in terms of \"columns\" and \"tables\", but in \"properties\" and \"entities\", and in an Object Relation Mapping (ORM), any relation between two entities have to be represented as an object one, meaning you should almost never have to set up join columns or join tables (in case of ManyToMany relations).\nThis seems to be outside EasyAdmin's behavior, I think you have to re-think about how you use Doctrine if all your mapping is similar.\n. It seems there's a missing option, referencedColumnName:\nphp\n  /**\n   * @var ClientCategory\n   * @ORM\\ManyToOne(targetEntity=\"ClientCategory\")\n   * @ORM\\JoinColumn(name=\"cat_id\", referencedColumnName=\"the_id_from_client_category_table\")\n   */\n  protected $catId;\n. Maybe your entity returns \"0\" or an empty string.\nTry to update your entity getter for something like this: return $this->secteur_dactivite ?: null; (changing for your property name).\nAs EasyAdmin checks for getters, this should work.\n. The one that should be nullable :)\n. :confused: Might need to see the whole app to check what's wrong, sorry I cannot find out what it is, right now.\nBy the way, I'm off for a week, so keep on searching ;) \n. Make sure this \"0\" id never reproduces again, or you'll have to manually edit the database all the time\n. :+1: \n. :+1: \n. I hope we'll get to this point soon.\nAs said, it's some work to do, but as we'd need to create some compiler passes to update the container's configuration, it's not involving BC breaks or something, and it would allow third party bundles to directly integrate EasyAdmin. \nPlus, we can still propose the user to make the configuration and the \"plugged\" content to merge, with precedence to the config :) \nIf someone works on this in the few coming months, would you try to look at it?\n. Just to say... What does it do exactly ?\n. Just to say... What does it do exactly ?\n. Wow this looks absolutely awesome, I have to change this setting in my repos :) Thanks for the tips !\n. Great :+1: \nStill no other proposition to use a \"configurable\" way to customize homepage ? :) I still have my homepage branch in case of.\nEDIT: Saw your message on #2 , sorry for re-asking ;) \n. I'm :+1: for this too :)\n. @javiereguiluz As this feature is becoming more and more demanded, I think we should work on this.\nMaybe rename the options in form_options ?\n. Maybe you could apply raw to all datas in the css twig file ? I bet there's an auto escaping that's set to css in the file. Or it's an error from SF2.7...\n. Maybe someone else can give us some clues /cc @WouterJ @stof ?\n. It might be a BC break, but anyway, this can be a part of the many changelogs and \"UPGRADE*\" files we'll need to read when upgrading to SF2.7+ :smile: \nPlus, to me it seems very logical to escape with the css strategy whenever you're using css twig files.\n. Para eso, puedes cambiar tu routing por esto : \n``` yml\napp/config/routing.yml\nadmin:\n    resource: \"@EasyAdminBundle/Controller/\" # Puedes cambiar con tu personal controller\n    type:     annotation\n    prefix:   /{_locale}/admin\n```\nEntonces, en tu indexAction, puedes a\u00f1adir la variable $_locale y la definir en una propiedad del controller, $this->locale = $_locale;.\nCon ello, puedes cambiar la locale de tus objetos con la locale que esta en la URL.\nNo soy familiar con espa\u00f1ol so perdoname :smile: \n. I lack vocabulary, truely, Google is my friend :D \n. @RogerBCA had a problem with managing entities translations and needed to set/get the locale for the entities, but could not retrieve the locale correctly, so I proposed him to set the locale directly in the routing in order to retrieve it directly in the controller action and set it in one of the controller's property :)\n. @RogerBCA had a problem with managing entities translations and needed to set/get the locale for the entities, but could not retrieve the locale correctly, so I proposed him to set the locale directly in the routing in order to retrieve it directly in the controller action and set it in one of the controller's property :)\n. Yup it may be a css issue from the previous latest version.\nDid you reinstall the assets also ?\n. There might be an error in the assets you're loading\n. This issue is quite old, could you fix it with the new releases?\n. Actually, the goal is to avoid having the dirty \"Error 500\" page when in prod.\nThere's still plenty of work to do with this feature, this PR is just a base setup to see what we truely need and what we can do for it :) \nMaybe we can disable this listener while in debug mode ?\n. > Regarding the production error page, this should be configured by the developer in his application. Is the aim of this PR to provide a standalone error page in the EasyAdminBundle for production ?\nYeah, it's meant to replace the ugly non-styled \"Error 500\" page in prod. \nPlus, if we provide a template for this, we might then add it to config for the user to override it in a very simple way, much better than overriding TwigBundle's one.\n. > Regarding the production error page, this should be configured by the developer in his application. Is the aim of this PR to provide a standalone error page in the EasyAdminBundle for production ?\nYeah, it's meant to replace the ugly non-styled \"Error 500\" page in prod. \nPlus, if we provide a template for this, we might then add it to config for the user to override it in a very simple way, much better than overriding TwigBundle's one.\n. I truely understand, but sometimes you need something better to check in prod what happened. \nAnyway, you can read the #246 issue to know why I came up to this ;) \n. I truely understand, but sometimes you need something better to check in prod what happened. \nAnyway, you can read the #246 issue to know why I came up to this ;) \n. @javiereguiluz I don't think that wrapping the indexAction method may be good, because overriden actions or custom actions might not handle exceptions the same way, which sounds wrong to me.\nI'm gonna work on this tomorrow and provide handling for custom controllers and only in non-debug environment (I prefer relying on the kernel.debug param instead of kernel.environment for compatibility reasons).\n. > By the way, what would be the solution for route based custom actions ? It feels strange that method based actions are handled by this, and not route ones ?\nWhatever we can do, route based actions would be handled only if they execute a controller that extends the AdminController. We have no way to check that a route is behind EasyAdmin, because it may only use the layout, which we cannot detect in the ExceptionListener.\n\nI don't see the issue ? Your listener will catch and render the exception with the new error template for any exception, right ? And it is already catching it for any easyadmin actions, even custom (except route based ones). This behavior will not differ from the try/catch in indexAction implementation or am I wrong ? :/\n\nIt will work only if you execute the parent::indexAction() method in the child controller, but in some very complex cases, one might not want to execute the default indexAction, or copy/paste the original behavior to add some custom logic.\nAnd then, he may change the way the controller handles the exception, which is not the goal of this PR.\nThe best solution is, indeed, to handle the exception in a kernel.exception listener.\nWhat's good with it is that, as it's a simple service, we can manage it by proposing to disable it in the configuration, and the best for me, as said in above comments, is to add the exception templates in the configuration to add them to the template customization system implemented in v1.4 , which will allow users to add custom details in the different templates.\nI'm also thinking about template customization with a per-exception-class system, like easy_admin/errors/RuntimeException.html.twig for instance.\n. Let's wait for tomorrow until I can work on this :wink: \n. Ok no problem for that :) \n. Here we are, made some updates : allowed to disable the exception listener with the exception_listener.enabled EasyAdmin config parameter.\nAlso search in the resolved controller whether it extends the EasyAdmin controller.\nJust need to change the status code if the exception is an HttpException\n. Actually, as said, I don't want to rely on dev nor prod, but more on kernel.debug, because a staging/integration environment may also need to show proper error messages.\nIf you want, I can simplify this PR, but it's \"harder\" to catch Doctrine-specific exceptions than catch all exceptions and show their message. Doing Doctrine-specific catch would be too specific. As it's an open-source project, we must do our best to allow maximum flexibility and standardization.\nWe need some debate, but I still think this feature can be useful :smiley: :+1: \n. Actually, as said, I don't want to rely on dev nor prod, but more on kernel.debug, because a staging/integration environment may also need to show proper error messages.\nIf you want, I can simplify this PR, but it's \"harder\" to catch Doctrine-specific exceptions than catch all exceptions and show their message. Doing Doctrine-specific catch would be too specific. As it's an open-source project, we must do our best to allow maximum flexibility and standardization.\nWe need some debate, but I still think this feature can be useful :smiley: :+1: \n. Yep you can change the repository call to use the $this->entity['class'] instead of the Bundle:Entity shortcut :) \n. Yep you can change the repository call to use the $this->entity['class'] instead of the Bundle:Entity shortcut :) \n. Good, this should be the main entry point in customizing the backend :) \n. Omg, Kinda 1 minute reactivity in edit/add/commit/push, awesome :+1: :+1: \n. The advantage of merging is that it needs 2 consecutive clicks :D \n. Without customizing the controller: actually no, but maybe the PR #304 can be useful for you? If so, just support it, it's still pending and @javiereguiluz needs ideas on how-to implement this in a more \"EasyAdmin\" way\n. I think the typecast you propose might be a good solution, even though I haven't tested it\n. If you want something more explicit indicating that the property belongs to the form, you can use form_field_option, which is longer, but very verbose.\nFor the rest, what you propose @javiereguiluz that is related to #217 , in fact I don't know at the moment if it works.\nHave you tried using something like type_options: { attr: { class: \"hidden\" }, disabled: true } and checked the generated html ?\n. So, where are we with this PR ?\nI think it needs a little rebase to check everything is ok and then merge it, like #326. If we need to clean this feature in the future, we can find other workarounds later :-) \n. @javiereguiluz, as of #366, this PR needs to be merged soon IMO ;) \n. @javiereguiluz I know you might be busy at the moment, but can you check this PR ?\nI'm starting to need it in some of my backends, and workarounds for this behavior are quite ugly (and not very stable...).\nPlus, it'd be great for an 1.6 version to have this feature and @ogizanagi #326's one when released\n. Still waiting :confounded: \n. 25 days since my last ping.\nA friend of mine does need many of the features that are still upcoming and awaiting for reviews, especially this one.\n. Party time :tada: !\n:+1: \n. You can do it with an event listener that will load the whole EasyAdmin config from different files depending on the request, or on the controller.\nIt sounds like hard work, but maybe you can do it by using some kind of hacks.\nAfter all, everything lies under the request, so you can decide that any request matching /admin1 will load the app/config/admin1.yml file, and /admin2 will load the app/config/admin2.yml file.\nYou can also do this \"roughly\" while building the container in an Extension class, or in a CompilerPass.\nIt's not \"impossible\". It's just hard work.\nThe best solution, though, would be using 2 different kernels, like @ogizanagi said.\n. Yes, but if you extend the whole bundle, you can override all classes, and with this, maybe you can do something.\nAnyway, multiple kernels is still the best solution.\n. I use multiple admin panels in different parts of the app, but most of the time it relies on different libs, so it's not \"multiple easyadmin\" bundles.\nBy the way, you can certainly extend the AdminController, override the initialize function and do this:\n``` php\nprotected function initialize(Request $request)\n{\n    $return = parent::initialize($request);\n$this->config = ... // Your custom logic here\n\nreturn $return;\n\n}\n```\nWith this you can load an entire config by using some hacks and instantiating a Configuration and an Extension object.\nBut it will only work for the controller. If you want to access it inside Twig (which will be mandatory) you have to override the Twig extension in the bundle and modify the configuration on each getBackendConfiguration() call inside the extension.\nAs said, it's really hard work, but it's possible.\n. I don't think that SonataAdmin can use multiple backends either, moreover it's pretty more complex than EasyAdmin in a high number of points...\n. @leonex-cs1 You can customize your security so certain actions are only executable by certain roles, and you can customize the menu so only certain menus can be visible only by certain roles. @leonex-cs1 You can customize your security so certain actions are only executable by certain roles, and you can customize the menu so only certain menus can be visible only by certain roles. @leonex-cs1 Just override the different actions you want in the base controller, or create custom controllers for the entities you want, and override the actions, and in them you can just add this:\nphp\n$this->denyAccessUnlessGranted('ROLE_YOUR_ROLE');\nAnd for the view part, it's a bit trickier...\nCreate the app/Resources/easy_admin/menu.html.twigMake it extend the @EasyAdmin/default/menu.html.twig template.\nThen... I'm not sure about twig itself and its extension system, but you could copy/paste the menu.html.twig source code and add your own logic to it.\nThis is the least safe option, that's why I proposed #1514\n. @leonex-cs1 Just override the different actions you want in the base controller, or create custom controllers for the entities you want, and override the actions, and in them you can just add this:\nphp\n$this->denyAccessUnlessGranted('ROLE_YOUR_ROLE');\nAnd for the view part, it's a bit trickier...\nCreate the app/Resources/easy_admin/menu.html.twigMake it extend the @EasyAdmin/default/menu.html.twig template.\nThen... I'm not sure about twig itself and its extension system, but you could copy/paste the menu.html.twig source code and add your own logic to it.\nThis is the least safe option, that's why I proposed #1514\n. Your way is perfect for standardization in the controller :) , but it does not prevent rendering of the menu item in the view :wink: . Your way is perfect for standardization in the controller :) , but it does not prevent rendering of the menu item in the view :wink: . You can simply avoid the referer parameter, can't you? Or I don't get what you need :confused: \n. Sounds good to me to use form_options here, and form_field_option in the fields configuration\n. So maybe a small rebase to check everything is correct, followed by a merge is good?\n@javiereguiluz I know you have plenty of work but I think this feature and #323 are quite awaited...\n. You should always override the parent view when overriding any view, and add {{ parent() }} in any overriden block, because here you lack, for instance, the jquery-flexmenu.min.js file.\nHave you correctly run app/console assets:install --symlink --relative ? \n. --symlink will create symlinks in the web/bundles/ directory instead of copying the assets.\n--relative will create relative symlinks instead of absolute symlinks, which guarantees portability and allows you to move or rename the root directory for instance.\n. :+1: \n. Do you have some security firewalls in your app/config/security.yml that could prevent access to the /admin path?\n. At the moment I really don't see what cause the issue...\nDoes your full url starts with / or with /?\nIs the cookie domain set properly in your app config? (seems you are using multiple subdomains)\n. Maybe a cookie problem\n. I think it's a great idea!\nThe best would be to create specific event classes that implement some specific events for each event type. For instance, a POST_LIST event might implement getCollection and getTableHeaders, so you don't have to modify the whole config to add a custom field in the headers for instance, and modify the different objects.\nObviously it's tough because we need to refactor the behavior that renders the different tables, but it sounds legit to enhance the power of the listener usage, which is currently quite small :)\n. I see a problem in the edit and new forms. When you create a form and want to add a complex field (like embedded forms, quite common in complex backends) , you are forced to add the field also in EasyAdmin, remove it in the form and re-add it, or it throws an error. If we refactor some behaviors in the backend, everything would be customizable.\nI'm :+1: for @ogizanagi's idea, but you're right @javiereguiluz : we may need to focus on other features before this :wink: \n. This is the expected behavior, yes\n. If you have something like this:\nphp\n    public function testthing(){\n        $str = '<ul>';\n        foreach ($this->associatedEntity as $item) {\n            $str .= '<li>'.$item->getName().'</li>';\n        }\n        $str .= '</ul>';\n        return $str;\n    }\nThen it should be normal : the content is escaped in twig.\n. Actually, part of this issue is implemented with all the events system :) \n. I'm in favor of renaming \"class\" to \"css_class\".\nBut, I'm totally against the idea of putting all form options in the root field property.\nShortcuts are good (like \"css_class\", but form_field_options are related to the form, as well as the form_widget options I proposed some time ago are related only to the twig form widget.\nAs @ogizanagi said, the class is overridable in the attr option, so the shortcut can create some edge cases when the class is overriden.\nPlus, separate all \"Symfony-native\" behaviors in their own attributes is much better for us because there will never be conflicts with \"EasyAdmin-native\" behaviors implemented in the easy_admin property option.\n. @xabbuh You're right, I think we might need to think about the fact that, as EasyAdmin is young, many \"errors\" and tweaks were done in the past, and forcing users to watch over each BC break is quite annoying.\nI think that an upcoming 2.0 version might be a good way to fully improve EasyAdmin even with breaking compatibility but improving performances.\n. @xabbuh You're right, I think we might need to think about the fact that, as EasyAdmin is young, many \"errors\" and tweaks were done in the past, and forcing users to watch over each BC break is quite annoying.\nI think that an upcoming 2.0 version might be a good way to fully improve EasyAdmin even with breaking compatibility but improving performances.\n. The single model is good when configuring your app in the database, for instance. \nIt's easy to do this: override the listAction for this entity and make it execute the editAction, and override the editAction for this entity and make it create a single object in the database if there is none, and if there is one, retrieve it, and return the classic editAction with this item.\nYou can also override the instantiateNewEntity method if you want to use the newAction\n. I think we should remove the old admin route in a future version, because it's still an edge case.\n. I think we should remove the old admin route in a future version, because it's still an edge case.\n. I am, and I asked the question about BC breaks policy in #180 some time ago, and I still think we need to ensure there is no BC break, even if it's very hard, and have every BC break between two core versions  (1.x and 2.x).\nAlso, I think it might be good to have some logging messages about deprecated features, because SF2.7 for instance adds a cool new way of indicating developers that some features are deprecated, and I think we might do something similar in EasyAdmin. It will obviously throw maaaaany logs, but at least no exception (unlike true BC break which throws an error).\nBy the way, it's hard work, so we might need to think about the best possible solution :)\n. For compliance reasons, I suggest to move this PR forwards to a v2 of EasyAdmin, because backends would break instead...\n. Create two methods making the conversion into DateTime objects on the fly, and use them as parameters in your entity configuration:\nyml\neasy_admin:\n    entities:\n        MyEntity:\n            form: [ { property: startDatetime, type: date }, { property: endDatetime, type: date }\u00a0]\n``` php\nclass MyEntity\n{\n    public function getStartDatetime() {\n        $date = new \\DateTime();\n        $date->setTimestamp($this->dateStart);\n        return $date;\n    }\npublic function setStartDatetime(\\DateTime $date) {\n    $this->dateStart = $date->getTimestamp();\n    return $this;\n}\n\n}\n```\nNevermind the properties names, just use your class names.\nIt's the best way to do what you need actually.\n. Create two methods making the conversion into DateTime objects on the fly, and use them as parameters in your entity configuration:\nyml\neasy_admin:\n    entities:\n        MyEntity:\n            form: [ { property: startDatetime, type: date }, { property: endDatetime, type: date }\u00a0]\n``` php\nclass MyEntity\n{\n    public function getStartDatetime() {\n        $date = new \\DateTime();\n        $date->setTimestamp($this->dateStart);\n        return $date;\n    }\npublic function setStartDatetime(\\DateTime $date) {\n    $this->dateStart = $date->getTimestamp();\n    return $this;\n}\n\n}\n```\nNevermind the properties names, just use your class names.\nIt's the best way to do what you need actually.\n. No, in fact I made quite a big mistake, I'm gonna edit my post.\nIn fact, the setter should accept a DateTime object and set your original value to the DateTime's timestamp values.\n. There's a workaround to allow empty dates, but I don't remember how it works, maybe @ogizanagi can tell, I think he worked on this\n. @ogizanagi could you work on #207 ?\n. I think we can find a workaround directly in twig, but I need to make some checks on SF security behavior :)\n. I think we can find a workaround directly in twig, but I need to make some checks on SF security behavior :)\n. Here is what have been in 2.7 in the getUser() method from the app variable:\n``` diff\n    /\n     * Returns the current user.\n     \n     * @return mixed\n     \n     * @see TokenInterface::getUser()\n     */\n     public function getUser()\n     {\n-        if (!$this->container->has('security.token_storage')) {\n-            return;\n+        if (null === $this->tokenStorage) {\n+            if (null === $this->container) {\n+                throw new \\RuntimeException('The \"app.user\" variable is not available.');\n+            }\n+            $this->tokenStorage = $this->container->get('security.context');\n         }\n\n\n$tokenStorage = $this->container->get('security.token_storage');\n\n\nif (!$token = $tokenStorage->getToken()) {\n\n\nif (!$token = $this->tokenStorage->getToken()) {\n             return;\n         }\n $user = $token->getUser();\n\n\nif (!is_object($user)) {\nreturn;\nif (is_object($user)) {\nreturn $user;\n     }\n\n\n\nreturn $user;\n     }\n```\n\n\nI wonder why they still rely on security.context, I thought this service was ought to disappear? :confused: \n. Yep, I hope your PR in symfony/symfony#14816 will be merged :+1: \n. Actually, \"multi-facet\" filters are not yet available, but I had to make some kind of filters at work, so maybe we should think about it in the close future.\nTo create a simple filter still using the search action, here is one possible way:\nOverride the list.html.twig file and copy/paste the original contents from the search_action block into your view (check the file in your vendor dir to be sure to have exactly the same contents).\nAdd the fields you want to use in the form.\nThen, as the search form has a GET action, just retrieve the attributes in your Request object in the controller, and change your listAction to make it run, for instance, a specific method in your Repository class, or execute a classic findBy with all your filters :smiley: \n. @caxilomo could you create a search filter on your app? We would close the issue if so :)\n. :+1: nice catch!\n. It's tricky to allow this \"natively\" in the list, because it needs configuration for this specific case.\nA small cookbook can be a better solution for this, you need create a custom action in which you retrieve the datas with their correct order, the view should extend the list template in your view to render the table, and add some javascript and a small ajax request + admin action to update the datas.\nIn fact it's not hard at all :smile: \n. @javiereguiluz It's kind of jQuery UI's sortable feature, if I understood correctly\n. To reorder them using something like the Gedmo Sortable behavior, which is useful in many cases :smile: \n. Yeah, still this brilliant idea of allowing third-party bundles to extend EasyAdmin's features :D :+1: \n. Thanks for the suggestion @javiereguiluz , done :)\nGot many things to do, but if you're thinking about anything to add to this feature, just ask, I'll do it :)\n. Relations are managed by Doctrine, so first you should check that your entities' relation mapping is correct, and then check that Doctrine is ok with it by running app/console doctrine:schema:validate. If a relation is not correct, then the generated doctrine metadatas will be incorrect.\nPlus, don't forget to clear the entire cache when changing the mapping, so everything is clean.\n. What kind of DBMS are you using? Note that if you are using sqlite, it's normal. But for MySQL, it's not normal.\nYou should first check what are the sql queries by using app/console d:s:u --dump-sql\n. For all these tables, what is the sql engine? InnoDB or MyISAM ?\n. Directly from your mysql database, run this query:\nsql\nshow table status where name = 'your_table_name';\n. You should then understand why some tables are in MyISAM and others are on InnoDB.\nBasically, the difference between them are that MyISAM supports fulltext search, and InnoDB supports transactions and relations/foreign keys. Depending on what you need, maybe you'll need to change the different tables engines if you need proper mysql relations.\nBy the way, I don't know if Doctrine's metadatas differ when relations are not properly set in the database... My first thought would be \"no\" because it's mostly managed by the ORM, and sql structure is managed by the DBAL, but I'm not familiar enough with low-level Doctrine to say so...\nFirst we need to check whether it's an EasyAdmin issue or a Doctrine issue.\n. Yep, you have to update the engines manually, because when creating a table, Doctrine uses the default database engine, so it depends on your mysql configuration. If the default engine is MyISAM you may re-think about how you want your database to be used.\n. Get the sql query with app/console d:s:u --dump-sql and run it, you need\nforced constraints, so wrap the sql query with this:\nsql\nSET FOREIGN_KEY_CHECKS=0;\n-- Your SQL query\nSET FOREIGN_KEY_CHECKS=1;\nIt should create the constraints between the tables and resolve constraint\nissues with doctrine\n. With those errors, shouldn't we just use the default layout so the user has access to the back-end without using the \"Previous\" feature?\nHere, the error pages are quite \"blocking\" the user's workflow :confused: \n. Definitely, we need more verbose error pages, may them be in debug or not. As @javiereguiluz pointed, a 404 or 500 error page is never explaining what happens.\nThis is a big problem in most Symfony apps: many developers do not customize error pages, so when there's an error, even a warning that can still let the script continue, you fall on a \"Internal 500 error\" page, it's very blocking. Plus, configuring Monolog to send mail is never sufficient enough because there is no backtrace, no information about the request, etc., so a simple \"500\" error is not enough. Simply explaining \"The Category entity with ID = 20 does not exist\" is fairly sufficient to indicate the user what he did wrong, or what is going on.\nAdding more datas is bonus, as in my PR #313, but it allows then maximum flexibility to the back-end developer that may want more and more verbose errors, especially when the logic is very complex and when you need to know more things about what error is occurring.\n. When you install new translations resources in app/Resources/translations, make sure you clear your cache before testing.\nPlus, you should try renaming your files to EasyAdminBundle.es.yml, I think the translation domain is EasyAdminBundle, not messages\n. I thought it was fixed some time ago and we decided to make searches only on text and string fields? /cc @javiereguiluz @ogizanagi \nThe issue comes from the fact that, with PostgreSQL you cannot make a field comparison with datas with different types. And right now, it checks that place.id is in [\"Good\", \"%Good%\", \"%Good%\"] , thus place.id is an integer and every datas in the array are string, so the DBMS does not allow this.\n. Actually, I think that any empty input might result in the item's deletion, but haven't tested :confused: \n. Then it's a real issue, we might think about optimizing this feature in the future :wink: \n. I think that the only way to do this is to override the create{EntityName}{New|Edit}Form , delete the tags form property and recreate it.\nActually, there is no way to define a custom FormType in EasyAdmin. \nI think a good point would be to allow the use  of a service for properties, I'm gonna try to work on this soon maybe :) \n. The add another item feature is here only for array or simple_array properties.\nThe OneToMany relationships are rendered with a <select> tag.\nThe ManyToMany are not supported so you should handle it manually.\n. Read the Customizing Admin Controller part of the doc, and override the createEntityForm action for your entity.\nThen, get the return of the parent::createEntityForm() method, execute $form->remove('categories'); and re-add it totally manually with a Form class for your entity, like one generated with the php app/console generate:doctrine:form MyEntity command.\n. It's because of the {% trans_default_domain \"EasyAdminBundle\" %} parameter which is present in all default templates\n. Add this twig instruction right in the beginning of your twig file :) \n. I think we need to add this information in the docs, if it's not here already\n. I think that we should find a way to optimize field rendering. Right now, fields are rendered only by their type (field_string, field_boolean, etc.) , but if you want to customize the rendering of a specific field by its name, it is actually impossible without extending the whole view, copy/paste the loop rendering all fields, and add an if field.name == 'my_field' statement inside the loop.\nMaybe a simple view option inside the field configuration?\n. > Lastly, I'd like to share a (crazy) comment related to this: what would you think if we define a template_code option (never mind the name) for the show/list fields.\nI don't like the idea of putting Twig markup inside YAML markup :confused: It's kinda counter productive...\nDefining a whole template sounds like a better idea, because it's more flexible, and especially, more secured.\nPutting twig markup can be tricky, because using multiple filters, making more complex statements can become possible this way, but then the config file becomes totally unreadable...\nSome kind of dynamic template loading is much better. Using a default null template value will load the same template as the property type, and creating directories like app/Resources/easy_admin/{EntityName}/{action}/{fieldName}.html.twig sounds more readable to me. And you can also specify the template manually, the same way you define templates for actions.\nWhat do you think?\n. Plus, the naming scheme you propose can involve some conflicts, for example if your entity has a field named text or number, or maybe image, because these are form types, and we should make a difference between specific field customization and field type customization.\nBy the way, this behavior can be achieved easily, we just need approval of @javiereguiluz to know if someone can work on this :smiley: \n. For transformed parameters (like image) I think it could be good to also access the base value, before transforming it, like in a $templateParameters['base_value'], even if in most cases both will be equal, for image it could allow you to use the proper entity attribute and send it to third party bundles like SnowcapImBundle or LiipImagineBundle. For files, it could be the same, if it's transformed, etc.\n. I don't get what we can get from your custom fieldType proposal, @ogizanagi :confused: \n. If these datas are meant to be used in templates specificly, then maybe the different propsals in #376 of @dnagirl and me will move the template logic inside the templates, instead of backend config.\nPlus, I'm definitely not fan of creating custome types on the fly, because the property types are meant to be Form types, so this might become kind of an issue to define types on the fly without the associated Type class...\n. Ok, but then the behavior will differ between list/show and edit/new/form options, which is not in the most \"standard\" way of doing things :D \nUsing some kind of app/Resources/easy_admin/{EntityName}/{action}/{fieldName}.html.twig template and/or app/Resources/easy_admin/{action}/{fieldName}.html.twig (for global field-name override, like createdAt for instance) sounds like an easier way to develop the feature, and it also fits to every action. \n. > Also, regarding this PR, it feels really strange to have only the fieldName passed to templates, as a field might be named the same on many entities. So, unless the template is overridden for this entity only, this is not a good way to identify the field to customize.\nSee my comment above, we commented at the same time :D \n. Yep, indeed it differs but only for list/search/show views, but actually, I think too many exceptions is not a good practice...\n. > I don't see that as exceptions: form widget and fields rendering is two very different things IMHO.\nObviously, these are different things, but we can still add an abstraction layer between feature and rendering that works the same way for both forms, list and show views.\n\nI prefer to have one single template per field type, overriding for every entities in the backend, and having view, entity, and fieldConfiguration/Metadata injected in it, in order to choose how it will be rendered.\n\nActually in what I propose you can still use one template per field type.\n. > Also, in app/Resources/easy_admin/{action}/{fieldName}.html.twig, is fieldName the name of the entity property, or the field data type ?\nThe property name, not the field type.\nThe goal of my proposal is to allow overriding template per field name, and if nothing is specified, use the actual field type rendering.\nThis is very useful because, for example, you may want to add custom rendering over all Timestampable fields used by Doctrine's Timestampable behavior, for instance, to add a link that will direct to a search page with a date filter being the same day of the currently rendered field (createdAt or updatedAt, for example). Then you would create the file app/Resources/easy_admin/list/createdAt.html.twig and render the field with its new <a> tag for all entities that use this property.\nAnd for specific entity fields, like a customer's address, you can maybe add a small Google Maps iframe with a marker, so you create the app/Resources/easy_admin/Customer/address.html.twig, show the field name and add manually your Google map.\n. First, translatable.catalogue could be changed by translation_domain (because it's the name used in the translator).\nNext, I'm not in favor of this behavior, because it allows you to add many datas in config that will be present in your twig file. \nI'm :-1: on this, even if it's very well implemented :confounded: \nEDIT: Just in order to explain myself, I just think a more \"standard\" solution could be better. Sending all the metadatas to the view is :+1: :+1: , but allowing the user to create on-the-fly dataTypes does not sound good to me. We should implement something for all actions/views instead of only show and list...\n. Just saw that #377 was closed in favor of this PR, but still, I keep thinking creating types on the fly is a bad idea and can also be confusing for users...\n. Just saw that #377 was closed in favor of this PR, but still, I keep thinking creating types on the fly is a bad idea and can also be confusing for users...\n. 1. Create a route with your preferred controller (it can obviously be your AdminController if you overrode EasyAdmin's one)\n2. Name this route using the name annotation, or specifying it correctly in your routing.\n3. Create (if not already created) the file app/Resources/easy_admin/layout.html.twig with this content:\n``` twig\n   {# app/Resources/easy_admin/layout.html.twig #}\n   {% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block navigation_items %}\n       {{ parent() }}\n       \nMy route label\n\n   {% endblock %}\n   ```\n4. The view used by your controller must look like this:\n``` twig\n   {# app/Resources/views/my_custom_admin_view.html.twig #}\n   {% extends 'easy_admin/layout.html.twig' %}\n{% block main %}\n       This is my custom admin view where I can put buttons to export datas, for example...\n   {% endblock %}\n   ```\nIt should work :)\n. :+1: \n. ManyToMany relationships can be handled in many ways and I have not used \"native\" embedded forms to be sure of how it works behind. Maybe someone like @webmozart could enlighten us because IIRC he know Symfony Form component very well :)\n. ManyToMany relationships can be handled in many ways and I have not used \"native\" embedded forms to be sure of how it works behind. Maybe someone like @webmozart could enlighten us because IIRC he know Symfony Form component very well :)\n. Actually, setting an empty element should remove it automatically :confused: \n. Actually, setting an empty element should remove it automatically :confused: \n. Set the value in your entity's constructor\n. If fireDate is mapped as date, then maybe you should do something like:\nphp\npublic function __construct() {\n    $this->fireDate = new \\DateTime();\n}\nThen, by default, the fireDate property will be equal to the current date.\n. Yep, I'd like to, but I must rebase and make many checks before this.\nAlso, I'd like to add a @service feature that will retrieve the form type as service so you could have 3 ways of using a form type:\n- Classic form type (type name that will be retrieved from symfony, but it has to be registered)\n- The class name (new instance created on the fly)\n- Service name (service retrieved from the container).\nI think it could cover all possible uses cases.\n. Yep, I'd like to, but I must rebase and make many checks before this.\nAlso, I'd like to add a @service feature that will retrieve the form type as service so you could have 3 ways of using a form type:\n- Classic form type (type name that will be retrieved from symfony, but it has to be registered)\n- The class name (new instance created on the fly)\n- Service name (service retrieved from the container).\nI think it could cover all possible uses cases.\n. I updated my PR but it's still a WIP, I don't have time to work on it right now so I'm gonna take time next week, just don't merge this PR unless you know what you're doing :) \n. I updated my PR but it's still a WIP, I don't have time to work on it right now so I'm gonna take time next week, just don't merge this PR unless you know what you're doing :) \n. We'll review something similar once Symfony 2.3 will be no longer supported, because the Form component has endured many updates since 2.3, and I don't want to break too many things :) \n. I know about market share, but when you're in an agency and your hierarchy says \"we must be compatible with IE9\", it's quite sad :stuck_out_tongue_closed_eyes: Especially when you sell that to a client\n. As this issue is quite old, I just retested with IE11 on Windows7, the error does not trigger anymore.\nBUT there's still a problem.\nThe left menu does not appear, but when I test the responsivity, the top menu appears correctly, as well as the menu shown with the menu button.\nIf I remove the flex: 1; and the height: 0px !important; css properties, everything is \"almost\" fine (no scrolling, and I have many entities...)\n. I asked in #386 to remove the flexMenu behavior when there are not elements in the navigation menu, so maybe your demand will simply solve itself with this kind of fix (even if my problem was only on IE)\n. Then it's probably a CSS issue :confused: \n. @javiereguiluz explained, at the beginning of the project, that he didn't want to implement a Security-compatible system directly in EasyAdmin. So you have to manage this manually...\nIt can be possible if you override the initialize method in your AdminController, and make manually the checks depending on the entity and action GET parameters\n. No, the initialize will allow you to restrict the access to specific page, it's the basics only :D \nTo hide elements depending on the role, for example, it sounds much harder, but you can only do it in the views, which is indeed harder\n. @javiereguiluz I still think that we should provide something to allow users to have a proper CRUD on the backend :) \n. Maybe you can override the EasyAdmin Twig extension and inject the user in the different methods so you can check in the extension?\n. Yep, twig views may be the first point where to override things, overriding the twig extension can be tricky :) \n. This is normal, when you override any core view, you must implement the {% trans_default_domain \"EasyAdminBundle\" %} at the beginning of your view.\n. I think I suggested this some months ago, and it's the best idea to me to allow using Form Types.\nIt would need to  create a small Compiler pass, but the biggest problem is that the form.html.twig is based only on the easyadmin config to render the fields. It would need some refactoring on this view, but it's not that hard.\n. No, it's not implemented yet, nor decided on how to do it.\n. I don't agree with the docs, I think it's better to tell the user to store his own translations in another translation domain instead of storing it in the EasyAdmin's one, for consistency reasons.\nI'd do this:\ndiff\n-This means that your backend translations must be defined in the\n-`app/Resources/translations/EasyAdminBundle.en.xlf` file (replace `en` by your\n-locale and `xlf` by the desired translation format). When using your own\n-backend templates, add the same previous `trans_default_domain` tag or use a\n-different translation domain according to your needs.\n+This means that when you override any template, you must add this statement\n+at the top of your file.\n+If you want to translate your own text and put it in your own files, you can use your\n+own translation domain manually in the views, like this:\n+```twig\n+{{ 'my_text_to_translate' | trans({}, 'MyTranslationDomain') }}\n+```\n+This way you can save all your translations in the file\n+`app/Resources/translations/MyTranslationDomain.en.yml` (replace `en` by your\n+locale and `yml` by the desired translation format)\nI'd do this because this problem occurs only when one overrides the templates, so basically, it's just explaining people why they think there's a bug when they override a template :)\n. It was written in the first documentation, but when refactoring, I think it was lost during the process :smile: \n. You can use the help parameter for this, IIRC :) \n. You can use the help parameter for this, IIRC :) \n. For a classic HTML placeholder, it's not possible yet, because of this line that restricts form override. \nTo do so, you have to copy/paste the form creation in createEntityForm in your AdminController and add ifs for your entity and property right before the call of $formBuilder->add(...).\nI know it's kind of a pain, but actually, it's the only way until @javiereguiluz accepts to merge some PRs allowing to override the form type parameters.\n. For a classic HTML placeholder, it's not possible yet, because of this line that restricts form override. \nTo do so, you have to copy/paste the form creation in createEntityForm in your AdminController and add ifs for your entity and property right before the call of $formBuilder->add(...).\nI know it's kind of a pain, but actually, it's the only way until @javiereguiluz accepts to merge some PRs allowing to override the form type parameters.\n. What's bothering me is that we already have type, fieldType and dataType, these three are confusing enough, so allowing to create a special dataType on the fly that will only change the template used sounds too much for me, especially if it's usable only in show and list/search.\nThe best, if you want to only change the template, would be to use our already powerful template-override system for every field for every view as a default template, and then add a field_template option that would be used to render only this field. \nThis way, it can be used for every action, including edit and new where field rendering also needs to be overriden sometimes. For example when you want to add custom javascript to a custom collection or entity type.\nTo conclude for this PR:\n- I'm :+1: for:\n  - Using the translatable option, and any other optional and custom parameter, and allow it to be injected in the config and therefore in the templates.\n  - Using the type_options to customize the Form Type on the fly by adding options to it\n- I'm :-1: for:\n  - Creating dataTypes on-the-fly only to change the rendered template, where a simple template option would have been very more verbose and explicit in the representation and use of it.\n. What's bothering me is that we already have type, fieldType and dataType, these three are confusing enough, so allowing to create a special dataType on the fly that will only change the template used sounds too much for me, especially if it's usable only in show and list/search.\nThe best, if you want to only change the template, would be to use our already powerful template-override system for every field for every view as a default template, and then add a field_template option that would be used to render only this field. \nThis way, it can be used for every action, including edit and new where field rendering also needs to be overriden sometimes. For example when you want to add custom javascript to a custom collection or entity type.\nTo conclude for this PR:\n- I'm :+1: for:\n  - Using the translatable option, and any other optional and custom parameter, and allow it to be injected in the config and therefore in the templates.\n  - Using the type_options to customize the Form Type on the fly by adding options to it\n- I'm :-1: for:\n  - Creating dataTypes on-the-fly only to change the rendered template, where a simple template option would have been very more verbose and explicit in the representation and use of it.\n. Have you tried simply class in your field properties?\n. Have you tried simply class in your field properties?\n. So, if it still doesn't work, I think you'll have to wait until some features about type_options are merged, and a new release is drafted :wink: \n. So, if it still doesn't work, I think you'll have to wait until some features about type_options are merged, and a new release is drafted :wink: \n. Try to use the fieldType option with the same value as type\n. Try to use the fieldType option with the same value as type\n. I mean with fieldType: toggle, but don't know if it might work\n. I mean with fieldType: toggle, but don't know if it might work\n. We really should handle this, at least in the documentation. I'm gonna look for this today and find the best solution :) \n. You rule, I couldn't find this link again! :laughing: bookmark\n. @ogizanagi This is the precise reason why I proposed to create a \"Community books\" section in the docs to store all these great articles so they do not wanter over the internet and the blogs never will be deleted :D \nBut we can also create a small Github-associated website and put all articles in there...\n. Em... You're right. Gotta find a solution maybe :confused: \n. Rebased on master, and found a solution @xabbuh .\nInstead of doing silly things, I made something much better: not force anyone to use the formBuilder system, and only take account of the formBuilder as a simple \"new layer\" used by the createEntityForm method.\nDoes it seem good?\n. Awesome !!\nDoes it work with multiple selects?\n. Actually, many-to-many should work normally with multiple selects :confused: \n. This proposal is awesome, but unfortunately, \"extremely advanced form\" management is not my cup of tea :laughing: therefore I hope the template/theme customization can be handled in an easiest possible way, like just extending a template with our template-override system, or at least by specifying a config value to extend the form theme, for example.\n. The form submission redirects to the referer, so if you come from another url it will redirect you to this other url :confused: \n. Yep, you can implement embedded forms yourself, and use them like any other Symfony embedded form.\nBut actually it's tricky... I've done it for one of my projects, and it's a bit unstable :confused: \n. @nzurita The features you need are available while overriding the form in the controller, mostly.\n. :+1: for Javier's comment. Simple and concise.\n. Just add the \"virtual\" property in your easyadmin configuration, no error should be thrown.\n. ManyToMany relations are not implemented in EasyAdmin. For this, you should handle this manually by overriding the AdminController, and customize the auto-generated Form for your entity, like this:\nphp\npublic function createEntityForm($entity, array $entityProperties, $view) {\n    $form = parent::createEntityForm($entity,$entityProperties, $view);\n    if ($this->entity['name'] === 'YourEntityName') {\n        $form->remove('categories');\n        $form->add('categories', 'collection', array(\n            'type' => new YourEntityNameFormType(),\n            'allow_add' => true,\n        ));\n    }\n}\nYou should keep the categories property in your EasyAdmin's config, because it's checked in the view.\nFor the rest, this should work. You can test it and give me feedback if it does not :) \n(basically it's a copy/paste of a code I used in another project to manage ManyToMany collections).\nNota bene: you may have to override the form view too, if you want interactions with JS for example.\n. First, \"upload the project to a webserver\" : you should consider a more secure deployment process :smile: \nWe can re-think about what components we need in order to make the tests work. Actually, this should not be a big issue, we need the FrameworkBundle, the SensioFrameworkExtraBundle, and many components, but not every of the 40+ components I think.\nBut as I said before, Symfony is fully required in composer.json mostly to \"recreate\" a more real environment when using PHPUnit to test the bundle and its features.\n. I was thinking more about using 3rd-party deployers (like capistrano/capifony) or Git (which is best to me), but this is not the main topic ;) \n. I think it could be better to check which Symfony component are used and to add them to composer.json (exactly what was done at first).\n@javiereguiluz ?\n. I think we should create tests to cover 100% of the code, and then check with coverage tools which Symfony components are used. Not that easy, but not that hard neither.\n. It can't work because there can be \"hidden\" needs in twig views or in services definitions for example.\nBut by the way it's a good start.\n. I started the pr #424 which should work soon\n. Actually, we require more than 3/4 of the whole frameworks, and there are issues in versioning with the composer.json file because dependencies' dependencies require components with ~2.3 filter that make some of features break. Plus, there's a conflict about TwigBundle and the security components that were splitted in SF2.4.\nAs we require so many components of the framework (more than 30 components, and there are 44 components in symfony in 2.7), I really think we should keep using the whole framework.\nWhat do you think @fadoe ?\n. I'm also :-1: for this feature, even if it's well implemented. But we should provide a small cookbook when customers want this kind of feature in backends \"we\" develop.\n. @gabiudrescu I think we totally got it but actually these notifications depend on an app-specific issue.\nI have more than 5 projects using EasyAdmin, and none of them need any notification like these. It's subjective, of course, but it's actually a 100% non-use for this behavior.\nBut as you did in this PR, implementing it is really really easy, so it's not a problem.\n. If something bad happens, it should throw an exception (it's the best practice) so they're handled by EasyAdmin IIRC.\n. Just override the layouts with the EasyAdmin override system, extend the original layouts, and customize the part you need:\ntwig\n{% block content_header %}\n    {{ include('easy_admin/custom_notification_template.html.twig') }}\n    {{ parent() }}\n{% endblock %}\n. I'd also recommend to remove the 24d7db2 commit because it adds flash notifications not related to the theme of this PR.\n. If you want to do it in the cleanest way, you'll have to wait until #323 is merged.\nBut actually, you can do it by overriding the form in your controller.\nHere is what I have in one of my backends for this:\n``` yml\napp/config/easyadmin.yml\neasy_admin:\n    entities:\n        MyEntity:\n            form:\n                fields:\n                    - { property: locale, type: choice, choices: [ en, fr, de, es ] }\n```\n``` php\n<?php\nnamespace AdminBundle\\Controller;\nuse Doctrine\\ORM\\Mapping\\ClassMetadataInfo;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;\nuse Symfony\\Component\\Form\\FormBuilder;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpKernel\\Kernel;\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @Route(\"/\", name=\"admin\")\n     * {@inheritdoc}\n     /\n    public function indexAction(Request $request)\n    {\n        return parent::indexAction($request);\n    }\n/**\n * {@inheritdoc}\n */\npublic function createEntityForm($entity, array $entityProperties, $view)\n{\n    $formCssClass = array_reduce($this->config['design']['form_theme'], function ($previousClass, $formTheme) {\n        return sprintf('theme_%s %s', strtolower(str_replace('.html.twig', '', basename($formTheme))), $previousClass);\n    });\n    $formBuilder = $this->createFormBuilder($entity, array(\n        'data_class' => $this->entity['class'],\n        'attr' => array('class' => $formCssClass, 'id' => $view.'-form'),\n    ));\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = array();\n        if ('association' === $metadata['fieldType'] && in_array($metadata['associationType'], array(ClassMetadataInfo::ONE_TO_MANY, ClassMetadataInfo::MANY_TO_MANY))) {\n            continue;\n        }\n        if ('collection' === $metadata['fieldType']) {\n            $formFieldOptions = array('allow_add' => true, 'allow_delete' => true);\n            if (version_compare(Kernel::VERSION, '2.5.0', '>=')) {\n                $formFieldOptions['delete_empty'] = true;\n            }\n        }\n        $formFieldOptions['attr']['field_type'] = $metadata['fieldType'];\n        $formFieldOptions['attr']['field_css_class'] = $metadata['class'];\n        $formFieldOptions['attr']['field_help'] = $metadata['help'];\n\n        //------------------------------------------------------------------\n        //------------------------------------------------------------------\n        // Overrides\n        if (isset($metadata['choices'])) {\n            $formFieldOptions['choices'] = array_combine($metadata['choices']), $metadata['choices']));\n        }\n        // End overrides\n        //------------------------------------------------------------------\n        //------------------------------------------------------------------\n\n        $formBuilder->add($name, $metadata['fieldType'], $formFieldOptions);\n    }\n    return $formBuilder->getForm();\n}\n\n}\n```\nAll the code outside the overrides comments is copy/pasted from the AdminController from my vendor dir, so I'm sure it fits totally to the used version.\nIt's totally ugly, but this way, you can optimize the form the way you want, better than just overriding the Form object returned by the parent createEntityForm method. In fact it would be easier if the createEntityForm returned a FormBuilder instance, but actually it's what I intend to do in #399 \n. You're right, the method should be protected anyways.\nAnd thanks for correcting the typo for the choices field.\nAt least you could explain the proper diff, it could have been more \"verbose\" :wink: \n. Because it's the first EM defined ? Actually, using multiple managers for the same entity is an edge case in Doctrine, you should retrieve the manager manually and never trust getManagerForClass if you already know (and you must know because you're using this design) the entity is managed by multiple managers.\n. I'm not fan of using the var dumper for this use, because it's a \"development\" feature :confused: \nPlus, it's not compatible with SF2.3, as the var dumper component is only on SF2.6+\nWouldn't it be useful to show computed elements for the user to understand how some fields are analyzed?\nFor example, show what the user specified for each field, and show the result of the flexible configuration system based on the user's datas.\nIt could be good especially for form fields which are the most flexible.\nFor the output, what about a simple Yaml output inside a <pre> tag? It's probably the simplest and the most readable :smile: \n. What I am talking about is not a \"per-request\" information.\nActually, I don't know if a collector can gather more than the configuration itself, and if we can show a per-request information, we can show the entire config on the profiler.\nI don't know... I'm hesitating between showing global conf (formats, design, etc.) with all entities (base + computed) , or global conf with only the entity used in the request. \n. Totally agree, for now I don't see anything to add :smile: \nWe may look in the future for new features :) \n. It's to be noted that the whole configuration is stored in the container, therefore in the xml file in the cache, so there's a big difference between processing and using the config. Processing it is made in the extension, using it is from a service (and from the twig extension, therefore needing the service)\nFor the metadatas, they're cached by doctrine, so we don't need to worry about it that much (and it's a per-request behavior, so it's not a problem).\n. What would be interesting in modifying the configuration after it's been processed? \nI have no use case in mind :confused: \nEdit: It's like adding a behavior similar to the \"compiler pass\" system, but in our easyadmin config, it's quite strange...\n. The processed configuration has no need to be cached more, because it's already stored in the container (it's nothing more than the %easyadmin.config% parameter...), so any cache layer caching the container will also cache the procesed config, IIRC\n. Oh yeah I totally misunderstood, sorry for that :confused: :sob: \nI think we should compute all this \"runtime\" configuration once the service is instantiated, or called (we may call an initialize function or something) , sorry for the misunderstanding :no_mouth: \n. Now that #1060 and #524 prove that we have a problem in loading cache, why not reopen this PR @javiereguiluz and rebase the branch @ogizanagi ? :wink: \n. First, @ogizanagi is right, and second, I don't see where actions.add_another_item is used :confused: \n. Bly me I did not see the twig form template update.\nCould you fix your commits so the user is linked to you on Github? It's better to show contributors in the eponym page :wink: \n. Great!\nWhen @javiereguiluz's ready I think he can merge this.\n. You can extract translations by using the native Symfony translator and extractor, it would add one command and a service. \nIt's just about extracting translations into files.\nAdding a dependency to JMS Translation Bundle is a bad idea IMO, as we want this bundle to be the most standalone possible.\n. Even with checking whether the bundle exists or not, it'd still add a dependency, even if it's optional. \nI'm still :-1: for this this for the same reasons as @javiereguiluz when he says he does not want a \"native\" support of FOSUserBundle.\nIf you want to implement JMS or any other translation system (like Lexik's one), you should handle this manually.\nPolitics, you know :wink: \n. I made a basic extractor on Orbitale/TranslationBundle (the bundle is unmaintained, but it's still good to me :wink: ), you could take it all and change the way translations keys are found.\nThe only thing to do is create a MessageCatalogue and send it to the native TranslationWriter service.\nBasically, JMS extracts translations from all your code. Here, we have all elements we need: translations from the translator service (when retrieving the catalogues) , and labels for every entity (when retrieving from the EasyAdmin config).\nWe just need to generate a catalogue from the config, merge it with the native catalogue (which has priority not to override an existing translation with an empty one), and send this catalogue to the native TranslationWriter.\nIn OrbitaleTranslationBundle, the command executes here the extraction by asking the service, and the Extractor calls the TranslationWriter here with a merged catalogue.\nThe code can obviously be optimized, but it works very well.\nPlus, and I hope it's gonna be a very convincing argument, JMS TranslationBundle has not been updated by @schmittjoh for a very long time.\n. I think we should provide a translation_domain parameter to each view and pass this one everywhere where it's needed and not related to EasyAdmin itself but more to the Entity.\nWe could provide this parameter globally or per-entity IMO.\n. To me it's irrelevant to force using messages, and even EasyAdmin sounds better if we had to \"force\" something.\nIn my case, in one of my \"big\" apps, I have not yet started the \"optimization\" of the translation, but yet I know that I'm gonna use a proper structure for all files, because I'm gonna work with two or three translators for different languages (mostly english and spanish, even if I could do the english part myself it takes too much time).\nFor this I have to provide them the most verbose context possible in each token, and therefore I'll use one domain per entity, and use tokens starting with admin for the backend only.\nI don't want to set it up manually on each view.\nIf we \"forced\" the use of only one domain, I would need a very huge messages file for each language, and I don't want this. \nIt's hard enough to explain the context of a translation so having it in both translation domain and translation key is very important (unless you want to translate your app like Squaresoft translated FF7 :wink:).\n. My solution is for a big backend, but specifying a translation domain per-entity is not \"that big\" anyway.\n. The use of transchoice would be ideal in this case, can you use it?\n. Would simply do this:\ntwig\n{% block form_errors %}\n    {# Set it once to avoid using the filter multiple times #}\n    {% set errorCount = errors|length %}\n    <div class=\"error-block\">\n        <span class=\"label label-danger\">{{ 'errors'|transchoice(errorCount) }}</span>\n        {% if errorCount > 1 %}\n            <ul>\n            {% for error in errors %}\n                <li>{{ error.message }}</li>\n            {% endfor %}\n            </ul>\n        {% elseif errorCount == 1 %}\n            {{ errors|first.message }}\n        {% endif %}\n    </div>\n{% endblock form_errors %}\n. Can you show the mapping of your entity's bankcode property?\n. Thanks a lot, the problem comes from this line in the Configurator class.\n@javiereguiluz did you have a real reason to tweak the field names this way? I know removing this code line might induce a BC break, but actually, it's more a bugfix because the field names shouldn't be tweaked as they're used in other ways :confused: \n. I still think that \"tweaking\" the field names is wrong because it feels like it's simplified, but it's actually modifying the natural behavior of twig templates: names with underscores (unlike PHP-PSR recommends lowerCamelCase).\n. The politics of the bundle are not about overriding the bundle, actually.\nWhat you need is not a \"specific\" case, so it should be standardize in the bundle.\nActually, I performed a \"search engine\" in EasyAdmin some months ago on a project, based on config fields.\nWhat we need is to enhance the power of the actual search action by proposing the user to add a proper system to search with (creating inputs, selects, etc.).\nWe could have something similar to SonataAdmin, or even something like the Symfony1 AdminGenerator plugin (as proposed in #364 discussion).\nEven if your proposal is good, you could do everything in the controller to avoid executing the configurator on each request, and do it only \"per-request\" for better performance.\n. Actually, best search engines would allow filtering with more filters.\nFor example, integer will need equals to, inferior to, superior to and not equal to filters.\nIt could be similar for other types.\nThis is what's done in SonataAdmin as a good example, and it's customizable per-entity (in the associated Admin class).\n. I love this new tag :heart: \n. What's the admin configuration of your entity?\n. It's because it's a ManyToMany relationship, and these type of relations are not yet supported in EasyAdmin... We're still looking for a good solution to do it but it's actually quite tricky :confused: .\nIIRC, ManyToOne are supported, but what you have is a ManyToMany.\n. The build for the --prefer-lowest env option systematically fails, any idea?\n/cc @ogizanagi @javiereguiluz @xabbuh \n. You mean when we have the lowest env var we specify another version of the symfony/dependency-injection package ?\n. It works well but the build for Symfony 2.8-dev does not work because now we have many packages to update, not only the whole framework.\nAny idea on how to update all packages without ugly things like this :\ncat composer.json | sed \"s/(symfony[^:]+: \\\")~2.3/\\$1$SYMFONY_VERSION/g\" > composer.json2\n:question: \n. Yeah it's ok, but actually this does not solve the packages update in tests :D \nBefore we could do composer require --dev --no-update symfony/symfony:$SYMFONY_VERSION, \nbut now that we don't require the whole framework, this will lead to downloading the framework (which is wrong if we want the bundle to be standalone)\n. So, there are still many issues with requiring only pieces of the framework.\nFirst, we require 30 of them (of 44 for 2.7 and 37 for 2.3, not including \"replaces\") when we include the require-dev.\nAnd there's a big bug with the twig bridge that requires security component that is splitted in several packages. Only for 2.3 though.\nWe cannot require them explicitly because it would need SF2.4+ (first split of the component).\nAnd if we require only symfony/security, then the symfony/twig-bridge will require symfony/security-acl which requires symfony/security-core , which completely breaks the thing in 2.3...\nAny idea ?\nShould it be proposed in the symfony main repo ?\n. There are conflicts with master , you should rebase before merging\n. Hehe, I see these are my updates :smile: \n. Seems good to me actually. @ogizanagi  ? :smile: \n. We're still waiting for @javiereguiluz to merge #323 , it'll supersede this PR.\nPlus, the createEntityFormField would have been clearly enough, the additional method getFieldRepeatedOptions enlarges a little the controller IMO...\n. I don't think so. Textareas are not always HTML, I have some that contains yml, json, serialized arrays or xml, and many that contain plain text that must be escaped, and I would never want to render them natively raw. Especially xml which would break the page.\nIMO, we could add a new layer to \"field template overriding\" to allow paths like:\neasy_admin/field_{fieldName}.html.twig (very useful to standardize Gedmo traits)\neasy_admin/{entityName}/field_{fieldType}.html.twig (I don't remember if this one's available yet)\neasy_admin/{entityName}/field_{fieldName}.html.twig (especially this one.)\nThat would be perfect to decouple every field and have only field-specific template that are the lightest possible, and more, the most readable possible.\nHaving a bunch of \"ifs\" inside a template is quite a chaos, compared to a template that matches perfectly the name of the entity and field.\n. Actually, I'm not fan of adding that kind of layers to the application.\nForm types come out of the box.\nThe Admin generator concept is not about \"providing form facilities\" but more something like \"providing automatic form factory\", which is quite different.\nWe already have some \"specific\" fields like toggle which is reserved for the list action.\nIn this case, a simple template customization is much better to me.\nSo I'm :-1: for creating a Form Type,\nAnd I'm :+1: for allowing template override per-field.\n. Ok for the form type, but anyway, why create another \"specific\" case where we can have a \"standard\" case?\n. Build still failing :( \n. Your idea is good, but actually I think it could've been better to hard code a css class to inject into the form, like easyadmin_form, and use this class directly in JS.\nDo you think you can update your PR to do this?\n. No you're right, I forgot that the JS is used only in the <a> tag. We should provide a better way of doing this, but it works.\n. Actually the errors should be shown depending on the property, in your case.\nBut anyway, you're right: showing ALL errors is very important :+1: \n. Why did you remove the alert box? It was good to point explicitely that there is a problem :confused: \n. Ok, I forgot that, that's good :)\n. Must add symfony/css-selector too\n. Hope it'll solve every problem :) \n. I had this problem on another repo, I didn't remember how I solved it. I don't even remember having solved it :stuck_out_tongue: \n. For the Inflector problem, we require doctrine/common:^2.4.0.\nHaven't investigated on the Security problem, but I guess it might be a problem coming from the fact that the security has been split in symfony 2.4 so there might be some strange regressions...\n. We could with a composer remove symfony/twig-bridge\n. :+1: \n. Better rely on kernel.debug parameter than kernel.environment, but yeah it can be nice\n. Actually it's the \"how to fix this problem part\" that @markitosgv was talking about, I think\n. :+1: for the option in configuration\n. Do you have a screenshot of how it renders?\n. Sounds good to me\n. I'd prefer having the \"delete\" buttons at the bottom of the form, do you think it's possible?\n. isSnakeCaseProtectedPropertyWithIsserWithoutHasserWithoutGetterWithoutSetter\nOmg, this is harsh :stuck_out_tongue: \nI'm :+1: for this feature, but have to wait until the build succeeds :D \n. Maybe a small \"php-cs-fixer\" call ? :) \n. It seems that the vich uploader stores the path of your image as the absolute path in your file system. The base_path is used for rendering purpose as you can see in this file.\nBasically it's $basePath.'/'.$value , so it seems that the value in your case is /var/www/fideisalud.local/app/../web/(...).\nMaybe you could use another method in your entity to retrieve the web-relative image path?\n. Yep, I did not explained myself correctly, but yeah, it's what had to be done :) \n. This is very dangerous, you should implement this yourself by overriding the template as explained in the documentation\n. Implementing bulk actions might be a better solution for this. Operating a truncate operation is never a good solution.\n. It can be done for you in some minutes:\nOverride the list view:\ntwig\n{# app/Resources/easy_admin/YourEntityName/list.html.twig #}\n{% block view_actions %}\n    {{ parent() }}\n    <a href=\"{{ path('bulk_delete_action') }}\">Delete everything</a>\n{% endblock %}\nAnd in your AdminController:\n``` php\n// src/AdminBundle/Controller/AdminController.php\n// ...\n/*\n * @Route(\"/bulk-delete-action\", name=\"bulk_delete_action\")\n /\npublic function bulkDeleteAction() {\n    $result = $this\n        ->getDoctrine()\n        ->getManager()\n        ->getConnection()\n        ->exec('truncate your_table')\n    ;\n    if (!$result) {\n        $this->addFlash('warning', 'Truncate action could not be executed');\n    }\n    return $this->redirectToRoute('admin');\n}\n```\n. What's the PHP code of your custom controller action?\n. You seem not to know how Symfony works. You must never use superglobal variables, because Symfony generates a request for you.\nInject the Request object in your controller action as said in the Symfony controller documentation, and retrieve the POST value from $request->request->get('nombreAutores').\nYou should re-read the Symfony documentation.\n. In the twig view, the action should be the return of the path() or the url() twig function.\nYou must define your guardarAutoresAction() method in your app routing, either by adding the route in app/config/routing.yml or in an annotation.\n@javiereguiluz I think we can close this issue as it is not related to EasyAdmin at all.\n. Oh yeah, I don't know why it changed, imma fix this soon\n. Fixed in  2709bff :)\n. Why not use == comparisons?\n. In your fiddle it's == that checks the type\n. You're right, I misunderstood, but actually it's the ok and ko that should be reverted (\"true\" equalling \"ko\" sounds strange to me)\n. Thanks for updating the fiddle :)\n. It is ought to be working, as this code says :confused: \nCan you show your config / file tree?\n. Have you tried to clean your cache?\n. I think it comes from this code because I see that your notices property seems to be an array... \nThe Twig fields rendering is not the part I know the best in EasyAdmin, so I ask @javiereguiluz and @ogizanagi if they can have a clue about this...\n. yml\nshow:\n    fields:\n        # ...\n        notices: { property: notices, template: easy_admin/notice_collection.html.twig }\nSeems like EasyAdmin found your template :confused: \n. Yep, if it weren't, EasyAdmin would've thrown an exception.\nThis is a classic twig syntax: no prefix means you ask Symfony to search at the root of app/Resources/views, so the whole path is automatically resolved to app/Resources/views/easy_admin/notice_collection.html.twig. And if the view exists, it's loaded.\nBut the point is that this code linked above renders the label_empty template when the value is empty, and I think this behavior is wrong...\n. I'm not on a dev environment (holidays...) so I can't test :/\n. Hello @savandriy \nFirst, you should wrap your code with \"`\" symbols (backticks) , read the doc about Markdown on Github for this.\nNext, the index you add on your @Table annotation is useless: the field is an integer, and what you need is to search on the next table.\nIn EasyAdmin, searching through entities is not supported natively. \nIf you want to, you can create an event listener that listens to the EasyAdminEvents::POST_SEARCH ( easy_admin.post_search ) event. You will receive a Symfony\\Component\\EventDispatcher\\GenericEvent event instance in which you can retrieve the paginator (which is a Pagerfanta instance) that should allow you to update the query and make a manual request over a \"left join\" for your related entity.\n. It is possible to override any view from any bundle with the symfony inheritance system.\nJust create the view app/Resources/EasyAdminBudle/views/error/error_page.html.twig and clear your cache. The view is automatically overrode by Symfony.\n. What about wrapping the instructions for more readability as in e064909 ?\n. I did not know this syntax, it sounds much better!\n. I'm not fan of the translationception when you use the filter twice, it's really too much for me to understand.\nAbout the actions, I think we should put them all in the messages domain and then provide a default messages.{locale}.xlf file in the bundle to have them \"defaulted\", and for the users to be more familiar with the translation system: Actions in \"messages\", everything else is under EasyAdminBundle.\n. Looks so ugly to me... A simple trans filter with the correct domain would have been largely sufficient...\n. > do you think it's better to split our translations in two files\nYes, totally, because messages is already used in most translated apps, so it could be much better too store the words right here, even if we change the translation id a bit.\n. +1 for @stof .\nAfter months of problems, I think it could be better and easier to rollback and require the whole framework in Travis-CI.\n. +1 for @stof .\nAfter months of problems, I think it could be better and easier to rollback and require the whole framework in Travis-CI.\n. I think it could've been good to add a real example with the translation file. I mean just add another code area indicating that translations are stored inside app/Resources/translations/messages.{locale}.yml and that you can create the app.{entityName} different \"trees\" inside this file.\n. I'd like to enhance this code because we don't know the future of EasyAdmin:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_logo %}\n    \n        {{- easyadmin_config('site_name') -}}\n    \n{% endblock header_logo %}\n```\nDon't forget that the easyadmin_config('site_name') refers to the site_name parameter under easy_admin in your config.yml file.\n. I'd like to enhance this code because we don't know the future of EasyAdmin:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_logo %}\n    \n        {{- easyadmin_config('site_name') -}}\n    \n{% endblock header_logo %}\n```\nDon't forget that the easyadmin_config('site_name') refers to the site_name parameter under easy_admin in your config.yml file.\n. Binary is not always an image, I think we shouldn't implement it natively in the display, and always propose the user to do it manually with a custom type or twig function/filter that will render the binary content into a base64-rendered image.\n. @nirgendswo could you find a way to fix your problem?\n. You should be able to close it manually ;)\nGreat it works now :+1: \n. You should be able to close it manually ;)\nGreat it works now :+1: \n. Exactly :)\nI unfortunately have no time for this now, but I wish I could write it! (unless you can find me another job as teacher, which would give me plenty of time compared to my actual job xD )\n. Nice catch :+1: \n. Nice catch :+1: \n. It's worth adding another exception in the controller then :smile: (there is the same problem for postgresql) \n. It's worth adding another exception in the controller then :smile: (there is the same problem for postgresql) \n. :+1: for this, anyone wants to work on this? \n. Or I think we should use the search engine only for string/text fields and give a proper cookbook for users in need for a more powerful search engine. @javiereguiluz ?\n. Or I think we should use the search engine only for string/text fields and give a proper cookbook for users in need for a more powerful search engine. @javiereguiluz ?\n. Default to  text might be good indeed for virtual properties, but we should detect that the field is a virtual property before, so it must be done for every field \n. Default to  text might be good indeed for virtual properties, but we should detect that the field is a virtual property before, so it must be done for every field \n. :+1: \n. Shouldn't we add some phpunit tests to avoid regressions about translations, now that it's \"settled\"?\n. You could simply rebase all the commits :) \n. @gabiudrescu could you find a proper solution to your problem ? :)\n. You mean creating a FormType class which role will be to be extended by the user and specified in the config ?\nIt could be good because we could then use one FormType for each entity, and customize either buildForm or buildView methods.\n. Actually, the first issue is now almost solved because EasyAdmin uses native Symfony forms (which can be overriden with a simple form theme + widget override by name) and the second issue is also solved because you created the dynamic methods generator :smile: \n. Actually, the first issue is now almost solved because EasyAdmin uses native Symfony forms (which can be overriden with a simple form theme + widget override by name) and the second issue is also solved because you created the dynamic methods generator :smile: \n. Nice that you closed the issue: security is not the role of EasyAdmin, it's up to you to override the AdminController and the indexAction method to restrict the view per-entity or per-action to a specific user role.\n. You can override the controller like this:\n``` php\n// src/AppBundle/Controller/AdminController.php\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as EasyAdminController;\nclass AdminController extends EasyAdminController\n{\n/**\n * @Route(\"/\", name=\"admin\")\n */\npublic function indexAction(Request $request)\n{\n    $entityName = $request->query->get('entity');\n    $action = $request->query->get('action');\n\n    if (\n        $action === 'forbidden_action'\n        && $entityName === 'forbiddenEntity'\n        && !$this->isGranted('ROLE_ADMIN')// Remember it's provided by Symfony's controller\n    ) {\n        // Translate the message if you want, just know that this will throw a \"HTTP 403 Acces Denied error\n        throw $this->createAccessDeniedException('No tiene el rol necesitado para actuar sobre esa entidad.');\n    }\n\n    return parent::indexAction($request); // Keep the original EasyAdmin behavior\n}\n\n}\n``\n. There areEasyAdminEvents::PRE_INITIALIZE(before anything is done) andEasyAdminEvents::POST_INITIALIZE(after retrieving the entity config) events too, but the last one runs the whole configuration which is not very useful when you only need to check the entity name (which is in the$request->query` all the time).\n. Same answer as in #500 .\nPlease speak english in the issues so everyone can understand you. Plus, my spanish is not very good :p \n. Such a fast implementation!\nI'm :+1: for this!\n. I think we should rename these \"types\" variables.\nHaving formType and displayType sounds much better than dataType and fieldType which can be very VERY confusing IMO.\nThat said, I don't know at all if this statement is reachable.\nIf only we could have code coverage for twig :p \n. :+1: \n. :+1: , got this problem on some other projects too\n. I wish there could be a proper phpunit test to check whether the collection button appears correctly for nested collections :confused: \nBut by the way, nice implementation\n. Plus, shouldn't this code be written also in bootstrap_3_layout.html.twig? You might consider putting this feature inside an include, or even in a twig macro.\n. Plus, shouldn't this code be written also in bootstrap_3_layout.html.twig? You might consider putting this feature inside an include, or even in a twig macro.\n. The route is admin, for the whole backend.\nTake a look at the AdminController.\n. The route is admin, for the whole backend.\nTake a look at the AdminController.\n. @ebcamps you should read what is said to you: please explain your issues with more informations, and in english, even if some people can understand spanish, it's not everyone. This is Github.\n. @ebcamps you should read what is said to you: please explain your issues with more informations, and in english, even if some people can understand spanish, it's not everyone. This is Github.\n. Very cool :+1: \n. Very cool :+1: \n. Forms are not my best skills, so I agree if it works :stuck_out_tongue: \n. Forms are not my best skills, so I agree if it works :stuck_out_tongue: \n. It's quite the same as implementing CKEditor natively, which I think is wrong. Even if the bootstrap datepicker is awesome, I think it should depend on everyone to determine whether he/she wants to use it or not. Plus, it's a simple FormType (for CKEditor it's the ckeditor form alias) so it's really easy to implement in any backend.\n. It's quite the same as implementing CKEditor natively, which I think is wrong. Even if the bootstrap datepicker is awesome, I think it should depend on everyone to determine whether he/she wants to use it or not. Plus, it's a simple FormType (for CKEditor it's the ckeditor form alias) so it's really easy to implement in any backend.\n. Same as @ogizanagi, it's a good idea but actually the bundle relies on a configuration more than decoupling the configuration throughout the whole application. Plus, annotations are more likely to break compatibility when coming to upper versions, whereas a simple YML config can be totally flexible.\n. The search engine provided by EasyAdmin is based on all \"searchable\" fields.\nIf you want your own, you have to implement it yourself until it's decided to implement a different kind of search engine.\n. @javiereguiluz If you want you can put \"my\" authorship in test classes, but being mentioned as a contributor is sufficient to me, having my names on classes is just a bonus :laughing: \n. No problem :wink: \n. Then you should check that both $routeName === 'admin' and $_controller === AdminController::class are evaluated to true to trigger this deprecation error.\n. But actually, as the routes are generated sequentially, there's a problem : both routes have the same pattern, so even if you generate the url, it's about accessing the url that will potentially trigger the error. \nWhich one between admin and easyadmin will be triggered ?\n. There is a way : remove the \"admin\" route, add a kernel listener and check if the route name is admin and resolve the controller manually before Symfony throws a 404 exception.\n. @javiereguiluz Not exactly. {{ path('admin') }} will let the browser load a {admin_prefix}/ route. Then the UrlMatcher will search for the first occurrence of the / path, which will be the admin route. So there'll always be a deprecation error (or, in another order, always be easyadmin route and never trigger deprecation error).\nThere's no real link between generating an url and accessing an url.\n. Still I prefer to add this option in a CHANGELOG and force the feature removal in 2.0 instead of trying to find a workaround that will probably create edge cases (plus, users CAN rename the route when overriding the controller, so we have no control over it).\n. > If you remove the admin route, there is no way to know that the route name was admin :smile:\nWhen executing the kernel.request listener as last listener, you may \"know\" which route and controller is resolved. Then, if the route name is admin and the controller is an instance of the AdminController, you can throw a deprecation notice. Else, you don't have to do anything :) \n. It can happen if the developer has overriden the AdminController and kept the route name.\nBut as I said this can generate a huge edge cases because the user's controller will use admin route, and the non-overriden templates will use easyadmin therefore not execute the user's controller. \n. Actually the default required is true according to the Form field type documentation.\nI think we should not override Symfony's behavior, because creating a custom FormType would also require to force the required option to be set as false manually when using a checkbox.\n. I'll close this PR for you to merge #538 :)\n. Do you have a __toString() method in all your entities?\n. You should try to put a __toString() method in all entities (and we should add a warning, because in EasyAdmin, all entities should be convertible to strings to show default labels when you don't specify them in the form)\n. @aleperin the example you wrote is a good one, but the /** {@inheritdoc} */ is only useful when the function extends the parent's function, if it exists.\n. :+1: \n. Actually, testing the backend is all about functional testing the backend itself.\nThe only thing that's not present is JS, so there might be edge cases in there.\nBut what I need is just to get a client, request one action, test the presence of my entities with the columns I set up, and use a form action to edit/add an entity and check listeners are executed, etc.\nRepeating this for 3, 4 or more entities would really be useless, this is why abstraction of this behavior sounds good to me.\n. Could you replace ??? by {entityName}?\n. Actually I think that using 2 variables is much better, just use $prefix and $suffix, it's easier to handle and is a bit better in terms of performance (just concatenate instead of replacing).\n. About prefix and suffix, this is exactly what I mean :)\nIf you find this less evident, I think we should then introduce a BC break and use the EntityName as a single suffix, like this:\n``` php\nfunction executeDynamicMethod($method = '', array $arguments = array())\n{ \n    $overriden = $method.ucfirst($this->entity['name']);\n    $methodToExecute = method_exists($this, $overriden)\n        ? $overriden\n        : $method;\nreturn call_user_func_array(array($this, $method), $arguments);\n\n}\n// [...]\n$this->executeDynamicMethod('preUpdateEntity', array($entity));\n``\n. I really don't like it, as @ogizanagi says, it's very strange to have a unique placeholder...\n. I wish we could find a proper change for a potential 2.0 branch, because for example \"createEditForm\" I sometimes forget whether it'screateEditFormorcreateEditForm, so having the entity name as suffix seems much better to me, and much easier to understand...\n. Seems good to me, obviously needs a lot of testing, I'm gonna test your branch in my own backends in the next days to be sure everything works properly :)\n. > and then improve the way relations are displayed in theshow` view\nJust a single join with , or <br> as glue should be enough, because it would then trigger the __toString() method for all entities in the association.\nBut indeed we could add a link to the edit page for each object, it could be nice :)\n. It also declares a FormType here:\nhttps://github.com/misd-service-development/phone-number-bundle/blob/master/Form/Type/PhoneNumberType.php\nYou can use either tel or the type's FQCN as type attribute in the EasyAdmin config. It's much better because you can then create a field_tel.html.twig template for list and show views, and the form type will automatically trigger validation based on the bundle's form type.\n. It also declares a FormType here:\nhttps://github.com/misd-service-development/phone-number-bundle/blob/master/Form/Type/PhoneNumberType.php\nYou can use either tel or the type's FQCN as type attribute in the EasyAdmin config. It's much better because you can then create a field_tel.html.twig template for list and show views, and the form type will automatically trigger validation based on the bundle's form type.\n. It's not yet released, is it reasonable to specify a version that does not exist?\n. It's the beta versions of Symfony 2.8 and 3.0 that should allow ~5.0@beta instead of ~5.0@dev, and SensioDistributionBundle that should release a beta version of the 5.0 branch.\nBut there's gonna be another problem with Symfony 3 and EasyAdmin: form types\n. It's the beta versions of Symfony 2.8 and 3.0 that should allow ~5.0@beta instead of ~5.0@dev, and SensioDistributionBundle that should release a beta version of the 5.0 branch.\nBut there's gonna be another problem with Symfony 3 and EasyAdmin: form types\n. It's another subject, but as the form types aliases will be removed, overriding field templates will be harder :)\n. It's another subject, but as the form types aliases will be removed, overriding field templates will be harder :)\n. We would need to specify the specs of the ajax edit: \n- Is it for a strict full edit?\n  A full edit means we use AJAX to send and retrieve a JSON payload that should contain a full representation of the object, fields not mentioned are set to null.\n- Is it for partial/selective edit?\n  Same than the previous point, but fields not specified are ignored and get their initial value.\n- Is it for single-property edit?\n  Simple: an array is sent with three fields: id, property and value.\n- Is it for form-handled edit?\n  The best solution to me because we can specify a new ajax_edit action similar to new and edit, and can plug it to the form configuration with a few lines of code, but the implementation in the controller should be very specific: an XHR request with a payload is not very possible, or we would need to handle application/x-www-form-urlencoded, and multipart/form-data and maybe other methods (for webservice edit handling, maybe, but it's more a REST api than a backend manager then...).\n. I'd leave all these fields empty for people to handle the display manually, as they are quite rare :confused: \n. The frame with a dashed border is more related to an \"drag & drop upload\" than a list. For me, a simple gray text \"No item in the list\" sounds much better to me than a framed box :confused: \n. :+1: for this: field names should never be changed.\n. Shouldn't the field be either checkbox or toggle ? I don't remember :confused: \n. Can you try checkbox? As the type property in edit, new and form actions corresponds to the form type, boolean should not exist natively, contrary to checkbox for which you can find documentation here\n. It is always better to specify manually the fields to expose instead of letting EasyAdmin decide itself (which is just for convenience at first setup)\n. And what if the field is name pwd, pass, mot_de_passe or any other name?\nIt's the developer's responsibility, I don't think we should handle this, as it's only for a few specific cases.\nPlus, if a field disappears, I wonder how many people will ask themselves why their entity password (even crypted) is not visible in the list. They should do this manually.\nI'm very :-1: on this\n. Yep, but the problem is that if you have password and salt, I bet there are more properties you have, like createdAt, updatedAt, canonical fields for email and username, plain password, confirmation token, last login, etc.\nAll of these should not appear either in the list, and to do this properly you must specify manually the fields you want to expose.\nBasically, username, email, roles and active/inactive which are fairly enough.\n. Yes I do! :+1: :smile: \n. Yes I do! :+1: :smile: \n. The bundle name :)\n. The bundle name :)\n. @javiereguiluz This is evil :smiling_imp: \n. @javiereguiluz This is evil :smiling_imp: \n. @javiereguiluz git shortlog -s -n on the master branch\n. @javiereguiluz git shortlog -s -n on the master branch\n. Add -e and remove -n(sort by commits count) to get email and filter the list with the \"real\" emails, because people can use multiple emails/accounts to make commits (it's my case sometimes)\n. Add -e and remove -n(sort by commits count) to get email and filter the list with the \"real\" emails, because people can use multiple emails/accounts to make commits (it's my case sometimes)\n. :+1: \n. :+1: \n. :+1:, has no impact because we support older versions, even if the distribution bundle is not released yet\n. In your example, the else is useless because the if already finishes the script in the method.\nBy the way, the screenshot shows that it seems to be working very well!\nAlthough, theming EasyAdmin is still subjective, I like the way it is right now, even if it can be better I think that it has a real identity and personality, and even if I'm not an expert in webdesign, allowing users to adapt the template to AdminLTE (or any other backend theme) is too much work and \"BC-Breaking\" to be implemented in EasyAdmin. \nThere are many things in \"early-easyadmin\" that were inducing BC breaks or that were doable only by copy/pasting the whole code, so updating the bundle was very hard...\nPlus, it's very hard to allow full design customization because there are many class names, table and navigation structure, etc, that are very very hard to override because of the logic inside.\nSo, to conclude, I suggest that EasyAdmin stays the same, but offers \"more\" twig blocks/functions/macros to allow better design customization.\nWhat could be good is to see some designers copy/pasting ALL templates into their app/Resources/easy_admin directory and upload only those templates to their website or to github so people only have to copy/paste the files in their own app/Resources/easy_admin directory so they don't have anything to do!\nObviously, this would be very tricky because each version has its own specificities, but it can be very easy to do this.\nI'd suggest to propose this feature for a 2.0 milestone :)\n. I'm glad to know the features to which you say \"no\" are also the ones I dislike :smile: (even though simple ajax property/value inline edit could be great).\nI also would like to wait some time until the \"team\" and the users discuss about this. Is there a possibility to \"pin\" the discussion on top of the issues in Github?\n. @mkalisz77 In your example, the role would have its place in the action itself, not in the field metadata. Creating a simple CRUD was the goal of EasyAdmin, but creating a deep CRUD over fields is very hard. \nAs @javiereguiluz said in other issues since he started developing this bundle, security is different for each backend, roles are different. Managing security roles is easy to do, you can override any action and add an if ($this->entity['name'] === 'MyEntity') { $this->denyAccessUnlessGranted('ROLE_CUSTOM'); }\nI deliberately did not talk about security for these reasons :)\n. Thanks a lot @ogizanagi for your feedback! :smiley: \nAbout security, I don't remember but I think that extra keys are preserved in entity configuration, it needs testing, but if they're preserved, it's an \"edge case\" because one day we might remove this feature if @javiereguiluz finds a way to add \"more\" caching solutions for the whole configuration.\n. Even if I did not mention it, I still think that the easyadmin route should have a /{entity}/{action}  pattern to make sure that everything can be configured under access_control in security.yml :laughing: But it has been refused many times so I don't want to push on this :smile: (even though a simple cookbook might do it).\n. @paquitodev Thanks for all these suggestions! I'll add them to the list in the first post :)\nAlso, for entities with inheritance, what kind of feature would you like to see?\nCustomizing select2 widget sounds like a 1.x feature, so it does not seem to be a problem for now, we may do it soon :) \nAnd for the fresh app, I'd start it with SF2.8 because some community bundles are not supported yet, and it can be tricky if your app needs some, so I'd start it in 2.8 :)\n. @mkalisz77 this is related to the search engine, but I don't know if I'd like this feature :confused: \nActually, either we create a powerful search engine (like the ones proposed by SonataAdmin for instance), or we use the actual one and add these kind of \"inline\" filters, but implementing everything would be a mess IMO :confused: \n. EasyAdmin 2.0 is not decided yet, this issue is here only to talk about what we would like to have for EasyAdmin 2.0 if it is released. Obviously, as Symfony 2.3 will reach end of life and now that Symfony 3 is released, we have to think about the future. What I'd ideally like is to maintain a 1.x branch for Symfony 2.3+ and a 2.x branch for Symfony 3.0+, but it's not decided.\nWhat you want for the select2 plugin can be easily achieved on the actual EasyAdmin version without any BC break on people using lower versions of EasyAdmin or Symfony that may upgrade their versions.\nIf it's a configuration parameter, you may create a custom config option in the extension by adding a new option in the Configuration class, that would have default values, and that would allow custom values or custom implementations. As I don't use select2 daily, I don't know its configuration options so I don't want to work on this because someone may have a better knowledge of it and may know exactly the select2 API, so I'd leave the task for them :D.\nFeel free to work on this and submit a PR if you like ;)\n. @paquitodev It's gonna be the subject of another issue/PR then because it's not about 2.0 :) \nI would also suggest, because it's a big BC break and I want BC breaks for 2.0, to move ALL field_* templates in a proper fields directory because it pollutes the \"default\" directory which is about backend templates and not about single field templates, what do you think? /cc @javiereguiluz @ogizanagi \n. @ogizanagi , @javiereguiluz , I had no answers about my ideas under the Show/Edit/New fields optimization section.\nThis is an important feature to me because I have backends that require to duplicate tons of code just because one field is present in new and not in edit (like a slug that should be immutable for SEO reasons, for example), and even if it changes the paradigm of the actual backend \u2012 and it'll need a lot of refactoring \u2012 we could fit a more \"field-based\" system, that sounds better to me than a \"action-based\" system.\n. > - Based upon ACL / ROLE_* support an integrated login system, out of the box\nLogin system is dependant of your application, so EasyAdmin can just guess what you have in your Security configuration, that's all :confused: \n\n\nBeautify URLs / Move GET parameters to POST or session or any other way SF provides (e.g. to the user object)\n\n\nYou already can override this behavior, especially to beautify URLs :smile: (using session or POST makes no sense to me, because it breaks the history)\n. @Glideh Your method is seducing me, I love how it works :smile: \nBut unfortunately we should also be able to provide \"many-inputs\" classic search system, I've experienced many users don't know the google-search syntax and that wouldn't understand it without explanations. And most of the time, if non-experienced users are using your backend, you should focus on UX rather than DX :smile: \n. Actually I think this native warning is fairly enough :confused: \n. I'm gonna write tests for this, because there will be many other edge cases in the future maybe\n. I added a single test for now, I can't make list work right now but we may add it later. It's a simple override that allows to check whether the layout is overridable without constraint so people can use EasyAdmin's layout without all EasyAdmin's logic to be copied/pasted.\nLet's wait for travis build to check it's working :)\n. I think it's better to perform a request because almost all the templates need for a request to make many checks, and even if it'd be more \"test-friendly\" to test only the template, I'm thinking only in functional terms, so we need a request for this.\nPlus, list wouldn't be testable outside a request, so it's a good bootstrap :D \n. You're right, we'll often override only the layout, but I was just looking for places where to put more and more tests :stuck_out_tongue: \nAnyway, the PR sounds good to me right now, if @javiereguiluz agrees ;) \n. (I'm still so impressed that one line modification induces 70 lines of test :laughing: )\n. :+1: \n. So adding this logger config works? I might add this in all my tests configs if it does :confused: \n. Such wow!\nGreat :+1: \n. I've noticed this last week and had no time to submit a PR, thanks for doing it :+1: \n. :+1: \nMuch clich\u00e9, wow :dog2: \n. For the Bug report part, I'd first suggest to search in Github issues for someone that may have had the same problem before, because many issues are created by people that don't fully understand either EasyAdmin or Symfony, and this sometimes create duplicate issues \n. You have to fill the type_options parameter in your entity property configuration, and put inside anything similar to what you would add to your FormType.\nHere is a very simple example:\nyml\neasy_admin:\n    entities:\n        Post:\n            form:\n                fields:\n                    - { property: host, type: choice, type_options: { choices: ['domain.com', 'sub.domain.com'] } }\n. Hmm... Wow, such a big PR for a so small feature...\nThe simple twig block would've been fairly enough to me, I don't know why adding more logic for a so simple feature is that important :confused: \n. Plus, I'll add that with this config option I can't add multiple favicons. What if I want to create a widget on an iOS device and want to see the apple-touch-* icons? This config options is here for only one favicon, whereas multiple favicon links are common for very \"networked\" websites.\n. Yep but actually, the config would still be compiled and be totally useless, and it can confuse users. Imagine I use the template override to manage the favicon, and another developer works on this project and is asked to change the favicon in the admin panel. He'll check the EasyAdmin docs, see this option, and won't ever know why it does not work if he sets it in the config.\nI think only one solution should be used: \"forced\" favicon from the config, or template-only. And I vote for template-only, because it's the simplest ever possible solution.\n. This is not exactly the same as js and css, because js and css rely only on one thing: resource path. Favicons are quite different because there's the source, mime type, and there can be more attributes for some other favicons...\n. @javiereguiluz's solution is better in terms of performance :) \n. @javiereguiluz As the user layer is not supported natively, I don't think the local should be supported. For instance, I have a backend where the locale is prepended to every route, so this would break my app if the locale was set elsewhere :confused: \n. I'm still :-1: on this :confused: \n. @javiereguiluz I'm not against the feature itself, having favicons is important, but I'm against the heavy implementation it implies. I don't think this should be configurable, because as said in #646 , favicons are \"not only\" a resource and a mime type, there can also be different rel properties, and there can be multiple favicons.\nPlus, many favicon generators provide proper HTML contents to add to your template, so it's counter-productive to force users to use a Yaml configuration whereas copy/pasting HTML is as simple as saying 'Hello'.\nHere's an exemple of what can be generated by some favicon generator:\nhtml\n<link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"/apple-icon-57x57.png\">\n<link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/apple-icon-60x60.png\">\n<link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/apple-icon-72x72.png\">\n<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/apple-icon-76x76.png\">\n<link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"/apple-icon-114x114.png\">\n<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/apple-icon-120x120.png\">\n<link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/apple-icon-144x144.png\">\n<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/apple-icon-152x152.png\">\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-icon-180x180.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"192x192\"  href=\"/android-icon-192x192.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/favicon-96x96.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"/manifest.json\">\n<meta name=\"msapplication-TileColor\" content=\"#ffffff\">\n<meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\">\n<meta name=\"theme-color\" content=\"#ffffff\">\nDifferent mime types, but also different tags, some have a size attribute, some don't have mime types, etc.\n. What's the goal of making the backend incredibly well responsive if we can't optimize everything for small devices?\nThe implementation still looks heavy to me :confused: \n. :+1: \n. This is possible if you create a FormType for this entity and use it as the type option for your alias property configuration in EasyAdmin.\nFor example:\neasy_admin:\n    entities:\n        Command:\n                # ...\n                form:\n                    fields:\n                        - property: alias\n                          type: 'AppBundle\\Form\\AliasType'\n. Actually managing ManyToMany with a form that creates a new element is tricky right now, even I prefer not to use this system because it's likely to create edge cases, but yeah when we find a proper solution we'll write a cookbook in the docs.\nFor your specific case it's hard, I thought it would work but actually there's more to do for this to work natively. I'd suggest you to read the cookbooks in the Symfony docs about Form collections.\nSorry for not succeeding in helping you :disappointed: \n. I get your point, and actually, you need at first to specify, in your Command form, that the alias field type is multiple, make sure that the mapping indicates at least cascade={\"persist\"}, and add a bunch of javascript with an Add new item option to create a new form and append it to the forms list.\nThere should be docs about this in Symfony, but actually I didn't check, but in one of my backends, I automatically four create new blank entities that I inject the object so that there is automatically 4 embedded forms in the backend (because in the logic I want my Video object to have only 4 chapters, so I run $video->addChapter(new Chapter()); four times and it creates me 4 forms in the view)\n. I get your point, and actually, you need at first to specify, in your Command form, that the alias field type is multiple, make sure that the mapping indicates at least cascade={\"persist\"}, and add a bunch of javascript with an Add new item option to create a new form and append it to the forms list.\nThere should be docs about this in Symfony, but actually I didn't check, but in one of my backends, I automatically four create new blank entities that I inject the object so that there is automatically 4 embedded forms in the backend (because in the logic I want my Video object to have only 4 chapters, so I run $video->addChapter(new Chapter()); four times and it creates me 4 forms in the view)\n. In terms of \"lore\", the delete button is shown only on edit and show because it's related to a form submitted with DELETE HTTP method (as standards explain it).\nIf you want to implement a delete button in the list view, here's an example:\n```\napp/config/easyadmin.yml\n...\nlist:\n    actions:\n        - { name: \"admin_delete_element\", label: \"Delete element\", \"type\": \"route\" }\n\n```\nAnd in any of your controllers:\n``` php\n/**\n * @Route(\"/admin/delete_element/{id}\", name=\"admin_delete_element\")\n */\npublic function adminDeleteElementAction(Request $request)\n{\n    $this->initialize($request);\n\n    $this->dispatch(EasyAdminEvents::PRE_DELETE);\n\n    $em = $this->getDoctrine()->getManager();\n\n    // Get the entity class automatically based on EasyAdmin's config\n    $object = $em->getRepository($this->entity['class'])->find($id);\n\n    if (!$object) {\n        throw $this->createNotFoundException($this->entity['name'].' object with id \"'.$id.'\" not found.');\n    }\n\n    $em->remove($object);\n    $em->flush();\n\n    $this->dispatch(EasyAdminEvents::POST_DELETE);\n\n    return $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n}\n\n```\n. Actually, it's more a security reason to me. Deleting is part of the CRUD and therefore shouldn't be allowed to everyone, even if the client wants it. To me, that's the reason why it was implemented as web standards with a HTTP DELETE method, and even if it's not the case, changing it would be a BC break, so adding a custom action is better to me.\nThere could be hacks, also, that would demand less likes of code: in your custom \"deleteFromListAction\" one could execute the \"deleteAction\" and \"fake\" the DELETE http request by changing headers. But it's a hack, and it's not clean at all.\n. You can create a method in your AdminController like this:\nphp\nprotected function createPhotoSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields) {\n    $queryBuilder = parent::createSearchQueryBuilder($entityClass, $searchQuery, $searchableFields);\n    // ... Your custom query builder implementation\n    return $queryBuilder;\n}\nThis way you can easily customize the search query performed to doctrine, or you can totally override it if you remove the parent:: call.\n. If you want to filter according to a joined table, you have to add a leftJoin to the querybuilder and make your or xx = :xx inside the querybuilder to make the request.\nWhen managing queries you can't take the entity's methods in account. Only the database contents.\nSo if you want to search by user, use a $qb->leftJoin('photo.user', 'user') and add $qb->andWhere('user.name = :username') and set the parameter to your builder.\n. > In the future I want to add some more widgets. They will be a few, but we'll provide them (I don't want to rely on third-party bundles for this):\n\n\n(soon) datepicker\n(soon) WYSIWYG editor\n(future) file upload\n(future) image editor\n\n\nThe \"I don't want to rely on third-party bundles for this\" part disturbs me. You don't want to rely on them, but actually it's much easier to do it.\nFor example, WYSIWYG is VERY easy to do with IvoryCKEditorBundle because it simply adds a FormType to use in our properties.\nFor file upload, VichUploaderBundle is also easy to integrate.\nAs I said before in other issues/PRs, I'd suggest to propose cookbooks and/or technical facilities (depend on the feature) to integrate third-party bundles. \nMany of the features we need consist in \"widgets\" as you say, but actually most of the time they can be solved simply with a FormType and some specific templates, and everything can be done without much harm.\nCookbooks are enough to me, like we can do for FOSUserBundle, IvoryCKEditor or VichUploaderBundle or anything else.\n. Like @ogizanagi I don't think we should change the actual events :confused: \n. @javiereguiluz For this, and to avoid BC breaks, I suggest to add a preFlush event that will receive, as first argument, the event type: new, update, delete.\nThis isn't that tricky, and would solve your problems :)\n. @javiereguiluz For this, and to avoid BC breaks, I suggest to add a preFlush event that will receive, as first argument, the event type: new, update, delete.\nThis isn't that tricky, and would solve your problems :)\n. We could also deprecate the preUpdate and prePersist in favor of preFlush($eventName) and then everything is solved: we can remove those two methods in 2.0 and trigger a E_DEPRECATED until then :wink: \n. We could also deprecate the preUpdate and prePersist in favor of preFlush($eventName) and then everything is solved: we can remove those two methods in 2.0 and trigger a E_DEPRECATED until then :wink: \n. > because a lot of people use \"implicit flushing\".\nWhat's this? :confused:\nI agree that it's better to keep everything as-is, but actually if a solution can answer a real case study, I don't understand why we wouldn't find a clean solution for it :)\nWe could find another word as preFlush like preSave but actually, keeping the words used by doctrine makes the user comfortable with the wording and helps him understand what the event really does\n. > because a lot of people use \"implicit flushing\".\nWhat's this? :confused:\nI agree that it's better to keep everything as-is, but actually if a solution can answer a real case study, I don't understand why we wouldn't find a clean solution for it :)\nWe could find another word as preFlush like preSave but actually, keeping the words used by doctrine makes the user comfortable with the wording and helps him understand what the event really does\n. I would also propose to prepend the locale to the route path in the routing file, which sounds much better to me (I always use this prefix in multi-lang apps, it's very cool)\n. @ogizanagi It's not \"only\" a SEO thing, it's also much easier to do in development terms because adding the _locale parameter in any route will automatically set it up in the translator, and also, creating a \"language toggler\" in the menu becomes much easier because you can reuse all parameters of the current request and only change the _locale option. \nIndeed this parameter can be in the query string, but this is ugly, and does not update the translator.\n. @ogizanagi It's not \"only\" a SEO thing, it's also much easier to do in development terms because adding the _locale parameter in any route will automatically set it up in the translator, and also, creating a \"language toggler\" in the menu becomes much easier because you can reuse all parameters of the current request and only change the _locale option. \nIndeed this parameter can be in the query string, but this is ugly, and does not update the translator.\n. Storing the language in session is good IMO because as you say it's invisible to the user, but actually its technical implementation is quite more difficult than simple locale injection, this is why I recommend this practice :) \n. Storing the language in session is good IMO because as you say it's invisible to the user, but actually its technical implementation is quite more difficult than simple locale injection, this is why I recommend this practice :) \n. And actually, the createNewEntity() method can also be \"dynamified\" by using the createNew<EntityName>Entity syntax, so you can have createNewGroupEntity() and create a new instance only for this entity.\nThis is also useful for the User class as I explained in a small cookbook on FOSUserBundle integration with EasyAdmin on my blog (ok, this blog is shitty but the article is there :p )\n. And actually, the createNewEntity() method can also be \"dynamified\" by using the createNew<EntityName>Entity syntax, so you can have createNewGroupEntity() and create a new instance only for this entity.\nThis is also useful for the User class as I explained in a small cookbook on FOSUserBundle integration with EasyAdmin on my blog (ok, this blog is shitty but the article is there :p )\n. @paquitodev Just look at the code and check this by yourself, it's very easy :smile: \nFor the GroupManager, just look at how FOSUser generates the services by checking its configuration files, we can see a fos_user.group_manager.default service which you can use, and it uses the class you linked above, extended by this class.\nYou can choose whatever system you like : createGroup($name) that simply creates the entity (so be careful if it exists already in the database) or findGroupByName($name) that will retrieve it in the database. You can also develop a mix of both that will retrieve existing element and create a new group if the name does not exist.\n. @paquitodev Just look at the code and check this by yourself, it's very easy :smile: \nFor the GroupManager, just look at how FOSUser generates the services by checking its configuration files, we can see a fos_user.group_manager.default service which you can use, and it uses the class you linked above, extended by this class.\nYou can choose whatever system you like : createGroup($name) that simply creates the entity (so be careful if it exists already in the database) or findGroupByName($name) that will retrieve it in the database. You can also develop a mix of both that will retrieve existing element and create a new group if the name does not exist.\n. :+1: \n. @safaksaylam Still, if you're using FOSUserBundle, you should use the FOSUserManager, to keep using the bundle's logic, else you might encounter edge cases if FOSUserBundle upgrades and changes the construction behavior. Sorry for posting to say nothing but... Wow, migrating from 1.2 to 1.9 is implying many BC breaks, I hope your backend won't be broken everywhere :confused: I migrated a backend from 1.4 to 1.9 last week and many things broke (and it made me open #629 ).\nFor your problem, @ogizanagi answered well, and I'll add a :+1: for his question about \"why did you override the form view?\"  :)\n. Sorry for posting to say nothing but... Wow, migrating from 1.2 to 1.9 is implying many BC breaks, I hope your backend won't be broken everywhere :confused: I migrated a backend from 1.4 to 1.9 last week and many things broke (and it made me open #629 ).\nFor your problem, @ogizanagi answered well, and I'll add a :+1: for his question about \"why did you override the form view?\"  :)\n. I'm sorry have not digged enough in the configuration that generates the types for associations, so I might say rubbish, but I think we should refactor it a bit and consider that *ToMany relationships \"natively\" with a collection type and add the entity FQCN in the type or entry_type options injected in the form type if it's not set automatically by the user. \nWith this, we would also need to refactor the template for collections to make it compatible with both \"simple collection\" (like simple_array type for example) and \"complex collections\" like entity associations.\nWhat do you think?\n. I'm sorry have not digged enough in the configuration that generates the types for associations, so I might say rubbish, but I think we should refactor it a bit and consider that *ToMany relationships \"natively\" with a collection type and add the entity FQCN in the type or entry_type options injected in the form type if it's not set automatically by the user. \nWith this, we would also need to refactor the template for collections to make it compatible with both \"simple collection\" (like simple_array type for example) and \"complex collections\" like entity associations.\nWhat do you think?\n. Because that's what's documented in the Form collections docs :confused: \n. Because that's what's documented in the Form collections docs :confused: \n. > In my experience, in an admin backend, you won't need to create entities of a *-To-Many relation directly with an embedded form as often as simply establishing the links between entities by using an entity field.\nIn my experience I can confirm this, but I'd also contradict this statement for relations with something as simple as tags. When you create blog CMS, you often have a Post entity and a Tag entity, and actually, creating tags on the fly is very common, and thus has to be implemented in some way. Indeed tags are more complex because persistence may be done on both existing and non-existing objects, but for ManyToOne relationships, it's different and is quite hard to do in EasyAdmin too.\nSomething like Medias may be a good example.\nStill for the CMS, adding an opengraph image, a header image or any kind of media (a Youtube video, in one of my backends) should be \"unique\" for each Post object, so having them in the database already is not very \"user friendly\". In this case you would have to embed a MediaType form and persist it at the same time as your Post object. And what if you have multiple medias, like pictures for a CV or images for a Product entity in an ecommerce application?\nProducts almost always have their own, but they can have tons of images, so it's basically a ManyToMany \"unique\" relation with a cascade={\"persist\", \"delete\"} additionnal mapping option. And for images, embedded forms are the best solution because it helps the user save a lot of time when uploading images for his product.\nAs I said, I think we should refactor a bit this feature to be handled more \"natively\", and maybe try to find something like a widget for embedding forms.\nFor example, create entity_form_simple for *ToOne and entity_form_collection for *ToMany widgets that would automatically embed one or many forms, and if you let EasyAdmin choose itself, render a simple <select> tag that would have multiple on *ToMany relations (which is the default behavior in Symfony)\n. > In my experience, in an admin backend, you won't need to create entities of a *-To-Many relation directly with an embedded form as often as simply establishing the links between entities by using an entity field.\nIn my experience I can confirm this, but I'd also contradict this statement for relations with something as simple as tags. When you create blog CMS, you often have a Post entity and a Tag entity, and actually, creating tags on the fly is very common, and thus has to be implemented in some way. Indeed tags are more complex because persistence may be done on both existing and non-existing objects, but for ManyToOne relationships, it's different and is quite hard to do in EasyAdmin too.\nSomething like Medias may be a good example.\nStill for the CMS, adding an opengraph image, a header image or any kind of media (a Youtube video, in one of my backends) should be \"unique\" for each Post object, so having them in the database already is not very \"user friendly\". In this case you would have to embed a MediaType form and persist it at the same time as your Post object. And what if you have multiple medias, like pictures for a CV or images for a Product entity in an ecommerce application?\nProducts almost always have their own, but they can have tons of images, so it's basically a ManyToMany \"unique\" relation with a cascade={\"persist\", \"delete\"} additionnal mapping option. And for images, embedded forms are the best solution because it helps the user save a lot of time when uploading images for his product.\nAs I said, I think we should refactor a bit this feature to be handled more \"natively\", and maybe try to find something like a widget for embedding forms.\nFor example, create entity_form_simple for *ToOne and entity_form_collection for *ToMany widgets that would automatically embed one or many forms, and if you let EasyAdmin choose itself, render a simple <select> tag that would have multiple on *ToMany relations (which is the default behavior in Symfony)\n. Actually a collection of forms is \"juste\" a collection type with the entry_type specified, and maybe the prototype (to ease the handling of an \"Add item\" button). We could investigate on this?\n. Actually a collection of forms is \"juste\" a collection type with the entry_type specified, and maybe the prototype (to ease the handling of an \"Add item\" button). We could investigate on this?\n. You closed the issue, I bet you realized that your last yaml config was wrong because you can't mix plain arrays with string-indexed arrays :wink: \n. You closed the issue, I bet you realized that your last yaml config was wrong because you can't mix plain arrays with string-indexed arrays :wink: \n. No problem for that, self-resolved issues are great I think :smiley: :+1: \n. No problem for that, self-resolved issues are great I think :smiley: :+1: \n. Just because it's funny I'm gonna remove this \"WTF\" branch only on January 1st, I like it :D \n. Just because it's funny I'm gonna remove this \"WTF\" branch only on January 1st, I like it :D \n. Actually, as I said, a cookbook is much better for this case, and actually it's just a bunch of global configuration that should be added globally:\n``` yaml\nUsed in EasyAdmin's ckeditor fields\nivory_ck_editor:\n    input_sync: true\n    default_config: base_config\n    configs:\n        base_config:\n            toolbar:\n                - { name: \"basicstyles\", items: [ \"Bold\", \"Italic\", \"Underline\", \"Strike\", \"Subscript\", \"Superscript\", \"-\", \"RemoveFormat\" ] }\n                - { name: \"links\", items: [ \"Link\", \"Unlink\", \"Anchor\" ] }\n                - { name: \"insert\", items: [ \"Image\", \"Table\", \"HorizontalRule\", \"SpecialChar\" ] }\n                - { name: \"tools\", items: [ \"Maximize\" ] }\n                - \"/\"\n                - { name: \"paragraph\", items: [ \"NumberedList\", \"BulletedList\", \"-\", \"Outdent\", \"Indent\", \"-\", \"Blockquote\" ] }\n                - { name: \"styles\", items: [ \"Styles\", \"Format\" ] }\n                - { name: \"document\", items: [ \"Source\", \"-\" ] }\n                - { name: \"about\", items: [ \"About\" ] }\n```\nI just copy/pasted what I'm using for one of my backends that uses CKEditor, and it could be added to a cookbook.\nI'm :-1: for this PR then\n. Actually, as I said, a cookbook is much better for this case, and actually it's just a bunch of global configuration that should be added globally:\n``` yaml\nUsed in EasyAdmin's ckeditor fields\nivory_ck_editor:\n    input_sync: true\n    default_config: base_config\n    configs:\n        base_config:\n            toolbar:\n                - { name: \"basicstyles\", items: [ \"Bold\", \"Italic\", \"Underline\", \"Strike\", \"Subscript\", \"Superscript\", \"-\", \"RemoveFormat\" ] }\n                - { name: \"links\", items: [ \"Link\", \"Unlink\", \"Anchor\" ] }\n                - { name: \"insert\", items: [ \"Image\", \"Table\", \"HorizontalRule\", \"SpecialChar\" ] }\n                - { name: \"tools\", items: [ \"Maximize\" ] }\n                - \"/\"\n                - { name: \"paragraph\", items: [ \"NumberedList\", \"BulletedList\", \"-\", \"Outdent\", \"Indent\", \"-\", \"Blockquote\" ] }\n                - { name: \"styles\", items: [ \"Styles\", \"Format\" ] }\n                - { name: \"document\", items: [ \"Source\", \"-\" ] }\n                - { name: \"about\", items: [ \"About\" ] }\n```\nI just copy/pasted what I'm using for one of my backends that uses CKEditor, and it could be added to a cookbook.\nI'm :-1: for this PR then\n. The problem I see is not only about technical automatic integration, because providing integration for CKEditor is great.\nIt's also about people.\nBlame me if I'm pessimistic, but I find this legitimate:\nThe problem is, because IvoryCKEditorBundle provides a FormType to use, as people won't have to do anything when they'll integrate it in their EasyAdmin config, when they'll want to add something to their CKEditor toolbar, they'll refer to us. They'll certainly create issues on this github repo because, you know, they did nothing and \"it works\" but it is \"missing something\".\nAdding \"magic\" is good but it should be done with parsimony. The goal of this bundle is to facilitate backend creation, not to do everything for the user. This PR is not DX at all, it's totally UX, and developers are not users.\nCreating a cookbook about a third party bundle should tell the basics of implementing it.\nFor IvoryCKEditorBundle, the basics are very simple: \n- Require the bundle with Composer\n- Add it to the Kernel\n- Update your EasyAdmin's fields type property to IvoryCKEditor's one\nThe rest is all about the third party bundle itself.. What if the bundle's config change one day? As we do magic in ours, users would get confused when using it, and even if one line of code could be changed to fix this, it can induce BC breaks for earlier versions of the bundles, or simply, it's more time to spend on maintaining a bundle that would depend on another (because as long as \"local\" logic depends on another bundle's logic, it's a dependency).\nFor third party integration, what we should do IMO is to explain the basics and then send the user the best links on how to understand how this other bundle works.\nI hope you don't take this as a reproach :confused: \n. The problem I see is not only about technical automatic integration, because providing integration for CKEditor is great.\nIt's also about people.\nBlame me if I'm pessimistic, but I find this legitimate:\nThe problem is, because IvoryCKEditorBundle provides a FormType to use, as people won't have to do anything when they'll integrate it in their EasyAdmin config, when they'll want to add something to their CKEditor toolbar, they'll refer to us. They'll certainly create issues on this github repo because, you know, they did nothing and \"it works\" but it is \"missing something\".\nAdding \"magic\" is good but it should be done with parsimony. The goal of this bundle is to facilitate backend creation, not to do everything for the user. This PR is not DX at all, it's totally UX, and developers are not users.\nCreating a cookbook about a third party bundle should tell the basics of implementing it.\nFor IvoryCKEditorBundle, the basics are very simple: \n- Require the bundle with Composer\n- Add it to the Kernel\n- Update your EasyAdmin's fields type property to IvoryCKEditor's one\nThe rest is all about the third party bundle itself.. What if the bundle's config change one day? As we do magic in ours, users would get confused when using it, and even if one line of code could be changed to fix this, it can induce BC breaks for earlier versions of the bundles, or simply, it's more time to spend on maintaining a bundle that would depend on another (because as long as \"local\" logic depends on another bundle's logic, it's a dependency).\nFor third party integration, what we should do IMO is to explain the basics and then send the user the best links on how to understand how this other bundle works.\nI hope you don't take this as a reproach :confused: \n. @ogizanagi Then with this philosophy, only this PR is relevant so we can merge it, but #668 still looks \"too much\" for CKEditor integration.\n. @ogizanagi Then with this philosophy, only this PR is relevant so we can merge it, but #668 still looks \"too much\" for CKEditor integration.\n. It's the best way to go, but it should be the first proposal at all, as I said in my comment, adding field configuration \"inline\" in the easyadmin field is very very ugly, and complicated to maintain.\n. It's the best way to go, but it should be the first proposal at all, as I said in my comment, adding field configuration \"inline\" in the easyadmin field is very very ugly, and complicated to maintain.\n. The whole logic of this PR, even though it's very well implemented ( congrats for this :+1: ), it has no place in a bundle that says it's not dependent at all of IvoryCKEditorBundle.\nWhat if someone wants to use stfalcon/TinymceBundle? This whole thing would be useless then. \nAs I said many times, adding a cookbook allows us to be sure we won't have to maintain logic and code to comply third party bundle's requirements and exigencies, which is not \"our\" work to do, and is certainly not what should be done in a Symfony bundle that intends to be fully standalone.\n. The whole logic of this PR, even though it's very well implemented ( congrats for this :+1: ), it has no place in a bundle that says it's not dependent at all of IvoryCKEditorBundle.\nWhat if someone wants to use stfalcon/TinymceBundle? This whole thing would be useless then. \nAs I said many times, adding a cookbook allows us to be sure we won't have to maintain logic and code to comply third party bundle's requirements and exigencies, which is not \"our\" work to do, and is certainly not what should be done in a Symfony bundle that intends to be fully standalone.\n. After a night of sleep, I've reconsidered my option about #666 because it's good to \"propose\" something.\nI still think this PR is too much, but it may be because of it's level of complexity, actually after relooking at the code multiple times, it seems that all \"field configuration\" logic is just decoupled to configurator classes.\nBut actually, as Forms are not really my best with Symfony, I'd like to have a dedicated section of the docs that would explain, in a few lines, how it works behind, and add examples on how to customize these configurators in an \"EasyAdmin way\". \n. After a night of sleep, I've reconsidered my option about #666 because it's good to \"propose\" something.\nI still think this PR is too much, but it may be because of it's level of complexity, actually after relooking at the code multiple times, it seems that all \"field configuration\" logic is just decoupled to configurator classes.\nBut actually, as Forms are not really my best with Symfony, I'd like to have a dedicated section of the docs that would explain, in a few lines, how it works behind, and add examples on how to customize these configurators in an \"EasyAdmin way\". \n. With this change, is the type: toggle still usable? I mean, I don't know when the dataType is set so it could induce breaks, no?\n. With this change, is the type: toggle still usable? I mean, I don't know when the dataType is set so it could induce breaks, no?\n. Actually, I've already used EasyAdmin with entities that inherited from other entities, and it worked well, but your mapping should be \"perfect\" for it to work, so remember to use\napp/console doctrine:schema:validate to be sure there is no error in the mapping.\n. Actually, I've already used EasyAdmin with entities that inherited from other entities, and it worked well, but your mapping should be \"perfect\" for it to work, so remember to use\napp/console doctrine:schema:validate to be sure there is no error in the mapping.\n. @ogizanagi Your small cookbook should be documented IMO :) \n. Updated the PR after @ogizanagi comments :)\n. Updated the PR after @ogizanagi comments :)\n. Your proposal makes use of advanced form handling, it superseeds my skills :stuck_out_tongue: feel free to make a PR to my branch if you want, I'll check\n. There are informations about this in #654 and #314 on how to accomplish this, but yeah I'd like an implementation of #76 in the listing, it would be awesome :)\n. WOW :+1: \nNice catch\n. @javiereguiluz If you are thinking about adding another \"level\" of configuration, I think it's gonna create many BC breaks :confused: I'd like you to propose issues before working on it if you like, it'd be cool :smile: \n(I can't think of something \"easier\" than adding a a single option, actually :confused: )\n. I'm sad to say I don't like it, even though it's very readable, actually it seems to me that it's quite hard to manage technically... Not in specifying the group for each property, but managing this in the view/form... :confused: \n. @ogizanagi I like your second proposal because it's simple, but I'm not totally in favor because it sounds like it duplicates fields declaration (it's duplicated enough between edit and new when you have two \"almost-identical\" forms that miss one single field for instance). Obviously it's not duplicating but it's adding much more code to the config, even if it's simpler than @javiereguiluz's proposal. And changing a property name would force the developer not to forget anything and also change the name in the groups (this is why I would really want something similar to Symfony1's AdminGenerator like proposed in #364 ). For us, it seems trivial because we know EasyAdmin, but for newcomers (and people using EasyAdmin \"just sometimes\") it's not straightforward at all to impose something like that.\nYour first proposal though, at first sight, is quite ideal because groups are just \"wrapping\" the config, but actually I don't know how this can be handled in the configuration... IMO it would be the best option, but we need to make sure the config is well managed and that there is no edge case possible... \n. For me, Symfony1's method is the best :) \n. @ogizanagi Not exactly, in SF1 you determine the fields mapping outside actions, and use the display option on whichever action you want, so it's similar but not the same :) \n. @ogizanagi If you want to propose annotations, I think you should create another bundle, it's gonna be pretty too much for EasyAdmin IMO :laughing: \n. @javiereguiluz I don't think closing the issue right now is a good idea. I bet your future code will be able to introduce tabbed forms, and I'd like to prove it to you once you will make the pull request \ud83d\ude04 \n. field-{{ block_prefixes[-2:][0] }}\nI don't understand this syntax :confused: Could you explain?\n. Because it's loaded by EasyAdmin's theme, you should use use_forward: true and use_referer: false in your security firewall, it's much better that way.\nOr you should add a specific access_control that allows admin/_* to match IS_AUTHENTICATED_ANONYMOUSLY role, if specified in the right order it should work :)\n. @rubengc This is simple: create your own login controller/template, make the template extend EasyAdmin's one, it's all about you, and everything lies under the Security component for implementation.\nFOSUser is just an easy & quick bridge to manage users in the database. Else, you may use in_memory for example, with the Guard component, if you still need a form login, it's not EasyAdmin's job to determine your own strategy.\nFOSUser is one of the most used bundles in Symfony, so it sounds normal to propose a cookbook for it. The rest is about Security, and if one is using Symfony + FOSUser and doesn't know about Security, there's nothing we can do about it... :confused: \n. @rubengc This is simple: create your own login controller/template, make the template extend EasyAdmin's one, it's all about you, and everything lies under the Security component for implementation.\nFOSUser is just an easy & quick bridge to manage users in the database. Else, you may use in_memory for example, with the Guard component, if you still need a form login, it's not EasyAdmin's job to determine your own strategy.\nFOSUser is one of the most used bundles in Symfony, so it sounds normal to propose a cookbook for it. The rest is about Security, and if one is using Symfony + FOSUser and doesn't know about Security, there's nothing we can do about it... :confused: \n. I'm still using my small tutorial for this and it works perfectly:\nhttps://www.orbitale.io/manage-fosuser-in-easyadmin/\nDo you suggest to add a new tutorial on how to integrate the login page into EasyAdmin?\n. :+1: for this, I just had the problem in a backend, it should be straightforward to do IMO... No time though :stuck_out_tongue: \n. @javiereguiluz Can you add milestones or a TODO tag (or similar) for these issues \"easy but need to be done\" ?\n. Using the translation_domain native Symfony Form property under the type_option should work, I don't know why you got malformed translations :/\n. :+1: \n. It's quite a duplicate of #696 in some way because nested menu are ongoing (at least in discussion ;) )\n. @devkbsc What is exposed in this issue is not implemented. However, #208 is the place where a nested menu system was implemented, and you can check the docs here. @devkbsc What is exposed in this issue is not implemented. However, #208 is the place where a nested menu system was implemented, and you can check the docs here. Ping @nicolas-grekas\n. @rubengc : it's more about providing cool cookbooks to easily integrate third-party bundles without having us to develop our own system, like for CKEditor or FOSUserBundle, which are not implemented, but just proposed as the easiest integration. If a bundle exists that provides cool datepickers like IvoryCKEditorBundle provides cool WYSIWYG in 5 minutes, then it should be presented as a proposal, not a requirement.\nIf there's no bundle for the bootstrap datetimepicker, I propose to create an open-source bundle dedicated to this, and maintain it separately from EasyAdmin :)\n. @rubengc : it's more about providing cool cookbooks to easily integrate third-party bundles without having us to develop our own system, like for CKEditor or FOSUserBundle, which are not implemented, but just proposed as the easiest integration. If a bundle exists that provides cool datepickers like IvoryCKEditorBundle provides cool WYSIWYG in 5 minutes, then it should be presented as a proposal, not a requirement.\nIf there's no bundle for the bootstrap datetimepicker, I propose to create an open-source bundle dedicated to this, and maintain it separately from EasyAdmin :)\n. Aaand I found one: https://github.com/stephanecollot/DatetimepickerBundle\n. Aaand I found one: https://github.com/stephanecollot/DatetimepickerBundle\n. @jokari4242 You're right, the best solution would be to load automatically an asset once and for all only when there's at least one field using a datepicker, pretty much like what IvoryCKEditorBundle does with the CKEditor javascripts.\n. @jokari4242 You're right, the best solution would be to load automatically an asset once and for all only when there's at least one field using a datepicker, pretty much like what IvoryCKEditorBundle does with the CKEditor javascripts.\n. Still, I think EasyAdmin cannot do much things about this, because there are tons of ways to implement date pickers, and if you want one for your locale, you may want many different ones...\n. Actually, latest Chrome versions also do integrate this kind of datepicker :)\n\n. > Please put more priority at this. A simple addition like select2 as data-widget=\"datepicker\" will solve all this issue quickly.\nWith this simple phrase you solved this issue, there's no need to add overhead to EasyAdmin with a feature that can be built in browsers\nEDIT:\nAnd by the way, nothing prevents you to createa custom DateType that will simply add this data-widget option and customize rendering like IvoryCKEditorBundle does when it automatically adds the <script> tag if not loaded already.. @shakaran The <select> native html doesn't include any kind of search engine or UI that highly helps using it. That's why select2 was chosen in the first place.\nA datepicker is a datepicker, and native ones include what we already need, the same as what jQueryUI or others include, minus the design, which is useless for mobiles for example that will use their native features to select a date.\nIf you need additional features like \"before or after date\" or others, then native EasyAdmin integration would not add any benefit other than writing a few lines of code for you which you can optimize yourself (adding JS to a web-page is enough overhead, no need to add more just for one line of code in a form type and/or a template).\nEasyAdmin already has bridges for CKEditor and VichUploader, but only because they already provide big customizing features. And each have their own options, and all we do with our backends is add a simple reference to these (by using native Form component features, a.k.a \"form options\" under the form_options field option). As said before: a one-liner that refers to a complete other feature, light coupling, cool maintenance.\nIf there's a \"DatePickerBundle\" available somewhere which is enough \"trustable\", maybe EasyAdmin may provide a bridge for it (like transforming all \"DateType\" into datepickers if the bundle is available).\nAs @javiereguiluz said years ago when creating this bundle, it's not meant to \"do everything for you\", but more \"allow you to do everything easily\", which is a very different point of view.\nI think one could copy/paste the contents of egeloen/IvoryCKEditorBundle and replace any reference to \"CKEditor\" with a reference to \"jQueryUI\" for instance, and make jQueryUI downloadable via a command, customizable with a few configuration options, etc. \nNo big deal in terms of feature, but it has to be done if there's really big needs for this kind of stuff.. :+1: for @ogizanagi both proposals, using cache provider + adding a compiler pass for metadata sounds like the best solutions to me to make sure the backend is fully performant.\nBUT, we should add a warning in the docs about caching, and add many comments telling the user to clear his cache when doing big changes on his configuration, to avoid any issue.\n. :+1: for @ogizanagi both proposals, using cache provider + adding a compiler pass for metadata sounds like the best solutions to me to make sure the backend is fully performant.\nBUT, we should add a warning in the docs about caching, and add many comments telling the user to clear his cache when doing big changes on his configuration, to avoid any issue.\n. Normalizers are good for the global config, but for entities, \"config passes\" sounds very good.\nAlso, would this proposal get rid of the Configurator class/service? Actually if the config is parsed before executing the app, the configurator becomes almost useless and is used only as a \"config-provider\" which only returns parts of the already-parsed config :confused: .\nYou're right about cache, if everything is compiled into the container, no cache needed :+1: \n. Normalizers are good for the global config, but for entities, \"config passes\" sounds very good.\nAlso, would this proposal get rid of the Configurator class/service? Actually if the config is parsed before executing the app, the configurator becomes almost useless and is used only as a \"config-provider\" which only returns parts of the already-parsed config :confused: .\nYou're right about cache, if everything is compiled into the container, no cache needed :+1: \n. @ogizanagi As said multiple times by  @javiereguiluz in previous issues, ODM or PHPCR won't be \"natively\" supported by EasyAdmin, so we won't have to worry it seems :) \n. @ogizanagi As said multiple times by  @javiereguiluz in previous issues, ODM or PHPCR won't be \"natively\" supported by EasyAdmin, so we won't have to worry it seems :) \n. :+1: \n. :+1: \n. Start by rendering your alias property with a custom template, in this template, wrap each of your alias object reference in a tag with some HTML parameters, and in your list view, inject a bit of JS to allow each of this object to be clickable and then do what you want (open a new page, request with AJAX and delete the label, etc.)\n. Start by rendering your alias property with a custom template, in this template, wrap each of your alias object reference in a tag with some HTML parameters, and in your list view, inject a bit of JS to allow each of this object to be clickable and then do what you want (open a new page, request with AJAX and delete the label, etc.)\n. Just set the template for each of your entities :) \nWhat you've done can be set up for all entities by adding the template for each property that should be \"deletable on the list\", and the JS can be put inside the global list view instead of just the view for your Command entity. You're on a good way :) \nAlso, I would suggest you to rename the close class to something more verbose like entity_deletion_button, else you may encounter some issues if this class name is used elsewhere...\n. Just set the template for each of your entities :) \nWhat you've done can be set up for all entities by adding the template for each property that should be \"deletable on the list\", and the JS can be put inside the global list view instead of just the view for your Command entity. You're on a good way :) \nAlso, I would suggest you to rename the close class to something more verbose like entity_deletion_button, else you may encounter some issues if this class name is used elsewhere...\n. Replace _entity_config.name by \"{{ _entity_config.name }}\" :smile: \ndiff\n$('.entity_deletion_button').click(function () {\n-    alert($(this).data('id') + _entity_config.name);\n+    alert($(this).data('id') + \"{{ _entity_config.name }}\");\n});\n(If this throws an error saying the _entity_config var does not exist, you can add this code at the top of your template: \n{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %} )\n. Replace _entity_config.name by \"{{ _entity_config.name }}\" :smile: \ndiff\n$('.entity_deletion_button').click(function () {\n-    alert($(this).data('id') + _entity_config.name);\n+    alert($(this).data('id') + \"{{ _entity_config.name }}\");\n});\n(If this throws an error saying the _entity_config var does not exist, you can add this code at the top of your template: \n{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %} )\n. You're sending the id and _entity_config.name on each request, so just add manually the template option to each ManyToMany association, and it should work as expected :)\n. You're sending the id and _entity_config.name on each request, so just add manually the template option to each ManyToMany association, and it should work as expected :)\n. The delete action you're linking is used in forms and listing to manage a proper delete action.\nWith your needs, using a complete form would be quite heavy...\nJust send an AJAX request to a custom route of yours that deletes an entity based on its class and id, and it should be enough :) \nFor this:\n- In your JS, use something like this:\ntwig\n  <script>\n  $('.entity_deletion_button').click(function() {\n      $.ajax({\n          type: 'DELETE',\n          url: '{{ path('my_delete_route') }}',\n          data: {\n              'entity': '{{ _entity_config.name }}',\n              'id': $(this).data('id')\n          }\n      });\n  });\n  </script>\n- In your AdminController (extending EasyAdmin):\n``` php\n  /*\n  * @Route('/delete/{entity}/{id}', defaults={\"action\": \"delete\"})\n  * @Method('DELETE')\n  /\n  public myDeleteRouteAction($entity, $id, Request $request) {\n      if (!$request->isXmlHttpRequest()) {\n          throw new HttpException(406);\n      }\n  $this->initialize($request);\n\n  $object = $this->em->find($this->entity['class'], $id);\n\n  if (!$object) { throw $this->createNotFoundException(); }\n\n  $this->em->remove($object);\n  $this->em->flush();\n\n  return new Response('ok');\n\n}\n  ```\n. The delete action you're linking is used in forms and listing to manage a proper delete action.\nWith your needs, using a complete form would be quite heavy...\nJust send an AJAX request to a custom route of yours that deletes an entity based on its class and id, and it should be enough :) \nFor this:\n- In your JS, use something like this:\ntwig\n  <script>\n  $('.entity_deletion_button').click(function() {\n      $.ajax({\n          type: 'DELETE',\n          url: '{{ path('my_delete_route') }}',\n          data: {\n              'entity': '{{ _entity_config.name }}',\n              'id': $(this).data('id')\n          }\n      });\n  });\n  </script>\n- In your AdminController (extending EasyAdmin):\n``` php\n  /*\n  * @Route('/delete/{entity}/{id}', defaults={\"action\": \"delete\"})\n  * @Method('DELETE')\n  /\n  public myDeleteRouteAction($entity, $id, Request $request) {\n      if (!$request->isXmlHttpRequest()) {\n          throw new HttpException(406);\n      }\n  $this->initialize($request);\n\n  $object = $this->em->find($this->entity['class'], $id);\n\n  if (!$object) { throw $this->createNotFoundException(); }\n\n  $this->em->remove($object);\n  $this->em->flush();\n\n  return new Response('ok');\n\n}\n  ```\n. > We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\nYep you're right, I don't have a working dev environment right now but you need the Alias name and not the Command name.\n\nI have made a small change on the PHP code you provide (I think it has a typo or perhaps I am complete wrong):\n// before\n$object = $this->em->find($this->entity['class'], $id);\n// after\n$object = $this->em->find($this->$entity['class'], $id);\n\nThe \"after\" is wrong, but the problem comes from the entity manager not being set. You could replace with this:\nphp\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n. > We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\nYep you're right, I don't have a working dev environment right now but you need the Alias name and not the Command name.\n\nI have made a small change on the PHP code you provide (I think it has a typo or perhaps I am complete wrong):\n// before\n$object = $this->em->find($this->entity['class'], $id);\n// after\n$object = $this->em->find($this->$entity['class'], $id);\n\nThe \"after\" is wrong, but the problem comes from the entity manager not being set. You could replace with this:\nphp\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n. > I got Notice: Undefined index: class and if I dump the content of $this->entity I got an empty array []\nHave you added $this->initialize($request) before, and is your controller extending EasyAdmin's one?\n. > I got Notice: Undefined index: class and if I dump the content of $this->entity I got an empty array []\nHave you added $this->initialize($request) before, and is your controller extending EasyAdmin's one?\n. Ok right it's because attributes are retrieved from query and not attributes because of this line\nThis fix should make it:\n``` diff\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @param Request $request\n-    * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\", defaults={\"action\": \"delete\"})\n+    * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\")\n     * @Method(\"DELETE\")\n     /\n    public function deleteAssociationAction($entity, $id, Request $request) {\n        if (!$request->isXmlHttpRequest()) {\n            throw new HttpException(406);\n        }\n+\n+       $request->query->set('entity', $entity);\n+       $request->query->set('action', 'delete');\n    $this->initialize($request);\n\n\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n$object = $this->em->find($this->entity['class'], $id);\n        dump($object);if (!$object)\n{\n    throw $this->createNotFoundException();\n}\n\n\n\n-//        $this->em->remove($object);\n-//        $this->em->flush();\n+       $this->em->remove($object);\n+       $this->em->flush();\n    return new Response('ok');\n}\n\n}\n``\n. Ok right it's because attributes are retrieved fromqueryand notattributes` because of this line\nThis fix should make it:\n``` diff\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @param Request $request\n-    * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\", defaults={\"action\": \"delete\"})\n+    * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\")\n     * @Method(\"DELETE\")\n     /\n    public function deleteAssociationAction($entity, $id, Request $request) {\n        if (!$request->isXmlHttpRequest()) {\n            throw new HttpException(406);\n        }\n+\n+       $request->query->set('entity', $entity);\n+       $request->query->set('action', 'delete');\n    $this->initialize($request);\n\n\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n$object = $this->em->find($this->entity['class'], $id);\n        dump($object);if (!$object)\n{\n    throw $this->createNotFoundException();\n}\n\n\n\n-//        $this->em->remove($object);\n-//        $this->em->flush();\n+       $this->em->remove($object);\n+       $this->em->flush();\n    return new Response('ok');\n}\n\n}\n``\n. Try to dump$thisand check the$entityproperty, right after$this->initialize($request);. Try to dump$thisand check the$entityproperty, right after$this->initialize($request);. Yep this is the problem, the ID and the class are incorrect, it comes from twig's template where you render each alias' link\n. According to [these lines](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Twig/EasyAdminTwigExtension.php#L126-L131) you should get access to afield_optionsvar that contains all property's metadatas\n. No, reloading the view is too much for this, just remove the tag clicked on in your.done()callback with jQuery's.remove()and the visual effect is enough :)\n. :+1: for data attributes, IMO it's the best solution as IDs are not stackable on the same tag\n. I'd also suggest to use a regex instead of plain str_replace, because form themes with paths likeeasy_admin/form/form_theme.html.twigwon't be normalized correctly...\n. @ogizanagi I don't remember if there're other ways of referencing templates, but think also about the prepending@like in@AppBundle/Form/theme.html.twig:) \n. @javiereguiluz It might be the text cursor :p (or \"caret\", don't remember how it's called in english)\n. If the same label is used for the list action and for the modal, it's a bug: the modal shouldn't use icons as it has to be the most verbose possible. We have a button, lots of space, so using an icon is quite counter-productive...\n. As long as the tests succeed, I don't think this update is wrong :+1: \n. Embedding forms is the only way to do this, and for this you must create your own FormType, as @reypm suggests, so if the problem comes from the FormType itself, you might have to check the form options of every label you have.\n. And if you don't override the twig widget at all, what happen?\n. @javiereguiluz I'd vote for option 4\n. @ogizanagi Actually, having a_wrapperinstead of_innerallows better understanding of the \"easiness\" of the override. Most of the time people will override what's inside thediv.row, and the wrapper may certainly be here only to \"hide\" it all and leave the space blank. The row itself would be useful if there were needs in adding other rows to avoid having` solitary in a template.\nI don't know if I'm clear enough :stuck_out_tongue: \n. It looks terrific! Can't wait to refactor my templates for it :D \n. Nice one :+1: \n. @mkalisz77 I'm not fan of disabling the submit button because sometimes I just want to trigger a listener, so I just submit the object so it automatically triggers a listener for updatedAt for example, or I have custom behavior that \"refreshes\" an object, etc.\n. @reypm EasyAdmin should not have entities and should not create new tables, so I hope this CRUD table is only for your app.\nThe implementation we need is to:\n1. Set up the role property for everything in the backend (menus, actions, links, buttons, properties, controller method, etc.)\n2. Everywhere we need the role, we must check that there is a User in the security context and that it has the needed Role. Search for the user in the context is mandatory, because you might not have one if the firewall is configured with anonymous: false for example, or if the anonymous user is linked to no User object.\nDon't worry, once you will make the PR we'll help you ;)\n. Plus, @crossplatformdev , you do not need to throw $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\"); on each action, because indexAction is the only route EasyAdmin uses, so you should throw this exception only in indexAction\n. @Glideh I like your solution! @javiereguiluz , could it be documented/implemented?\n. @javiereguiluz Can't we use ExpressionLanguage + permission attributes/roles for this ?\nWe could add two options permission_expression and roles that would be handled manually.\nThe advantage of permission expression is that we could allow extending it and make it very flexible. @luislaborda It has to be implemented, but I think @javiereguiluz is not very fond of the idea... Javier? \ud83d\ude09 . > Type error: Argument 1 passed to PlatformAdminBundle\\Controller\\AdminController::prePersistUserEntity() must be an instance of PlatformAdminBundle\\Controller\\User, instance of PlatformAdminBundle\\Entity\\User given\nAbout this error, a simple use PlatformAdminBundle\\Entity\\User; on top of your file would have solved the problem :smile: \n. Wow :+1: \n. You could use :active instead of hover or target, this would be much better for UX (with a cursor: pointer; of course).\n. Here's a really simple fiddle:\nhttp://jsfiddle.net/8c7Vn/192/\n``` css\nimg {\n    transition: max-width 0.25s ease;\n    max-width: 250px;\n    max-height: 150px;\n    cursor: zoom-in;\n    margin: 0 auto;\n    display: block;\n}\nimg:active {\n    max-width: 100%;\n    max-height: 100%;\n    cursor: zoom-out;\n}\n``\n. What if you put EasyAdmin before your own bundle in the KernelregisterBundles` function?\nIf this does not work, I'm afraid you might need compiler passes :confused: \n. The user is populated after the request is created, so you will have to create an EventListener to do what you want.\n. You cannot apply a new config based on the logged user, because the user depends on the config (as well as rendering twig templates, routing, etc.). I mean it's available only after container compilation and kernel handling start.\nSo you might not be able to change the config depending on the user.\nFor this, you'll have to rely on the Security component, which is not yet implemented but ongoing in other issues :) \nElse you can manually use listeners listening to EasyAdminEvents::PRE_LIST, EasyAdminEvents::PRE_EDIT,  etc.\nOr you can override the listAction, editAction, etc, and return a 403 if the user does not have the proper role.\n. First, for the csv/excel upload feature I think we will probably never implement it because it depends on your file, your backend, your entities, your implementation, etc. Too tricky and this can lead to very harmful edge cases.\nNext, about aliases, you could simply create a mapped: false field in EasyAdmin (via the type_options option in the yml config) and process it in a prePersist and preUpdate functions\n. Flushing is not recommended in prePersist because it may flush the main object and you might not want this. Persisting is enough because there already is a preFlush event thrown just before flush.\nRetrieving the aliases from the request is nice but I think you might also have to retrieve potentially existing aliases from the database to avoid duplication. Else, anytime you would have something like my_alias, it would always be persisted, whereas it could be simply retrieved from the database to avoid redundant data in your db.\nBut it seems your implementation is a good way of doing what you want with aliases :) Obviously it needs more testing to be sure it works but it's nice !\n. Flushing is not recommended in prePersist because it may flush the main object and you might not want this. Persisting is enough because there already is a preFlush event thrown just before flush.\nRetrieving the aliases from the request is nice but I think you might also have to retrieve potentially existing aliases from the database to avoid duplication. Else, anytime you would have something like my_alias, it would always be persisted, whereas it could be simply retrieved from the database to avoid redundant data in your db.\nBut it seems your implementation is a good way of doing what you want with aliases :) Obviously it needs more testing to be sure it works but it's nice !\n. Whenever you want to display an entity in a form, it should implement a __toString() method, so it will rendered as a string. The basic for your Alias class would be return $this->name; for example.\nNext, about your implementation, you are adding to your class some aliases that exist already, but for the ones that do not exist yet, you should have them too because they will be persisted on the fly.\nThere are some errors (same variable name, etc.), so let me try to fix this. Plus, I'd have done it a bit differently:\n``` php\npublic function prePersistAliasEntity(Alias $alias)\n{\n    $curAliases = $this->em->getRepository('PlatformAdminBundle:Alias')->findAll();\n    $existingAliases = [];\n    foreach($curAliases as $curAlias) {\n        // Here, the key is the name so we can check automatically\n        $existingAliases[strtolower($curAlias->getName())] = $curAlias;\n    }\n// Process request aliases\n$aliases = explode(',', $this->request->get('alias')['alias']);\n\nforeach($aliases as $stringAlias) {\n\n    if (!isset($existingAliases[strtolower($stringAlias)])) {\n        // Process inexistent aliases\n        $newObject = new Alias();\n        $newObject->setName($stringAlias);\n        $newObject->setActive($this->request->get('alias')['active']);\n        $alias->setAlias($newObject);\n        $this->em->persist($newObject);\n    } else {\n        // Retrieve the existing alias and add it to our own class\n        $alias->setAlias($existingAliases[strtolower($stringAlias)]);\n    }\n}\n\n}\n```\n. @reypm My computer is dead, and I've been looking for solutions for a week, and have no time to check right now, let me some time, sorry for being away :confused: \n. Ok, I have some time right now:\nAfter checking the code and your two entities, have you checked that your prePersist* methods are executed?\nYou can do it with a simple dump('ok');exit; right inside the methods.\nI have not realized that you were persisting a Command entity bound to an Alias one with the ManyToMany relationship, so maybe the cause of your problem is that your prePersistAliasEntity command should be renamed to prePersistCommandEntity.\n. Could you provide a small symfony app on github with all your actual config (only for these two entities) so I could test?\nIt's going mysterious...\n. @reypm yeah, with account @Pierstoval too :) \n. @reypm I'm in a complete rush (got 3 apps to put on prod for Monday, and they're still not ready...), I will check your issue when I'll have more time :confused: \n. @reypm I installed your project, had problems with fixtures, and I'm gonna try in the next days. For now, I'm using your develop branch and I can see no \"way\" of adding custom Aliases in your code, I'll have to  investigate further with the snippets you linked to me so I can find out what's going on :)\n. @reypm My wife gave birth a few days ago, I'm gonna take some \"holidays\" to take care of her and my children, but I'll clone the repo at home (I did it at work last time) and test myself in the next two weeks. Sorry for being so late, this issue bothers both of us and I apologize for this :confused: \n. @reypm My wife gave birth a few days ago, I'm gonna take some \"holidays\" to take care of her and my children, but I'll clone the repo at home (I did it at work last time) and test myself in the next two weeks. Sorry for being so late, this issue bothers both of us and I apologize for this :confused: \n. As there are some helpers for VichUploaderBundle in EasyAdmin, you might want to take a look at this issue: dustin10/VichUploaderBundle#276 , because it contains exactly what you need.\nIf you want multiple file uploads, then you should have a *ToMany relationship with an entity that contains medias/images/files, then use the collection form type for your field, and finally add VichFile or VichImage as prototype for this collection form field.\nI have not tested it, but it should be working actually, and the issue on the bundle might give some clues about how to do it.\nIf you test it and find it to be working, it would be great for you to propose a cookbook to add to EasyAdmin ;)\n. As there are some helpers for VichUploaderBundle in EasyAdmin, you might want to take a look at this issue: dustin10/VichUploaderBundle#276 , because it contains exactly what you need.\nIf you want multiple file uploads, then you should have a *ToMany relationship with an entity that contains medias/images/files, then use the collection form type for your field, and finally add VichFile or VichImage as prototype for this collection form field.\nI have not tested it, but it should be working actually, and the issue on the bundle might give some clues about how to do it.\nIf you test it and find it to be working, it would be great for you to propose a cookbook to add to EasyAdmin ;)\n. @mysiar the problem is not about the max nesting level, if you have more than 100 nested functions, you may have errors in your templates or something, you should debug that before.. @mysiar the problem is not about the max nesting level, if you have more than 100 nested functions, you may have errors in your templates or something, you should debug that before.. I'm not sure, even if the behavior is correct, I don't know, something is telling me that array_merge would have been better about the behavior of this operator :confused: \n. I'm not sure, even if the behavior is correct, I don't know, something is telling me that array_merge would have been better about the behavior of this operator :confused: \n. You can already configure the templates location under the design.templates configuration option as you can see here \n. You can already configure the templates location under the design.templates configuration option as you can see here \n. If you want to override form widgets, you should create a form theme and simply add it to your twig form themes as the last one (so it takes precedence over the others).\n. If you want to override form widgets, you should create a form theme and simply add it to your twig form themes as the last one (so it takes precedence over the others).\n. Yes if you want to override a template, this is the right way to do it\n. Or for your property you can use the template option to specify it:\n``` yml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            list:\n                fields:\n                    - property: my_field\n                      type: date\n                      template: my_template.html.twig\n```\n. Yes, and it depends entirely on your entity mapping & vich uploader config, so you should check vich uploader's docs instead\n. Yes, and it depends entirely on your entity mapping & vich uploader config, so you should check vich uploader's docs instead\n. I personally have created a namer similar to this in one of my apps:\n``` php\n<?php\nnamespace AppBundle\\Services;\nuse Behat\\Transliterator\\Transliterator;\nuse Vich\\UploaderBundle\\Mapping\\PropertyMapping;\nuse Vich\\UploaderBundle\\Naming\\NamerInterface;\nclass VichUploaderNamer implements NamerInterface\n{\n/**\n * {@inheritdoc}\n */\npublic function name($object, PropertyMapping $mapping)\n{\n    switch (true) {\n        case $object instanceof MyCustomEntity:\n            // Based on a specific class\n            $name = Transliterator::transliterate($object->getFirstname().'-'.$object->getLastname().'-'.$object->getEmail());\n            break;\n\n        case method_exists($object, 'getSlug'):\n            // Based on slug\n            $name = $object->getSlug();\n            break;\n\n        case method_exists($object, '__toString'):\n            // Based on stringification of the entity\n            $name = (string) $object;\n            break;\n\n        default:\n            // Or based on an id\n            $name = $object->getId();\n    }\n\n    return date('Y-m-d-H-i-s-').$name.'.'.$mapping->getFile($object)->getClientOriginalExtension();\n}\n\n}\n```\nConfigured like this:\n``` yml\nvich_uploader:\n    db_driver: orm\n    mappings:\n        my_specified_property_in_my_entity:\n            uri_prefix:         /uploads/my_directory\n            upload_destination: \"%kernel.root_dir%/../web/uploads/my_directory\"\n            inject_on_load:     true\n            delete_on_update:   false\n            delete_on_remove:   false\n            namer:              app_vich_uploader_namer\nservices:\n    app_vich_uploader_namer:\n        class: AppBundle\\Services\\VichUploaderNamer\n```\nAnd it works perfectly well\n. I personally have created a namer similar to this in one of my apps:\n``` php\n<?php\nnamespace AppBundle\\Services;\nuse Behat\\Transliterator\\Transliterator;\nuse Vich\\UploaderBundle\\Mapping\\PropertyMapping;\nuse Vich\\UploaderBundle\\Naming\\NamerInterface;\nclass VichUploaderNamer implements NamerInterface\n{\n/**\n * {@inheritdoc}\n */\npublic function name($object, PropertyMapping $mapping)\n{\n    switch (true) {\n        case $object instanceof MyCustomEntity:\n            // Based on a specific class\n            $name = Transliterator::transliterate($object->getFirstname().'-'.$object->getLastname().'-'.$object->getEmail());\n            break;\n\n        case method_exists($object, 'getSlug'):\n            // Based on slug\n            $name = $object->getSlug();\n            break;\n\n        case method_exists($object, '__toString'):\n            // Based on stringification of the entity\n            $name = (string) $object;\n            break;\n\n        default:\n            // Or based on an id\n            $name = $object->getId();\n    }\n\n    return date('Y-m-d-H-i-s-').$name.'.'.$mapping->getFile($object)->getClientOriginalExtension();\n}\n\n}\n```\nConfigured like this:\n``` yml\nvich_uploader:\n    db_driver: orm\n    mappings:\n        my_specified_property_in_my_entity:\n            uri_prefix:         /uploads/my_directory\n            upload_destination: \"%kernel.root_dir%/../web/uploads/my_directory\"\n            inject_on_load:     true\n            delete_on_update:   false\n            delete_on_remove:   false\n            namer:              app_vich_uploader_namer\nservices:\n    app_vich_uploader_namer:\n        class: AppBundle\\Services\\VichUploaderNamer\n```\nAnd it works perfectly well\n. Great if it work for you! \n. I don't understand why it would be related to EasyAdmin, I recently updated and I had no problem... \nIt's just the cache command that fails after a composer install, which can happen because composer is not linked to the symfony app.\nCould you add -vvv to your install command?\n. Mostly it comes from the cache and the fact that sometimes, Doctrine 2.5 tries to connect before compiling the container (or at the very beginning), which leads to many errors (and that's why doctrine 2.5 was incompatible with Symfony for a long time).\n. It's totally normal that you can't do it. Configuration is processed when compiling the container, so the user is not accessible at all until the container is compiled.\nThere is already a discussion about this in #820 starting from this comment \n. @rubengc Yes it is possible but only before compiling it, with extensions or compiler passes. But even then you wouldn't be able to retrieve the user from the session because services are not available because the container is not compiled.\n. In your implementation you could get the EasyAdmin configuration by injecting the easy_admin.config container parameter\n. I don't think this is possible without doing it \"yourself\" actually\n. What's the before/after?\n. Well :+1: \n. :+1: can be merged\n. @reypm The last solution with the entity type and the class options are correct, but you should specify multiple: true because it's a ManyToMany relationship. I used this in another non-EasyAdmin form this week and this is the right way.\n. > In this way I shouldn't allow to choose more than one so only one is allowed. Still the same entities but change the behavior based on a condition (the user picks something).\nSorry, double-posting, but I just saw this part. Then multiple: false is good and the problem with the widget is quite strange. Did you see a javascript error or something?\n. Actually, no. You are talking about a number that is calculated for each row based on the number of entities in the relation, not a result from the database, so for this you would have to customize the searchAction and the createEntityQueryBuilder methods to do what you want. It's not easy actually :confused: \n. I like the need for adding new features specific to each link, but I prefer having an attr option, like we have in form fields. This would be much more flexible, and plus it would allow adding classes or other cool things.\n. :+1: \n. Embedded form is not actually very well documented, but it relies on bootstrap's layout, so it should be fixable without much pain :confused: \n. > 1. I don't have OptionsResolverInterface class (Symfony 3.0.1 here). I presume, that I should change it for OptionsResolver class.\nAnd change the setDefaultOptions method for configureOptions\n\nIs winemakerArea is a property of Winemaker class?\nAnd... is FBNGuideBundle:WinemakerArea indicating on WinemakerArea class, which is located in FBN\\GuideBundle bundle?\n\nActually with what I see, no.\nwinemakerArea is a property of the WinemakerDomain entity.\nThe relation seems to be like this:\nWinemaker has one or more WinemakerDomain (OneToMany).\nA WinemakerDomain is associated to one single WinemakerArea (ManyToOne)\n\nAnd, I'm getting an error on this: The option \"property\" does not exist.\n\nIt should be renamed to choice_label as explained in the 3.0 docs \n. I find no problem for now for these methods to be private, but if you could find some use cases that would absolutely need these methods to be executable from a child AdminController, I think they may change visibility.\n. Plus, globally when you develop, the sayings \"All classes must be final and all methods must be private\" are very important to avoid users to do dumb things with methods they should not use.\nFor this, Symfony itself sometimes needs methods to be protected or public for \"Symfony internals\" purposes because it's all about different components, but they use a @internal Phpdoc annotation and sometimes explain why the methods should not be used publicly.\n. :+1: \n. :+1: \n. It is possible, and it relies on basic Symfony Form component.\nCreate a form type as explained in Symfony Form docs and in your EasyAdmin config, set the details's type attribute with the full class name of your newly created FormType class.\nDon't forget to add cascade={\"persist\", \"remove\"} in your User entity in the userDetails property's ORM mapping.\n. > But FormType is for create custom field in form. I need possibility to edit in one form two entities with relation One2One.\nActually no, a FormType is just a form, and a Form is a compound of many FormTypes that are transformed into Form classes when using $formBuilder->getForm().\nEasyAdmin also uses its custom FormType class to manage forms.\nAny Form is based on a FormType, so if you want to create custom FormTypes classes you can obviously use them with EasyAdmin because EasyAdmin uses the native Form component to allow easier use, flexibility and portability.\nAnd basically if you need nested forms, you have to use custom FormTypes.\n. @mkalisz77 the mapping is valid for a bidirectionnal relationship. \nThe main issue may come from the fact that each entity need the proper getters/setters for ManyToMany relationships, but @slmcncb has not shown any of these so we can't be sure it works.\n. Your mappings seem correct:\n* @ORM\\ManyToMany(targetEntity=\"Post\", mappedBy=\"categories\", cascade={\"persist\"})\n* @ORM\\ManyToMany(targetEntity=\"Category\", inversedBy=\"posts\", cascade={\"persist\"})\nBut I don't know if it's totally working because the targetEntity stores only the class name and not the FQCN... But if you can add one of them and not the other it may come from another issue.\nCan you try adding setPosts($posts) and setCategories($categories) in the corresponding classes?\nIf this does not work, can you show your EasyAdmin configuration?\n. I don't know whether it'll solve the issue but I'd suggest changing the addPost and addCategory methods according to this change:\n``` diff\n// Category.php\n/*\n * @param Post $post\n * @return Category\n /\npublic function addPost(Post $post)\n{\n    $this->posts[] = $post;\n+   if (!$post->getCategories()->contains($this)) {\n+       $post->addCategory($this);\n+   }\n    return $this;\n}\n```\n``` diff\n// Post.php\n/*\n * @param Category $category\n * @return Post\n /\npublic function addCategory(Category $category)\n{\n    $this->categories[] = $category;\n+   if (!$category->getPosts()->contains($this)) {\n+       $category->addPost($this);\n+   }\n    return $this;\n}\n```\nIf this really does not work, you could also try to persist both objects instead of just one.\n. Have you tested persisting such objects outside EasyAdmin? Maybe something else could be debugged from the profiler :confused: \n. I'm pretty sure this has nothing to do with EasyAdmin itself but the Form component + Doctrine. As my wife gave birth a few days ago I don't have time to \"code\" to test this, I can just advice you to take a look outside EasyAdmin issue tracker (on StackOverflow for instance) to check what's going on. If you find a solution it could be good for you to say it back here :wink: \n. I'm pretty sure this has nothing to do with EasyAdmin itself but the Form component + Doctrine. As my wife gave birth a few days ago I don't have time to \"code\" to test this, I can just advice you to take a look outside EasyAdmin issue tracker (on StackOverflow for instance) to check what's going on. If you find a solution it could be good for you to say it back here :wink: \n. @antondachauer you should take a look at StofDoctrineExtensionsBundle which will automatize everything you need with simple PHP traits and doctrine listeners.\n. 1. I can't answer right now, I don't have my environnement set to make tests.\n2. As you can see in the layout.html.twig#L9, there's a blog called page_title you can use in any of your overriden templates. So basically you could do this:\ntwig\n   {# app/Resources/views/easy_admin/layout.html.twig #}\n   {% extends '@EasyAdmin/default/layout.html.twig' %}\n   {% block page_title %}\n       {{ parent() }} :: XYZ\n   {% endblock %}\nYou could do this in ANY overriden template as long as you use the EasyAdmin template inheritance mechanism.\n3. I think the problem comes from the fact that the label should be specified under the type_options parameter for checkboxes, I saw a similar comment some days ago in another issue.\n. @SebTM for the \"order\" thing, it's not possible actually and I don't think it will be with drag&drop features we sometimes like, just because this drag&drop feature would need to remove the pagination (or there will be too many edge cases or glitches...). A simple integer value could be enough IMO, I used it in another backend and it works perfectly if you use doctrine listeners that may swap/reorder the other entities.\n. @SebTM no, there is no special type for select2, it's just used automatically for every entity relations \n. :+1: \n. Defining a __toString() method in all entities is a good practice, and it's also recommended in this part of the docs because it's used when rendering ManyToMany relationships in Symfony forms.\n. Yep, it's VERY hard to do. I never tried and I'm not in a hurry for this, because I know it's gonna be TOUGH. Using translatable entities is already hard natively, so with forms it's cumbersome...\nBUT, if you're using one external {ClassName}Translations entity, you might update it automatically based on virtual fields in your forms, which might be a good start and not that hard if the entity has 1 or 2 translatable fields (and if you have 2 or 3 locales max, else it'd be a pain).\n. > if ($locale = $request->attributes->get('_locale')) {\nIsn't this code incorrect, shouldn't = be changed for === ?\n. Ok, I understand now, you're right then, but actually you don't use the $locale var at all and set the locale to es manually so you could remove the $locale = part, unless you want to use the $locale var.\n. @CruzyCruz Actually the form type can be specified directly in your EasyAdmin config:\n``` yml\n...\nform:\n  fields:\n    - 'name'\n    - 'author'\n    - 'description'\n    - 'restaurateur'\n    - 'openingHours'\n    - 'tel'\n    - 'site'\n    - 'href'\n    - 'restaurantPrice' # ManyToOne\n    - 'restaurantStyle' # ManyToMany\n    - 'restaurantBonus' # ManyToMany\n    - { property: 'image', type: 'FBN\\GuideBundle\\Form\\ImageRestaurantType' }\n    - { property: 'coordinates', type: 'FBN\\GuideBundle\\Form\\CoordinatesType' }\n``\n. :+1: \n. @gastoncs Where do the elements of yourchoicecome from? Can't you just use PHP's*sort` functions?\n. Ok, so this choice is bound to an entity, this is what I wanted to know actually.\nFor what you want, you should create a createDeparturePointEntityFormBuilder method in your own AdminController and add something similar to this:\n``` php\n/*\n * @see AdminController::createEntityFormBuilder\n /\npublic function createDeparturePointEntityFormBuilder($entity, $view)\n{\n    $builder = parent::createEntityFormBuilder($entity, $view);\n$cityBuilder = $builder->get('city');\n$cityType = get_class($cityBuilder->getType());\n$cityOptions = $cityBuilder->getOptions();\n\n$cityOptions['query_builder'] = function (EntityRepository $er) {\n    return $er->createQueryBuilder('city')\n        ->orderBy('city.name', 'ASC');\n};\n\n$builder->add('city', $cityType, $cityOptions);\n\nreturn $builder;\n\n}\n```\nThis should work, I guess.\nThe goal here is to overwrite the city form field but keeping its resolved options, so we get them all, and re-add it. Symfony Form component will automatically erase the previous and add the new form field so it is identical to the previous, minus the query_builder option you added that specifies how to retrieve the entities in the relationship.\n. @javiereguiluz Actually I think this should be implemented, because we could implement many new batch methods (edit, custom actions, etc.).\nI just think that service tags is not the best solution (we do not use services except internally) so we should refactor this and add a new batch_actions used only on the list view.\n. @javiereguiluz Actually I think this should be implemented, because we could implement many new batch methods (edit, custom actions, etc.).\nI just think that service tags is not the best solution (we do not use services except internally) so we should refactor this and add a new batch_actions used only on the list view.\n. > IMO, batch actions also need to be apply search action.\nI think that, in the future, list and search should be merged, so list only for me too\n. @unexge This is a huge BC break so I thought about doing this for 2.0 and not in EasyAdmin 1.x\n. @unexge This is a huge BC break so I thought about doing this for 2.0 and not in EasyAdmin 1.x\n. Oh sorry for that :laughing: Yeah I was talking about merging list and search to no more have search actually\n. Oh sorry for that :laughing: Yeah I was talking about merging list and search to no more have search actually\n. I like the fact that there is very few code inside this nice implementation :+1:.\n. I like the fact that there is very few code inside this nice implementation :+1:.\n. > if (!is_a($defaultController[0], AdminController::class)) {\nis_a should use the third arg with true\n\nEasyAdmin will generate dynamic routes per entity:\n\nI don't like this idea. EasyAdmin is built with only one single route, and it should remain the same to avoid conflicts with custom ones. The listener approach is good to me even if it sounds \"heavy\".\n. > if (!is_a($defaultController[0], AdminController::class)) {\nis_a should use the third arg with true\n\nEasyAdmin will generate dynamic routes per entity:\n\nI don't like this idea. EasyAdmin is built with only one single route, and it should remain the same to avoid conflicts with custom ones. The listener approach is good to me even if it sounds \"heavy\".\n. I'm in the agreement but I don't want routes to be auto-generated like in Sonata. This is a pain to debug, and it can induce conflicts. What I thought about was a config option or a \"copy/paste example\" of how to generate one single route /admin/{entity}/{action} for example, and have this behavior automatically supported by the native AdminController without having to manually add code (which we must do now or it does not work).\n. @rubengc Did you have to copy/paste the original code for this? If yes, we might think about specific events we could throw from the FormType for example\n. @rubengc Did you have to copy/paste the original code for this? If yes, we might think about specific events we could throw from the FormType for example\n. @abdielcs As this authorization could be done either with classic roles or with voters, I think you should implement this yourself.\nWhat's good is that if you specify an \"unknown option\" in the entity config, nothing will happen and the option is usable everywhere.\nMaybe you could override menu.html.twig and override the helper macro? I don't know if it might work but this is where I'd look first to check whether it's doable without us to implement the feature.\n. @abdielcs As this authorization could be done either with classic roles or with voters, I think you should implement this yourself.\nWhat's good is that if you specify an \"unknown option\" in the entity config, nothing will happen and the option is usable everywhere.\nMaybe you could override menu.html.twig and override the helper macro? I don't know if it might work but this is where I'd look first to check whether it's doable without us to implement the feature.\n. Yep, I think decoupling the docs per-view might be good to know specificities of each action :smile: \nBut for your comment the markdown is broken, the edit/new views names are not wrapped correctly in the list\n. Yep, I think decoupling the docs per-view might be good to know specificities of each action :smile: \nBut for your comment the markdown is broken, the edit/new views names are not wrapped correctly in the list\n. Cant you show your EasyAdmin config for this field?\n. @abdielcs Just override the so-called action and do what @SebTM proposes: validate, if it fails, add a flash message and redirect to the referer. This is the best thing to do actually.\nFor flash messages, just look at the AdminController, there are some.\n. I also disagree with the idea of having configuration inside the database. The problem is that actually the configuration is heavy, and retrieving another \"overriding\" config is a bit too cumbersome for what you need.\n\n1 - The YML config file:\nThis will be the initial configuration for any panel (like now), the difference is that it would become ONLY the initial configuration of our panel, and charged to the database when we do through the loading fixtures (with DoctrineFixturesBundle), after this load will never be read again. if you reload fixtures again, then it will be overwritten\n\nLoading a config like fixtures is totally different. Fixtures are here to set up a \"basic\" or a \"test\" database. Configuration is not like fixtures, because configuration is here to make the app work our way. Fixtures are juste a way of adding fake or base contents to your app.\n\n2 - Loading the configuration\nThe configuration will be loaded at the start of the controller execution and passed to the view. The function to load this configuration can count with multiples events and dynamic functions (like listAction, that you can modify the query builder) or be overwritten\n\nNow the config is cached on compilation. So it's pretty fast actually. Using database config means that we have to set up base config, and then allow the container to modify this configuration, which is contrary to the actual design that stores the config inside the container, so we would need a service to get the configuration and the only cached thing would be the basic one, the database one always overriding totally the basic one, resulting in heavy normalization on each request. This is not optimized at all.\n\n3 - Configuration entites\n@javiereguiluz decides what happen with this part (If one entity or multiple entities to store everything), but the positive option of this is you can extends this entities and add an extra fields (like user, role, etc) and before modify the controller method to load this\n\nYou can already do this with the actual configuration. EasyAdmin entities' config is flexible and non-restrictive: any non-existing field are still added to the config and you can use it when you get the config from the container or the configurator.\n\n4 - Writting your configuration\nThe current passes can help you to normalize configuration after to update them\n\n... Resulting in two normalizations: one at compile time, and another for each request :confused: \n\nPros:\nPosibility to add your own configuration parameters (no more yml format errors)\n\nI don't think it's a \"pro\" at all. Any config file have this \"issue\", but PHP files also have it: parse errors, non-existing vars, etc.\n\nCustomizable configuration entities (extending them or creating your own)\n\nAs said above, it's already something you can do with EasyAdmin.\n\nDynamic and exportable/importable configuration\n\nCreate a simple app/config/easyadmin.yml file and you can export it anywhere...\n\nPosibility to dinamically load or extend configuration by bundle\n\nThis is now possible thanks to #777 and some work in your bundle's extension.\n\nNo more headache\n\nWrong, coding is always bringing headaches :laughing: \n. You're right, only the default templates can be overriden \"natively\".\nWhat you need is a form theme.\nEasyAdmin uses Symfony native Form component and templating to render its forms, so I suggest you take a look at How to Customize Form Rendering in the Symfony docs so you might find the solution that suits to what you need, especially the Form Theming in Twig part.\nFor your last question, the form_theme simply searches for a twig path, so custom_layout.html.twig is understood as app/Resources/views/custom_layout.html.twig, as any twig path :)\n. I don't like this feature. It's \"specific\" behavior for something a bit restrictive.\nWhy not add a attr option that will contain all HTML properties to the tag? (of course with the href one being overriden to avoid issues)\n. > The problem with attr is that it forces you to remember which options are first-level options and which ones nested inside attr. And nested arrays are ugly in YAML files. We do that when we have no other option (line type_options for form fields) but we try to avoid that as much as possible.\nPrecisely, having attr is a good standard because it allows everyone to know what's the difference between logical parameters and html parameters. attr is also used in Symfony forms with attr for widgets and label_attr for labels for example.\nHere, when you add \"magic\" (= a seemingly \"logical\" option that's transformed into a basic html parameter) you induce bc breaks when the attr option is finally introduced.\nI personally have to change the class of one link in some of my backends, and another will use javascript so it needs an id and an empty href attribute.\nThere's always room for full flexibility, especially when you follow good/standard practices that are used elsewhere the same way.\nAnd for the And nested arrays are ugly in YAML files , there is not much solution for this. Actually, there is one: define the configuration from tagged services returning arrays (something I proposed last year many times).\n. What do you have in mind exactly? :)\n. This is indeed a bug, and should be fixed\n. I tried some fix in e2f1451, @javiereguiluz , do you want a PR or are you working on it? \n. I'm gonna make a PR :)\n. Here is #913 \n. Search is made through doctrine, and we can't search on virtual fields unless you add post-listener that filters the list of items.\n. @javiereguiluz Hope you're gonna merge search and list :stuck_out_tongue_winking_eye: \n. Randomly? Seriously? I think we need coverage on each build :confused: \n. @javiereguiluz There are still some PHP errors that concerned only PHP5.4 or 5.5, but workarounds are most often added to Symfony itself to avoid regressions on specific PHP versions, so I agree 5.3 and 5.6 are good to test as references.\nActually if one's using PHP5.3 and want to migrate to a newer version, it comes mandatory to migrate to 5.6 or 7.\n. Actually this is a big problem: width can't be autocalculated unless we use flexboxes.\nHere, using Bootstrap columns would be too easily breakable because it is not flexible at all when adding new elements to this part of the template.\nI'm not pro enough in CSS to know what to do actually, and I don't want to spoil the template, but actually, allowing flexibility is mandatory to allow one or the other part to be both viewed.\n@javiereguiluz do you suggest something specific (though breaking flexibility) ? Might be easier to do then.\n. Actually we are facing a \"widthed-block\" problem (pardon my neologism).\nThe fact is that everything is fluid, BUT the block containing the two actions is fixed in percentage to its parent (it's a Bootstrap column).\nSo, if we want to have something that takes the whole width all the time, actually I think we'll need either flexbox (most flexible), or display:table-cell and some tricks to make everything inlined AND full-width AND responsive.\nMuch CSS to do, but the Twig can stay the same (or we can add a single class to allow the users to understand better the small API behind this behavior when adding a new item in here). \n. Yes, override the indexAction and do this:\nphp\npublic function indexAction(Request $request) {\n    $query = $request->query;\n    if (!$query->get('entity')) { $query->set('entity', 'MyDefaultEntity'); }\n    if (!$query->get('action')) { $query->set('action', 'my_default_action'); }\n    if (!$query->get('id')) { $query->set('id', '0'); }\n    return parent::indexAction($request);\n}\nIf this does not suit to you, you might need to manage the route parameters with complex route mapping, but it's feasible.\n. @SebTM This was a feature I proposed since the beginning of EasyAdmin and it has always been refused because you can do this manually by replacing easy_admin route mapping with your own default parameters and maybe a ParamConverter if you need. The only thing is that there must be defaults at least for action and entity parameters because there rare links in the backend that do not define these route parameters.\n. @SebTM This was a feature I proposed since the beginning of EasyAdmin and it has always been refused because you can do this manually by replacing easy_admin route mapping with your own default parameters and maybe a ParamConverter if you need. The only thing is that there must be defaults at least for action and entity parameters because there rare links in the backend that do not define these route parameters.\n. Great that my idea from last year could also come from other followers :+1: \nHope this will be implemented :wink: \n. Could you provide screenshots of the before/after? I don't see the point actually (even if it is theoretically good :) )\n. Could you provide screenshots of the before/after? I don't see the point actually (even if it is theoretically good :) )\n. :+1: \n. So you need actually two different list actions that would display different fields?\n. Wow... I don't know if it's possible actually, because fields are determined from configuration :confused: I have never investigated on this...\n. @tiraeth Sounds good to me, could not review \"deeply\", but I think you can prepare a PR. If needed, @javiereguiluz will rebase it manually to add modifications :) \n. @javiereguiluz I don't understand why you want to make things \"slower\" for this two features. If @tiraeth makes a PR and if it's compliant with EasyAdmin needs and practices, I don't see why you need time to integrate the feature \"later\" while a fully-developed & tested PR is available for both features.\n. > If easyadminbundle is going to be used with other orms/odms in future :-)\nI bet it will not, but at least, consistency with query and dql is important, I also agree with the idea because actually we're writing a \"piece of query\" , not a \"dql query\" even if it \"looks\" like dql :)\n. No, I mean extend EasyAdmin configuration and add the select2_locale parameter, somewhere so we can configure it in the application, but I think @javiereguiluz should review this before further development :) (this is often the reason why there's an issue before talking about a \"new feature\" and making a PR).\n. No, I mean extend EasyAdmin configuration and add the select2_locale parameter, somewhere so we can configure it in the application, but I think @javiereguiluz should review this before further development :) (this is often the reason why there's an issue before talking about a \"new feature\" and making a PR).\n. So in this case, locale should be \"normalized\": what if your locale is actually fr_FR instead of just fr?\nI know for many locales it's not a big issue, but in fact I experienced such problems last year with multi-locale backends using nl_BE and nl_NL locales which are totally not similar :confused: \n. > I'd say it's worth it, although it's not critical. I'd like to have the entire backend translated into user's locale\nThis totally makes sense and this is why I think this issue should be solved :smile: \n. Plus, if it could be \"testable\" (I mean \"test that file exists\") from a Twig extension for example, then it can be solved easily: first, test locale, then transliterate it and re-test, etc., and then we can make more tests and make sure we can find at least one correct locale :)\n. What about main_content_title?\n. What about main_content_title?\n. Done :)\n. Done :)\n. It is merged, you can see it with the message \"javiereguiluz closed this in bf358f3 7 days ago\" above ;)\nBut I'm not sure it's present in the last stable release :confused: \n. association_item  for the list and remaining_association_items for the message sounds good to me, what do you think?\n. Repositories are used for 3 cases: list, edit and show view.\nI would NOT recommend using listeners for this.\nInstead I recommend a repository option for each entity configuration which can accept a service name (because by default it takes the entity name), and 3 interfaces that can be used: ListRepositoryInterface, EditRepositoryInterface, ShowRepositoryInterface, which will be checked in the AdminController like this for example:\nphp\nif ($repository instanceof EditRepositoryInterface) {\n    $object = $repository->getObjectForEditAction($id);\n} else {\n    $object = $repository->find($id);\n}\nThis way we can have total control over the repository, and the interfaces respect SOLID principles :+1: :smile: \n. Repositories are used for 3 cases: list, edit and show view.\nI would NOT recommend using listeners for this.\nInstead I recommend a repository option for each entity configuration which can accept a service name (because by default it takes the entity name), and 3 interfaces that can be used: ListRepositoryInterface, EditRepositoryInterface, ShowRepositoryInterface, which will be checked in the AdminController like this for example:\nphp\nif ($repository instanceof EditRepositoryInterface) {\n    $object = $repository->getObjectForEditAction($id);\n} else {\n    $object = $repository->find($id);\n}\nThis way we can have total control over the repository, and the interfaces respect SOLID principles :+1: :smile: \n. > Those data providers will also be the right candidate in order to integrate advanced search features & co.\n\nThis chained provider feature was also one of the first steps to bring more abstraction over the data provider, and allow easyadmin to be used with any other data source (ORM, ODM, ES, ...).\n\nThese are the arguments that convince me ;) \n. > Those data providers will also be the right candidate in order to integrate advanced search features & co.\n\nThis chained provider feature was also one of the first steps to bring more abstraction over the data provider, and allow easyadmin to be used with any other data source (ORM, ODM, ES, ...).\n\nThese are the arguments that convince me ;) \n. Strange, seems to be a Github issue, but no idea :confused: @javiereguiluz this is an important one\n. Strange, seems to be a Github issue, but no idea :confused: @javiereguiluz this is an important one\n. To add an argument to my fix, the problem comes from the priority of the different evaluations: IMO, a virtual property should not have more precedence than the property type itself.\nThe problem in this is that in the present case, the virtual property is evaluated as an image one, so the loaded template is the image one, but the template parameters are not the correct ones.\nBut I can apply both fixes if you like \ud83d\ude04 . To add an argument to my fix, the problem comes from the priority of the different evaluations: IMO, a virtual property should not have more precedence than the property type itself.\nThe problem in this is that in the present case, the virtual property is evaluated as an image one, so the loaded template is the image one, but the template parameters are not the correct ones.\nBut I can apply both fixes if you like \ud83d\ude04 . To remove any doubt, here is a simple question:\nDo you think we should render a virtual property only if it seems virtual and there is no fieldType ; or only if the type is not already resolved and the property seems virtual?\nIf you can answer this, I think you'll know which fix\u2022es should be implemented \ud83d\ude03 \n(just as an addition, my fix is more saying \"render virtual property as a fallback for all other property types\", which seems to be the safest to me, and does not introduce any BC break (it seems) ). To remove any doubt, here is a simple question:\nDo you think we should render a virtual property only if it seems virtual and there is no fieldType ; or only if the type is not already resolved and the property seems virtual?\nIf you can answer this, I think you'll know which fix\u2022es should be implemented \ud83d\ude03 \n(just as an addition, my fix is more saying \"render virtual property as a fallback for all other property types\", which seems to be the safest to me, and does not introduce any BC break (it seems) ). \ud83d\udc4d . Love it, even though there will be some tiny BC breaks for some apps \ud83d\udc4d . First, could you update your post so code blocks are better formatted? :) \nNext, you should add @var Code to the phpdoc of Question::$code property, and change the phpdoc for @return Code in the Question::getCode() method. Maybe this can help EasyAdmin guess properties?\nPlus, do you have a proper setter for the $code property in your Question entity?. As @javiereguiluz pointed out, that was my second thought: maybe the $questions property is not correctly initialized.\nMaybe you could run bin/console doctrine:generate:entities vzrtBundle:Code to check that you have adders/removers too, which are checked by the Form component. I have a property that uses the same kind of collection feature, but without by_reference:\nyml\neasy_admin:\n    entities:\n        TransportTypes:\n            # ...\n            form:\n                fields:\n                    # ...\n                    - property: transportsModifiers\n                      type: 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType'\n                      type_options:\n                          entry_type: 'EsterenMaps\\MapsBundle\\Form\\TransportModifiersType'\nWorks like a charm for me \ud83e\udd14 . Configuration & other properties are not passed as references, so this your solution is the most straightforward.\nHowever, what you can do to avoid copy/pasting is just use your \"override part\", and then just call return parent::listAction();, so you're safe when updating EasyAdmin \ud83d\ude09 . > Could you try? :) \nIt's August, and I have no holiday I could use for this, unfortunately, but I'd be glad to make code reviews \ud83d\ude38 \n\nAlso we need think about security for menus, actions... and maybe other things.\n\nReusing the same configuration key everywhere makes everything much easier to implement and document, actually \ud83d\ude09 . For templating & understanding purposes, I'd prefer to rename these \"events\" into \"template hooks\", this is much more convenient.\nIf this becomes implemented, dealing with logic events (controller & entities) and template events can be a mess if the class is named \"Event\", IMO.\nTemplate hooks are common in some other projects (Drupal, Prestashop, Wordpress) and are dealing only with views.\nI agree this could be a nice feature, it has the advantage of not bringing any BC break for the end-user, like events would do \ud83d\udc4d . If you have time for a POC, then I think it's a good opportunity to bombard this idea with lots of issues \ud83d\ude04 . @gabiudrescu I'd rather like this EasyAdminWithStateMachine to use Symfony's Workflow component instead of a third-party bundle. The big advantage is that it's built-in symfony/symfony automatically, and if using splitted components, we can just disable the feature with a compiler pass (like what the FrameworkBundle does when some packages are not available, like forms, validator or workflow).\nSomething more:\nThe state machine concept, even really interesting, doesn't really correspond to the \"event\" system, which is a bit different (we were first talking about \"hooks\" to add logic in templates, not state machines).\nIn your POC, I don't see where we could add different kinds of hooks in the templates we currently have, and how to \"hook on them\" via service.\nThe POC for this issue would have resembled to this kind of configuration to me:\n```yaml\neasy_admin:\n    entities:\n        Post:\n            class: App\\Entity\\Post\nservices:\n    App\\Admin\\Hooks\\PostListHook:\n        tags:\n            - name: easy_admin.hook\n              hook: list.top\n              entity: Post\n```. Any advice on how to reproduce this issue more precisely?\n. @javiereguiluz What do you think of this PR?. Do you think this project could stand maintenance for 1.x and 2.x at the same time? In this case, we could start working on new features, like deprecating old Symfony versions and go forward with features \ud83d\ude04 . Can you add more details in the docs & possibly add tests for this feature so it's better documented and understandable besides source code? \ud83d\ude04 . Can you add more details in the docs & possibly add tests for this feature so it's better documented and understandable besides source code? \ud83d\ude04 . Ok I had not checked the linked issue, then for me it's ok, even with my comment :smile: . Ok I had not checked the linked issue, then for me it's ok, even with my comment :smile: . Hmm, re-tested it, and it doesn't work anymore, quite strange. I need to investigate more on this :confused: . Hmm, re-tested it, and it doesn't work anymore, quite strange. I need to investigate more on this :confused: . Let's close to not pollute something that already works in most cases :confounded: . This is unnecessary IMO, it's much better to have something like this:\n```yaml\nconfig/packages/easy_admin.yaml\nimports:\n    - { resource: _easy_admin/ }\n```\nAnd then create all your files in config/packages/_easy_admin/*.yaml. @javiereguiluz Can't mock the ConfigManager because it's final.\nIn my first PoC I was mocking the ConfigManagerInterface that contained the getEntityConfig() method, it was much nicer and cleaner in many ways. Do you think it's possible to reintroduce this interface? I know I could create a real ConfigManager, but mocking it seems better to me to make better tests \ud83d\ude04 . Done! Thanks \ud83d\udc4d . Tests are failing because of deprecations, maybe an env var should be added in Travis-CI to disable the deprecation detector?. Your proposal for make:dto seems great! I'm really keen to have it!\nHowever, I don't know how we could make EasyAdmin's DTO support linked with the Maker-generated ones more than with what we already have...\nAfter all, make:dto is only here to create an abstract of a \"data-centric\" object (the DTO) based on a \"business-logic-centric\" one (the entity, at least it should be logic-centric \ud83d\ude1b). \nIn fine, a DTO is just a plain object, and whatever the factory or methods, EasyAdmin's DTO support is only focused on the fact that the DTO is simply a plain object that carries data, wherever it can come from (maker or custom creation).\nFor the entity part, the extract and fill methods must be chosen by the developer. There is rarely one single context of entity creation or update, therefore IMO there cannot be just these two methods. And sometimes, there's even only one of them (for objects that should be stored in the database and never be changed anytime, like when doing Event sourcing for instance).\nWith this in mind, this makes it harder to link the make:dto and EasyAdmin's DTO, because there shouldn't be that many links after all \ud83d\ude04 . > One approach would be to allow any callable as dto_entity_method, this would require a defined interface, though (and would most likely still not work with make:dto generated fill() methods).\nDefining an interface for a DTO goes against SOLID principles, the DTO has one responsibility: carry data. If it's used to populate an entity, that's ok, but it's not the main and only goal.\nDTOs are not only used to push data in entities, they can also be used as hydration classes for Doctrine (with result sets) or persistance actions like when doing CQRS or EventSourcing, basically when you make a difference between write and read operations so much that you need different objects (that's what DTOs can be used for, and it's great).\nThis is why I want to keep things the simplest possible so DTOs are just plain php objects that carry data, and one can create a factory to create the DTO, and one can customize the method that will update the entity (because entity creation can already be overriden by EasyAdmin's controller methods). > I'd just prefer if the method that updates the entity is not forced to be a method of the entity itself.\n\nIt should be possible to specify a custom object and method for that.\nCan be as simple as:\ndto_entity_method: App\\Dto\\MyCustomMapper::mapDtoToEntity\n\nOh yeah, I did not understood it this way, this is a nice option, but the problem is that this would make EasyAdmin completely detached from its initial ORM usage. And by the way, remember that in EasyAdmin, $em->persist() and $em->flush() are executed on the entity object itself, so this means that if the entity must be passed to the proposed static/service callback EasyAdmin's persist&flush must be disabled, this can introduce huge drawbacks if the entity object is not updated and inserted in the database because of EasyAdmin's initial behavior \ud83d\ude15 It all depends on the projects that will use this feature, and I don't want to introduce buggy-prone features...\nI'd prefer to stick on easier and simpler things, to avoid making EasyAdmin become ComplexAdmin (or SonataAdmin \ud83e\udd23 ).\nFor the rest, having hardcoded fill() and extract() method is not the best IMO, but I can definitely set them as default values for dto_entity_method and dto_factory, this would be tightly coupled with the make:dto command you create, but at least it would be simple, and users can still create their custom factories & update methods \ud83d\udc4d . > I don't see this related to persisting and flushing?\n\nThe mapper has one simple task: populate the entity with data from the DTO.\nIt doesn't even have access to an EntityManager.\n\nIt's because EasyAdmin already persists and flushes the entity, it does it for new & edit actions, always, so using a custom persister would need some \"hacks\" in EasyAdmin to make it work, so that's not native enough to me \ud83d\ude04 . Ok, I see, I might be interested in such feature, actually, I just probably misunderstood your point at first, but now it's clear \ud83d\ude04 \ud83d\udc4d \n. Build is failing because there are deprecations :). Done @xabbuh \ud83d\udc4d . Your approach is based on the creation of additionnal controllers, overriding persist & entity creation, etc.\nJust look at your controller for one single entity:\nhttps://github.com/yceruto/easyadmin-demo/blob/dto_example/src/Controller/BlogCommentController.php\nThis is too much code, especially when it can be automatically handled in EasyAdmin by letting you focus only on your own classes, and not overrides.\nThat's something I hated with FOSUserBundle (the necessity to override everything) and that's the same for EasyAdmin: the less override, the better for maintenance. Built-in features are better IMO, especially for DX.\nI tested this PR on my project and it worked like a charm, just a few config options and I could concentrate on my code and DTOs instead of overriding all controllers (especially when you have a backend with like 10 entities).. Hey folks, I tested the \"Improved DTO usage in EasyAdmin\" new feature provided with latest 2.x release, and I must admit I'm very skeptical about its DX...\nI used it for one single entity on my biggest project, and my beliefs in https://github.com/EasyCorp/EasyAdminBundle/pull/2607#issuecomment-462069807 have been realized: the controller just for this entity and DTO is so big that I'm certain its maintenance will cost a lot in the future when EasyAdmin changes.\nAs a reminder, here are the resources I had to develop:\n\nThe DTO (same for both new and edit views as fields are similar): FactionAdminDTO.php\nThe entity config in the yaml file: easy_admin_esterenmaps.yaml#L6-L21\nAnd the worst part IMO, the controller: AdminFactionController.php\n\nAs you can see in the controller, it's straightforward, but there's a lot of code \"for nothing\": all of these could be abstracted in a way for the developer to never take care of validating the DTO, etc.\nWith the update provided in my PR, I could have entirely removed the custom controller and just append 4 or 6 lines of configuration just to do the job, and it would've worked the exact same way.\nI don't want to push too much \"because it's my PR\", but mostly because the way Doctrine is used according to the Symfony doc & best practices is working but not optimised at all, it can be error-prone (since it doesn't expose any behavior), etc. (Cf: symfony/symfony-docs#8893, still unsolved, but all comments explain what I'm saying).\n@javiereguiluz, @yceruto, WDYT?. Hey folks, I tested the \"Improved DTO usage in EasyAdmin\" new feature provided with latest 2.x release, and I must admit I'm very skeptical about its DX...\nI used it for one single entity on my biggest project, and my beliefs in https://github.com/EasyCorp/EasyAdminBundle/pull/2607#issuecomment-462069807 have been realized: the controller just for this entity and DTO is so big that I'm certain its maintenance will cost a lot in the future when EasyAdmin changes.\nAs a reminder, here are the resources I had to develop:\n\nThe DTO (same for both new and edit views as fields are similar): FactionAdminDTO.php\nThe entity config in the yaml file: easy_admin_esterenmaps.yaml#L6-L21\nAnd the worst part IMO, the controller: AdminFactionController.php\n\nAs you can see in the controller, it's straightforward, but there's a lot of code \"for nothing\": all of these could be abstracted in a way for the developer to never take care of validating the DTO, etc.\nWith the update provided in my PR, I could have entirely removed the custom controller and just append 4 or 6 lines of configuration just to do the job, and it would've worked the exact same way.\nI don't want to push too much \"because it's my PR\", but mostly because the way Doctrine is used according to the Symfony doc & best practices is working but not optimised at all, it can be error-prone (since it doesn't expose any behavior), etc. (Cf: symfony/symfony-docs#8893, still unsolved, but all comments explain what I'm saying).\n@javiereguiluz, @yceruto, WDYT?. That's absolutely awesome! Great news and amazing work!\nHowever, I'm not sure any human would be able to review this: \n\ud83e\udd23 \nBut I'm going to test it in the few backends I have and make some checks in the next weeks! \ud83d\udc4d . @neeckeloo Template is using AdminLTE, which uses Bootstrap 3 \ud83d\ude15 . There is no 3.x release yet, so I'd avoid using it to avoid bigger maintenance problems :)\n. I really like the idea!\nHowever, I'm not fan at all (or \"not fan anymore\", don't remember \ud83e\udd23) of the \"magic\" method naming that resolves automatically to {name}BatchAction()\nI prefer having a method such as batchAction(string $actionName); instead, where $actionName equals the name in the configuration.\nThis allows creating custom methods that are owned by the developer while still having the EasyAdmin method documented & auto-completed.\nIMO we should remove the \"magic\" in EasyAdmin (dynamic methods, etc.), because it introduces lots of undocumented complexity. Overriding a method should be the main entry point to customizing, instead of \"magic\" ones.. I really like the idea!\nHowever, I'm not fan at all (or \"not fan anymore\", don't remember \ud83e\udd23) of the \"magic\" method naming that resolves automatically to {name}BatchAction()\nI prefer having a method such as batchAction(string $actionName); instead, where $actionName equals the name in the configuration.\nThis allows creating custom methods that are owned by the developer while still having the EasyAdmin method documented & auto-completed.\nIMO we should remove the \"magic\" in EasyAdmin (dynamic methods, etc.), because it introduces lots of undocumented complexity. Overriding a method should be the main entry point to customizing, instead of \"magic\" ones.. The tests already explain a lot about the use-case, they're cool, but I'm a bit sad that there's no config option to simplify this.\nHere, we are forced to re-implement the controller for every entity and DTO that's used.\nThe config approach at least allows not doing it, which is nice for cleaner code IMO.\nBut I'll test this branch on my project and see if it's suitable anyway \ud83d\udc4d  (and maybe #1819 could be reopened for discussion? \ud83d\ude09 ). Does adding $searchQuery = trim($searchQuery, \"'\"); seems a bad practice ?\n. According to issue #26 the best solution might seem this one:\nphp\n$wildcards = $this->getDoctrine()->getConnection()->getDatabasePlatform()->getWildcards();\nif (!count($wildcards)) {\n    $wildcards = array('%','_');\n}\n$wildcards = implode('', $wildcards);\n$searchQuery = addcslashes($searchQuery,$wildcards);\n. Just as an info, I deleted the assignment, because the $item var can be modified without the necessity to return it, as it is automatically passed by reference as it's an object.\n. Think you forgot this one @javiereguiluz :laughing: \n. Made this one to handle the exception natively, but I don't know if it's good enough, can you advise about the decision @javiereguiluz or @stof ?\n. That's exactly the reason why I use it, because throwing an exception is better than a PHP notice :D \n. Hehe, sounds a bit psycho but I love doing the same even if I don't do it all the time.\nWhat's again better is to sort the bundles in AppKernel, by FQCN length AND alphabetically.\n_Psycho inside_\n:wink: \nWhat's kinda bad is that whenever you make a composer require {package} in the project root directory, the new composer file won't align the packages names and versions.\n. IDEs code formatters can work, especially PhpStorm's one which is very good at it, and fully parametrable\n. What would you recommend then ?\nJavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration ?\n. Because you think that Symfony\\Component\\Form\\Form is not too verbose ? :wink: \nMaybe we can rename the configurator into EntityConfigurator , so the FQCN would be JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\EntityConfigurator ,  to allow one day to create a DocumentConfigurator for Doctrine ODM :) \n. Have you tested it ?\n. You should add a link to this picture in the doc with this result ;) \n. Oh gosh I didn't see that, thanks for reporting it I'll modify the commit xD \n. Fixed !\n. Should be:\nmarkdown\n* [Chapter 7 - Customizing the Search Action](Resources/doc/7-customizing-search-action.md)\n. Isn't this available for edit yet ?\n. This whole block can be replaced by this.children.style.cursor = \"pointer\";, very very faster, and not JS handled :) \n. Why don't you put the id in the same place than the property name ? Even if it's repeated in HTML, it becomes faster to get it in JS\n. Can you replace tabs with 4 spaces in this whole part? It's bothering my PSR-1&2 rules :stuck_out_tongue: \n. Same here than there\n. :+1: for using the constant in twig\n. Just gathering info : is this line related to BC ?\n. Is this triggered when the attribute is an array ?\n. Should be Resources/doc/8-customizing-view-actions.md\n. Won't this (and other) instruction throw an error if the $v['design'] is not set yet ? :confused: \n. Shouldn't we throw some E_USER_DEPRECATED errors instead? Would it be too intrusive?\n. Great :+1: \n. You mean setting up a default configuration for the button class, and allow the user to change it?\n. I think that relying on IS_AUTHENTICATED_ANONYMOUSLY is not a good practice, because you can still have a security config allowing you to be unauthenticated, even before being authenticated with an anonymous token.\n. This would need a bridge/alternative to fit to SF2.7+, because the security.context is going to disappear\n. With this:\ntwig\nitem.role and is_granted(item.role)\nBecause is_granted will not be triggered if there is nothing in item_role\n. And what about if you set an empty role ? (still a bug, but anyway it might be an issue)\n. Would you align the icon with the upper one ?\nsadistic\n:smile: \n. Why not using an array_merge through the entire $normalizedConfiguration, in order to merge all normalized actions into the default ones ? It would then keep all default actions params, and override them if they're set in the normalized config. This then forces the whole config to be populated with options, even defaulted ones. But then there is no possible error! :)\n. In fact, after debugging a little this point, you're right, the normalized configuration is already set up with correct values. Sry for that :) \n. Can you put parenthesises for more comprehension and \"safe\" display ?\nSomething like this:\n``` twig\n{% set _column_label =  metadata.label ? ( metadata.label|trans(_trans_parameters) ) : ( ('id' == metadata.property) ? 'ID' : field|humanize ) %}\n``\n. Shouldn't you flip this line with [this one](#diff-307179a00c27a031ef2cc9cadb807fe3R359) ?\n. It's just that in this line you check existence for this file:/Resources/views/easy_admin/'.$entityName.'/'.$templateName.'html.twigBut the comment above says aboutapp/Resources/views/.html.twig`\nAnd it's the same with the 3rd level priority. The checked file is in\n/Resources/views/easy_admin/'.$templateName.'html.twig, \nbut the comment says about app/Resources/views/<entityName>/<templateName>.html.twig\n. Wouldn't it be better to use a sql IN ( :exact_value ) ?\n. I admit I did not think about PostgreSQL... \nBut in fact I'm thinking about a IN statement because of a search like ?search=word%20another , then both would be retrieved with an IN , don't you think ?\n. Great :+1: \n. I think using | raw here might be unsecure.\nWhy not writing the query directly and json_encode + javascript .join it ? It can be more secure to prevent javascript attacks, don't you think ?\n. Even if it's just a test, can you use something much more different than Id to make the test? Thinking about something like # or Index. It'll be much better to see the difference, and will certainly avoid confusion with the letter case.\n. I think we might need to check entity-specific method for the createNewForm too\n. I'd rather use is_numeric for more flexibility\n. If I use this, it can be an error, even if it's a rare case (paranoid mode ON :p )\nyml\neasy_admin:\n    entities:\n        \"1\":\n            class: AppBundle\\Entity\\Post\n. If this function is ought to be called \"often\", maybe this var could be stored inside the this var, for performance reasons.\n. Nice then :+1: \n. Hmm, no, you're right. Maybe I need to create a ReflectionClass for this...\n. Are you sure about hhvm-nightly ?\nBy the way, I'm gonna submit a PR in a few minutes about this :)\n. You're right, I'm gonna submit a PR in a few minutes to change this :) \n. Ok for the --dev but in fact, I added it after install to avoid any conflict with the $deps var that would install a low version of coveralls, which we don't want.\n. Typo:\ndiff\n- # Old defintion\n+ # Old definition\n. Are you sure that the annotations are loaded in the parent controller?\n. I was thinking about a feature that might enable the service for HttpExceptions only, do you think it might be a good idea?\n. PhpStorm automatic docblock generation failed, I'll fix this :)\n. The route only stores the route name, and unless you check with the router service, there's no way of checking if it's using the AdminController.\nThe ReflectionClass walks through all classes that the class extends, and I think it's enough to check, because we recommend this behavior in the docs.\nAlso, I could check traits, but first it's php5.4+, and next, it's not a very good idea to add controller as traits IMO.\n. Here, custom actions are checked as long as they are written inside a controller that extends the AdminController :) \n. Nope, the route name can be overriden in a controller that overrides the AdminController, so it's not safe to check it.\nBut we can obviously get all routes defined in the EasyAdmin config and check them if the controller does not extends EasyAdmin's one, indeed\n. Hmm, you're pointing at something that sounds like a problem to me.\nIn fact, you're right when saying that it's safe, because indeed this route name is used everywhere in the views.\nBut, and I'm certainly going to face this problem in a few months because I'll have to create a new type of backend in an existing app with another backend, and its route name is \"admin\", so it will create conflicts with EasyAdmin...\nMaybe we should define the route name in the initialize function, or define it in the config and set it as admin by default...\n. Yep but as in EasyAdmin, this app is very old, it's an old SF2.3 app that's gonna be migrated to SF2.6 soon, and actually, it's not very stable. My mission on this app is not to update it, but to add a new layer. The actual backend is more a \"personal backend\" than a \"management backend\", that's why we need 2 different backends, and its routes are used in both actual back and front views/controllers. There are 8 bundles with about 20 or 30 entities, and I have to build a new management backend that can be completely standalone of the actual front and back, it will just use the current entities. So conflict will be everywhere, and I did not think about this admin route name since the beginning. I'm gonna laugh to death with this project :sob: .\nBy the way, I'm gonna change the behavior to add the check for the route name, and give it maximal priority.\n. Well, sounds legit to me, I'm gonna update this\n. Hmm, so, convert anything to a 500, but only in non-debug, huh?\n. Actually, this does not fit with the actual behavior. There's 2 parameters to take account in: kernel.debug and easy_admin.exception_listener.enabled which is defaulted to kernel.debug.\nIt means disable the listener in non-debug except for Http exceptions.\nI think I'm brainplosing after too many hours of work :laughing: \n. It will be a big BC break if the user is overriding the indexAction, because the admin panel would no longer become available when he updates EasyAdmin\n. Having the easy_admin.exception_listener.enabled explicitly set to true  and kernel.debug to false seems wrong to me. If you set the listener explicitly, it means you kinda really want the listener to execute...\n. Too bad, I like the idea :D \nFor now, let's stick on the admin route, we'll think of something else in the future, maybe someone can open an issue for this, to know if the community agrees to change the route name.\n. Actually, without the enabled config option, the listener would only be active depending on the kernel.debug value.\nIf you explicitly set it to true, it will no longer rely on kernel.debug and therefore become available in prod. If you set it to false, it's never used (so indeed we might not register the listener at all). If you don't set anything, it's available in dev and test, but not in prod.\nSeems like a very good behavior to me :confused: \n. As a matter of fact, having the listener in prod would be good for me in some of my apps, where only \"experienced\" people would navigate, so having something more verbose than the classic \"500 Internal error\" page would help them better to debug the app or to know what they tried to do and why it failed.\n. By the way I'll answer tomorrow, too much work today for me :stuck_out_tongue_closed_eyes: \n. In fact this was a hack to instantiate the kernel when you don't need the client, and it is compatible with any Symfony version. In fact, the bootKernel does not exist in 2.3 (and 2.4 IRRC) so I had to recreate the method to ensure the ease of using bootKernel when you just want the kernel without the client.\nI don't know if it's used in EasyAdmin, so I just left it here.\nBut if it's not used it's ok :)\n. You should check whether the static kernel is booted, and shut it down if it's the case, to avoid any \"static\" problem with a potentially already-used kernel in some lower Symfony versions\n. No _trans_parameters here?\n. No dynamic getter?\nYou could use this:\nphp\n/**\n * @param string $parameter\n *\n * @return mixed\n */\npublic function getParameter($parameter)\n{\n    return isset($this->parameters[$parameter]) ? $this->parameters[$parameter] : null;\n}\n. Why not send the entire exception directly to the view?\n. Maybe add an array_unique? I know it's just to make it clean but anyway :stuck_out_tongue: \n. I don't know what else can be done here, as you said, injecting the logger just for this exception might sound like too much heavy :confused: \n. Will it work on Php 5.3?\n. The fact that in php5.3 you cannot do things like $this->getArray()[5] for example, so I don't know if instanceof will work on the direct return of the method :/ \n. Nevermind, tested on a PHP 5.3.29 build, it works :+1: \n. Can't you just import the class in a use statement? (it's for the different code sniffers and IDEs, mostly)\n. Maybe replace with translator: { fallbacks: [ \"%locale%\" ] }, because the locale is defined in the config by default in the SE.\n. looks => looked ?\n. Should change app/resources/... for app/Resources/...\nThe check should also be done in the associated test you just created :) \n. Shouldn't you add && in_array($metadata['dataType'], array('integer', 'number')) ?\n. To check app.user in the navigation bar\n. Actually I have not tested in proper app, only using phpunit, and it's required. But I don't know if it should be in require or require-dev :confused: \n. It's more relevant than typecasting it. We could indeed typecast depending on whether it's an integer or a float, but this solution seems good to me.\nBut yeah, when I saw this, I was like \"wtf?\", but I think it makes sense.\n. Actually this list is large because we need \"few\" dependencies, but each of them require some other packages, so to avoid having last-stable installations (which may cause conflicts), I had to require them all in the composer.json. Some other are required in the tests so I put them in the require-dev part.\n. It was a proposal to require only some packages instead of the whole framework, so it would be counter-productive to require it again in the tests :confused: \n. Shouldn't the flash_messages block be located in the layout to allow overriding directly in an extending template?\n. We could also check whether the \"numeric\" field type is an integer or a float, and then typecast correctly to avoid comparing a float to an integer, I've just realized that. Is postgresql restrictive in comparing integer and floats ?\n. Precisely :)\n. Hmm... Yes, it makes sense, I did not think this way, but it makes sense. I'll update this tomorrow :) \n. When I tested the basic requirements, I had some issues in the tests about some packages having \"higher\" requirements that broke some tests. Especially for the different versions of symfony where dependencies about security that were splitted, twig-bundle requiring splitted components, etc.\nIMO we should keep requiring the whole framework.\n. I find your snippet very verbose and class, I might re-think about the next time I'll use ternary operators in Twig :confused: \n. Could you use here the same syntax as in the field_boolean template to keep consistency between them?\n. This one looks weird, I wouldn't trust phpcsfixer in this case :confused: \n. For this case (and all other similar ones) you can revert them: aligning variable definitions and array keys is not a \"bad\" practice.\n. Was so much more beautiful before, why did you revert it? :smile: \n. You forgot the old template syntax starting with EasyAdminBundle:\n. It allows you to use a form type as a service without having it to be registered as a global type in Symfony (= no tag in your service definition). \nI thought it could be useful to have services that are not bound to the Form component, because it can be useful later if we want to support \"EasyAdmin plugins\" ( = bundles that add features to EasyAdmin, mostly entities configuration)\n. Actually, specifying the class name is a constraint.\nIn this deprecation, you would then register form types with services only or by class names (i.e. with or without DIC).\nBut actually I'm totally lost in the Form component, it's a part of Symfony that is far too complex for me (brainplosion each time I have to struggle with complex forms...).\nSo, what to do then? As of Symfony 2.8, class names will be \"natively\" supported, so do you think I have to cancel this PR, or at least add a version condition for Symfony < 2.8 ?\n. Let's close the PR then ;)\n. Is $self really relevant here?\nI think it could be better to inject both $configurator = $this->configurator and $config = $this->config for readability reasons.\n. :+1: \n. You could return the $formBuilder without having to initialize it in a var. It'll be useful when overriding but not in the bundle.\n. This line was useful for auto-completion, I think it should be re-added with specifying the var name ($exception) and simplifying the FQCN.\n. Ow, yeah, you're right, sorry for that :confused: \n. You could indent this </div> if I read the code well?\n. It will avoid having a non-zero exit code and make the whole build fail\n. If you create it at runtime, why not allowing it in the EasyAdmin user configuration?\n. I also thing this parameter is useless. If your dbms is postgresql you should know it and therefore make queries that don't break postgresql features\n. Could you simplify the FQCN here?\n. Same here for the FQCN than in my previous comment\n. Enclosing :)\n. Won't that be a problem for multi-dimensional arrays?\n. As you use $('#{{ id }}') more than once, I'd suggest to put it in a var for performance reasons (less calls in the DOM)\n. Why did you inlined this?\n. Why don't move this line lower in the code and use collection.prev('.empty').remove(); ?\n. Why send the parameters? They're accessible directly from $this->request so there's no need to inject them in the method\n. Hmm, yeah you're right, didn't thought about this form of design. \n. The ? true : false part can be removed to simplify the instruction\n. I would have said \"Not a toggleable field\" but it's a point of view :p \n. This part needs to updated\n. :+1: for this, there are many FormTypes dedicated to date/time customization, we should take care of this, especially for datepickers\n. I'd also reset the values when the checkbox is checked, what do you think?\n. Hmm, yeah, right :)\n. This is an edge case if we use easyadmin_dump for another usage :confused: \n. Why not a var_dump between ob_start and ob_get_clean?\n. Could you import the different classes? (as well as Yaml in the following lines)\n. Nope, the collector should keep the var as-is, but here the problem comes from the array typehint, I don't like it :confused: \n. Create a decorator for the PropertyAccessor, it should be the best solution.\n. I don't like having the / in a full date when the month is written in letters.\nEither put 08/11/2015 or (better I think) put November 8th 2015 \n. Fixed :)\n. Fixed ! :) \n. You wrote easyadminadmin :wink: \n. Laisser vide :+1: \n. I'd also add * A Gist or a TwigFiddle link with issueing Entities and EasyAdmin configuration\n. And PSR-1 too\n. 5. Add tests that reproduce the issue's specific case for we can detect any regression in the future for this issue\n. Could add an example:\n(...) by naming your branch with a verbose name like \"entity_delete_issue\" or \"navbar_problem\" for example\n. Squashing is not needed as @javiereguiluz uses a SensioLabs internal tool that automatically squashes all commits from the PR before merging it into master.\n. There should be no \"ifs\" for conflicts: rebasing should be always mandatory because when there's no conflict, there still might be some new induced errors that are undetected until rebased\n. I don't know about @javiereguiluz but actually in other docs files the links are written directly in the markdown code, and not indexed at the end of the file, so if @javiereguiluz needs it, for readability issues, it could be good to update the code and let the links be inside the code instead of at the end :)\n. :boom: This is not aligned! :warning: \n:stuck_out_tongue_winking_eye: \nWhy did you add this dependency?\n. Rule 1: work on no more than one project at the same time :+1: :stuck_out_tongue_closed_eyes: \n. Squashing is good, you're totally right, and I also ask for squash when merging PRs for my projects, even at work where we don't take much in account the tree's look (actually, only I do care about the github flow... :stuck_out_tongue: ).\nIt's just not a problem at all for EasyAdmin (as well as Symfony and Symfony-Standard), because as I said, all Symfony/SensioLabs repositories are managed internally with a tool developed by @fabpot that \"powers up\" Github PR merging, by creating a very good merge-commit message and by squashing all commits from the PR.\n. Rebasing should still be mandatory because it's part of the best practices in the Git flow ;)\n. Toolbar options are so much \"mess\" and are so big that I would not recommend at all to use this syntax on fields.\nMoreover, we can specify multiple CKEditor configurations and link their names into the field configuration, as said in the Basic Configuration docs, so this is the BEST solution to use IMO because it really decouples EasyAdmin and IvoryCKEditor the best possible way\n. Maybe write advanced_config for this one to show one can use both?\n. Using the DoctrineBundle requires the DoctrineBridge as seen on doctrine/doctrine-bundle\n. Could you align the => for readability?\n. Why do you make it accessible again? :confused: \n. Yeah, but why do you do it? It's a test, it should have no impact at all on the rest of the code :confused: \n. You could use $method = new \\ReflectionMethod($type, 'getFormTypeFqcn');, because you don't use the ReflectionObject class for something else :)\n. You're right, I thought it was useless because the $entity would be unused in the method, but actually one might want to update the options depending on the object itself.\n. Why don't you put the link directly in the markup instead of at the bottom?\n. typo here: input, not inpput\n. Why not merge here too?\n. Why inline this comment? It's clearer if it's chopped like normal multiline comment IMO\n. I also like it but only inside methods to get auto-completion more easily. For properties, I find this more concise to have it fully \"new-lined\" :confused: \n. :+1: , especially for people using IDEs, the risk is for them to commit folders like .idea or .sublime-project for example.\n. of, really?\n. :+1: \n. I'd say yes for dedicated label, because menu label should be different than list/form/show labels sometimes.\n. I'd suggest a much better solution: \ndiff\n-        - { entity: 'Category', view: 'edit', id: 341 }\n+        - { entity: 'Category', route: 'easyadmin', route_parameters: { 'action': 'edit', 'id': 341 } }\nTotal flexibility to create custom links in the backend.\n. :+1: \n. I don't think it's a good idea to propose the AdminController's methods. Every method can be a route, and a single annotation can make the whole job, so I don't know if it's really useful... I'd sai :-1: for this point.\n. With the children attribute you are proposing, it's very easy to propose a 3-level submenus (which should be the maximum because else it's pointless).\n. Can't this be configurable instead? I mean, it's a basic JSON object, so it's easily transformable as a plain array and therefore a yml config that would be shown with {{ adminlte_config|json_encode }} or similar\n. I think I'm gonna save this link and send it back to you when someone will ask the same question then :laughing: \nTo be more serious, actually it's really something \"experienced\" AdminLTE users would have to override. Even though \"we\" are not experts of AdminLTE, I really think there are experts here that will need to update things we don't even know about, so making the option \"more\" configurable by keeping defaults in the config and allow it to be overridden seems like a flexible solution to me.\n. Is it really \"legit\" to have two different backends for the same entity? For this case I'd suggest to use simple inheritance (like Client extends User, Blacklist extends User, etc.).\nSimple inheritance is not cumbersome to use in such case.\n. I would have set the cookie name entirely lowercase\n. @javiereguiluz It's not impossible. We might introduce a simple entity_priority option that would send an error if the configurator find the same class twice and none has the above called option. It could allow us to check entities' order or something.\n. Sorry for double-posting but we could also add support for prepending @ in the type option that would automatically link the entity with the one specified in the backend, like this:\nyml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            list:\n                fields:\n                    - { property: 'category', type: '@Category' }\n        Category:\n            class: AppBundle\\Entity\\Category\nThen the fields and class could be retrieved directly from the whole config and we could even go further and create nested forms all internally without any FormType class\n. @yceruto what do you think of my proposal (comment)?\n. The else should be in the same line than the if's closing bracket\n. Why not 0 ? Was this a bug actually?\n. Maybe you could force $entity to be an array and update the phpdoc?\n. Ok, so using null was actually a bug I guess :confused: \n. There are two l here \n. Only one </code> can be used here to add thetag\n. This syntax is no more possible with this PR?\n. So why not introduce a deprecation? It could be good to clean the API from something that's not much used.\n. Hmm... Can't you handle this like a BC break would do? Actually, the only thing to do for this warning would be to detect in theentitiesarray whether there are numeric keys and throw an exception saying that this feature is no more available after1.12:confused: \n. If you plan to introduce a BC break, then this behavior should not be possible anymore\n. Maybe add alsopreUpdatedirectly here because it saves some lines of tutorial\n. Should beforminstead ofedit` IMO\n. Typo:\ndiff\n-$enabled\n+enabled\n. Could be changed for beautiful link with capitals: https://github.com/FriendsOfSymfony/FOSUserBundle \n. What do you think about adding a comment explaining the magic behind here?\n. It should be configurable too and defaulted to request locale, because language format is not the same all the time :confused: \n. That may be the default value yes, but explicitly setting it avoids problems with people that override or implement this manually, but yes I may remove the display: inline; if you think it's too much. Me neither, but still, the absolute position for an ::after selector seemed weird to me at first sight \ud83d\ude1b \nI'll remove the display instruction and push again in a minute. I'd rename $items to $menu, as it's precisely the name of the config option you retrieve.. Let's go for a DI tag and an interface for autoconfiguration!. And that's fine IMO: as this is done at compile time, the dev must be warned that the method does not exist. I'm not sure that adding a custom exception throw would add value \ud83d\ude15 . > By the way, reading the code I don't see how having the factory as a service method could actually work.\nThe DTOFactoryTest should give some hints, the DTOFactory falls back to the container when no other solution works: first is the dto's constructor, then dto static classes, then other static classes, and then container.. @xabbuh I implemented a (hopefully) better service factory system in 49d4213, WDYT?. I added an exception that show more explanations. Oh yes, you're right, I'll add a check in the NormalizerConfigPass and DTOFactory to know if a factory with a certain name exists or not.. Done!. IMO, nested rules are interesting for this strange concept of \"visual debt\", but in practice, I never liked it (same as nested translation rules in Yaml), because the saved rule that you'll search for in the browser is not the same as the one you write in your scss files.\nFor example, in the debug you see .featherlight .easyadmin-lightbox:hover, you copy this statement and search it in your files, if it's \"one-level\" scss, it's straightforward. If it's \"nested\" scss, you'll have to split the statement and find the one that corresponds. For more complex selectors, it becomes much harder.\nIt's just a matter of taste, but I like it like this... Yes, it all depends on what you do with it, but to me scss/less is more about imports, variables & dynamic composition rather than just nested code! \ud83d\ude04 . ",
    "nicolaskern": "You can count on my focus as well, I run your backend since your first commit on a small project and so far, so good :)\n. You can count on my focus as well, I run your backend since your first commit on a small project and so far, so good :)\n. If I can interfere, a \"file\" field would be awesome ;)\n. Awesome!\nUsing that sort of configuration makes file fields work:\neasy_admin:\n    entities:\n        MyEntity:\n            class: ACSEO\\MainBundle\\Entity\\MyEntity\n            edit:\n                fields: ['name', 'thumbnailFile']\n            new:\n                fields: ['name', 'thumbnailFile']\n. I exactly followed this : http://symfony.com/fr/doc/current/cookbook/doctrine/file_uploads.html\nWit thumbnailFile as file, and using the LifecycleCallbacks not to alter the controller.\n. I just had the limitation, indeed\n. In fact, *ToMany seems to work fine, using that kind of configuration :\neasy_admin:\n    entities:\n        MyEntity:\n            class: ACSEO\\MainBundle\\Entity\\MyEntity\n            edit:\n                fields: ['name', 'myotherentities']\n            new:\n                fields: ['name', 'myotherentities']\n. ManyToMany and ManyToOne worked very fine, I still have not tested the other cases though.\n. I did it pretty easily, this way :\n/**\n     * @ORM\\ManyToMany(targetEntity=\"MyEntity\", inversedBy=\"entity\")\n     **/\n    private $myEntities;\nSame thing on the other side with mappedBy\n. However, having the ability to \"allow_add\" would be awesome :P\n. Nice one !\n. Nice one !\n. Nice, I noticed the thing but never used it!\nThe value shown works fine in the dump(), which made me notice the \"virtual\" is not implemented in the try-catch in method displayEntityField().\nDo you want me to make a pull-request ?\n. WOW nice, for such a great feature I can wait, thanks ;)\n. Thanks, I'll give it a try ! \nI have not checked the code yet, can I keep my previous working configuration ? \n. Thanks, I'll give it a try ! \nI have not checked the code yet, can I keep my previous working configuration ? \n. Sure, but on the other hand it would give an easy and basic way to authenticate \n. Indeed.\nBy extension, I think the fact that fields for \"show\" action cannot be configured is, however, not connected.\n. Indeed.\nBy extension, I think the fact that fields for \"show\" action cannot be configured is, however, not connected.\n. Well, only \"edit\" and \"show\" are actually available in that context.\nSearch is not meant to be used in this context and delete only works with a DELETE HTTP method (not GET), so you need a deletion form to access it.\n. Well, only \"edit\" and \"show\" are actually available in that context.\nSearch is not meant to be used in this context and delete only works with a DELETE HTTP method (not GET), so you need a deletion form to access it.\n. Ok great :)\nI'll take a look at your PR as soon as I can and apply it to my project to give you a review ;)\n. Ok great :)\nI'll take a look at your PR as soon as I can and apply it to my project to give you a review ;)\n. ",
    "GalinaBublik": "Use EasyAdminBundle  \"^1.16\"\nadd to config.yml \nhomepage:\n        type: template\n        resource: \"::admin.html.twig\"\nget \n Fatal error: Uncaught exception 'Symfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException' with message 'Unrecognized option \"homepage\" under \"easy_admin\"' in . ",
    "anybug": "I think you're right about complex dashboards; however we're working on a very light version: a simple homepage that just displays shortcuts to Entities in a \"dashboard like\" style:\n\nConfiguration:\n```\neasy_admin:\n    dashboard:\n        title: 'Welcome to shop management'\n        blocks:\n          Bloc1:\n              label: Categories\n              size: 2\n              css_class: aqua\n              class: BackendBundle\\Entity\\Category\n              link_label: \"Category list\"\n              icon:  bars\n          Bloc2:\n              label: Products\n              size: 2\n              css_class: green\n              class: BackendBundle\\Entity\\Product\n              link_label: \"Product list\"\n              icon:  barcode\n          Bloc3:\n            label: Clients\n            size: 2\n            css_class: red\n            class: BackendBundle\\Entity\\Client\n            dql_filter: \"entity.is_active = 1'\" #allows filtering the count query\n            link_label: \"Client list\"\n            icon: users\n```\ni don't think we'll add more functionnalities as it's supposed to be a simple user-friendly home page, not a dashboard. \nPlease let me know if some of you would be interested in this feature. I think you're right about complex dashboards; however we're working on a very light version: a simple homepage that just displays shortcuts to Entities in a \"dashboard like\" style:\n\nConfiguration:\n```\neasy_admin:\n    dashboard:\n        title: 'Welcome to shop management'\n        blocks:\n          Bloc1:\n              label: Categories\n              size: 2\n              css_class: aqua\n              class: BackendBundle\\Entity\\Category\n              link_label: \"Category list\"\n              icon:  bars\n          Bloc2:\n              label: Products\n              size: 2\n              css_class: green\n              class: BackendBundle\\Entity\\Product\n              link_label: \"Product list\"\n              icon:  barcode\n          Bloc3:\n            label: Clients\n            size: 2\n            css_class: red\n            class: BackendBundle\\Entity\\Client\n            dql_filter: \"entity.is_active = 1'\" #allows filtering the count query\n            link_label: \"Client list\"\n            icon: users\n```\ni don't think we'll add more functionnalities as it's supposed to be a simple user-friendly home page, not a dashboard. \nPlease let me know if some of you would be interested in this feature. i can confirm that this works under EasyAdmin 1.17, Sf 3.3.13:\n- { property: 'types', type_options: { 'expanded':false, 'multiple': true, 'query_builder': 'YourBundle\\Repository\\YourRepository::pubStaticFunction', 'group_by': 'category'} }\ngroup_by is obviously optional but i needed it in my case.\nhowever, it was hard to find for me the right syntax for the repository function, as it's not the same as described in Symfony doc, so i paste an example here, in case it can help :\nlet's say this is about Product and Categories :\n```\nuse Doctrine\\ORM\\EntityRepository;\npublic static function getListOrderByCategory(EntityRepository $er){\n        return $er->getEntityManager()->createQueryBuilder('p')\n                ->select('p')\n                ->from('BackendBundle\\Entity\\Product', 'p')\n                ->leftJoin('p.category', 'c')\n                ->orderBy('p.name, c.name', 'ASC')\n                ;\n    }\n```\nor a simple orderBy:\npublic static function getOrderedList(EntityRepository $er){\n        return $er->createQueryBuilder('p')\n            ->orderBy('p.name', 'ASC')\n            ;\n    }. i can confirm that this works under EasyAdmin 1.17, Sf 3.3.13:\n- { property: 'types', type_options: { 'expanded':false, 'multiple': true, 'query_builder': 'YourBundle\\Repository\\YourRepository::pubStaticFunction', 'group_by': 'category'} }\ngroup_by is obviously optional but i needed it in my case.\nhowever, it was hard to find for me the right syntax for the repository function, as it's not the same as described in Symfony doc, so i paste an example here, in case it can help :\nlet's say this is about Product and Categories :\n```\nuse Doctrine\\ORM\\EntityRepository;\npublic static function getListOrderByCategory(EntityRepository $er){\n        return $er->getEntityManager()->createQueryBuilder('p')\n                ->select('p')\n                ->from('BackendBundle\\Entity\\Product', 'p')\n                ->leftJoin('p.category', 'c')\n                ->orderBy('p.name, c.name', 'ASC')\n                ;\n    }\n```\nor a simple orderBy:\npublic static function getOrderedList(EntityRepository $er){\n        return $er->createQueryBuilder('p')\n            ->orderBy('p.name', 'ASC')\n            ;\n    }. Hi Frazelli, good question! I haven't done it through EasyAdmin yet, but as far as I know, there is no simple way to pass a variable to this method (sometimes i miss SF 1.4 and its sfContext variable...). \nUnless someone had a better solution, I would recommend using formbuilder override within the AdminController as per CruzyCruz solution. hi guys,\nthanks for this helpful feature. I'm using it for a project: as far as i understand, the generated link doesn't supply information about menu and submenu (ie: url&menuIndex=2&submenuIndex=0) which breaks the UI menu. Is there a way to get this info so we can generate a more proper link ?\nthanks for your help. this is working for me : Symfony 3.3.16, EasyAdmin 1.17.9\n```\n{# src/BackendBundle/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_custom_menu %}\n my custom code\n{% endblock header_custom_menu %}\n```\nConfig:\neasy_admin:\n    design:\n        templates:\n          layout: '@Backend/easy_admin/layout.html.twig'\n. removing subitems from entity collection can be tricky, have a look here #1663\nI had the same issue, orphanRemoval=true fixed it and it should do the trick in your case as you don't need orphan subitems. hi,\nit helps a lot thank you, i've updated my project, it's now working. @tseho yeah i read previous messages, that's why i closed the ticket, thanks for your help. hi guys, same here: templates are displayed again when this patch is applied.\nThanks for this bugfix. ",
    "ikerib": "Bikain!\n. @javiereguiluz Ok! nire kontu!\n. jur jur jur arrazoi. I\u00b4ll correct it now. I thought it was another thing. Sorry.\n. It shoul be:\nIf singular: \"Emaitza 1\"\nif plural: \"99 emaitza\"\n. I should also change the file name from EasyAdminBundle.eus.xliff to EasyAdminBundle.eu.xliff ?\n. done\n. It works perfectly! thanks for your help @Pierstoval !\n. thanks! I\u00b4ll go by the way pointed by @ogizanagi  but I think it will be really usefull to have raw form type. In my case, I\u00b4m using it on list and show views as @javiereguiluz said\n. I was checking if it was possible, and now I know that no. +1 to this feature.\n. ",
    "xabbuh": "What about providing the skeleton of the CSS file as a Twig template and then compile it with a console command to the final CSS file?\n. @javiereguiluz Thanks for starting. I think I will have a deeper look at it the coming days.\n. @javiereguiluz Does it make sense to maintain a copy of the form theme from the Symfony core here?\n. @javiereguiluz Indeed, I didn't think about the fact that it was actually only included recently.\n. @javiereguiluz Is there any reason to make them protected and not private?\n. @Pierstoval Depending on which controller a developer wants to customise, this can become a really tricky task (you may actually have to copy a lot of code to change only some details). Maybe it's better to think which parts someone may want to customise and then provide more advanced extension points for these things.\n. @Pierstoval If you like to, feel free to create a pull request to handle this. I will probably not be able to update my pull request before tomorrow.\n. Thanks, I indeed missed that one.\n. To be on the safe side, I would simply add every library to the require section you make explicitly use of (though since you use the FrameworkBundle, there's no need to require any of the Symfony components explicitly).\n. Doesn't the ManagerRegistry always return the right EntityManager instance no matter how many connections you have configured?\n. > Creating a \"Config tester\" is kinda hard, I looked at Fos, Sonata Project, Symfony and Doctrine repositories to see examples of configuration tests, many of them focus on the service definition, some of them look at the configuration, but they almost all have a different method... Putting confs in yaml and xml fixtures, putting them raw in the Test class, etc.\nYou may want to take a look at the matthiasnoback/symfony-config-test package by @matthiasnoback.\n. > Creating a \"Config tester\" is kinda hard, I looked at Fos, Sonata Project, Symfony and Doctrine repositories to see examples of configuration tests, many of them focus on the service definition, some of them look at the configuration, but they almost all have a different method... Putting confs in yaml and xml fixtures, putting them raw in the Test class, etc.\nYou may want to take a look at the matthiasnoback/symfony-config-test package by @matthiasnoback.\n. What did this look like before?\n. What do you think about adding a possibility to configure the format globally instead of on a field-to-field basis?\n. Well, what I see here is that if you start changing the format for one field, you'll likely want to change it for all fields.\n. :+1:\n. @sr972 Thanks, I think it's good to merge now.\n. @javiereguiluz You should probably enable the \"Build only if .travis.yml is present\" option on Travis to not let other pull requests fail that don't include the changes from this PR.\n. @javiereguiluz You should probably enable the \"Build only if .travis.yml is present\" option on Travis to not let other pull requests fail that don't include the changes from this PR.\n. You're welcome, Javier. :)\n. You're welcome, Javier. :)\n. @javiereguiluz Sorry, I forgot this change in #174.\n. @javiereguiluz Sorry, I forgot this change in #174.\n. By the way, do you plan to run builds against different Symfony versions?\n. By the way, do you plan to run builds against different Symfony versions?\n. Sure, would you prefer a different PR or should I update here?\n. Sure, would you prefer a different PR or should I update here?\n. I pushed another commit. Let's wait for the Travis build to see if I made any mistakes.\n. I pushed another commit. Let's wait for the Travis build to see if I made any mistakes.\n. @Pierstoval That approach ends up with a lot of more builds because each Symfony version would be used with each PHP version which would mean 28 builds (instead of 10).\n. @Pierstoval That approach ends up with a lot of more builds because each Symfony version would be used with each PHP version which would mean 28 builds (instead of 10).\n. Honestly, I don't think it's worth it. You have to find a good balance between what you can do and what is good practice. The more jobs you generate the longer the build takes (in this case imho without adding much value).\n. @aruku Which Symfony version do you use?\n. Seems like we have to fix some deps. I'll take a look at them.\n. @javiereguiluz No problem. I just noticed this when the Travis build failed. I'll create another pull request with fixed dependency versions.\n. @javiereguiluz I think the issue is not directly related to one of the dependencies, but is caused by the way you expect the YAML files to be parsed. For example, take a look at this fixture file:\n``` yaml\nTEST\ncombining configuration formats #2 and #3 using entities with the same name\n(the first defined entity wins)\nCONFIGURATION\neasy_admin:\n    entities:\n        TestEntity: AppBundle\\Entity\\TestEntity\n        TestEntity:\n            class: AppBundle\\AnotherNamespace\\Entity\\TestEntity\n            label: TestEntity\n```\nYour test assume that the first entity will always win. For some reason, this behaviour changed somewhere in the Yaml component.\nAre you sure that the behaviour you are expecting is supported by the Yaml specifications?\n. We already had an issue on Symfony related to this (see symfony/symfony#11538).\n. I found the pull request that fixed this behaviour in the Yaml component: symfony/symfony#10902\nFor some reason, that was only merged into Symfony 2.5. This means that no Symfony 2.3 version will be able to use this feature.\n. The issue us that that Symfony 2.3 users won't be able to use this feature.\n. @javiereguiluz Wouldn't it be possible to emit a warning if an unknown config option is used?\n. @javiereguiluz Wouldn't it be possible to emit a warning if an unknown config option is used?\n. @ogizanagi @Pierstoval I apparently missed some part of the conversation or didn't understand it properly, so please apologise if I ask something that has already been explained before.\n\nHow can I make Travis run the functional tests of that application whenever a new commit is sent to this repository?\n\nDo you mean an application that is located in the Tests directory of this bundle? The demo application in symfony/symfony-demo? Or something else?\n. @javiereguiluz Yeah, I didn't expect this to fail so massively. ;) But imho tests should succeed with the lowest allowed dependency versions. Otherwise, the version constraints in composer.json can not be relied on. I'll take a look into the failing tests and keep you informed.\n. @javiereguiluz Yeah, I didn't expect this to fail so massively. ;) But imho tests should succeed with the lowest allowed dependency versions. Otherwise, the version constraints in composer.json can not be relied on. I'll take a look into the failing tests and keep you informed.\n. @javiereguiluz There is only one failing test left. Do you have an idea what could be the cause of it?\n. @javiereguiluz There is only one failing test left. Do you have an idea what could be the cause of it?\n. @javiereguiluz Indeed, thanks for investigating.\n. @javiereguiluz Thank you for merging and squashing my commits.\n. Would you mind to explain the issue for people not speaking Spanish? :)\n. Would you mind to explain the issue for people not speaking Spanish? :)\n. Thanks @Pierstoval :)\n. Thanks @Pierstoval :)\n. Imho there needs to be a way to keep BC (eg. automatically map the class option to css_class). You can then remove support for the old option in 2.0.0. What do you think?\n. Imho there needs to be a way to keep BC (eg. automatically map the class option to css_class). You can then remove support for the old option in 2.0.0. What do you think?\n. @javiereguiluz Thanks for explaining your reasoning here.\n. > I wonder why they still rely on security.context, I thought this service was ought to disappear? :confused: \nIf available, the security.token_storage service will be injected via the setTokenStorage() method. The security.context service will only be requested as a fallback to provide BC.\n. @javiereguiluz I would be happier if I noticed this earlier.\n. :+1: \n. @richwandell This is still more of an ugly workaround. :) You should instead consider creating a service and tagging it as a subscriber: http://symfony.com/doc/current/cookbook/service_container/event_listener.html\n. :+1: \n. For greater flexibility, I would then suggest to make it possible to add a tag to your form type services that would be registered as a form type for a certain entity class. The bundle could maintain a registry of all the form type services registered in this way and look it up first before creating the form type on the fly.\nA form type service configuration could then look like this:\nyaml\nservices:\n    app.form.type.person:\n        class: MyApp\\ContactBundle\\Form\\Type\\PersonType\n        tags:\n            - name: easy_admin.form_type\n              entity_class: MyApp\\ContactBundle\\Entity\\Person\n. This would be a BC break for people having overridden the createEntityForm() method, right (it's not called anymore)?\n. Maybe I misunderstood your idea, but don't you actually mean toggle?\n. @mrbinr I think you can close the issue then. :)\n. @Pierstoval When talking about more confidence when testing the bundle, I would simply require different versions of symfony/symfony on Travis instead of requiring the complete package for all end-users.\n. @javiereguiluz This has been fixed by #437, right?\n. looks like this change does not fix everything\n. @javiereguiluz You mean skipping some PHP versions for pull requests?\n. @javiereguiluz see #475\n. Cool :)\n. @javiereguiluz Which test errors do you mean in Symfony?\n. One issue is, that the FrameworkBundle in Symfony 2.3 has a bug in handling translation files for the Security component if that component is newer than 2.3 (see symfony/symfony#16133).\n. And the other issue is that you could install the Security component from Symfony 2.3 together with, for example, the Securit core package from a more recent Symfony version (see symfony/symfony#16134).\n. Well, what is the actual issue this pull request is supposed to solve? Installing only the needed dependencies for tests just works, doesn't it?\n. Well, what is the actual issue this pull request is supposed to solve? Installing only the needed dependencies for tests just works, doesn't it?\n. :+1: \n. :+1: \n. Maybe it is a good idea for EasyAdminBundle to trigger an event at the beginning of the indexAction() which exposes just the entity name and the action to ease customising the behaviour here.\n. Hm, probably it's easier to set minimum-stability to dev for now.\n. Hm, probably it's easier to set minimum-stability to dev for now.\n. @javiereguiluz Fair enough, looks like a more practical approach to me. :)\n. @javiereguiluz Fair enough, looks like a more practical approach to me. :)\n. I am pretty sure there will still be a lot of people using Symfony 2.3 after May as it will still receive security fixes.\n.  When talking about the asset configuration change in Symfony 2.7, could you please take a look at symfony/symfony#16511 and check if that change would help?\n. @ogizanagi Sorry, I didn't read the whole conversation carefully enough. The change in that PR apparently is not related at all.\n. @janjango There is no phone_number form type (I guess you are confusing the form type and the DBAL type both provided by that bundle). You should use the FQCN instead which is Misd\\PhoneNumberBundle\\Form\\Type\\PhoneNumberType.\n. @janjango There is no phone_number form type (I guess you are confusing the form type and the DBAL type both provided by that bundle). You should use the FQCN instead which is Misd\\PhoneNumberBundle\\Form\\Type\\PhoneNumberType.\n. @javiereguiluz I think that's simply a matter of taste. Personally I would not use it yet to keep the build matrix smaller (and thus gaining faster builds).\n. closing in favour of #623\n. I do not think that block_prefixes will be available in Symfony versions before 2.8.\n. Ah, you are right. So it's only just configurable right now.\n. :+1: \n. :+1: \n. messages.<lang>.xliff should be right as there is no translation domain given here and afaik EasyAdminBundle doesn't change the translation domain.\n. messages.<lang>.xliff should be right as there is no translation domain given here and afaik EasyAdminBundle doesn't change the translation domain.\n. :-1: On this change (users with matching PHP versions should be able to use newer versions of the Doctrine packages). For everyone else, Composer takes care of installing the proper packages depending on the system's PHP version (the issue affecting the Symfony Standard Edition does not apply here as EasyAdminBundle doesn't have a composer.lock file).\n. :-1: On this change (users with matching PHP versions should be able to use newer versions of the Doctrine packages). For everyone else, Composer takes care of installing the proper packages depending on the system's PHP version (the issue affecting the Symfony Standard Edition does not apply here as EasyAdminBundle doesn't have a composer.lock file).\n. There is no issue with your PHP 5.3 support as long as your code does not use any features that require a higher PHP version and as long as the lowest required dependency versions are compatible with PHP 5.3.\n. There is no issue with your PHP 5.3 support as long as your code does not use any features that require a higher PHP version and as long as the lowest required dependency versions are compatible with PHP 5.3.\n. No, for example, ~2.4.0 resolves to >=2.4.0,<2.5.0 whereas the previous ^2.3.0 translates to >=2.3.0,<3.0.0 (the same applies to ~2.5.0 in a similar manner).\n. @COil Can you explain which issues you have with the version constraints as they are right now?\n. @OskarStark What do you think?\n. @rasanga I would check your services. It looks like one of them does too much in the constructor forcing Doctrine to try to detect the current database server version (even if that wasn't necessary at this stage).\n. Not sure if that really makes sense. Are you able to make this comparison with Opcache enabled?\n. Not sure if that really makes sense. Are you able to make this comparison with Opcache enabled?\n. Can you post a full stack trace of this error?\n. Can you run the cache:clear command with -vvv again and show the stacktrace you get then?\n. Do you have custom services that get the kernel injected? Or do you use third party bundles where this is the case?\n. @javiereguiluz Treating the container like it was already built during compilation looks quite fragile to me. Was there a particular reason to retrieve the entity metadata this way?\n. @javiereguiluz What about moving this process from the container compilation phase to a cache warmer?\n. @javiereguiluz I did not look into it in much depth, but on a quick glance I think that this is something that shouldn't be in a compiler pass, but at least somewhere else. Feel free to ping me some time next week if I didn't come back to this before. \n. Are you sure that the Mea\\MountMeetBundle\\Entity\\MeetSailRoute class does exist and is a mapped entity?\n. Are you sure that the Mea\\MountMeetBundle\\Entity\\MeetSailRoute class does exist and is a mapped entity?\n. @javiereguiluz I think the MetadataConfigPass should check if the configured class names are actually managed entities and throw meaningful exceptions otherwise.\n. @javiereguiluz I think the MetadataConfigPass should check if the configured class names are actually managed entities and throw meaningful exceptions otherwise.\n. @javiereguiluz This is related to the fact that the MetadataConfigPass tries to retrieve a service from the container while it is being compiled.\n. @javiereguiluz This is related to the fact that the MetadataConfigPass tries to retrieve a service from the container while it is being compiled.\n. @javierrodriguezcuevas The missing arguments are added in a compiler pass in that bundle which simply wasn't called when EasyAdminBundle tries to retrieve the service from the container.\n. Yes, that should work as a workaround.\n. Probably your entity class does not exist or is not mapped by Doctrine (see the latest changes that have been done in the bundle to improve error messages).\n. @javiereguiluz What is the exception message you got?\n. @javiereguiluz You are right. But I think in this case the message given to the user can be improved. There are two cases here: The class itself might not exist (which you now cover with this check) or the class might exist but is not mapped by Doctrine (this is not covered yet).\n. see #1067\n. @javiereguiluz Thanks for adding the test. I completely forgot the case when a class does not exist.\n. As far as I can see your problem should be solvable by doing most of the stuff you are currently doing when the container is built in a cache warmer instead (the executed code paths actually are all related to caching data that are expensive to collect, aren't they?).\n. Why do you need to register the processed config as a container parameter (sorry, I didn't dive too deep into the code for some time, and I will probably need to read a bit to give a more elaborate answer)?\n. Well, this could be refactored to introduce something like a configuration provider which is registered as a service and will return the cached configuration (or build it on the fly if needed).\n. :+1:\n. Can you show the complete stack trace of this error please?\n. @javiereguiluz The doctrine service is only configured if the doctrine.dbal node is configured.\n. @ogizanagi's approach looks like a good solution to me (you do not define an API related controllers in EasyAdminBundle if I am not mistaken so there's no need to dynamically determine the format). For FOSRestBundle 2.0, you may also point the reader to the documentation of the zones configuration (at the bottom of the page).\n. :+1: \n. @HamidDarash Can you please how your routing.yml file looks like.\n. @HamidDarash Can you please how your routing.yml file looks like.\n. @luigifab38 Please, NEVER EVER use that solution in a real application! You are binding your entities to some external state which totally breaks encapsulation. This only works by chance (as long as the kernel instantiated in the front controller and assigned to the variable $kernel, this variable is never replaced with anything else, some service exists here and so on) and relies on too many assumptions made about the environment it is executed in.. @luigifab38 Please, NEVER EVER use that solution in a real application! You are binding your entities to some external state which totally breaks encapsulation. This only works by chance (as long as the kernel instantiated in the front controller and assigned to the variable $kernel, this variable is never replaced with anything else, some service exists here and so on) and relies on too many assumptions made about the environment it is executed in.. The issue is that the request is no DELETE request. Rather than changing the way the form is submitted you should find out why the request is a POST request and not a DELETE request.\n. The issue is that the request is no DELETE request. Rather than changing the way the form is submitted you should find out why the request is a POST request and not a DELETE request.\n. @hipio What does $form->isSubmitted() return?\n. @hipio Sorry, confused it with https://github.com/javiereguiluz/EasyAdminBundle/issues/1306#issuecomment-251114742.\nIf you could provide a reproducable scenario, I could take a look into it tonight. Best would be to fork the Symfony Standard Edition and make the changes needed to reproduce it.\n. @araines It would be helpful if you could provide a reproducable scenario (for example, by cloning the Symfony Demo application and making the necessary changes). Without further information it's hard to figure out what is going wrong.\n. These deprecations should be fixed with the next Symfony patches releases.\n. Is the session properly stored between requests in your dev environment?\n. Can you show the code of your custom admin controller?. You can create your own controller class that extends from the one from EasyAdminBundle and place your custom method there. You then only have to update your routing configuration to load your custom class instead of the built-in controller.. You need to place it in the app/Resources/EasyAdminBundle/views/css/ directory.. Did you clear the cache?. Where exactly did you place which files?. Maybe related to symfony/swiftmailer-bundle#184?. adding a value for Doctrine's server_version option probably solves the issue. Can you show the mapping configuration of the entities that make use of your custom type? And can you show the code of the AF\\Bundle\\ProjectBundle\\DBAL\\Types\\ProjectStatusType class?. @san-developer Can you create a small example project that allows to reproduce your issue?. @san-developer Can you create a small example project that allows to reproduce your issue?. IIRC one of the things on Javier's list is too refactor how entities are configured (at least the internal code for that). Supporting annotations (and maybe even other config formats) could then be taken into account when designing the new internal API.. I'll fix this on my fork first before blocking the upstream build queue.. @vicinflames Are you sure that you are problem is related to EasyAdminBundle and that you do not use Symfony Flex (see https://github.com/symfony/flex/blob/master/src/Flex.php)? And Symfony Flex requires PHP 7 while the error you see could be related to running the process with PHP 5.. @duraki In your case, adding a getter and setter method for the property should solve the issue.. Can one of you create an example application that allows to reproduce the issue?. Are you sure this is related to EasyAdminBundle and not related to sensiolabs/SensioFrameworkExtraBundle#532?. Are you sure this is related to EasyAdminBundle and not related to sensiolabs/SensioFrameworkExtraBundle#532?. Can you try if sensiolabs/SensioFrameworkExtraBundle#536 helps?. Can you try if sensiolabs/SensioFrameworkExtraBundle#536 helps?. Do you use PHP's built-in web server or a dedicated service like Nginx/Apache?. Can you show your virtual host configuration?. If you define the APP_ENV environment variable, Symfony will not use the Dotenv component to parse an existing .env file (see https://github.com/symfony/recipes/blob/master/symfony/framework-bundle/3.3/public/index.php#L11-L16). Thus, you either need to remove the definition from the virtual host config so that your .env file is evaluated or explicitly define all needed env vars in your virtual host config too.. You didn't configure the URL rewriting in your web server. On your local development machine, you can install symfony/apache-pack which will create a .htaccess file containing this config.. @TomasVotruba The master branch already requires PHP >=7.1.3. :). @TomasVotruba The master branch already requires PHP >=7.1.3. :). I don't think that's possible with the way how Flex works at the moment.. FYI, this is the comparison @javiereguiluz is talking about:\n\n. I am on it.. @hason Can you confirm that #2262 fixes the issue for you?. Did any of you test the fix from #2262 and can confirm that it fixes the issue you experience? Having some confirmation would probably speed up the release process a lot.. I did a new Blackfire profile with the new changes and things did not change significantly compared to what I posted in #2249.. @sebastianblum Thank you very much for testing the patch and leaving feedback here! \ud83d\udc4d . Did you override the menu template? In this case, you will need to sync it with the latest changes from the core template.. @Wait4Code I had the same issue after updating. \ud83d\ude04 . Did that work with release 1.17.12? If so, does this work again if you try the patch proposed in #2262?. Can you create a small example application that worked with 1.17.12, but doesn't now even with the patch applied?. #2249 is for sure the PR that broke your usage.. I am curious though why having the Resources/views part did work before 1.17.13.. You mean \\Twig_Loader_Filesystem::normalizeName()?  But that should work with #2262 as we do the same there too, shouldn't it?. This looks like it is the same as #2261 which will be fixed by #2262.. @alterphp see #2288 for a backwards compatible way to fix this. There are two different branches. 1.x is for the 1.* releases (the most recent stable release being   1.17.13 is based off that branch) while master is for the development of the upcoming 2.0 release.. Travis builds don't fail for the 1.x branch. We would need to investigate why that's the case. Maybe tests are not run with Symfony 4.1 there.. Travis builds don't fail for the 1.x branch. We would need to investigate why that's the case. Maybe tests are not run with Symfony 4.1 there.. > according to the comment of @hason it is a BC break which even would be a major cahnge which would have to result in 2.0.0 version (i assume that easyadmin is using semver, is it?).\nIf that was an intentional BC break, I would agree with you. However, this BC break was never intended, but it was just a regression introduced in #2249. I am sorry for that, but mistakes happen and with #2262 being merged, this regression will be reverted.\n\nalso it would be interesting who are the main decision-maker of this project now? the withdraw of your person from this awesome project, maybe left a vacuum, which maybe needs to be filled.\n\nCan you point to where Javier declared to withdraw from this project? I haven't heard of that. It looks like some misunderstanding to me.. > according to the comment of @hason it is a BC break which even would be a major cahnge which would have to result in 2.0.0 version (i assume that easyadmin is using semver, is it?).\nIf that was an intentional BC break, I would agree with you. However, this BC break was never intended, but it was just a regression introduced in #2249. I am sorry for that, but mistakes happen and with #2262 being merged, this regression will be reverted.\n\nalso it would be interesting who are the main decision-maker of this project now? the withdraw of your person from this awesome project, maybe left a vacuum, which maybe needs to be filled.\n\nCan you point to where Javier declared to withdraw from this project? I haven't heard of that. It looks like some misunderstanding to me.. Can you show the output of bin/console debug:container AdminBundle\\\\Event\\\\EasyAdminSubscriber?. Can you show the output of bin/console debug:container AdminBundle\\\\Event\\\\EasyAdminSubscriber?. Just noticed the different in your config and your class definition. Is the class name AdminBundle\\Event\\EasyAdminSubscriber or AdminBundle\\Event\\EventSubscriber?. Just noticed the different in your config and your class definition. Is the class name AdminBundle\\Event\\EasyAdminSubscriber or AdminBundle\\Event\\EventSubscriber?. Is your services.yaml file actually loaded? Does it make a difference if you move the config for your event subscriber service to the end of that file?. Is your services.yaml file actually loaded? Does it make a difference if you move the config for your event subscriber service to the end of that file?. Please show your actual config file then. Something is indeed going wrong here, but I don't know if that's related to config files not being shown correctly or if there really is a bug.. Please show your actual config file then. Something is indeed going wrong here, but I don't know if that's related to config files not being shown correctly or if there really is a bug.. I can see that you have lots of custom bundle services here. Which one is responsible for loading your event subscriber service? And what's this file's exact content?. I can see that you have lots of custom bundle services here. Which one is responsible for loading your event subscriber service? And what's this file's exact content?. I mean the config file where you configure your service.. I mean the config file where you configure your service.. There, your custom service is still at the beginning of the file. Does it make a difference when you move it to the bottom like this?\n```yaml\nservices:\n        autoconfigure: true\n        public: false\nAdminBundle\\:\n    resource: 'AdminBundle/*'\n    exclude: 'AdminBundle/{Entity,Repository,Tests,Event}'\n\nAdminBundle\\Controller\\:\n    resource: 'AdminBundle/Controller'\n    public: true\n    tags: ['controller.service_arguments']\n\nAdminBundle\\Event\\EasyAdminSubscriber:\n    tags:\n        - { name: kernel.event_listener, event: kernel.exception }\n\n```\nAlso: Are you sure that this file is loaded?. There, your custom service is still at the beginning of the file. Does it make a difference when you move it to the bottom like this?\n```yaml\nservices:\n        autoconfigure: true\n        public: false\nAdminBundle\\:\n    resource: 'AdminBundle/*'\n    exclude: 'AdminBundle/{Entity,Repository,Tests,Event}'\n\nAdminBundle\\Controller\\:\n    resource: 'AdminBundle/Controller'\n    public: true\n    tags: ['controller.service_arguments']\n\nAdminBundle\\Event\\EasyAdminSubscriber:\n    tags:\n        - { name: kernel.event_listener, event: kernel.exception }\n\n```\nAlso: Are you sure that this file is loaded?. Look at the definition of the AdminBundle\\Event\\EasyAdminSubscriber service. In your example, it is at the beginning of the file and I moved it to the end.\nCan you please explain from which of the above files this was taken from (i.e. where is it stored in your project)?. Look at the definition of the AdminBundle\\Event\\EasyAdminSubscriber service. In your example, it is at the beginning of the file and I moved it to the end.\nCan you please explain from which of the above files this was taken from (i.e. where is it stored in your project)?. Can you please explain from which of the above files this was taken from (i.e. where is it stored in your project)?. Can you please explain from which of the above files this was taken from (i.e. where is it stored in your project)?. I am sorry, but I think this does not really work out. You seem to have a lot of config files that maybe also interfere with each other. I think the only way to help you is if you uploaded your project somewhere on GitHub so that we could have a look at the actual structure and the contents of the files involved here.. I am sorry, but I think this does not really work out. You seem to have a lot of config files that maybe also interfere with each other. I think the only way to help you is if you uploaded your project somewhere on GitHub so that we could have a look at the actual structure and the contents of the files involved here.. see symfony/symfony#23044 for the PR that introduced this feature in Symfony. see symfony/symfony#23044 for the PR that introduced this feature in Symfony. @javiereguiluz I try to finish this until the end of this week.. Can you confirm that this is the same as #2261 which will be fixed by #2262?. Can you confirm that this is the same as #2261 which will be fixed by #2262?. I just merged #2262 and let @javiereguiluz decide when to ship a new release.. I just merged #2262 and let @javiereguiluz decide when to ship a new release.. @monlouisj You mean that even the latest release does not fix it for you? If so, would you mind to open a new issue with some instructions on how to reproduce?. @aequasi Does it work for you with 1.17.13 too?. @aequasi Does it work for you with 1.17.13 too?. Good catch, thanks @yceruto.. Good catch, thanks @yceruto.. Can you check if the issue disappears with the latest commit in the 1.x branch? This sounds like it is the same as #2261 which was fixed by #2262.. Can you check if the issue disappears with the latest commit in the 1.x branch? This sounds like it is the same as #2261 which was fixed by #2262.. Thanks for reporting @Rickobotics. This is fixed now by #2331.. What exactly is your problem? Do you get any error message? What did you expect and what happened instead?. The Date constraint is meant to be used to check if a string can be interpreted as a date. Using it with a DateTime object is not very useful as we already have a date at hand. That's by the way the reason why using the Date constraint with a DateTime object (or DateTimeImmutable) will be deprecated as of Symfony 4.2.\nIf you want to ensure that the date is in a particular range, you will have to use the comparison constraints.. > So the date validation is defined \"implicitly\" by the fact that (a) the property is private and (b) its setter has a \\DateTimeInterface type hint?\nyes, that's it. What does your app/Resources/views/easy_admin/dashboard.html.twig template look like?. This is everything that you have in that file?. @Pierstoval The PR needs a rebase now. :). What do you think about moving the initialisation of the property to loadBackendConfig() too? That method already deals with caching the config and then the whole lazy loading would be in one place.\nAnd what about doing this change for 1.x too?. :+1:. The documentation of the list filtering feature states:\n\nThe Doctrine DQL expression defined in the dql_filter option must always use entity as the name of the entity, regardless of your actual entity name.\n\nSo I think your dql_filter value should look like this:\nyaml\nQuizzChallengeTextToText:\n    # ...\n    list:\n        dql_filter: \"entity.codeType = 'TextToText'\"\n        # .... I am not sure I completely understand the issue. Would you be able to create a small example application that allows to reproduce it?. It seemed that noone was able to provide a small example application that allowed to reproduce the issue which makes it impossible to work on a fix.. IMO this should not be the default behaviour as it opens the door for cross-site scripting vulnerabilities in case someone reuses user input to populate the flash messages. If you are completely sure that this is not the case in your own application, you can override this template to change the default behaviour.. Even if we are not so much concerned about security vulnerabilities (which is still debatable IMO as we do not know where the data being edited is coming from, it might be user input), having the layout broken because of it (and then maybe not being able to modify it) is neither a good user experience to me.. @yceruto using current() on an iterable may not play well with static code analyser tools, but apart from that your suggestion looks like the way to go. Does it make a difference if you omit the leading backslash (i.e. use App\\Form\\RouteType instead of \\App\\Form\\RouteType)?. I think we should still deprecate the ability to configure the form type with a leading backslash. There is no real value in it, but much potential for confusion.. IMO the solution is to implement the ContainerAwareInterface in AdminController as @alterphp suggested.. Can you create a small example application that allows to reproduce it?. @guice12 It would be good if you could create such an example as it doesn't seem to work for you and Javier is not able to reproduce that. :). Are we sure this is the way to go from a DX point of view? I'd expect the fact that we don't get the full container anymore will break lots of apps out there. We currently miss a smooth upgrade path (e.g. a proper deprecation in 1.x). This feels like a bad experience for too many users to me.\nWould it be a viable solution to introduce a new controller class in 1.x instead that extends AbstractController and deprecate the old one instead?. I thought about the trait too, but that would mean that we had to drop PHP 5.3 compatibility.. ~I thought about the trait too, but that would mean that we had to drop PHP 5.3 compatibility.~ (sorry, GitHub hick-up it seems). I think duplicating the logic in the 1.x branch would be okay too. If we decide to stop integrating new large features there, the cost to keep both classes in sync is quite low.. Thanks for reporting. This has been fixed in #2535.. Twig 1.37.1 and 2.6.2 have been released and fix this bug. So you can also just update Twig. :). Twig 1.37.1 and 2.6.2 have been released and fix this bug. So you can also just update Twig. :). Indeed, thanks for paying attention.\n. That's true with the current code. But findAll() is protected and might be called by classes extending the AdminController and thus bypassing the check in initialize().\n. Indeed, you're right.\n. I think that's not a good idea because we then relied on implementation specific behaviour.\n. I would change the variable names as well so that they don't confuse any looking at the code only.\n. doctrine/common and doctrine/doctrine-bundle is needed too.\nBy the way, I would not align the version numbers. It makes the diff mainly useless when only whitespaces change.\n. @mmoreram Never mind, seems that I have to sync my local fork. ;)\n. I updated the code.\n. > @xabbuh about the alignment, I know that 99% of developers don't agree with me, but I love to align (and sort alphabetically) the dependencies of the projects.\nI forgot about your preferences when commenting. :)\n. This should be reverted I guess (it extends the diff without adding any value).\n. What do you think about refering to the PHP documentation for a description of these formats?\n. Ah, you do this below when you describe how to customize the format. I guess it's probably a good idea to link here (as well).\n. You can now add an array type hint for the $entityConfiguration argument (and you need to change the docblock too, should be string[] there).\n. @sr972 I wouldn't use \"Sie\" here. Otherwise, it should be used for the translation of the entity.create key to IMHO.\nEdit: I meant \"Sie\" not \"Side\".\n. Yes, sorry, damned auto-completion. I think we should consistently use one of either the formal or the informal way, but not mix both.\n. @sr972 What do you think about %entity% erstellen\" instead?\n. \"The EasyAdmin installation [...]\" or \"The installation [...]\"?\n. This bundle includes [...]\n. [...] backend interface. Execute [...](or \"Execute\" would need to be lowercased)\n. I don't think the comma in front of because is needed.\n. I think @javiereguiluz can wait with merging until you're back at your desk. :)\n. You never use this environment variable.\n. This method can be private.\n. You can be more explicit here and usestring[]instead.\n. each\n. [...] the rest of the actions [...]\n. [...] to set the available actions [...]\n. Is this really needed?\n. no need for the last \"the\" here\n. Would it make sense to also add tests for~(probably in a separate file)?\n. TheSYMFONY_VERSIONenvironment is not always present while the constants from theKernelclass can always be checked as the EasyAdminBundle depends on thesymfony/symfonypackage.\n. Thefallbacksoption doesn't exist in Symfony 2.3.\n. We need Twig 1.12 or higher to be able to use theTwig_SimpleFunctionclass.\n. It does not really matter how the container parameter would look like when it were dumped in YAML format. We only use it as an array internally. So, we only care about its structure.\n. Theshwrapper is not needed. And Travis doesn't supporthhvm-nightlyon the builds anymore.\n. Not sure if that is really necessary here. Does one actually want to depend on this when working on the bundle locally? Wouldn't it be better to simply require the package during the Travis builds?\n. I would add the--devoption.\n. And if you also add--no-update, you will be able to move this before the installation step.\n. This list looks too large. Are you sure that all of them a really required?\n. Why not keep the old way? Ensuring that the bundle works with the required packages is done on build where$SYMFONY_VERSIONis not set.\n. Imho it's wrong to add packages that are required by packages you require. This totally contradicts why semver was introduced. You should simply load the packages you need and they should properly manage what they need.\n. Do you remember an example of a conflict you had?\n. You don't have to comparevalue(value ? 'true' : 'false'is sufficient enough).\n. Is EasyAdminBundle not compatible with Twig 2.x yet?\n. I had a quick look and did not spot anything blocking it. Let's see: #467\n. makes sense, done\n. The check for$TRAVIS_PHP_VERSIONis not necessary as the$SYMFONY_VERSIONenvironment variable is only set on PHP 5.6 builds.\n. Can't you simply cache$HOME/.php_cs.cache?\n. This change isn't necessary.\n. What is the reason for|| truehere?\n. Yeah, but how likely is it for the first part to fail? And wouldn't you be interested in noticing a failure because it probably indicates an issue with your CI environment?\n. Services tagged withform.typecannot be private (they are lazy-loaded when needed).\n. What if some extended theAdminControllerand had a check for the old option name? Could that be a valid use case?\n. It falls back [...]\n. You need to update the Symfony version here too.\n. You can remove this job entirely (it's already covered by other tests).\n. You don't need to set the value forSYMFONY_DEPRECATIONS_HELPERvariable this way here, do you?\n. Probably the configuration would be clearer when there was a dedicated configuration to trigger the generation of code coverage reports.\n. (but I can propose a change after this was merged)\n. The\"$SYMFONY_VERSION\" != \"2.8.*\"part is not necessary, but otherwise this looks good.\n. You should addpsr/logto therequire-devsection incomposer.jsonthen.\n. The version of the HttpKernel component might not be the same as the version of the Form component.\n. No need to use-ahere if you already added all files before.\n. By the way, I am not convinced that you should really teach that (bad) practice.\n. [...] to the GitHub [...]\n. @reypm Not everyone uses the same IDE. On your system can globally ignore files your IDE creates.\n. Can beQuery|QueryBuilderas this is what theDoctrineORMAdapteris able to handle: https://github.com/whiteoctober/Pagerfanta/blob/master/src/Pagerfanta/Adapter/DoctrineORMAdapter.php#L31\n. Don't you meanResources/metahere? Though I am not sure about this change in general. What about non-bundle dependencies? Or bundles that place the licence file in the root directory?\n. this looks wrong\n. same here\n. and here\n. good catch\n. Read the [...]. should IMO be added to therequiresection. IMO you should not include thedevsuffix here. If one wants to install the development version they can use their minimum stability setting.. maybe you want to add a label for the old headline to not break existing deep links. the version constraint for PHPUnit should be^4.8.35|^5.4.3|^6.0if you do not want to use the PHPUnit bridge. Oh indeed, I missed that Travis already uses thesimple-phpunitscript from the bridge..^3.2|^4.0(the wrapper script was introduced in Symfony 3.2, see symfony/symfony#19915). controllers must be public services to allow Symfony to pull them from the container when the request is handled. a user without a role is not treated as being authenticated. The built-inproperty_accessorservice will be private in Symfony 4. So we need a public alias to be able to retrieve it from the container.. no need for the cast here. and technically, this does not depend on the version of the kernel being used. the namespace should be fixed here too. #2262 should solve this. Sorry for missing this.. yes, you are right, I am going to update the code to account for that and will also apply the same normalisation steps the native Twig filesystem loader does. this should be fixed. This must probably still take into account the installed version of the HttpKernel component. IIRC EasyAdminBundle is compatible with older versions that don't allow the syntax with two colons for controller services.. should be removed instead. Are you sure about this change? This will probably break tests with certain versions of the SecurityBundle.. Why is that needed?. Ah indeed, I forgot about that change.. [...] when using the Symfony Form component [...]. I think you need to indent subsequent lines in your list items by two spaces. Wouldn't it be better to introduce a DI tag that allows to collect these services and make EasyAdmin aware of them?. This can throw an exception if the method does not exist.. By the way, reading the code I don't see how having the factory as a service method could actually work.. But using a service would still be blocked at compile time by theNormalizerConfigPass, wouldn't it?. I am afraid that understanding the reason could be hard with a reflection related exception. A custom exception would allow to provide some additional context.. Would it make sense to say something like \"use ... instead\" (depending on the provided value)?. Oh, I see what you mean. The old form themes will be entirely removed. But I think it's not enough to check forhorizontalandvertical. We will also need to check if the template name references one of the old form themes.. looks like this should bereturn array(LegacyFormHelper::getType('form'));. \"since 2.0\"?. Was it intended to change the service name? Should we keep the old as an alias for BC?. I think it might be useful to still refer to the class names that are then used later on (i.e.Product,Category, andUser`).. ",
    "markitosgv": "Great! Maybe its better only show messages for important events\n. @javiereguiluz what about this topic?\n. @javiereguiluz what about this topic?\n. Maybe we could try to guess some field and cast to string to return as form property... \nor maybe advice with a little note in README file something like \"don\u00b4t forget to define toString() method in your entities!\" :D\n. I agree too\n. @javiereguiluz ok for me! i think is the best option.\n. +1 to CONTRIBUTING.md file\n. +1 to CONTRIBUTING.md file\n. ",
    "juanber84": "Runs correctly now.\n. ",
    "mmoreram": "Don't really understand where is the problem.\nIf your project need X files, you must add them in your dependencies. You don't know how people will use these files in their projects, so you must ensure that, after composer update, you will have your files available.\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/61\n. Don't really understand where is the problem.\nIf your project need X files, you must add them in your dependencies. You don't know how people will use these files in their projects, so you must ensure that, after composer update, you will have your files available.\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/61\n. BTW, @xabbuh, even if FrameworkBundle uses X components, you should add the components as well in require block. You don't have to know how FrameworkBundle works and what packages require.\n. BTW, @xabbuh, even if FrameworkBundle uses X components, you should add the components as well in require block. You don't have to know how FrameworkBundle works and what packages require.\n. @javiereguiluz You don't have to define how your entities are mapped in your database. This is actually done in Doctrine.\nThe way to work with the correct manager is just not working with the default one. Every time you want to work with an ObjectManager, you should request it given the entity you want to work with (Using the ManagerRegistry as a factory). Even you want to work with two different but associated entities, you should request one manager per entity (You don't really know if these entities are really associated).\nThis is the way to give the maximum flexibility and compatibility with all projects. \n. @javiereguiluz You don't have to define how your entities are mapped in your database. This is actually done in Doctrine.\nThe way to work with the correct manager is just not working with the default one. Every time you want to work with an ObjectManager, you should request it given the entity you want to work with (Using the ManagerRegistry as a factory). Even you want to work with two different but associated entities, you should request one manager per entity (You don't really know if these entities are really associated).\nThis is the way to give the maximum flexibility and compatibility with all projects. \n. Take a look at this implementation.\nhttps://github.com/elcodi/Core/blob/master/Services/ManagerProvider.php\n:)\n. Take a look at this implementation.\nhttps://github.com/elcodi/Core/blob/master/Services/ManagerProvider.php\n:)\n. @javiereguiluz Absolutely. I'll update the branch before lunch! :+1: \n. @javiereguiluz Absolutely. I'll update the branch before lunch! :+1: \n. ping @javiereguiluz Updated & Sorted.\n. ping @javiereguiluz Updated & Sorted.\n. Okay. Good to know this is already managed.\n. Okay. Good to know this is already managed.\n. +1 Happy to see that :D Good work @javiereguiluz \n. can't find where these packages are required (namespaces? services?)... could you please show us? :)\nAnd the reason of alignment is because preferences of @javiereguiluz, right?\n. @javiereguiluz Seriously? \u00ac\u00ac\n. Yes, and I am used to sorting the use statements, but not by hand. If you want to ensure that everything is aligned with your style, make sure you provide a mechanism for such, like php-formatter.\n. ",
    "ogizanagi": "Well, it has some good points concerning security issues indeed. But I still have concerns about the points raised by Javier and about the future.\nThe security points might be considered in another issue. But what do you think about providing a DefaultEasyAdminVoter, where we can easily add our own logic about the pages that can be accessed by a user, and a very light configuration loaded in it :  \n``` yaml\neasy_admin:\n    entities:\n        Posts:\n            roles: ['ROLE_AUTHOR']\n            class: AppBundle\\Entity\\Post\n        Pages:\n            roles: ['ROLE_AUTHOR']\n            class: AppBundle\\Entity\\Page \n       Categories:\n            role: [ROLE_WEBMASTER]\n            class: AppBundle\\Entity\\Category\n            list: \n                roles: ['ROLE_MANAGER']\n    \"Config\":\n        class: AppBundle\\Entity\\Config\n        role: ['ROLE_ADMIN']\n\n```\nThe DefaultEasyAdminVoter will provide a way to handle every case through code, and handle most common ones through config, without requiring any change in the routing pattern.\n. It could be handled in the Voter (I had some issues with sf < 2.6 about circular references however... I must check if this is feasible now with the last security improvements and the security.authorization_checker service).\nI'm not in favor of adding security logic inside EasyAdminBundle (and your solution was good considering this), but even if we do not provide a simple way through configuration, we could provide an optional helper in the form of an AbstractVoter for the bundle uses. \n. Having tried this feature right away: :+1: \nSeems you only missed the attribute(item, entity.primary_key_field_name) here\nThank you !\nHope I could be helpful on further requests :smiley: \n. Having tried this feature right away: :+1: \nSeems you only missed the attribute(item, entity.primary_key_field_name) here\nThank you !\nHope I could be helpful on further requests :smiley: \n. Did you try to create a form named utcdatetime ?\n``` yaml\nservices:\nacme_demo.form.type.utcdatetime:\n    class: Acme\\DemoBundle\\Form\\Type\\UTCDateTimeType\n    tags:\n        - { name: form.type, alias: utcdatetime }\n\n```\n. Did you try to create a form named utcdatetime ?\n``` yaml\nservices:\nacme_demo.form.type.utcdatetime:\n    class: Acme\\DemoBundle\\Form\\Type\\UTCDateTimeType\n    tags:\n        - { name: form.type, alias: utcdatetime }\n\n```\n. @javiereguiluz : If I can be helpful: Have tried on my own projects, implementing a form as previously shown, with the name of the custom DBAL type is enough to do the trick.\nIt is neither a Doctrine nor EasyAdmin bug, as you're only doing this.\nAnd if you don't find the field type in your doctrineTypeToFormTypeMap, you simply use the doctrine type name as the form type name to load.\nThis behavior seems clear enough to me. I don't see what you could eventually do, appart from trying to get the parent DBAL type and use it to display the data. But as the DBAL custom type might transform a DB value into an object, this is not reliable anyway.\n_e.g_: I have a custom DBAL Type for all my enums, inherited from IntegerType:\n``` php\nabstract class AbstractIntegerEnumType extends IntegerType\n{\n    public function convertToPHPValue($value, \\Doctrine\\DBAL\\Platforms\\AbstractPlatform $platform)\n    {\n        if ($value === null) return null;\n        if (is_string($value)) $value = (int)$value;\n        $enumClass = $this->getEnumClass();\n        return $enumClass::create($value);\n    }\npublic function convertToDatabaseValue($value, \\Doctrine\\DBAL\\Platforms\\AbstractPlatform $platform)\n{\n    /** @var $value Enum */\n    return $value->getValue();\n}\n\n/**\n * Returns the corresponding enumeration class for generation\n *\n * @return string Enum class\n */\nabstract public function getEnumClass();\n\n}\n```\nEven if you get that this type is in fact stored as an integer, using the integer form type is a non-sense, as you might want to display a list (choices) of available enum values.\nSo defining our own form type based on the name of the custom DBAL type is the best option, and I think the Exception message is clear enough on what should be done.\n. @javiereguiluz : If I can be helpful: Have tried on my own projects, implementing a form as previously shown, with the name of the custom DBAL type is enough to do the trick.\nIt is neither a Doctrine nor EasyAdmin bug, as you're only doing this.\nAnd if you don't find the field type in your doctrineTypeToFormTypeMap, you simply use the doctrine type name as the form type name to load.\nThis behavior seems clear enough to me. I don't see what you could eventually do, appart from trying to get the parent DBAL type and use it to display the data. But as the DBAL custom type might transform a DB value into an object, this is not reliable anyway.\n_e.g_: I have a custom DBAL Type for all my enums, inherited from IntegerType:\n``` php\nabstract class AbstractIntegerEnumType extends IntegerType\n{\n    public function convertToPHPValue($value, \\Doctrine\\DBAL\\Platforms\\AbstractPlatform $platform)\n    {\n        if ($value === null) return null;\n        if (is_string($value)) $value = (int)$value;\n        $enumClass = $this->getEnumClass();\n        return $enumClass::create($value);\n    }\npublic function convertToDatabaseValue($value, \\Doctrine\\DBAL\\Platforms\\AbstractPlatform $platform)\n{\n    /** @var $value Enum */\n    return $value->getValue();\n}\n\n/**\n * Returns the corresponding enumeration class for generation\n *\n * @return string Enum class\n */\nabstract public function getEnumClass();\n\n}\n```\nEven if you get that this type is in fact stored as an integer, using the integer form type is a non-sense, as you might want to display a list (choices) of available enum values.\nSo defining our own form type based on the name of the custom DBAL type is the best option, and I think the Exception message is clear enough on what should be done.\n. :+1:  about the note in README.md.\n. You are absolutely right. I don't want to overcrowd the list view, as you said, it's only a transition to the show one. My main purpose was to provide visibility on the content, as for now, the show action does not displays anything more than on the list.\nHowever, the title is still a quick way to access more detailed informations, without interrupting the user navigation in the listing by loading another page nor visually overcrowd the page.  \n\nthere is an issue in EasyAdmin because the show action should display the full contents of all fields, no matter their length. I'm going to fix this bug soon.\n\n@javiereguiluz : Regarding this issue, what do you think about simply extract the \"truncate\" behavior in a Twig_Filter (like the Twig_Extensions_Extension_Text one, but we might not want to add another dependency) and use it only on required views, as list ? This will start reduce a little the coupling between the entity fields content access and the way it should be formatted. \nI feel like the current Twig_Function is kind of a magical method, doing too much. And this feeling will only get worse as the functionality additions will come.\n. Yes, that's the main solution.\nI opened this issue because I wonder if this worth the dependency, as the workaround is pretty easy, and a getId method on an entity isn't a non-sense anyway.\n. Yes, that's the main solution.\nI opened this issue because I wonder if this worth the dependency, as the workaround is pretty easy, and a getId method on an entity isn't a non-sense anyway.\n. Did not make a PR for now, but here is what was ready to be done considering this issue.\nMaybe it'll be helpful.\nI'm not fan of the try/catch, but simple way to keep something to display if the entity isn't configured to be used in the bundle, and avoiding generating broken link as currently. \nI think it would be helpful to handle the fact the entity isn't present in the bundle configuration in the getEntityConfiguration method. (returning null and avoid triggering exceptions)\n. Did not make a PR for now, but here is what was ready to be done considering this issue.\nMaybe it'll be helpful.\nI'm not fan of the try/catch, but simple way to keep something to display if the entity isn't configured to be used in the bundle, and avoiding generating broken link as currently. \nI think it would be helpful to handle the fact the entity isn't present in the bundle configuration in the getEntityConfiguration method. (returning null and avoid triggering exceptions)\n. I was wondering the same thing, but I opt for this solution as:\n- There is already a translation for no result\n- I think the list.results_found wasn't intended to handle the no result case, that's why there is no transchoice for {0}.\n- It is less disrupting for translators.\n. I was wondering the same thing, but I opt for this solution as:\n- There is already a translation for no result\n- I think the list.results_found wasn't intended to handle the no result case, that's why there is no transchoice for {0}.\n- It is less disrupting for translators.\n. As said @javiereguiluz : \n\nMy personal opinion is that URL format doesn't matter for a backend. My guess is that the end users of a backend don't care about URLs because they don't even look at them. They just want the backend to work as expected.\n\nIMO it does not worth the limitations it could induce in the future.\n. I easily understand your concerns about the complexity of my solution. I don't even know if the workflow could be achieve exactly how I see it. And most of all, it induces restructuring a large part of the bundle and the way it was thought at the very base. Maybe I'm trying to overcomplicate the bundle purpose...\nBut that's why I wanted to open this issue now, asking for feedbacks, and think about it before adding too many functionalities to a base that might be structurally reviewed depending on the direction the bundle will take, on how developers will use it. :smiley: \nI keep in mind that the bundle is not intended to provide as complex solutions as other admin generators do for now.\nBut, IMO, your solution does not provide enough extension points.\n_e.g_: In the future, we might want to introduce, on the list view, multiple-actions. These actions will be listed in a dropdown menu, next to the search input. Multiple-actions will only be effective on selected rows (adding checkboxes to every rows).\nGiving this example (surely too far for the bundle purpose for now, but only an exemple in order to take in account many things), I see the following issues with your solution:\n- No way to choose where the control will be added to the view.\n- No way to choose what the control is, how should it be displayed. Does it even represent a single-control ? Can't it have extra controls or displays on other part of the page ?\n- The arguments for an action are always the same: entity, action, and id. It isn't sufficient for every actions.\n- Cannot override the way built-in actions controls are rendered. (Except with css & js).\nWith actions as tagged services, and views hooks subscribing, adding the previous example will only require those steps:\n- In EasyAdminBundle: Provide an extension point by creating the hook on the list view. (Add a dropdown menu and use of the new render_hook('list.toolbar.multiple_actions') method):\n``` twig\nlist.html.twig\n\n    Actions\n     \n\n\n    {% for action in render_hook('list.toolbar.multiple_actions') %}\n        {{ action }}\n    {% endfor %}\n\n``\n- **For the developer**: \n  - Create a new Action class extending the providedAbstractActionone. Implement methods:execute,getSubscribedHooks,getName.\n  - For each subscribed hook, implement method rendering the item and eventually create a view.\n  - Register the new Action in the container with tageasy_admin.action`\n  - Optional: Add the JS code to handle the action logic in the easy_admin config.\nIn fact, it will be pretty easy for developers to add a new action, and even create their own extension points in their  templates with hooks.\nThey can even override the way build-in actions are displayed, extending the EditAction class, and overriding the renderListItemActionHook for example.\nIt might add code complexity for the bundle at first, but then provide enough flexibility not to worry about. But of course, I'm sure there is many other considerations.\n. Thought about another argument in favor of this approach: It can easily be extended to custom pages & dashboards(#2), defining tagged services as easy_admin.pages.\nSee actions as a particular case of pages where entity is additionally injected.\nAdding a view hook on the main layout, on the side menu will allow custom pages to be linked into the menu & provide easy navigation.\nWe can also imagine a way to specify in the conf, the default page representing the homepage.\nThen, it will be trivial for other bundles or developers in their own applications to define a homepage, or any other page they need in their admin panel.\n. @javiereguiluz, @magnusnordlander : In your mind, will the scope of those custom actions be limited to the Actions column on the list view ?\nEven if we allow custom actions on other views according to the same principle:\nyaml\neasy_admin:\n    actions:\n        restock:\n            route: app_product_restock \n            fields: [ 'id', 'slug' ] \n    entities:\n        Products:\n            class: AppBundle\\Entity\\Product\n            list:\n                actions: ['edit', 'show', 'restock']\n                fields:\n                    ['id', 'name', 'description', 'stock', 'price']\n            show:\n                actions: ['edit', 'delete', 'restock']\nI'm not glad that we cannot choose where and how each action will be rendered on the views.\n\n:alarm_clock: EDIT: I saw that batch actions to apply the same action to more than one list record simultaneously is a feature that we'll never implement. I don't understand why, as soon as the implementation is the responsibility of the developers using the bundle. We just need to provide enough extension points. But that's not the only point targeted by my comment above.\n. @javiereguiluz, @magnusnordlander : In your mind, will the scope of those custom actions be limited to the Actions column on the list view ?\nEven if we allow custom actions on other views according to the same principle:\n\nyaml\neasy_admin:\n    actions:\n        restock:\n            route: app_product_restock \n            fields: [ 'id', 'slug' ] \n    entities:\n        Products:\n            class: AppBundle\\Entity\\Product\n            list:\n                actions: ['edit', 'show', 'restock']\n                fields:\n                    ['id', 'name', 'description', 'stock', 'price']\n            show:\n                actions: ['edit', 'delete', 'restock']\nI'm not glad that we cannot choose where and how each action will be rendered on the views.\n\n:alarm_clock: EDIT: I saw that batch actions to apply the same action to more than one list record simultaneously is a feature that we'll never implement. I don't understand why, as soon as the implementation is the responsibility of the developers using the bundle. We just need to provide enough extension points. But that's not the only point targeted by my comment above.\n. @Pierstoval : I agree, it's a straightforward solution, and IMO, as it doesn't require much changes in the current structure, it might be introduced soon for most urgent needs.\nBut still, I'm not convinced about the restrictions I talked about in previous comments. I expect a more powerful design for this bundle, providing easy basic admin generation with a simple configuration, but also handy & potent extension points in order to create a lot of useful bundles. \n\nBut then, if your PR is merged, it becomes complicated to introduce a new way to solve this problem, as it'll certainly be a BC break. (Even if I do not think we currently really care much about BC as the bundle is quite recent).\nAnyway, Javier said nothing will be done until all kinds of Doctrine association are fully supported, so I didn't work on this recently, but I'll be glad to, at least, present you a draft of my suggestion, which I believe is not as complex to use as it seems to be ^^'\n. I guess this should be closed too thanks to the huge & impressive amount of work done by @javiereguiluz in order to introduce custom actions :smile: :  \n\n\nNew documentation about this feature: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/8-customizing-view-actions.md\n. I guess this should be closed too thanks to the huge & impressive amount of work done by @javiereguiluz in order to introduce custom actions :smile: :  \n\n\nNew documentation about this feature: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/8-customizing-view-actions.md\n. I agree with you @javiereguiluz. But if it can help people encounters less issues when initially setting the bundle, why not using the #primarykey instead of __toString() if not defined ?\nThis can easily be achieved using the property option when adding entity or collection fields to the form.\n. @javiereguiluz : Yes, that's what I think about :)\nBut then, the same should be achieve when displaying a OneToOne / ManyToOne relation on list & show view. (If I'm right, we currently assume that the target entity has the _toString method defined too).\nBTW for the issue title: this is about any association, even OneToOne, as every entity or collection fields are affected.\n. @Pierstoval : You might be right. A service (the Configurator for instance) might act as a cache, keeping the list of entities and the method to use (__toString() method, or the primary key). The check will be done only once, then.\nBut is it worth the effort  and additional code ?\n. :+1: \nDon't you think association types should be truncated as well, as we're using the _toString() method to display them, and cannot be sure about the length ?\n. @javiereguiluz : Pretty much the same as before about the truncate & other stuff in the extension :smile: \nBut I guess there is no better solution at the moment, as we cannot use the new truncate filter if the the extension returns HTML content, and that the purpose of this PR isn't to uncouple the entities' fields access and the formatting.\nSo :+1: \n. Hi.\nWhat do you think about : \nyml\neasy_admin:\n  list_max_results: 30\n  entities:\n    Coupons:\n      class: Acme\\DemoBundle\\Entity\\Coupon\n      form: \n        form_type: form.type.coupon\n        form_options: \n           'validation_groups': ['admin', 'edit']\nThe form service id (now form_type) is moved to the form action definition, as we could imagine it might be a different form for the new & edit actions,  or for other action in the future. So the same will go for new & edit actions.\nThis new form_type parameter shouldn't be present if fields is, as they cannot be used both at the same time.\nThe new form_options parameter is the array to give as form options, as the 3rd argument to use with createForm, but it might be introduced in another PR.\n. Yes, I don't think that's a problem.\nNonetheless, let's ask @javiereguiluz how he sees it before doing unsolicited extra work for nothing :)\n. @javiereguiluz : May I ask your opinion on this ? I may pick up the flame when I'll have some time if you're interested.\nOtherwise, maybe this should be closed ?\n. @javiereguiluz : Thanks for this (L.508): https://github.com/javiereguiluz/EasyAdminBundle/commit/5911c56174a589eb652a16218c8877ce283889d3#diff-04c6e90faac2675aa89e2176d2eec7d8L508\nI should have triple-checked...\n. :+1: \nThis will also solve #105 \n. I agree. IMO the constants in EasyAdminTwigExtension should be replaced by those default format, and the Configuration class should be falling back to the current constants value if nothing or null is set as default:\nyaml\neasy_admin:\n    default_formats:\n        date: d/m/Y\n        time: H:i\n        datetime: d/m/Y H:i\nand : \nyaml\neasy_admin:\n    default_formats:\n        date: ~ #Default (Y-m-d)\n        time: ~ #Default (H:i:s)\n        datetime: ~ #Default (F j, Y H:i)\n. Exactly. Sorry, I meant the Configuration class. Not the EasyAdminExtension.\n. I think it's a very common practice to define a form type for any DBAL custom types in our applications, as the most of the time, the main goal is to transform a simple scalar value from DB into a understandable type (Object) for our application. So, none of the build-in forms will suit, and we generally create a dedicated form type.\nTake the BiplaneEnumBundle: it comes with a dedicated EnumType. Or my own small DateIntervalBundle. \nThe main issue is generally about the form type name, which is not always the same as the DBAL type's one.\nMy point is the following: is it worth the heaviness of all those detailed examples, as the bundle is not meant to learn people how to use custom DBAL types and form types ? The documentation might be filled with similar concerns in the future if we're going this way. \nI was thinking about a simple warning, or at least, maybe, it should be explained in another file. (linked around the fact this bundle does support natively custom DBAL types).\n. @Pierstoval : @javiereguiluz already did it ^^ : https://github.com/javiereguiluz/EasyAdminBundle/commit/b97532d3051de61423d09f6220104b4e69b5338e#diff-04c6e90faac2675aa89e2176d2eec7d8R650\n. Using a ParameterBag will increase readability, plus the pleasure and ease to use objects to handle common operations on config accesses/build. Which, from what I understand, is all we ask. But I'm not sure the current code will significantly take advantage on it.\nI do not think of a better structure for now. But one quick question : Why so much array_key_exists when not intending to use the null values ?\nI've always found isset much more readable, easy to use : \n``` php\nisset($config['my_parameter']);\nversus:\narray_key_exists('my_parameter', $config); //Will return true even if $config['my_parameter'] === null\n```\nand AFAIK, is significantly faster.\n. @Pierstoval : If we take example on the HttpFoundation/ParameterBag, it has a deep option to resolve paths like entities[Post].\n. Yep, personally I've already replaced the translation by the single word \"Ajouter\". We already know which entity is targeted for creation, as we're on its listing.\nSame problem will happen anyway for other languages.\n. @Pierstoval, @javiereguiluz  : I do not think it is relevant to propose such an option per entity. IMO translations are good enough in order to override the interface's labels/titles. \nDoing such a thing will only make the configuration heavier, and you will loose the capacity to translate your interface. (If we allow using translation keys in the config, what is the point of doing that in the config and not using the translations files ?)\nHowever, one of the lacks currently, is the ability to translate entities' labels in the left menu for instance. \nWhat do you think about introducing a new translation_key at entity level in the configuration ?\nyaml\neasy_admin:\n    entities:\n        Post:\n            class: AppBundle\\Entity\\Post\n            translation_key: labels.entities.post\nIf the new translation_key option is not set, use the entity configured name as before (Post). Keep the entity name for logic purposes in the code anyway.\nThe translation_key option might not even be necessary, if the user set a translation for the entities under a specific key, using the entity's name:\n``` yaml\nsrc/Acme/EasyAdminBundle/Resources/translations/EasyAdminBundle.fr.xliff\n...\nlabels.entities.post: 'Article'\nlabels.entities.user: 'Utilisateur'\n...\n```\nBut I do not like it so much, as it's kind of hardcoded.\n. I understand. I was not sure about the single-language backends politic, but I suspected it.\nNo problem :)\n. Maybe add a line in the \"Features that we'll never implement\" section on README.md ?\nIsn't there an issue with the bundle relying on the translation component, without fixing the locale then ? (If the locale is set from a RequestListener in another language than the admin one)\n. @javiereguiluz : I'm sorry, but I do not agree (Don't hate me :innocent: ). \nWould you mind reopening this based on the following diff ? https://github.com/javiereguiluz/EasyAdminBundle/compare/master...ogizanagi:entities_labels_trans\nIndeed, entity names & properties are still untranslatable for now. \nYour PR was about titles of pages & labels for some UI elements. When you asked me about full translation support, I was only talking about your changes (only putting a note on https://github.com/javiereguiluz/EasyAdminBundle/pull/153#discussion_r25807811 about entities' names translation).\nI'll update this PR description.\n. Hi. I do not know exactly which are the lacks for the support of those associations (Appart from the embedded form support & the FOSUser issue). But I'll be waiting for more informations.\nShould entities using inheritance be added to this list ?\n. Hi. I do not know exactly which are the lacks for the support of those associations (Appart from the embedded form support & the FOSUser issue). But I'll be waiting for more informations.\nShould entities using inheritance be added to this list ?\n. I think that the best we could expect for the left sidebar is having a similar behavior than in this theme for example, i.e, nested items & scrollable list, while keeping the fixed position.\nI must agree about the body #wrapper width set back to 100%. I don't know why this was limited to 1240px on screens wider than 1200px, and I already reset it on my own backoffices.\n. I think that the best we could expect for the left sidebar is having a similar behavior than in this theme for example, i.e, nested items & scrollable list, while keeping the fixed position.\nI must agree about the body #wrapper width set back to 100%. I don't know why this was limited to 1240px on screens wider than 1200px, and I already reset it on my own backoffices.\n. Hi @javiereguiluz . You might want to take example on the excellent https://github.com/tripit/slate project too, which has a similar left menu, but achieved more simply.\nSee it in action with the numerous examples in the wild, like https://docs.dwolla.com/#introduction.\n. @Pierstoval :  \n\nUsing the Form component is great too, because it allows the persistence of a brand new object, which I'm go ...\n\nI think you're talking about embedded forms, right ? This was discussed in #109 and the approach @javiereguiluz suggested in the configuration seems good to me.\n@javiereguiluz : I don't know the selectize plugin, but I'm more used to the very good select2 or even chosen ones which provide way more examples. But as I never used selectize, I cannot talk about the few advantages it features.\nAs @Pierstoval said, those plugins are also useful for other relations types. It will be great to include them ! :smiley: \nThe Show action seems good enough for the purposes.\n. Indeed, quite a good idea.\nA form type guesser might be useful in order to choose the best input to suit according to the potential number of elements if nothing is set in the render option.\nE.g: \n- 5 items in the database => radio / checkboxes\n- more than 5 items => selectize or another js plugin with AJAX autocomplete.\nThis will require to perform a request in order to get the amount of items in the database, but I don't think it will be a real issue.\nDo you think this is relevant ?\n. I was not talking about pagination at all ^^. But using selectize (or select2 as I know it better) we can use AJAX requests to cleverly load entities within a search. (see \"Loading remote data\"). But this might not be suitable for our needs, as we will need to set one or more properties to search against in the configuration. So it cannot easily be guessed.\nIf loading the whole collection, using count($collection) is indeed the easiest way. But I fear for the performances on applications with very large databases...\nBut if we do, no need to use an AJAX request at all. Simply serializing the collection to json using the __toString() method as label and passing it to the view should do the trick.\nOr...we can in fact use pagination (but I was not talking about that before ! :smile_cat:). We can load first a reasonable amount of  the latest entities. Then, if the user doesn't find the one he needs from the list, click on a \"load more\" button (through AJAX). \n. > Brainsplosion\n:sweat_smile: \n\nMaybe we could check at first how many elements there is in the database, in order to pick a strategy ? But that sounds very heavy...\n\nExactly. A COUNT query might not be so heavy and cached. Keep in mind that this behavior will only happen if nothing is set for the render value. The developer is most likely to know what choice will be the best for each form fields in his application. \n\nthe best possibility is to retrieve all elements in a JS object with a simple key=>value pair corresponding to primaryKey=>__toString()\n\nExactly for the format. It will allow user to search for an entity against the __toString() method, which sound the best.\n\nAnd for this, we must properly create a webservice.\n\nNo. I don't understand the need to create a webservice called only once & used only for this purpose if we can just pass data to the form view.\n\nwe cannot tell Doctrine to retrieve only \"some\" fields, as the __toString() method can use any field\n\nYep... that's why retrieving the whole collection should be limited according to the real amount of entities in the database, and IMO the best strategy for a selectize or another plugin will be to use pagination to load more on demand (then a webservice will be useful).\n. > So there's only two choices left for the selectize-like plugin:\nthree\n- Load only a reasonable amount of data from a webservice (the 100 latest entities for example). Load more on demand.\n. In fact, I'd love to see this feature, too.\nBut I see a troublesome issue with this proposal: What if the image's path isn't an absolute URL or relative to the base URL of the application ?\nMost of my apps rely on implementations like in the VichUploaderBundle, where only the uploaded file's name is stored. Then, a service / twig function is used in order to get the full URL.\nAs is, the image type will only be able to display absolute URLs, or relative to the base URL of the application.\nI think another system might be conceived complementary to this, in order to display images for other cases.\nMaybe time to imagine a way to make easyadmin fields types extensibles ? Developers might want to create their own types. A vich_uploader_image type could then be developped in another bridge bundle. This will also allow to create types for more complex usages, e.g: VichUploader / other service to get the image path, and LiipImagine to resize it.\nBut I do not see it as a priority feature for an admin generator.\n. It's more like a workaround than a proper way to solve it ^^.\nIndeed, using VichUploader, the location where the image is stored is set in the configuration, and might even depend on the environment (dev, prod, ...), other implementations might rely on a specific controller to expose files, ...\n(In addition to the fact that I am not a fan of these kind of getters)\nBut IMO, as I said, your suggestion is great and sufficient for the moment. Advanced usages might be discussed later ?\n. @javiereguiluz : seems good to me for now :+1: \n. > I'm afraid that there is no alternative for <2.5.0 users.\n@javiereguiluz : Why ? Can't we just add a listener doing the same thing as the symfony's ResizeFormListener does ? Or were your thoughts only about the fact it isn't worth the effort for such little profit ? Which indeed I could understand.\n. Thanks for the explanation :) \nI was thinking about submitting a PR following yours, but I was conscious of what it means. Hence my request for clarification.\n. In fact, I think I have a solution without javascript about your issue with overflow-y. Might rebase my solution on yours.\nBut with your current solution, the scrollbar is always shown, even when no overflowing items. And I think some js would be nice to only show scrollbar on mouse overing the left-sidebar.\n. Just submitted #142 \n. I'm using chrome too, on Mac OS X. That's strange, I do not have the behavior you have, i.e the scrollbar disappearing when not in use.\n. @javiereguiluz : What did you select under System Preferences > General > Scrollbars ?\nI bet you've checked the 2nd option. :smile: \n. Me too...increasingly strange. Because I only get the same behavior as yours with the second option.\n. No effect.\nAnyway, I think I will not say anything wrong in the fact that, for most users, a property overflow-y set to scroll instead of auto will always show the scrollbar.\nThe second \"issue\" not solved by this commit, and why I suggested js, was when there is too many items, the scrollbar is still displayed when not scrolling with my configuration.\nBTW, the look & feel of your scrollbar clearly shows that's your OS handling it, which I don't understand considering we have the same configuration for this particular option.\n. @javiereguiluz : No problem. Before you merge it in master, I've just submitted some changes I forgot about in #143 that might interest you. Sorry for the multiple PRs.\n. Second commit is about the \"issue\" always showing the scrollbar when too many items in the menu. Not a real issue, but this is disgraceful and not sexy as hell in a modern app. So let's hide the scrollbar when the cursor is not on the menu with some basic css. :bulb: Didn't even know why I was talking about js in previous PR -.-' ...\nIt will also be trivial to completely hide the scrollbar using a width of 110% for #header-nav:hover. What do you think about it ?\nWe might add a slight glowing/shadow effect on top of the #header-security (through js this time) as an indicator if there's some items to scroll, like in the theme I previously mentioned: http://bootstrapmaster.com/live/origin-ajax/#page-activity.html\nSee the slight shadow when the scroll's end is not reached yet ?\n. @javiereguiluz : It's only a notice, not an Exception. That's why @Pierstoval transforms it to an proper Exception in order to catch it into the block you mentioned. \nI think this change is legit. :+1:  It will prevent bad usage of the getEntityConfiguration method in the future.\n. @Pierstoval : That's not what this change is intended to do. It's not about changing the default locale, but fixing the locale on EasyAdmin routes translate the interface in the same single language as entities, for better consistency.\nEasyAdmin has partial support for translations, by providing translation files for the interface, allowing any developper to use this bundle to generate an admin backoffice in his own preferred language.\nBut in the other side, the developper is unable to translate his own entities output on the admin, because EasyAdmin doesn't allow entities' names & fields translation.\nA partial support isn't a good support.\nYou're working with american, spanish and french people, and your own language is french. I bet you translated all the entities names & fields in english (or maybe french) in the easyadmin config ?\nSo a spanish user will have the easyadmin interface translated in spanish, but the the whole bunch of entities he'll manipulate are displayed in english (or french) ?\nSounds weird to me. \n@javiereguiluz : sorry, but I don't understand. We cannot rely currently on the Symfony application to deal with translation, and there is no plan to introduce tarnslation_key in order to translate entities' names & fields' labels. What @Pierstoval commented is exactly (if I understand it properly) what this PR tries to avoid, i.e changing locale for translating the interface according to a variable parameter (url query param, header, ...) which is perfectly suitable in other part of an application, but here we cannot translate everything. So you've got a partially translated administration interface.\nThe only way to fully translate the admin backoffice for now, is by dealing with multiple configurations. Which means, multiple environments: one for each language. \nThis sounds heavy to me, but anyway, this change will not  prevent doing such a thing.\n. @Pierstoval : hm... I should have missed something. How do you translate entities' names and fields' labels on EasyAdmin interface when the views only prints the label set in the configuration, without calling any translation filter ? (See the layout for instance).\nBTW, you still can use your LocaleListener with a priority lower than the ForceLocaleListener. But as your Listener is in another bundle than the core app, I understand that's a problem.\nThe solution might be using EventListener instead of EventSubscriber in order to be able to override the listener priority. In your bundle, this one, or both.\n. Ok. So we're not talking about the same thing at all since the beginning. ^^'\nI'm only talking about the menu items & table headers which are untranslatables.\nIf this PR is not desired, I don't understand the previous @javiereguiluz's comment on the #122 PR.\nWe should either fully support or not support the whole translation of the interface, don't you agree ?\n. Well, I'm not crazy, that is one point. :smile: \nThen if Javier valid it, I should work the same way on the fields translation as well.\n. Ok. Then I'm closing this PR :)\n. :+1: \n. Do you plan to introduce the show/hide feature within this PR ? \nIf so, I think another style would be great for grouped items (a slightly darker background or whatever). \nIf not, I don't know if it's necessary as it will more likely fool the user.\nAs the configuration grows, I'm not fan of mixing the menu structure/items order & grouping with the rest of the configuration. And if we go further with groups configuration (let's say a translation_key for example :smile_cat: , or adding a custom css class, ...), you'll need to duplicate this part or handle it differently.\nBut it still very simple for now, so :+1: \n. @Pierstoval : In fact, I think you misunderstood me (or did I ?). I was only talking about the configuration in yaml files:\nyaml\neasy_admin:\n    entities:\n        Posts:\n            groups: Blog\n            class: AppBundle\\Entity\\Post\n        Pages:\n            groups: Cms\n            class: AppBundle\\Entity\\Page\n        Categories:\n            groups: Cms\n            class: AppBundle\\Entity\\Category\n        \"Config\":\n            class: AppBundle\\Entity\\Config\nIf we introduce new options later, for some reasons, on groups, here what it'll look like:\nyaml\neasy_admin:\n    entities:\n        Posts:\n            groups: Blog\n            class: AppBundle\\Entity\\Post\n        Pages:\n            groups: { name: Cms, translation_key: 'easyadmin.menu.group.cms', class: 'cms_group' }\n            class: AppBundle\\Entity\\Page\n        Categories:\n            groups: Cms\n            class: AppBundle\\Entity\\Category\n        \"Config\":\n            class: AppBundle\\Entity\\Config\nAs you can see, there is no real meaning nor consistency with this configuration. And you might imagine something like:\n``` yaml\neasy_admin:\n    entities:\n        Posts:\n            groups: Blog\n            class: AppBundle\\Entity\\Post\n        Pages:\n            groups: Cms\n            class: AppBundle\\Entity\\Page\n        Categories:\n            groups: Cms\n            class: AppBundle\\Entity\\Category\n        \"Config\":\n            class: AppBundle\\Entity\\Config\ngroups:\n    - Blog\n    - { name: Cms, translation_key: 'easyadmin.menu.group.cms', class: 'cms_group' }\n\n```\nBut then, why not completely keep separated the entity configuration with menu layout config ?\n``` yaml\neasy_admin:\n    entities:\n        Posts:\n            class: AppBundle\\Entity\\Post\n        Pages:\n            class: AppBundle\\Entity\\Page\n        Categories:\n            class: AppBundle\\Entity\\Category\n        \"Config\":\n            class: AppBundle\\Entity\\Config\nmenu:\n    brand_colors: [\"#FFA\", \"#3EF\"] #ugh...only an example, okay ? :p\n    collapse_delay: 20ms #pure fantasy\n    items:\n        - Config\n        - Cms:\n            class: 'cms_group'\n            translation_key: 'easyadmin.menu.group.cms'\n            items: [ Pages, Categories ]\n        - Blog: [ Pages ]\n\n```\nWell, I haven't thought much about the menu configuration yet, that's only a sketch. Javier certainly thought about it deeper and will present us something clearer.\nAbout the location where you're actually grouping the entities together in order to create the menu, indeed, I wondered if there is a reason you did it in the controller instead of the Configurator ?\nBut, again, we might separate the entity configuration and the layout one. So I presume that there are good chances we introduce a new dedicated MenuConfigurator and Extension, or whatever ?\n. @romaricdrigon : The main issue I see with this syntax (as we explained above), is that we're mixing entities related configuration with menu/design configuration.\nIMO, the menu should have its own dedicated configuration key, like what was done for the design configuration.\n\nSee https://github.com/javiereguiluz/EasyAdminBundle/pull/151#issuecomment-77040595 and https://github.com/javiereguiluz/EasyAdminBundle/issues/208\n. @romaricdrigon : I don't think introducing a group option with multiple purposes is a good idea :confused: \nYou will not group entities in the menu the same way you'll use this group option elsewhere.\n. > Plus, it may not be compatible with future versions of the bundle.\nCould you precise your thought ?\nI agree with you concerning the twig function instead. Here, I avoided doing that, at least for now, in order to keep the views intact.\nThe current twig extension seems a particularly good place, as it already has a dependency on the Configurator... If only the easyadmin config was exposed publicly in it.\nTalking about compatibility, what do you think of the current route name ? Or even the config parameter in views if we do \"injection\" ?\n. > For \"future\" enhancements, I mean that the configuration format may change in the future, as well as the Configurator service, so having a dedicated implementation for config injection might need to refactor it if we change the configuration format. \nRight. But we'll have the same problem anyway, relying on the container to retrieve it.\n\nFor this, we can simply add the config var as dependency in the extension\n\nOf course, but it feels kind of redundant as we already have the Configurator injected.\n\nI'd personally rely on $container->getParameter('easyadmin.config');\n\nYup, but it's indeed boring to get it from container and pass it to the view in every controller action using the same main layout for example.\n. @javiereguiluz : If we inject it everywhere, we need to change its names for something less generic, in order to avoid overriding other globals set by third-party bundles or by the developper itself. My thoughts are the same for the easyadmin only route for now: admin.\nI used Twig_Globals injection for the purpose of this PR, in order to show you something and open the debate, avoiding changing the vars names or views. But as @Pierstoval concluded, making those variables \"gettable\" with Twig_Functions is certainly the best compromise we could get. As a bonus, it will prevent any smash-up.\nWhat do you think ? Should I rebase this PR according to this idea ?\n. I reverted the d2e5897 (will be rebased when we're done) approach and introduce 2 new commits:\n- Consult  019a2f8 for the new approach about config: \n  - Configurator now provides a getter to retrieve backendconfig but you might prefer explicitly injecting the easyadmin.config parameter ?\n  - Maybe the extension shouldn't allow to access directly the config, but instead providing more functions in order to retrieve js, css, entity, list_actions, ... which the Configurator should expose more explicitly ? But that's another story.\n- Consult  a260d00 for the new approach about entity:\n  - I'm not convinced by this implementation. A dedicated service might be better in order to avoid code duplication with the controller, allowing to get the entityName from request, then, the entity configuration. Which I didn't split here, as it has nothing to do with the TwigExtension.\n  - I only set globally the entity for every template extending the layout https://github.com/ogizanagi/EasyAdminBundle/blob/a260d0096588a53e2f19217fe454c1271b7b59ef/Resources/views/layout.html.twig#L2 in order to keep this change simple and call the Twig_Function only once. But this might be done the same way on each children template instead.\nWhat do you think ?\n. Last commit ( 5caec6e) is the same as previous one:  a260d00, but without requiring uselessly the request_stack service.\n. @Pierstoval :  \n\nFor a260d00 I think it's simple enough, but maybe we should add a security verification to return the entity configuration only in 2 specific cases:\n- An $entity argument is passed\n- If no $entity argument is passed, we check in the request that the current controller extends the AdminController, if so, we get the entity from the request, to avoid any query string injection.\n\nI didn't get the purpose of your suggestion. What would be the workable injections ?\n. @Pierstoval : What do you think of the implementation of your suggestion in  3ba5219 ? Does it match what you had in mind ?\n. Drastically simplified the getEntity method code in the Twig_Extension.\nWhat do you think @javiereguiluz ? Does this approach looks better than d2e5897 to you ? Is there anything to do about the concerns exposed in https://github.com/javiereguiluz/EasyAdminBundle/pull/152#issuecomment-77129930 ?\nIf this seems good to you, I can fully remove the first commits and prepare this for merging.\n. Now that we have a proper Extension to retrieve the easy admin configuration, I think that there is nothing harmful using it. A \"has-er\" could improve the developers experience with the bundle if they extend or recreate their own templates for the admin. But prior to that, I think the \"theming\" abilities for this bundle should be reviewed in another issue/PR.\n. Hmmm, I understand what you're thinking about to do with this \"has-er\", but I do not get how it will help you for the menu, at least on the EasyAdmin side.\nI mean, in https://github.com/ogizanagi/EasyAdminBundle/blob/inject_globals/Resources/views/layout.html.twig#L45, we only iterate over the entities list in the config. There is no reason for using the \"has-er\" here unless the EasyAdminBundle explicitly want to handle security features. So you will have to rewrite the main layout and use your own Extension with the \"has-er\" anyway. The call will not be handled by EasyAdmin. :confused: \n. Oh. In fact I thought you were talking about a \"has-er\" in the TwigExtension, which led me to think you were planning to use it in views in order to hide items the user should not access.\nOk, this makes more sense.\n. Just rebased this on last changes, awaiting for review & your thoughts about the way we should handle it. \nIf it does comply to your thoughts, it's no more a WIP and could be prepared for merge (squash & removal, previous commits were only kept for history purposes about the different approaches).\n. @Pierstoval : Done. Thanks for the observation. \n. > How can we add support to include variables as part of the title/label? What if the title wants to display the id or the title of the associated entity?\nAs you just did in https://github.com/javiereguiluz/EasyAdminBundle/blob/titles_and_labels/Resources/views/edit.html.twig#L28 and everywhere ? Seems legit to benefit from the use of the translation component & placeholders.\n\nThe trans filter is applied to all titles. Is this enough to provide full translation support? (this question is specially directed to @ogizanagi who raised this question in another issue).\n\n:innocent: Of course\n\nThe label to create new entities is customized via the label option of the new action. I don't like the label name because it's too generic and it can be confused with title. I thought about button_label in new action or new_button_label in list action. \n\nbtn_label, control_label, action_label, short_action_label, short_action_name ?\nI agree with @Pierstoval about the \"standardization\" of the actions configurations, so IMO new_button_label could not be suitable.\n. It will require another js library, but what do you think of a real switch control like Bootstrap Switch or Bootstrap Toggle ? (For the error handling, it's really simple to add a switch-back behavior)\nI do not find labels acting as controls very intuitive, and you cannot visually make the difference between virtual property and switchable fields.\n. @javiereguiluz : Your solution is quite good as well. At least this looks like a control and not only a textual element.\nAs @Pierstoval said, relying on a simple label for a control is very poor and unintuitive in UX terms.\nThe buttons checkboxes/radios from Bootstrap should simply do the job too.\n. @sr972 : The EasyAdmin bundle has nothing to do with rights, and IMO should keep it that way. I guess you can easily protect the action by checking the user's roles, overriding the AdminController::initialize method or using a request/controller listener or even directly in a voter.\nWhat about a modal to confirm the action, or a banner advertising about the ongoing changes, and a button to submit all of them ?\n. @Pierstoval : Good point.\nDo you have something in mind talking about security as a very light feature ? That's one of the reasons I'm in favor of decoupling every custom and build-in actions in the code in my vision of custom actions (which should not be different at all from build-in ones, IMO).\n. :+1: This is great\n. @javiereguiluz quickly raised this idea in https://github.com/javiereguiluz/EasyAdminBundle/issues/167#issuecomment-77765717, so I think it's already on the way :)\nAnyway :+1: \n. #### Reference of action types\n\n@Pierstoval : About the action types, I don't think that the types repository or entity would be used most of the time... Even if they're handy, they're quite hard to understand the first time. A custom route is obvious for example.\nBut it may be personal, I don't know what would think other people about these specific types. method (which implies extending the controller for custom actions) and route (which is handier) are good enough. Let me just [...]\n\nExactly my thoughts... I don't find any value to those helpers method. Not intuitive at first. Not useful subsequently, as everything could be done the exact same way, and very simply with the methods and route types.\n\nAction inheritance behavior\nImplicit way :+1: \n\nReference of the different customization strategies\nAs you said, it's \"An example of a super complex action customization\"...still, only a little part of it. It feels really really heavy and unintuitive to me. :confused: \nI really see custom actions as a primary feature, and something that should be \"shippable\" in a third-party bundle. \nThe user should not have more concerns than configuring the entities for which those actions are enabled in easyadmin config. The action by itself must be able to choose where the buttons/links are rendered (which page, and where in the page). The only responsibility for the user, is to register the action for the desired entities.\nFor more options, if needed, the action itself (I mean the bundle) should provided a way to configure specific actions' parameters. It's not the EasyAdminBundle responsibility anymore.\nSame for the target attribute. Only the action should be aware of this. The user shouldn't be able to register a custom action dedicated to single records as an entity action.\nNeedless to say, implementing such a way to handle actions rendering will be kind of heavy in the code/templates too.\nIMO by wishing not to overcomplicate the bundle by extending constantly the configuration, and rely on it for everything, we're actually overcomplicating the way we handle features, instead of relying on the extensibility and the developers skills.\nYes, EasyAdmin should be easy to use for most simple backends. The 5 minutes it takes to generate the basic admin backend is amazing. But I think it must also limit its responsibilities, by providing extension points that will help reducing the internal code & templates complexity, and trust other developers' skills for most advanced features. \n\nBTW, here : \nyaml\neasy_admin:    \n    edit:\n        actions:\n            - { action: 'grantAccess', type: 'method', label: 'Grant' }\nI think the action attribute must be renamed name in the action declaration, or we should differentiate the action's name, and its value (which is a route name or a method name). What do you think ?\n. > EasyAdmin is a monolithic piece of software, and I proudly say that as a good feature, not as something wrong.\nYeah, I don't see this as something wrong neither. You want to provide something strong and stable. Something far away and beyond the complexity of other admin generation bundles. I got it (this is not sarcasm). I'm glad to talk with you about all of this, and I thank you for considering all of my comments with so much attention. I only fear that this project is closing in onto itself, relying on its great capabilities of settling a very nice and clean CRUD backend in a snap, to argue that it should also do more, only by itself. You realized in your comment:\n\nThe main constraint of your custom actions is the template used to display them: this is hardcoded and cannot be modified\n\nthat this approach is quite limiting the developer ability to customize the backend, an there are many things that will be kept \"hardcoded\" that way.\nThe main drawback of other admin generators is the time and the effort necessary to build the very basis of an admin backend with our entities. Which EasyAdmin bundle already get rid of. Now it should not limit itself by providing implementations of specific behaviors, but instead providing enough extension points and interfaces for the developer to develop the whole admin backend around the easy admin core.\nIf you're not in this mindset for now, I don't even think that introducing actions types nor other advanced features about actions will be relevant. Therefore, your first proposal about only item actions perfectly fits the bundle's perspective, and  I apologize for having continuously looped on my own concerns. Everything else might be done in another application part (we should at least provide a way to extend the bundle's layout more efficiently if the developer wants to keep consistency between the different backend parts).\nAnyway, lately I was thinking about a system similar to symfony's form themes in order to override the easyadmin types widgets and other parts only from templating (The TwigExtension will not generate the templating code anymore but call the proper widget from a theme template instead). The same should have been applicable to actions. But it seems really really complicated to achieve such a thing as powerfully as the form theming.\n. @Pierstoval : Yep, I'm actually talking about that...for non-form elements: entity fields that are rendered through the TwigExtension, custom actions links/buttons, any dynamically determined and generated part of the templating... The idea is that those elements are in a easyadmin_theme_layout.html.twig, the same way as in form_div_layout.html.twig, and if the user isn't satisfied of how is currently rendered the boolean entity field or its custom actions buttons on the list page, he can provide his own theme.\nAs I said, it's a complex feature (to implement, not to use. You can have a look at how works the Symfony's FormExtension and FormThemeTokenParser) which may provide a not so much exciting result. But before digging into the code, I found this principle interesting for EasyAdmin theming. \n. Indeed, you're right. The getBoolean method is only available since the 2.6 version of the ParameterBag.\n. Closed as Javier already solved this and I missed a change in this PR :)\n. Don't worry. I made this change too fast anyway, directly from github, and forgot to replace the getBoolean method by the get one anyway ... Which kind of killed the initiative...\n. I didn't test it yet, but great work !\nI must agree with @Pierstoval about the method & route types. \nBut instead of introducing both options while keeping the type one, why not remove the type one and just use method and route ? \nIf both of them are provided, trigger an Exception, or set a priority, e.g method before route.\nyaml\neasy_admin:\n    entities:\n        Product:\n            list:\n                actions: \n                    - { name: 'restock', method: 'restock' } #call restockAction method\n                    - { name: 'restock', route: 'app_product_restock' } #call app_product_restock route\n                    - { name: 'restock', route: 'app_product_restock', method: 'restock' } #call restockAction method / trigger an exception\nThese are all my thoughts for now.\n. If your concern is about the fact that adding a new type one day means adding a new option, I don't think there will be so much other types (a service id ? There is no point doing that). \nBut then remains only one option:\nKeep the type option and a new generic option called value or whatever and give up the two method and route options you suggested before:\nyaml\neasy_admin:\n    entities:\n        Product:\n            list:\n                actions: \n                    - { name: 'restock', type:'method', value: 'restock' } #call restockAction method\n                    - { name: 'restock', type:'route', value: 'app_product_restock' } #call app_product_restock route\nWhat should be the generic option's name ? (currently value)\nFair summary ? ^^'\n. Because it means introducing another option to specify the method to call, or create an interface and structure specific to EasyAdmin for your service in order to automatically call the proper method.\nFor the same reasons as the repository & entity types, there is no need for that. Call the service from the controller is easy enough.\n. @javiereguiluz : Great :)\nHowever do you think using the route or method name as the action name (so, the identifier) isn't an issue ? :/\nWhat is your opinion about what we talked above with @Pierstoval ?\n. @javiereguiluz : Great :)\nHowever do you think using the route or method name as the action name (so, the identifier) isn't an issue ? :/\nWhat is your opinion about what we talked above with @Pierstoval ?\n. The only thing really bothering me with the current implementation, is in fact that the action's name depends a lot on the way the user designed his app. The action's name should be a really simple identifier, where the only requirement is to be unique in easyadmin configuration only. \nThe route one may have some prefix or anything to identify properly the route from another in the application. Plus it will be this route name that will be shown in the query string ?action=customActionName.\nyaml\nactions: \n    - { label: 'restock', type: 'route', name: 'app_product_restock' }\n=> ?action=app_product_restock instead of ?action=restock \n. The only thing really bothering me with the current implementation, is in fact that the action's name depends a lot on the way the user designed his app. The action's name should be a really simple identifier, where the only requirement is to be unique in easyadmin configuration only. \nThe route one may have some prefix or anything to identify properly the route from another in the application. Plus it will be this route name that will be shown in the query string ?action=customActionName.\nyaml\nactions: \n    - { label: 'restock', type: 'route', name: 'app_product_restock' }\n=> ?action=app_product_restock instead of ?action=restock \n. Oh...right. Forget what I said about the URL. :)\nI didn't even kept in mind that the route name will only be used internally for url generation in the templates' links/buttons...\n. Oh...right. Forget what I said about the URL. :)\nI didn't even kept in mind that the route name will only be used internally for url generation in the templates' links/buttons...\n. Erf https://github.com/javiereguiluz/EasyAdminBundle/pull/199 :/\nThis was the exact getBoolean implementation using filter_var:\nphp\nfilter_var($this->request->query->get('newValue'), FILTER_VALIDATE_BOOLEAN);\nShould I reopen it instead (and fix the missing change) ? Your own fix is sufficient for this case, though. ^^\n. Erf https://github.com/javiereguiluz/EasyAdminBundle/pull/199 :/\nThis was the exact getBoolean implementation using filter_var:\nphp\nfilter_var($this->request->query->get('newValue'), FILTER_VALIDATE_BOOLEAN);\nShould I reopen it instead (and fix the missing change) ? Your own fix is sufficient for this case, though. ^^\n. Shouldn't we rather allow to set a datetime field to null from the form instead ? (with a checkbox disabling the datetime widget)\nEventually, a new default option for datetime type in forms configuration, allowing to provide the default value:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                fields:\n                    - { property: 'dateOfBirth', default: '0000-00-00 00:00:00' }\nNote you're already able to do this by specifying a default date from your entity constructor (But might be undesired in certain cases).\n. Shouldn't we rather allow to set a datetime field to null from the form instead ? (with a checkbox disabling the datetime widget)\nEventually, a new default option for datetime type in forms configuration, allowing to provide the default value:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                fields:\n                    - { property: 'dateOfBirth', default: '0000-00-00 00:00:00' }\nNote you're already able to do this by specifying a default date from your entity constructor (But might be undesired in certain cases).\n. AFAICT, it's a php \\DateTime \"issue\" for the '0000-00-00 00:00:00', but it can be workaround for our purpose by a custom form type allowing to set the date to null from the form I guess.\n. AFAICT, it's a php \\DateTime \"issue\" for the '0000-00-00 00:00:00', but it can be workaround for our purpose by a custom form type allowing to set the date to null from the form I guess.\n. @Pierstoval : seems quite common: http://stackoverflow.com/questions/12482560/default-date-0000-00-00-000000-or-null.\nBut I personally never used this way.\n. @Pierstoval : seems quite common: http://stackoverflow.com/questions/12482560/default-date-0000-00-00-000000-or-null.\nBut I personally never used this way.\n. @Pierstoval : I agree this is not an EasyAdmin problem, but there is still an issue here: easyadmin forms (new & edit actions) do not allow to set a datetime field to null.\nThe 0000-00-00 00:00:00 isn't a valid date and caused similar issues on other languages (java at least), nor it is something selectable in a datetime widget anyway. \nBut null should eventually be.\n. @Pierstoval : I agree this is not an EasyAdmin problem, but there is still an issue here: easyadmin forms (new & edit actions) do not allow to set a datetime field to null.\nThe 0000-00-00 00:00:00 isn't a valid date and caused similar issues on other languages (java at least), nor it is something selectable in a datetime widget anyway. \nBut null should eventually be.\n. > If the date is nullable, every  will have a default empty value available, so the problem will not be triggered.\nI didn't experienced this behavior with my last tests, because empty_value isn't set for the datetime form type.\nAnyway I don't think this is really handy. I was simply suggesting a checkbox next to the datetime fields in order to disable all the select inputs at once and submit null, but there's still other issues with the basic datetime choice widget (unable to select any year for example, the range is limited).\nSo yes, maybe it's time to choose a date & time picker implementation. :)\n. > If the date is nullable, every  will have a default empty value available, so the problem will not be triggered.\nI didn't experienced this behavior with my last tests, because empty_value isn't set for the datetime form type.\nAnyway I don't think this is really handy. I was simply suggesting a checkbox next to the datetime fields in order to disable all the select inputs at once and submit null, but there's still other issues with the basic datetime choice widget (unable to select any year for example, the range is limited).\nSo yes, maybe it's time to choose a date & time picker implementation. :)\n. @nzurita : No, it hasn't yet. You can consult my own reasons in https://github.com/javiereguiluz/EasyAdminBundle/issues/344#issuecomment-107942821. I haven't thought more about this problem since. :/\n. Rebased on master, following the recently merged custom actions.\n. Rebased on master, following the recently merged custom actions.\n. My opinion on the 0000-00-00 00:00:00 value is that this value is only valid within mysql, not in the application land anyway. 00 doesn't make any sense for a date.\nMaybe the Doctrine\\DBAL\\Types\\DateTimeType should return null for this value, but that's not an EasyAdmin issue :) \n(I'm pretty sure you share this opinion, I'm only exposing the point)\nHowever, an issue with my current suggestion: if the Doctrine\\DBAL\\Types\\DateTimeType was able to return null for this value, the form will not display the null checkbox unless the metadata specify this field is nullable.\nEven if it does, how will the DBAL Type choose between the null or 0000-00-00 00:00:00 value to set in the database ?\nSo, I don't think we could nor should handle the 0000-00-00 00:00:00 at all. But indeed, I think the ability to set null for nullable fields is mandatory for an admin backend :)\n. My opinion on the 0000-00-00 00:00:00 value is that this value is only valid within mysql, not in the application land anyway. 00 doesn't make any sense for a date.\nMaybe the Doctrine\\DBAL\\Types\\DateTimeType should return null for this value, but that's not an EasyAdmin issue :) \n(I'm pretty sure you share this opinion, I'm only exposing the point)\nHowever, an issue with my current suggestion: if the Doctrine\\DBAL\\Types\\DateTimeType was able to return null for this value, the form will not display the null checkbox unless the metadata specify this field is nullable.\nEven if it does, how will the DBAL Type choose between the null or 0000-00-00 00:00:00 value to set in the database ?\nSo, I don't think we could nor should handle the 0000-00-00 00:00:00 at all. But indeed, I think the ability to set null for nullable fields is mandatory for an admin backend :)\n. I'm sorry about asking this, but would you mind consider #207 before merging this ? I would not rush anything, but I don't think I'll have time to rebase it in the next days. \nOf course it can wait more than a few days :smiley: \nHowever including #207 into this PR might be useful to ask ourself how to handle some easyadmin features properly if the developer chose to override the Resources/views/form/entity_form.html.twig template for instance. (The other solution for #207 was to create a custom formtype for date & time style fields and using it, but it has its own drawbacks)\nNice enhancements by the way !\n. I'm sorry about asking this, but would you mind consider #207 before merging this ? I would not rush anything, but I don't think I'll have time to rebase it in the next days. \nOf course it can wait more than a few days :smiley: \nHowever including #207 into this PR might be useful to ask ourself how to handle some easyadmin features properly if the developer chose to override the Resources/views/form/entity_form.html.twig template for instance. (The other solution for #207 was to create a custom formtype for date & time style fields and using it, but it has its own drawbacks)\nNice enhancements by the way !\n. :+1: \n. :+1: \n. Correct me if I'm wrong, but don't you think those kind of options will lead to heavy configurations where building a proper form type would be as quick, easy and appropriated ?\nI mean, we're not building a component to generate forms from yaml configuration files (should we ? :smile:).\nBut sure, it is really convenient for adding attributes only on some specific fields (which I admit will certainly be the most common use case, and not the mess that I'm supposing).\n@javiereguiluz : You mean the nullable property will provide a way to set null in the field from the form (by the best way depending on the field type) ? Anyway, if the field isn't nullable in the database, it will fail :/\nI think we can keep guessing it from metadata. (Unless the only purpose of this option will rather be to forbid setting null by setting explicitly the new nullable property to false)\n. @javiereguiluz : Definitively. But it is still safer to guess it from metadata at first.\nMy question: will those options have a default null value if not explicitly provided in the config ?\nE.g: the nullable option has 3 possible values : \n- false: do not provide a way to set null in the field\n- true: provide a way to set null, regardless of the field metadata (that's not our concerns)\n- null (default): guess from metadata\nThe same might be relevant for required and pattern options.\n. I had a use case for this in one of my applications, in which I extended the easyadmin layout for the whole backend. The easyadmin part was considered as a \"submodule\" of the admin backend, beside other parts like command execution, XLS export, application configuration, ...\nThe header logo link made sense for me to \"exit\" the easyadmin part in order to be redirected to the main admin dashboard page from where he could access anything else.\n. What if we need, for any reason, to create a new entity instance instead of using the current one in prepareEditEntityForPersist and prepareNewEntityForPersist ? (I don't have use-case in mind)\nHowever, the result wasn't even used until now, so... ^^'\n. @Pierstoval : Yup, I know ^^. I was only trying to guess the reason it was like that in the first place. But it seems you're right and there is no need to keep this as it.\n:+1: \n. @Pierstoval : Oh, yeah. I like those changes too. As you said, this is a BC break, but not a disturbing one. I don't think renaming those methods is a priority, but if it is accepted, I think it should be done in this very same PR. :)\n. It's awesome ! :heart:\nBut it doesn't allow to easily and visually compare values between records. For some small entities, I don't know. Maybe the old table would be preferable. \nPerhaps this feature should be a layout option (enabled by default) ?\n. @arukado-sama : Then, it seems that you added the id attribute to the form in your configuration, don't you ? Why would you have the id attribute as a form field ?\n. @javiereguiluz : Sure. I tried your changes on one of my backends, ~~and I still see the drop shadow~~. However, I'm unable to scroll, due to:\n``` diff\nbootstrap.min.css\n@media (min-width: 768px)\n.navbar-collapse.collapse {\n  display: block!important;\n-  height: auto!important;\n  padding-bottom: 0;\n-  overflow: visible!important;\n  visibility: visible!important;\n}\n```\nand\n``` diff\nadmin.css\n@media (min-width: 1200px)\nheader #header-nav {\nflex: 1;\n  height: 0;\n  margin: 0;\n-  overflow: hidden;\n  padding: 0 0 1em;\n  width: 222px;\n}\n```\nFor me, the problem is solved by replacing the following css block by:\n``` css\nheader #header-nav {\nflex: 1;\nheight: 0!important;\nmargin: 0;\noverflow: hidden;\noverflow-y: auto!important;\npadding: 0 0 1em;\nwidth: 222px;\n\n}\n```\n\n(Or see https://github.com/ogizanagi/EasyAdminBundle/commit/a1739605b33a57191261e956341b95a0d6930eaf)\n. NVM, I do not see the drop shadow either without those changes (I had some cache).\nI think this is related to the bootstrap.min.css setting height to auto. The admin.js is unable to guess the proper height nor scrolling (basically because there is no scrolling) and cannot add the drop-shadow class.\nAnyway, the above changes should do the trick :smile: \n. Response constants were only introduced in symfony 2.4 and above (http://api.symfony.com/2.4/Symfony/Component/HttpFoundation/Response.html).\nIf the target remains 2.3, we should avoid using those constants.\n. @javiereguiluz , @arukado-sama : Regarding this issue, we should probably use the url twig function instead of path to generate the referer ?\n. Hi!\nRe-thinking about this, I think @Pierstoval is right: we shouldn't enforce anything that is not purely necessary in the bundle. If the developer choose underscored entity names and consequently not to follow PHP conventions, it belongs to him.\nI suppose I was mainly suggesting this feature because I'd prefer having underscores entity identifiers (names) and template names, while I want to follow PHP conventions for my method names.\nAs I think proposing a new option to enable one or the other strategy might not be a good idea, I think we can close this, unless @javiereguiluz has a different opinion ?\n. Hi!\nRe-thinking about this, I think @Pierstoval is right: we shouldn't enforce anything that is not purely necessary in the bundle. If the developer choose underscored entity names and consequently not to follow PHP conventions, it belongs to him.\nI suppose I was mainly suggesting this feature because I'd prefer having underscores entity identifiers (names) and template names, while I want to follow PHP conventions for my method names.\nAs I think proposing a new option to enable one or the other strategy might not be a good idea, I think we can close this, unless @javiereguiluz has a different opinion ?\n. :+1: \nIs there even a reason why you kept entity_name ?\nMight be helpful to add a warning in UPGRADE.md about changing entity_name to entity_label in translation files ?\n. :+1: \nIs there even a reason why you kept entity_name ?\nMight be helpful to add a warning in UPGRADE.md about changing entity_name to entity_label in translation files ?\n. @Pierstoval : What are you trying to achieve ? Having a non-doctrine/unmapped entity field in the form generated by easyadmin in AdminController::createEntityForm ?\nActually, as you said, fieldType doesn't seem to be used elsewhere in the bundle, but I guessed if you don't have it, that' because there is no doctrine metadata for this field. Which sounds quite legit as it's indeed not a doctrine handled field. Then the AdminController::createEntityForm will not be able to build the form properly.\nAre you suggesting that the form generation provided by EasyAdmin should allow to build a form with those unmapped fields ? What is the purpose of those fields ? Mapping form events on them in order to update real entity fields according to the submitted values ? Handle file upload ? Aren't you able to do that by adding those fields to the form manually by overriding the proper methods in AdminController ?\nSorry if I misunderstood your issue. But anyway, if I did understand, I think you're right: EasyAdmin should not fail in such cases. We should be able to use the config in order to generate the form and only have to attach events in the AdminController.\nBTW, is it me, or is there something wrong in the doc about form configuration: \n\n\nproperty (mandatory): the name of the related Doctrine property. It can be a real property or a \"virtual property\" based on an entity method. This is the only mandatory option when using the expanded configuration format.\n\n\nAFAIK, it only handle doctrine properties. Not \"virtual properties\", and least of all, based on an entity method ? \"Virtual properties\" are only about listing / show, right ? \n. @Pierstoval : What are you trying to achieve ? Having a non-doctrine/unmapped entity field in the form generated by easyadmin in AdminController::createEntityForm ?\nActually, as you said, fieldType doesn't seem to be used elsewhere in the bundle, but I guessed if you don't have it, that' because there is no doctrine metadata for this field. Which sounds quite legit as it's indeed not a doctrine handled field. Then the AdminController::createEntityForm will not be able to build the form properly.\nAre you suggesting that the form generation provided by EasyAdmin should allow to build a form with those unmapped fields ? What is the purpose of those fields ? Mapping form events on them in order to update real entity fields according to the submitted values ? Handle file upload ? Aren't you able to do that by adding those fields to the form manually by overriding the proper methods in AdminController ?\nSorry if I misunderstood your issue. But anyway, if I did understand, I think you're right: EasyAdmin should not fail in such cases. We should be able to use the config in order to generate the form and only have to attach events in the AdminController.\nBTW, is it me, or is there something wrong in the doc about form configuration: \n\n\nproperty (mandatory): the name of the related Doctrine property. It can be a real property or a \"virtual property\" based on an entity method. This is the only mandatory option when using the expanded configuration format.\n\n\nAFAIK, it only handle doctrine properties. Not \"virtual properties\", and least of all, based on an entity method ? \"Virtual properties\" are only about listing / show, right ? \n. Contributing to the trending topic :smile: (I had a quick look over other files, nothing to report)\n. Contributing to the trending topic :smile: (I had a quick look over other files, nothing to report)\n. If your are not using Doctrine relations, you might eventually use the new events like EasyAdminEvents::POST_LIST and EasyAdminEvents::POST_SHOW in order to load your Project instance for each Client, though you'll have some issue to render an extra field corresponding to your project instance, unless you add a virtual property for it in your user class...\nMaybe easyadmin should allow to specify virtual fields appart from those defined in the entity. Fields that would be populated with your own logic, after the entity is loaded, in AdminController and event listeners, and fully customizable from the template.\nThe configuration will only allow to control the order and labels of such fields.\n. If your are not using Doctrine relations, you might eventually use the new events like EasyAdminEvents::POST_LIST and EasyAdminEvents::POST_SHOW in order to load your Project instance for each Client, though you'll have some issue to render an extra field corresponding to your project instance, unless you add a virtual property for it in your user class...\nMaybe easyadmin should allow to specify virtual fields appart from those defined in the entity. Fields that would be populated with your own logic, after the entity is loaded, in AdminController and event listeners, and fully customizable from the template.\nThe configuration will only allow to control the order and labels of such fields.\n. Anyway, thing are not always as simple as with Doctrine relations. Some relations might be unidirectional and need to use a custom method in a repository, or we might want to include other data based on custom queries, which could not be achieved using virtual property currently.\nActually, I don't think this is particularly complex to implement, but we need to choose the best way to achieve this from the easy_admin configuration and/or controller override.\n. @Pierstoval : Actually, I'm talking about the list and view pages :smile_cat: \n. Of course, we can override pretty everything now. But I'm also talking of a build-in functionality related to virtual properties, where we'll search for a method in another service, instead of an entity property/method.\nOr the ability to add fields and values when using EasyAdminEvents::POST_LIST and EasyAdminEvents::POST_SHOW events. \nWe could imagine that the event will allow to add extra fields and associate a callable to execute in order to get the value for given entity:\n``` php\nclass EasyAdminEvent extends Event\n{\n   protected $additionalFields = array();\n   [...]\npublic function addAdditionalField($label, callable $callable)\n   {\n       $this->additionalFields[$label] = $callable;\n   }\n}\n```\nThen, the AdminController will retrieve those additional fields and pass them to the view in order to display them, by calling the callable with the entity as argument.\nIf those fields are described in the easy_admin config and declared as extra_field or whatever the name we choose, they will be rendered respecting the order described in the configuration.\nWe could simply imagine a new property for fields declared as extra_field as well: service, which will call a method in the given service.\nFinally, for the rendering, define a template where to search for the given field template, named accordingly to the entity + field name.\nNote that these are only on-the-fly suggestions. I didn't think further about it before and it's totally sketchy.\n. @arukado-sama : Did you implement the __toString() method in your ClientCategory class ?\n. In your ClientCategory class, add the following method:\nphp\npublic function __toString() \n{\n   return 'The_string_representation_of_your_entity';\n   //For instance (I don't know your field names):\n   // return $this->name;\n}\n. That's certainly because you're trying to use a field in your __toString() that isn't available, or anything else throwing an exception.\nYou can also have a look at Virtual Properties\n. Tagged services are mainly meant to be used in order to extend capabilities of a bundle and there is nothing wrong in the things you exposed above, except that I did not understand this:\n\nThis way, we can easily create standalone bundles directly plugged to EasyAdmin.\n\nYou are talking about services that will be totally tied to your entities, business logic and the tools used for their implementation (FOSUser manager, Sonata media manager, ...). \nI don't see how you are increasing EasyAdmin extensibility by such non-reusable services ?\n\nI could put this logic in listeners, but the problem with listeners is that if you have, for instance, 4 listeners for 4 entities, and if they all listen to the POST_NEW, POST_EDIT, POST_DELETE and POST_LIST ...\n\nSubscribers helps a little.\nI personally don't have anything against this feature, but, why not having a controller key under each entity in configuration (the value will be the id of your service), and simply use it if defined for existing actions ? \nDo we really need to use compilerpasses and tagged services for this feature, considering that it doesn't really allow to extend the bundle capabilities, but only hook somewhere your app-dedicated logic in the easyadmin flow ?\n. Tagged services are mainly meant to be used in order to extend capabilities of a bundle and there is nothing wrong in the things you exposed above, except that I did not understand this:\n\nThis way, we can easily create standalone bundles directly plugged to EasyAdmin.\n\nYou are talking about services that will be totally tied to your entities, business logic and the tools used for their implementation (FOSUser manager, Sonata media manager, ...). \nI don't see how you are increasing EasyAdmin extensibility by such non-reusable services ?\n\nI could put this logic in listeners, but the problem with listeners is that if you have, for instance, 4 listeners for 4 entities, and if they all listen to the POST_NEW, POST_EDIT, POST_DELETE and POST_LIST ...\n\nSubscribers helps a little.\nI personally don't have anything against this feature, but, why not having a controller key under each entity in configuration (the value will be the id of your service), and simply use it if defined for existing actions ? \nDo we really need to use compilerpasses and tagged services for this feature, considering that it doesn't really allow to extend the bundle capabilities, but only hook somewhere your app-dedicated logic in the easyadmin flow ?\n. @Pierstoval : using the container-based infrastructure with Travis, this PR allows to define a shared directory where will be your composer cache (just like you should do with your local docker containers). Then, building many containers, with different php versions for instance, will be faster, as a composer install will not require to download again each dependencies.\nAlso see:\n- http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/\n- http://docs.travis-ci.com/user/workers/container-based-infrastructure/\n- http://docs.travis-ci.com/user/caching/\n. @Pierstoval : using the container-based infrastructure with Travis, this PR allows to define a shared directory where will be your composer cache (just like you should do with your local docker containers). Then, building many containers, with different php versions for instance, will be faster, as a composer install will not require to download again each dependencies.\nAlso see:\n- http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/\n- http://docs.travis-ci.com/user/workers/container-based-infrastructure/\n- http://docs.travis-ci.com/user/caching/\n. Related to #267 and #217 .\nI'm personally :+1: for this most complete solution. And even more: I'd like to have the possibility to specify options for the parent form too (validation_groups for instance).\n. :+1: about form_options and the same option should be available for the parent form. :)\n. @javiereguiluz : I'm not sure it is related, but does it solve https://github.com/javiereguiluz/EasyAdminBundle/issues/272#issuecomment-100807829 ?\n. @javiereguiluz : I don't have the time to investigate further right now (but I will the afternoon), but here is the generated css with 2.7:\n``` css\nheader .navbar-toggle i { color: \\23 123456; font-size: 21px; text-align: right; }\n```\nWith 2.6:\n``` css\nheader .navbar-toggle i { color: #123456; font-size: 21px; text-align: right; }\n```\n. @Pierstoval : ~~I tried (very quickly, I'm kind in a hurry ^^'), it didn't work.~~\n. @Pierstoval : Actually, it works. As I said, I was quick, and didn't search and replace everything...\nI'd like to know what has changed in order to produce that in 2.7 :confused: \n. @WouterJ : Thank you for clarifying the situation !\nI agree with @Pierstoval , I think it should be mentioned in the UPGRADE files, don't you think ?\n. Hi. :)\nI wasn't able to understand your problem from the elements you exposed above. \nMay I allow myself to ask you to explain your issue (with more details) in your native language if you feel more comfortable ?\nAs far as I remember, you speak spanish. So even if I'm not able to fully understand you, I hope not being wrong saying that at least @javiereguiluz will be pleased to help you and/or clarify your problem.\n. :+1: \n@javiereguiluz : I think this should be merged before #305 in order to have a great view of what is achieved and what's remaining to do within this PR :smiley_cat: \n. Actually, you should be able to scroll. This was already handled before. I'll need to test the last version. \nI don't see the drop shadow neither (which should be visible on the last menu item ; is something happening when you resize the page in height ?\n. @arukado-sama : I confirm the last stable version is properly working. Do you load additional css ?\n. @arukado-sama : Is PH Projet the last item ?\nSee #310\n. @arukado-sama : Indeed: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/default/layout.html.twig#L30\nTry to disable this javascript.\n. @arukado-sama : Indeed: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/default/layout.html.twig#L30\nTry to disable this javascript.\n. @arukado-sama : This is very strange...\nWould you mind try the EasyAdminDemo ?\nYou should replace the easyadmin version in composer.json by the last release.\n. @arukado-sama : If you encounter the same issue using the demo, this issue isn't related to your app, no ? Did you tried the easyadmin demo only replacing the easyadminbundle by the dev-master/latest release, without altering anything else ?\n. What I meant, is trying the EasyAdmin demo as a standalone application, not within yours, in order to try a fresh and known working application using easyadmin, without any additional assets. ^^'\n. @arukado-sama : Did you try another browser ?\nRegarding the presumed Symfony issue, which version of symfony are you using ?\n. @Pierstoval : Ok. Thanks for clarifying this :smiley: \nI'm not sure I personally agree with this feature, but anyway, IMO, the debug page should not change. Everything is handled perfectly with the HttpKernel Exception listener and the TwigBundle. There is no need to duplicate this logic.\n. You might have planned this, but : \n- If the exception is an HttpException, you should display the status code and status text instead of the Exception code only.\n- If it isn't an HttpException, you should transform it and display it as a 500.\n- On the production page, you should display anything else than the status code and text + anything that could help the user (not the developper, so displaying any exception is wrong) to understand what happened.\nI'll see and try your next suggestions before making my opinion. ^^\n. @arukado-sama : Do you have the indexAction method in your controller ? : \nphp\n    /**\n     * @Route(\"/\", name=\"admin\")\n     */\n    public function indexAction(Request $request)\n    {\n        return parent::indexAction($request);\n    }\nand registered your controller and its routing annotations in routing.yml ? : \n``` yaml\nrouting.yml\napp_easy_admin:\n    resource: @AppBundle/Controller/AdminController.php\n    type:     annotation\n    prefix:   /admin\n``\n. @arukado-sama : Yes indeed. You need to tell the routing component that this new path for/adminexists and is now pointing to your own controller, not easyadmin default one.\n@javiereguiluz : a section about routing is missing from this part of the documentation (loading the annotations or creating a single route toCustomController::indexAction`).\n. @Zubis : Would you mind trying to apply the fix in #332 ?\n. @javiereguiluz : Yes, this is quite useful when dealing with more complex backends, where you need to show more than the basic entities informations in a list. Because entities themselves doesn't mean much alone and need to be connected to other services, or are way too decoupled to be easily identifiable (and no association is possible, because they don't know anything about their relations).\nIn one of my applications, I had a sms/email alert system that could be plugged to any entity and events. To do so, those alerts doesn't know anything about the entity they belong to, nor the conditions to be triggered. \nListing those alerts alone makes no sense, as you have no way to identify them only with their informations.\nYou can also imagine an application connected to your CI, listing projects and commits. You might want to associate them with real time informations, like the jobs states, code coverage, tests and insights results, ...\nOr a booking system storing informations about the client flights/trains, allowing to identify them on an external webservice, and retrieve their state (canceled/delayed, ...).\nAs soon as you need something more than a CRUD backend, this kind of feature will be needed.\nHowever, as I said, this is clearly not a priority feature ^^\nI know this is already doable by overriding the templates, but honestly, though I appreciate this flexibility, I personally don't like much the system, as easy admin views are quite \"complex\" and might change with new features and break/limit the backend.\n. @richwandell : The sample you expose is about virtual properties, which could at best show some \"transformed\" properties (or not) that belongs to the entity. No more.\nYour entities hold data. But the way data are related, what your application tries to extract from those data isn't discoverable solely by your entities. This part of the business logic belongs to your services. And that's the point of this feature request: doing more than exposing a CRUD backend on data, by allowing to handle business logic of the application, and identify properly data and what they mean.\nThis has already started with custom actions, allowing to execute arbitrary operations on our entities.\nNow the presentation layer should also allow to enhance the data display according to the application purpose.\n. Then you'll have a potential issue with the property option (same for Collections and type option).\nI'm not sure exposing the type options directly in the field is the best :/\n. I mean we don't know what will be the next features and available options, and might encounter the same naming issues. A few segmentation in easy_admin config is not bad IMO.\nBut I agree class is a very bad name and this PR is legit.\n. That will slightly complicate the implementation for us, if we need to determine what are type options and what are our own features options. I don't think it will be clearer in users' mind either. :/\nAlso, isn't the css_class option now redundant ? We can set it thought the attr option:\nphp\nfields:\n    - 'id'\n    - { property: 'email', type: 'email', trim: true }\n    - { property: 'interests', expanded: true, multiple: true, attr: { css: 'inline-checkbox' } }\n\nI don't care about the property one, because we already promote the __toString() practice\n\nBut actually, using __toString() isn't really a good practice... Being able to use the property would be great IMO.\n. Well, you might be right. But, despite the fact I shared this opinion, as the current ways of creating a form from a proper form class with EasyAdmin aren't really trivial, I don't understand why we should dispense ourselves of a simple way to achieve it, just in order to economize one legitimate configuration level. :smile: \nWill you really ask a user to create it's own form class or tweak the easy admin generated form only because he has one field which needs the property option ? (Because the __toString() method is already used elsewhere and doesn't match this use case, for instance)\n. About the css route name (_easyadmin_render_css), I tend to think having every EasyAdmin routes under the same prefix would be better.\nWhat do you think ?\n\nWhat is wrong with Travis & Php 5.3 ?\n. @Pierstoval : But are you in favor of keeping a BC layer until next major release ? Or is it useless ?\n. @Pierstoval : But are you in favor of keeping a BC layer until next major release ? Or is it useless ?\n. If the label is only used for links and buttons, we could eventually remove those lines, in order to authorize null values.\nBut actually, \"label\" is kind of generic, and might be use elsewhere. So allowing null for something that could be an important text element like a title is problematic. :/\n. @arukado-sama : I can suggest you to try https://github.com/javiereguiluz/EasyAdminBundle/pull/347.\nOther spacing is due to the margin-right applied on body.list table tbody td.actions a.\n. @arukado-sama : I can suggest you to try https://github.com/javiereguiluz/EasyAdminBundle/pull/347.\nOther spacing is due to the margin-right applied on body.list table tbody td.actions a.\n. @arukado-sama : Are you sure there is absolutely no change ? :confused: I've tested it with the demo and successfully remove whitespaces. What remain is css.\n. @arukado-sama : Are you sure there is absolutely no change ? :confused: I've tested it with the demo and successfully remove whitespaces. What remain is css.\n. In order to allow empty dates, you must disable the date field, through javascript, when clicking on a checkbox for instance. A disabled field isn't submitted and replaced by null in the Symfony form handling.\nHere is a PR about it: https://github.com/javiereguiluz/EasyAdminBundle/pull/207\nBut I've abandoned it for now, after the numerous changes introduced in the last weeks, and above all because we need to think about a more generic solution, applicable to any nullable field.\n. @javiereguiluz : Actually, @manuelj555 's suggestion makes sense to me: false in order to disable the label would be better, and more consistent with Symfony, don't you think ? (But indeed, an empty string should remain an empty string...)\n. @javiereguiluz : Actually, @manuelj555 's suggestion makes sense to me: false in order to disable the label would be better, and more consistent with Symfony, don't you think ? (But indeed, an empty string should remain an empty string...)\n. But what is the right thing when trying to print false in Twig templates ?\nActually, it will render nothing... So... I... guess there is no debate. :smile_cat: \nExcept that I still think false is more semantic and should be mentioned primarily in the documentation update :)\nfalse: opt-out, \"Disable the label rendering please.\"\nempty string: \"Well, I'll be pleased if you could print nothing.\"\nBut I'm quibbling, I know. ^^\n. But what is the right thing when trying to print false in Twig templates ?\nActually, it will render nothing... So... I... guess there is no debate. :smile_cat: \nExcept that I still think false is more semantic and should be mentioned primarily in the documentation update :)\nfalse: opt-out, \"Disable the label rendering please.\"\nempty string: \"Well, I'll be pleased if you could print nothing.\"\nBut I'm quibbling, I know. ^^\n. Nice :+1: \nDoes it worth adding a test for false ?\n. Nice :+1: \nDoes it worth adding a test for false ?\n. @Pierstoval : Remembered me of your PR: https://github.com/symfony/symfony/pull/13939\nIt's indeed because the TwigBridge can be used with older versions of Symfony.\n. I think we can close it for now, as symfony/symfony#14816 just got merged (And AFAIK, a new symfony release will be tagged ASAP).\n. That's something entity specific, and cannot be applied globally on a backend generator. You'll need to create your own action.\nBut that's the kind of feature where allowing third-party bundles to extend the EasyAdmin actions would have been useful in term of reusability.\n. :+1: for this straightforward solution\n. It would be great indeed.\nIt might be applicable to other templates vars or function calls.\n. :+1: \n. BTW :+1: \nCurrent methods are almost useless IMO :confused: . We should even replace them by methods allowing to manipulate the FormBuilder instance.\n. @Pierstoval : I think your proposal to add methods allowing to manipulate the FormBuilder instead of having the current almost useless createNewForm/createEditForm/create*NewForm, ... returning a form instance will be more appropriated. (I don't know what we were thinking about when creating those methods... :stuck_out_tongue_closed_eyes: )\nThe best option to have a fully customisable form however, would be to have the possibility of defining a form type by its service id in the easy admin configuration.\n. First, use constants:\nphp\npublic static function getSubscribedEvents()\n{\n    return array(\n      EasyAdminEvents::POST_LIST => array('onPostList'),\n    );\n}\nThen, I advise you to have a look at kernel-event-subscriber in order to know how to register your event subscriber in Symfony Standard Edition :)\n. Actually, to complete my response:\nI think you've read the EventSubscriber component documentation. Using the component within the Symfony Standard Edition instead of the component alone is quite different: Using Symfony SE, you already have a single instance of an EventDispatcher stored in your application container. \nThis instance is commonly used to dispatch all events within your application, by accessing it through the container.\nWhat you did in your controller is creating a new instance of an EventDispatcher and registering the EventSubscriber. But actually, your instance of event dispatcher is not the same instance as in the container and is never used in order to dispatch the EasyAdminEvents::POST_LIST event. \nSo your Subscriber was never called.\n. Absolutely. With the kernel.event_subscriber tag : \nyaml\nservices:\n    app.subscriber.easy_admin:\n        class: AppBundle\\EventListener\\EasyAdminSubscriber\n        tags:\n            - { name: kernel.event_subscriber }\n. @Pierstoval : Issue is already closed :smile: \n. If I understand correctly, you display the classic Twig debug page in dev env, but in prod override the user error pages to show how should be configured EasyAdmin bundle ?\nIMO, it does not makes sense, the user does not care about the application configuration or whatever the error is. :/\n. If I understand correctly, you display the classic Twig debug page in dev env, but in prod override the user error pages to show how should be configured EasyAdmin bundle ?\nIMO, it does not makes sense, the user does not care about the application configuration or whatever the error is. :/\n. IMO, error pages should be better configured by the developper, in order to show a comprehensive message for the user, but no technical elements should be dumped.\nThis is the work of your loggers. And yes, you could have a context within your logs. So I really think it's sufficient :/\nHowever @javiereguiluz arguments are acceptable I think, despite the fact I'm not fan of restricting the target of this bundle :/\n. IMO, error pages should be better configured by the developper, in order to show a comprehensive message for the user, but no technical elements should be dumped.\nThis is the work of your loggers. And yes, you could have a context within your logs. So I really think it's sufficient :/\nHowever @javiereguiluz arguments are acceptable I think, despite the fact I'm not fan of restricting the target of this bundle :/\n. What do you think about including $entityName, $item, & $fieldMetadata into $templateParameters ? \nPlus adding a custom fieldType (or allow any value to defined custom types) allowing to do even more extreme customizations ? (The default template would simply render a string, but the developper will be able to render anything according to its own logic)\n. yaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            list:\n                fields:\n                    - 'id'\n                    - { property: 'is_eligible',  type: 'boolean' }\n                    - { property: 'last_contact', type: 'datetime' }\n                    - { property: 'my_custom_field', type: 'custom', my_custom_options: { ... } }\nThe Customer list page will search for the default/field_custom.html.twig template when trying to render the my_custom_field field (Template which can be overridden as well as any other templates) and allow to access the fields metadata defined in easy_admin config (my_custom_options) in order to do anything with the field and have multiple configurations options. \nWe could also imagine developers would create their own custom type on the fly:\n``` yaml\n...\nfields:\n    - 'id'\n    # ...\n    - { property: 'my_custom_field', type: 'my_custom_type', my_custom_options: { ... } }\n\n```\nwill search for the default/field_my_custom_type.html.twig template.\nAlso, passing fieldMetadata to the template will allow to add translation capabilities on the fly to existing type for instance:\nyaml\nPerson:\n  label: People\n  class: MyApp\\ContactBundle\\Entity\\Person\n  list: \n    fields: \n        - 'firstname' \n        - 'lastname'\n        - { property: 'title', type: 'string', trans_options: { catalogue: 'messages', placeholders: { ... } }\n    # ...\n``` twig\n{# app/Resources/views/easy_admin/field_string.html.twig #}\n{{ value|trans(metadata.trans_options.placeholders, metadata.trans_options.catalogue) }}\n```\n. @Pierstoval : \n\ntype (optional): the type of data displayed in the list, search and show views and the form widget displayed in the edit and new views.\n\nHere, I'm only talking about list/search and show views. It has nothing to do with form types. ^^\n. Also, regarding this PR, it feels really strange to have only the fieldName passed to templates, as a field might be named the same on many entities. So, unless the template is overridden for this entity only, this is not a good way to identify the field to customize.\n. @Pierstoval : it already differs:\n\nThese are the supported types:\n- All the Symfony Form types\n- Custom EasyAdmin types:\n  - image, displays inline images in the list, search and show views (as explained later in this chapter).\n  - toggle, displays a boolean value as a flip switch in the list and search views (as explained later in this chapter).\n. > Using some kind of app/Resources/easy_admin/{EntityName}/{action}/{fieldName}.html.twig template and/or app/Resources/easy_admin/{action}/{fieldName}.html.twig (for global field-name override, like createdAt for instance) sounds like an easier way to develop the feature, and it also fits to every action.\n\nActually, I hear you, and I'm not against this nomenclature for templates. But, for myself, I will (almost) never use it. I prefer to have one single template per field type, overriding for every entities in the backend, and having view, entity, and fieldConfiguration/Metadata injected in it, in order to choose how it will be rendered.\nIt feels more flexible to me, and way less heavy. And I don't see why we should force developers to use a heavier way, when things could be kept simple.\n\nit differs but only for list/search/show views\n\nAnd it's exactly my suggestion's scope too. We already have form themes for edit/new views.\nI don't see that as exceptions: form widgets and fields rendering is two very different things IMHO.\n. > Actually in what I propose you can have one single\nBut you do not want to allow declaring on-the-fly types, and pass fieldConfiguration to the template, right ? So it will be quite limited.\nAlso, in app/Resources/easy_admin/{action}/{fieldName}.html.twig, is fieldName the name of the entity property, or the field data type ?\n\nObviously, these are different things, but we can still add an abstraction layer between feature and rendering that works the same way for both forms, list and show views.\n\nI'm not sure we should. The only common thing is the name we chose for it in the configuration (i.e: type). Beside that, it does not have much more in common, and I think it'll be wrong to induce people into thinking it's the same things.\n. > The property name, not the field type.\n\n...\nThen you would create the file app/Resources/easy_admin/list/createdAt.html.twig and render the field with its new  tag for all entities that use this property.\n\nOverriding a field template by the property name is strange IMO (That's what I said above). \nThat's why I prefer having new custom dataTypes on the fly, and eventually options to configure them per field.\nThen I can create a app/Resources/easy_admin/timestampable_field.html.twig for my timestampable field types, and passe format as options (of course, this is a bad example, this field type already exists).\nTherefore, every field configured with the timestampable type in list/show/search views will be rendered with this template.\nAlso, if you do not like the on-the-fly dataType suggestion, at least provide the custom one and pass any useful vars to the template. fieldName is not enough, anyway.\n. You can have a look at #379 for the implementation and samples.\n. @Pierstoval : Thanks for your review. I updated the samples to change catalogue by domain.\n\n~~it allows you to add many datas in config that will be present in your twig file.~~\n\n~~That's the powerfulness of this feature, but actually, we could limit those datas to a type_options key (for classic types we'll switch back setting and using the appropriated options (i.e: format) in the TwigExtension).\nBut honestly, I won't see any benefit.~~\n. > Just in order to explain myself, I just think a more \"standard\" solution could be better. Sending all the metadatas to the view is :+1: :+1: , but allowing the user to create on-the-fly dataTypes does not sound good to me. We should implement something for all actions/views instead of only show and list...\nThe second alternative I mentioned earlier, is to have a carryall custom predefined datatype, which will hold every datatype implementation the developper needs, into one template...might not be pleasant. \n\nWe should implement something for all actions/views instead of only show and list...\n\nJust to mention it here too: \nI'm not sure we should. \nThe only common thing is the name we chose for it in the configuration (i.e: \"type\"). \nBeside that, it does not have much more in common, and I think it'll be wrong to induce people into thinking it's the same things. \nWe already have a clear distinction in the Configurator between the dataType and formType.\nFor custom form types, people will use the form themes and type_option.\n. This feature used to exist however (a link to remove an item in a collection #451), but it seems no longer to work.\n. This feature used to exist however (a link to remove an item in a collection #451), but it seems no longer to work.\n. Actually the thing is that it currently might only work for compound types... So using Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType which is not compound does not show the delete link :(\nSo this feature does not work for an array of string as you tried, but only for embedded entities.\n. Actually the thing is that it currently might only work for compound types... So using Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType which is not compound does not show the delete link :(\nSo this feature does not work for an array of string as you tried, but only for embedded entities.\n. See #673 \n. See #673 \n. I cannot think about a solution for now: the height: 0 rule is essential first for scrolling to work, second for the footer positioning, and thus it's removal would not simply solve the issue. :/\nHowever, for IE9, we could add a special css rule to reset the height property. But then, if the backend handles many entities, cannot scroll, unless a bit of javascript code computes the #header-nav needed height (window.height - .navbar-header height - #header-footer height).\nIE9 would also need the following rule in order to have the footer properly left positioned (not like in the screenshot above):\ncss\n@media (min-width: 1200px) {\n    #header #header-footer {\n      position: relative;\n      left: -15px;\n    }\n}\n. @javiereguiluz : Great ! Thanks for taking care of it :smile: \n@Pierstoval : \n\nI keep thinking creating types on the fly is a bad idea and can also be confusing for users\n\nI cannot understand what is still bothering you outside the confusion there is between form types and data types, that we tend to not make worse, by not mutualizing too much code or workflow between the two of them, and establishing a more and more clearer distinction. :smile_cat: \nAlso, if the \"on-fly-capabilty\" is too much magic, would you prefer having the list of custom dataTypes declared in the easy_admin config ? It does not bring much, except the ability to eventually change the template location in the config:\nyaml\neasy_admin:\n   custom_data_types:\n        my_custom_type: { template: \"...\" }\nRegistering data types through tagged services ? Actually, data types are currently too trivial to get any benefit of it, and will only get heavier to declare.\n. @javiereguiluz : Great ! Thanks for taking care of it :smile: \n@Pierstoval : \n\nI keep thinking creating types on the fly is a bad idea and can also be confusing for users\n\nI cannot understand what is still bothering you outside the confusion there is between form types and data types, that we tend to not make worse, by not mutualizing too much code or workflow between the two of them, and establishing a more and more clearer distinction. :smile_cat: \nAlso, if the \"on-fly-capabilty\" is too much magic, would you prefer having the list of custom dataTypes declared in the easy_admin config ? It does not bring much, except the ability to eventually change the template location in the config:\nyaml\neasy_admin:\n   custom_data_types:\n        my_custom_type: { template: \"...\" }\nRegistering data types through tagged services ? Actually, data types are currently too trivial to get any benefit of it, and will only get heavier to declare.\n. > This way, it can be used for every action [...]\nBut I don't want that to be used for every action. Those templates are only for rendering data types, which are not in use in edit and new views which use form types.\nA template doing both will be kind of ugly, as they are two very different things.\nTo change the form type template, use form themes. \nThe problem however, is that we miss a way to identify the current entity in the form themes. Which could be solved by creating an EasyAdminFormType where will belong the form fields generation rather than generating it in the controller. \nThus, the form name will change accordingly to the entity, and form themes can be overridden per entity. \nPlus we could pass to the FormView the different useful vars: $action, $entity, \u00ectem, ...\nBonus: Using a proper form type to generate forms is the occasion to review the way we allow to tweak the form, by taking benefit of the FormEvents and dispatching our custom events, wether than creating/overriding a method in the controller.\n. > This way, it can be used for every action [...]\nBut I don't want that to be used for every action. Those templates are only for rendering data types, which are not in use in edit and new views which use form types.\nA template doing both will be kind of ugly, as they are two very different things.\nTo change the form type template, use form themes. \nThe problem however, is that we miss a way to identify the current entity in the form themes. Which could be solved by creating an EasyAdminFormType where will belong the form fields generation rather than generating it in the controller. \nThus, the form name will change accordingly to the entity, and form themes can be overridden per entity. \nPlus we could pass to the FormView the different useful vars: $action, $entity, \u00ectem, ...\nBonus: Using a proper form type to generate forms is the occasion to review the way we allow to tweak the form, by taking benefit of the FormEvents and dispatching our custom events, wether than creating/overriding a method in the controller.\n. > The main problem I see with the on-the-fly field types is that it can collide with our own custom types. Right now we define image and toggle, but in 2 years we may define 10 custom types.\nThat's only a matter of naming, and it isn't a big deal. Right now third-party bundles provide many symfony custom form types, and there isn't so much collision.\nHowever, the template idea seems a good one. :+1: \nWill the dataType of the field have a specific value then, or will it keep be guessed ?\n. > The main problem I see with the on-the-fly field types is that it can collide with our own custom types. Right now we define image and toggle, but in 2 years we may define 10 custom types.\nThat's only a matter of naming, and it isn't a big deal. Right now third-party bundles provide many symfony custom form types, and there isn't so much collision.\nHowever, the template idea seems a good one. :+1: \nWill the dataType of the field have a specific value then, or will it keep be guessed ?\n. Sure, but why not setting the dataType to custom, or whatever is chosen, if the guessed type does not make any sense ? \nIt might have a utility one day, does not cost anything, and avoid slightly modifying the Twig extension to avoid entering into other data type cases. \nThus, custom fields will remains being a proper dataType with an additionnal template option.  :smiley: \n. Sure, but why not setting the dataType to custom, or whatever is chosen, if the guessed type does not make any sense ? \nIt might have a utility one day, does not cost anything, and avoid slightly modifying the Twig extension to avoid entering into other data type cases. \nThus, custom fields will remains being a proper dataType with an additionnal template option.  :smiley: \n. @javiereguiluz : Actually, I think @arukado-sama is talking about having the sweet toggle widgets we have for booleans in list and search views as a Symfony form type / form theme for boolean fields, in edit and new views.\n. I think amazing articles like this one should be referenced in an \"External / Other resources\" section on the main README.md. \n. Nice ! :+1: \n. @javiereguiluz : Also, we should be able to choose which widget to use. Sometime checkboxes or radio buttons might be more appropriated.\nBut we talked about all of those problematics in the mentioned issue :smile: \n. @javiereguiluz : disabled is only a pseudo-class css selector for the html disabled property, not a css property actually. \nSo it won't work.\nYou might use js for this until type_options is available in the fields config.\n. @xabbuh : I totally meant toggle :smile: \n. @javiereguiluz : I don't mind at all. The better it describes the feature, the better it is. display_as might indeed be more descriptive, but I personally prefer widget to be more concise :smile: \nA quick poll might be useful.\n. Actually it was only requiring needed components before, but it was change in https://github.com/Pierstoval/EasyAdminBundle/commit/3884602de1f05d245e52d1d74b9abfc409f2c397, which is part of the https://github.com/javiereguiluz/EasyAdminBundle/pull/270 PR.\nAs the commit message mention it:\n\nMost users will certainly use the standard edition, and this\nbundle is not incompatible with other apps like eZ Publish.\nSo relying on the whole framework is better for configuring\nand testing EasyAdmin.\n\nIs there any valid use case where the whole framework won't be needed to use some parts of the EasyAdminBundle?\n. As the entity section in the configuration is a variableNode, you can add a em option per entity, allowing to set the entity manager to use, and indeed replace/decorate the inspector service. (However, this is only in order to retrieve metadata, so I think it won't be sufficient)\nYou can also provide a PR to handle this natively on next versions of the bundle. I think it makes sense. :smile: \n. Great ! \nRegarding the configuration panel, do you think you can use the var dumper's output and javascript to display it ? (in order to collapse/expand and navigate into the configuration easily)\nBut what about printing the current entity configuration if available (from the Request and Configurator) ? Otherwise, a static dump of the configuration does not makes really sense for a collector.\n. @Pierstoval : The data collectors are development features too, so I don't really understand your comment.\nBut I indeed forget about the 2.3 version.\n\nWouldn't it be useful to show computed elements for the user to understand how some fields are analyzed?\nFor example, show what the user specified for each field, and show the result of the flexible configuration system based on the user's datas.\n\nFor sure, I maintain that a static configuration dump does not make sense for a collector, so it should brings something to the user per request.\n. @javiereguiluz : see my comment about this issue: https://github.com/javiereguiluz/EasyAdminBundle/pull/438#issuecomment-138384007\nHowever, it's actually strange we didn't get this issue before with the current composer.json :confused: \n. Because same as also checks the type: http://twigfiddle.com/vhm4ch (If that was the question ?)\n. @Pierstoval : On the contrary: \n- In the first example, I test if 0 is strictly equal to false, which isn't, because of the type check.\n  So it returns ok (because it is the expected behavior).\n- In the second sample, I check if 0 is equal to false, which is true, because there is no type check. \n  So it returns ko (because it is wrong, most of the time not the expected behavior).\nsame as is the equivalent of PHP ===.\n. @Pierstoval : I understand why this is confusing :smile: \nko in this case would actually meant the \"test\" failed as it doesn't match the expected behavior.\nI updated the fiddle to be more obvious in case someone get back on this.\n. @Pierstoval : I don't think it is the code executed in @sebastianlp case actually, as he says it works when overriding the field_array template (so it's not the label_empty one) :confused: \nBut I didn't investigate further.\n. Well, it fails for the --prefer-lowest flagged build, because the mentioned commit has been introduced since v2.3.33 version and up only.\nInstalled version of symfony/http-kernel is v2.3.0 in Travis for this build.\n. great :smiley: \n. Would at least hiding the translationception in a custom Twig filter be more elegant ? (It has its own drawbacks, but...)\n. In #469 , I thought about the intermediate PHP versions that in most case would be useless to test for each PR. In https://github.com/symfony/symfony/pull/16047 something similar has been merged.\nWhat do you think ?\n. > To be honest, I don't fully understand the consequences of changing some dependency versions from ~2.3 to ~2.7\nSorry, I shouldn't have pushed the changes in the main composer.json file ! (Remainings of local tests in the morning...)\nAs I don't know how to solve the current issues, and as the different solutions I tested really complicated things as you said (and I didn't even find the perfect one !...) I think you're right. But keep in mind most changes I made in the Travis file here were about style.\nThe only real change here is:\ndiff\n- composer require \"twig/twig:${TWIG_VERSION}\" --no-update; fi;\n+ cat travis/composer.json | sed -e s/%SYMFONY_VERSION%/\"$SYMFONY_VERSION\"/g |tee composer.json;\nand in the future would \"only\" require to add or remove dependencies in both composer.json if it changes.\n. I updated the PR to remove changes I shouldn't have pushed this morning, and tests now reflects what I described in the PR description. Sorry for the confusion.\n. @javiereguiluz : These errors won't be fixed by Symfony actually. This behavior is \"normal\" as mentioned in https://github.com/symfony/symfony/issues/14920, and for BC reasons has not been changed.\nThe fact is that symfony/twig-bridge requires symfony/security-acl which requires symfony/security-core and both are installed in 2.7.x, which is incompatible with the 2.3.x FrameworkExtension.\n. Actually, I don't understand this commit: https://github.com/symfony/symfony/commit/1270e725601e08a228d35c6c91cea61aea958b03\nas the symfony/security-acl package is only available as it's own package since symfony 2.4.\nOne solution I found was to add:\njson\n\"conflict\": {\n    \"symfony/security-acl\"   : \"*\",\n    \"symfony/security-core\"  : \"*\"\n}\nfor the 2.3 build only...\n. Issue fixed using conflicts for the 2.3.* build.\nIf it looks good to you, do you have any idea on how to proceed for the 2.8 and 3.0 builds ?\n. @xabbuh : We are requiring the whole symfony/symfony packages in test when $SYMFONY_VERSION\" != \"\". We had an example it's not 100% accurate and could cause issues, for instance about the missing conflict or replaces in the symfony/security component... But fair enough, it isn't really an EasyAdmin issue.\nRe-thinking about it, I think you're right guys. So unless we want to benefit from the very little speed gain it brings (and forgot about using a composer.json template and rely on the main composer.json file instead), we can close this.\n. @xabbuh : We are requiring the whole symfony/symfony packages in test when $SYMFONY_VERSION\" != \"\". We had an example it's not 100% accurate and could cause issues, for instance about the missing conflict or replaces in the symfony/security component... But fair enough, it isn't really an EasyAdmin issue.\nRe-thinking about it, I think you're right guys. So unless we want to benefit from the very little speed gain it brings (and forgot about using a composer.json template and rely on the main composer.json file instead), we can close this.\n. @javiereguiluz : I don't remember if it was discussed or not before, but I think adding a configuration option to add menu items would be great for such cases. (We might have talked about that while thinking the custom operations feature)\n. If you're talking about the menu head title, I think you want to have a look to https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/tips-and-tricks.md#use-a-custom-dashboard-as-the-index-page-of-the-backend\n. Hmmm, that's strange. This code should ensure the form_options attributes always exists at least as an empty array in entity configuration.\nCould you show us your configuration ?\nAlso, the web profiler has a new panel allowing you to dump the processed entity configuration.\n. Hmmm, that's strange. This code should ensure the form_options attributes always exists at least as an empty array in entity configuration.\nCould you show us your configuration ?\nAlso, the web profiler has a new panel allowing you to dump the processed entity configuration.\n. Always remember: keep calm and clear the cache :smile: \n\nYou can close this issue yourself actually :)\n. Always remember: keep calm and clear the cache :smile: \n\nYou can close this issue yourself actually :)\n. That would be great indeed ! :+1: \n. That would be great indeed ! :+1: \n. Maybe we should avoid comparing strings with non-text fields at all, regardless of the SGBD instead :confused: (we can use is_numeric or similar to allow it when the submitted query is numeric only). \n. Maybe we should avoid comparing strings with non-text fields at all, regardless of the SGBD instead :confused: (we can use is_numeric or similar to allow it when the submitted query is numeric only). \n. :+1: \n. :+1: \n. IMHO, data- attributes are used in this context in order to set configuration for js plugins, directly from the html markup. Not especially to identify them.\nBut some examples:\n- Bootstrap uses the data-toogle attribute with several values (collapse, tooltip, popover, tab)... but can we say it is kind of in order to set a behavior, so that would be part of the \"configuration\" ? Besides, I don't remember any usage of a class as a markup for enabling a js plugin...\n- This Bootstrap datepicker use a data-provide=\"datepicker\" attribute & value in order to initialized datepicker plugins from html markup.\n- MopaBootstrapBundle actually directly uses this very same  data-provide=\"datepicker\" attribute & value in his form theme.\nI looked at some other js widgets like this color picker but most of them doesn't seem to have an autoinitialization.\nEverything seems against my vision, but that's only for auto-initialization of widgets. Most configuration examples uses html classes for their selectors. For instance, Bootstrap Datepicker:\njs\n$('.datepicker').datepicker({\n    format: 'mm/dd/yyyy',\n    startDate: '-3d'\n})\nKeeping the data attribute would make sense, but maybe by using the data-provide=\"select2\" one instead of data-use-js-widget=\"true\" ?\nIt's a shame the Select2 doesn't seem to define a way to auto-initialize widgets from the html markup, that would have solved the issue :sweat_smile: \n. :+1: Perfect.\n. Hi @gabiudrescu ! The best suggestion I can make for you is to create your own form type and use it with EasyAdmin. See How to Create a Custom Form Field Type to know how to proceed. Then, you'll simply have to use it in the EasyAdmin configuration:\nyaml\n- { property: type, type: my_form_type_alias }\nIn 2.8 and up, the form type alias and name are deprecated in favor of using the FQCN instead. But that wouldn't change anything and still works perfectly with EasyAdmin.\nFYI, the choices option doesn't support a service name, so it's perfectly normal your example didn't work (Plus, if it was supposed to support it, there is no way to guess which method to use to return the choices array).\n. Here's what it'll look like then:\n``` php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nclass ContractChoiceType extends AbstractType\n{\n    private $service;\npublic function __construct($service)\n{\n    $this->service = $service;\n}\n\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefault('choices', $this->service->getContractTypes());\n}\n\npublic function getParent()\n{\n    return 'choice';\n}\n\npublic function getName()\n{\n    return 'contract_choice';\n}\n\n}\n```\n``` yaml\nservices.yml\nservices:\n    app.form.type.contract:\n        class: AppBundle\\Form\\Type\\ContractChoiceType\n        arguments: [@service_name]\n        tags:\n            - { name: form.type, alias: contract_choice }\n```\n``` yaml\neasyadmin.yml\n\n{ property: type, type: contract_choice }\n``\n. For 2, It might be better to have a propereasyadminform type doing what is currently done in the AdminController. Using form events we'll be able to tweak almost anything, and/or the form type might be extended.\nThen, a new option might be added inform/edit/newconfiguration: the form type to use. \nBy default, it'll beeasyadmin` and everything will be generated from the easyadmin configuration as currently. But, adding this option will allow to use completely customized form types for a whole entity or entity action.\n\nI'm absolutely not in favor of adding more and more \"magic\" methods in the controller.\n. Also, what is done in here should probably be part of the easy admin form theme templates instead of this. \nThis would certainly be achievable using our own easyadmin form type and/or form extension in order to pass entity_fields[field.vars.name] to FormViews.\n. That's exactly what I mean. :)\n. It is probably worth mentioning it: This code has been implicitly removed too in https://github.com/ogizanagi/EasyAdminBundle/commit/b39e791dda995120c3bead40660ff2615ec69c97#diff-6997b7569a6653793883d17b6dd2ff3cL13 (see #512).\n. Great ! Indirectly move another step forward to https://github.com/javiereguiluz/EasyAdminBundle/issues/499#issuecomment-151653895 :)\n. And part of the collection_row/widget instead of form_row ?\n. Rebased.\n. Of course we want to integrate it ! It has been requested multiple times already. :)\nBUT, there are already some bundles providing a custom form type for that, and as easyadmin handles custom form types properly, that's not our business to deal with the creation of a complex form type.\nA single option display_as: datepicker for datetime widget should be enough.\nThat'll echo the display_as: toggle for the checkbox type (https://github.com/javiereguiluz/EasyAdminBundle/issues/396#issuecomment-123460127). No need to create a custom form type for such cases, we can handle it inside the new easyadmin form type & form themes, like I suggested in recent PRs :)\nFor more complex usages, like limiting the available dates & co, other bundles will do it.\n. @javiereguiluz : I was actually doing this change at the moment :smile: Done. (-vinstead of -vvv)\n. I agree. This issue is due to the voluntary removal of the novalidate attribute, because I think it was wrong. You should manually set required to false or use easyadmin form_options to add the novalidate attribute, as done in the tests.\nBut I agree checkboxes should be an exception in our case. So let's set required to false automatically in our easyadmin form type when encountering a checkbox.\n. Have a look to #537 for a fix proposal.\n. :+1: for this, but not as it is. I think we should have something similar to Symfony's config reference. That'll allow to point to some other point of the docs with use cases or advanced explanations.\nAlso, we lack the entities sections configuration reference, due to the use of a variable node instead of a proper prototype. We should at least add more informations in the docs about this part of the configuration.\n. I also add the possibility to force what is configured in the easyadmin configuration for this field to be properly taken into account.\nSo required will be set to false by default, unless there is something else explicitly configured.\n. :+1: Really nice !\n. I agree we should have a better exception message for such cases. The one in the form component for entity form type is not our business, but here it's the EasyAdmin twig extension that is responsible.\n. I agree we should have a better exception message for such cases. The one in the form component for entity form type is not our business, but here it's the EasyAdmin twig extension that is responsible.\n. :+1:  ^^'\nAlso I think it would make sense for the BaseException to extend \\RuntimeException instead of \\Exception.\n. :+1:  ^^'\nAlso I think it would make sense for the BaseException to extend \\RuntimeException instead of \\Exception.\n. This is way much better ! :+1: \n. This is way much better ! :+1: \n. Great idea !\n. Great idea !\n. I think it is a good idea, and the event is the simplest thing we can do. But actually I'm not sure this is the greatest thing to use an event for such kind of things.\nI know the bundle's approach is far from tagged services & co, but I would love to see the AdminController less cluttered and have proper data providers and query extensions services for this (similar to what exists in the DunglasApiBundle if you already had the opportunity to have a look to it). \nIt will perhaps even lead the way to an EasyAdminBundle able to support multiple data sources, not only Doctrine ORM. (But there is a lot of abstraction work that needs to be achieved for that)\nI'm not against the event for now, but I think this is something we should think of in the future.\nHowever, what about a simple new method in the AdminController class, that will allow to tweak the query builder instance ?\n. I think it is a good idea, and the event is the simplest thing we can do. But actually I'm not sure this is the greatest thing to use an event for such kind of things.\nI know the bundle's approach is far from tagged services & co, but I would love to see the AdminController less cluttered and have proper data providers and query extensions services for this (similar to what exists in the DunglasApiBundle if you already had the opportunity to have a look to it). \nIt will perhaps even lead the way to an EasyAdminBundle able to support multiple data sources, not only Doctrine ORM. (But there is a lot of abstraction work that needs to be achieved for that)\nI'm not against the event for now, but I think this is something we should think of in the future.\nHowever, what about a simple new method in the AdminController class, that will allow to tweak the query builder instance ?\n. Right. But actually the bundle approach for now is mostly about extending the AdminController.\nLet's ask @javiereguiluz and @Pierstoval about that :)\n. :+1: \n. I guess this is more a PagerFanta issue than an EasyAdmin one :confused: \n. @COil : Can you give a try to the following change in AdminController ?\ndiff\n- $paginator = new Pagerfanta(new DoctrineORMAdapter($query, false));\n+ $paginator = new Pagerfanta(new DoctrineORMAdapter($query, false, false));\n. It should be in the EasyAdminBundle. \nYou can provide a PR for this if you want to. I can't do it myself right now.\n. :+1: \n. @javiereguiluz : Errrr... Have a look at #550 ? :sweat_smile: \n. Don't merge it if you have a better solution that is totally different from my approach ! I just wanted to help as you requested it. But if it isn't useful, don't worry ;)\n. (This has been merged as part of #550)\n. There is one failing test remaining, but that's only about the way the GetResponseForExceptionEvent is mocked (missing request object).\nHowever, I think it's ok for merging now. I trust you to fix it! ^^'\n. On another topic, but which could be related: I thought about introducing functional tests using Behat for testing the whole demo application that has now been shipped into our tests. We would certainly create some useful contexts that could be reused in userland.\n. On another topic, but which could be related: I thought about introducing functional tests using Behat for testing the whole demo application that has now been shipped into our tests. We would certainly create some useful contexts that could be reused in userland.\n. :+1: \n. :+1: \n. I'm :+1: for this ! \nHowever, I don't find the method name explicit. It only acts differently on the entity name. But I can't really find a better name.\n. I'm :+1: for this ! \nHowever, I don't find the method name explicit. It only acts differently on the entity name. But I can't really find a better name.\n. @Pierstoval : I thought about that too (the {entityName} placeholder), but I came to the conclusion it would only make sense if there was some other placeholders available. Here, it's only about the entity name. So I think a more accurate method name would be enough (e.g: executeMethodForEntity, but this is ugly).\nAbout the $prefix and $suffixsuggestion, do you mean:\n``` php\nfunction executeDynamicMethod($$prefix = '', $suffix = '', array $arguments = array())\n{ \n    // [...]\n}\n// [...]\n$this->executeDynamicMethod('preUpdate', 'Entity', array($entity));\n```\n? I'm not convinced. I find it less evident.\n. @Pierstoval : I thought about that too (the {entityName} placeholder), but I came to the conclusion it would only make sense if there was some other placeholders available. Here, it's only about the entity name. So I think a more accurate method name would be enough (e.g: executeMethodForEntity, but this is ugly).\nAbout the $prefix and $suffixsuggestion, do you mean:\n``` php\nfunction executeDynamicMethod($$prefix = '', $suffix = '', array $arguments = array())\n{ \n    // [...]\n}\n// [...]\n$this->executeDynamicMethod('preUpdate', 'Entity', array($entity));\n```\n? I'm not convinced. I find it less evident.\n. That's the same \"issue\" as for placeholders with {} to me. But why not, if you prefer it. It has nothing much to do with generics appart from the notation though. ^^'\n. That's the same \"issue\" as for placeholders with {} to me. But why not, if you prefer it. It has nothing much to do with generics appart from the notation though. ^^'\n. :+1: \n. :+1: \n. Ok, then PR finished and tests fixed :)\n. Ok, then PR finished and tests fixed :)\n. Hi @artggd . Thanks for reporting this and finding the solution !\nDo you want to provide a fix and create a PR for it ?\nThat would be your first contribution on the bundle and would be really appreciated ! =)\n. Hi @artggd . Thanks for reporting this and finding the solution !\nDo you want to provide a fix and create a PR for it ?\nThat would be your first contribution on the bundle and would be really appreciated ! =)\n. I can confirm this bug and I've just submitted a fix for it in #560 .\n. I can confirm this bug and I've just submitted a fix for it in #560 .\n. This line in the AdminController must be fixed too (if not already spotted).\n. This line in the AdminController must be fixed too (if not already spotted).\n. @javiereguiluz : If you could have a look at #566 . I think this could help for most of the form issues.\n. @javiereguiluz : If you could have a look at #566 . I think this could help for most of the form issues.\n. About https://github.com/javiereguiluz/EasyAdminBundle/issues/563#issuecomment-155122290 (asset twig function issue), it's odd. The symfony/asset component is required, even in 3.0, by the FrameworkBundle... but it is not installed by composer on the Travis build...\n. About https://github.com/javiereguiluz/EasyAdminBundle/issues/563#issuecomment-155122290 (asset twig function issue), it's odd. The symfony/asset component is required, even in 3.0, by the FrameworkBundle... but it is not installed by composer on the Travis build...\n. Actually, that's not a bug, that's Symfony's form types default behavior to be required. As we build the form and its fields ~~without basing it on an entity (no data_class option on the root form), the type guessers are not able to guess if the field is required or not.~~\nThe simplest solution for you, is to use the easyadmin type_options on non-required fields:\nyaml\nform:\n    fields:\n        # ...\n        - { property: 'my_property', type_options: { required: false } }\n~~If we want to fix this, I think we can create our own type guesser, or use the data_class option on our easyadmin type.~~\n\nForget about my comment, we use the data_class option. Didn't remembered that. So that's not where it comes from.\nYou can however use the above config sample to solve your issue.\n. Actually, that's not a bug, that's Symfony's form types default behavior to be required. As we build the form and its fields ~~without basing it on an entity (no data_class option on the root form), the type guessers are not able to guess if the field is required or not.~~\nThe simplest solution for you, is to use the easyadmin type_options on non-required fields:\nyaml\nform:\n    fields:\n        # ...\n        - { property: 'my_property', type_options: { required: false } }\n~~If we want to fix this, I think we can create our own type guesser, or use the data_class option on our easyadmin type.~~\n\nForget about my comment, we use the data_class option. Didn't remembered that. So that's not where it comes from.\nYou can however use the above config sample to solve your issue.\n. @artggd : I made a PR related to this issue that might help you once the next release is published: #565 \nI think this issue could be closed :)\n. @artggd : I made a PR related to this issue that might help you once the next release is published: #565 \nI think this issue could be closed :)\n. Here we go for the compiler pass. I chose to retrieve manually type guessers services by tags instead of getting the FormTypeGuesserChain instance created by the form.extension service, as I find it more explicit.\nLet me know which option suits you better.\n. Seems to be ok appart from the getName deprecation: https://travis-ci.org/ogizanagi/EasyAdminBundle/jobs/90314675#L452 and the asset issue in 3.0.\n. @javiereguiluz : Done ;) (It's fixed by using both getBlockPrefix and getName in the form type)\n. > But there's gonna be another problem with Symfony 3 and EasyAdmin: form types\n@Pierstoval : What do you mean ?\n. Mmmm... maybe you can open an issue describing this when you'll have some time, but for now I'm not sure to follow you. :confused: \n. @javiereguiluz : Eh eh eh, I wondered how a bundle could have been autocompleted whereas there are only Connect users :wink: Nice !\n. So I gave a try for a dirty script, and I came up to https://gist.github.com/ogizanagi/13659a48d11474dd7ba7. \nNot perfect, not the most convenient script, but might help.\nYou can download it or using it directly with melody:\nbash\n$ melody run https://gist.github.com/ogizanagi/13659a48d11474dd7ba7 <username> <token>\n(https://github.com/settings/tokens/new to generate a new token)\nThe script will have an issue about guessing the first contribution date of some contributors when the number of contributors will exceed 100. This is due to 2 limitations with the Github API:\n- cannot use the Commits API, because there is no easy way to get the oldest commit.\n- the contributors stats API used here only list the top 100 contributors. Also, it only allow to get the timestamp of the week where the first commit was introduced, it isn't accurate. So if two contributed the same week, we order alphabetically (regarding the username).\nI'll submit a PR in order to add the forgotten contributors.\n. @Pierstoval : I was thinking the same actually. :+1: \n. @Pierstoval : you'll don't like my suggestion, but if you don't like the action base configuration in some situations, I'll recommend you to give a try into importing a PHP file (similarly to what is done in the MicroKernel, using $container->loadFromExtension) in your config.yml or the prepend extension feature. \nIt will allow you to configure directly EasyAdmin using PHP and so optimize anything according to your needs. You could even imagine your own configuration file to load and convert it into EasyAdmin config.\nOf course, it does not replace the EasyAdmin native config, but will allow to handle the most annoying issues & limitations you can encounter.\nI'm not in favor of a \"field-based\" system, because I think the current system is more logical: wider to more precise configuration. IMO it won't read really great with a \"per-field\" system :/\n. Also, just to give the proof '0000-00-00 00:00:00' as a \\DateTime is a bad idea in PHP:\n\nActually, if  '0000-00-00 00:00:00' would mean something, it is:\n- 0000-00-00 : The month before the first month  => 12 ......................................... (-0001-12-00) \n- 0000-00-00 : The day before the first day of December => 30 November ......... (-0001-11-30)\n- 0000-00-00 : As we're going back in time, the year before the 0 year* => -0001\nWhich is perfectly interpreted by PHP as: -0001-11-30 ! :stuck_out_tongue_winking_eye: \n\n*  Yes! Year 0 exists! On the contrary of day and month 0\nSome other examples for fun:\n``` php\n\n(new \\DateTime('0000-00-00'))->format('d / M / Y') # \"30 / Nov / -0001\"\n(new \\DateTime('0001-00-00'))->format('d / M / Y') # \"30 / Nov / 0000\"\n(new \\DateTime('0001-01-00'))->format('d / M / Y') # \"31 / Dec / 0000\"\n(new \\DateTime('0001-01-01'))->format('d / M / Y') # \"01 / Jan / 0001\"\n\n\n(new \\DateTime('0000-00-01'))->format('d / M / Y') # \"01 / Dec / -0001\"\n(new \\DateTime('0000-01-01'))->format('d / M / Y') # \"01 / Jan / 0000\"\n(new \\DateTime('0001-01-01'))->format('d / M / Y') # \"01 / Jan / 0001\"\n(new \\DateTime('2000-00-00'))->format('d / M / Y') # \"30 / Nov / 1999\"\n(new \\DateTime('2000-01-00'))->format('d / M / Y') # \"31 / Dec / 1999\"\n(new \\DateTime('2000-00-01'))->format('d / M / Y') # \"01 / Dec / 1999\"\n(new \\DateTime('2000-01-01'))->format('d / M / Y') # \"01 / Jan / 2000\"\n(new \\DateTime('2000-03-00'))->format('d / M / Y') # \"29 / Feb / 2000\" Hey! Leap year!\n(new \\DateTime('2001-03-00'))->format('d / M / Y') # \"28 / Feb / 2001\"\n```\n. @Pierstoval : I'm not sure Doctrine should support this, as it is not considered as a good practice and given the fact Doctrine has to work with all DBMS.\nBut it's actually trivial to solve this by using a custom DBAL type in userland. So I feel like it's sufficient :/\n\n\n\nAlso if Doctrine does, then should Symfony's DateTimeToStringTransformer, for instance ?\nMy guess is it's probably not worth it. \n. Absolutely. What we need to handle, is the ability to submit null for nullable fields, in one click.\n. Great ! Thanks for taking care of this ! My only concerns were about the fact this would be convenient for any nullable type. But for now, we only have the datetime type which is composed of multiple html inputs and wasn't very convenient to set to null quickly. So this is a perfect start.\nAbout the label: What do you think about Empty, Is empty or Set empty ?\n. @javiereguiluz : I think you can forget about my comments for now and merge this as it is. But we'll eventually encounter those issues later.\n:+1: \n. I think it is actually better for user experience and worse at the same time :laughing:\nThis is due to my concerns in https://github.com/javiereguiluz/EasyAdminBundle/pull/607#discussion_r46079545 but I like the <select> widgets being empty...or maybe it'll be better to hide all <select> widgets (without reseting them) ?\n. :+1: :sparkles: \n. Yaaaaay \\o/ :tada: \n...But the symfony/var-dumper is only available since 2.6, right ? That was the whole issue when we talked about it :/\n. (Since 2.6, updated. Sorry for double posting)\n. Those fallbacks are great :+1: \n. Words are bad. PRs are great :smile_cat:\n. A WHERE IN clause should not be called with an empty array. I suggest to change those lines to: \n``` diff\n                // PostgreSQL doesn't allow to compare string values with non-string columns (e.g. 'id')\n                if ($databaseIsPostgreSql) {\n                    continue;\n                }\n\n$words = explode(' ', $searchQuery);\nif (empty($words)) {\ncontinue;\n}\n                $queryConditions->add(sprintf('entity.%s IN (:words)', $name));\n$queryParameters['words'] = explode(' ', $searchQuery);\n$queryParameters['words'] = $words\n            }\n```\n\nfor instance.\n. A WHERE IN clause should not be called with an empty array. I suggest to change those lines to: \n``` diff\n                // PostgreSQL doesn't allow to compare string values with non-string columns (e.g. 'id')\n                if ($databaseIsPostgreSql) {\n                    continue;\n                }\n\n$words = explode(' ', $searchQuery);\nif (empty($words)) {\ncontinue;\n}\n                $queryConditions->add(sprintf('entity.%s IN (:words)', $name));\n$queryParameters['words'] = explode(' ', $searchQuery);\n$queryParameters['words'] = $words\n            }\n```\n\nfor instance.\n. I see. So maybe you can submit a PR using your solution mentioned above ? i'm not sure there is a better solution right now.\n. I see. So maybe you can submit a PR using your solution mentioned above ? i'm not sure there is a better solution right now.\n. @mkalisz77 : Hi ! Thanks for the sharing.\nWhat would be great is to submit a PR if you have some time to work on a new localized_date data type for show and list views, or any other proposal :)\n. Maybe it's time to :)\nContributing on Github pretty simple:\n- Fork the repository using the Fork button on top of the repository page.\n- Clone your fork locally using git clone git@github.com:mkalisz77/EasyAdminBundle.git\n- Go inside the created folder\n- Create a new feature branch for your patch: git checkout -b my_feature master\n- Make your changes and commit them. Then push your branch on your fork.\n- Go to https://github.com/javiereguiluz/EasyAdminBundle. Github will ease you the job and suggest you to submit a PR after detecting your branch.\nFor more detailed informations, see the excellent Submitting a Patch page on symfony.com. \nContributing to any repository is quite similar.\nIf you need to learn more about git itself first, take a little bit of your time to learn anything important about using it for main workflows thanks to the amazing Learn Git branching project ! You won't regret it.\nBut of course, I don't want to push you into this if you don't want/can't do it now. ;)\n. Did you enable the translator in your application ?\n``` yaml\napp/config.yml\nframework:\n    #esi:             ~\n    translator:      { fallbacks: [\"%locale%\"] } # This line should not be commented\n```\n?\n. How was that a requirement ?! :'(\nI don't understand how we can vote precisely for a human being where most of the time a bundle is the collaborative work of many... \nI feel sad about it too, and would have vote for @javiereguiluz without any hesitation if I knew :'(\n. @Pierstoval : I might be wrong, but I doubt this is an issue now, as we fallback to the primary key getter, or the entity class shortname if the __toString method does not exist => https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Twig/EasyAdminTwigExtension.php#L158-L166\nI think we'll need more informations in order to help you @Flushdrew. Can you show us your entities and configuration (Plus anything overridden in the AdminController related to the issue) ?\nCurrently, I don't get the relation with the file upload for instance.\n. So that means a __toString method should actually solve your issue... :/ \n@Pierstoval, you were right. But I think there is another issue then.\nYour __toString method should return a string of your choice representing your object, as explained in the error message.\nThe strange thing is: why doesn't it go through this code in your case ? Can you confirm it ?\n. > Yes, but the ArticleType is not used by EasyAdmin natively, there's no way of doing this actually. \nAnd you shouldn't need this feature for your need. Instead, you need to specify the filed type yourself in easyadmin config:\nphp\neasy_admin:\n    entities:\n        Article:\n            class: AppBundle\\Entity\\Article\n            form:\n                fields:\n                    # [...]\n                    - { property: 'image', type: 'AppBundle\\Entity\\Article\\Form\\Type\\ImageType', type_options: { ... } }\n                    # [...]\nHowever, I still think being able to configure the form type to use for the whole entity form/edit/new actions would be an interesting feature (It's in this aim I started the form type refactoring), but need some feedbacks before implementation.\nphp\neasy_admin:\n    entities:\n        Article:\n            class: AppBundle\\Entity\\Article\n            form:\n                # new config option, to override the default\n                # JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminFormType\n                # form type:\n                form_type: AppBundle\\Entity\\Article\\Form\\Type\\ArticleType \n                form_options: { ... } # This one already exists\nBut I'm not sure it solves anything that cannot be done currently by using form types for fields and/or form extensions.\n. @Flushdrew : I was unable to reproduce your issue through the easyadmin demo, which has a similar Image and Product one-to-one relation. If the __toString method does not exists, the entity name and id are used:\n\nBut anyway, you'll need the __toString method for the edit and new view, as it is used by default by the choice/entity form type.\nHowever, if you have some time, would you mind reproduce your exact issue starting from a symfony-standard-edition and make it available to us ?\n. @Flushdrew : I suggest you to read \"Creating your Field Type as a Service\" :)\n``` yml\napp/config/services.yml or src/OAH/NewsBundle/Resources/config/services.yml\nservices:\n    oah.news.form.type.image:\n        class: OAH\\NewsBundle\\Form\\ImageType\n        arguments: [...]\n        tags: [ { name: form.type } ]\n``\n. EasyAdmin uses [get_classin the twig extension](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Twig/EasyAdminTwigExtension.php#L165) in order to retrieve the short class name of the entity being part of the relation.\nBut actually, this statement should not be executed, as it concerns *-to-one relations, not collections, as states the!$value instanceof PersistentCollection` condition here\nSo, I think this condition should be fixed in order to accept only *-to-one relations.\nPlease, could you try to change this line by:\ndiff\n- if (in_array($fieldType, array('association')) && !$value instanceof PersistentCollection) {\n+ if ('association' === $fieldType && $fieldMetadata['associationType'] & ClassMetadata::TO_ONE)\n. @ianfp : No problem. Thanks for your comment. I hope you've spent good vacation, and I'm glad your issue is fixed.\n. @Pierstoval : My bad. You're right. What induced me in error is that the dump method of the HtmlDumper doesn't return anything. So this return is useless here, and nothing has to be marked as safe then when the var-dumper component is used.\nThanks for giving me the right track! :)\nSo this PR is still needed for 2.3 OR if the symfony/var-dumper component is unavailable.\n. @Pierstoval : There is already a <pre> tag. But anyway, this tag won't mark the string as safe ^^'\nHere is my suggestion in ba0b1ab to make the behavior of EasyAdminDataCollector::dump consistent (i.e: always return a string instead of using php://output directly in case of the symfony/var-dumper).\n. @javiereguiluz : This isn't related and is here since days (you can see the same for other PRs).\nI haven't dig into it yet, but it seems that the ChoiceView class has changed of namespace. I don't know yet if it's a Symfony issue, or us failing to comply something.\n. @javiereguiluz : yeah... I saw that :confused: \nThe same happened on my own fork's Travis. So I doubt this is only bad luck. \nBut I can't actually figure out from where it comes, and once again, I doubt this is related to those changes... :/\nAll I know is that 139 exit code stands for Segmentation violation, which we already know thanks to the Segmentation fault message above, and doesn't help much...\n. @javiereguiluz : We could switch to StyleCI for CS checks. \nBut as you can see here and in https://github.com/ogizanagi/EasyAdminBundle/pull/1, it seems there is some extra rules I can't figure out how to disable (I don't know which fixers are incriminated) \n. Is it feasible to (and should we) execute the code coverage on the PHP7 build in order to make it faster ?\n. Isn't this job redundant ?\nyaml\n- php: 5.6\n  env: SYMFONY_VERSION=3.0.*\nAs we can see, there are two builds for the same thing, i.e php 5.6 and sf 3.0 (Fourth and last build), right ?\n. FTR, about StyleCI, I'm not sure actually it requires more permissions than Travis for instance:\n\n\nHere are the scopes asked from StyleCI code repository: https://github.com/StyleCI/StyleCI/blob/master/app/Http/Controllers/AuthController.php#L51\nBut I think our home made solution is fine (except it pollute the .travis.yml file), and hopefully will go back to normal later :/\n. I'm all in for this ! :+1: \n. @javiereguiluz : Those changes are fine to me, especially as it simplifies things a lot. But someone might have relied one those metadata. So this is potentially a BC break I guess.\nI would have opted for a decorated PropertyAccessor however, as suggested by @Pierstoval, in order to avoid this try/catch over a simple if, and smooth the upgrade path when we'll drop 2.3 support.\nI agree about hard failing when writing values.\n:+1: \n. :+1: \n. Just wondering: does your test really need to perform a request ? Isn't testing the template rendering enough, considering the fact we want to be able to render a template inheriting EasyAdmin's layout independently of the request (not an easyadmin's one for instance) ?\n(But maybe it is better as you did, in terms of \"intentional programming\")\n. I'm not sure we should encourage to extend the list.html.twig layout anyway. I think the main layout is enough if you just want to reuse the EasyAdmin theme in other parts of your application.\n. @sebastianlp : The admin route was deprecated in 1.8 in favor of easyadmin, to avoid name collisions. For BC reasons, the old route name was kept, but as you've overridden the indexAction in your controller, it is inefficient.\nYou are right about the doc, it has not been properly updated everywhere. The right route should be easyadmin. You can safely remove the admin route annotation from your controller. Simply beware you're not using it anywhere else in your application or replace it by the proper easyadmin one.\nWould your like to submit a PR fixing the doc ?\n. :+1: \n. Don't worry. Everything is a mess on travis too :trollface: \nhttps://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/96587392#L264-L272\nThis seems to come only from lowest dependencies (sf 2.3 at least). The issue is there since a while.\nI think I dug into this before, and gave up for a reason, but cannot remember why :confused: \n. @javiereguiluz : It comes from this line in Symfony's kernel exception listener.\nI don't know why this was a thing in Sf 2.3 and was removed later but not in 2.3.\nAnyway, a quick workaround is to add this in EasyAdminBundle/Tests/Fixtures/App/config/config.yml:\nyml\nservices:\n  logger:\n    class: Psr\\Log\\NullLogger\nEDIT: It was removed in https://github.com/symfony/symfony/pull/13780#discussion_r25281185\n. @Pierstoval : Let's be sure https://github.com/javiereguiluz/EasyAdminBundle/pull/638 =)\n. @Pierstoval : :tada: https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/96624331\n. @javiereguiluz : It won't work, because BackendErrorsTest::testUndefinedEntityError, which is one of the tests incriminated, doesn't load the config_test.yml file. Indeed, the used environment is set to default_backend, so config_default_backend.yml is used instead.\nI don't know if this is fully expected, nor if it should rather be in config_default_backend.yml, but let me know if it is :) \nBut then it should also be in config_read_only_backend.yml as it is required for the ReadOnlyBackendTest::testEditActionIsDisabled test.\n. And what about https://github.com/javiereguiluz/EasyAdminBundle/pull/640#discussion_r47526998 ? (Sorry, I pushed a new change, so it was hidden)\n. @Pierstoval : That's the reason why I let the head_favicon block, in order to be overridden to add more icons if needed.\n. Using the template override, I didn't meant not calling the parent to override the feature completely. Just override to add more favicons:\ntwig\n{% block head_favicon %}\n     {{ parent() }}\n     {# add favicons for iOS & co #}\n{% endblock %}\nHowever I understand your reluctance about this, but I wanted to propose a fast-option for this. Eventually we could improve it to support multi-favicons.\n. Ultimately, I would say it's the same for js and css assets. We could have a simple twig blocks to override in order to do the same, without the config.\nHonestly, I'm 100% for it, but that's not exactly how works the bundle right now. :/\nWhat do you think ?\n. @kabeApp : I think the best for you is to create your own form type, which will call the appropriate method from your entity in order to build the choices.\nSee https://github.com/javiereguiluz/EasyAdminBundle/issues/497#issuecomment-149041935 for a related issue.\nWhat do you mean by a custom language ?\n. @kabeApp : Yes you can do that pretty easily using a listener:\n``` yaml\napp/config/services.yml\nservices:\n    app.easyadmin_force_locale_listener:\n        class: AppBundle\\EventListener\\ForceEasyAdminLocaleListener\n        arguments: [\"@translator\"]\n        tags:  [{ name: kernel.event_listener, event: easy_admin.pre_initialize }]\n```\n``` php\n<?php\nnamespace AppBundle\\EventListener;\nuse Symfony\\Component\\Translation\\TranslatorInterface;\nclass ForceEasyAdminLocaleListener\n{\n    /* @var TranslatorInterface /\n    private $translator;\npublic function __construct(TranslatorInterface $translator)\n{\n    $this->translator = $translator;\n}\n\npublic function onEasyAdminPreInitialize()\n{\n    $this->translator->setLocale('en');\n}\n\n}\n``\n. Perfect ! :sparkles: \nI didn't even tried to add documentation about this little feature, because I knew that if it pleased you, you'll be way much more efficient than me at writing it. This proves it :smiley:\n. :+1: Good catch. that class was removed recently.\n. Hi @paquitodev : \n- [Select2 4.0.0 is used](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/public/javascript/select2.min.js#L1)\n- Yes, it is used for entity fields for now, and it work with themultipleoption of the entity field as well.\n- I don't know. i'm not sure I understood you. maybe someone else can help you about that.\n. I mean a select2 widget should properly appear for your$command_aliasrelation, with the ability to select multiple aliases as far a I remember.\nWhen I'm talking about theentityfield andmultipleoption, I mean [this](http://symfony.com/doc/current/reference/forms/types/entity.html#multiple)\n. About 2, there is [a pending PR](https://github.com/javiereguiluz/EasyAdminBundle/pull/614) in order to have translatable date datatypes. If for now the date is in english, that's because\\DateTimeobjects does not translate months & co natively. In order to achieve that, we'll use the [localizeddate Twig filter](http://twig.sensiolabs.org/doc/extensions/intl.html#localizeddate).\nFor now, you can see how to use your own template to render a field: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/tutorials/advanced-design-customization.md#customize-the-templates-used-to-render-each-property\n. @paquitodev : for now you can implement the solution in userland. It won't take too much time.\nThe PR might need some work before being merged.\n. My opinion on this is that we cannot handle everything for widgets this way. Plus most of the time it isn't that good to configure options at the global level. In the case of theselect2library, I don't see why thetags: trueoption will make sense at the global level.\nInstead of this, why aren't those options handled at the form type level ?\n. @Pierstoval :+1: \n. @Pierstoval :+1: \n. I'm not sure to understand the proposal :confused: \nYou think*_PERSIST` events are bad, but you keep them in your suggestion ?\nAlso, the current situation is consistent with the Doctrine events & behavior, which expose both PRE_PERSIST and PRE_UPDATE events respectively for new entities and updates.\n. I'm not sure to understand the proposal :confused: \nYou think *_PERSIST events are bad, but you keep them in your suggestion ?\nAlso, the current situation is consistent with the Doctrine events & behavior, which expose both PRE_PERSIST and PRE_UPDATE events respectively for new entities and updates.\n. @javiereguiluz : That's the thing, unless I remember bad:\n- The PRE_PERSIST event is only triggered by doctrine for new entities.\n- The PRE_UPDATE event is only triggered by doctrine for existing entities for which changes are computed and asked for flush. (Those items aren't persisted, they are already managed by Doctrine. $em->persist() asks Doctrine to manage new entities)\nCreating a new entity and updating an existing one are two really different things (but yeah, sometimes you'll need to hook on both).\nBut we need to be sure I'm not saying anything wrong.\n. @javiereguiluz : That's the thing, unless I remember bad:\n- The PRE_PERSIST event is only triggered by doctrine for new entities.\n- The PRE_UPDATE event is only triggered by doctrine for existing entities for which changes are computed and asked for flush. (Those items aren't persisted, they are already managed by Doctrine. $em->persist() asks Doctrine to manage new entities)\nCreating a new entity and updating an existing one are two really different things (but yeah, sometimes you'll need to hook on both).\nBut we need to be sure I'm not saying anything wrong.\n. From Doctrine Events documentation:\n\nprePersist - The prePersist event occurs for a given entity before the respective EntityManager persist operation for that entity is executed. It should be noted that this event is only triggered on initial persist of an entity (i.e. it does not trigger on future updates).\n. :+1: . I still think the event listener is better for decoupling & testability purpose (if the logic is more complex and is worth testing). The performance impact is insignificant (of course it'll depend on your app, but in most cases, insignificant, really).\nBut for the record, this tip is perfect as it is in the EasyAdmin documentation !\n\nI like @Pierstoval suggestion too, but not sure it suits an admin backend (it's more a SEO thing). Instead I would rather see a language selector in the backend than dealing with the locale in the url (I'm not saying EasyAdmin should implement it, just allow to do it, and I think the header_menu and header_footer twig blocks allow to to that).\n. @Pierstoval : What I had in mind was to store the chosen locale in session or a cookie and have a proper LocaleListener. No need to pollute urls with it unless it really makes sense (for referencing different pages according to their language <=> SEO thing) ^^'. Sorry if I was unclear.\n. You're right. But we're digressing :smile: \nI was simply pointing out that it should probably not be recomanded in an admin backend documentation.\n. @paquitodev : You'll need to overwrite the AdminController::createNewEntity() in order to do this.\nWe can't (won't ?) allow easily to specify constructor arguments from the config, but fortunately, that's exactly for these reasons the createNewEntity method exists :)\n. Hi @mauitz !\nWe get rid of the form.html.twig twig template recently in favor of using form themes. You find the content of the old form.html.twig inside the EasyAdminBundle/Resources/views/form/bootstrap_3_layout.html.twig file and easyadmin_widget block.\nIf you don't know much about form theming, I suggest you to read the dedicated documentation here.\nWhat you'll probably need to do is, is to override the easyadmin_widget, but I can't be sure, it depends on what you achieved in it before.\nWhy were you overriding the form.html.twig template for a given entity in the first place ?\n. Not sure why you'd expect to have a collection field for *ToMany relationships natively instead of an entity form type with the multiple: true option ? :confused: \n. In my experience, in an admin backend, you won't need to create entities of a *-To-Many relation directly with an embedded form as often as simply establishing the links between entities by using an entity field.\nSo I'll still keep the entity field type for any association type for now.\nThe linked cookbook doesn't state this is the main way of handling a *-To-Many relation but simply documente the collection form type which is way much complex than the entity one (and of course does not achieve anything comparable).\n. @Pierstoval : I agree with all of this... But here we should limit the scope of the issue to last thing you said, i.e: \nIf you let EasyAdmin choose the default value of the fieldType option for a property of type association, by not providing it explicitly, according to our discussion & the default behavior with Symfony, it should be entity.\nThe ease to use a collection form type for associations is another story.\n. @Pierstoval : Sure we could ! We can \"simply\" do that in the CollectionTypeConfigurator or equivalent until it isn't merged (if it is), by specifying ourself the entry_type. But: \n- it isn't trivial, because we need to create a generic form type which will generate the embedded form type to specify in entry_type. We could probably reuse the EasyAdminFormType with some tweaks, but it'll rely on easyadmin config metadata. I'm not sure it'll be fully expected, and if isn't, how do we guess which fields and how they should be exposed ?\n- This only works for collection fields on an association, and a TO_MANY one (because there is no dedicated type for a TO_ONE relation. We allow the user to configure our generic form:\nyaml\nfields:\n    - { property: 'my_one_to_one_relation', type: 'EasyAdminBundle\\Form\\Type\\EmbeddedEntityType' }\nwe can probably guess the entity for which generate the embedded form from metadata.\nHere is a jQuery plugin to handle embedded forms collections. I haven't used it yet, but looks great. So we might integrate it in EasyAdmin.\nI will probably rename this issue once the default form type to use with association is set explicitly by the Configurator to entity, because all your concerns and this feature request are valid, but should have belong to another issue actually :smile: \n. Hum...maybe he already had a drink. :trollface: \n. 1st @Pierstoval 's good resolution/commitment for 2016: \"Do not keep compromising branches about my OSS mates.\" :smile_cat: \n. @javiereguiluz : Done. Thanks !\n. :+1:  In the long term, if we have more cases like this, I'd like to see those changes in a collection of extensions as a dependency of our EasyAdminFormType, so we can create a bunch of \"bridges\" for third-party bundles form types to be rendered as nicely as possible without much configuration nor creating another dedicated type.\nIn a few words: declutter the EasyAdminFormType of the logic you added here in a dedicated class for each third-party bundle types.\n. @Pierstoval : This PR is not about integrating CKEditor for the user, just about rendering it as nicely as possible with 0 configuration. I don't see why we shouldn't merge this quick-win improvement. We did a lot of things in this way in the past.\n. However, if a value is provided into the default_config option, we should probably use it instead of defining ourself a configuration for easyadmin, in order to avoid WTF issues when the user expects its default config to be used anywhere in the application.\nWe could check if a default config exists using the ConfigManager::getDefaultConfig() method.\nThus, my suggestion to declutter the EasyAdminFormType of this logic makes even more sense, because we'll need to inject the ivory_ck_editor.config_manager service, and we don't want it to be a dependency of our form type, but of a dedicated bridge extension instead.\n. @javiereguiluz : See #668.\n. @Pierstoval: I agree with most of your comment, but EasyAdmin's philosophy is about proposing a great experience by default, with no config, and then, enhance anything you need by the time.\nSo where I'll usually agree with you to put my veto on, here I can't because I think this is the kind of things that might help EasyAdmin make the difference. We're talking about giving a little push to provide a great experience with the integration of a quite known, good & serious bundle, with semantic versioning and for which a BC break will cost way much than for us. So I'll don't worry much about the maintainability of such a feature.\n. @javiereguiluz : The notes I added in the EntityConfigurator can be removed, and the supports method should now be:\nphp\n    /**\n     * {@inheritdoc}\n     */\n    public function supports($type, array $options, array $metadata)\n    {\n        return 'entity' === $type && 'association' === $metadata['type'];\n    }\nAlso, If you want, I have a copy of this PR you can reset on without the mess introduced by the merge, and then apply your changes (in order to avoid having duplicated commits). \nSorry for the confusion.\n. About 2b427cb I've not seen this often in Symfony, but why not. A better exception message is always good.\n. @javiereguiluz : What I suggest in order to clean the git tree and avoid any future search in it to be a mess, is to replace this PR by #676.\nI also fixed inside the last changes mentionned above that were missing.\n. I agree we should promote the best way to go first with the ivory_ck_editor.configs settings, and show the use of the config_name option instead of specifying the toolbar option directly on the field.\n. @javiereguiluz : Here we are.\nI've kept the removal of the IvoryCKEditorTypeConfigurator type configurator from the container in the compiler pass, because I don't see why we should instantiate a service that won't be used at all (even if it has not much impact). It won't prevent people to register their own type configurators at all, and if they can, they should do the same as us & avoid to create useless services in the container in their own compiler pass. But most of the time, when people will register their own type configurator, they won't need such logic, because it means they'll always need this type configurator for their application.\nI had to change the initial interface for the RequiredOptionConfigurator to add the field name and parentConfig, because it's needed for the guesser to work.\nI chose to pass the $builder variable to the TypeConfigurator::configure method, but typehinted FormConfigInterface, instead of the raw array of options, because it allows to access both options and initial data along with other stuff that might be needed. It also avoid confusion between the field options to configure, and the parent form ones.\nOf course the real object is an instance of FormBuilderInterface too and might allow to tweak the form by adding/removing fields or adding events, but I don't think we should encourage this, so hide behind the FormConfigInterface typehint.\nI chose the priority of the different configurators regarding their legacy order in the EasyAdminFormType, excepts that the entity one should be called after the required_option one due to its implementation.\nRegistering a configurator without any priority will always register it before the required_option, in order to give it a chance to set the value of the required option before being guessed.\n@Pierstoval : I don't agree with you, because the whole logic of this PR (except the bugfix about CKEditor \"config_name\" support) is not really about the CKEditor integration, but instead declutters our form type and allows users to register their own configurators. See CKEditor as a concrete example among the other ones I've now extracted. \n. @javiereguiluz : I rebased this PR on master in order to get the last changes to remove the AttributesConfigurator and not forget the entity type changes in EasyAdminFormType, which explains the mess during the merge. \nI expected #665 to be rebased on master before to have something more straightforward to merge.\nI hope you won't have too much issues cleaning the tree :confused: \n. In case of Mapped superclass, AFAIK, you won't have any issue.\nWhat this bundle doesn't support (and won't) is STI & CTI\n. @javiereguiluz : No problem, I agree. I definitively prefer this solution :+1: \n. :+1: \nHowever, what do you think about positioning it absolute instead of displaying it inlined with the label ?\ndiff\nform label.control-label.required:after {\n    content: \"\\00a0*\";\n    color: red;\n-    display: inline-block\n+    position: absolute;\n}\nIt allows to keep labels aligned:\n\n. :+1: (even if I do not like much having all this methods in the AdminController, making it growing more and more)\nAs there is no release yet, we can also change the TypeConfiguratorInterface::configure method to make the FormConfigInterface $parentConfig optional. \nThus, we can register type configurators for the root easyadmin form. \nIf you think it could make sense to configure the root form this way, I can make a PR too.\n. :+1: (even if I do not like much having all this methods in the AdminController, making it growing more and more)\nAs there is no release yet, we can also change the TypeConfiguratorInterface::configure method to make the FormConfigInterface $parentConfig optional. \nThus, we can register type configurators for the root easyadmin form. \nIf you think it could make sense to configure the root form this way, I can make a PR too.\n. :+1: for merging this, and forget about my additional proposal (for the reasons mentioned in my PR).\n. That's indeed not covered by the current implementation.\nBut, if IRC, you can set the label to false instead of trying to render an empty label.\n. That's indeed not covered by the current implementation.\nBut, if IRC, you can set the label to false instead of trying to render an empty label.\n. @rubengc : Could you please try this patch => #682 ?\n. @rubengc : Could you please try this patch => #682 ?\n. :+1: :sparkles: \n. @javiereguiluz : My pleasure. :)\nI extracted the css_class relative things into a dedicated PR (#692) because it does not only concerns actions, but also entity fields :confused:  (This PR is rebased on #692, so #692 should be merged first)\nI also find out 2 issues with this PR:\n- [x] How to reproduce: Go to a given page, delete an entity, then delete another. You'll be redirected to the first page.\nSolution: I was actually annoyed by the pagination links referer, because I use the app.request.requestUri to set the referer here, so if there is already a referer in the query string, adding this one messed everything. So I removed the referer from the pagination lins. AFAIK, it wasn't used anyway, and polluted the urls. (fb1edff)\n- [x] How to reproduce: Go to the last page. If there is only one entity and you remove it, you'll be redirected to an inexistant page.\nSolution: ~~I don't really know how to solve this one.~~\n  Solved in e8616fa\n. Second issue solved in e8616fa.\nPR is ready for the final review & to be merged after #692 :smiley: \n. @javiereguiluz : Is it really needed to add this new easyadmin.templates options ? We already have easyadmin.design.template for this, right ? (It only missed to be initialized with $defaultBackendTemplates)\n. @javiereguiluz : I'm lost in the tests fixtures diff, but did you add/modify an input fixture to customize the exception template somewhere ? I don't see any input file in the diff :confused: (This is the test that proves the Configuration class is properly fixed.\n. I can't reproduce it neither, and the incriminated file seems good to me :/\nIt looks like Travis doesn't have the right version of EasyAdminBundle/Tests/DependencyInjection/fixtures/configurations/output/config_024.yml.\nDid you already try to relaunch the build ?\n. The continuous-integration/travis-ci/push check pass, and I also tried to launch a build on my own fork. Everything seems to be good. \nSo it might be an issue with Travis.\nLet's get this merged IMO :)\n@Pierstoval : This typo has been fixed already :)\n. @javiereguiluz : I've fixed the failing test when rebasing #690. I looked at the wrong file yesterday, but I can't explain myself what happened because running tests locally this time shown me the error.\n. @javiereguiluz : Right. We should probably add a reminder about that change in the release note.\n. @javiereguiluz: As the exception template will be customizable, this is not such a edgy case :smile: \nActually, a RuntimeException happening during the rendering of the template would have led to a Fatal error: Call to undefined method RuntimeException::getStatusCode().\n. > > Link groups in sidebar\n\nI think I don't understand exactly what you mean :confused:\n\nI guess he's talking about grouping elements in the menu. (group entities)\n\n\nBootstrap tabs\n\n:+1: for this, and a simple section option in the property configuration should be enough :)\n\nI personally don't like it much, because it cause issues when having HTML5 client-side validation errors when trying to submit the form (incriminated inputs might be hidden in another tab. The browser throws an error in the console), and bad visibility on server-side errors as well. It can be solved, but requires more work, for a feature that I don't find really a must-have in an admin backend.\nI'm fine with other ideas, that's actually good ones :)\n. > > Link groups in sidebar\n\nI think I don't understand exactly what you mean :confused:\n\nI guess he's talking about grouping elements in the menu. (group entities)\n\n\nBootstrap tabs\n\n:+1: for this, and a simple section option in the property configuration should be enough :)\n\nI personally don't like it much, because it cause issues when having HTML5 client-side validation errors when trying to submit the form (incriminated inputs might be hidden in another tab. The browser throws an error in the console), and bad visibility on server-side errors as well. It can be solved, but requires more work, for a feature that I don't find really a must-have in an admin backend.\nI'm fine with other ideas, that's actually good ones :)\n. @javiereguiluz : I like this proposal, but I'm a bit worried about the fact the groups are at the same level as fields.\nIt really feels \"unnatural\" to me :confused: \nIt will also require confusing normalization, and IMO there are already (unfortunately) many confusing things with metadata. :sweat_smile: \n(Also it's for form, edit, and new views, not list. Or maybe you actually have something in mind for list ? :D )\nWhy not having opt for this:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                Basic:\n                    fields:\n                        - id\n                        - name\n                        - price\n                        - ean\n                Advanced:\n                    default: true\n                    fields:\n                        - enabled\n                        - createdAt\n                        - tags\nOf course there will be no BC break with the previous configuration. Not specifying the group will keep working and create a Default group.\nOr, even better IMO: Don't mix form configuration and form rendering:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 groups:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\n. @javiereguiluz : I like this proposal, but I'm a bit worried about the fact the groups are at the same level as fields.\nIt really feels \"unnatural\" to me :confused: \nIt will also require confusing normalization, and IMO there are already (unfortunately) many confusing things with metadata. :sweat_smile: \n(Also it's for form, edit, and new views, not list. Or maybe you actually have something in mind for list ? :D )\nWhy not having opt for this:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                Basic:\n                    fields:\n                        - id\n                        - name\n                        - price\n                        - ean\n                Advanced:\n                    default: true\n                    fields:\n                        - enabled\n                        - createdAt\n                        - tags\nOf course there will be no BC break with the previous configuration. Not specifying the group will keep working and create a Default group.\nOr, even better IMO: Don't mix form configuration and form rendering:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                 groups:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\n. @javiereguiluz : Also, ~~we can see those groups as~~ those groups are basically a configuration option of our EasyAdminFormType. So the second suggestion above could even use the form_options instead of a new option processed in metadata.\nSomething like:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                form_options:\n                     groups:\n                         Default: ['id', 'name', 'price', 'ean']\n                         Advanced: ['enabled', 'createdAt', 'tags']\n                     default_group: Advanced\n. @javiereguiluz : Also, ~~we can see those groups as~~ those groups are basically a configuration option of our EasyAdminFormType. So the second suggestion above could even use the form_options instead of a new option processed in metadata.\nSomething like:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                fields:\n                    - id\n                    - name\n                    - price\n                    - ean\n                    - enabled\n                    - createdAt\n                    - tags\n                form_options:\n                     groups:\n                         Default: ['id', 'name', 'price', 'ean']\n                         Advanced: ['enabled', 'createdAt', 'tags']\n                     default_group: Advanced\n. @Pierstoval : So, Sf1 option is basically the same as https://github.com/javiereguiluz/EasyAdminBundle/issues/698#issuecomment-167581011, right ? (First you declare the fields configuration, then the fields displaying)\n. @Pierstoval : So, Sf1 option is basically the same as https://github.com/javiereguiluz/EasyAdminBundle/issues/698#issuecomment-167581011, right ? (First you declare the fields configuration, then the fields displaying)\n. @Pierstoval : I see... Thx. I might review my point of view on a per-field configuration basis instead of per actions.\nI think we should think of that deeply when we'll refactor the metadata system into a complete one (I mean with ClassMetadata, AttributeMetadata, cache, factories & loaders). As it will allow to eventually configure EasyAdmin entity related stuff from other configuration styles (annotations for instance), we might find new & more convenient usages too.\n. @Pierstoval : I see... Thx. I might review my point of view on a per-field configuration basis instead of per actions.\nI think we should think of that deeply when we'll refactor the metadata system into a complete one (I mean with ClassMetadata, AttributeMetadata, cache, factories & loaders). As it will allow to eventually configure EasyAdmin entity related stuff from other configuration styles (annotations for instance), we might find new & more convenient usages too.\n. @Pierstoval : Being able to configure entities through annotations is a consequence of creating a metadata loader system. I'm not especially talking about making it a feature of EasyAdminBundle. So yes, I might propose a bundle implementing an annotation metadata loader if it doesn't seems pertinent into the EasyAdmin core. But we'll see this day :smile: \n@rubengc : I'm personally still not convinced tabbed forms is a must-have for EasyAdmin, so I also have doubts about a boxes system to be honest. :confounded:\nAlso, to me, it is already doable in userland, by declaring a form extension to the EasyAdminFormType which adds tabs and default_tab options and by overriding the easyadmin_widget form theme.\nA third-party bundle can even propose such a feature to extend EasyAdmin right now ! :D \nIn order to ease this however, we should eventually split the easyadmin_widget into more blocks, like:\n- easyadmin_widget_fields for the following foreach loop:\ntwig\n  {% for field in form.children if 'hidden' not in field.vars.block_prefixes %}\n      <div class=\"{{ field.vars.easyadmin.field.class|default('col-xs-12') }}\">\n          {{ form_row(field) }}\n      </div>\n  {% endfor %}\nThis is the one you should override in order to render fields in tabs & boxes.\n- easyadmin_widget_actions_row for the box rendered at the end of the form, rendering configured actions & submit button. Can be used to propose a floating & always visible actions row.\n- easyadmin_widget_actions_row_items for the foreach loop rendering actions.\n- ...\n. @Pierstoval : Being able to configure entities through annotations is a consequence of creating a metadata loader system. I'm not especially talking about making it a feature of EasyAdminBundle. So yes, I might propose a bundle implementing an annotation metadata loader if it doesn't seems pertinent into the EasyAdmin core. But we'll see this day :smile: \n@rubengc : I'm personally still not convinced tabbed forms is a must-have for EasyAdmin, so I also have doubts about a boxes system to be honest. :confounded:\nAlso, to me, it is already doable in userland, by declaring a form extension to the EasyAdminFormType which adds tabs and default_tab options and by overriding the easyadmin_widget form theme.\nA third-party bundle can even propose such a feature to extend EasyAdmin right now ! :D \nIn order to ease this however, we should eventually split the easyadmin_widget into more blocks, like:\n- easyadmin_widget_fields for the following foreach loop:\ntwig\n  {% for field in form.children if 'hidden' not in field.vars.block_prefixes %}\n      <div class=\"{{ field.vars.easyadmin.field.class|default('col-xs-12') }}\">\n          {{ form_row(field) }}\n      </div>\n  {% endfor %}\nThis is the one you should override in order to render fields in tabs & boxes.\n- easyadmin_widget_actions_row for the box rendered at the end of the form, rendering configured actions & submit button. Can be used to propose a floating & always visible actions row.\n- easyadmin_widget_actions_row_items for the foreach loop rendering actions.\n- ...\n. My point above isn't that EasyAdmin shouldn't propose such a feature however. \nJust that if the feature is used for complex admin backends, where EasyAdmin targets 80% of simple backends, maybe we should only concentrate into making enough extension points to make it possible for third-party bundles or developers in userland to do it, instead of bursting our brains into finding a new configuration structure that might change or complicate everything in the metadata system as it is currently, or subserve other modifications in the future. :)\n. My point above isn't that EasyAdmin shouldn't propose such a feature however. \nJust that if the feature is used for complex admin backends, where EasyAdmin targets 80% of simple backends, maybe we should only concentrate into making enough extension points to make it possible for third-party bundles or developers in userland to do it, instead of bursting our brains into finding a new configuration structure that might change or complicate everything in the metadata system as it is currently, or subserve other modifications in the future. :)\n. @rubengc : You misinterpreted me: I'm not saying backends are simple. But EasyAdmin is targeting the most \"simple\" ones, at least for its core features. :smile: \nOnce again I'm not against the feature itself, just not convinced of its native integration in EasyAdmin, especially when it comes to a potential configuration structure change and mess in its processing for a feature that will (I'm saying this arbitrary though) not target 80% of the EasyAdmin usages (and can be done in userland or third-party bundle).\n. @javiereguiluz : what are your thoughts about https://github.com/javiereguiluz/EasyAdminBundle/issues/698#issuecomment-167655223 ?\n- adding more blocks in form themes.\n- third proposal alternative, which means no change in the current configuration structure.\n- Provide a form type extension of EasyAdminFormType adding tabs and default_tab options.\nThis way, no change is required in the current code except in the form themes, and we can consider extracting it from the core easily if it doesn't target the 80% of the EasyAdmin targeted backends and acts as an example to show how to extend and tweak EasyAdmin from an external bundle.\nAbout adding tabs in show view, we might consider adding an options configuration similar to the form_options, free for any usage in order to extend the show view logic & rendering similarly. Then, that's again only about adding new twig blocks in show.html.twig.\n. @javiereguiluz : what are your thoughts about https://github.com/javiereguiluz/EasyAdminBundle/issues/698#issuecomment-167655223 ?\n- adding more blocks in form themes.\n- third proposal alternative, which means no change in the current configuration structure.\n- Provide a form type extension of EasyAdminFormType adding tabs and default_tab options.\nThis way, no change is required in the current code except in the form themes, and we can consider extracting it from the core easily if it doesn't target the 80% of the EasyAdmin targeted backends and acts as an example to show how to extend and tweak EasyAdmin from an external bundle.\nAbout adding tabs in show view, we might consider adding an options configuration similar to the form_options, free for any usage in order to extend the show view logic & rendering similarly. Then, that's again only about adding new twig blocks in show.html.twig.\n. :open_mouth: Why is the fieldType rendered here instead of the dataType ?\n. :open_mouth: Why is the fieldType rendered here instead of the dataType ?\n. What is your configuration ? Because the list template properly use dataType, so it seems really weird.\nAnyway, the issue is still legit for form views I think. Good news is there is probably a way to get (or set it from our form extension maybe) the block prefix, so we won't have to do anything to normalize the form type FQCN.\n. What is your configuration ? Because the list template properly use dataType, so it seems really weird.\nAnyway, the issue is still legit for form views I think. Good news is there is probably a way to get (or set it from our form extension maybe) the block prefix, so we won't have to do anything to normalize the form type FQCN.\n. @Pierstoval : Sure. It is a syntactic sugar for the slice filter. The syntax is [start:length].\nHere it simply means: \"Start to the penultimate element (-2) of the array of block prefixes, and return me the remaining slice (no length). Then simply access the first element (which is the penultimate one)\"\n. @Pierstoval : Sure. It is a syntactic sugar for the slice filter. The syntax is [start:length].\nHere it simply means: \"Start to the penultimate element (-2) of the array of block prefixes, and return me the remaining slice (no length). Then simply access the first element (which is the penultimate one)\"\n. @xabbuh : Really ? :confused: \nTests passed, so I didn't worry about, but I've got some doubts regarding what you say. To me, block_prefixes has always existed and are used by form themes to choose the appropriate Twig block to render.\n. See https://github.com/symfony/symfony/blob/2.3/src/Symfony/Component/Form/FormRenderer.php#L192 and https://github.com/symfony/symfony/blob/2.3/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php#L88\n. @javiereguiluz : field-{{ block_prefixes[-2:1] }} still returns an array (of one element, but still an array).\nSo we'll need field-{{ block_prefixes[-2:1][0] }}. IMO there is no gain here.\n. @javiereguiluz, @Pierstoval  : I like it. But finally, just asking, as we're going there, what will you prefer between:\n- block_prefixes[-2:]|first\n- block_prefixes|slice(-2)|first\n?\n. :heart_eyes_cat: Loving this.\n. I'm fine with that :+1: \n. @reypm : I'm surprised. Isn't it the same issue as #659 you've opened yourself ? :sweat_smile: \n. @reypm : The field_boolean.html.twig is only used for the list & show views. Not for forms for which Symfony & Twig 's form themes are used instead.\nDid you clear the cache after adding the new translations ?\n. @javiereguiluz: If to you think the only gain is about performances, why not re-consider #414 which is a straightforward solution to this and avoid a lot of changes ? \nWe've seen the performance gain is pretty low, so requiring a lot of changes for this seems to be too much.\nI don't know anything about DisconnectedClassMetadataFactory, but looking at the code, it only seems to act as a \"placeholder\". \nInstead I'd use a compiler pass to call $em->getMetadataFactory()->getMetadataFor($entityClass). \n. @Pierstoval : not natively by EasyAdmin, but why not by third-party bundles which would simply have to implement the proper loaders. So yes we'll have to worry. ^^'\n. @javiereguiluz : Why do you use findDefinition instead of get here ?\n. @javiereguiluz : But you don't want to get the definition, but the instantiated service. Use get:\nphp\nnew MetadataConfigPass($container->get('doctrine')),\n. It only retrieves the first kernel available in KERNEL_DIR (set in phpunit.xml). So AppKernel.\nYou should override KernelTestCase::getKernelClass to change this behavior.\n. The documentation you are looking for is \"Customizing Form Design\".\nAlso see \"How to Customize Form Rendering\" from symfony.com for more information about form theming.\n. The documentation you are looking for is \"Customizing Form Design\".\nAlso see \"How to Customize Form Rendering\" from symfony.com for more information about form theming.\n. No need to check for the field_type, you can directly override the money_widget or money_row according to your needs (each form type has its own theme based on its name/block prefix, and there is a MoneyType).\nYou can also override the form theme of a single field by using its more accurate block prefix, composed of the root form name and field name. For instance, for a root form named form as in EasyAdmin, and a field named price, create a block named _form_price_widget or _form_price_row.\nBut the best for you is certainly to override the theme for all money types.\n. You can use the <body> id or class in order to distinguish on which page and entity you are.\nBut I agree we can probably make it simpler by adding some extra classes to the form type directly.\nMaybe we could also add data attributes for view and entity on the <form> tag.\n. Summary of the actions to take about this issue (extracted from #736) : \n- [x] change the id to {view}-{entity}-form (id should be as accurate as possible)\n- [x] add data- attributes for entity, view, and eventually entity-id for edit forms\n- [x] change the form name to the entity name instead of using form \n. See #739 \n. You can add your own css file using the easyadmin config or the head_stylesheets block in your template.\nWith easyadmin conf:\n``` yaml\napp/config/admin.yml\neasyadmin:\n    design:\n        assets:\n            css: [your_css_file_public_path]\n``\n. Right. Simply replacing/` with proper dashes would be sufficient though. I don't see how a regex can help much.\n. Is there a way to resolve form themes templates names during container compile to always have the same format ?\n. @javiereguiluz : I definitively agree. Let's remove this \"feature\" in this PR and take care of the rest in another.\n. Looks good to me, but it's hard to review everything in such a big PR ^^'\nAnyway, fantastic work ! :+1: \n. @javiereguiluz : I doubt your composer update --prefer-lowest worked as expected regarding your composer show -i.\nHere is mine:\ndoctrine/annotations              v1.0    Docblock Annotations Parser\ndoctrine/cache                    v1.0    Caching library offering an object-oriented API for many cache backends\ndoctrine/collections              v1.0    Collections Abstraction library\ndoctrine/common                   v2.4.0  Common Library for Doctrine projects\ndoctrine/data-fixtures            v1.0.0  Data Fixtures for all Doctrine Object Managers\ndoctrine/dbal                     2.3.3   Database Abstraction Layer\ndoctrine/doctrine-bundle          v1.2.0  Symfony DoctrineBundle\ndoctrine/doctrine-fixtures-bundle v2.2.0  Symfony DoctrineFixturesBundle\ndoctrine/inflector                v1.0    Common String Manipulations with regard to casing and singular/plural rules.\ndoctrine/instantiator             1.0.4   A small, lightweight utility to instantiate objects in PHP without invoking their constructors\ndoctrine/lexer                    v1.0    Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.\ndoctrine/orm                      2.3.0   Object-Relational-Mapper for PHP\njdorn/sql-formatter               v1.1.0  a PHP SQL highlighting library\npagerfanta/pagerfanta             v1.0.1  Pagination for PHP 5.3\nphpunit/php-code-coverage         2.0.0   Library that provides collection, processing, and rendering functionality for PHP code coverage information.\nphpunit/php-file-iterator         1.3.2   FilterIterator implementation that filters files based on a list of suffixes.\nphpunit/php-text-template         1.2.0   Simple template engine.\nphpunit/php-timer                 1.0.3   Utility class for timing\nphpunit/php-token-stream          1.1.4   Wrapper around PHP's tokenizer extension.\nphpunit/phpunit                   4.4.0   The PHP Unit Testing framework.\nphpunit/phpunit-mock-objects      2.3.0   Mock Object library for PHPUnit\npsr/log                           1.0.0   Common interface for logging libraries\nsebastian/comparator              1.0.0   Provides the functionality to compare PHP values for equality\nsebastian/diff                    1.1.0   Diff implementation\nsebastian/environment             1.1.0   Provides functionality to handle HHVM/PHP environments\nsebastian/exporter                1.0.0   Provides the functionality to export PHP variables for visualization\nsebastian/global-state            1.0.0   Snapshotting of global state\nsebastian/version                 1.0.0   Library that helps with managing the version number of Git-hosted PHP projects\nsensio/distribution-bundle        v2.3.0  The base bundle for the Symfony Distributions\nsensio/framework-extra-bundle     v3.0.2  This bundle provides a way to configure your controllers with annotations\nsymfony/browser-kit               v2.3.0  Symfony BrowserKit Component\nsymfony/config                    v2.3.0  Symfony Config Component\nsymfony/console                   v2.3.0  Symfony Console Component\nsymfony/css-selector              v2.3.0  Symfony CssSelector Component\nsymfony/debug                     v2.3.0  Symfony Debug Component\nsymfony/dependency-injection      v2.3.0  Symfony DependencyInjection Component\nsymfony/doctrine-bridge           v2.3.0  Symfony Doctrine Bridge\nsymfony/dom-crawler               v2.3.0  Symfony DomCrawler Component\nsymfony/event-dispatcher          v2.3.0  Symfony EventDispatcher Component\nsymfony/filesystem                v2.3.0  Symfony Filesystem Component\nsymfony/finder                    v2.3.0  Symfony Finder Component\nsymfony/form                      v2.3.0  Symfony Form Component\nsymfony/framework-bundle          v2.3.0  Symfony FrameworkBundle\nsymfony/http-foundation           v2.3.0  Symfony HttpFoundation Component\nsymfony/http-kernel               v2.3.0  Symfony HttpKernel Component\nsymfony/icu                       v1.0.0  Contains an excerpt of the ICU data and classes to load it.\nsymfony/intl                      v2.3.0  A PHP replacement layer for the C intl extension that includes additional data from the ICU library.\nsymfony/options-resolver          v2.1.0  Symfony OptionsResolver Component\nsymfony/phpunit-bridge            v2.7.0  Symfony PHPUnit Bridge\nsymfony/property-access           v2.3.0  Symfony PropertyAccess Component\nsymfony/routing                   v2.2.0  Symfony Routing Component\nsymfony/security                  v2.3.0  Symfony Security Component\nsymfony/security-bundle           v2.3.0  Symfony SecurityBundle\nsymfony/stopwatch                 v2.3.0  Symfony Stopwatch Component\nsymfony/templating                v2.1.0  Symfony Templating Component\nsymfony/translation               v2.3.0  Symfony Translation Component\nsymfony/twig-bridge               v2.3.4  Symfony Twig Bridge\nsymfony/twig-bundle               v2.3.0  Symfony TwigBundle\nsymfony/validator                 v2.3.0  Symfony Validator Component\nsymfony/yaml                      v2.3.0  Symfony Yaml Component\ntwig/extensions                   v1.0.0  Common additional features for Twig that do not directly belong in core\ntwig/twig                         v1.14.2 Twig, the flexible, fast, and secure template language for PHP\n. @javiereguiluz : That's strange anyway. Tests used to pass with those requirements until now.\n. @javiereguiluz : After some tries, it seems that \"symfony/framework-bundle\"      : \"^2.3.24|~3.0\", is enough to fix everything.\nThe best would be to know what was fixed in the 2.3.24 version of the symfony/framework-bundle, and why we didn't get any error before. (We still don't get any on master branch)\n. Seems related to https://github.com/symfony/symfony/pull/12894\n. This is the incriminated line !\nThe issue you've read about isn't about having both php and twig engines at the same time, but having one of them registered twice, because of including twice the config.yml file and templating:      { engines: ['twig'] }.\nYou can revert anything changed from composer.json file and remove this line :)\n. @reypm : _delete_action is a twig variable containing the action's metadata configured from the easyadmin config. It's not a translation key. The content of _delete_action.label is, and you can configure it:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            list:\n                actions:\n                    - { name: 'delete', label: 'action.delete_btn }\nThe default translation key for this action is action.delete and already exists actually.\n. Indeed, the same label is used for both delete btn in list view and modal. Maybe the delete modal should have its own translation keys.\n. @reypm : You can take care of this :smiley: \nExposing a new modal.action.delete translation key or whatever might be a good solution.\n. :+1: \nFrench translation for this is Supprimer :wink: \n. @javiereguiluz : #780 should fix your issue. Probably by habits with arrays & other indexed stuff, I wrongly assumed the first page was 0 instead of 1 when I wrote this condition. :smile: \n. :+1: \n. @reypm : It is since Symfony 2.8, as using the form aliases is deprecated. Aliases are removed in 3.0, and FQCN are used instead.\nEven if EasyAdmin currently does some stuff to ensure we can use the aliases for native types, I think the whole documentation of the bundle should be updated in order to reflect that change.\n. It looks great so far :)\n. Options 3 but:\ntwig\n{% block global_actions %}\n<div class=\"global-actions\">\n    <div class=\"row\">\n        {% block global_actions_row %}{% endblock %}\n    </div>\n</div>\n{% endblock %}\nor if it make sense (but I doubt it will for most cases) : \ntwig\n{% block global_actions %}\n<div class=\"global-actions\">\n    {% block global_actions_row %}\n     <div class=\"row\">\n        {% block global_actions_row_inner %}{% endblock %}\n     </div>\n    {% endblock %}\n</div>\n{% endblock %}\nActually, it's hard to tell without more context. It really depends where it'll be.\n. Just asking about the list view and the search bar:\n\nShouldn't the search bar be aligned with title (in desktop version only, but also avoid the gap between the search bar and the add btn) ?\n. @javiereguiluz : Indeed, that's quite concise ! Here we are then #796 :smile: \n. :+1: It also allows to easily render tag elements as labels for instance, using pure css without changing the template.\nHowever, I  would expect those items to be links to targeted entities. But it of course adds some complexity to this PR. :/\n. :+1: Makes sense.\n\nIf the user adds the above form_theme option ... VichUploaderBundle will override our styles and the result will be our current situation.\n\nBut it'll probably depend on the order of the declared form themes. If we define the vich files & images blocks in the horizontal layout theme, it'll be used. The themes order should be reversed.\n. It's way better, but IMO it's still too big.\nCan we consider (maybe not for this PR) integrating (or making a basic implementation of) a js plugin (as well for other views) in order to have display the full size image on click on a thumbnail ?\n. Alternatively, we can for now fix the image size to a decent thumbnail proportion (between 100 and 250px) and ~~add~~ let the link on it.\n. Just for the record, I tried a pure CSS implementation, maybe you can give it a try to enhance it:\n``` diff\n--- a/Resources/views/css/easyadmin.css.twig\n+++ b/Resources/views/css/easyadmin.css.twig\n@@ -349,8 +349,8 @@ a.btn-secondary:active {\n .easyadmin-vich-image img {\n     border: 3px solid {{ colors.white }};\n     box-shadow: 0 0 3px {{ colors.gray }};\n-    max-height: 300px;\n-    max-width: 400px;\n+    max-height: 160px;\n+    max-width: 250px;\n }\n .easyadmin-vich-file input[type=\"file\"] {\n     padding-top: 7px;\n@@ -361,6 +361,33 @@ a.btn-secondary:active {\n     display: none;\n }\n+.easyadmin-vich-image a {\n+    transition: all 0.3s;\n+}\n+.easyadmin-vich-image a img {\n+    transition: all 0.2s;\n+}\n+.easyadmin-vich-image a:hover {\n+    position: fixed;\n+    z-index: 9999;\n+    left: 0;\n+    background: rgba(0,0,0,0.75);\n+    width: 100%;\n+    height: 100%;\n+    bottom: 0;\n+    opacity: 1;\n+}\n+.easyadmin-vich-image a:hover img {\n+    position: absolute;\n+    left: 0;\n+    top: 0;\n+    right: 0;\n+    bottom: 0;\n+    margin: auto;\n+    max-height: 100%;\n+    max-width: 100%;\n+}\n+\n```\nBut I fear it might be more annoying than useful as it is.\nIt can be enhanced to respond on click instead on hover by using the :target pseudo-class & a predefined modal element. (See references below)\nThe js plugin mentioned by @reypm looks good. I don't know if there is lighter.\nHere is also a full implementation of a pure CSS modal we can eventually inspire of. And some references:\n- http://www.webdesignerdepot.com/2012/10/creating-a-modal-window-with-html5-and-css3/\n- http://codepen.io/maccadb7/pen/nbHEg\n. Looks good ! :)\n. Looks good ! :)\n. @javiereguiluz : :confused: Unfortunately, it seems it does not render properly on small screens.\n. @javiereguiluz : :confused: Unfortunately, it seems it does not render properly on small screens.\n. ~~I confirm what @javiereguiluz said: simply load your bundle after EasyAdminBundle.\nYou can also use the prepend extension feature, but you'll need to get the $config array your self for the extension and cannot use $loader->load('administrator.yml'); as is.~~\n. ~~I confirm what @javiereguiluz said: simply load your bundle after EasyAdminBundle.\nYou can also use the prepend extension feature, but you'll need to get the $config array your self for the extension and cannot use $loader->load('administrator.yml'); as is.~~\n. Nice.\nMaybe you can also fix the vertical centering of the deletion icon ?\nBefore:\n\nAfter:\n\ndiff\n.select2-container--bootstrap .select2-selection--multiple .select2-selection__choice__remove {\n    color: #D42124;\n    font-weight: bold;\n+    position: relative;\n+    top: -1px;\n}\n. Nice.\nMaybe you can also fix the vertical centering of the deletion icon ?\nBefore:\n\nAfter:\n\ndiff\n.select2-container--bootstrap .select2-selection--multiple .select2-selection__choice__remove {\n    color: #D42124;\n    font-weight: bold;\n+    position: relative;\n+    top: -1px;\n}\n. I was not convinced despite the fact it was well implemented. But if the others think it makes sense, why not :)\nHowever, do we need to include another library ? Also do you think we can use localStorage/sessionStorage for this in order to simplify ?\n. I was not convinced despite the fact it was well implemented. But if the others think it makes sense, why not :)\nHowever, do we need to include another library ? Also do you think we can use localStorage/sessionStorage for this in order to simplify ?\n. @unexge : You're right, and I can see many reports on the Admin LTE repository about this missing feature, and the reason it was not done yet is because they indeed advise to do this server-side in order to avoid unwanted transitions (https://github.com/almasaeed2010/AdminLTE/issues/315).\nHowever, I'm still not convinced by the cookie added in js + the library :/\nBut the only other solution I see is an ajax call to save the sidebar state inside session.\n. @unexge : You're right, and I can see many reports on the Admin LTE repository about this missing feature, and the reason it was not done yet is because they indeed advise to do this server-side in order to avoid unwanted transitions (https://github.com/almasaeed2010/AdminLTE/issues/315).\nHowever, I'm still not convinced by the cookie added in js + the library :/\nBut the only other solution I see is an ajax call to save the sidebar state inside session.\n. Just my last comment and everything is good to me :) :+1: \nThank you @javiereguiluz \n. Just my last comment and everything is good to me :) :+1: \nThank you @javiereguiluz \n. :+1: \n. :+1: \n. :+1: \n. Hi,\nIn yaml, you should use double quotes and \\ to evaluate a unicode sequence:\nyml\neasyadmin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            list:\n                fields:                    \n                    - { property: 'price', format: '%.2f', label: \"Price (\\u20B9)\"}\n\nHave a look at the Yaml component documentation for more informations.\n(As mentioned by Javier below, you should probably rather define your labels in a translation file. If you're using the YAML format for those files, you can use the same solution as above to evaluate a unicode sequence :) )\n. Hi,\nIn yaml, you should use double quotes and \\ to evaluate a unicode sequence:\nyml\neasyadmin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            list:\n                fields:                    \n                    - { property: 'price', format: '%.2f', label: \"Price (\\u20B9)\"}\n\nHave a look at the Yaml component documentation for more informations.\n(As mentioned by Javier below, you should probably rather define your labels in a translation file. If you're using the YAML format for those files, you can use the same solution as above to evaluate a unicode sequence :) )\n. I agree with @Pierstoval on this.\n. Why not adding a dedicated build in the allow_failure section, so we can have the result of the required builds on Github without being annoyed by the coverage build ?\n. :+1: \nI wanted to add this some time ago, but I wasn't sure you'd like to sustain the version number :)\n. :+1: \nI wanted to add this some time ago, but I wasn't sure you'd like to sustain the version number :)\n. @javiereguiluz : Not sure, but this might solve the issue: \n``` diff\nDependencyInjection/Configuration.php#L414-L415\n// ...\nprivate function addEntitiesSection(ArrayNodeDefinition $rootNode)\n    {\n        $rootNode\n            ->children()\n                ->arrayNode('entities')\n+                   ->useAttributeAsKey('name')\n                    ->normalizeKeys(false)\n                    ->defaultValue(array())\n                    ->info('The list of entities to manage in the administration zone.')\n                    ->prototype('variable')\n                ->end()\n            ->end()\n        ;\n    }\n```\n. @javiereguiluz : Not sure, but this might solve the issue: \n``` diff\nDependencyInjection/Configuration.php#L414-L415\n// ...\nprivate function addEntitiesSection(ArrayNodeDefinition $rootNode)\n    {\n        $rootNode\n            ->children()\n                ->arrayNode('entities')\n+                   ->useAttributeAsKey('name')\n                    ->normalizeKeys(false)\n                    ->defaultValue(array())\n                    ->info('The list of entities to manage in the administration zone.')\n                    ->prototype('variable')\n                ->end()\n            ->end()\n        ;\n    }\n```\n. :-1:  EasyAdmin only returns html right now, but we might return json for ajax calls in the future, or someone might have already added some custom actions in his backend returning json or any other format.\nI don't know which part exactly forces the request format in your app, but it might be a lack or error in your FOSRestBundle configuration (might be the Format listener configuration).\n\n\nhttp://symfony.com/doc/master/bundles/FOSRestBundle/3-listener-support.html \nhttp://symfony.com/doc/master/bundles/FOSRestBundle/format_listener.html\n. > From my ignorance, the last comment from @joserobleda makes sense: we're adding a default format for the Request, not the response.\n\nBut anyone can rely on the request format to do something when building the response :/\nTo me, it isn't an EasyAdmin issue, but an app configuration level one. The bundles used should be properly configured by the developper, not by third-party bundles themselves.\n. Great :) And at least we'll have this issue if someone encounters a similar problem with FOSRest.\n. I might have already mentioned this in the past, but IMHO we should have our own metadata system for entities configuration, which will be loaded at runtime, but cached. \nSomething similar to what exists in Symfony's Serializer and Validator components, with a ClassMetadataFactory and a list of chained loaders (EasyAdminConfigLoader & DoctrineMetadataLoader to start with) able to load/process/complete configuration from different providers/places.\nIt'll probably avoid requiring those tricky compiler passes, but we'll have to use a doctrine cache system instead of the container's config cache one.\n. @yceruto : Glad it helped !\nI've left a comment, but don't loose too much time on it. I'm :+1: to merge this if it's working as well as it looks !\n. Note that once this PR is merged or rebased on master, the easyadmin-all.min.js file needs to be re-built.\n. I don't think any solution should be provided by EasyAdminBundle itself; but instead show some examples on how to achieve such a thing by exposing code samples in the easy admin demo application.\nThe solution provided by @yceruto is exactly what I thought about this \"feature\" (but instead of overriding the AdminController, use a listener on one of the events dispatched by the EasyAdminBundle.)\n. @javiereguiluz : Actually, shouldn't it even be something like:\n``` yml\napp/config/config.yml\nfos_rest:\n    format_listener:\n        enabled: true\n        rules:\n            # [...] previous rules declarations\n            - { path: '^/admin', stop: true }\n```\nor exactly as shown in the docs, disable format listener on anything non api-related:\n``` yml\napp/config/config.yml\nfos_rest:\n    format_listener:\n        enabled: true\n        rules:\n            - { path: '^/api', priorities: ['json', 'xml'], ... } # or any other rule needing the format listener\n            - { path: '^/', stop: true }\n```\n?\nWe should also add a link to this section.\n. What about setting this value in a twig variable, in order to be able to change its value easily by extending the template file ?\ntwig\n{# field_association.html.twig #}\n{% set limit = limit | default(15) %}\n``` twig\n{# app/Resources/views/easyadmin/field_association.html.twig #}\n{% extends \"field_association.html.twig\" %}\n{% set limit = 25 %}\n```\n. I don't have any real opinion on this :confounded: 100 is a pretty huge number, already too large for most use-cases IMO.\nMy thoughts were only about being able to change some templates parameters with minimal efforts if needed, but it's indeed not better than a configuration option.\nWe might \"reduce\" the maintenance complexity by combining the two:\ntwig\n{# field_association.html.twig #}\n{% set field_options = field_options|merge({ \n    limit: field_options.limit|default(15) \n}) %}\nThis way, no need to modify EasyAdminTwigExtension code to add a new option for a specific template. We provide clear configurable options for templates by declaring every option this way at the beginning of the template.\n``` yaml\neasy_admin:\n    entities:\n        Football Match:\n            class: AppBundle\\Entity\\FootballMatch\n            show:\n                fields:\n                    # ...\n                    - { property: 'players', limit: 22 }\n``\n. @javiereguiluz : TheProcessor::processConfigmethod seems to be called only in the cache warmer. Which means that we need to remove the cache and warm the application each time we change the easyadmin config, even in debug environments ? \ud83d\ude15 \nI think, with this solution, we should not cache anything in debug mode. (Or we could rely on the symfony'sConfigCache` class to detect changes in the configuration in debug mode, but that means externalize all the easyadmin config in a dedicated file named after a convention, or explicitly loaded by a bundle option...)\nAlso, why not using a filesystem doctrine/cache instead of a manual implementation ?\n. @javiereguiluz I guess the cache is warmed up in dev environment because you modify the app config files, and thus the symfony's ConfigCache is invalidated. So the cache need to be warmed up again, but that's quite ~~unstable~~ hazardous IMHO \ud83d\ude15 \nIn tests, you do not change any configuration file, but you simply create a \\ConfigProcessorKernel with another backend config in memory. Thus the ConfigCache is not invalidated, because there is no change in the files loaded by the registerContainerConfiguration method.\n. @javiereguiluz : For now with this implementation, I suggest: \n1. To make the Processor class aware of its cache (by creating an intermediate cache service and injecting it) and use it/injecting it only if not in debug mode.\n   I mentioned doctrine/cache because it'll be easy to configure this intermediate service and use a clear interface for caching in Processor.\n2. The Configurator class should not load the cache itself, but simply call Processor::processConfig, that will generate the cache at first call in non-debug mode, and return the processed config from cache if already computed.\n3. The only thing the warmer will do is calling Processor::processConfig, that will pre generate the cache before the first request hitting the application.\n. @javiereguiluz : It actually looks better :) \nHowever, I'm indeed not fan of the service_container being injected in the easyadmin.config.manager, but I don't know from where comes the circular reference, so I can't help right now. \nI think the most elegant solution for enabling the cache is having it as an optional dependency of the easyadmin.config.manager, and only inject it from the bundle extension if the kernel.debug parameter is true. But as you already inject the whole container... \u00af_(\u30c4)_/\u00af\n. @javiereguiluz: Hmmm. I doubt it is a PHPUnit issue. It simply looks like there is an issue with the cache being used even in debug mode, but as far as I can tell, your code looks good \ud83d\ude15 \n. @javiereguiluz : This is due to the fact the Kernel class does not call registerContainerConfiguration if the ConfigCache already exists and is valid..  You can eventually overwrite the getContainerClass method of the Kernel class to return a different string for each config (and thus generate a new cache for each), or keep removing it as you did.\n. I'm personally used to hardcode those in templates because in most cases the submit button has nothing to do in the form type (it should only be on the root form, not on reusable types), and I hate adding it in the controller action by altering the result of $this->createForm(). \nBut... To be honest, I think the last solution is the good thing to do. Plus it allows the button to be themed as any other form children.\nSo \ud83d\udc4d \n. I'm personally used to hardcode those in templates because in most cases the submit button has nothing to do in the form type (it should only be on the root form, not on reusable types), and I hate adding it in the controller action by altering the result of $this->createForm(). \nBut... To be honest, I think the last solution is the good thing to do. Plus it allows the button to be themed as any other form children.\nSo \ud83d\udc4d \n. @javiereguiluz : Sorry I can't review this fully right now, however one quick question : Why not using a kernel.controller event listener to change the controller according to the entity config ?\n. I think the trick you used with the label & translations is enough and appropriated (it's the most common, generic, straightforward & flexible solution). \ud83d\udc4d \nWe should just mention this possibility in the documentation IMHO.\n. I think the trick you used with the label & translations is enough and appropriated (it's the most common, generic, straightforward & flexible solution). \ud83d\udc4d \nWe should just mention this possibility in the documentation IMHO.\n. @yceruto: Thank you for your patience and for taking the time to study the different solutions. \ud83d\udc4d \nI think this is now ready for the final review & merge :)\n. Something escapes me ... Weren't those changes included in #1195 ?\nSo...seems totally legit \ud83d\ude04 \n. Something escapes me ... Weren't those changes included in #1195 ?\nSo...seems totally legit \ud83d\ude04 \n. Looks like a bad rebase/merge conflict resolving: https://github.com/javiereguiluz/EasyAdminBundle/commit/0a9132e3b705f7698bf4c2e372fb8d0bd7636c80\n. Using a form theme is the best way to ensure the fields rendering order.\n. @JuanWilde We add form fields in the order you set them in the config, but if some custom code remove and add them back, it can't keep the order. Due to how symfony forms work, an added field is always added after the previously added ones.\nAnyway, relying on this particular order is not the right thing to do (because the fields order in a form type is not pertinent).\nThus the form theme suggestion, which is the only one IMHO \ud83d\ude04 \nBut... I think we could do something to ease writing form theme for this case...\nThe block prefix to use to override the form theme is always the same: easyadmin_widget. Thus you cannot deal easily with theme overriding for a particular entity.\nWe should probably allow to override those lines easily by wrapping them in a proper block. Then you can override it and rely on the easyadmin.entity.name variable to render another dedicated block with the right fields order.\nEDIT: The other solution is to let the EasyAdminFormType change the FormView children order (probably more straightforward actually).\n. > However, these fields that already exists you don't need removed, these keeps the old position (in children array) and the type and options is changed only.\n@yceruto : \ud83d\ude2e  I didn't event thought about that. \ud83d\udc4d \n. The POC looks clever, but I think only the divider can be considered as a form type. I don't really see how you can achieve to implement the \"section\" & \"group\" feature with this method (and the current way to close a group seems hacky). \ud83d\ude15 \nHowever, maybe the groups & sections can simply be form options, used by the EasyAdminFormType in the finishView method, in order to create FormView instances gathering form fields by the given options, and with custom block prefixes to allow easy theming of sections & groups.\nThen, when rendering the easyadmin_widget, we won't try to render the classic form view as now, but our new groups & sections ones instead, by calling form_row/widget on each of the FormView instances we added in the EasyAdminFormType::finishView() method.\nNote that I didn't try this myself. I don't know at all if it's feasible. I only try to give some new ideas. \ud83d\ude05 \n. The POC looks clever, but I think only the divider can be considered as a form type. I don't really see how you can achieve to implement the \"section\" & \"group\" feature with this method (and the current way to close a group seems hacky). \ud83d\ude15 \nHowever, maybe the groups & sections can simply be form options, used by the EasyAdminFormType in the finishView method, in order to create FormView instances gathering form fields by the given options, and with custom block prefixes to allow easy theming of sections & groups.\nThen, when rendering the easyadmin_widget, we won't try to render the classic form view as now, but our new groups & sections ones instead, by calling form_row/widget on each of the FormView instances we added in the EasyAdminFormType::finishView() method.\nNote that I didn't try this myself. I don't know at all if it's feasible. I only try to give some new ideas. \ud83d\ude05 \n. @javiereguiluz : I left some minor comments. By time, we can probably enhance the code, but honestly this already looks very promising. Great work ! \ud83d\udc4f \n. @javiereguiluz : I left some minor comments. By time, we can probably enhance the code, but honestly this already looks very promising. Great work ! \ud83d\udc4f \n. @javiereguiluz : The services declarations for those form types are missing. (it's mandatory in 2.3 & 2.7, because it wasn't guessed by FQCN before, but by aliases registered in the form.type tag.\n. @javiereguiluz : The services declarations for those form types are missing. (it's mandatory in 2.3 & 2.7, because it wasn't guessed by FQCN before, but by aliases registered in the form.type tag.\n. Oh. Seems you find out the issue \ud83d\ude05 \n. Oh. Seems you find out the issue \ud83d\ude05 \n. I have two questions about the PR:\n1. Can we compile all the translations files into the main easyadmin.js one ? Then no need to include \"dynamically\" the proper file.\n2. Is there a default locale option in the plugin in order to to avoid checking if the current locale exists in provided translations ? Otherwise, can we simply get the list of available locales from the plugin, and fallback to en if it isn't available ?\n   -> You can set the default language option like this: $.fn.select2.defaults.set('language', 'en');\nAlso, @Pierstoval is right. At least we should try the long language code (nl_NL, transformed to nl-NL to conform the plugins expectations) before fallbacking to the short one (nl). Someone can load its own translations files.\n. Also, another question: Is it really worth it ? \nI mean, there is not much translations and english is probably sufficient for most of our situations.\n. @Pierstoval : My guess is that we won't need any PHP code for this. Simply get the list of translated languages from the plugin.\n. You should probably override the label_null template.\nHave a look to the \"Advanced Design Configuration\" section to learn more about templates overriding and how to proceed.\n. You should probably override the label_null template.\nHave a look to the \"Advanced Design Configuration\" section to learn more about templates overriding and how to proceed.\n. Hmm, how do you expect to have the $entity variable in the newAction to be your DTO object ? \ud83d\ude15 \nBy implementing the createNew<EntityName>Entity() method ?\nThe issue is that the metadata (as well as the data_class option) used to build the form may be wrong if your DTO fields are not exactly matching your entity (which often is not the case).\nIs the idea to map your DTOs in the easyadmin config instead of entities directly ?\nAppart from the idea itself, the main issue I see is that EasyAdmin isn't designed to handle DTO objects in the bundle configuration. So the feature may require more work than wrapping the event data in an AdminEntityEvent class :/\nAlso if we're going there, for each view, you may have different DTO for a same entity.\n. Hmm, how do you expect to have the $entity variable in the newAction to be your DTO object ? \ud83d\ude15 \nBy implementing the createNew<EntityName>Entity() method ?\nThe issue is that the metadata (as well as the data_class option) used to build the form may be wrong if your DTO fields are not exactly matching your entity (which often is not the case).\nIs the idea to map your DTOs in the easyadmin config instead of entities directly ?\nAppart from the idea itself, the main issue I see is that EasyAdmin isn't designed to handle DTO objects in the bundle configuration. So the feature may require more work than wrapping the event data in an AdminEntityEvent class :/\nAlso if we're going there, for each view, you may have different DTO for a same entity.\n. EasyAdminBundle already provides a way to override templates per entity. But it's unfortunately not available for the _actions.html.twig template :/\nSo what about adding it (with other included templates) in the TemplateConfigPass and using it in the list.html.twig one ?\n. \ud83d\udc4d This should totally belong to the FormView vars.\n. @javiereguiluz : You can use something like this:\n``` diff\ndiff --git a/Form/Extension/EasyAdminExtension.php b/Form/Extension/EasyAdminExtension.php\nindex f7c7433..85bbd37 100644\n--- a/Form/Extension/EasyAdminExtension.php\n+++ b/Form/Extension/EasyAdminExtension.php\n@@ -62,6 +62,7 @@ class EasyAdminExtension extends AbstractTypeExtension\n                 'view' => $action,\n                 'item' => $easyadmin['item'],\n                 'field' => isset($fields[$view->vars['name']]) ? $fields[$view->vars['name']] : null,\n+                'form_group' => $form->getConfig()->getAttribute('easyadmin_form_group'),\n             );\n         }\n     }\ndiff --git a/Form/Type/EasyAdminFormType.php b/Form/Type/EasyAdminFormType.php\nindex 025fb27..bbc38a9 100644\n--- a/Form/Type/EasyAdminFormType.php\n+++ b/Form/Type/EasyAdminFormType.php\n@@ -81,8 +81,6 @@ class EasyAdminFormType extends AbstractType\n                 continue;\n             }\n-            $formFieldOptions['attr']['form_group'] = $currentFormGroup;\n         // 'divider' and 'section' are 'fake' form fields used to create the design\n         // elements of the complex form layouts: define them as unmapped and non-required\n         if (0 === strpos($metadata['property'], '_easyadmin_form_design_element_')) {\n\n@@ -90,7 +88,10 @@ class EasyAdminFormType extends AbstractType\n                 $formFieldOptions['required'] = false;\n             }\n\n$builder->add($name, $formFieldType, $formFieldOptions);\n$child = $builder->getFormFactory()->createNamedBuilder($name, $formFieldType, null, $formFieldOptions);\n$child->setAttribute('easyadmin_form_group', $currentFormGroup);\n+\n$builder->add($child);\n         } $builder->setAttribute('easyadmin_form_groups', $formGroups);\n\n```\n. Hi :)\n\n\nI don't know about simply configuring the method name, because you don't always rely on doctrine repositories (I mean EntityRepository class) to write your custom queries. \nIn our projects, we rather use a custom repository class, in which is injected the doctrine registry or entity manager. If we only allow to configure the method name, that means I'll have to create another xRepository class only for this, which will be confusing.\nSo IMHO, it's simpler to allow solving those use-cases thanks to userland code.\nWhat would you think about:\n- an AdminController::postInitialize<EntityName>Entity magic method allowing to replace the loaded entity by its fully loaded counterpart thanks to code written by end users. It will not save the extra request already made in the RequestPostInitializeListener, but I don't think it matters much in term of performances. \n  I'm not particularly fan of those magic methods, but its part of the EasyAdmin philosophy to solve such cases through them.\n- Writing a \"cookbook entry\" about how to register a EasyAdminEvents::POST_INITIALIZE listener and replace the loaded entity. As for the previous solution, it will not save the extra request.\n- Dispatching a new EasyAdminEvents::LOAD_ENTITY event in RequestPostInitializeListener which expects to hold an entity or null. Thus, an end user can register a listener on this event, load and set the entity himself in the event. If null, we'll fallback on RequestPostInitializeListener::findCurrentItem() implementation.\n  This new feature'll probably deserve a cookbook entry as well.\n?\n. Hi :)\nI don't know about simply configuring the method name, because you don't always rely on doctrine repositories (I mean EntityRepository class) to write your custom queries. \nIn our projects, we rather use a custom repository class, in which is injected the doctrine registry or entity manager. If we only allow to configure the method name, that means I'll have to create another xRepository class only for this, which will be confusing.\nSo IMHO, it's simpler to allow solving those use-cases thanks to userland code.\nWhat would you think about:\n- an AdminController::postInitialize<EntityName>Entity magic method allowing to replace the loaded entity by its fully loaded counterpart thanks to code written by end users. It will not save the extra request already made in the RequestPostInitializeListener, but I don't think it matters much in term of performances. \n  I'm not particularly fan of those magic methods, but its part of the EasyAdmin philosophy to solve such cases through them.\n- Writing a \"cookbook entry\" about how to register a EasyAdminEvents::POST_INITIALIZE listener and replace the loaded entity. As for the previous solution, it will not save the extra request.\n- Dispatching a new EasyAdminEvents::LOAD_ENTITY event in RequestPostInitializeListener which expects to hold an entity or null. Thus, an end user can register a listener on this event, load and set the entity himself in the event. If null, we'll fallback on RequestPostInitializeListener::findCurrentItem() implementation.\n  This new feature'll probably deserve a cookbook entry as well.\n?\n. I agree with you on both first and second options.\nIMHO, the performances needs in a backend for this particular case are marginal enough to make the option 3 sufficient (the repository method has to be written anyway, and the listener/config is very small, + you'll have access to the concerned view and other easyadmin stuff).\nLet's get @javiereguiluz and @Pierstoval thoughts on this \ud83d\ude03 \nEDIT: \n\nWe could also support custom services to fetch the entity\n\nIndeed, I thought about that, but I'm not fan of such methods called without having a clear interface on it (even if the argument list is pretty obvious)\n. I agree with you on both first and second options.\nIMHO, the performances needs in a backend for this particular case are marginal enough to make the option 3 sufficient (the repository method has to be written anyway, and the listener/config is very small, + you'll have access to the concerned view and other easyadmin stuff).\nLet's get @javiereguiluz and @Pierstoval thoughts on this \ud83d\ude03 \nEDIT: \n\nWe could also support custom services to fetch the entity\n\nIndeed, I thought about that, but I'm not fan of such methods called without having a clear interface on it (even if the argument list is pretty obvious)\n. I think I would prefer having a chained item & collection data provider system-like as in api-platform/api-core. This would allow to provide a basic ConfigItemProvider & ConfigCollectionProvider (+some abstract classes) using the easyadmin configuration if you really think it's pertinent, but also register your owns by tags in order to extend or replace base features. \nAs you can see, the interfaces are pretty clear:\nphp\ninterface CollectionDataProviderInterface\n{\n    /**\n     * Retrieves a collection.\n     *\n     * @param string      $resourceClass\n     * @param string|null $operationName\n     *\n     * @throws ResourceClassNotSupportedException\n     *\n     * @return array|PaginatorInterface|\\Traversable\n     */\n    public function getCollection(string $resourceClass, string $operationName = null);\n}\n- $resourceClass is the entity FQCN\n- $operationName will be replace by the view in our case (for collections: list only right now (autocomplete ?). For items: show or edit).\nThose data providers will also be the right candidate in order to integrate advanced search features & co.\nThis chained provider feature was also one of the first steps to bring more abstraction over the data provider, and allow easyadmin to be used with any other data source (ORM, ODM, ES, ...).\n. I think I would prefer having a chained item & collection data provider system-like as in api-platform/api-core. This would allow to provide a basic ConfigItemProvider & ConfigCollectionProvider (+some abstract classes) using the easyadmin configuration if you really think it's pertinent, but also register your owns by tags in order to extend or replace base features. \nAs you can see, the interfaces are pretty clear:\nphp\ninterface CollectionDataProviderInterface\n{\n    /**\n     * Retrieves a collection.\n     *\n     * @param string      $resourceClass\n     * @param string|null $operationName\n     *\n     * @throws ResourceClassNotSupportedException\n     *\n     * @return array|PaginatorInterface|\\Traversable\n     */\n    public function getCollection(string $resourceClass, string $operationName = null);\n}\n- $resourceClass is the entity FQCN\n- $operationName will be replace by the view in our case (for collections: list only right now (autocomplete ?). For items: show or edit).\nThose data providers will also be the right candidate in order to integrate advanced search features & co.\nThis chained provider feature was also one of the first steps to bring more abstraction over the data provider, and allow easyadmin to be used with any other data source (ORM, ODM, ES, ...).\n. @hhamon : There is the equivalent for a single item: the ItemDataProviderInterface interface. I've only shown the collection interface, but fortunately, both exist. :)\n. @hhamon : There is the equivalent for a single item: the ItemDataProviderInterface interface. I've only shown the collection interface, but fortunately, both exist. :)\n. > - this would be the same behavior for EasyAdmin data providers ?\nyes\n\n\nif two data providers handling the same resource class, how I guarantee that my data provider is executed?\n\n\nData providers are registered through a DIC tag with according to a priority attribute.\n\n\nif I just want to add more parties to the query, I would have to make the paginated process too?\n\n\nYou can have a look to the Doctrine ORM CollectionDataProvider implementation and the different classes present in the Bridge/Doctrine/ORM namespace.\nLong story short: this implementation has many extensions itself allowing to paginate, filter, sort the result.\nThe only thing that is a shame is that it will require a lot of duplication from the api-platform/api-core repository. I don't know if it'll be pertinent to extract those abstraction layers & bridges in some new packages nor if it's possible (the ORM implementation relies on api-platform custom metadata).\n. > - this would be the same behavior for EasyAdmin data providers ?\nyes\n\n\nif two data providers handling the same resource class, how I guarantee that my data provider is executed?\n\n\nData providers are registered through a DIC tag with according to a priority attribute.\n\n\nif I just want to add more parties to the query, I would have to make the paginated process too?\n\n\nYou can have a look to the Doctrine ORM CollectionDataProvider implementation and the different classes present in the Bridge/Doctrine/ORM namespace.\nLong story short: this implementation has many extensions itself allowing to paginate, filter, sort the result.\nThe only thing that is a shame is that it will require a lot of duplication from the api-platform/api-core repository. I don't know if it'll be pertinent to extract those abstraction layers & bridges in some new packages nor if it's possible (the ORM implementation relies on api-platform custom metadata).\n. @forsetius : The conversion is handled here by the LegacyFormHelper, but IMHO you should start using FQCN. As its name implies, this class is only here to support old Symfony versions in which form types where identified by an alias rather than the FQCN.\n. With the arrival of https://github.com/symfony/symfony/pull/20053, it could be interesting to add a new country.html.twig template in order to simply render localized countries (same for languages and locales).\n. The boolean type is only available for list & show views.\nFor forms (new & edit) view, instead, the Symfony form types are used (thus checkbox).\n. The boolean type is only available for list & show views.\nFor forms (new & edit) view, instead, the Symfony form types are used (thus checkbox).\n. I guess the issue came from this line, which tries to access the entity id even when creating the entity in the new form. Your entity isn't persisted yet, and thus no identifier has been generated by doctrine.\nHowever, I'm not sure it's a real EasyAdmin issue, as you cannot safely specify that the getId method will return an integer until Doctrine has generated the identifier for you.\nInstead, you would have to wait for PHP 7.1 nullable types:\nphp\npublic function getId(): ?int\n{\n    return $this->id;\n}\n. I guess the issue came from this line, which tries to access the entity id even when creating the entity in the new form. Your entity isn't persisted yet, and thus no identifier has been generated by doctrine.\nHowever, I'm not sure it's a real EasyAdmin issue, as you cannot safely specify that the getId method will return an integer until Doctrine has generated the identifier for you.\nInstead, you would have to wait for PHP 7.1 nullable types:\nphp\npublic function getId(): ?int\n{\n    return $this->id;\n}\n. Maybe I'm missing something, but isn't this feature already achievable by replacing the default translation key message ? I.e replacing in your app edit.page_title for the edit view for instance ?\n. > That's right. But if I have 20 instance I must write the same configs 20 times. For example for every instance title: '%%entity_label%% (#%%entity_id%%)'\n\nAnd here this will be set only one time for all instances.\n\n@annaos : If you override edit.page_title translation key with %%entity_label%% (#%%entity_id%%) as value, then it'll be will be set once for every instances too, not just for one ? \nYou don't have to write any config, but simply override the edit.page_title message.\n. I think that's the only exception we should care. Maybe we should even check the exception error code (1049 - Unknown database) because this can probably hide other issues when the database exists otherwise.\n. @javiereguiluz : Fair enough, I think you're right :) \ud83d\udc4d \n. There are other means than the security bundle in order to secure the backend access (the infrastructure for instance). I think that's why anonymous users were allowed at first. However, I can't find any related comment about this decision. There is only this issue mentioning anonymous users.\nSo maybe it's better to fix the template ?\n. Oh indeed... I remember we discussed about this in https://github.com/symfony/symfony/pull/14816. The behavior has changed now in Symfony 3.0+. So we'll have to do custom checks on the EasyAdmin side in order to safely use the app.user global in our templates...\n. @javiereguiluz : I haven't check yet the best fix, but it appears to me right now that the simplest solution would be to add a custom method in the EasyAdminTwigExtension in order to check if the token storage is available. Something like:\n``` diff\nTwig/EasyAdminTwigExtension.php\nprivate $configManager;\nprivate $propertyAccessor;\nprivate $debug;\n\n\n\nprivate $tokenStorage;\n\npublic function __construct(ConfigManager $configManager, PropertyAccessor $propertyAccessor, $debug = false)\npublic function __construct(ConfigManager $configManager, PropertyAccessor $propertyAccessor, $debug = false, TokenStorageInterface $tokenStorage = null)\n{\n    $this->configManager = $configManager;\n    $this->propertyAccessor = $propertyAccessor;\n    $this->debug = $debug;\n$this->tokenStorage = $tokenStorage;\n}\n\npublic function getFunctions()\n{\n    return array(\n        new \\Twig_SimpleFunction('easyadmin_render_field_for_view', array($this, 'renderEntityField'), array('is_safe' => array('html'), 'needs_environment' => true)),\n        new \\Twig_SimpleFunction('easyadmin_config', array($this, 'getBackendConfiguration')),\n        new \\Twig_SimpleFunction('easyadmin_entity', array($this, 'getEntityConfiguration')),\n        new \\Twig_SimpleFunction('easyadmin_action_is_enabled', array($this, 'isActionEnabled')),\n        new \\Twig_SimpleFunction('easyadmin_action_is_enabled_forview', array($this, 'isActionEnabled')),\n        new \\Twig_SimpleFunction('easyadmin_get_action', array($this, 'getActionConfiguration')),\n        new \\Twig_SimpleFunction('easyadmin_get_actions_foritem', array($this, 'getActionsForItem')),\n        new \\Twig_SimpleFunction('easyadmin_get_action_for_view', array($this, 'getActionConfiguration')),\n+            new \\Twig_SimpleFunction('easyadmin_is_token_storage_available, array($this, 'isTokenStorageAvailable')),\n    );\n}\n\n\npublic function isTokenStorageAvailable()\n\n{\nreturn null === $tokenStorage = $this->tokenStorage;\n}\n```\n\nOr something similar (like returning the user instance directly). Not quite elegant, but maybe it'll make sense to add similar methods or globals directly in the Symfony core (in AppVariable).\nIt looks kind of ugly to me, but the current behavior of the AppVariable makes using it in a third party bundle with those dependencies as optional a no go. \ud83d\ude15 \nThat's why I thought returning null instead of throwing an exception for both AppVariable::getUser() and AppVariable::getToken() makes sense, despite the fact it is inconsistent with other methods. :/\nWe could also render a sub-request, or externalize the incriminated template part and choose which template file to include according to the availability of the token_storage/ SecurityBundle.\n. You can tweak the menu items in order to add the default sort parameter value. \nSee this example: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/6-menu-configuration.md#linking-menu-items-to-other-actions\n(But actually, I do think it makes sense to have it natively supported at the entity config level)\n. translation_domain is fine and echoes Symfony's form type option name \ud83d\udc4d . Also, I do think the length of such an option does not matter much anyway ^^.\n. translation_domain is fine and echoes Symfony's form type option name \ud83d\udc4d . Also, I do think the length of such an option does not matter much anyway ^^.\n. What about order_by ?\nOtherwise, sort is fine to me \ud83d\udc4d \n. What about order_by ?\nOtherwise, sort is fine to me \ud83d\udc4d \n. @javiereguiluz : This is documented in and right above the \"Doctrine: Cascading Relations and saving the \"Inverse\" side\" section of the \"How to Embed a Collection of Forms\" cookbook and in http://symfony.com/doc/current/reference/forms/types/form.html#by-reference.\nThis is a common and well-known \"issue\", but not with the Symfony Form component. \n. @javiereguiluz : This is documented in and right above the \"Doctrine: Cascading Relations and saving the \"Inverse\" side\" section of the \"How to Embed a Collection of Forms\" cookbook and in http://symfony.com/doc/current/reference/forms/types/form.html#by-reference.\nThis is a common and well-known \"issue\", but not with the Symfony Form component. \n. I'm not sure it'll be the right thing to do. \nWhat if the association template used for list and show views is overridden in order to use another method to render the entity?\nAlso, for form views,  the EntityType allows to set another method to use for rendering the label, by using choice_label.\n. I'm not sure it'll be the right thing to do. \nWhat if the association template used for list and show views is overridden in order to use another method to render the entity?\nAlso, for form views,  the EntityType allows to set another method to use for rendering the label, by using choice_label.\n. We should probably allow to access and tweak the sub EntityType field options of the autocomplete field (and thus replace the method used to render the entity). But for now those changes looks good to me. :)\n. We should probably allow to access and tweak the sub EntityType field options of the autocomplete field (and thus replace the method used to render the entity). But for now those changes looks good to me. :)\n. Is this code from a custom action ?\nYou're probably using the easyadmin form theme with your own form, which is probably wrong because the easyadmin variable is injected in form views by a dedicated form type extension, expecting the easyadmin in the request attributes. \nBut this request attribute only exists for easyadmin base actions (and custom ones using the method based actions IIRC). \nSo if you're in a custom route based action, the variable does not exists (and actually it won't make sense to use this form theme without this variable. The whole form theme should probably only be used with the EasyAdminFormType).\n. Is this code from a custom action ?\nYou're probably using the easyadmin form theme with your own form, which is probably wrong because the easyadmin variable is injected in form views by a dedicated form type extension, expecting the easyadmin in the request attributes. \nBut this request attribute only exists for easyadmin base actions (and custom ones using the method based actions IIRC). \nSo if you're in a custom route based action, the variable does not exists (and actually it won't make sense to use this form theme without this variable. The whole form theme should probably only be used with the EasyAdminFormType).\n. Hi! Thanks for this feature suggestion!\nIn my opinion, though, it's a niche feature that could easily be implemented on userland by using custom templates.\nRequiring a new PHP or JS dependency for this on EasyAdmin is probably not worth it.\nBTW, some other niche features like this one were rejected in the past :/\nIMHO, it's the same case for this one. But @javiereguiluz will confirm or disprove this :)\n. Hi! Thanks for this feature suggestion!\nIn my opinion, though, it's a niche feature that could easily be implemented on userland by using custom templates.\nRequiring a new PHP or JS dependency for this on EasyAdmin is probably not worth it.\nBTW, some other niche features like this one were rejected in the past :/\nIMHO, it's the same case for this one. But @javiereguiluz will confirm or disprove this :)\n. Hi! Thanks for this feature suggestion!\nIn my opinion, though, it's a niche feature that could easily be implemented on userland by using custom templates.\nRequiring a new PHP or JS dependency for this on EasyAdmin is probably not worth it.\nBTW, some other niche features like this one were rejected in the past :/\nIMHO, it's the same case for this one. But @javiereguiluz will confirm or disprove this :)\n. You may have missed to redefine the indexAction with the proper routing annotation:\nphp\n    /**\n     * @Route(\"/\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request)\n    {\n        return parent::indexAction($request);\n    }\n\nThe indexAction() method is the only \"real controller\" because it's the only method associated with a route (all the pages created with EasyAdmin use a single route called easyadmin). It makes some checks and then it redirects to the actual executed method, such as listAction(), showAction(), etc.:\n\nsee:\n- https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md#admincontroller-properties-and-methods\n- https://github.com/javiereguiluz/easy-admin-demo/blob/master/src/AppBundle/Controller/AdminController.php\n. You may have missed to redefine the indexAction with the proper routing annotation:\nphp\n    /**\n     * @Route(\"/\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request)\n    {\n        return parent::indexAction($request);\n    }\n\nThe indexAction() method is the only \"real controller\" because it's the only method associated with a route (all the pages created with EasyAdmin use a single route called easyadmin). It makes some checks and then it redirects to the actual executed method, such as listAction(), showAction(), etc.:\n\nsee:\n- https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md#admincontroller-properties-and-methods\n- https://github.com/javiereguiluz/easy-admin-demo/blob/master/src/AppBundle/Controller/AdminController.php\n. You may have missed to redefine the indexAction with the proper routing annotation:\nphp\n    /**\n     * @Route(\"/\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request)\n    {\n        return parent::indexAction($request);\n    }\n\nThe indexAction() method is the only \"real controller\" because it's the only method associated with a route (all the pages created with EasyAdmin use a single route called easyadmin). It makes some checks and then it redirects to the actual executed method, such as listAction(), showAction(), etc.:\n\nsee:\n- https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md#admincontroller-properties-and-methods\n- https://github.com/javiereguiluz/easy-admin-demo/blob/master/src/AppBundle/Controller/AdminController.php\n. > i correct route Annotation to /backend\nYou should not have to, as you've already prefixed it in your routing config:\nyml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n. > i correct route Annotation to /backend\nYou should not have to, as you've already prefixed it in your routing config:\nyml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n. > i correct route Annotation to /backend\nYou should not have to, as you've already prefixed it in your routing config:\nyml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/Admin/AdminController.php\"\n    type:     annotation\n    prefix:   /backend\n. > But the thirdParties fiels is not used whatsoever in EasyAdmin config files. \nAre you sure? Maybe you let easyadmin generate the fields to use for the show or list views? Because it seems we explicitly inspect only configured fields for a given action.. Failure is unrelated. See #1419 . Because the 2 issues are well identified. We know the AppVeyor failure is only due to what is fixed in #1419.\nThis PR is an enhancement, whereas the second one is a fix ^^. Success \ud83c\udf89  \\o/. Sorry, I let you so much work in previous PR. My last commit was not aimed to be merged as is, but simply show the impact of risky rules \ud83d\ude05 . Hope you won't loose to much time digging in those tests :/. It's related to https://github.com/symfony/symfony/pull/19639.\n\nhttp://php.net/manual/en/function.http-build-query.php. I've opened https://github.com/symfony/symfony/pull/20856 in order to mention this in the UPGRADE-3.2.md file.. Fields for the show view are guessed automatically as you didn't provide any configuration for it. \nThus, the contacts field is used and requires the Contact::__toString() method to be displayed properly.\nIf it doesn't, there might be an issue with the detection for this message (it intends to help, but it should be reliable and I hope it won't become annoying :/ ).. Makes sense to me \ud83d\udc4d . Sure. See the following config:\nyml\neasy_admin:\n    entities:\n        News:\n            class: App\\News\n            list:\n                actions: ['show', 'edit', 'delete'] # <--- Here are configured actions, per entity and view\nSee https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/5-actions-configuration.md\nand https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/5-actions-configuration.md#adding-actions-globally. I don't think it's true, as require-dev dependencies are only installed when using composer install on the package itself, not as a project dependency.. I wonder how far we should go in the configuration options, considering this one is really tied to the current list layout which uses a table for rendering. Despite the implementation is simple, I fear having more options will complicate the maintenance.\nThe same could be achievable with even more flexibility by adding specific classes to each table cells, and then applying styles in userland.\nSo are such options legitimate?. Appart from the unrelated cs-fixer failure, deps=low is failing because the 2.3 ExceptionListenerPass does not ensure the parameter is set.\nI'll may submit a fix for that in the kernel used in tests as 2.3 is EOM and won't receive bugfixes.\nWe should probably consider removing the support for 2.3 in the near future. . @javiereguiluz : Tests are still failing for 2.3, I didn't fixed it yet, sorry for that \ud83d\ude22 . I think you have to require symfony/templating on the 2.3 build on Travis.. KERNEL_CLASS is only available since 3.3 \ud83d\ude04  I think that's a good thing to add it though, but keep KERNEL_DIR for lowest versions.\nDon't know why DynamicConfigLoadingKernel comes first in your own case though.... Would you mind submitting a PR?\nHere is the only place we'll have to add it IIRC: https://github.com/javiereguiluz/EasyAdminBundle/blob/91faa6981b7d967a7d6a1c3eadfa40dc70bd1213/Configuration/PropertyConfigPass.php#L76. I'm not sure we can make this work without having to duplicate every classes with the old namespace actually, as there is no way for composer to find them otherwise AFAIK. And when using the old namespace, the class_alias is never reached because autoload won't require the new namespaced class file but simply fail.. I'm not sure we can make this work without having to duplicate every classes with the old namespace actually, as there is no way for composer to find them otherwise AFAIK. And when using the old namespace, the class_alias is never reached because autoload won't require the new namespaced class file but simply fail.. See Symfony's DefinitionDecorator renaming for instance:\nhttps://github.com/symfony/symfony/blob/012c56b8cbdba0e9a7db7a869f8d6fec0349ddd8/src/Symfony/Component/DependencyInjection/DefinitionDecorator.php#L12-L29\n\n\nThe  DefinitionDecorator class still exists in its own file and namespace, but the class itself is empty (It's not even registered by php thanks to if (false) but kept for autocompletion and composer class detection.\n   The class_exists(ChildDefinition::class); call triggers autoloading with the new namespace, which will trigger the following point.\n\n\nThe new ChildDefinition aliases the old DefinitionDecorator when autoloaded, so further references to the DefinitionDecorator are already resolved into ChildDefinition: https://github.com/symfony/symfony/blob/3.4/src/Symfony/Component/DependencyInjection/ChildDefinition.php#L133\n\n\nSo I think you'll need to create a legacy/ directory in which you'll re-create for each classes its DefinitionDecorator.php equivalent, and add \"JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\\": \"legacy\" in composer PSR-4 autoloading.. See Symfony's DefinitionDecorator renaming for instance:\nhttps://github.com/symfony/symfony/blob/012c56b8cbdba0e9a7db7a869f8d6fec0349ddd8/src/Symfony/Component/DependencyInjection/DefinitionDecorator.php#L12-L29\n\n\nThe  DefinitionDecorator class still exists in its own file and namespace, but the class itself is empty (It's not even registered by php thanks to if (false) but kept for autocompletion and composer class detection.\n   The class_exists(ChildDefinition::class); call triggers autoloading with the new namespace, which will trigger the following point.\n\n\nThe new ChildDefinition aliases the old DefinitionDecorator when autoloaded, so further references to the DefinitionDecorator are already resolved into ChildDefinition: https://github.com/symfony/symfony/blob/3.4/src/Symfony/Component/DependencyInjection/ChildDefinition.php#L133\n\n\nSo I think you'll need to create a legacy/ directory in which you'll re-create for each classes its DefinitionDecorator.php equivalent, and add \"JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\\": \"legacy\" in composer PSR-4 autoloading.. Another option (but will not allow autocompletion for the old namespace) may be to use composer's file autoloading, so we require a single file containing all the class aliases registration at once.. Another option (but will not allow autocompletion for the old namespace) may be to use composer's file autoloading, so we require a single file containing all the class aliases registration at once.. I don't have the same issue as you with composer dump-autoload -o. I do see both\nphp\n'EasyCorp\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle' => $baseDir . '/EasyAdminBundle.php',\n'JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle' => $baseDir . '/Legacy/EasyAdminBundle.php',\ninside autoload_classmap.php  \ud83d\ude15 . I don't have the same issue as you with composer dump-autoload -o. I do see both\nphp\n'EasyCorp\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle' => $baseDir . '/EasyAdminBundle.php',\n'JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle' => $baseDir . '/Legacy/EasyAdminBundle.php',\ninside autoload_classmap.php  \ud83d\ude15 . I may have a look to it after my vacations :). Hmm, you might have missed my comment (https://github.com/javiereguiluz/EasyAdminBundle/pull/1781#discussion_r136798881). class_alias arguments looks inversed to me, which would explain the message you got. Should be class_alias(NewClass, LegacyClass, false) . Of course. So I just tried your branch and it works great on my side for the EasyAdminBundle class. I get the next error message:\n\nWarning: Class 'JavierEguiluz\\Bundle\\EasyAdminBundle\\DependencyInjection\\EasyAdminExtension' not found in [...]/vendor/javiereguiluz/easyadmin-bundle/src/DependencyInjection/EasyAdminExtension.php:229\n\nwhich is properly solved by inversing the class_alias args order.. What about a 409 \u2014 Conflict ? https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.10. What about a 409 \u2014 Conflict ? https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.10. I can imagine some ugly ways to achieve something... \ud83d\ude04but it's probably better to offer a way to manipulate the select2 options like templateResult & templateSelection. \nIn order to expose more data that could be used by such options in the autocomplete response, perhaps this could leverage symfony/serializer normalizers instead (so the user can implement more specific ones).. @javiereguiluz : This is a Bootstrap feature: https://getbootstrap.com/docs/3.3/javascript/#collapse\n(However the introduced collapsible and expanded options of group_config should probably be explained & documented.). Maybe this should be prefixed with the easyadmin namespace ? (_i.e_: easyadmin.form.type.) Or something more appropriate, as the form will not really be part of the bundle.\n. Now meaningless :sparkles:  (the limit part)\n. !$this->get('service_container')->has($servicename) ? Shouldn't it be without the ! ?\nAnd why not $this->container ?\n. Why not isset ? If the form key exists but is null, we don't want to continue anyway. (also faster)\nSame above and can be inlined : \nphp\nif (isset($this->config['entities'][$entity_name]['form']))\n. I personally do not feel the need of customizing that much the labels for the edit actions buttons/links (displayed on the show view as a button, or in the list view for each row).\nIn fact, thinking back on it, I do not feel it at all, even for the new action and other ones. (But I do for page titles)\nI mean, providing a general translation key with the possibility to insert the entity name or whatever with placeholders isn't sufficient and easily overridable ? Ultimately, they're only actions, and should keep being short and general, don't you think ?\nIn fact, introducing this change is not really harmful at the moment, but is there really many cases where you want the buttons' labels to be totally different for some entities ?\n. I don't know yet how you plan to deal with entities' names translations, but entity_name should be translatable too when it will be available.\nThis will not be very readable nor convenient. But there must be solutions we could work on later in that way (Making it handier). Just to keep it in mind :)\n. As you're not using this response, and there is no other possible response content, you might just want to return an empty 200 or 204 ?\nOr return the current boolean field value in the JsonResponse in order to properly change the control state if someone else updated it meanwhile:\nUser A requests the list page. Entity with id #50 has its boolean field set to true.\nUser B updates the entity with id #50 to false.\nUser A sees the entity with id #50 and its field as true and toggles it to false. In reality, this wil toggle it to true, as it was already changed to false before.\nUser A will think entity's field is set to false, but it's not.\nAnother way (certainly better) will be to send the new value in the Ajax request.\n. Wouldn't it rather be '1' ? https://github.com/doctrine/doctrine2/blob/master/lib/Doctrine/ORM/Mapping/ClassMetadataInfo.php#L166\nEventually, what do you think about using the real constant in Twig ? Not really sexy, but avoid any misleading and does not need any comment.\n. The sortable attribute only has an impact on the list action. Shouldn't this section be exclusively executed for the list one ? (As we're doing for other actions specific attributes)\n. Should we allow to configure a value for this form option while using a custom theme ? Plus, we might only extend the useradmin one and need the col-sm-10 col-sm-offset-2 value.\n. createEditForm too ?\n. Will that work with your own controller (extending EasyAdmin one) ?\n. Until your override the method, yes it is.\n. See ? I'm not even able to write the equivalent of 10 lines without making a typo ! :smile: \n. As a witness, did you ever need to override and add the routing annotation for the renderCssAction method for instance ?\n. Really ? :confused: I also tried with the easy-admin-demo repository, and worked perfectly.\n. ^^' You made my think I was crazy, and was preparing a fork of your easy-admin-demo :smiley_cat: \n. I would rather remove this service from the container. Or even register it only if enabled and non debug ?\n. Why was the string type removed from docblock ?\n. Do you think using the _route request attribute instead of _controller isn't suitable ? No Reflection needed, and we eventually can check against custom actions routes too, if it is wished.\n. So, what will happen in production when another Exception is thrown ? The classic 500 Twig error page will be shown ? I though the purpose of the PR was to handle this exactly ^^'\nIMO you should convert anything else than a HttpException to a HttpException with the 500 status code.\n. But the easyadmin route name is always admin (except css one). That's all we need to know, right ?\nAnd for custom actions based on route, we already have their name from the config ! (just need to gather it in a proper place) :smile: \n. If you change this route name, your backend will not work properly as it is widely used in templates and the controller itself in order to generate links.\nSo, I think it's safe enough.\n. @Pierstoval , @javiereguiluz : I'm not fan either having a route named simply admin in a third party bundle without any prefix. But I might already have mentioned that before :smile: \nIMO, the route name should be something like easy_admin\n. What I meant: \n- If easy_admin.exception_listener.enabled is true, check if kernel.debug is false (prod), then, register the listener in the container. \n  The listener will catch any Exception, and if it isn't a HttpException, will transform it to a HttpException with 500 as status code.\n- If easy_admin.exception_listener.enabled is false, do not register the service.\n- If easy_admin.exception_listener.enabled is true, but kernel.debug is true (~dev), do not register the service neither.\n. @Pierstoval : Right, but if mentioned in the UPGRADE file, it will not be very complex for developers to replace the name in their own AdminController and custom views.\n. Another solution would be to make the route name configurable. But I think it's too much overengineered for our situation.\n. Actually (I might be wrong), but when you introduced easy_admin.exception_listener.enabled, you only had in mind the fact that the listener should be disableable, right ?\nThis postulate hasn't changed. What has changed is that we do not longer want this listener to replace the default debug exception page. So it should only exist in non-debug environments.\nWe could set more verbose values for easy_admin.exception_listener.enabled, but I honestly don't think this feature will be useful in debug mode :/\n. If it feels more natural, you should indeed check at first if kernel.debug is false. Then check if the user disabled or not the listener by checking easy_admin.exception_listener.enabled, in this order.\nThat makes sense. What do you think ?\n. Ping @javiereguiluz  ^^'. We need a third party opinion on this :stuck_out_tongue_winking_eye: \n. @Pierstoval : Currently, this isn't used in EasyAdminBundle tests. Let me know if I did something wrong removing those elements in AbstractTestCase or if it was no longer relevant as I though.\n. @Pierstoval : This is already handle in the method\n. Actually, I'd rather wonder why it should use _trans_parameters, as this is already entity configuration specific. Not a general UI element like titles. (entity_id might be useful, though...)\nOtherwise, I think it's because of the form theme which cannot access to _trans_parameters easily.\n. I don't think it might cause any issue here by using the bundle properly, but you should set the third argument of in_array to true in order to use strict comparison.\n. This might not be the best solution. But ignoring and hiding blindly the exception is not a proper solution, too. :/\nIn production, it cannot be simply ignored either IMO (keep it hidden for the user, but log it somewhere for instance).\n. We can throw a custom EasyAdmin exception, caught by the new Exception listener, which should have the responsibility to log it.\n. I think you can use \nphp\n$em->getConnection()->getDatabasePlatform() instanceof Doctrine\\DBAL\\Platforms\\PostgreSqlPlatform\n. I don't know ? What is bothering you with php 5.3 ?\n. Here:\nphp\n'@EasyAdmin/default/field_'.$fieldTemplateName.'.html.twig'\n$fieldTemplateName already contains 'field_', no ?\n. type should actually be replaced by template, shouldn't it ?\n. @javiereguiluz : Actually, I was drawing up #402 and #403 , and spotted this while re-reading the documentation :smile: \n. Remove the service definition from the ContainerBuilder instance in the EasyAdminExtension if the automatic_translation config parameter isn't enabled instead.\n. For which feature is it actually needed ?\n. But this is not a hard requirement right ? The feature will simply be activated if the security is used, and the bundle will not fail if the package doesn't exist in the application ?\n. I don't understand this ? :confused: Why is it needed ?\n. @javiereguiluz : but how is the 'entity.%s = :exact_query' part transformed to WHERE c0_.id IN ('56') in the first screenshot, by juste removing the type converting ?...\nMy doubt was about the necessity to have the proper type in the bind parameters.\n. From Doctrine doc:\n\nCalling setParameter() automatically infers which type you are setting as value. This works for integers, arrays of strings/integers, DateTime instances and for managed entities. \n. @javiereguiluz : I think I misunderstand it. I might be tired. Anyway, thanks for the effort you always put into explaining or exposing anything :smiley: \n. twig\n{% set label = { \n    class: value ? 'success' : 'danger',\n    value: 'boolean.' ~ (value ? 'true' : 'false')\n} %}\n<span class=\"label label-{{ label.class }}\">{{ label.value|trans }}</span>\n\nor even:\ntwig\n{% set label = value \n    ? { class: 'success', value: 'boolean.true' } \n    : { class: 'danger', value: 'boolean.false' }\n%}\n<span class=\"label label-{{ label.class }}\">{{ label.value|trans }}</span>\nThe idea being to \"normalize\" everything before rendering the template itself.\n:innocent:  (But yes, I prefer @javiereguiluz sample rather than the current solution)\n. Inflector::classify already uppercased the first character.\n. So if the field has a custom template, but its value is null, it will never execute this ?\nI think it should come before, no ?\nOr will it be the developer's responsibility to check if the value is null and include back the label_null template ?\n. What about making easyadmin_trans accept a default / fallback parameter ?\ndiff\n- { _entity_config.edit.title|default('edit.page_title')|easyadmin_trans(_trans_parameters) }}\n+ { _entity_config.edit.title|easyadmin_trans(_trans_parameters, 'edit.page_title') }}\n. Could be:\ntwig\n{{ (field|length == 0 ? 'action.add_new_item' : 'action.add_another_item')|trans({}, 'EasyAdminBundle') }}\nI personally find it more readable, but I'm not sure this opinion is shared :smile: \n. Why using absolute urls ?\n. Obviously, you're right, but we're exploring the doc mostly on github, and having those relative urls won't cause any issue when browsing branches/versions/commits. Absolute urls will. Same as when submitting PRs to ensure the links are okay. :confused:\n. It doesn't really enable collectors, but make them collect data for every requests instead of collecting on-demand for tests requiring it using $client->enableProfiler();.\n. @Pierstoval : I don't understand: why not using the form type alias instead of @form_type_service ? You won't even need this right ? It should already be possible to use our own form types here, no ?\n. :confused: Ok. I don't know, it feels odd to me. Other bundles can provide real form types, it makes no difference to me.\nOn another note: Remember that in sf 2.8, form type aliases would be deprecated in favor of always using the form type FQCN. So, the first option about creating a form instance from a classname would eventually be problematic. \nAlso, I don't see much benefits to this possibility, as it cannot be instantiated with arguments, whereas the service is much more powerful.\nOffering too many ways to achieve the same thing, but with constraints is rarely a good idea :/\n. I think this PR makes sense if trying to use our own form types by specifying its alias in the easyadmin configuration isn't fully supported (I don't remember if it is actually). For symfony 2.8 and up, it would not make any difference, as we could use both form alias (until it is removed from symfony) and class FQCN (if sf 2.8+). That would be handled be the form component itself.\nAll we have to ensure here, is that there isn't any restriction made by EasyAdmin on the usable form types.\n. So, I tried, and this is working like a charm in 2.8 with both aliases and FQCN without this PR (You have to declare the form type as service of course).\nTherefore, I think there is nothing more to do here =)\n. Here, is it null because it is null in $fieldConfiguration, or because it has been set to null above in the array_replace ?\nIf it doesn't exists at all in $fieldConfiguration, I think you should add type => 'text' above in the array_replace.\n. I mean, can't it be : \ndiff\n$normalizedConfiguration = array_replace(\n    $this->defaultEntityFieldConfiguration,\n        array(\n            'columnName' => null,\n            'fieldName' => $fieldName,\n            'id' => false,\n            'label' => $fieldName,\n            'sortable' => false,\n            'virtual' => true,\n+           'type' => 'text',\n        ),\n        $fieldConfiguration\n);\n?\n. We should probably add a particular html attribute from the controller instead, in order to use it in this selector. \nOne might want to use his own form type which will eventually use select inputs and doesn't want to have select2 for them neither.\nThe current fix looks like a workaround to me :/\n. Which configuration option are you talking about ? :confused: \n. Instead of working with exclusions (symfony datetime form type), we should only use the Select2 library on appropriated widgets.\nIf someone want to use his own form type (which will eventually make use of select html inputs, like symfony datetime form type does), it will not be excluded by your fix (And it is actually possible to use our own form types with easyadmin).\nThe idea, then, would be to limit the usage of the Select2 library for appropriated fields (only the association type for now I guess ?). \nSo the AdminController should add some data-select2-widget attribute or whatever (or a simple has-select2 class) in order to have a filter like:\n$('#main form select[data-select2-widget].select2({\nOr, better, but less straightforward to implement: EasyAdmin should use it's own form type when trying to render associations. That would allow to make use of finishView to add a custom attribute and/or using form themes to add something to discriminate the field, in order to call Select2 on it.\nSorry if I'm unclear :/\n. I'm glad it helped ! :)\n. I don't know why I suggested a html attribute at first (my bad), or maybe you think it makes sense. \nOtherwise, what about a simple class ?\n. I think you're right. It will simply be less detectable when we'll switch to symfony 3 one day, where the php min requirement is 5.5.9, so this trick would be useless.\nI update for your suggestion, though. Thanks !\n. Good catch !\n. This line was useless due to the instanceof below (https://github.com/javiereguiluz/EasyAdminBundle/pull/506/files#diff-697430f9d1b9af2a48b33d29d9132963R44). Autocompletion works thanks to it.\nBtw, it was even more useless, because the var name was not present. ^^\n. Humm... good to know. I collapsed the div before indenting it in PHPStorm, so it didn't indent the whole block.\n. diff\n- var collection = $('#{{ form.vars.id }}');\n+ var collection = $('#{{ id }}');\nand same for other occurrences below. :)\n. No. It does only work with folders. :/\n. @xabbuh : I think you're right. See #518 .\nThank you for having pointed out this to us !\n. It should, but we unfortunately can't using the standard-edition: \n- form types and extensions are retrieved using Container::get in the Symfony\\Component\\Form\\Extension\\DependencyInjectionExtension class.\n- event listeners are lazy-loaded:  The service \"easyadmin.listener.request_post_initialize\" must be public as event listeners are lazy-loaded.\n. You can't change this as we still need to support sf 2.3, in which setNormalizer does not exist yet. (use composer update --prefer-lowest in order to install minimum required dependencies and launch tests locally)\n. Extra space right after @var\n. I'm not sure this is really relevant for a controller action.\n. missing blank line between params and return tags\n. Feel free to use the full notation with my email address: Maxime Steinhausser <maxime.steinhausser@gmail.com> :smile: \n. This very one has not been updated ^^\n. I hesitated, but I found a lot of usage of ClassMetadataInfo::ONE_TO_MANY for instance, but it doesn't seems to be a consistent rule... \nThen, I'll remove any usage of ClassMetadataInfo in EasyAdminBundle, at least to be consistent here.\n. @javiereguiluz : It's done :)\n. It has no importance as those are fixtures for tests, but I think it should be typehinted over the abstraction (Collection) instead of ArrayCollection (same for other occurrences and properties). At some point it might try to set a PersistentCollection for instance (not 100% sure it could happen though).\nAlso, the typehint is missing from the method signature.\nAbout the MyType[] notation, this is extremely useful for the IDE when iterating over the elements, and I'm overusing it whenever something is iterable. Of course this is not 100% accurate, but ... :smile: \n. I think the setters are useless and that using the parent constructor would be better. (See how NotFoundHttpException and HttpException work for instance)\n. This is probably too specific for being part of an event IMO.\n. What about getClassShortName (echoing PHP's ReflectionClass::getShortName) ?\n$fqcn might also be enough as parameter name ^^\n. Wut ? (false in the condition)\n. Returning anything in an event listener has absolutely no effect (except skipping the listener), so I don't understand the point of this ? :confused: \n. There is no docblock on the parent method.\nAlso, not related, but I forgot to typehint the $templating constructor argument above.\n. renderResponse is part of the Symfony\\Bundle\\FrameworkBundle\\Templating\\EngineInterface which is implemented by the TwigEngine.\nI would say it is better to typehint over the abstraction.\nFor instance, FOSUser mailer use EngineInterface as typehint.\n. That's what I had in mind too. But then I wondered why was the default implementation of getName in  ~~3.0~~ 2.8 to return the classname if it doesn't has any importance ?\nI must confess I didn't check.\n. I guess the answer is that we simply need the getName method in AbstractType for the transition to 3.0 as it is part of the FormTypeInterface. And has we're advocating to use the FQCN in the new way form names are handled, it only makes sense to return the FQCN, even if it should not be used. \nAnyway, users using the old way but forgetting to implement the getName() method will be warned by an exception saying the string returned by getName() does not match the alias.\nTL;DR: fixed.\n. in_array ?\n. minor CS:\ndiff\n- if(event.preventDefault) event.preventDefault(); else event.returnValue = false;\n+ if (event.preventDefault) event.preventDefault(); else event.returnValue = false;\ncould also be a ternary operator (better to me than inlined if/else)\n(same here)\n. IMO it's better as it is. The toggleBooleanProperty method signature is very clear on what it achieves, and agnostic on the way the property name and new value are retrieved.\n. Instead of doing this, don't you think it'll be safer to override the datetime_widget/row theme ?\nIf someone is using a custom type for this, like, let's say a Bootstrap datepicker type, we cannot be sure this is wanted.\n. Also, we should probably check if one of the date_widget or time_widget (or widget) is set to choice for same reasons.\n. I think it would be kind of annoying. The values will be reseted anyway on form submit / next form show.\nSo if this checkbox was checked by error, at least not reseting the values will allow to restore them without having to reload the page.\n. Can we do both, then (hide and disable) ? :)\n. diff\n- \"symfony/var-dumper\"            : \"~2.3|~3.0\",\n+ \"symfony/var-dumper\"            : \"~2.7|~3.0\",\nwould be more accurate (2.6 actually, but not maintained anymore).\nBut, hmmm... Actually, with this line, you didn't even need to add those fallbacks, and it should have worked I guess. But my opinion is that EasyAdmin should not install this package if the user doesn't use it himself.\nSo, remove this line and add the symfony/var-dumper into the suggest section ? (and require-dev if there will be some tests covering it)\n. Might not have understood you properly, but I think I don't like either this easyadmin_dump thing... \nIt should not be a Twig function IMO, but a method of the EasyAdminDataCollector. What do you think ? Is it what you are pointing out ?\n. :open_mouth: Missed that ! It was actually imported in the first commit. There is no issue about creating aliases of non-existing classes if this was intended this way.\n. Anyway IMHO easyadmin_dump should not be available for another usage. ^^'\n. There is no such build in the matrix currently (SYMFONY_VERSION set to 2.8.* and php7). The php7 check should be enough (it'll be executed on a sf 3.0 build however).\n. Unfortunately, those methods were added in 2.5 only :/\nWe should have a BC layer temporary until 2.3 support is dropped.\n. Still not available as of 2.3 ^^'\n. typo:\ndiff\n- dsiplay\n+ display\n. CS (indentation).\nHowever, if we completely rely on the Symfony PropertyAccessor, without decorating/modifying it, do we have to test it at all ?\n. You're right. Good idea in fact to keep it until now. As soon as the PR is ready to be merged, it can be removed :smiley: \n. This message isn't accurate. We've check l.736 that the method exists.\nSo, when does it fail ? Inherited private method ?\nInstead of this, we should probably fix the condition line 736. Maybe use is_callable instead.\n. Extra blank lines around the method\n. Do you think it should rather belong to the EasyAdminBundle domain ?\nI think having it in the forms domain only makes sense if there is a clear convention for the default translation domain to use with forms, but I'm not sure there is.\n. NVM, I moved it to the messages domain, as it is the default one used, so we don't have to set the translation_domain here.\nBut let me know if you think differently.\n. @Pierstoval : I think this one may be kept as a verb instead, as in the english translation (Leave empty), but I'm not sure I like something like Laisser vide, ou Garder vide. What are your thoughts ? (This is the checkbox field allowing to set null for datetime form types for instance)\n. I agree. We did the same for the delete_empty option. We should probably check for a class or method existence as in useLegacyFormComponent. Do you already have any hint ?\n. PSR-2 extends PSR-1, so no need to mention it ^^\n. missing space between href and attributes\n. Oops. I almost missed it: the proper option is design.assets.favicon (should be reflected in the examples too)\n. When the config is as long, maybe we can expose it using this notation:\n``` yaml\neasy_admin:\n    entities:\n        Product:\n            # ...\n            form:\n                fields:\n                    # ...\n                    -\n                        property: description\n                        type: ckeditor\n                        type_options:\n                            config:\n                            toolbar:\n                                -\n                                    items:\n                                        - Bold\n                                        - Italic\n                                        - BulletedList\n                                        - Link\n                                    name: styles\n``\n. I think we should now promote the Symfony 3 way first (BTW, it isn't since sf 3 but 2.8, even if the form alias is still supposed to work in 2.8)\n. Detail, but I think the bundle should be registered following the other ones, not before all, so this line should go beforenew Ivory\\CKEditorBundle\\IvoryCKEditorBundle(),` IMO : \nphp\nreturn array(\n    // ...\n    new Ivory\\CKEditorBundle\\IvoryCKEditorBundle(),\n);\n. Sure, I agree :+1: \n. Here I assume I will always get a TypeGuess instance created by the DoctrineOrmTypeGuesser, with appropriated fields. Indeed, I doubt someone will use Doctrine with Symfony without the Doctrine Bridge (or even remove the doctrine orm guesser), so I think it's safe enough.\n. Non-accessible actually.\n. Done.\n. Exact! \nI meant the doctrine-bridge is required for this to work because it used the DoctrineOrmTypeGuesser, and I doubt someone will use Doctrine ORM with Symfony without the bundle, so actually without the bridge where is located this class. :)\nBut anyway, the EntityType is in the doctrine-bridge, so my assumptions were safe enough, except if someone played with the form.type_guesser.doctrine service and removed it (which is very unlikely to happen).\nSo I'll always get the expected TypeGuess here.\n. By habits. I've always seen tests trying to access private methods written like this, but I agree it should not have any impact. Even so, I prefer letting everything in the initial state before the test.\n. Fixed. Thanks !\n. Question: here, we don't use proper html data-* attributes. Is it expected ?\n. :open_mouth: I didn't even realized for what it was used for...\nSee #674 \nThe form type and easyadmin extension allows us to get rid of this. This was necessary before because we didn't used a proper form type and cannot as easily pass attributes to the FormView instance of each fields.\nThanks for the quick answer !\n. I'll remove the AttributesConfigurator from this PR (once #674 is merged).\n. Oops ! This change is an error: it should be easyadmin.field.class, as here\n. I don't think so, IRC, those are the field metadata as described in the Configurator\n. I feel bad, because as you can see, I only did half of the work in #674 ... :confounded: \nI forgot to update this file and occurrences of :\n- attr.field_css_class to easyadmin.field.class\n- attr.field_type to easyadmin.field.fieldType\n- attr.field_help to easyadmin.field.help\n. Maybe add a section:\ncss\n/* -------------------------------------------------------------------------\n   FORM PAGE\n   ------------------------------------------------------------------------- */\n. Why not passing the $entity instance in the method signature (as for other methods) ?\nA dynamic configuration might need it to set options according to the entity data.\n. Should we mention php-cs-fixer ?\n. diff\n- processBackendTemplates\n+ processEntityTemplates\n. The exception scalarNode is missing from the Configuration class.\nTests aren't failing because the exception template was never configured in any test case.\n. So, we keep the ability to render some exceptions by entity, when we can find a related configuration, but for exception such as UndefinedEntityException where we cannot get the entity config (because it does not exist), we render the exception template set at the global level ?\nMy actual question is: is it worth it ? Shouldn't all exceptions be rendered with the global level template ? (currently we simply use the safeMessage to display anything specific to the entity. I think it is enough)\n. All those templates in the processed easyadmin.design.templates configuration will never be used actually (except for exception).\nAlso, it will have a side-effect: this condition will always be true. So subsequent level priorities will no longer be available, even if the user didn't specified anything himself in easyadmin.design.templates, because processEntityTemplates will used the processed configuration instead of the one configured by the user.\nI suggest to exclude global templates from the other ones by having two variables:\n``` php\n    # Used in EasyAdminExtension::processGlobalLevelTemplates\n    private $defaultGlobalLevelTemplates = array(\n        'exception' => '@EasyAdmin/default/exception.html.twig',\n    );\n# Used in EasyAdminExtension::processEntityLevelTemplates\nprivate $defaultEntityLevelTemplates = array(\n    'layout' => '@EasyAdmin/default/layout.html.twig',\n    'edit' => '@EasyAdmin/default/edit.html.twig',\n    'list' => '@EasyAdmin/default/list.html.twig',\n    // ...\n);\n\n```\nEventually at the end of processEntityLevelTemplates, we can remove any template not being part of $defaultGlobalLevelTemplates (those set at the global levels, but the entity level storage is enough for processed configuration).\n. Why \"exposing\" it in the bundle's configuration if it's only available as of processed metadata ?\n. I'm not really satisfied into having this new default_templates out of the design configuration (If I go in the easyadmin profiler panel, I expect the processed configuration for templates to be in design). \nWhy this change ? You can simply process entity templates before default templates to avoid https://github.com/javiereguiluz/EasyAdminBundle/pull/691#discussion_r48449976 and keep the processed default templates in design.templates.\n. Why removing this test ?\n. Should we mark this interface (and similar ones in the future) as @internal ?\n. IMO you should have an array of normalizers (as a property of this normalizer for instance, initialized in the constructor [but no need to make it a constructor argument]) and iterate over it to call normalize on each.\n. fixed in #730\n. I'm used to inline properties docblock when there is only the @var tag. I prefer this style because I find it more concise and won't make the class look heavier.\nWe currently use it many times in EasyAdminBundle.\n. We should choose a style or another then, apply and stick to it in the whole codebase (but I'm still in favor of the inlined version :smile:). \nSome properties docblocks are also missing. That's not a requirement, but I personally prefer having every class properties annotated and respect the blank line after each.\n. Should we convert the entity name to snake case using Doctrine\\Common\\Inflector\\Inflector::tableize or similar ? Should a snaked_name or whatever be part of the entity metadata in order to use it for form names, ids, & other html attributes ?\n. same here (https://github.com/javiereguiluz/EasyAdminBundle/pull/739/files#r48692091)\n. Class description not updated\n. This comment is outdated now and we can use isset. There isn't any null value in $this-> doctrineTypeToFormTypeMap since we properly map the associations to the entity type now.\n. Can be removed ?\n. Should not extend AbtractTestCase I guess, but PHPUnit_Framework_TestCase as you're using nothing specific to AbstractTestCase nor even KernelTestCase but instantiate the kernel yourself.\n. Same as https://github.com/javiereguiluz/EasyAdminBundle/pull/738#discussion_r48692581\n. I guess this is not needed for this test ?\n. Maybe the menu option should be under easy_admin.design.\n. Does it mean we'll have a dedicated label for menu, or will it replace the current one defined in the entity section ?\n. Not sure this feature would be useful.\nAnyway, I won't expose query parameters like this, but ask for an array of query parameters instead:\ndiff\n-  - { entity: 'Category', view: 'edit', id: 341 }\n+  - { entity: 'Category', view: 'edit', query: { id: 341 } }\nor even not supporting the view feature explicitly, but using:\ndiff\n-  - { entity: 'Category', view: 'edit', id: 341 }\n+  - { entity: 'Category', query: { action: edit, id: 341 } }\n(can probably be semantically enhanced)\n. Same here, I won't expose those options directly, but instead allow to tweak the query parameters.\n. Can be related to some of the above comments to be enhanced, but instead of declaring a typeoption, simply expose everything (everything is a link actually):\n`` yaml\neasy_admin:\n    menu:\n        -   # Route item\n            label: Other task\n            link:\n                route: user_other_task\n                parameters: { max: 7 } \n        -   # Entity item\n            entity: 'Category'\n            label: 'Tags'\n            link:\n                # therouteoption defaults toeasyadmin# as theentity` option is specified\n                # route: easyadmin \n            # Parameters will be converted to query params by the\n            # url generator if not part of the route parameters.\n            # As the `entity` option is specified, an extra `entity` param is \n            # provided automatically in complement of the users defined \n            # parameters below:\n            parameters: { sortField: 'createdAt', sortDirection: 'DESC' }\n\n    -   # Url item\n        label: Public Homepage\n        link:\n            url: http://example.com # supersedes the route option if provided\n\n```\nthe query param I mentioned below became simply parameters\n. @Pierstoval : Yup, great. It joins my suggestion in https://github.com/javiereguiluz/EasyAdminBundle/pull/784#discussion_r49267721 :)\n. I agree. I don't like this neither. \nThat's why I didn't even show a sample for a method-based link in in the configuration I suggested above.\n. I know you said no review, but this does not look like an unintentional change. So why removing this class ?\n. OK. Thx for the confirmation. It actually makes sense :+1: \n. IMO this should be defined in the form theme instead. This class should always be there. If the user configured additional css classes, it should be appended instead of replacing the {view}-form css class.\n. Yes, it looks good to me :+1: \nI don't think there is another way to do it.\n. ~~As a side-note, the attr. \"prefix\" is not mandatory, as always. But actually here I find it clearer to specify it.~~\n. Forget about my comment, I'm wrong. I was talking about the vars. \"prefix\". This is not applicable to attr. at all :sweat_smile: \n. This method looks useless as it is call in process which only call processBackendIndex.\n. Adding \ncss\n.easyadmin-lightbox img {\n    max-width: 100%;\n}\nshould be sufficient to solve the issue with small screens.\n. path & domain should be removed here too.\n. Typo (s/reoderArrayItems/reorderArrayItems).\nAlso shouldn't $originalArray be typehinted as array too ?\n. What about using the same markup as for \"Managed entities\" ?\ntwig\n<b>EasyAdmin</b>\n<span class=\"sf-toolbar-status\">{{ constant('JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle::VERSION') }}</span>\n. diff\n- $options['choices'] = is_array($data) || $data instanceof Collection ? $data : array($data);\n+ $options['choices'] = is_array($data) || $data instanceof \\Traversable ? $data : array($data);\n?\n. I'm really not convinced about this. A form type should not be stateful, as it can live in the container as a single instance. This might lead to edge cases when having this form type as a service.\n. diff\n- $form->getParent()->add($form->getName(), 'JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType', $options);\n+ $form->getParent()->add($form->getName(), __CLASS__, $options);\n? (same below)\n. You can use the array of options for this. That's not great at all, but would avoid any issue regarding this... :confused: \nI'm not sure there is a better solution to what you provided in your implementation using form events, but some other things disturbs me actually :/\nFor instance, the form type being aware of its parent and modifying it directly. \nI'm rather used to do this the other direction: \nthe parent form removes/adds its own children based on events.\nBut it isn't EasyAdminFormType's role either (it would not make the new EasyAdminAutocompleteType standalone either). \nSo instead of extending entity/choice, the EasyAdminAutocompleteType should be a compounded form (with only an entity/choice field wrapped in it). Then, it'll use form events to change the children options.\nI'm pretty sure I'm very unclear about this :sweat_smile: \nBut I don't have time to try it myself right now (and I'm really not confident about doing something better :sweat_smile:). \nSo I'm personally :+1: for merging this once the form type has been made stateless again. \nWe can eventually try to enhance this later, but I fear there is no elegant solution at all.\n(BTW :clap: for the work you've achieved yet)\n. Not sure you should change this. Can't you use the data options for this, or maybe a custom DataMapper instead of setting this option to false and using a model transformer ?\nYour solution looks elegant, but I'm not sure about all the consequences of setting this option to false.\n. I understand the point: I was worried about the ChoiceType itself, not EasyAdminAutocompleteType.\nAnyway, a ChoiceType not expanded is never compound, so setting this to false won't cause any issue in our case, as we won't change the expanded option for this form type (so maybe we should enforce it to false too ?).\n. You're right. Sorry for the noise :wink: \n. diff\ndiff --git a/Resources/views/form/bootstrap_3_layout.html.twig b/Resources/views/form/bootstrap_3_layout.html.twig\nindex 5750cb4..e815e2b 100644\n--- a/Resources/views/form/bootstrap_3_layout.html.twig\n+++ b/Resources/views/form/bootstrap_3_layout.html.twig\n@@ -440,7 +440,7 @@\n     <script src=\"{{ asset('bundles/easyadmin/javascript/jquery.min.js') }}\"></script>\n     <script>\n         $(function() {\n-            $('#{{ form.vars.id }}').select2({\n+            $('#{{ form.autocomplete.vars.id }}').select2({\n                 theme: 'bootstrap',\n                 ajax: {\n                     url: '{{ path('easyadmin', {\n. Why do we need this here ?\nThis should not be included multiple times & should be in the main layout IMHO.\n. Actually it won't work by simply removing it from here, because we're currently loading jquery after the <body> tag (so after any element, including any rendered form type).\nInstead, we have to load jquery before:\n``` diff\ndiff --git a/Resources/views/default/layout.html.twig b/Resources/views/default/layout.html.twig\nindex 37b4294..5896623 100644\n--- a/Resources/views/default/layout.html.twig\n+++ b/Resources/views/default/layout.html.twig\n@@ -32,7 +32,9 @@\n             \n         <![endif]-->\n\n{% block head_javascript %}{% endblock %}\n{% block head_javascript %}\n\n\n{% endblock %}\n     \n{% block body %}\n@@ -106,7 +108,6 @@\n     \n {% block body_javascript %}\n\n\n\n {% block adminlte_options %}\n\n```\n\n\n\n\nor any better option to convert the select field to a select2 one after jquery is loaded.\nFor instance, we can simply add this piece of code in a javascript file included after jquery, and which will be executed for any field marked with a special html attribute or class.\n. Right :smile: The branch does not contains those changes, and I've forgotten about it ^^'\n. However, we can still probably move this code into easyadmin.js:\n``` diff\ndiff --git a/Resources/public/javascript/easyadmin.js b/Resources/public/javascript/easyadmin.js\nindex 99b89d6..4ad68f7 100644\n--- a/Resources/public/javascript/easyadmin.js\n+++ b/Resources/public/javascript/easyadmin.js\n@@ -7,6 +7,7 @@ $(function () {\n     ;\n createNullableControls();\n\n\neasyAdminAutoComplete();\n });\n\nfunction createNullableControls() {\n@@ -49,3 +50,27 @@ function deleteCookie(name)\n {\n     document.cookie = encodeURIComponent(name) + \"=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n }\n+\n+function easyAdminAutoComplete()\n+{\n+    var autocompletedFields = $('[data-easyadmin-autocomplete-url]');\n+\n+    autocompletedFields.each(function () {\n+        var url = $(this).data('easyadmin-autocomplete-url');\n+        $(this).select2({\n+            theme: 'bootstrap',\n+            ajax: {\n+                url: url,\n+                dataType: 'json',\n+                delay: 250,\n+                data: function (params) {\n+                    return { 'query': params.term };\n+                },\n+                cache: true\n+            },\n+            placeholder: \"\",\n+            allowClear: true,\n+            minimumInputLength: 1\n+        });\n+    });\n+};\ndiff --git a/Resources/views/form/bootstrap_3_layout.html.twig b/Resources/views/form/bootstrap_3_layout.html.twig\nindex 5750cb4..4ccac6d 100644\n--- a/Resources/views/form/bootstrap_3_layout.html.twig\n+++ b/Resources/views/form/bootstrap_3_layout.html.twig\n@@ -435,31 +435,10 @@\n {# EasyAdminAutocomplete form type #}\n {% block easyadmin_autocomplete_widget %}\n     {# display form row, but never its label #}\n-    {{ form_row(form.autocomplete, {'label': false}) }}\n-\n-    \n-    \n-        $(function() {\n-            $('#{{ form.vars.id }}').select2({\n-                theme: 'bootstrap',\n-                ajax: {\n-                    url: '{{ path('easyadmin', {\n-                        action: 'autocomplete',\n-                        entity: easyadmin.entity.name,\n-                        property: easyadmin.field.fieldName,\n-                        view: easyadmin.view\n-                    })|raw }}',\n-                    dataType: 'json',\n-                    delay: 250,\n-                    data: function (params) {\n-                        return { 'query': params.term };\n-                    },\n-                    cache: true\n-                },\n-                placeholder: \"\",\n-                allowClear: true,\n-                minimumInputLength: 1\n-            });\n-        });\n-    \n+    {{ form_row(form.autocomplete, {'label': false, 'attr': attr|merge({ 'data-easyadmin-autocomplete-url' : path('easyadmin', {\n+        action: 'autocomplete',\n+        entity: easyadmin.entity.name,\n+        property: easyadmin.field.fieldName,\n+        view: easyadmin.view\n+    })|raw })}) }}\n {% endblock easyadmin_autocomplete_widget %}\n. Why would we need this class instead of directly using `FilesystemCache` ?\n. I guess this exception is not needed anymore, as well as related code.\n. The `backendConfig` property is missing. Also the check should semantically probably be `null === $this->backendConfig` instead of checking if the configuration is empty.\n. Maybe you can indent this array for readability (as done for the `path` arguments)\n. diff\n-    {{ form_widget(form.autocomplete, { attr: attr|merge({ 'data-easyadmin-autocomplete-max-results': easyadmin_config('list.max_results'), 'data-easyadmin-autocomplete-url' : path('easyadmin', {\n-        action: 'autocomplete',\n-        entity: easyadmin.entity.name,\n-        property: easyadmin.field.fieldName,\n-        view: easyadmin.view\n-    })|raw })}) }}\n+    {{ form_widget(form.autocomplete, { \n+        attr: attr|merge({ \n+            'data-easyadmin-autocomplete-max-results': easyadmin_config('list.max_results'), \n+            'data-easyadmin-autocomplete-url' : path('easyadmin', {\n+                action: 'autocomplete',\n+                entity: easyadmin.entity.name,\n+                property: easyadmin.field.fieldName,\n+                view: easyadmin.view\n+            })|raw })\n+        }) \n+    }}\n``\n. Seems strange to me to rely on the form's name in any case.\n. Why not setting the label from the form type ?\nTo me, setting html attributes in form themes is a good practice, but common form options should remain in the form type, don't you think ?\n. You're right, but then leaving empty the label should do it. Also,defaultwill return the default value ifeasyadmin.field['label']is false, and thus render the label, which is wrong. By setting thelabeloption to false, no label should be rendered.\n. You can't right now. But eventually, see the [EasyAdminExtension`](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Form/Extension/EasyAdminExtension.php#L64) to see how to achieve this in the form type.\nOr you can also give a try to the AutocompleteTypeConfigurator :)\n. Why do we need this ? Shouldn't the label option be set L.44, by \"inheriting\" parent options ?\nphp\n$form->add('autocomplete', LegacyFormHelper::getType('entity'), $options);\n?\n. I still don't understand why we need this, as it should be done automatically by the form theme if the label is empty ? \ud83d\ude15 \nMaybe I'm missing something.\n. I'm so sorry @yceruto , I'm a real pain in the ass while reviewing this PR, but ... \ud83d\ude05 \nActually the FormRenderer dependency bothers me, as well as \"workarrounding\" the default form themes fallback mechanism of labels.\nSetting the value of the label option should be done in the form type, but the fallback mechanism when the label is null should remains in the theme IMHO, in order to:\n1. not alter the FormView data.\n2. allow to override the behavior by replacing the form_label block in a custom template/form theme.\n3. avoid edge cases or forget about some particular behaviors present in default form themes.\nSo, maybe the right solution for the fallback is something like:\ntwig\n{% block easyadmin_autocomplete_inner_label %}\n    {% set name = form.parent.vars.name %}\n    {{- block('form_label') -}}\n{% endblock %}\nbut it requires some extra work to get this block prefix. Tell me honestly what you think about those changes:\n``` diff\ndiff --git a/Form/Type/EasyAdminAutocompleteType.php b/Form/Type/EasyAdminAutocompleteType.php\nindex acaf25d..38643ef 100644\n--- a/Form/Type/EasyAdminAutocompleteType.php\n+++ b/Form/Type/EasyAdminAutocompleteType.php\n@@ -3,7 +3,6 @@\n namespace JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Util\\LegacyFormHelper;\n-use Symfony\\Bridge\\Twig\\Form\\TwigRendererInterface;\n use Symfony\\Component\\Form\\AbstractType;\n use Symfony\\Component\\Form\\CallbackTransformer;\n use Symfony\\Component\\Form\\FormBuilderInterface;\n@@ -21,14 +20,6 @@ use Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\n  /\n class EasyAdminAutocompleteType extends AbstractType\n {\n-    / @var TwigRendererInterface /\n-    private $renderer;\n-\n-    public function __construct(TwigRendererInterface $renderer)\n-    {\n-        $this->renderer = $renderer;\n-    }\n-\n     public function buildForm(FormBuilderInterface $builder, array $options)\n     {\n         $preSetDataListener = function (FormEvent $event) use ($options) {\n@@ -87,10 +78,8 @@ class EasyAdminAutocompleteType extends AbstractType\n      */\n     public function finishView(FormView $view, FormInterface $form, array $options)\n     {\n-        if (null === $options['label']) {\n-            $label = $this->renderer->humanize($view->vars['name']);\n-            $view->children['autocomplete']->vars['label'] = $label;\n-        }\n+        // Add a custom block prefix to inner field to ease theming:\n+        array_splice($view['autocomplete']->vars['block_prefixes'], -1, 0, 'easyadmin_autocomplete_inner');\n     }\n /**\n\ndiff --git a/Resources/config/form.xml b/Resources/config/form.xml\nindex f454719..7cce1fa 100644\n--- a/Resources/config/form.xml\n+++ b/Resources/config/form.xml\n@@ -11,7 +11,6 @@\n         \n     <service id=\"easyadmin.form.type.autocomplete\" class=\"JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType\">\n\n\n\n\n\n\ndiff --git a/Resources/views/form/bootstrap_3_layout.html.twig b/Resources/views/form/bootstrap_3_layout.html.twig\nindex adda869..dc8fc11 100644\n--- a/Resources/views/form/bootstrap_3_layout.html.twig\n+++ b/Resources/views/form/bootstrap_3_layout.html.twig\n@@ -462,3 +462,8 @@\n         view: easyadmin.view\n     })|raw })}) }}\n {% endblock easyadmin_autocomplete_row %}\n+\n+{% block easyadmin_autocomplete_inner_label %}\n+    {% set name = form.parent.vars.name %} {# inherit parent form's name #}\n+    {{- block('form_label') -}}\n+{% endblock easyadmin_autocomplete_inner_label %}\n```\nThis solution has its own flaws, like replacing the name variable by the parent form's name, but:\n1. The name value is unlikely to be important in the label rendering, appart from the label fallback & format.\n2. the EasyAdminAutocompleteType.autocomplete inner field should be considered as \"internal\".\n3. The original value of the FormView.vars.name variable is still accessible from form.vars.name, so can be restored easily.\n. Why overriding explicitly those empty methods ?\n. Shouldn't it be snake cased for consistency ?\n. A simple 0 === strpos would be enough, right ?\n. This should not be a property of the form type. Form type instances must be stateless, as it can be reused multiple times in the same request.\nYou can probably use a form attribute instead. (i.e: $builder->setAttribute('name', $value))\n. Maybe you can do this:\n``` diff\ndiff --git a/Form/Type/EasyAdminFormType.php b/Form/Type/EasyAdminFormType.php\nindex 5151135..5890638 100644\n--- a/Form/Type/EasyAdminFormType.php\n+++ b/Form/Type/EasyAdminFormType.php\n@@ -36,8 +36,6 @@ class EasyAdminFormType extends AbstractType\n     /* @var TypeConfiguratorInterface[] /\n     private $configurators;\n-    private $formGroups = array();\n /**\n  * @param ConfigManager               $configManager\n  * @param TypeConfiguratorInterface[] $configurators\n\n@@ -57,6 +55,7 @@ class EasyAdminFormType extends AbstractType\n         $view = $options['view'];\n         $entityConfig = $this->configManager->getEntityConfig($entity);\n         $entityProperties = $entityConfig[$view]['fields'];\n+        $formGroups = array();\n         $currentFormGroup = null;\n     foreach ($entityProperties as $name => $metadata) {\n\n@@ -76,7 +75,7 @@ class EasyAdminFormType extends AbstractType\n             // fields) and store the form 'group' details in a special property\n             if ('JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminGroupType' === $formFieldType) {\n                 $currentFormGroup = $metadata['fieldName'];\n-                $this->formGroups[$currentFormGroup] = $metadata;\n+                $formGroups[$currentFormGroup] = $metadata;\n             continue;\n         }\n\n@@ -92,6 +91,8 @@ class EasyAdminFormType extends AbstractType\n         $builder->add($name, $formFieldType, $formFieldOptions);\n     }\n\n+\n+        $builder->setAttribute('form_groups', $formGroups);\n     }\n /**\n\n@@ -99,7 +100,7 @@ class EasyAdminFormType extends AbstractType\n      */\n     public function finishView(FormView $view, FormInterface $form, array $options)\n     {\n-        $view->vars['easyadmin_form_groups'] = $this->formGroups;\n+        $view->vars['easyadmin_form_groups'] = $form->getConfig()->getAttribute('form_groups');\n     }\n /**\n\n```\nI never really used form config attributes, so I don't really know if it's suitable. But it's used for instance in CollectionType in order to store the prototype instance per resolved type instance.  \nLet me know the result. :)\n. @javiereguiluz : That's because the proper notation should be:\ndiff\n- /** @var DoctrineQueryBuilder */\n+ /** @var DoctrineQueryBuilder $queryBuilder */\nThe first one only work for properties.\n. Do we need the default filter in templates considering this value should always exist in the processed config and already has a default value ? \nEven if it acts as a safe guard, I think it's kind of polluting the templates which are dense enough. We should rather enforce the processed config to consider it safe and reliable for such things :/\n. \ud83d\ude15 I think this fix won't be fair. That could lead to WTF issues, asking for why the wrong template is rendered instead of an overridden one, whereas the issue is instead that this form theme should not have been used without the easyadmin var at the first place. See https://github.com/javiereguiluz/EasyAdminBundle/issues/1368#issuecomment-260158027\n. I'm not sure we want the code coverage here, as we ask it in the allow_failures section. This mades the coverage build part of the main matrix, probably because the identifier in allow_failure is now incomplete (should be SYMFONY_VERSION=\"2.8.*\" ENABLE_CODE_COVERAGE=\"true\"). ~~But it's probably simpler to simply remove the env var here ?~~\n. What about validateAssociationsConfig and not returning anything? This method isn't supposed to alter the configuration at this point I guess.\n. Sure. How can I help? \nI think first we need answers for #1368, to be sure this is actually what happened.\nThen, I'm not very good at formulating this, but the main point is that the form themes inside javiereguiluz/easyadmin-bundle/Resources/views/form are not meant to be used by other actions than easyadmin predefined ones, and especially not meant to be used to render another form type than the EasyAdminFormType.\nI guess this may happen by error when copying/pasting an easyadmin template in order to start integrating a custom action in the backend. Thus, the {% form_theme form with easyadmin_config('design.form_theme') %} line should be remove, or use another form theme.\n. Also, the check should probably only be done in main blocks, like form_start, form_widget and form_row in order to avoid polluting the form theme too much by adding this check in every blocks.\n. It's already disabled by default AFAIK.. I never used this rule, so I don't know if it can be annoying or not, but if it blindly replace assertEquals for assertSame, it can be really annoying on certain conditions.\nI think it's preferable to check this on a per case basis during reviews, but we can try.. This one does not exist anymore (replaced by phpdoc_summary below). I hope this behaves well with private classes (for instance in tests, having a fixture class inlined). It doesn't matter for this bundle right now but I won't use it myself if it doesn't accept this.. A risky rule that behaves well in this codebase right now. But loose comparisons are valid sometimes (even if it's not often, once in the codebase is enough).. Can move the CHECK_PHP_SYNTAX=\"yes\" from php 5.6 to here IMHO to speed up the builds.. a |trans filter would be great, isn't it?. Also it's erroneous. The return type should be void, and thus not added.. should be {@inheritdoc} for consistency with the codebase (same for other occurrences).. If the manager is not found for the class, that's another issue.. what about adding typehints instead? I don't think we need to add docblocks for every private methods.. I think it should be array|null in this case, because the method is expected to return something. in this case, that means null, even by using return; :)\n(see https://wiki.php.net/rfc/void_return_type#rationale for more infos). Such docblocks does not bring any new info and are useless to me \ud83d\ude15 (moreover, the method is private). This one is the perfect example where documenting a private method makes sense :D. \ud83d\udc4d . Here is the mentioned fix.. Above all, it means the min twig/twig requirement would need to be updated to ~1.34|~2.4. Do we want this ? \nWe don't need to wait anything on Symfony's side about it actually ^^'. You don't require a RouterInterface AFAIU. Just a UrlGeneratorInterface instance.. As soon as minimum-stability: \"dev\" is used along with \"prefer-stable\": true, it should not be an issue for users.. Classes order in the class_alias must be inversed (first one should be the existing class, so the new namespace).. diff\ndiff --git a/composer.json b/composer.json\nindex e99aa931..2a0f018a 100644\n--- a/composer.json\n+++ b/composer.json\n@@ -65,7 +65,7 @@\n         }\n     },\n     \"autoload-dev\": {\n-        \"psr-4\": { \"AppTestBundle\\\\\": \"Tests/Fixtures/AppTestBundle/\" }\n+        \"psr-4\": { \"EasyCorp\\\\Bundle\\\\EasyAdminBundle\\\\Tests\\\\\": \"Tests\" }\n     },\n     \"extra\": {\n         \"branch-alias\": {\nAnd I think we're almost good :)\nShould we rename Tests to tests considering the new directory structure?. The whole legacy/Resources dir must be removed, right?. Can't we remove the service definition from the extension instead?. \ud83d\udca9 \ud83d\udc80  :). These changes look unnecessary to me. I'd prefer the old explicit version :). diff\n- -->\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\u2796\n+ -->\n? This dashed line doesn't serve any purpose anymore, right?. ",
    "evansmwendwa": "I have authentication already setup and working. Is there a way to link to the logout route from the security provider. I would like to have a logout link next to where the username is displayed. EasyAdminBundle has no opinion on how symfony authentication works. I think symfony documentation is organized well enough for feature discovery. ",
    "ninsky": "Would be nice to have a simple example how to create a login area for the backend.. @Pierstoval, yes, I think an easy example based on this page would be helpful. Or a link to the page you've mentioned.. > For those who ran into this issue as well, the following works:\n\n{ property: 'projects', type_options: { disabled: true }} where 'projects' is the field.\nAt the time of writing, readonly: true does not seem to work\n\nBut this doesn't work for datetime fields. ",
    "ad3n": "+1 :+1: \n. sorry for double issue +1\n. Yes me too.... ",
    "robinduval": "+2 \n. ",
    "MacFJA": "\n1) Check if Doctrine project defines that set of entities and fixtures and reuse it.\n\nSo far no fixture found, lots of entities, some of them cover a large part of possible association and field type\n\n2) If not, check if SonataAdmin or any other existing admin generator bundle defines that set of entities and fixtures and reuse it.\n\nI check sonata-project/SonataAdminBundle, Symfony's DoctrineBundle, Snowcap/SnowcapAdminBundle, mgiagnoni/LyraAdminBundle. But none of them have entities (that cover must of case) neither fixtures to generate a consistent database.\n\n3) If none of the previous points succeed, create that set of entities + fixtures for EasyAdmin.\n\nI just define a little UML diagram of an believable set of entities to have an overview\n\nSo, for now I have:\n- Association\n  - ManyToMany (Category/Product + Product/Order)\n  - Self referencing (Category/Category)\n  - ManyToOne & OneToMany (Product/Image + Image/Product)\n- Field type\n  - string\n  - datetime\n  - datetimetz\n  - simple_array\n  - bigint\n  - boolean\n  - integer\n  - float\n  - text\n  - blob\n  - binary\n  - guid\n  - date\n  - json_array\n  - time\nStill missing some requirement\n. > 1) Check if Doctrine project defines that set of entities and fixtures and reuse it.\nSo far no fixture found, lots of entities, some of them cover a large part of possible association and field type\n\n2) If not, check if SonataAdmin or any other existing admin generator bundle defines that set of entities and fixtures and reuse it.\n\nI check sonata-project/SonataAdminBundle, Symfony's DoctrineBundle, Snowcap/SnowcapAdminBundle, mgiagnoni/LyraAdminBundle. But none of them have entities (that cover must of case) neither fixtures to generate a consistent database.\n\n3) If none of the previous points succeed, create that set of entities + fixtures for EasyAdmin.\n\nI just define a little UML diagram of an believable set of entities to have an overview\n\nSo, for now I have:\n- Association\n  - ManyToMany (Category/Product + Product/Order)\n  - Self referencing (Category/Category)\n  - ManyToOne & OneToMany (Product/Image + Image/Product)\n- Field type\n  - string\n  - datetime\n  - datetimetz\n  - simple_array\n  - bigint\n  - boolean\n  - integer\n  - float\n  - text\n  - blob\n  - binary\n  - guid\n  - date\n  - json_array\n  - time\nStill missing some requirement\n. Here the version of the UML diagram:\n\n. Here the version of the UML diagram:\n\n. The diagram was created with ArgoUML, and lots of information are missing or not exact. I prefer make all the classes \"by hand\" to be sure that all convention in the doctrine documentation are respected. And some case must by handling manually (for instance the case of the ManyToMany association, which side is responsible of the creation: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/association-mapping.html#owning-and-inverse-side-on-a-manytomany-association)\n\nHere the full test set: MacFJA/Doctrine-TestSet\n(Fixtures for products and categories in preparation)\n. @javiereguiluz I just push fixtures for products, categories and images.\nStill missing lots of contents :disappointed:\nI have to make fixtures for order's side (Order, OrderItem, Shipment) and add more features for products.\nIn my todo list I also have the packagist publication and a nicer way to import data (for now we have to call doctrine command line to create database, index.php to inject fixture)\n. @javiereguiluz I just push fixtures for products, categories and images.\nStill missing lots of contents :disappointed:\nI have to make fixtures for order's side (Order, OrderItem, Shipment) and add more features for products.\nIn my todo list I also have the packagist publication and a nicer way to import data (for now we have to call doctrine command line to create database, index.php to inject fixture)\n. @paquitodev, By specifying the field for editing/creating an user you can avoid this issue.\nyml\neasy_admin:\n    entities:\n        Users:\n            class: AppBundle\\Entity\\User\n            list:\n                fields: [id, username, fullName, roles]\n            edit:\n                fields: [firstName, lastName, roles, password, username, email, enabled]\n            new:\n                fields: [firstName, lastName, roles, plainPassword, username, email, enabled]\n. @paquitodev, By specifying the field for editing/creating an user you can avoid this issue.\nyml\neasy_admin:\n    entities:\n        Users:\n            class: AppBundle\\Entity\\User\n            list:\n                fields: [id, username, fullName, roles]\n            edit:\n                fields: [firstName, lastName, roles, password, username, email, enabled]\n            new:\n                fields: [firstName, lastName, roles, plainPassword, username, email, enabled]\n. Why don't use the DoctrineOrmTypeGuesser ( Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser::guessType ) instead of hard-coding a mapping?\n. ",
    "henrikbjorn": "There is no reason why it could not be, it is mostly a admin generation (thingy) for doctrine. \n. Symfony applications is a vague wording. It does not define it as being only for standard framework/full stack.\nThe same way the webprofiler is a profiler for symfony applications, that works for drupal (in theory), symfony and silex applications.\nThere is no reason for this not doing the same. The amount of work is mostly changing the controllers to use injection instead of relying specifically on the container being available.\n. ",
    "reypm": "@Pierstoval I'm running the same issue trying to manage FOSUserBundle entity, this is the mapping:\n```\nuse FOS\\UserBundle\\Model\\User as BaseUser;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\nuse Gedmo\\Timestampable\\Traits\\TimestampableEntity;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Misd\\PhoneNumberBundle\\Validator\\Constraints\\PhoneNumber as AssertPhoneNumber;\n/\n * @ORM\\Entity\n * @ORM\\Table(name=\"usuarios_externos.usuarios\", schema=\"usuarios_externos\")\n * @UniqueEntity(fields={\"correo_alternativo\"}, message=\"El correo electr\u00f3nico ya est\u00e1 siendo usado, por favor introduzca otro.\")\n * @Gedmo\\SoftDeleteable(fieldName=\"deletedAt\", timeAware=false)\n */\nclass Usuario extends BaseUser\n{\n    /\n     * Hook timestampable behavior\n     * updates createdAt, updatedAt fields\n     */\n    use TimestampableEntity;\n/**\n * @ORM\\Id\n * @ORM\\Column(type=\"integer\")\n * @ORM\\GeneratedValue(strategy=\"SEQUENCE\")\n */\nprotected $id;\n\n/**\n * @var \\Pais\n *\n * @ORM\\ManyToOne(targetEntity=\"Pais\")\n * @ORM\\JoinColumn(name=\"pais_id\", referencedColumnName=\"id\", nullable=true)\n */\nprotected $pais;\n\n/**\n * @var \\Estado\n *\n * @ORM\\ManyToOne(targetEntity=\"Estado\")\n * @ORM\\JoinColumn(name=\"estado_id\", referencedColumnName=\"id\")\n */\nprotected $estado;\n\n/**\n * @var \\Municipio\n *\n * @ORM\\ManyToOne(targetEntity=\"Municipio\")\n * @ORM\\JoinColumn(name=\"municipio_id\", referencedColumnName=\"id\")\n */\nprotected $municipio;\n\n/**\n * @var \\Ciudad\n *\n * @ORM\\ManyToOne(targetEntity=\"Ciudad\")\n * @ORM\\JoinColumn(name=\"ciudad_id\", referencedColumnName=\"id\")\n */\nprotected $ciudad;\n\n/**\n * @var \\Parroquia\n *\n * @ORM\\ManyToOne(targetEntity=\"Parroquia\")\n * @ORM\\JoinColumn(name=\"parroquia_id\", referencedColumnName=\"id\")\n */\nprotected $parroquia;\n\n/**\n * @ORM\\Column(name=\"persona\", type=\"boolean\", nullable=true)\n */\nprotected $persona = true;\n\n/**\n * @ORM\\Column(name=\"correo_alternativo\", type=\"string\", length=150, nullable=true)\n */\nprotected $correo_alternativo;\n\n/**\n * @AssertPhoneNumber\n * @ORM\\Column(name=\"telefono\", nullable=false, length=15)\n */\nprotected $telefono;\n\n/**\n * @AssertPhoneNumber\n * @ORM\\Column(name=\"telefono_movil\", nullable=false, length=15)\n */\nprotected $telefono_movil;\n\n/**\n * @ORM\\Column(name=\"fax\", type=\"string\", length=100, nullable=true)\n */\nprotected $fax;\n\n/**\n * @ORM\\Column(name=\"pagina_web\", type=\"string\", length=250, nullable=true)\n */\nprotected $pagina_web;\n\n/**\n * @ORM\\Column(name=\"direccion\", type=\"string\", length=500)\n */\nprotected $direccion;\n\n/**\n * @ORM\\Column(name=\"credito\", type=\"decimal\", precision=8, scale=2, nullable=true)\n */\nprotected $credito;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"Grupos\")\n * @ORM\\JoinTable(name=\"usuarios_externos.grupos_has_usuarios\",\n *      joinColumns={@ORM\\JoinColumn(name=\"user_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"group_id\", referencedColumnName=\"id\")}\n * )\n */\nprotected $grupos;\n\n/**\n * @ORM\\Column(name=\"deletedAt\", type=\"datetime\", nullable=true)\n */\nprotected $deletedAt;\n\n/**\n * @var \\Natural\n *\n * @ORM\\OneToMany(targetEntity=\"Natural\", mappedBy=\"usuario\")\n */\nprotected $natural;\n\n/**\n * @var \\Empresas\n *\n * @ORM\\OneToMany(targetEntity=\"Empresa\", mappedBy=\"usuario\")\n */\nprotected $empresa;\n\n/**\n * @ORM\\Column(name=\"representativeName\", type=\"string\", length=250)\n */\nprotected $representativeName;\n\n// getter and setter methods\n\n}\n```\nAnd \nSymfony > doctrine:schema:validate\n[Mapping]  OK - The mapping files are correct.\nAnd this is the EasyAdminBundle config:\neasy_admin:\n  site_name: 'Administraci\u00f3n SIS Sencamer'\n  list_max_results: 30\n  entities:\n      'Paises': Sencamer\\AppBundle\\Entity\\Pais\n      'Estados': Sencamer\\AppBundle\\Entity\\Estado\n      'Ciudades': Sencamer\\AppBundle\\Entity\\Ciudad\n      'Municipios': Sencamer\\AppBundle\\Entity\\Municipio\n      'Parroquias': Sencamer\\AppBundle\\Entity\\Parroquia\n      'Bancos': Sencamer\\AppBundle\\Entity\\Banco\n      'Instituci\u00f3n Bancaria': Sencamer\\AppBundle\\Entity\\InstitucionBanco\n      'CIIU': Sencamer\\AppBundle\\Entity\\Ciuu\n      'C\u00f3digos Arancelarios': Sencamer\\AppBundle\\Entity\\CodigoArancelario\n      'Comit\u00e9 T\u00e9cnico': Sencamer\\AppBundle\\Entity\\ComiteTecnico\n      'Condici\u00f3n de Producto': Sencamer\\AppBundle\\Entity\\CondicionProducto\n      'Personas de Contacto': Sencamer\\AppBundle\\Entity\\Contacto\n      'Cuenta Banco': Sencamer\\AppBundle\\Entity\\CuentaBancoInstitucion\n      'Estado de Solicitud': Sencamer\\AppBundle\\Entity\\EstadoSolicitud\n      'Fabricante | Distribuidores': Sencamer\\AppBundle\\Entity\\FabricanteDistribuidor\n      'Finalidad del Producto': Sencamer\\AppBundle\\Entity\\FinalidadProducto\n      'Grupos': Sencamer\\AppBundle\\Entity\\Grupos\n      'Marca': Sencamer\\AppBundle\\Entity\\Marca\n      'Modelo': Sencamer\\AppBundle\\Entity\\Modelo\n      'Usuarios': Sencamer\\AppBundle\\Entity\\Usuario\n      'Usuarios Naturales': Sencamer\\AppBundle\\Entity\\Naturales\n      'Usuarios Jur\u00eddicos': Sencamer\\AppBundle\\Entity\\Empresa\n      'Normas': Sencamer\\AppBundle\\Entity\\Norma\n      'Oficinas Regionales': Sencamer\\AppBundle\\Entity\\OficinaRegional\n      'Productos': Sencamer\\AppBundle\\Entity\\Producto\n      'Tipo de Empresa': Sencamer\\AppBundle\\Entity\\TipoEmpresa\n      'Tipo de Registro': Sencamer\\AppBundle\\Entity\\TipoRegistro\n      'Tipo de Pago': Sencamer\\AppBundle\\Entity\\TipoPago\n      'Tipo de Recaudo': Sencamer\\AppBundle\\Entity\\TipoRecaudo\n      'Tipo de Servicio': Sencamer\\AppBundle\\Entity\\TipoServicio\n      'Tipo de Tramite': Sencamer\\AppBundle\\Entity\\TipoTramite\n      'Tipo de Usuario': Sencamer\\AppBundle\\Entity\\TipoUsuario\n      'Configuraci\u00f3n General': Sencamer\\AppBundle\\Entity\\Configuracion\nThis is the error I'm getting:\n\nNeither the property \"expiresAt\" nor one of the methods \"getExpiresAt()\", \"expiresAt()\", \n\"isExpiresAt()\", \"hasExpiresAt()\", \"__get()\" exist and have public access in class \n\"AppBundle\\Entity\\Usuario\".\n\nSo, where the issue is? Shouldn't this methods already exists at FOS\\UserBundle\\Model\\User which is included at first and also Usuarios entity extends from it?\n. @Pierstoval I'm running the same issue trying to manage FOSUserBundle entity, this is the mapping:\n```\nuse FOS\\UserBundle\\Model\\User as BaseUser;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\nuse Gedmo\\Timestampable\\Traits\\TimestampableEntity;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Misd\\PhoneNumberBundle\\Validator\\Constraints\\PhoneNumber as AssertPhoneNumber;\n/\n * @ORM\\Entity\n * @ORM\\Table(name=\"usuarios_externos.usuarios\", schema=\"usuarios_externos\")\n * @UniqueEntity(fields={\"correo_alternativo\"}, message=\"El correo electr\u00f3nico ya est\u00e1 siendo usado, por favor introduzca otro.\")\n * @Gedmo\\SoftDeleteable(fieldName=\"deletedAt\", timeAware=false)\n */\nclass Usuario extends BaseUser\n{\n    /\n     * Hook timestampable behavior\n     * updates createdAt, updatedAt fields\n     */\n    use TimestampableEntity;\n/**\n * @ORM\\Id\n * @ORM\\Column(type=\"integer\")\n * @ORM\\GeneratedValue(strategy=\"SEQUENCE\")\n */\nprotected $id;\n\n/**\n * @var \\Pais\n *\n * @ORM\\ManyToOne(targetEntity=\"Pais\")\n * @ORM\\JoinColumn(name=\"pais_id\", referencedColumnName=\"id\", nullable=true)\n */\nprotected $pais;\n\n/**\n * @var \\Estado\n *\n * @ORM\\ManyToOne(targetEntity=\"Estado\")\n * @ORM\\JoinColumn(name=\"estado_id\", referencedColumnName=\"id\")\n */\nprotected $estado;\n\n/**\n * @var \\Municipio\n *\n * @ORM\\ManyToOne(targetEntity=\"Municipio\")\n * @ORM\\JoinColumn(name=\"municipio_id\", referencedColumnName=\"id\")\n */\nprotected $municipio;\n\n/**\n * @var \\Ciudad\n *\n * @ORM\\ManyToOne(targetEntity=\"Ciudad\")\n * @ORM\\JoinColumn(name=\"ciudad_id\", referencedColumnName=\"id\")\n */\nprotected $ciudad;\n\n/**\n * @var \\Parroquia\n *\n * @ORM\\ManyToOne(targetEntity=\"Parroquia\")\n * @ORM\\JoinColumn(name=\"parroquia_id\", referencedColumnName=\"id\")\n */\nprotected $parroquia;\n\n/**\n * @ORM\\Column(name=\"persona\", type=\"boolean\", nullable=true)\n */\nprotected $persona = true;\n\n/**\n * @ORM\\Column(name=\"correo_alternativo\", type=\"string\", length=150, nullable=true)\n */\nprotected $correo_alternativo;\n\n/**\n * @AssertPhoneNumber\n * @ORM\\Column(name=\"telefono\", nullable=false, length=15)\n */\nprotected $telefono;\n\n/**\n * @AssertPhoneNumber\n * @ORM\\Column(name=\"telefono_movil\", nullable=false, length=15)\n */\nprotected $telefono_movil;\n\n/**\n * @ORM\\Column(name=\"fax\", type=\"string\", length=100, nullable=true)\n */\nprotected $fax;\n\n/**\n * @ORM\\Column(name=\"pagina_web\", type=\"string\", length=250, nullable=true)\n */\nprotected $pagina_web;\n\n/**\n * @ORM\\Column(name=\"direccion\", type=\"string\", length=500)\n */\nprotected $direccion;\n\n/**\n * @ORM\\Column(name=\"credito\", type=\"decimal\", precision=8, scale=2, nullable=true)\n */\nprotected $credito;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"Grupos\")\n * @ORM\\JoinTable(name=\"usuarios_externos.grupos_has_usuarios\",\n *      joinColumns={@ORM\\JoinColumn(name=\"user_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"group_id\", referencedColumnName=\"id\")}\n * )\n */\nprotected $grupos;\n\n/**\n * @ORM\\Column(name=\"deletedAt\", type=\"datetime\", nullable=true)\n */\nprotected $deletedAt;\n\n/**\n * @var \\Natural\n *\n * @ORM\\OneToMany(targetEntity=\"Natural\", mappedBy=\"usuario\")\n */\nprotected $natural;\n\n/**\n * @var \\Empresas\n *\n * @ORM\\OneToMany(targetEntity=\"Empresa\", mappedBy=\"usuario\")\n */\nprotected $empresa;\n\n/**\n * @ORM\\Column(name=\"representativeName\", type=\"string\", length=250)\n */\nprotected $representativeName;\n\n// getter and setter methods\n\n}\n```\nAnd \nSymfony > doctrine:schema:validate\n[Mapping]  OK - The mapping files are correct.\nAnd this is the EasyAdminBundle config:\neasy_admin:\n  site_name: 'Administraci\u00f3n SIS Sencamer'\n  list_max_results: 30\n  entities:\n      'Paises': Sencamer\\AppBundle\\Entity\\Pais\n      'Estados': Sencamer\\AppBundle\\Entity\\Estado\n      'Ciudades': Sencamer\\AppBundle\\Entity\\Ciudad\n      'Municipios': Sencamer\\AppBundle\\Entity\\Municipio\n      'Parroquias': Sencamer\\AppBundle\\Entity\\Parroquia\n      'Bancos': Sencamer\\AppBundle\\Entity\\Banco\n      'Instituci\u00f3n Bancaria': Sencamer\\AppBundle\\Entity\\InstitucionBanco\n      'CIIU': Sencamer\\AppBundle\\Entity\\Ciuu\n      'C\u00f3digos Arancelarios': Sencamer\\AppBundle\\Entity\\CodigoArancelario\n      'Comit\u00e9 T\u00e9cnico': Sencamer\\AppBundle\\Entity\\ComiteTecnico\n      'Condici\u00f3n de Producto': Sencamer\\AppBundle\\Entity\\CondicionProducto\n      'Personas de Contacto': Sencamer\\AppBundle\\Entity\\Contacto\n      'Cuenta Banco': Sencamer\\AppBundle\\Entity\\CuentaBancoInstitucion\n      'Estado de Solicitud': Sencamer\\AppBundle\\Entity\\EstadoSolicitud\n      'Fabricante | Distribuidores': Sencamer\\AppBundle\\Entity\\FabricanteDistribuidor\n      'Finalidad del Producto': Sencamer\\AppBundle\\Entity\\FinalidadProducto\n      'Grupos': Sencamer\\AppBundle\\Entity\\Grupos\n      'Marca': Sencamer\\AppBundle\\Entity\\Marca\n      'Modelo': Sencamer\\AppBundle\\Entity\\Modelo\n      'Usuarios': Sencamer\\AppBundle\\Entity\\Usuario\n      'Usuarios Naturales': Sencamer\\AppBundle\\Entity\\Naturales\n      'Usuarios Jur\u00eddicos': Sencamer\\AppBundle\\Entity\\Empresa\n      'Normas': Sencamer\\AppBundle\\Entity\\Norma\n      'Oficinas Regionales': Sencamer\\AppBundle\\Entity\\OficinaRegional\n      'Productos': Sencamer\\AppBundle\\Entity\\Producto\n      'Tipo de Empresa': Sencamer\\AppBundle\\Entity\\TipoEmpresa\n      'Tipo de Registro': Sencamer\\AppBundle\\Entity\\TipoRegistro\n      'Tipo de Pago': Sencamer\\AppBundle\\Entity\\TipoPago\n      'Tipo de Recaudo': Sencamer\\AppBundle\\Entity\\TipoRecaudo\n      'Tipo de Servicio': Sencamer\\AppBundle\\Entity\\TipoServicio\n      'Tipo de Tramite': Sencamer\\AppBundle\\Entity\\TipoTramite\n      'Tipo de Usuario': Sencamer\\AppBundle\\Entity\\TipoUsuario\n      'Configuraci\u00f3n General': Sencamer\\AppBundle\\Entity\\Configuracion\nThis is the error I'm getting:\n\nNeither the property \"expiresAt\" nor one of the methods \"getExpiresAt()\", \"expiresAt()\", \n\"isExpiresAt()\", \"hasExpiresAt()\", \"__get()\" exist and have public access in class \n\"AppBundle\\Entity\\Usuario\".\n\nSo, where the issue is? Shouldn't this methods already exists at FOS\\UserBundle\\Model\\User which is included at first and also Usuarios entity extends from it?\n. @Pierstoval @javiereguiluz Thanks both will be waiting for this\n. @Pierstoval @javiereguiluz Thanks both will be waiting for this\n. Fine, this \"future\" is close or will pass a while since this will be ready\nfor us?\nOn Jan 25, 2015 5:13 PM, \"Pierstoval\" notifications@github.com wrote:\n\nYup, very fine, we'll just need to completely review the configurator then [image:\n:stuck_out_tongue_closed_eyes:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/73#issuecomment-71395230\n.\n. Fine, this \"future\" is close or will pass a while since this will be ready\nfor us?\nOn Jan 25, 2015 5:13 PM, \"Pierstoval\" notifications@github.com wrote:\nYup, very fine, we'll just need to completely review the configurator then [image:\n:stuck_out_tongue_closed_eyes:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/73#issuecomment-71395230\n.\n. Hey @javiereguiluz any advice on nested items on menus as you propose here? \n. Hey @javiereguiluz any advice on nested items on menus as you propose here? \n. @Pierstoval where exactly I should do that? You say override EasyAdmin controller but how?\n. @Pierstoval where exactly I should do that? You say override EasyAdmin controller but how?\n. @Pierstoval I have not the time to test this yet but I will do the next week, keep the issue open and I'll close or comment when I can, thanks for you concern around this\n. I will close this since it works for me too and thanks @Pierstoval I will write a similar entry on my blog soon around this (the whole EasyAdmin) just getting closer to it and learning to use before write it\n. Perhaps this is madness but I will like to see:\n- internal libraries configuration such as setup tags: true, tokenSeparators: [',', ' '] and any other config options for Select2 or any other libraries used here\n- a few docs about integrate with other bundles like for example FosJsRoutingBundle (I did it but customizing layouts)\n- support for composite keys and entities using inheritance (not supported in current)\n\n@Pierstoval @javiereguiluz sorry for the little hijacking but if you will start a fresh Symfony app, will you use 2.8 or 3.0 and why? I still using 2.8 but mostly because it's a LTS version, what is your advise on this?\n. @Pierstoval nvm, @javiereguiluz just said that forget about it since it's not recommended even by Doctrine creators so leave inheritance out of my suggestions. By the way @javiereguiluz what is the best way to achieve my first point now? I want to add some configs to Select2 but can't find how to do this, could you point me on the right direction?\n@Pierstoval on the meantime, since you mention libraries config is a 1.x stuff, how I can achieve that? Could you give me some tips? And I ask because you're talking to made 2.x Symfony3 only and I want to keep track on this project by using latest so it's not funny to start on 2.8 and then get ride of support on newest EasyAdmin 2.x because it will be build only for SF3.0 perhaps I am wrong you tell me\n. @Pierstoval I don't use it daily also but now I am involve on this and need this. If you can teach me how to achieve this I will be glad to work in a PR but I still need your assistance, can you guide me trough this? If so I will start a new issue regarding this topic\n. @Pierstoval lol, I know the rules what I don't know is what to do regarding your previous comment on the config option and so\n. @ogizanagi below is how my entity looks like can you tell me what you mean with it work with the multiple option of the entity field as well. ??\n```\nnamespace Clanmovil\\PlatformBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Clanmovil\\PlatformBundle\\Model\\IdentifierAutogeneratedTrait;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Gedmo\\Timestampable\\Traits\\TimestampableEntity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/*\n * @ORM\\Entity\n * @ORM\\Table(name=\"cm_command\",\n *      uniqueConstraints={@ORM\\UniqueConstraint(name=\"name\", columns={\"name\"})},\n        indexes={@ORM\\Index(name=\"fulltext_idx\",\n            columns={\"name\"},\n            flags={\"fulltext\"})})\n * )\n /\nclass Command\n{\n    use IdentifierAutogeneratedTrait;\n    use TimestampableEntity;\n/**\n * @var string\n * @ORM\\Column(type=\"string\", length=150)\n * @Assert\\NotBlank()\n */\nprotected $name;\n\n/**\n * @var string\n * @ORM\\Column(type=\"text\", nullable=true)\n */\nprotected $description;\n\n/**\n * @var bool\n * @ORM\\Column(type=\"boolean\")\n */\nprotected $active = true;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"Alias\", inversedBy=\"alias_command\", cascade={\"persist\", \"remove\"})\n * @ORM\\JoinTable(name=\"command_has_alias\",\n *      joinColumns={@ORM\\JoinColumn(name=\"command_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"alias_id\", referencedColumnName=\"id\")}\n * )\n */\nprotected $command_alias;\n\npublic function __construct()\n{\n    $this->command_alias = new ArrayCollection();\n}\n\n/**\n * Set name.\n *\n * @param string $name\n * @return Command\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name.\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * Set description.\n *\n * @param string $description\n *\n * @return Command\n */\npublic function setDescription($description)\n{\n    $this->description = $description;\n\n    return $this;\n}\n\n/**\n * Get description.\n *\n * @return string\n */\npublic function getDescription()\n{\n    return $this->description;\n}\n\n/**\n * Set active.\n *\n * @param bool $active\n *\n * @return Category\n */\npublic function setActive($active)\n{\n    $this->active = $active;\n\n    return $this;\n}\n\n/**\n * Get active.\n *\n * @return bool\n */\npublic function getActive()\n{\n    return $this->active;\n}\n\n/**\n * Add alias to command.\n *\n * @param \\Clanmovil\\PlatformBundle\\Entity\\Alias $alias\n */\npublic function addCommandAlias(Alias $alias)\n{\n    $this->command_alias[] = $alias;\n}\n\n/**\n * Get alias from command.\n *\n * @return Doctrine\\Common\\Collections\\Collection\n */\npublic function getCommandAlias()\n{\n    return $this->command_alias;\n}\n\n/**\n * Remove alias from command.\n *\n * @param \\Clanmovil\\PlatformBundle\\Entity\\Alias $alias\n */\npublic function removeCommandAlias(Alias $alias)\n{\n    $this->command_alias->removeElement($alias);\n\n    return $this;\n}\n\npublic function __toString()\n{\n    return $this->name;\n}\n\n}\n``\n. @sebastianlp thx for your fast answer!\n- For (2) I can see [here](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/4-views-and-actions.md#customize-boolean-properties) that should be enabled by default that's my concert but I have tried with this setup:- { property: 'active', label: 'active', type_options: { toggle: true } }` and isn't working either\n. @ogizanagi ohhh is on a PR already? So better waits than implement user solution?\n. @sebastianlp found the right config for (2):\nfields:\n    ....\n    - { property: 'active', label: 'active', type: 'toggle'}\n. Thanks for your head ups @javiereguiluz \n. @Pierstoval I am having some issues getting this work, hope you can help me. This is what I have done at src/Clanmovil/PlatformBundle/Form/Type/AliasType.php:\n```\nnamespace Clanmovil\\PlatformBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nclass AliasType extends AbstractType\n{\n/**\n * @param FormBuilderInterface $builder\n * @param array                $options\n */\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    $builder\n        ->add(\n            'name',\n            null,\n            array(\n                'required' => true,\n                'label'    => 'name',\n                'trim'     => true,\n            )\n        )\n        ->add(\n            'description',\n            null,\n            array(\n                'required' => false,\n                'label'    => 'description',\n                'trim'     => true,\n            )\n        )\n        ->add(\n            'active',\n            null,\n            array(\n                'required' => true,\n                'label'    => 'active'\n            )\n        );\n}\n\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class'      => 'Clanmovil\\PlatformBundle\\Entity\\Alias',\n        'intention'       => 'alias'\n    ));\n}\n\n}\n```\nNow having that code and setting type to the AliasType on the easy admin config turns into this error message:\n\nThe option \"multiple\" does not exist. Defined options are: \"action\",\n\"allow_extra_fields\", \"attr\", \"auto_initialize\", \"block_name\",\n\"by_reference\", \"cascade_validation\", \"compound\", \"constraints\",\n\"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_provider\",\n\"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\",\n\"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\",\n\"extra_fields_message\", \"inherit_data\", \"intention\",\n\"invalid_message\", \"invalid_message_parameters\", \"label\",\n\"label_attr\", \"label_format\", \"mapped\", \"max_length\", \"method\",\n\"pattern\", \"post_max_size_message\", \"property_path\", \"read_only\",\n\"required\", \"translation_domain\", \"trim\", \"validation_groups\",\n\"virtual\".\n\nIf I remove this line:\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nThen the error turns on:\n\nWarning: Declaration of\nClanmovil\\PlatformBundle\\Form\\Type\\AliasType::configureOptions(Clanmovil\\PlatformBundle\\Form\\Type\\OptionsResolver\n$resolver) should be compatible with\nSymfony\\Component\\Form\\AbstractType::configureOptions(Symfony\\Component\\OptionsResolver\\OptionsResolver\n$resolver)\n\nWhat is wrong here?\n. If I get this solve @javiereguiluz @Pierstoval will be good to add this to docs? I can make changes explaining this and then make a PR, I am pretty sure others could have this same question in the future\n. @Pierstoval okey, I will read those docs (have been read on the past but I will do once more time) now, what if I leave this behind and think in a new way to achieve this: let's said I will get ride of that field as Entity type and I will add as a common text then I will add many tags comma separated, now I want to create those tags (alias) on the fly when I save the form. Of course I will need to call this code:\npublic function addCommandAlias(Alias $alias)\n    {\n        $this->command_alias[] = $alias;\n    }\nAs many times as separated comma words I get in a loop, of course I should set and persist first the Alias entity before call this part on Command entity but how to place this on top of EasyAdmin? Did you get my point? \n. @javiereguiluz can you give me some ideas here? @Pierstoval give me one but I don't know where to start from so I am looking for other ideas and/or code samples, would you give me some of them?\n. @javiereguiluz can you give me some ideas here? @Pierstoval give me one but I don't know where to start from so I am looking for other ideas and/or code samples, would you give me some of them?\n. @Jean-PaulvHouten just download the current release of Select2JS from their site and then override the template by include the full.min.js or include as a JS required by your bundle.\n. Closing as fixed, already included\n. @pribeirojtm see here . Thanks @javiereguiluz you take this very seriously and I am very happy with your support. Yes, that could be perfect, most of the time you can't think as every of us will does and mostly not all the projects will share the same business rules so we as developers will need some other options to play with our environment and nothing better that configs or simple setup for that kind of widgets and perhaps any other that will come in future in order to improve this bundle and make it the lost AdminGenerator for Symfony2.8+.\nFor example I was thinking in integrate some graphics tools (mostly JS) for report on the back-end side, I have no idea in how to achieve this but I will investigate, I will learn from bundle and I will make a PR when this is done and if others want the same. I like Sonata project but they are busy moving all from previous Symfony version to new ones and it will take a while. Sometimes we can't wait because we have deadlines and you can't help us all the time so is our job to try by ourselves and give us some headaches and I am glad to do that, of course some time I will need support from people like you, @Pierstoval or some others but this is my comment about all this.\nLet's wait for other comments and let's follow this pretty close since I am looking this as soon as possible, if I can help in anything just let me know.\n. +1 for @Pierstoval solution. If we can achieve this using existent tools then let's do it and create some kind of Cookbooks. I need some integration with FOSUser as well but hasn't idea, any of the present can work on this?\n. Thanks @ogizanagi I know shoots where over AdminController::createNewEntity() now sorry for my ignorance, can you place that method code here (I mean what I should pass to the constructor and how to instantiate)? I can't see what I need to do in order to achieve this.\n@Pierstoval there is a Group manager here but I can't reach it as you do with Users on your blog post, why?\n. Thanks @ogizanagi I know shoots where over AdminController::createNewEntity() now sorry for my ignorance, can you place that method code here (I mean what I should pass to the constructor and how to instantiate)? I can't see what I need to do in order to achieve this.\n@Pierstoval there is a Group manager here but I can't reach it as you do with Users on your blog post, why?\n. @javiereguiluz is this already merged? I am eager to test this since likes pretty awesome!! Thanks @ogizanagi great PR and addition +1 for this bundle. BTW, I am not seeing any docs since is earlier I think but any example for mortals? \n. @ogizanagi ohhhhhh amazing man, can you show me a little example for Select2? I mean how do you change any default parameter for this one?\n. @ogizanagi ok, thanks, you show me how to create a new Configurator for create a custom type but you talk about create my own form type, that should extends from Symfony common Form? EasyAdmin custom Form? Sorry but can you show me a little example illustrating your point and possibly include a small footprint regarding a possible configuration for Select2 and thanks you're teaching me new things\n. @Pierstoval @ogizanagi +1\n. @mkalisz77 here:\n- fork EasyAdmin repository\n- clone forked copy (the one you're the owner): git clone forked_repo\n- create a branch: git checkout -b fix_NNN where NNN belongs to the issue you're working on\n- make your changes and fix what you want to fix\n- add changes: git commit -a\n- push changes to the repository: git push \nThat's all, hope it helps\n. :+1: this feature should be in EasyAdmin in the future same as categorized or nested menus, that's the one I am missing right now and I am working in a long admin (too many entities) and long forms also\n. :+1: this feature should be in EasyAdmin in the future same as categorized or nested menus, that's the one I am missing right now and I am working in a long admin (too many entities) and long forms also\n. :+1: excellent @mkalisz77 I was looking this for a while. Thinking in #714 can you provide your config for EasyAdmin for this two entities? \n. @javiereguiluz I use that bundle mostly in all of my projects although I am not an expert but anyway what you would like to know about it, perhaps I can help on this.\n. @Pierstoval I am working on Groups (been a little busy for this days in another stuff) and +1 for your two latest points, did you work on them already? Have a solution for them?\n. @javiereguiluz @Pierstoval I am working on this will made a PR soon will cover the following:\n- Setup two basic entities: User and Group as ManyToMany in both sides (this will cover @mkalisz77 example)\n- Setup EasyAdmin (at config level)\n- How to extends from AdminController\nI will not cover how to install and or setup FOSUser, that's sound right to yours?\n. @javiereguiluz ok, no problem I just want to help but I get you ;) we will waits on you and thanks for your effort  \n@Pierstoval that goes to @javiereguiluz since he will take care of this\n. @Pierstoval with your login template override I am getting redirect to app_dev.php/admin/_css/admin.css after login, why?\n. @Pierstoval you mean this?\n```\nfirewalls:\n    main:\n        pattern: ^/\n        anonymous: ~\n        logout: true\n    form_login:\n        provider: fos_userbundle\n        csrf_provider: security.csrf.token_manager\n        login_path: fos_user_security_login\n        check_path: fos_user_security_check\n\n        use_forward: true\n        use_referer: false\n\n```\nis does not work either\n. @Pierstoval fixed by adding the following config to my security.yml:\n```\nform_login:\n    ...\n    use_forward: true\nalways_use_default_target_path: true\ndefault_target_path:            /admin\ntarget_path_parameter:          _target_path\nuse_referer: true\n\n```\nThanks for the tip\n. :+1: for this\n. @Pierstoval I had a typo on my code, this doesn't generate any error:\n- { property: 'username', label: 'form.username', type_options: { translation_domain: 'FOSUserBundle' } }\nBut doesn't translate the string as should be. Here is the result from WebDebug:\n\n. @javiereguiluz I know you're very busy but some advice on this?\n. I am having a different issue with boolean since strings aren't translated, see below:\n```\n// how is defined at entities\n/*\n * @var bool\n * @ORM\\Column(type=\"boolean\")\n /\nprotected $active = true;\n// how is used in EasyAdmin config\nCategory:\n    ...\n    form:\n        fields:\n            ...\n            - { property: 'active', label: 'active' }\n// how is set on messages.es.xliff\n\nactive\n    Activo\n\n```\nResult:\n\nI did check field_boolean.html.twig and then notice you used label.true, then setup EasyAdmin as follow:\n// how is used in EasyAdmin config\nCategory:\n    ...\n    form:\n        fields:\n            ...\n            - { property: 'active' }\nSame result as before. I have added those two translations to my messages.es.xliff just in case and result is same as before again.\n. I am having a different issue with boolean since strings aren't translated, see below:\n```\n// how is defined at entities\n/*\n * @var bool\n * @ORM\\Column(type=\"boolean\")\n /\nprotected $active = true;\n// how is used in EasyAdmin config\nCategory:\n    ...\n    form:\n        fields:\n            ...\n            - { property: 'active', label: 'active' }\n// how is set on messages.es.xliff\n\nactive\n    Activo\n\n```\nResult:\n\nI did check field_boolean.html.twig and then notice you used label.true, then setup EasyAdmin as follow:\n// how is used in EasyAdmin config\nCategory:\n    ...\n    form:\n        fields:\n            ...\n            - { property: 'active' }\nSame result as before. I have added those two translations to my messages.es.xliff just in case and result is same as before again.\n. @ogizanagi yes I did it and no changes, same result is weird but is happening to me\n. @ogizanagi yes I did it and no changes, same result is weird but is happening to me\n. Not for me\nOn Tue, Jan 5, 2016 at 6:08 AM, rubengc notifications@github.com wrote:\n\nso, the label option for checkboxes doesn't works?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/728#issuecomment-168973372\n.\n. @Pierstoval thanks, looks fine to me let me work on this will come after with results and or doubts if have any\n. @Pierstoval thanks, looks fine to me let me work on this will come after with results and or doubts if have any\n. @Pierstoval I am almost there but I need a little push here. This is what I have done so far.\n- Based on [this doc]1 I made the template:\n\n{% for tag in value %}\n     <div class=\"label\">{{ tag }} <button type=\"button\" class=\"close\" data-id=\"{{ tag.id }}\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>\n  {% endfor %}\n- I have setup my entity to use which result on this:\n\n- Add a new custom JS like this:\n$('.close').click(function () {\n      $.ajax({\n          url: \"api/test/\" + $(this).data(\"id\"),\n          context: document.body\n      }).done(function() {\n          //....\n      });\n  });\nBut now my doubt is how to make this available to any entities and not just one this? I mean how to use this for more than one entity? I could end my code and it should work but will be attached to only this Command entity because I will customize the URL for call an action that delete the items from the relationship but I want to make this available to any entity just by following the same steps, did you get my idea? What do you suggest me on this case?\n. @Pierstoval I am almost there but I need a little push here. This is what I have done so far.\n- Based on [this doc]1 I made the template:\n{% for tag in value %}\n     <div class=\"label\">{{ tag }} <button type=\"button\" class=\"close\" data-id=\"{{ tag.id }}\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>\n  {% endfor %}\n- I have setup my entity to use which result on this:\n\n- Add a new custom JS like this:\n$('.close').click(function () {\n      $.ajax({\n          url: \"api/test/\" + $(this).data(\"id\"),\n          context: document.body\n      }).done(function() {\n          //....\n      });\n  });\nBut now my doubt is how to make this available to any entities and not just one this? I mean how to use this for more than one entity? I could end my code and it should work but will be attached to only this Command entity because I will customize the URL for call an action that delete the items from the relationship but I want to make this available to any entity just by following the same steps, did you get my idea? What do you suggest me on this case?\n. Ok, I can set the template for each entities but I am not getting the code on the global list view and either the part on the controller? Could you add a few lines just to demonstrate this?\n. Ok, I can set the template for each entities but I am not getting the code on the global list view and either the part on the controller? Could you add a few lines just to demonstrate this?\n. Ok, I can set the template for each entities but I am not getting the code on the global list view and either the part on the controller? Could you add a few lines just to demonstrate this?\n. @Pierstoval I am still working on this but can't get it to work. Following your suggestion (to make this available not only to one type of entity but all of them) I have moved the JS code to a list.html.twig as follow:\n```\n{# app/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block body_javascript %}\n    {{ parent() }}\n<script type=\"text/javascript\">\n    $(function() {\n        // Delete associations via AJAX request\n        $('.entity_deletion_button').click(function () {\n            alert($(this).data('id') + _entity_config.name);\n        });\n    });\n</script>\n\n{% endblock %}\n```\nBut I can't access _entity_config.name from there for send it back to the controller, which is the right way to achieve this?\n. @Pierstoval I am still working on this but can't get it to work. Following your suggestion (to make this available not only to one type of entity but all of them) I have moved the JS code to a list.html.twig as follow:\n```\n{# app/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block body_javascript %}\n    {{ parent() }}\n<script type=\"text/javascript\">\n    $(function() {\n        // Delete associations via AJAX request\n        $('.entity_deletion_button').click(function () {\n            alert($(this).data('id') + _entity_config.name);\n        });\n    });\n</script>\n\n{% endblock %}\n```\nBut I can't access _entity_config.name from there for send it back to the controller, which is the right way to achieve this?\n. @Pierstoval ok, that fixes the issue but certainly I need your help here since I can't find a way to make this general (work with every n:m association). I have not idea for the method I should write at controller side. For example, I have clear this for Command entity by adding this method:\npublic function removeAliasById($aliasId)\n{\n    foreach ($this->command_alias as $alias) {\n        if ($alias->getId() == $aliasId) {\n            $this->command_alias->removeElement($alias);\n            return;\n        }\n    }\n}\nWhen you have that, removing alias from command by id is:\n$command->removeAliasById($aliasId);\n$entityManager->persist($command);\n$entityManager->flush();\nBut how to make this general for every entity with ManyToMany association?\n. @Pierstoval ok, that fixes the issue but certainly I need your help here since I can't find a way to make this general (work with every n:m association). I have not idea for the method I should write at controller side. For example, I have clear this for Command entity by adding this method:\npublic function removeAliasById($aliasId)\n{\n    foreach ($this->command_alias as $alias) {\n        if ($alias->getId() == $aliasId) {\n            $this->command_alias->removeElement($alias);\n            return;\n        }\n    }\n}\nWhen you have that, removing alias from command by id is:\n$command->removeAliasById($aliasId);\n$entityManager->persist($command);\n$entityManager->flush();\nBut how to make this general for every entity with ManyToMany association?\n. @Pierstoval I think you aren't understand me. Let me explain in other way. \n- I have added this setup to each relation where I want to show association as tags:\n- { property: 'command_alias', label: 'command_alias', template: 'tag_collection', label_colors: ['primary', 'success', 'info'] }\n- I have added the JS code (just an example not finished yet) to app/Resources/views/easy_admin/list.html.twig as shown a few post above.\n- I have not add any PHP code to take care of this because I don't know how to handle this for any entity.\nI was reading a bit the code for delete action but is not clear to me where this action goes since there it's deleting any object and not just one as I think at first with my own implementation. It's clear for you what I am missing here and what I am asking for help?\n. @Pierstoval I think you aren't understand me. Let me explain in other way. \n- I have added this setup to each relation where I want to show association as tags:\n- { property: 'command_alias', label: 'command_alias', template: 'tag_collection', label_colors: ['primary', 'success', 'info'] }\n- I have added the JS code (just an example not finished yet) to app/Resources/views/easy_admin/list.html.twig as shown a few post above.\n- I have not add any PHP code to take care of this because I don't know how to handle this for any entity.\nI was reading a bit the code for delete action but is not clear to me where this action goes since there it's deleting any object and not just one as I think at first with my own implementation. It's clear for you what I am missing here and what I am asking for help?\n. @Pierstoval thanks, since your code was giving me a few headaches I decide to made some modifications and now JS looks like this:\n<script type=\"text/javascript\">\n    // Delete tas via AJAX request\n    $('.entity_deletion_button').click(function() {\n        $.ajax({\n            type: 'DELETE',\n            url: Routing.generate('delete_association', { 'entity': '{{ _entity_config.name }}', 'id': $(this).data('id')}),\n        }).done(function(){\n            // something goes here\n        });\n    });\n</script>\nUsing FOSJsRoutingBundle. I am having a few issues I am hope to get some help from you to get this done which is almost near ;) thanks to your great help.\n- I have made a small change on the PHP code you provide (I think it has a typo or perhaps I am complete wrong):\n// before\n  $object = $this->em->find($this->entity['class'], $id);\n  // after\n  $object = $this->em->find($this->$entity['class'], $id);\nand then when I execute the method I got this error:\nFatal error: Call to a member function find() on null\nWhat's wrong here?  \n- We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\n\nI am not deleting the whole `Command` object (as your code does if I am not wrong) I just want to remove a association from this entity meaning remove a `command_alias` by calling this method `removeAliasById` in `Command` entity. Of course I should define the same method on each entity where I want to achieve the same. How do I call that method instead of remove on the `entity`?\nAlso I have changed the method as follow to be more general than specific where function name will be the same on each entity but content may vary depends on entity, take a look:\npublic function removeAssociationById($id)\n{\n    foreach ($this->command_alias as $alias) {\n        if ($alias->getId() == $id) {\n            $this->command_alias->removeElement($alias);\n            return;\n        }\n    }\n}\n. @Pierstoval thanks, since your code was giving me a few headaches I decide to made some modifications and now JS looks like this:\n<script type=\"text/javascript\">\n    // Delete tas via AJAX request\n    $('.entity_deletion_button').click(function() {\n        $.ajax({\n            type: 'DELETE',\n            url: Routing.generate('delete_association', { 'entity': '{{ _entity_config.name }}', 'id': $(this).data('id')}),\n        }).done(function(){\n            // something goes here\n        });\n    });\n</script>\nUsing FOSJsRoutingBundle. I am having a few issues I am hope to get some help from you to get this done which is almost near ;) thanks to your great help.\n- I have made a small change on the PHP code you provide (I think it has a typo or perhaps I am complete wrong):\n// before\n  $object = $this->em->find($this->entity['class'], $id);\n  // after\n  $object = $this->em->find($this->$entity['class'], $id);\nand then when I execute the method I got this error:\nFatal error: Call to a member function find() on null\nWhat's wrong here?  \n- We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\n\nI am not deleting the whole `Command` object (as your code does if I am not wrong) I just want to remove a association from this entity meaning remove a `command_alias` by calling this method `removeAliasById` in `Command` entity. Of course I should define the same method on each entity where I want to achieve the same. How do I call that method instead of remove on the `entity`?\nAlso I have changed the method as follow to be more general than specific where function name will be the same on each entity but content may vary depends on entity, take a look:\npublic function removeAssociationById($id)\n{\n    foreach ($this->command_alias as $alias) {\n        if ($alias->getId() == $id) {\n            $this->command_alias->removeElement($alias);\n            return;\n        }\n    }\n}\n. > > We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\n\nYep you're right, I don't have a working dev environment right now but you need the Alias name and not the Command name.\n\nAnd any ideas in how to get it? What I think is just access the method removeAssociationById and pass the id which belongs to the Alias and then try it but I don't know how to convert from a string (the entity pass as parameter) to a valid Doctrine entity mapping.\n\nThe \"after\" is wrong, but the problem comes from the entity manager not being set. You could replace with this:\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n\nI got Notice: Undefined index: class and if I dump the content of $this->entity I got an empty array []\n. > > We're passing _entity_config.name which for current entity for example sends Command but take a look to the following pic:\n\nYep you're right, I don't have a working dev environment right now but you need the Alias name and not the Command name.\n\nAnd any ideas in how to get it? What I think is just access the method removeAssociationById and pass the id which belongs to the Alias and then try it but I don't know how to convert from a string (the entity pass as parameter) to a valid Doctrine entity mapping.\n\nThe \"after\" is wrong, but the problem comes from the entity manager not being set. You could replace with this:\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n\nI got Notice: Undefined index: class and if I dump the content of $this->entity I got an empty array []\n. > Have you added $this->initialize($request) before, and is your controller extending EasyAdmin's one?\nYes and yes.\n```\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @param Request $request\n     * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\", defaults={\"action\": \"delete\"})\n     * @Method(\"DELETE\")\n     /\n    public function deleteAssociationAction($entity, $id, Request $request) {\n        if (!$request->isXmlHttpRequest()) {\n            throw new HttpException(406);\n        }\n    $this->initialize($request);\n    $object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n\n    dump($object);\n\n    if (!$object)\n    {\n        throw $this->createNotFoundException();\n    }\n\n//        $this->em->remove($object);\n//        $this->em->flush();\n    return new Response('ok');\n}\n\n}\n```\n. > Have you added $this->initialize($request) before, and is your controller extending EasyAdmin's one?\nYes and yes.\n```\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @param Request $request\n     * @Route(\"/delete/{entity}/{id}\", name=\"delete_association\", defaults={\"action\": \"delete\"})\n     * @Method(\"DELETE\")\n     /\n    public function deleteAssociationAction($entity, $id, Request $request) {\n        if (!$request->isXmlHttpRequest()) {\n            throw new HttpException(406);\n        }\n    $this->initialize($request);\n    $object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n\n    dump($object);\n\n    if (!$object)\n    {\n        throw $this->createNotFoundException();\n    }\n\n//        $this->em->remove($object);\n//        $this->em->flush();\n    return new Response('ok');\n}\n\n}\n```\n. Get not found exception, can't find the class at:\n// tried this way\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n// tried this one too\n    $object = $this->em->find($this->entity['class'], $id);\ndump($object);\nGet null\n. Get not found exception, can't find the class at:\n// tried this way\n$object = $this->getDoctrine()->getManager()->find($this->entity['class'], $id);\n// tried this one too\n    $object = $this->em->find($this->entity['class'], $id);\ndump($object);\nGet null\n. Here:\n\nI know that EntityManager::find() requires a second argument but why are we passing the ID of the Alias shouldn't this be the ID of the Command entity instead? I think this is where the problem is, right?\n. Here:\n\nI know that EntityManager::find() requires a second argument but why are we passing the ID of the Alias shouldn't this be the ID of the Command entity instead? I think this is where the problem is, right?\n. Is there any way to access the entity instance on the list view? I mean I could pass among the other params the current Command id right? But how? I was looking at docs but it says is only available to field_* and label_* templates\n. Is there any way to access the entity instance on the list view? I mean I could pass among the other params the current Command id right? But how? I was looking at docs but it says is only available to field_* and label_* templates\n. Ok, I have found another way to achieve the same in this line so now my url is this:\nurl: Routing.generate('delete_association', { 'entity': '{{ _entity_config.name }}', 'id': $(this).closest('tr').data('id'),'command_alias_id': $(this).data('id')})\nNow code works as expected:\n```\npublic function deleteAssociationAction($entity, $id, $command_alias_id, Request $request) {\n    $request->query->set('entity', $entity);\n    $request->query->set('action', 'delete');\nif (!$request->isXmlHttpRequest()) {\n    throw new HttpException(406);\n}\n\n$this->initialize($request);\n$object = $this->em->find($this->entity['class'], $id);\n\nif (!$object)\n{\n    throw $this->createNotFoundException();\n}\n\n$object->removeAssociationById($command_alias_id);\n$this->em->flush();\n\nreturn new Response('ok');\n\n}\n```\nOne last question, should the view reload automatically? I mean I need to refresh the page to see the item removed and I don't want to, I would like to do the same as when I delete a item from the list view, any advice on this latest one?\n. Ok, I have found another way to achieve the same in this line so now my url is this:\nurl: Routing.generate('delete_association', { 'entity': '{{ _entity_config.name }}', 'id': $(this).closest('tr').data('id'),'command_alias_id': $(this).data('id')})\nNow code works as expected:\n```\npublic function deleteAssociationAction($entity, $id, $command_alias_id, Request $request) {\n    $request->query->set('entity', $entity);\n    $request->query->set('action', 'delete');\nif (!$request->isXmlHttpRequest()) {\n    throw new HttpException(406);\n}\n\n$this->initialize($request);\n$object = $this->em->find($this->entity['class'], $id);\n\nif (!$object)\n{\n    throw $this->createNotFoundException();\n}\n\n$object->removeAssociationById($command_alias_id);\n$this->em->flush();\n\nreturn new Response('ok');\n\n}\n```\nOne last question, should the view reload automatically? I mean I need to refresh the page to see the item removed and I don't want to, I would like to do the same as when I delete a item from the list view, any advice on this latest one?\n. Great, I will close this as fixed but perhaps this could be added on a future since is interesting and maybe some developers like it thanks for your help and patience @Pierstoval \n. Great, I will close this as fixed but perhaps this could be added on a future since is interesting and maybe some developers like it thanks for your help and patience @Pierstoval \n. Thanks @ogizanagi I read both docs and is clear now but take a look to what I have in mind:\n- I would create a new custom form theme or override current one\n- I could check if field_type is pe: price as it is done in bootstrap_3_horizontal_layout.html.twig:\n{% if _field_type in ['datetime', 'datetimetz', 'date', 'time'] and easyadmin.field.nullable %}\n      ...\n  {% endif %}\nand then customize the HTML markup for cover this edge case but this approach adds a new custom type, is that possible? Do you have a better idea? \n. Thanks @ogizanagi I read both docs and is clear now but take a look to what I have in mind:\n- I would create a new custom form theme or override current one\n- I could check if field_type is pe: price as it is done in bootstrap_3_horizontal_layout.html.twig:\n{% if _field_type in ['datetime', 'datetimetz', 'date', 'time'] and easyadmin.field.nullable %}\n      ...\n  {% endif %}\nand then customize the HTML markup for cover this edge case but this approach adds a new custom type, is that possible? Do you have a better idea? \n. @ogizanagi Great closing this as fixed, thanks\n. @ogizanagi Great closing this as fixed, thanks\n. Closing as fixed with #739 \n. @ogizanagi Thanks, I know this way but doesn't want to apply until be sure it's the only one and has sense since by default textarea should have a min-height. Closing as fixed\n. @ogizanagi Thanks, I know this way but doesn't want to apply until be sure it's the only one and has sense since by default textarea should have a min-height. Closing as fixed\n. Great thanks for this @ogizanagi and @javiereguiluz \n. Great thanks for this @ogizanagi and @javiereguiluz \n. @ogizanagi okey, I get it but this isn't working for my config. I just want icons and not labels on the list so I have configured my admin as:\nlist:\n    title: 'list.category'\n    actions:\n        - { name: 'new', label: 'add' }\n        - { name: 'show', icon: 'search', label: '' }\n        - { name: 'edit', icon: 'pencil', label: '' }\n        - { name: 'delete', icon: 'remove', label: '' }\nThis render as:\n\nBut because the same label is used then I got this behavior on delete modal:\n\nI mean not label on the delete button unless you leave as it on purpose and I am looking for a extra label. Is this right? Anyway you can dismiss my PR if it's possible due to my miss understanding \n. @ogizanagi okey, I get it but this isn't working for my config. I just want icons and not labels on the list so I have configured my admin as:\nlist:\n    title: 'list.category'\n    actions:\n        - { name: 'new', label: 'add' }\n        - { name: 'show', icon: 'search', label: '' }\n        - { name: 'edit', icon: 'pencil', label: '' }\n        - { name: 'delete', icon: 'remove', label: '' }\nThis render as:\n\nBut because the same label is used then I got this behavior on delete modal:\n\nI mean not label on the delete button unless you leave as it on purpose and I am looking for a extra label. Is this right? Anyway you can dismiss my PR if it's possible due to my miss understanding \n. Since the same label is used in both list and button on the modal, is this a bug? @ogizanagi will take care of this? Since this is pretty much easier I can take a look and make a PR on this\n. Since the same label is used in both list and button on the modal, is this a bug? @ogizanagi will take care of this? Since this is pretty much easier I can take a look and make a PR on this\n. @javiereguiluz yes, I have this in my config as explained but even so, I can't see the field rendered using Bootstrap, any advice?\neasy_admin:\n    # ...\n    design:\n        form_theme: ['VichUploaderBundle:Form:fields.html.twig', 'horizontal']\n. @javiereguiluz yes, I have this in my config as explained but even so, I can't see the field rendered using Bootstrap, any advice?\neasy_admin:\n    # ...\n    design:\n        form_theme: ['VichUploaderBundle:Form:fields.html.twig', 'horizontal']\n. Closing as fixed\n. @ogizanagi thanks added :+1: \n. @ogizanagi thanks added :+1: \n. @javiereguiluz I can work on this but first, what is the idea: remove the bar if not user is logged in? That case happen only if not security is configured I am right?\n. @javiereguiluz I have fixed this and made a PR but why previous files are being sent also? Are not this merged already? Don't repos should be synced? I think I mix some basis on Git but let's wait for someone with more experience\n. @javiereguiluz ok I have found a doc, let me close my latest PR and will be back soon with right flow, sorry for this I am still learning how to contribute\n. Wrong PR\n. Yeah that's because I closed it minutes ago ;)\n. @javiereguiluz @ogizanagi where is the docs for this new feature? I found something here but that doesn't explain how to place the config inside the .yml files. For example look to this example:\n```\napp/config/easyadmin/admin.yml\neasy_admin:\n    design:\n        brand_color: '#1ABC9C'\n        color_scheme: 'dark'\n        form_theme:\n            - 'VichUploaderBundle:Form:fields.html.twig'\n            - 'horizontal'\n        templates:\n            field_datetime: 'PlatformBundle:Admin:field_datetime.html.twig'\nentities:\n    Alias:\n        ... // all the config for Alias entity goes here\n\napp/config/easyadmin/entities/category.yml\nCategory:\n    ... // all the config for Category entity goes here\napp/config/config.yml\nimports:\n    ...\n    #EasyAdmin\n    - { resource: easyadmin/admin.yml }\n    - { resource: easyadmin/entities/category.yml }\n```\nThat throw this error:\n\nThere is no extension able to load the configuration for \"Category\"\n\nSo I think the docs should be improved with the right setup for this, I am right or I mix something here?\n. @javiereguiluz @ogizanagi where is the docs for this new feature? I found something here but that doesn't explain how to place the config inside the .yml files. For example look to this example:\n```\napp/config/easyadmin/admin.yml\neasy_admin:\n    design:\n        brand_color: '#1ABC9C'\n        color_scheme: 'dark'\n        form_theme:\n            - 'VichUploaderBundle:Form:fields.html.twig'\n            - 'horizontal'\n        templates:\n            field_datetime: 'PlatformBundle:Admin:field_datetime.html.twig'\nentities:\n    Alias:\n        ... // all the config for Alias entity goes here\n\napp/config/easyadmin/entities/category.yml\nCategory:\n    ... // all the config for Category entity goes here\napp/config/config.yml\nimports:\n    ...\n    #EasyAdmin\n    - { resource: easyadmin/admin.yml }\n    - { resource: easyadmin/entities/category.yml }\n```\nThat throw this error:\n\nThere is no extension able to load the configuration for \"Category\"\n\nSo I think the docs should be improved with the right setup for this, I am right or I mix something here?\n. Excellent as always @javiereguiluz many thanks\n. Excellent as always @javiereguiluz many thanks\n. @javiereguiluz It's neccesary to setup a FQDN here for the type? I achieve the same as:\n- { property: 'price', label: 'price', type: 'money', type_options: { currency: 'EUR' } }\n. @javiereguiluz It's neccesary to setup a FQDN here for the type? I achieve the same as:\n- { property: 'price', label: 'price', type: 'money', type_options: { currency: 'EUR' } }\n. Ohhhh interesting thx one thing learned today I will update mine code too\n. Ohhhh interesting thx one thing learned today I will update mine code too\n. :+1: yes for me this will work and covers almost everything I could do with a menu. If this is will be implemented soon I am very graceful since this is a missing part of this amazing bundle which day by day is more likely Admin Generator from Symfony1 but with goodness from Symfony2|3 \nAnd for the second I haven't experience so I can't help there I just get sticky to the rules by the masters behind the Bundle :smiley: \n. :+1: yes for me this will work and covers almost everything I could do with a menu. If this is will be implemented soon I am very graceful since this is a missing part of this amazing bundle which day by day is more likely Admin Generator from Symfony1 but with goodness from Symfony2|3 \nAnd for the second I haven't experience so I can't help there I just get sticky to the rules by the masters behind the Bundle :smiley: \n. Yeah :+1: for AdminLTE I mention here time ago about how to use and/or integrate and @javiereguiluz tell me wasn't necessary since EasyAdmin have it's own theme but I am in favor of change to AdminLTE a huge step though\n. @rubengc interesting approach, just for curiosity and this is not an answer, how are you doing that? By creating your own Form Type and embedding a form inside a form? Could you share this code with me? I am working in something like that and have not clue at all so thanks in advance \n. @javiereguiluz I don't want to go back to Sonata and I love EasyAdmin I'll start working on this feature on my own but I need a few ideas on how to start and where from this means what should I understand, where I need to look and hook or so on the EasyAdmin side. Can you give me this? Perhaps will not be a good solution what I would do but maybe could be integrated sooner if I end it. For now I will use FOSUser roles and kind of permissions for give access to menus and/or actions on controllers. \n. @javiereguiluz my idea here is define a table where I have the menu name (a label) and four basic actions: CRUD, then I can assign as many roles as I want to each of them and them apply using your code snippet. I am not sure if this is what you said at first point of your answer, I am right? If not could you improve your idea so I can catch it? Thanks\n. @Pierstoval Even if I am not fully understand the first point (I will need a little more here, again due to my poor knowledge) what happen with dynamic roles? You're thinking only on roles defined on the security.yml or I am wrong? In my case I would like to use also roles from FOSUserBundle because the business rules can define a new roles (same as permissions) after the project ends.\n. @javiereguiluz the problem with Sonata is the bundle isn't ready yet for use with Symfony 2.8 or 3.0 I know they are working hard to get it done but still not ready and therefore other bundles as UserBundle aren't ready yet so I still sticky to EasyAdmin anyway this is not a thing that I will need soon and the project is a long term project so perhaps in the middle of the year I still working on the same project and you could add this feature as labeled in the future+feature ;)\n. @Pierstoval I have removed the s at end of methods as for example:\npublic function prePersistUserEntity(User $user)\n{\n    $this->container->get('fos_user.user_manager')->updateUser($user, false);\n}\nBut now I am getting this error:\n\nType error: Argument 1 passed to PlatformAdminBundle\\Controller\\AdminController::prePersistUserEntity() must be an instance of PlatformAdminBundle\\Controller\\User, instance of PlatformAdminBundle\\Entity\\User given\n\nI am not sure why should I pass a controller instead of the entity, any advice?\n. @Pierstoval I have fixed getting ride of those methods so I am closing the issue if you have any comments around pls leave here for future reference, thx for your help\n. @Pierstoval nice catch, you're right, I am running the same issue in another place and following your suggestion set the use statement and that's all error gone forever :smile: thx\n. I have fixed the number (2) a missing __toString() method at Operator entity but I can't fix the number (1) so I am still need some advice with this one\n. Great, I have fixed with the first one thx @javiereguiluz closing as fixed\n. @Pierstoval hi there, I am not asking to implement this new feature, I know this is only for me and is my work to do this I am asking for ideas or better how would you do that. What I would do is create a normal input FILE and then get the uploaded file an do the same on prePersist and preUpdate but can this be achieved with VichUploader? I mean can I use this without entities and get a File object at controller? How would yo do this? As per the second about aliases it works perfectly. Many thanks\n. @Pierstoval I need a little push here. This is the code I am working on:\npublic function prePersistAliasEntity(Alias $alias)\n{\n    $aliases = explode(',', $this->request->get('alias')['alias']);\n    foreach($aliases as $alias) {\n        echo $alias;\n    }\n    die();\n}\nMy idea was instantiate a new Alias per item on the field and then persist but I am not sure if this can be done at the prePersist method. See this example:\n```\npublic function prePersistAliasEntity(Alias $alias)\n{\n    $aliases = explode(',', $this->request->get('alias')['alias']);\n    foreach($aliases as $alias) {\n        $alias = new Alias();\n        $alias->setName($alias);\n        $this->em->persist($alias);\n    }\n$this->em->flush();\n\n}\n```\nis this right for you? It should work? If not, what are the next steps here? Should I pass those names back to the new method and let it do the work? How? (sorry I am still learning)\n. @Pierstoval thanks, can you look over this implementation, how looks to you? Is that what you said before?\n```\npublic function prePersistAliasEntity(Alias $alias)\n{\n    $curAliases = $this->em->getRepository('PlatformAdminBundle:Alias')->findAll();\n    $curAliasesNames = [];\n    foreach($curAliases as $curAlias) {\n        $curAliasesNames[] = $curAlias->getName();\n    }\n$aliases = explode(',', $this->request->get('alias')['alias']);\n\nforeach($aliases as $alias) {\n    if (!in_array($alias, $curAliasesNames)) {\n        $alias = new Alias();\n        $alias->setName($alias);\n        $alias->setActive($this->request->get('alias')['active']);\n        $this->em->persist($alias);\n    }\n}\n\n}\n``\n. @Pierstoval no problem man, you're more than justified: is your wife birthday and family always goes first. I will continue looking for a solution but your help will be nice since so far I am still stuck. Happy holidays\n. @mkalisz77 I am trying to do the same so if you get it soon and can share your solution sounds good perhaps this could be added to the guides related to Files uploads\n. @Pierstoval why not include common IDEs in.gitignore` file to avoid this? I am using a GUI client and notice those files but perhaps others don't and will add erroneously this to the master branch when they are making a PR\n. ",
    "manuelj555": "Using a tag and a Resolver like Form DependencyInjectionExtension is more configurable:\nyml\n    form.type.id:\n        class: <class>\n        arguments: [null]\n        tags:\n          - { name: form.type, alias: name }\n          - { name: easy_admin.entity_form, entity: <entityname> }\nOr simply set the form service id in the admin entity configuration.\n. Oh Javier No problem :) \nBasically my intention was to learn/practice and simultaneously help something\nI am very agree as to which performance can be affected with the creation of many routes only for the backend :)\nAgain, no problem !!!\nDisculpas por mi muy mal ingles :p\n. Si la entidad tiene un atributo que contendr\u00e1 el archivo subido, aun as\u00ed \u00bfno es posible a\u00f1adir dicho campo de forma manual?\nAlgo asi como:\nyaml\neasy_admin:\n    entities:\n        Customer:\n            class: AppBundle\\Entity\\Customer\n            form:\n                fields:\n                    - 'id'\n                    - { property: 'file', type: 'file', label: 'Logotipo' }\n. @Pierstoval I have a entity Product with a relation OneToMany to ProductValue. the idea is to list, add and edit the ProductValues from a specific Value.\n. Because several projects where I had to apply these additional fields, and would not want to be overriding the views for something that I find useful to have in the bundle.\n. I'm sorry but I have not had time to check\n. Adding the possibility of establishing label: false ?\n. Adding the possibility of establishing label: false ?\n. I'm testing with this query:\nsql\nFROM users u0_ WHERE u0_.id IN (?)) dctrn_result) dctrn_table' with params [\"man\"]\nand obtain the same result:\nSQLSTATE[22018]: [Microsoft][ODBC Driver 11 for SQL Server][SQL Server]Error de conversi\u00f3n al convertir el valor nvarchar 'man' al tipo de datos int.\") in @EasyAdmin\\default\\list.html.twig at line 16.\nThe yaml config is:\nyaml\n    User:\n        class: AppBundle\\Entity\\User\n            search:\n                fields: [id]\n. I'm testing with this query:\nsql\nFROM users u0_ WHERE u0_.id IN (?)) dctrn_result) dctrn_table' with params [\"man\"]\nand obtain the same result:\nSQLSTATE[22018]: [Microsoft][ODBC Driver 11 for SQL Server][SQL Server]Error de conversi\u00f3n al convertir el valor nvarchar 'man' al tipo de datos int.\") in @EasyAdmin\\default\\list.html.twig at line 16.\nThe yaml config is:\nyaml\n    User:\n        class: AppBundle\\Entity\\User\n            search:\n                fields: [id]\n. Thanks for your response @bretanac93, but my question is: this is a problem that must be resolved in  Easy Admin or not?\n. Well, the component is a external library, but the point is, if the easy admin offer a fixed bottom div for form buttons, It is not recommended set a z-index for these div in css of easy admin?\nFor example, the css classes .navbar-fixed-bottom and .navbar-fixed-top of bootstrap containts a z-index rule by default:\ncss\n.navbar-fixed-bottom, .navbar-fixed-top {\n    ...\n    z-index: 1030;\n}\nSo, if this rule will exists in easy admin css (.form-actions.stuck classes), this will a resolved problem for others componentes or libraries used later.\nAnother examples of this rule usage are the symfony debug toolbar with a z-index: 9999.\nPD. Sorry for my bad english (not allow me to express myself well)!!!\n. ",
    "jaltamir": "@ogizanagi  I'll try that this weekend, I'll post the results.\n. @ogizanagi , you were right.\nAll I had to do was create a form type:\nservices:\n  form.type.utcdatetime:\n    class: mycompany\\myvendor\\myBundle\\Form\\Type\\UTCDateTimeType\n    tags:\n      - { name: form.type, alias: utcdatetime }\n```\n<?php \nnamespace mycompany\\myvendor\\myBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\nclass UTCDateTimeType extends AbstractType\n{\n  public function setDefaultOptions(OptionsResolverInterface $resolver)\n  {\n}\npublic function getParent()\n  {\n    return 'datetime';\n  }\npublic function getName()\n  {\n    return 'utcdatetime';\n  }\n}\n```\n@javiereguiluz I would suggest to note this situation in README file.\nThanks\n. ",
    "andig": "Much appreciated. \nFor the benefit of other users: the DB contained an entirely empty user record, apparently created through php app/console fos:user:create during the development process. Once this is removed things are working fine.\n. ",
    "nlemahieu": "i just want to embed  the entities related to the one i am managing.\nSo if the feature will come, i'll often check the repo :p \nThanks for the quick response.\n. ",
    "nicolasdewez": "@javiereguiluz \nFor the error : \nPostgresql is more strict that Mysql (in default configuration).\nIn Mysql this condition is valid : numberField < '10' (it is equivalent to numberField < 10)\nPostgresql wants to user casts values.\nMore solutions : \n- The search should be apply only on \"string\" fields \n- We could imagine : \n  - if search is a number then search on \"string\" and \"number\" fields\n  - else search in \"string\" fields\nFor search in \"string\" fields we can add more types, it's right.\n. @javiereguiluz There is a solution : use \"cast\" function for convert to string and apply a \"like\" but do specifical for Postgresql is not possible.\nAnd i'm sure that if we configure mysql in strict mode we will have this problem and there are probably solutions which will probably be different to Postgresql...\nI haven't generic solution which it's ok for all case. \n@Pierstoval it's a good idea\n. ",
    "KonstantinKuklin": "+1\n. ",
    "monsefoster": "+1\n. ",
    "mmarquez": "+1\n. ",
    "romaricdrigon": "Could we have an overview of the current situation, please @javiereguiluz ?\nwhat are the missing bit? Creating an entity with a One-to-any is ok I guess form the form part, but maybe not the display? Or it can be hacked around using __toString?\n. I'm now starting a project with EasyAdmin, and groups are really needed.\nI feel like the other discussion is way broader, and should not prevent a simple and quick way to configure groups. For anybody coming rom another admin gen setting  groups is a reflex from the start.\nSo what about re-opening this issue, and implementing a basic system, not depending on a bigger work on design overall?\nAs for me I like that syntax:\nyml\neasy_admin:\n    entities:\n        Posts:\n            group: Blog\n            class: AppBundle\\Entity\\Post\n        Pages:\n            group: { name: Cms, translation_key: 'easyadmin.menu.group.cms', class: 'cms_group' }\n            class: AppBundle\\Entity\\Page\n        Categories:\n            group: Cms\n            class: AppBundle\\Entity\\Category\n        \"Config\":\n            class: AppBundle\\Entity\\Config\nThat one feels totally natural and consistent with others, for instance what you are doing to customize entity show fields: at first only a key, and then after you can set up an array with more options.\nNote that the key is group and not groups anymore. Having an entity in 2 places at the same time does not feel natural, and people may want then 2 different admins.\n. It is if you think of groups only as menu groups.\nBut actually such a group option could be used elsewhere. Maybe not in the \"basic\" admin; but it could be an interesting extension point for someone who wants to add a custom view with widgets and so on.\n. @javiereguiluz that's really a nice coincidence!\nSo for now I'll go with the template. The point is not that I needed that feature that bad now, but that doing it this way was making sense for me coming from Sonata admin.\nBut then I will wait and see about that menu feature! \nNice to see you guys are that quick to answer :)\n. I'm encountering the same issue.\nIf the field is nullable, EasyAdmin should add an \"empty\" value we can select. Even if it is not an issue from EasyAdmin, it is a feature it should have. Either through a checkbox or by using an HTML5 date widget we can leave empty.\nA typical use case is when editing an entity with a \"soft deleteable\" filter. Actually, you will have \"sneakily\" a date set, with catastrophic consequences: your entity is now (soft) deleted...\n. You may want to offer some super-hero-admin the ability of cancelling a soft delete. Then you have to allow them to set this property to null.\nI think EasyAdmin should have a sane default. Forcing people to set a value when editing an entity is not IMHO. \n. You may want to offer some super-hero-admin the ability of cancelling a soft delete. Then you have to allow them to set this property to null.\nI think EasyAdmin should have a sane default. Forcing people to set a value when editing an entity is not IMHO. \n. ",
    "yceruto": "@javiereguiluz the support to many-to-one association is ready? I see in TODO that is not checked.\n. @javiereguiluz I checked all associations and works with the last changes #577 :)\n. :+1:\n. The reason for the failure must be related to the identification of the parents property as text type\n. because skipping the settings for relations not supported:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Form/Type/EasyAdminFormType.php#L70\n. @Pierstoval I have a __toString() method for this entity. \n. @Pierstoval the object given parents is a ArrayCollection instance so this not contain a __toString() method.\n@javiereguiluz Okay, I'll work to solve this.\n. Fixing CI issues.\n. @javiereguiluz Perfect! :)\n. :+1: \n. :+1: \n. @javiereguiluz the bundle name??? or \"enter the SensioLabsConnect username or the full name of the person you're voting for\" ???\n. @javiereguiluz the bundle name??? or \"enter the SensioLabsConnect username or the full name of the person you're voting for\" ???\n. :+1:\n. :+1:\n. well, for now I propose only display the list of collection on the \"show\" page.\n. @javiereguiluz have you thought about adding default and custom actions affecting N selected records? as does Sonata admin (php) or Django (python)?\n. :+1:\n. :+1: \n. :+1: \n. I agree, and the idea is perfect.\n. I agree, and the idea is perfect.\n. :+1:\n. @elenitaex5 I have fixed this bug in #604, thanks\n. @javiereguiluz any suggestions?\n. any solution for this issue, please.\nping @ogizanagi @Pierstoval @javiereguiluz \n. @ogizanagi In fact that is another issue :+1: \nMy bug it's produced on these conditions (createSearchQueryBuilder):\n- $entityClass = 'AppBundle\\Entity\\Offer'\n- $searchQuery = 'foo'\n-  $searchableFields = ['id' => ['dataType' => 'integer', ...], 'price' => ['dataType' => 'float', ...]]\n- $databaseIsPostgreSql = true\n- $isNumericField = true (both)\n- $isTextField = false (both)\n- is_numeric($searchQuery) == false\nso, this line is executed twice, at the end $queryCondition is empty and WHERE clause is called, throwing a exception. But, if WHERE clause is not called (checking for $queryCondition->count()) the result is all records ...\nEDIT: ... when the result must be empty records.\n. @ogizanagi In fact that is another issue :+1: \nMy bug it's produced on these conditions (createSearchQueryBuilder):\n- $entityClass = 'AppBundle\\Entity\\Offer'\n- $searchQuery = 'foo'\n-  $searchableFields = ['id' => ['dataType' => 'integer', ...], 'price' => ['dataType' => 'float', ...]]\n- $databaseIsPostgreSql = true\n- $isNumericField = true (both)\n- $isTextField = false (both)\n- is_numeric($searchQuery) == false\nso, this line is executed twice, at the end $queryCondition is empty and WHERE clause is called, throwing a exception. But, if WHERE clause is not called (checking for $queryCondition->count()) the result is all records ...\nEDIT: ... when the result must be empty records.\n. I'll try next week :+1: \n. I'll try next week :+1: \n. @javiereguiluz any suggestions?\n. if you looking for an empty string, which should be the response?\n- empty result\n- XXX results found (all results) (actual)\n- return to list (clear search action)\nWhat would be the result expected by the user?\n. Don't worry, next year :+1:\n. @javiereguiluz I guess this leads to improved performance too? https://github.com/symfony/symfony/pull/16838 \n. @comolo you can overwrite the default layout template and overwrite the header_menu block:\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block header_menu %}\n    {# you custom render easyadmin_config('entities') #}\n{% endblock header_menu %}\n``\n. can use thenavigation_items` block too\n``` twig\n{# app/Resources/views/easy_admin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% block navigation_items %}\n    {# you custom render easyadmin_config('entities') #}\n{% endblock %}\n``\n. :+1:\n. I agree with @ogizanagi, some configurations are very specific to establish them globally. But the idea a lot of sense to me and it would be very interesting also these widgets can be enabled/disabled in the configuration. :+1: \n. I agree with not reinvent the wheel, we should use existing bundles @Pierstoval :+1:\n. I agree with not reinvent the wheel, we should use existing bundles @Pierstoval :+1:\n. Why it is necessary to use the PRE_PERSIST and PRE_UPDATE events from EasyAdminBundle if we have the Doctrine Events?\n. Why it is necessary to use the PRE_PERSIST and PRE_UPDATE events from EasyAdminBundle if we have the Doctrine Events?\n. @javiereguiluz_PERSISTevents is related with$em->persist($entity)operation when we created a new entity http://www.doctrine-project.org/api/orm/2.2/class-Doctrine.ORM.Events.html\n. @javiereguiluz_PERSISTevents is related with$em->persist($entity)operation when we created a new entity http://www.doctrine-project.org/api/orm/2.2/class-Doctrine.ORM.Events.html\n. Maybe can rename in favor_SAVE?\n. Maybe can rename in favor_SAVE`?\n. Something like this:\nphp\nclass AdminController extends EasyAdminController\n{\n    public function preSaveEntity($entity)\n    {\n        // do something for new and updated entities ...\n    }\n}\nthus we avoid confusion with Doctrine events.\n. Something like this:\nphp\nclass AdminController extends EasyAdminController\n{\n    public function preSaveEntity($entity)\n    {\n        // do something for new and updated entities ...\n    }\n}\nthus we avoid confusion with Doctrine events.\n. @mkalisz77 That happens with all your custom form types for known fields types.\nOne option could be to create a Custom Type Guesser for your DateType but currently EasyAdmin predefines the form type for each known field before, so any guesser isn't trigger to resolve this form type, then we discard this option.\nSo, the solution would be to Create a Form Type Extension for Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType. Move all your logic from DatePickerType to new \"DateTypeExtension\".\n. @rubengc maybe this article can help you solve your problem. http://symfony.com/doc/current/cookbook/bundles/prepend_extension.html\n. @rubengc maybe you can separate the configuration file:\n``` yaml\napp/config/easyadmin.yml\nimports:\n    - { resource: @FooBundle/Resources/config/easyadmin.yml }\n    - { resource: @BarBundle/Resources/config/easyadmin.yml }\nGeneral Configuration\neasy_admin:\n    site_name: 'Great Admin'\n    #...\n```\n. @Pierstoval two pixels to be exact, :p\n. Beautiful job! :+1: \n. Beautiful job! :+1: \n. looks great!! :+1: \n. looks great!! :+1: \n. @javiereguiluz I think there is no problem with merge this PR for me, because the possibility of multiple administrations is not lost yet, just affects the link in lists. :+1: ?\n. @javiereguiluz I think there is no problem with merge this PR for me, because the possibility of multiple administrations is not lost yet, just affects the link in lists. :+1: ?\n. Hi @javiereguiluz, I can confirm this error, go to any show page and try \"Back to list\".\nEDIT: ... starting from another list.\n. Great! :+1:\n. @twifty Please don't get me wrong, I'm just trying to help. I agree with this feature and your implementation :) but I think that everything that can be injected into constructor can be obtained from the service container. IMO, with one behavior (FQCN) is enough for that.\n. @twifty Please don't get me wrong, I'm just trying to help. I agree with this feature and your implementation :) but I think that everything that can be injected into constructor can be obtained from the service container. IMO, with one behavior (FQCN) is enough for that.\n. @twifty you're right, sorry, forgets my comments about controller as services. Right now, I'm implementing a solution based on a \"Request Listener\" and the \"_controller\" attribute. I'll open an issue for that.\n. @twifty you're right, sorry, forgets my comments about controller as services. Right now, I'm implementing a solution based on a \"Request Listener\" and the \"_controller\" attribute. I'll open an issue for that.\n. It's a general solution for custom entity admin controller:\n``` php\nnamespace AppBundle\\EventListener;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\Configurator;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\HttpKernel\\Controller\\ControllerResolverInterface;\nuse Symfony\\Component\\HttpKernel\\Event\\FilterControllerEvent;\nuse Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\nclass EasyAdminControllerListener\n{\n    /*\n     * @var ContainerInterface\n     /\n    private $container;\n/**\n * @var ControllerResolverInterface\n */\nprivate $resolver;\n\n/**\n * @var Configurator\n */\nprivate $configurator;\n\npublic function __construct(ContainerInterface $container, ControllerResolverInterface $resolver, Configurator $configurator)\n{\n    $this->container = $container;\n    $this->resolver = $resolver;\n    $this->configurator = $configurator;\n}\n\n/**\n * Exchange default admin controller by custom entity admin controller.\n *\n * @param FilterControllerEvent $event\n */\npublic function onKernelController(FilterControllerEvent $event)\n{\n    $defaultController = $event->getController();\n\n    // $defaultController passed can be either a class or a Closure.\n    // This is not usual in Symfony but it may happen.\n    // If it is a class, it comes in array format.\n    if (!is_array($defaultController)) {\n        return;\n    }\n\n    if (!is_a($defaultController[0], AdminController::class)) {\n        // default controller must be JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController instance or parents.\n        return;\n    }\n\n    $request = $event->getRequest();\n\n    // this condition happens when accessing the backend homepage, which\n    // then redirects to the 'list' action of the first configured entity.\n    if (null === $entityName = $request->query->get('entity')) {\n        return;\n    }\n\n    $entity = $this->configurator->getEntityConfig($entityName);\n\n    if (!isset($entity['controller'])) {\n        // custom admin controller not configured.\n        return;\n    }\n\n    $controller = $entity['controller'];\n\n    // by default 'indexAction'\n    $method = $defaultController[1];\n\n    // Controller Naming Pattern\n    if (class_exists($controller)) {\n        // class::method pattern\n        $controller .= '::'.$method;\n    } elseif ($this->container->has($controller)) {\n        // service:method pattern\n        $controller .= ':'.$method;\n    }\n\n    $request->attributes->set('_controller', $controller);\n    // load controller\n    if (false === $controller = $this->resolver->getController($request)) {\n        throw new NotFoundHttpException(sprintf('Unable to find the controller for path \"%s\". The route is wrongly configured.', $request->getPathInfo()));\n    }\n\n    if (!is_a($controller[0], AdminController::class)) {\n        throw new \\InvalidArgumentException(sprintf('Controller \"%s\" must be subclass of \"%s\".', get_class($controller[0]), AdminController::class));\n    }\n\n    // exchange callable controller\n    $event->setController($controller);\n}\n\n}\n```\n``` yaml\napp/config/services.yml\nservices:\n    app.listener.admin_controller:\n        class: AppBundle\\EventListener\\EasyAdminControllerListener\n        arguments: [ '@service_container', '@controller_resolver', '@easyadmin.configurator' ]\n        tags:\n            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }\n```\nThen, in your admin entity configuration:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # class, service id or any Controller Naming Pattern (e.g. AppBundle:Product:index)\n            controller: AppBundle\\Controller\\ProductController\nFinally, your custom \"Product\" admin controller:\n``` php\nnamespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nclass ProductController extends AdminController\n{\n    protected function listAction()\n    {\n        $this->denyAccessUnlessGranted('ROLE_PRODUCT_MANAGER');\n    // do something...\n\n    return parent::listAction();\n}\n\n}\n```\n@twifty, @javiereguiluz WDYT?\n. It's a general solution for custom entity admin controller:\n``` php\nnamespace AppBundle\\EventListener;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\Configurator;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\nuse Symfony\\Component\\HttpKernel\\Controller\\ControllerResolverInterface;\nuse Symfony\\Component\\HttpKernel\\Event\\FilterControllerEvent;\nuse Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException;\nclass EasyAdminControllerListener\n{\n    /*\n     * @var ContainerInterface\n     /\n    private $container;\n/**\n * @var ControllerResolverInterface\n */\nprivate $resolver;\n\n/**\n * @var Configurator\n */\nprivate $configurator;\n\npublic function __construct(ContainerInterface $container, ControllerResolverInterface $resolver, Configurator $configurator)\n{\n    $this->container = $container;\n    $this->resolver = $resolver;\n    $this->configurator = $configurator;\n}\n\n/**\n * Exchange default admin controller by custom entity admin controller.\n *\n * @param FilterControllerEvent $event\n */\npublic function onKernelController(FilterControllerEvent $event)\n{\n    $defaultController = $event->getController();\n\n    // $defaultController passed can be either a class or a Closure.\n    // This is not usual in Symfony but it may happen.\n    // If it is a class, it comes in array format.\n    if (!is_array($defaultController)) {\n        return;\n    }\n\n    if (!is_a($defaultController[0], AdminController::class)) {\n        // default controller must be JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController instance or parents.\n        return;\n    }\n\n    $request = $event->getRequest();\n\n    // this condition happens when accessing the backend homepage, which\n    // then redirects to the 'list' action of the first configured entity.\n    if (null === $entityName = $request->query->get('entity')) {\n        return;\n    }\n\n    $entity = $this->configurator->getEntityConfig($entityName);\n\n    if (!isset($entity['controller'])) {\n        // custom admin controller not configured.\n        return;\n    }\n\n    $controller = $entity['controller'];\n\n    // by default 'indexAction'\n    $method = $defaultController[1];\n\n    // Controller Naming Pattern\n    if (class_exists($controller)) {\n        // class::method pattern\n        $controller .= '::'.$method;\n    } elseif ($this->container->has($controller)) {\n        // service:method pattern\n        $controller .= ':'.$method;\n    }\n\n    $request->attributes->set('_controller', $controller);\n    // load controller\n    if (false === $controller = $this->resolver->getController($request)) {\n        throw new NotFoundHttpException(sprintf('Unable to find the controller for path \"%s\". The route is wrongly configured.', $request->getPathInfo()));\n    }\n\n    if (!is_a($controller[0], AdminController::class)) {\n        throw new \\InvalidArgumentException(sprintf('Controller \"%s\" must be subclass of \"%s\".', get_class($controller[0]), AdminController::class));\n    }\n\n    // exchange callable controller\n    $event->setController($controller);\n}\n\n}\n```\n``` yaml\napp/config/services.yml\nservices:\n    app.listener.admin_controller:\n        class: AppBundle\\EventListener\\EasyAdminControllerListener\n        arguments: [ '@service_container', '@controller_resolver', '@easyadmin.configurator' ]\n        tags:\n            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }\n```\nThen, in your admin entity configuration:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            # class, service id or any Controller Naming Pattern (e.g. AppBundle:Product:index)\n            controller: AppBundle\\Controller\\ProductController\nFinally, your custom \"Product\" admin controller:\n``` php\nnamespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nclass ProductController extends AdminController\n{\n    protected function listAction()\n    {\n        $this->denyAccessUnlessGranted('ROLE_PRODUCT_MANAGER');\n    // do something...\n\n    return parent::listAction();\n}\n\n}\n```\n@twifty, @javiereguiluz WDYT?\n. Another way is using dynamic routes:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            controller: AppBundle\\Controller\\ProductController\nEasyAdmin will generate dynamic routes per entity:\n``` yaml\neasyadmin_product_list:\n    path:      /product/list\n    defaults: { _controller: AppBundle\\Controller\\ProductController::listAction }\neasyadmin_product_edit:\n    path:      /product/{id}/edit\n    defaults: { _controller: AppBundle\\Controller\\ProductController::editAction }\n...\n```\n\nThe controller listener it won't be necessary in this case, because the Framework resolve the controller directly by route matched.\n\nBUT right now EasyAdminBundle use one route only: / with names easyadmin and admin for all entities actions, so \"one route one controller\".\n. Another way is using dynamic routes:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            controller: AppBundle\\Controller\\ProductController\nEasyAdmin will generate dynamic routes per entity:\n``` yaml\neasyadmin_product_list:\n    path:      /product/list\n    defaults: { _controller: AppBundle\\Controller\\ProductController::listAction }\neasyadmin_product_edit:\n    path:      /product/{id}/edit\n    defaults: { _controller: AppBundle\\Controller\\ProductController::editAction }\n...\n```\n\nThe controller listener it won't be necessary in this case, because the Framework resolve the controller directly by route matched.\n\nBUT right now EasyAdminBundle use one route only: / with names easyadmin and admin for all entities actions, so \"one route one controller\".\n. @Pierstoval $defaultController[0] is an object, not a string.\n. > I don't like this idea. EasyAdmin is built with only one single route, and it should remain the same to avoid conflicts with custom ones.\n@Pierstoval I don't understand your position now, in this https://github.com/javiereguiluz/EasyAdminBundle/issues/915#issuecomment-190211150 you're in agreement.\n. After #1185 this PR would be closed ?\n. After #1185 this PR would be closed ?\n. https://github.com/javiereguiluz/EasyAdminBundle/issues/905#issuecomment-187121382:\n\nThe back button is one of the few that remains in most browsers, so I guess we don't need to replicate that.\n\n@javiereguiluz It's the solution exactly, then \"Back to list\" action always should be redirect to current entity list, otherwise we can use back button of the browser.\n. https://github.com/javiereguiluz/EasyAdminBundle/issues/905#issuecomment-187121382:\n\nThe back button is one of the few that remains in most browsers, so I guess we don't need to replicate that.\n\n@javiereguiluz It's the solution exactly, then \"Back to list\" action always should be redirect to current entity list, otherwise we can use back button of the browser.\n. We can use referer information after save only.\n. We can use referer information after save only.\n. Another solution can be use the referer only when comes from the list of the same entity (for keep order, search and paginator values)\n. Another solution can be use the referer only when comes from the list of the same entity (for keep order, search and paginator values)\n. :+1:\nI agree with @rubengc and @SebTM here, this feature can be a big jump for EasyAdminBundle. Friendly routes (/user/list, /user/new, /user/1/edit, /user/1/delete, custom routes /user/1/my-action) is better and would allow ACLs automatically.\nI think worth implementing it, IMHO.\n. It's just a quick idea to resolve this topics: \n- Friendly routes\n- Custom Entity Admin Controllers\n- ACLs\n``` php\n// AdminBundle/Routing/EasyAdminLoader.php\nnamespace AdminBundle\\Routing;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\Configurator;\nuse Symfony\\Component\\Config\\Loader\\Loader;\nuse Symfony\\Component\\Routing\\Route;\nuse Symfony\\Component\\Routing\\RouteCollection;\nclass EasyAdminLoader extends Loader\n{\n    private $loaded = false;\n/**\n * @var Configurator\n */\nprivate $configurator;\n\npublic function __construct(Configurator $configurator)\n{\n    $this->configurator = $configurator;\n}\n\n/**\n * {@inheritdoc}\n */\npublic function load($resource, $type = null)\n{\n    if (true === $this->loaded) {\n        throw new \\RuntimeException('Do not add the \"easyadmin\" loader twice');\n    }\n\n    $routes = new RouteCollection();\n    $actions = ['list', 'show', 'new', 'edit', 'delete'];\n\n    foreach ($this->configurator->getBackendConfig('entities') as $entityName => $config) {\n        // maybe this can be configurable too. \"Custom Entity Routes\" \n        $entity = strtolower($entityName);\n        $controller = isset($config['controller']) ? $config['controller'] : 'JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController';\n\n        foreach ($actions as $action) {\n            if ('list' === $action || 'new' === $action) {\n                $path = \"/{$entity}/{$action}\";\n                $requirements = [];\n            } else {\n                $path = \"/{$entity}/{id}/{$action}\";\n                $requirements = ['id' => '\\d+'];\n            }\n            $defaults = [\n                '_controller' => \"{$controller}::indexAction\",\n                'entity' => $entityName,\n                'action' => $action,\n            ];\n            $route = new Route($path, $defaults, $requirements);\n\n            // add the new route to the route collection\n            $routeName = \"easyadmin_{$entity}_{$action}\";\n            $routes->add($routeName, $route);\n        }\n    }\n\n    $this->loaded = true;\n\n    return $routes;\n}\n\n/**\n * {@inheritdoc}\n */\npublic function supports($resource, $type = null)\n{\n    return 'easyadmin' === $type;\n}\n\n}\n```\n``` yaml\nservices.yml\nservices:\n    admin.routing.easyadmin_loader:\n        class: AdminBundle\\Routing\\EasyAdminLoader\n        arguments: [ '@easyadmin.configurator' ]\n        tags:\n            - { name: routing.loader }\n```\nIn your routing.yml:\nyaml\nadmin:\n    resource: .\n    type:     easyadmin\n    prefix:   /admin\nSo, for each entity configuration:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\nEasyAdminLoader will generate this routes:\n``` yaml\ndynamic routes in memory (cacheable)\neasyadmin_product_list:\n     path: /admin/product/list\n     defaults: { _controller: JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController::indexAction, entity: Product, action: list }\neasyadmin_product_show:\n     path: /admin/product/{id}/show\n     defaults: { _controller: JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController::indexAction, entity: Product, action: show }\netc...\n```\nThat would imply changes:\n\nHow to get these three data of the request (entity, action and id), now using $request->attributes\nHow to generate routes.\nMaybe something else.\n\n@javiereguiluz you think this maybe a way to go?\n. :+1:\n. :+1:\n. :+1: great!\n. There are two ways to do this without using the object instance:\n``` php\n// An example callback method\nclass MyClass {\n    public static function myCallbackMethod() {\n        echo 'Hello World!';\n    }\n}\n// Type 1: Static class method call\ncall_user_func(array('MyClass', 'myCallbackMethod'));\n// Type 2: Static class method call (As of PHP 5.2.3)\ncall_user_func('MyClass::myCallbackMethod');\n```\nBoth callables.\nAn example for EasyAdmin:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            form:\n                fields:\n                    - 'name'\n                    - property: 'category'\n                      type_options: \n                          query_builder: 'AppBundle\\Repository\\CategoryRepository::available'\nAlso can be:\nyaml\n                      # ...\n                         query_builder: ['AppBundle\\Repository\\CategoryRepository', 'available']\nThen, create a new class or use an existing one. Personally I prefer to use the entity repository class for that:\nphp\nclass CategoryRepository extends EntityRepository\n{\n    public static function available(CategoryRepository $repository)\n    {\n        return $repository->createQueryBuilder('c')\n            ->where(\"c.enabled IS TRUE\")\n            ->orderBy('c.name');\n    }\n}\nRemember that this method has to be static.\n. @rubengc if you want an empty select without execute the default search you can returns a QueryBuilder with empty result.\nFor example:\nphp\nclass CategoryRepository extends EntityRepository\n{\n    public static function available(CategoryRepository $repository)\n    {\n        return $repository->createQueryBuilder('c')\n            ->where(\"FALSE IS TRUE\");\n    }\n}\n. No matter, anyway I had to do it for my backend, in fact, I have already running it with all features mentioned (ACLs, Custom Entity Controller, etc), including some improvements in menu to select the correct item through the request route.\nIMHO use all variables into query parameter can be very fragile and the backend may be damaged or malfunction if one of the value are manually changed. The users are very \"smart\"\nI'm agree that can be many routes (entity length x 5 routes), but the benefit (Symfony built-in features) could be higher.\n. @Pierstoval \n\nI have a backend with 15 entities, I'm not sure adding 75 routes is useful to my backend at all, especially when I can trade the potentially-conflictual {{ path('easyadmin_post_list') }} with the very much flexible {{ path('easyadmin', {'entity': 'Post', 'action': 'list'}) }}.\n\nFor that I created {{ easyadmin_path('Post', 'list') }} twig funcion, equally flexible. I'm not sure that 75 routes is a big performance problem for any backend IMO. I think you exaggerate a bit, dont you think? ;)\n@javiereguiluz \n\n... But I don't understand the need to complicate the routing part so much\n... Why? They complicate everything, they make the routing slower and I never use them.\n... The same goes for the \"pretty URLs\". This is a backend, so no one looks at URLs.\n\nThe first paragraph of \"Routing\" chapter of Symfony book talk about this:\n\nBeautiful URLs are an absolute must for any serious web application. This means leaving behind ugly URLs like index.php?article_id=57 in favor of something like /read/intro-to-symfony.\n\nLast paragraph:\n\nRouting is a system for mapping the URL of incoming requests to the controller function that should be called to process the request. It both allows you to specify beautiful URLs and keeps the functionality of your application decoupled from those URLs...\n\nSo, I feel sad for this opinion, because it's not my intention here. I think they have misunderstood this PR :( This is not about pretty URLs mainly, but about security features, custom controller per entity and flexibility for more DX, which is visible in this PR.\nExcuse me for this rant too :(\n. Yes, with path=/admin-prefix it would be better, BUT I need transport this information to javascript scenery, some idea? request metadata...? Then, the cookie would be valid for backend paths only. \n\nMy concern is that this cookie with path=/ would be sent to any website page, being a backend one or not.\n\nHowever, domain attribute is not specified when the cookie is created, its valid for current domain only.\n. :+1:\nWhy not use localSorage instead of cookies?\n. I see, :+1:\n. :+1: \n. Please, it would be possible an early release for this \"PR\"?\n. > ...the only restriction is that you must use the entity name to refer to the current entity.\nWhy? We could not do it without this restriction? property = 'value'?\n. What do you think about adding some example by using container parameter? Something like this:\nyaml\neasy_admin:\n    entities:\n        VipCustomers:\n            class: AppBundle\\Entity\\User\n            list:\n                dql_filter: 'entity.budget > %budget%'\nThis makes it possible to use different values depending on the environment or maybe dynamic values.\n. I like the second option and it's really easy to understand. However, when we need a little more complexity e.g: use authenticated user or values coming from a service:\nyaml\neasy_admin:\n    entities:\n        Reports:\n            class: AppBundle\\Entity\\Report\n            list:\n                scopes:\n                    - { label: 'My Reports', dql_filter: 'entity.user = :user' }\n                    - { label: 'All Reports', default: true }\nthen we must use one of these alternatives to complete the query ($qb->setParameters(...)):\n- create the createReportListQueryBuilder method.\n- overwrite the createListQueryBuilder method.\n- Listen from EasyAdminEvents::POST_LIST_QUERY_BUILDER event.\nYou think you can add an advanced tutorial for this?\n. No matter how low it is, I think if should be taken into account. :+1: \n. No matter how low it is, I think if should be taken into account. :+1: \n. Even this could rise more the expectations of dql_filter feature, to be able to combine both options safely:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            list:\n                select_related: ['category']\n                dql_filter: 'entity.used IS FALSE AND category.enabled IS TRUE'\n. Even this could rise more the expectations of dql_filter feature, to be able to combine both options safely:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            list:\n                select_related: ['category']\n                dql_filter: 'entity.used IS FALSE AND category.enabled IS TRUE'\n. Very nice feature, especially because in the yaml files we don't have autocomplete. Thanks!\n. Very nice feature, especially because in the yaml files we don't have autocomplete. Thanks!\n. @Babacooll test using null as the default value in the constructor parameters:\nphp\npublic function __construct($name = null, $type = null) \n{\n     //...\n}\n. @Babacooll test using null as the default value in the constructor parameters:\nphp\npublic function __construct($name = null, $type = null) \n{\n     //...\n}\n. However, I think EasyAdmin not support Doctrine Embeddables right now.\n. However, I think EasyAdmin not support Doctrine Embeddables right now.\n. What you can do is to use nested forms. Define a form type for StepType class and other for Step.\n. What you can do is to use nested forms. Define a form type for StepType class and other for Step.\n. Great refactor! and it looks very well. You think this solves this issue #611 ? Thanks.\n. @SebTM test this, Product is the entity:\n``` php\nprotected function createProductListQueryBuilder($entityClass, $sortDirection, $sortField = null)\n{\n    $queryBuilder = $this->createListQueryBuilder($entityClass, $sortDirection, $sortField);\n// the product entity is already selected, then\n// customize the query here. e.g: $queryBuilder->where('entity.stock < 5');\n\nreturn $queryBuilder;\n\n}\n```\nIs not necessary to copy the whole list-action really :)\n. @javiereguiluz maybe we could talk about these methods also in the documentation?\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/3-list-search-show-configuration.md#tweak-the-default-actions-for-a-specific-entity\n. Ohh! I would like an option to link this widget with another field in the same form and can send not only the text to search, but also the value of this other field and thus customize the query and result.\nFor example:\nyml\n   # ...\n   - name\n   - type\n   - { property: 'buyer', type: 'easyadmin_autocomplete', related: ['type'] }\nEach request sends the text to find and the current value of the field type. Then my custom query is filtered by type value too. :smile: :tada: \n. @javiereguiluz I'm not sure that the <select> is loaded with all records and the performance issue still exists? you can check this?\n. Don't worry. Do you let me use your commits and create a new request?\n. @javiereguiluz ready for review! :tada: \n. @ogizanagi your idea is the best, Thanks!.\n@javiereguiluz Ready for Review!\n. @javiereguiluz I've a commit that fix BC for SF <= 2.7 in this form type:\nphp\n$form->add('autocomplete', 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType', $options);\nI wish reuse this code but is necessary refactorization one. The question is, I should  submit this refactor in this PR? or separate one?\n. Forget to upload the latter commit, my bad. Updated!\n. Your welcome, it was a great pleasure! I've finished, ready for final review!\n. @javiereguiluz I've fixed an issue. Now, we can clear the autocomplete value (tested with multiple option too).\n. Updated following the @ogizanagi comments.\n. Hi guys! This can do it for yourself without much effort in just three steps. \nFollowing @ama-gi role based config.\nStep 1: Overwrite the EasyAdmin AdminController and overwrite the indexAction method in you custom AdminController.\nStep 2: Copy and Paste the parent code from this method indexAction\nStep 3: Add before return $this->executeDynamicMethod($action.'<EntityName>Action'); the follows statements:\nphp\nif (isset($this->entity['permissions'][$action])) {\n    $this->denyAccessUnlessGranted($this->entity['permissions'][$action]);\n}\nFull Sample:\n``` php\nnamespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as EasyAdminController;\nclass AdminController extends EasyAdminController\n{\n    /\n     * @Route(\"/\", name=\"easyadmin\")\n     \n     * @param Request $request\n     \n     * @return RedirectResponse|Response\n     */\n    public function indexAction(Request $request)\n    {\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->redirectToBackendHomepage();\n    }\n\n    $action = $request->query->get('action', 'list');\n    if (!$this->isActionAllowed($action)) {\n        throw new ForbiddenActionException(array('action' => $action, 'entity' => $this->entity['name']));\n    }\n\n    if (isset($this->entity['permissions'][$action])) {\n        $this->denyAccessUnlessGranted($this->entity['permissions'][$action]);\n    }\n\n    return $this->executeDynamicMethod($action.'<EntityName>Action');\n}\n\n}\n```\n. See https://github.com/symfony/symfony/issues/17557#issuecomment-313555650 for a workaround ;). > If you redirect to the search action, the query won't be set, so the condition won't match. This only matches when you click on Search button and the input text is empty.\n@javiereguiluz when $this->request->query->get('query') is null then trim(null) is equals to string(0) \"\" and the condition will match.\nMaybe we call to listAction method instead ?\n. @antondachauer you could provide the \"easyadmin\" version installed in your vendor?\n. @antondachauer you could provide the \"easyadmin\" version installed in your vendor?\n. Symfony version installed ??\n. @javiereguiluz I think that is related with choices_as_values option for 2.7+. Right now I haven't time to test it. Basically you need to do is a array_flip to $options['choices'] option (here and here)\n. I don't see an easy way to do this, what you can do is create your own EntityType and add the options parameter to the function call_user_func when query_builder option is being normalized (Source).\n``` php\n$queryBuilderNormalizer = function (Options $options, $queryBuilder) {\n    if (is_callable($queryBuilder)) {\n        $queryBuilder = call_user_func(\n            $queryBuilder, $options['em']->getRepository($options['class']), $options\n        );\n    if (null !== $queryBuilder && !$queryBuilder instanceof QueryBuilder) {\n        throw new UnexpectedTypeException($queryBuilder, 'Doctrine\\ORM\\QueryBuilder');\n    }\n}\n\nreturn $queryBuilder;\n\n};\n```\nEDIT:\nLater, your static function looks like this:\nphp\nClass Foo\n{\n    public static function bar(EntityRepository $repository, Options $options)\n    {\n        // return a QueryBuilder instance.\n    }\n}\nCheers.\n. @pomporov well, maybe you can create a custom EasyAdmin TypeConfigurator for you app:\n``` php\nclass MyEntityTypeConfigurator implements TypeConfiguratorInterface\n{\n    public function configure($name, array $options, array $metadata, FormConfigInterface $parentConfig)\n    {\n        if (isset($options['query_builder']) && is_callable($options['query_builder'])) {\n            $options['query_builder'] = call_user_func(\n                $options['query_builder'], \n                $options['em']->getRepository($options['class']), \n                $options // <---- type_options\n            );\n        }\n    return $options;\n}\n\npublic function supports($type, array $options, array $metadata)\n{\n    return 'entity' === $type && 'association' === $metadata['type'];\n}\n\n}\n```\nThis class will need to be registered as service with easyadmin.form.type.configurator tag and priority less than -20.\n. @pomporov an example using form extension:\n``` php\nclass EntityTypeExtension extends AbstractTypeExtension\n{\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults(array(\n            'query_builder_options' => array(), // <-- custom option for this feature.\n        ));\n    $normalizer = function (Options $options, $queryBuilder) {\n        if (is_callable($queryBuilder)) {\n            $queryBuilder = call_user_func(\n                $queryBuilder,\n                $options['em']->getRepository($options['class']),\n                $options // <-- type_options\n            );\n        }\n\n        return $queryBuilder;\n    };\n\n    $resolver->setNormalizer('query_builder', $normalizer);\n}\n\npublic function getExtendedType()\n{\n    return EntityType::class;\n}\n\n}\n```\nyaml\nservices:\n    app.form.extension.entity:\n        class: AppBundle\\Form\\Extension\\EntityTypeExtension\n        tags:\n            - { name: form.type_extension, extended_type: Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType }\n. @pomporov you can use query_builder_options to pass all static values that you need in you query builder method https://github.com/javiereguiluz/EasyAdminBundle/issues/1158#issuecomment-218208259, because in form type extensions there isn't access to parent form.\n. @pomporov you can use query_builder_options to pass all static values that you need in you query builder method https://github.com/javiereguiluz/EasyAdminBundle/issues/1158#issuecomment-218208259, because in form type extensions there isn't access to parent form.\n. I have tried to reproduce this bug locally, but all tests has been passed successfully. :disappointed: \n. https://github.com/javiereguiluz/EasyAdminBundle/pull/883#issuecomment-190855427 here is an example using kernel.controller listener\n. :+1: LGTM and congratulations for the 1,000 stars! :tada:\n. Updated: Following the @ogizanagi's comments :+1: I think that is much better remaining the common form options into form type. Plus, was solved false|default(...) issue for empty label.\n. Updated: By default all options for compound form is passed to the autocomplete form child, BUT, when the label is empty we need settings the label for autocomplete form child, otherwise will be displayed \"autocomplete\" label value.\n. Updated: I try to follows the ready-witted @ogizanagi's comments:\n1. Not alter the FormView data (Done)\n2. Allow to override the behavior by replacing the form_label block in a custom template/form theme (when autocomplete label is null this change to parent form's name, so for form_label block this work as a custom label text)\n3. Avoid edge cases or forget about some particular behaviors present in default form themes (same point 2.)\n. After an exhaustive test I think all the premises aren't satisfied, so I've implemented the @ogizanagi's solution. :+1:  Thanks!!!\n. @JuanWilde alternatively you can use this bundle to arrange fields for dynamic form types. https://github.com/egeloen/ivory-ordered-form/blob/master/doc/usage.md#position\nHowever, these fields that already exists you don't need removed, these keeps the old position (in children array) and the type and options are changed only.\n. For instance:\nphp\n$form->add('name', TextType::class);\n$form->add('age', NumberType::class);\n//...\n$form->add('name', TextType::class, ['label' => 'First Name']);\nthe results is always two fields: first name with label: \"First Name\" and second age.\n. I'm proposing some improvements in this direction https://github.com/EasyCorp/EasyAdminBundle/pull/2607, see also an example of how to deal with DTO today (thanks to https://github.com/EasyCorp/EasyAdminBundle/pull/1679). https://github.com/yceruto/easyadmin-demo/tree/dto_example (for simplification see https://github.com/EasyCorp/EasyAdminBundle/pull/2607/files#diff-37ca789fce251658de9c7b5491c3247b after the proposed changes.. @Pablossoo you've tried the query_builder options to filter this choices ?\n. Maybe can help you https://github.com/javiereguiluz/EasyAdminBundle/issues/1145\n. https://github.com/javiereguiluz/EasyAdminBundle/issues/947#issuecomment-197395006\n. https://github.com/javiereguiluz/EasyAdminBundle/issues/947#issuecomment-197395006\n. @Pablossoo fix that (missing { ... }):\nyml\n- { property: 'category', type_options: { query_builder: 'FitnesBundle\\Repository\\CategoryRepository::available' } }\n. @Pablossoo fix that (missing { ... }):\nyml\n- { property: 'category', type_options: { query_builder: 'FitnesBundle\\Repository\\CategoryRepository::available' } }\n. You can access to %security.role_hierarchy.roles% container parameter to get the roles hierarchy defined inside your security.yml file and build a valid choices value:\n``` php\n$hierarchy = $this->container->getParameter('security.role_hierarchy.roles');\n// transform the role hierarchy in a single unique list\n$roles = array();\narray_walk_recursive($hierarchy, function($role) use (&$roles) {\n    $roles[$role] = $role;\n});\n// now $roles is ready for \"choices\" option to the ChoiceType\n```\nI suggest you creating a custom form type for that (maybe named 'role_choice_type'), extends from 'choices' form type and pass the $roles to choices option. \nSo, you roles field configuration will look like this:\n``` yml\n...\n- { property: 'roles', type_options: { type: 'role_choice_type' } }\n\n```\nI've not tried yet, I hope it works for you, \nCheers\n. Related with https://github.com/javiereguiluz/EasyAdminBundle/issues/1182\n. Hi, \n@ogizanagi I like the option 3 and IMHO is a good option to resolve this issue in edit and show action, but doesn't resolve this issue for list action, so the end user must be repeat the same logic in create<Entity>ListQueryBuilder method for add the related associations.\nPerhaps I can help to this request with another option https://github.com/javiereguiluz/EasyAdminBundle/issues/1004, but applied to edit, show and maybe any action too.\nTo do that, we need replace the find() statement for query builder statement and find a way to handle the $queryBuilder instance into some \"method\" and add more DQL parts if needed (maybe the easyadmin.query_builder service can take care of that).\nThis \"method\" could be:\n(1) An event (with priorities) \n(2) EasyAdmin extension (NEW, service with Tag/CompilerPass that extends all configuration methods such as create<Entity>QueryBuilder or get<EntityName>EntityFormOptions)\nThe original statement can come from the actions list, edit or show, in any case what we need is add more selects/joins DQL statement to solve this.\nWDYT?\n. Hi, \n@ogizanagi I like the option 3 and IMHO is a good option to resolve this issue in edit and show action, but doesn't resolve this issue for list action, so the end user must be repeat the same logic in create<Entity>ListQueryBuilder method for add the related associations.\nPerhaps I can help to this request with another option https://github.com/javiereguiluz/EasyAdminBundle/issues/1004, but applied to edit, show and maybe any action too.\nTo do that, we need replace the find() statement for query builder statement and find a way to handle the $queryBuilder instance into some \"method\" and add more DQL parts if needed (maybe the easyadmin.query_builder service can take care of that).\nThis \"method\" could be:\n(1) An event (with priorities) \n(2) EasyAdmin extension (NEW, service with Tag/CompilerPass that extends all configuration methods such as create<Entity>QueryBuilder or get<EntityName>EntityFormOptions)\nThe original statement can come from the actions list, edit or show, in any case what we need is add more selects/joins DQL statement to solve this.\nWDYT?\n. https://github.com/javiereguiluz/EasyAdminBundle/issues/1265#issuecomment-238154272 :+1: for @ogizanagi's proposal \n. https://github.com/javiereguiluz/EasyAdminBundle/issues/1265#issuecomment-238154272 :+1: for @ogizanagi's proposal \n. However, the target of these chains data provider in api-platform is return the result of the first able to handle the resource class, if I understood well your proposal then:\n- this would be the same behavior for EasyAdmin data providers ?\n- if two data providers handling the same resource class, how I guarantee that my data provider is executed?\n- if I just want to add more parties to the query, I would have to make the paginated process too?\n. However, the target of these chains data provider in api-platform is return the result of the first able to handle the resource class, if I understood well your proposal then:\n- this would be the same behavior for EasyAdmin data providers ?\n- if two data providers handling the same resource class, how I guarantee that my data provider is executed?\n- if I just want to add more parties to the query, I would have to make the paginated process too?\n. Then, the data source is responsibility from data providers (ORM, ODM, ...) and the result process should be responsibility of several extensions associated to data provider:\nFor example, if we wanted to perform the search action (ORM), this would pass by three extensions:\n1- build the basic query to list the results of the given resource class (for list, search, autocomplete actions).\n2- add where statements to query given the term/id (for search, autocomplete, edit, show, delete actions).\n3- paginate the result (for list, search, autocomplete actions).\n(Now, if we wanted to display the list only, execute extensions 1 and 3)\nI see this as one extension that subscribe to some actions and they are executed in a logical order. In this way, we could add an intermediate extension without making the whole process.\nLGTM.\n\nThe only thing that is a shame is that it will require a lot of duplication from the api-platform/api-core repository. I don't know if it'll be pertinent to extract those abstraction layers & bridges in some new packages nor if it's possible (the ORM implementation relies on api-platform custom metadata).\n\nI think that @javiereguiluz is the most appropriate to give this answer and approve this big feature too :)\n. Then, the data source is responsibility from data providers (ORM, ODM, ...) and the result process should be responsibility of several extensions associated to data provider:\nFor example, if we wanted to perform the search action (ORM), this would pass by three extensions:\n1- build the basic query to list the results of the given resource class (for list, search, autocomplete actions).\n2- add where statements to query given the term/id (for search, autocomplete, edit, show, delete actions).\n3- paginate the result (for list, search, autocomplete actions).\n(Now, if we wanted to display the list only, execute extensions 1 and 3)\nI see this as one extension that subscribe to some actions and they are executed in a logical order. In this way, we could add an intermediate extension without making the whole process.\nLGTM.\n\nThe only thing that is a shame is that it will require a lot of duplication from the api-platform/api-core repository. I don't know if it'll be pertinent to extract those abstraction layers & bridges in some new packages nor if it's possible (the ORM implementation relies on api-platform custom metadata).\n\nI think that @javiereguiluz is the most appropriate to give this answer and approve this big feature too :)\n. Maybe the best approach for this is to use the getEntityFormOptions or getVoucherBatchEntityFormOptions method in a custom controller.\n. I'll look inside later to see what I can do. Thanks for reporting this issue!\n. I just fixed the bug, however you needs to use a FQCN for class option in this case:\n$builder\n    ->add('coordinatesFRCity', EasyAdminAutocompleteType::class, array(\n        'class' => CoordinatesFRCity::class, //or FBN\\GuideBundle\\Entity\\CoordinatesFRCity\n    );\nPlease, try again :)\n. > Do you think it could be useful to improve the documentation to precise that, in case of use in embedded form:\n:+1: \n\nit's mandatory that the entity related to the autocomplete field has to be managed by EasyAdmin\n\nYes, it's required for EasyAdmin backends, because autocomplete find method use the same Finder service that search action, to findByAllProperties and it use the entity configuration for search the query term.\n\nfor that entity, the FQCN has to be used\n\nFor the moment let's say yes, but it's not required by EasyAdminAutocompleteType itself but   'data_class' form option normalized in EasyAdminFormType, BTW currently you cannot use short entity name for easy_admin entity configuration because that ;)\n. > Do you think it could be useful to improve the documentation to precise that, in case of use in embedded form:\n:+1: \n\nit's mandatory that the entity related to the autocomplete field has to be managed by EasyAdmin\n\nYes, it's required for EasyAdmin backends, because autocomplete find method use the same Finder service that search action, to findByAllProperties and it use the entity configuration for search the query term.\n\nfor that entity, the FQCN has to be used\n\nFor the moment let's say yes, but it's not required by EasyAdminAutocompleteType itself but   'data_class' form option normalized in EasyAdminFormType, BTW currently you cannot use short entity name for easy_admin entity configuration because that ;)\n. Updated with minor refactor/improvement\n. Updated with minor refactor/improvement\n. @javiereguiluz any problem about this PR?\n. @javiereguiluz any problem about this PR?\n. We could implement these options here ?\n. We could implement these options here ?\n. Hi @ogizanagi:\n\nWe should probably allow to access and tweak the sub EntityType field options of the autocomplete field (and thus replace the method used to render the entity).\n\nSadly, that would have no effect in <select> widget, because the <option>s are created dynamically by select2 plugin given this response.\nLGTM :+1:  This one avoids Autocomplete ajax errors for requests where the target entity don't have __toString() method.\n. >  I'd like to only display users belonging to a specific organisation in the dropdown\nTake a look into https://github.com/javiereguiluz/EasyAdminBundle/issues/1145, this resolves your issue?. LGTM :+1:. Try with array notation ['Bundle\\Repository\\EasyAdmin\\SomeRepo', 'getAccessible'] ? (use single quote). @javiereguiluz probably the docs needs to be updated as passing a callable string syntax is feasible for query_builder option (see source):\nThis is working for me now (EA=1.17, SF=3.3.10):\nyaml\n... type: 'entity', type_options: { query_builder: 'Full\\Qualified\\ClassName::pubStaticFunc' } ...\n. @javiereguiluz probably the docs needs to be updated as passing a callable string syntax is feasible for query_builder option (see source):\nThis is working for me now (EA=1.17, SF=3.3.10):\nyaml\n... type: 'entity', type_options: { query_builder: 'Full\\Qualified\\ClassName::pubStaticFunc' } ...\n. See https://github.com/symfony/symfony-docs/pull/8527. See https://github.com/symfony/symfony-docs/pull/8527. Require merges https://github.com/javiereguiluz/EasyAdminBundle/pull/1419 then everything will be in green. Why not one PR (ALL IN ONE)? :). @ymarillet thanks you for reporting this issue. Please, could you test if these changes (https://github.com/javiereguiluz/EasyAdminBundle/pull/1441) solve the problem?. That's a weird bug, translation_domain is provided by entity/backend configuration and passed to _delete_form.html.twig template from the list template:\nYou have overwritten the list template too? i.e. easyadmin-bundle/Resources/views/default/list.html.twig ?. Well, you need to pass the missed _translation_domain to this template, like the original code:\ntwig\n{{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {\n     view: 'list',\n     referer: referer|url_encode,\n     delete_form: delete_form_template,\n     _translation_domain: _entity_config.translation_domain,\n     _trans_parameters: _trans_parameters,\n     _entity_config: _entity_config,\n}, with_context = false) }}. We need to make sure this bug https://github.com/javiereguiluz/EasyAdminBundle/issues/1011 doesn't happen again :/ ?. We need to make sure this bug https://github.com/javiereguiluz/EasyAdminBundle/issues/1011 doesn't happen again :/ ?. Although I think that at that time the problem was for the second parameter, which is true by default.. Although I think that at that time the problem was for the second parameter, which is true by default.. @mikeelltt, @shinework could you show us the code where you're initialize select2 manually on that select?. You can use createAutoCompleteFields() function instead? this solve your problem?\n$('.field-collection').on('easyadmin.collection.item-added', function() {\n    createAutoCompleteFields();\n});\nI know that it does not make the best approach, but we would change this function for better reusability/runtime initialization of dynamic autocomplete fields (i.e. createAutoCompleteFields($input)).. https://github.com/javiereguiluz/EasyAdminBundle/pull/1536 improving this initialization... . Tests fails related to https://github.com/javiereguiluz/EasyAdminBundle/pull/1537. (rebased)\n@javiereguiluz What do you think about this proposal? I've planned to complete this PR if you approve.. (rebased)\n@javiereguiluz What do you think about this proposal? I've planned to complete this PR if you approve.. We can close it and work on it for the next major version if really needed, this just provide a shortcut function to initialize dynamic autocomplete widgets.. I don't understand the problem very well:\n\nI need to leave empty the related field, which is a non-nullable field.\n\nThis no makes sense to me... is there a contradiction?\n\nthe validation message is correctly trigerred but there are two forms errors\n\nIs that the problem that you're pointed?\n. @matudelatower For 2.7 you need to use the form type name instead of its FQCN.. @matudelatower \nyaml\n... { by_reference: true, type: CRMBundle\\Form\\EncuestaOpcionRespuestaType }\nshouldn't work for 2.7 instead you should use the form type name, something like:\nyaml\n{ by_reference: true, type: 'encuesta_opcion_respuesta' }\ncheck the getName() method inside your form type.\n. @matudelatower the official documentation says type for CollectionType in 2.7 (http://symfony.com/doc/2.7/reference/forms/types/collection.html#type) so it should work well and this is the field type for each item in this collection (e.g. text, choice, etc).\nIn the issue description you're posted the right type option for 2.7 but the wrong type value for 2.7 form type definition, so please, show us why it doesn't work for you?\n. Can you show us the getName() method from CRMBundle\\Form\\EncuestaOpcionRespuestaType form type?. @matudelatower do you have created the service/tag for this form type?. > No, but I do not think it's necessary, in 2.8 it works without problems\n@matudelatower You have tagged this issue to Symfony: 2.7.18, so it's mandatory AFAIK. I don't understand your comment.. If this default value is static, you can set it into property directly:\nprivate $filename = 'default-template.html';\nor in you __contructor() method.. The empty_data is not about initial/default value in view layer, but in model layer when the form field value is empty upon submission (http://symfony.com/doc/current/reference/forms/types/form.html#empty-data):\n\nThis will still render an empty text box, but upon submission the John Doe value will be set. Use the data or placeholder options to show this initial value in the rendered form.\n\nBut still by using data option is no good, because (http://symfony.com/doc/current/reference/forms/types/form.html#data):\n\nThe data option always overrides the value taken from the domain data (object) when rendering. This means the object value is also overriden when the form edits an already persisted object, causing it to lose it's persisted value when the form is submitted.\n\nSo the recomendation is to set explicitly the data in the underlined object on initialization, either in __constructor() or before bind the object to the form.\nhttp://symfony.com/doc/current/components/form.html#setting-default-values\nEDIT: Also, I would keep the empty_data if I need to ensure a value for this field, since the initial value can be removed by the user.. Maybe createNew<EntityName>Entity() method is a good place to do that.\nFor example:\n```php\nprotected function createNewUserEntity()\n{\n    $user = new User();\n    // Settings initial info\n    $user->setCompany($this->findDefaultCompanyFromDB());\n    $user->setRoles(array('ROLE_ADMIN'));\n    // ...\nreturn $user;\n\n}\n```. > If there any way to filter the results of the autocomplete action?\nNot yet, but likely it would be a nice feature to implement :)\n. However, you can always override the autocompleteAction() and add your custom logic:\n```php\n    protected function autocompleteAction()\n    {\n        if ('Lugar' === $this->request->query->get('entity')) {\n            $results = // make custom query and see Autocomplete class to know how to parse the results.\n        return new JsonResponse($results);\n    }\n\n    return parent::autocompleteAction();\n}\n\n``. @javiereguiluz could be nice make public theAutocomplete::processResults()method for these cases, it helps to build the expected result for select2 widget.. @blackatze93 great!$dqlFiltershould be there in core bundle by default, later we could add this option toEasyAdminAutocompleteType` too and use it as query parameter into autocomplete action.\nThis would make this configuration happy, something like this:\nyaml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            form:\n                fields:\n                    - { property: 'category', type: 'easyadmin_autocomplete', type_options: { dql_filter: 'entity.enabled = true' } }\n                    # ...\n    # .... Take a look at this proposal https://github.com/EasyCorp/EasyAdminBundle/pull/2598 adding the sort and dql_filter options for autocomplete results, any feedback is welcomed :). Take a look at this proposal https://github.com/EasyCorp/EasyAdminBundle/pull/2598 adding the sort and dql_filter options for autocomplete results, any feedback is welcomed :). My 5c :)\n\nI would make a PreResponse class with template, parameters properties.\nindexAction would accept Response or PreResponse instances (PreResponse will be converted to Response by using render()).\nlistAction & Co. would return a PreResponse object.\n\nThus will be possible to change the template and their parameters within overrridden actions without copy+paste the entire parent action method.. ... this class could named PreTemplateResponse or just TemplateResponse because it will be used only for render templates, other responses such as RedirectResponse will be returned as is, due you can change it already through setTargetUrl() method.. Yeap, the type_options.entry_type option from CollectionType is not managed by EasyAdminBundle currently, so you need to set the FQCN ('Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType').\nHowever I think will be worth convert the collection entry type as well.\n. @hason Take a look at this http://symfony.com/doc/current/templating/namespaced_paths.html#registering-your-own-namespaces. Now after this https://github.com/javiereguiluz/EasyAdminBundle/commit/3d83921a2f106d23423437014b6c8349851b760e is possible to modify the main template directory overriding the %easyadmin.templates_dir% parameter.\n. Even though there is a workaround out-of-the-box in play for all bundles https://stackoverflow.com/a/45220468/4224384 ;). See proposal #1876 to fix it.. @grachevko it's a privileges of @javiereguiluz exclusively as owner of this bundle. From my experience, Javier likes to first discuss the idea, approve it and then, if it is accepted, implement it. But I am sure he will analyze your proposal as soon as possible ;) He has a great plan for this bundle https://github.com/javiereguiluz/EasyAdminBundle/projects/1 may have some priorities.. > But when i submit my form and debug it, i receive the path \"birthdate\" as null in the controller.\nHow can i fix it to receive the attribute properly?\nform:input <-- typo?\nhtml\n<input type=\"text\" name=\"birthdate\" value=\"1984-01-23\" ... />\nThe input form should have the name attribute (at least) to submit it correctly.. > But when i submit my form and debug it, i receive the path \"birthdate\" as null in the controller.\nHow can i fix it to receive the attribute properly?\nform:input <-- typo?\nhtml\n<input type=\"text\" name=\"birthdate\" value=\"1984-01-23\" ... />\nThe input form should have the name attribute (at least) to submit it correctly.. Yep, there is not way to know what entity configuration do you want with only an entity class, so you should use ConfigManager::getEntityConfig() for these cases, where you must pass the unique entity name instead.. What version of this bundle do you installed?. Travis failure unrelated.\n@javiereguiluz I don't remember how to build the easyadmin-all.min.js file... ??. A big :+1: to implement some built-in solution (this doesn't have to be perfect)... but really we need it today!!\n\nFor years, it has been proven that people need this feature, so why isn't it implemented yet, when the different implementation proposals are very simple?\n\nCould you try? :) Also we need think about security for menus, actions... and maybe other things.. When you need a little more complexity e.g. using authenticated user or any other dynamic parameter you can do the follows:\nyaml\neasy_admin:\n    entities:\n        Reports:\n            class: AppBundle\\Entity\\Report\n            list:\n                dql_filter: 'entity.user = :user'\nThen we must use one of these alternatives to complete the query by $qb->setParameter('user', $value):\n- Create the createReportListQueryBuilder method.\n- Overwrite the createListQueryBuilder method.\n- Listen from EasyAdminEvents::POST_LIST_QUERY_BUILDER event.. When you need a little more complexity e.g. using authenticated user or any other dynamic parameter you can do the follows:\nyaml\neasy_admin:\n    entities:\n        Reports:\n            class: AppBundle\\Entity\\Report\n            list:\n                dql_filter: 'entity.user = :user'\nThen we must use one of these alternatives to complete the query by $qb->setParameter('user', $value):\n- Create the createReportListQueryBuilder method.\n- Overwrite the createListQueryBuilder method.\n- Listen from EasyAdminEvents::POST_LIST_QUERY_BUILDER event.. I use this approach to customize some fields quickly and work fine:\nyaml\neasy_admin:\n    design:\n        form_theme:\n            - 'horizontal'\n            - 'form/fields.html.twig' # or add it to twig form_theme configuration for global use\n    entities:\n        Fiddle:\n            class: App\\Entity\\Fiddle\n            form:\n                fields:\n                    - { property: title, type_options: { block_name: 'custom_title' } }\n                    # ...\ntwig\n{# form/fields.html.twig #}\n{% block _fiddle_custom_title_widget %}\n    Customized!\n{% endblock %}. What about to use only the standard (native) overriding templates mechanism?\nFor example, installing a fresh EasyAdminBundle with the next configuration:\nyaml\neasy_admin:\n    entities:\n        - AppBundle\\Entity\\User\nI want to customize the User list template just creating the path convention: \napp/Resources/EasyAdminBundle/views/User/list.html.twig\nLater with nothing more the bundle should be able to load@EasyAdmin/User/list.html.twig template for User/list action and so on.\nTo achieve it, the next template paths should be enough to cover all cases:\n * @EasyAdmin/<entityName>/<templateName>.html.twig (set only if exists else use default template)\n * @EasyAdmin/default/<templateName>.html.twig\nAlso, instead of hardcode the easy_admin directory (AFAIR workaround to well known issue https://github.com/symfony/symfony/issues/17557) you can add a second Twig's namespace automatically for EasyAdminBundle/Resources/views e.g. '!EasyAdmin' as you're suggested.\nWhy?\nLess paths to do the same => less issues, less options to document & remember, less steps, less code to maintain, bundle-less methods in favor of native methods.\nWDYT? Thanks!. Sorry, try with twig.loader.filesystem instead, it's available since 2.3, twig.loader.native_filesystem is a new alias.. I've checked in 3.3.6 and twig.loader.filesystem is still available. Try:\nbash\n $ bin/console debug:container twig.loader.filesystem. Maybe a typo in https://github.com/javiereguiluz/EasyAdminBundle/commit/f2a8270d7dac703a8a213b31429ec64dd97d57f9 (id=\"twig.loader\" => id=\"twig.loader.filesystem\"). :crossed_fingers: . > We're \"abusing\" the native mechanism because we're overriding templates that don't exist (because they include the EntityName in their paths) and that doesn't work in the default Symfony.\nI don't understand what do you mean really, but it's just as works the current path convention for app/Resources/views/easy_admin/<entityName>/<templateName>, my proposal is deprecate it and move this convention to app/Resources/EasyAdminBundle/views/<entityName>/<templateName> nothing more. Thus, we're using the native mechanism of Symfony to override templates.\n\n... we're overriding templates that don't exist\n\nWhat template doesn't exists? :/\n\nWe lose the ability of defining a template to override that same template in all entities.\n\nI'm not sure what case is it, you're refering to default templates? it'll be possible in the same way that now.\n\nIf there would be problems with overriding the default templates and extending from them. It's a well-known Symfony issue.\n\nNo problem anymore, this issue can be resolved adding a second Twig's namespace for views path of the bundle: https://github.com/symfony/symfony/issues/17557#issuecomment-313555650. So instead of say: \"you should to create this namespace manually and then ...\", my proposal is add it automatically and say \"you should use this another namespace !EasyAdmin...\" to override templates and extending from them. Tecnically this:\nyaml\ntwig:\n    paths:\n        vendor/javiereguiluz/easyadmin-bundle/Resources/views: !EasyAdmin\nthen in app/Resources/EasyAdminBundle/views/default/layout.html.twig:\n```twig\n{% extends '@!EasyAdmin/default/layout.html.twig' %}\n```\nMore info about which is the source of the issue here https://stackoverflow.com/questions/45220467/how-can-i-override-partially-a-third-party-template\n\nMy intention is make the overriding template mechanism of the bundle like native. Currently, \"without configuration\" we can override any template from any bundle, only we need make the path convention: %kernel.root_dir%/Resources/<bundleName>/views/<templateName>. With that, we can override all default templates in EasyAdminBundle too.\nSo it implies that easy_admin.design.templates.<templateName> config option is useless and app/Resources/views/easy_admin/<templateName>.html.twig path convention too. \nIf you want a different place to override these templates then use Twig's paths:\nyaml\ntwig:\n    paths:\n        # syntax <relative or realpath> : <bundle namespace>\n        custom/path: EasyAdmin\nand it's enough to override any default template from another location (custom/path/default/layout.html.twig). The possibilities are unlimited with Twig's paths.\nNow, how can I override a template from one entity? (Currently)\n * with configuration: Creates the template file anywhere, then use easy_admin.entities.<entityName>.templates.<templateName> config option\n * with convention: Creates the template file in app/Resources/views/easy_admin/<entityName>/<templateName>.html.twig (path convention of the bundle)\nIn this case the convention wins (one step less), but you need a new dir easy_admin as convention and mixed with the app templates dirs. It's why I proposed move it to app/Resources/EasyAdminBundle/views/<entityName>/<templateName>.html.twig as well-known native convention. It works as before, still more clear, all my templates are in one place and all them will be named as @EasyAdmin/...html.twig.\nI hope it help!. > I know that @yceruto has made something to fix or improve this ... but I don't know the details.\nIn the next release of twig an exception should be thrown on circular template reference https://github.com/twigphp/Twig/pull/2530 :). AFAIK, the autocomplete type does not use that option, so maybe you've some type extension in your application that modify this?. ATM the autocomplete service use the same configuration that search action, so you could configure the only fields that will be used in the autocomplete query here:\n```yaml\napp/config/config.yml\neasy_admin:\n    entities:\n        City:\n            class: AppBundle\\Entity\\Geolocal\\Types\\City\n            search:\n                fields: { ... }\n```\nI know that it can be improved and maybe add a new option to allow search by different fields in the same entity could be necessary.. Hello, fabien, thanks for report this bug and it is already fixed in https://github.com/javiereguiluz/EasyAdminBundle/commit/dd10316d9c3bcb305db13a9de033b6d6e0482ff9 which should be part of the next release.\nMeanwhile, as workaround, you can do the same changes in your project by overriding the form layout template.\n. In Symfony 4 does not exists @App Twig namespace (by default), we don't have AppBundle. It should be now relative to the root templates/ directory instead: \nyaml\neasy_admin:\n    design:\n        templates:\n            layout: 'layout.html.twig' # templates/layout.html.twig\nHowever, you have a native TwigBundle convention here (out-of-the-box) without extra configuration:\ntemplates/bundles/EasyAdminBundle/default/layout.html.twig. In Symfony 4 does not exists @App Twig namespace (by default), we don't have AppBundle. It should be now relative to the root templates/ directory instead: \nyaml\neasy_admin:\n    design:\n        templates:\n            layout: 'layout.html.twig' # templates/layout.html.twig\nHowever, you have a native TwigBundle convention here (out-of-the-box) without extra configuration:\ntemplates/bundles/EasyAdminBundle/default/layout.html.twig. Hi @bocharsky-bw\nI see two ways to do that:\n1. Extending from EasyAdminFormType by passing the required options:\n```php\n// ProjectType:\npublic function getParent()\n{\n    return EasyAdminFormType::class;\n}\n// ProjectController:\nreturn $this->createForm(ProjectType::class, $entity, [\n    'entity' => 'Project',\n    'view' => 'edit',\n]]);\n2. Adding `easyadmin` as block prefix on `buildView()`:php\npublic function buildView(FormView $view, FormInterface $form, array $options)\n{\n    $view->vars['block_prefixes'][] = 'easyadmin';\n    $view->vars['easyadmin_form_groups'] = null;\n}\n```\nI bet on option 1, it seems more legitimate to me, even though I've not tried it yet, so let me know if it work for you.\nCheers!. Hi @bocharsky-bw\nI see two ways to do that:\n1. Extending from EasyAdminFormType by passing the required options:\n```php\n// ProjectType:\npublic function getParent()\n{\n    return EasyAdminFormType::class;\n}\n// ProjectController:\nreturn $this->createForm(ProjectType::class, $entity, [\n    'entity' => 'Project',\n    'view' => 'edit',\n]]);\n2. Adding `easyadmin` as block prefix on `buildView()`:php\npublic function buildView(FormView $view, FormInterface $form, array $options)\n{\n    $view->vars['block_prefixes'][] = 'easyadmin';\n    $view->vars['easyadmin_form_groups'] = null;\n}\n```\nI bet on option 1, it seems more legitimate to me, even though I've not tried it yet, so let me know if it work for you.\nCheers!. I can't reproduce the issue, but other approach could be overriding this template to the conventional way, put the new file in:\n * app/Resources/EasyAdminBundle/views/default/layout.html.twig (Before Sf4) or\n * templates/bundles/EasyAdminBundle/default/layout.html.twig (After Sf4)\n. That's good news! I'll be happy to help and because soon we'll reach the 2000 stars. Good luck for 2.x!. There is a public property  Doctrine\\ORM\\Mapping\\ClassMetadataInfo::$embeddedClasses with the names of all embedded classes based on properties. Otherwise you could check by Doctrine\\ORM\\Mapping\\ClassMetadataInfo::$associationMappings to make sure it's an association field.. Will be good do the same for autocomplete widget, right?. step 3 of https://github.com/EasyCorp/EasyAdminBundle/blob/master/.github/RELEASE_CHECKLIST.md. > New window looks ugly. Have you considered using a modal?\n@grachevko Yeah I know it is primitive and I'm completely sure we can improve it, but by now should be enough to introduce the feature with less efforts. \nEdit: Btw I'm not sure how it look with modal and big forms.... I'll prepare a demo project based on https://github.com/javiereguiluz/easy-admin-demo to show this feature, meanwhile this is ready for more reviews.\n@ogizanagi maybe are you interested in taking a look, thanks.\n. Demo ready into https://github.com/yceruto/easy-admin-demo/tree/symfony4_new_edit_entity_propup branch.. I did some tests with bootstrap modal and I found some drawbacks respect to window popup, e.g.:\n * we can't move, minimize or resize it,\n * the initial modal size can be too small or too big according to the form, so might be needed a new size option to fit it,\n * when openning the modal we can't see the another ones without close it,\n * it requires a new request/response behaviour across AJAX in templates and controllers,\nSo I hope it is not a requirement. (gif updated). @grachevko I mean let's keep this as simple as possible by now => easy to review => fast merge, later (in another PR) we can change to bootstrap modals and add more details to improve the view based on this. I'm +1 for modals, looks better, but would complicate the things right now.. @javiereguiluz have you tried this https://github.com/yceruto/easy-admin-demo/tree/symfony4_new_edit_entity_propup? What do you think?. Yeah, I'd like to use modal too, I'll do a modal version in another PR.. This is outdated and probably need a whole refactor, so closing by now.\nI'll try to re-create it based on 2.x theme with modal approach next time.\nComing soon.... > Wouldn't it make sense for EasyAdminAutocompleteType to support the same options that Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType provides? Like why is choice_attr option not supported?\n@va5ja the cause of that comes from the fact AutocompleteEasyAdminType wrap an EntityType and it expose the functional options only. e.g. class option.\nchoice_attr wouldn't work because each option is generated dynamically via Javascript/async, at that moment we haven't control over PHP-Twig nor form themes templates.\nStill rendering each html option in server side ( AdminController::autocompleteAction() ) we wouldn't know how to call to choice_attr closure function defined in your form builder, unless we store some kind of autocomplete-config in session.\nPerhaps @ogizanagi has a better idea?. Still there is another issue related to this initialization:\n * For custom forms (out of the box) the select2 plugin doesn't init either and one expect that inside EasyAdmin scope it should work.\nThis is due the auto-configuration $options['attr']['data-widget'] = 'select2' only work for fields in EasyAdminFormType, maybe we can do this for all EntityType through a type extension.. Try with src/Resources/EasyAdminBundle/views/css/easyadmin.css.twig or templates/bundles/EasyAdminBundle/css/easyadmin.css.twig.. I don't think so, at least not wihtout EasyAdminBundle loaded. It requieres the ConfigManager service to configure the end point to load data. But I'm planning to decouple it soon (into a library with bridges or adapters) to make it possible.. Maybe related to https://github.com/EasyCorp/EasyAdminBundle/issues/2261. AFAIK @App/Resources/views/easy_admin/show.html.twig is not a valid path for src/Resources/views/easy_admin/show.html.twig file and it's not normalized to @App/easy_admin/show.html.twig somewhere.\nCould you show us where this normalization occurs exactly? Thanks.. Maybe related to this fix https://github.com/EasyCorp/EasyAdminBundle/pull/2262 (not merged yet). I think EasyAdmin is currently capable of supporting the DTO approach. See example https://github.com/yceruto/easyadmin-demo/tree/dto_example, I've commented the code and spotted some enhancements needed to make it completely happy (I'll send the PR), but in general I think this feature is currently supported.\n@Pierstoval thank you for working on this feature, anyway your approach is open to discussion, the implementation introduces a workflow that could be very useful.. I think this is a doc issue, really, such \"form\" template (Used to render the form displayed in the new and edit pages) doesn't exist.\n@Arkounay, however you can to customize your form rendering by using the form themes method.\nhttps://symfony.com/doc/current/form/form_themes.html#creating-a-form-theme-in-a-separate-template\nFor example, suppose that your form name is called product (usually it's the configured entity name):\n```yaml\nconfig/packages/twig.yaml\ntwig:\n    # ....\n    form_themes:\n        - 'form.html.twig'\ntwig\n{# templates/form.html.twig #}\n{% block _product_widget %}\n    {{ form_row(form.name) }}\n    {{ form_row(form.price) }}\n    {% ... %}\n{% endblock %}\n``\nIt'll work for your? thanks.. @reminec I think it's not related to this bundle, but Symfony and the templating layer. This syntaxAcmeBundle:default:list.html.twigshould work if your project has been correctly configured with the Templating component.. I think we should have both methodsgetExtendedTypes()andgetExtendedType()`, but the new method should have the code now, so the old one calls to the new one keeping BC prior to 4.2 and removing the deprecation warning since 4.2.\nI'm thinking in something like this:\n```php\npublic function getExtendedType(): string\n{\n    return current(self::getExtendedTypes());\n}\npublic static function getExtendedTypes(): iterable\n{\n    return [FormType::class];\n}\n``. This error is not related to this bundle and is expected even in PHP context:$formBuilder->add('route', '\\App\\Form\\RouteType')it'll fails too because the service id isApp\\Form\\RouteTypeand it doesn't match, hence the form system tries to initialize the form type (new $type()`) but the class requires a constructor argument.\nI think we can close here.. Closing as it's not an EasyAdmin bug, thanks!. OK, that's a really nice hack. However, in my opinion forcing users to type fa fa-globe instead of globe is good because it's explicit (no magic) at the same time you're flexible.\nClosing as solved, thanks for your quick response, cheers!. @javiereguiluz I think the missing service is related to the controller that you're testing as well, so the tagged service container.service_subscriber should also be in tests/Fixtures/App/config/config_override_controller.yml for OverridingEasyAdminController.. I'd suggest going back to the previous approach with AbstractController but fixing the test configuration instead. For example something like this should work:\n```yaml\ntests/Fixtures/App/config/config.yml\nservices:\n    _defaults:\n        autowire: true\n        autoconfigure: true\nlogger:\n    class: Psr\\Log\\NullLogger\n\nEasyCorp\\Bundle\\EasyAdminBundle\\Tests\\Fixtures\\AppTestBundle\\DataFixtures\\AppFixtures:\n    tags: ['doctrine.fixture.orm']\n\nEasyCorp\\Bundle\\EasyAdminBundle\\Configuration\\ConfigManager: '@easyadmin.config.manager'\nEasyCorp\\Bundle\\EasyAdminBundle\\Search\\QueryBuilder: '@easyadmin.query_builder'\nEasyCorp\\Bundle\\EasyAdminBundle\\Search\\Paginator: '@easyadmin.paginator'\nEasyCorp\\Bundle\\EasyAdminBundle\\Search\\Autocomplete: '@easyadmin.autocomplete'\n\nEasyCorp\\Bundle\\EasyAdminBundle\\Tests\\Fixtures\\AppTestBundle\\:\n    resource: '../../AppTestBundle/{Admin,Controller}'\n\nEasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController: ~\n\n`\nYou might need a little refactor to avoid duplicating this config for \n `tests/Fixtures/App/config/config_customized_backend.yml` e.g. creates a separated file named `services.yml` and import it in `config.yml` and `config_customized_backend.yml`.. I can take care of this, though I don't think making the controller as service could break something.. Yes, extending it from `AbstractController` will break the access to custom services, but that's a good plan anyway for this release. See continuation here https://github.com/EasyCorp/EasyAdminBundle/pull/2490. Well, I guess we can't get rid of this deprecation because <4.2 BC break.. That's correct, if you use a string that starts with@or  has%anywhere in it, you need to escape it by adding another@or%, otherwise you're refering to any container parameter (as usual,\nwrapping their names with%` characters).. There's other place into this config where this need to be fixed:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/d16f2e12b125aa8d807fae738db577810ffa3b70/src/DependencyInjection/Configuration.php#L106-L107. Fixing in https://github.com/EasyCorp/EasyAdminBundle/pull/2485. Yes, but thisAdminControllerhas only one \"real\" route/action ->indexAction(), hence the service argument feature withcontroller.service_arguments` tag doesn't make sense here. Probably the best migration path for these changes is option 2.. > Are we sure this is the way to go from a DX point of view? I'd expect the fact that we don't get the full container anymore will break lots of apps out there. [...]\n\nThe \"Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller\" class is deprecated\nsince Symfony 4.2, use AbstractController instead.\n\nIt'll happen anyway, whether is this the moment or not.. is the point. I think yes :) but with the proper deprecation in 1.x as you've suggested. Also it'll enable Symfony 5.0 compatibility in 2.x when the Controller class is gone. Otherwise, we need to do this in the next major release (3.x).\n\n[...] We currently miss a smooth upgrade path (e.g. a proper deprecation in 1.x). This feels like a bad experience for too many users to me.\nWould it be a viable solution to introduce a new controller class in 1.x instead that extends AbstractController and deprecate the old one instead?\n\nI agree, we forgot that and makes sense to me. My concern now is that we would have to duplicate the whole code in the new controller class... :thinking:... or create traits... thoughts?\n. That's mean we can start deprecating it as of 2.x and create the new controller here?. The proposed in last commit: Deprecating the AdminController as of 2.x using trait to avoid code duplication and then remove the AdminController definitely in 3.x. We've  a smooth upgrade path now with less maintenance cost.\nTests are using the new EasyAdminController class, so Controller deprecation is gone.. Description updated with the new approach.. I think EasyAdmin shouldn't take care about AJAX calls for standard actions, instead you could create a KernelEvents::RESPONSE  listener and extract/convert the RedirectResponse into JsonResponse with the extracted data that coming from $event->getRequest() and the result of EasyAdminEvents::POST_PERSIST to elaborate the correct data with the entity id, etc.\nIt'll also apply to any Response that was made through AJAX and requires a JsonResponse. So you're free to convey the exact response you need.. > In my case for instance, all I needed to change was this line (the response to be returned)... as a temporary workaround I copied & pasted the code from the bundle into my own and changed the response object...\n@mchojrin you could also override the redirectToReferrer() method and return the json response for new action (checking $this->request->query->get('action')) and the underlying entity instance is stored in $this->request->attributes->get('easyadmin')['item'] if you want get the new id.. Well, the form option under templates doesn't exist and the code tested by Javier is refering to template option under form.. You're welcome. Most of the time we don't need this label, but as @alterphp pointed it out we should make this change by config, maybe a form configurator or through a type extension to change its default to false?. This is what I've in mind to achieve it (not tested yet) according to Javier's idea:\n```php\nclass CollectionTypeExtension extends AbstractTypeExtension\n{\n    public function finishView(FormView $view, FormInterface $form, array $options)\n    {\n        if ($form->getConfig()->hasAttribute('prototype') && !$view->vars['prototype']->vars['compound'] && $options['prototype_name'].'label__' === $view->vars['prototype']->vars['label']) {\n            $view->vars['prototype']->vars['label'] = false;\n        }\n    foreach ($view->children as $child) {\n        if (!$child->vars['compound'] && null === $child->vars['label']) {\n            $child->vars['label'] = false;\n        }\n    }\n}\n\npublic static function getExtendedTypes()\n{\n    return [CollectionType::class];\n}\n\n}\n```. > If each element of the collection contains multiple widgets (imagine an AddressType with \"Address Line 1\", \"Address Line 2\", \"City\", \"Country\" and \"ZIP Code\") then show the labels.\nI don't remember well, but I believe numeric labels are displayed for this case too, in that case we should remove the ->vars['compound'] check from above code snippet.. @javiereguiluz Travis is throwing a bug about memory https://travis-ci.org/EasyCorp/EasyAdminBundle/jobs/467152005#L484\nIs this PR still relevant to you? Can we solve Travis' failure?. Should we also remove this code, right?\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/c1826e69d963fbc585c2a2449d7ea59d5181f8fb/assets/css/easyadmin-theme/forms.scss#L188-L190. Hi @YosraHamza, congratulations for your first contribution on this repository!\nThis also solves a compatibility problem with previous versions, could you rebase on master branch and resolve the pending conflicts? Thanks!. I like the new \"draggable border\" idea, but showing it all time not much, maybe show it on hover only?. I like the new \"draggable border\" idea, but showing it all time not much, maybe show it on hover only?. @carlotodeschini First you must obtain the current attributes/options, before changing them to keep the field and tab configuration. Try this:\n```php\n// ...\n$attributes = $formB->get('type')->getFormConfig()->getAttributes();\n// keep field options\n$options = $formB->get('type')->getFormConfig()->getOptions(); \n// your dynamic choices\n$options['choices'] = array('First' => \"1\", 'Second' => '2');\n$typeField = $this->get('form.factory')->createNamedBuilder('type', ChoiceType::class, null, $options);\n// keep tab & group config\n$typeField->setAttributes($attributes); \n// update field\n$formB->add($typeField);\nreturn $formB;\n``\nAlthough it's better create your own form type instead.. If you're extending fromEasyAdminFormTypeyou must to passentityandviewoption as they're required options.. If you're extending fromEasyAdminFormTypeyou must to passentityandviewoption as they're required options.. It's a Twig bug and should be fixed in https://github.com/twigphp/Twig/pull/2813 for next release, meanwhile adds Twig2.6.1to conflicts section in yourcomposer.json.. It's a Twig bug and should be fixed in https://github.com/twigphp/Twig/pull/2813 for next release, meanwhile adds Twig2.6.1to conflicts section in yourcomposer.json.. Hi @Pierstoval, thanks for your input. I'm not fan of \"magic\" methods neither, but I don't think it's something  we can solve soon. The current convention of the bundle is calling tobatchAction()fromindexAction()so there is no chance to havebatchAction(string $actionName)`.\nHowever, it seems that ppl don't like \"magic\" so much and https://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247691291 proposes that too.\n@alterphp I've addressed your comment, thanks.. Hi @Pierstoval, thanks for your input. I'm not fan of \"magic\" methods neither, but I don't think it's something  we can solve soon. The current convention of the bundle is calling to batchAction() from indexAction() so there is no chance to have batchAction(string $actionName).\nHowever, it seems that ppl don't like \"magic\" so much and https://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247691291 proposes that too.\n@alterphp I've addressed your comment, thanks.. PR description updated with latest changes, it should feel less \"magic\" now.. PR description updated with latest changes, it should feel less \"magic\" now.. Update: \n * Added new form type EasyAdminBatchFormType to define the batch form and batch fields/buttons. It'll allow you a custom batch form with inputs/dropdown/etc.. and custom rendering overriding block easyadmin_batch_widget if needed.\n * Added {% block batch_actions %} in list.html.twig template for easy customization.\n * Added method createBatchForm() in AdminControllerTrait for batch form creation and easy customization. The batchAction() method is a bit more readable now.\n * The final batch method (<name>BatchAction) now accepts the batch form instance as 2nd argument for advanced usage.. Update: \n * Added new form type EasyAdminBatchFormType to define the batch form and batch fields/buttons. It'll allow you a custom batch form with inputs/dropdown/etc.. and custom rendering overriding block easyadmin_batch_widget if needed.\n * Added {% block batch_actions %} in list.html.twig template for easy customization.\n * Added method createBatchForm() in AdminControllerTrait for batch form creation and easy customization. The batchAction() method is a bit more readable now.\n * The final batch method (<name>BatchAction) now accepts the batch form instance as 2nd argument for advanced usage.. Hey! demo project ready! https://github.com/yceruto/ea2_batch_actions check it out.\nSee diff https://github.com/yceruto/ea2_batch_actions/commit/2f228668cf99df612e6738d753a2aa785e065097 to know what changes you'll need to create a batch action.\n. Hey! demo project ready! https://github.com/yceruto/ea2_batch_actions check it out.\nSee diff https://github.com/yceruto/ea2_batch_actions/commit/2f228668cf99df612e6738d753a2aa785e065097 to know what changes you'll need to create a batch action.\n. I just pushed a new branch: https://github.com/yceruto/ea2_batch_actions/tree/custom_batch_form with custom batch form. See diff https://github.com/yceruto/ea2_batch_actions/commit/f720a88a7523f4352f74be8e4ef2209f02e74fdd\n\n@alterphp It was your idea, tell me how it looks for you?\nAnd this feature clears the road for this card too: https://github.com/EasyCorp/EasyAdminBundle/projects/1#card-1953061 (Export to CSV, Excel, JSON, PDF).. I just pushed a new branch: https://github.com/yceruto/ea2_batch_actions/tree/custom_batch_form with custom batch form. See diff https://github.com/yceruto/ea2_batch_actions/commit/f720a88a7523f4352f74be8e4ef2209f02e74fdd\n\n@alterphp It was your idea, tell me how it looks for you?\nAnd this feature clears the road for this card too: https://github.com/EasyCorp/EasyAdminBundle/projects/1#card-1953061 (Export to CSV, Excel, JSON, PDF).. @alterphp not yet, see TODO list :) and I need the @javiereguiluz's approval to continue.. @alterphp not yet, see TODO list :) and I need the @javiereguiluz's approval to continue.. @alterphp It should be fixed now (update dep).. @alterphp It should be fixed now (update dep).. (Rebased) This is ready for review.. @javiereguiluz thank you for worrying about this PR.\nRebased and conflicts solved. [Tests passed] So this is finished on my side according to what you proposed.. Very excited about this, thank you!!. Since 2.0 it's named app.css.\nhttps://github.com/EasyCorp/EasyAdminBundle/tree/master/src/Resources/public. Since 2.0 it's named app.css.\nhttps://github.com/EasyCorp/EasyAdminBundle/tree/master/src/Resources/public. @javiereguiluz there is a way to align both resizer-handlers with .content height instead? or somehow improve this (there're few records in the list):\n| Left | Right |\n| --- | --- |\n|  |  |\n. Hi @alterphp, \n| PR | Your code | EA Layout | Result |\n| --- | --- | --- | --- |\n| Before | Empty block {% block content_header %}{% endblock %} | {% if block('content_header')\\|trim is not empty %} | don't show <section class=\"content-header ... |\n| After | Empty block {% block content_header_wrapper %}{% endblock %} | The content_header_wrapper block has been overridden | don't show <section class=\"content-header ... |\nSame for global_actions and content_footer blocks.. Hi @alterphp, \n| PR | Your code | EA Layout | Result |\n| --- | --- | --- | --- |\n| Before | Empty block {% block content_header %}{% endblock %} | {% if block('content_header')\\|trim is not empty %} | don't show <section class=\"content-header ... |\n| After | Empty block {% block content_header_wrapper %}{% endblock %} | The content_header_wrapper block has been overridden | don't show <section class=\"content-header ... |\nSame for global_actions and content_footer blocks.. yaml\n- { property: 'price.value' }\nYes, this case is not sortable by default, althrough it is a valid sortable property as long as both parts price and value are valid mapped properties. The first one must be a TO_ONE association, and the second one may be a simple mapped column or an association TO_ONE.\nEven if it is possible to detect it, it works on your own now. To achieve this, just add the sortable: true option manually to the configuration and test it.\nyaml\n- { property: 'price.value', sortable: true }. If the property does not meet the conditions mentioned above, or it's composed by three parts price.value.currency, or simply it's a virtual field, then you have to override also the createListQueryBuilder and do something like this:\n```php\n// ProductController.php\nprotected function createListQueryBuilder($entityClass, $sortDirection, $sortField = null, $dqlFilter = null)\n{\n    if ('price.value.currency' === $sortField) {\n        $sortField = null; // <-- needed to skip auto statements\n    return parent::createListQueryBuilder($entityClass, $sortDirection, $sortField, $dqlFilter)\n        ->leftJoin('entity.price', 'price')\n        ->leftJoin('price.value', 'value')\n        ->orderBy('value.currency', $sortDirection)\n    ;\n}\n\nreturn parent::createListQueryBuilder($entityClass, $sortDirection, $sortField, $dqlFilter);\n\n}\n```. I've added this issue into future features https://github.com/EasyCorp/EasyAdminBundle/projects/1#card-17291836 since there is something that we can to improve here. \n(A) Auto sortable: true for compound mapped properties like price.value and price.value.currency if they are valid (Doctrine) mapped properties.\nLater, split and add all parts to the query:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/c06dc8f173dc49412c2d39b185376b6924c57a72/src/Search/QueryBuilder.php#L46-L50\n(B) Add a new sortable_field option useful for virtual fields. This sortable_field need accomplish the same criteria as mapped properties to be sortable.\nLater, use metadata.sortable_field value here (by default it's the property name to keep BC):\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/c06dc8f173dc49412c2d39b185376b6924c57a72/src/Resources/views/default/list.html.twig#L115. @sverraest are you using a custom form theme? or a custom style in your app?. Can't this be done by translation instead?. @qporion I've created a new PR related to the same topic but with different approach. I'd like to hear your opinion https://github.com/EasyCorp/EasyAdminBundle/pull/2598, thank you for starting to work on this.. > [...] with this option the custom entity becomes useless right ? Because we can override all parameters (dql_filter, etc..)\nYes, however, I still wonder if allowing to pass an entity name for the autocomplete field can be useful for other scenarios. We wait to see after this proposal and feedbacks.. I'm closing here because I'll propose another solution soon \"out of the box\" for autocomplete forms https://github.com/yceruto/rich-form-bundle: Entity2Type it already provide this feature and more (dev-master yet) I'm working on documenting it. Cheers!. I'm closing here because I'll propose another solution soon \"out of the box\" for autocomplete forms https://github.com/yceruto/rich-form-bundle: Entity2Type it already provide this feature and more (dev-master yet) I'm working on documenting it. Cheers!. Well, https://github.com/EasyCorp/EasyAdminBundle/pull/2602 was tagged as a new feature, so we should probably do the same here. Thanks!. Hi @Wait4Code, thanks for reporting it, you're right! There is a PR in progress trying to solve it https://github.com/EasyCorp/EasyAdminBundle/pull/2549. We are using the Doctrine's paginator through the DoctrineORMAdapter, is there where this process happen, see the limitation at the bottom https://www.doctrine-project.org/projects/doctrine-orm/en/2.6/tutorials/pagination.html . I like it, this is a painful task day by day. \nThis feature can \"follow\" foreign-key relationships, selecting additional related-object data when it executes its query. This is a performance booster which results in a single more complex query but means later use of foreign-key relationships won\u2019t require database queries.\nHowever, this is not a trivial behavior and fetching all relationships automatically is not recommended in most cases as it is likely to make the underlying query more complex, and return more data, than is actually needed, so this should probably be configurable and disabled by default.\nThis is what I think about its possible configuration:\n```yaml\neasy_admin:\n    entities:\n        Blog:\n            list:\n                # (1) Follow all the associations and add them as joins\n                # to-one non-null associations will be added as ->innerJoin(), \n                #                                          else ->leftJoin\n                # to-many associations will be added as ->leftJoin()\n                select_related: true # default false (no-op)\n            # (2) Just add specific fields\n            # ->addSelect('comment')\n            # ->leftJoin('entity.comments', 'comment')\n            select_related: ['comments']\n\n            # ! The above in combination with DQL filter option would be awesome!\n            dql_filter: 'comment.spam = false'\n\n            # (3) Chaining fields\n            # ->addSelect('author', 'hometown')\n            # ->innerJoin('entity.author', 'author')\n            # ->innerJoin('author.hometown', 'hometown')\n            select_related: ['author.hometown']\n\n``\nMore advanced scenario can solved increateListQueryBuilder()` method, overriding it as now.\n. I like it, this is a painful task day by day. \nThis feature can \"follow\" foreign-key relationships, selecting additional related-object data when it executes its query. This is a performance booster which results in a single more complex query but means later use of foreign-key relationships won\u2019t require database queries.\nHowever, this is not a trivial behavior and fetching all relationships automatically is not recommended in most cases as it is likely to make the underlying query more complex, and return more data, than is actually needed, so this should probably be configurable and disabled by default.\nThis is what I think about its possible configuration:\n```yaml\neasy_admin:\n    entities:\n        Blog:\n            list:\n                # (1) Follow all the associations and add them as joins\n                # to-one non-null associations will be added as ->innerJoin(), \n                #                                          else ->leftJoin\n                # to-many associations will be added as ->leftJoin()\n                select_related: true # default false (no-op)\n            # (2) Just add specific fields\n            # ->addSelect('comment')\n            # ->leftJoin('entity.comments', 'comment')\n            select_related: ['comments']\n\n            # ! The above in combination with DQL filter option would be awesome!\n            dql_filter: 'comment.spam = false'\n\n            # (3) Chaining fields\n            # ->addSelect('author', 'hometown')\n            # ->innerJoin('entity.author', 'author')\n            # ->innerJoin('author.hometown', 'hometown')\n            select_related: ['author.hometown']\n\n``\nMore advanced scenario can solved increateListQueryBuilder()` method, overriding it as now.\n. I agree, but keep in mind that it can also have a big impact for the dql_filter option, we would avoid 2 steps to filter the list by a related field:\n| before | after |\n| --- | --- |\n| (1) Create a custom PHP controller class.  (2) Override the createListQueryBuilder method adding the join manually. | See config example (2) above https://github.com/EasyCorp/EasyAdminBundle/issues/2619#issuecomment-461034982 |. I agree, but keep in mind that it can also have a big impact for the dql_filter option, we would avoid 2 steps to filter the list by a related field:\n| before | after |\n| --- | --- |\n| (1) Create a custom PHP controller class.  (2) Override the createListQueryBuilder method adding the join manually. | See config example (2) above https://github.com/EasyCorp/EasyAdminBundle/issues/2619#issuecomment-461034982 |. Also, there is another example with different icon:\n\nWhich one would you like?. Also, there is another example with different icon:\n\nWhich one would you like?. Okay, I'll add the documentation then, unless you prefer to do it yourself ? which I would prefer :) . Okay, I'll add the documentation then, unless you prefer to do it yourself ? which I would prefer :) . Rebased.. Rebased.. Creating your own variables.scss by overriding the vars (e.g. $text-color: hsl(237, 30%, 24%);) does not works for you? You should also can override it using pure css, e.g:\ncss\n:root {\n    --text-color: hsl(237, 30%, 24%);\n}. Creating your own variables.scss by overriding the vars (e.g. $text-color: hsl(237, 30%, 24%);) does not works for you? You should also can override it using pure css, e.g:\ncss\n:root {\n    --text-color: hsl(237, 30%, 24%);\n}. Why your file will not be taken into account? Are you adding your compiled css file as asset in your app after the EasyAdmin ones?\n https://github.com/EasyCorp/EasyAdminBundle/blob/master/doc/book/design-configuration.rst#adding-custom-web-assets. Why your file will not be taken into account? Are you adding your compiled css file as asset in your app after the EasyAdmin ones?\n https://github.com/EasyCorp/EasyAdminBundle/blob/master/doc/book/design-configuration.rst#adding-custom-web-assets. Yes, that other way also works, that's how I do it now, then you need to override the layout.html.twig template to add your custom assets.. Yes, that other way also works, that's how I do it now, then you need to override the layout.html.twig template to add your custom assets.. For instance:\n```twig\n{# templates/bundles/EasyAdminBundle/default/layout.html.twig #}\n{% extends '@!EasyAdmin/default/layout.html.twig' %}\n{% block head_stylesheets %}\n    {{ parent() }}\n{# include your compiled css assets here #}\n\n{% endblock %}\n. For instance:twig\n{# templates/bundles/EasyAdminBundle/default/layout.html.twig #}\n{% extends '@!EasyAdmin/default/layout.html.twig' %}\n{% block head_stylesheets %}\n    {{ parent() }}\n{# include your compiled css assets here #}\n\n{% endblock %}\n``. Are you usingsymfony/webpack-encore` package?. > And what do you put in the SCSS file that allows you to compile the CSS?\nNothing about that process :/ \nmy variables.css:\ncss\n:root {\n    --text-color: hsl(237, 30%, 24%);\n    // ...\n}\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/7760d8a526fb824d50630a7dc21644e707ea15b0/assets/css/easyadmin-theme/variables.css#L2-L6\nmy variables.scss:\nsass\n$text-color: hsl(237, 30%, 24%);\n// ...\nnext, I've included both files, the variables.scss and variables.css in my admin.scss file:\nsass\n@import \"./variables.css\";\n@import \"./variables.scss\";\n// ...\nLater, Webpack and the Sass/SCSS loader take care of the rest.\nhttps://symfony.com/doc/current/frontend.html#adding-more-features. Hi Javier! at first glance looks nice the :hover's idea.\nI found a style issue for Chrome: \n\nI'll try to see what happens later.\nCheers!\n. Hi @seb-jean, since EA2 you can get rid of this deprecation by using EasyAdminController instead.. Yep, it should be EasyAdminController.php. Would you like to fix that doc?. Of course, go ahead, anyone can :). There is a problem here, If:\nyaml\neasy_admin:\n    entities:\n        Client: # \"Client\" != \"User\"\n            class: AppBundle\\Entity\\User\nSo, $targetEntityClassName is equal to User and $this->getEntityConfiguration('User') returns null\nI tried to explain this issue here #596, but still I don't see a simple solution to determine the entity configuration  from entity class name :/\n. Now this can be confused for multiple entity admins:\nyaml\neasy_admin:\n    entities:\n        User: # show all users\n            class: AppBundle\\Entity\\User\n            # ... specific configuration for users ...\n        Client: # use createClientListQueryBuilder method\n            class: AppBundle\\Entity\\User\n            # ... specific configuration for clients ...\n        Blacklist: # use createBlacklistListQueryBuilder method\n            class: AppBundle\\Entity\\User\n            # ... specific configuration for backlist ...\nthen, the result for $this->getEntityConfigByClass('AppBundle\\Entity\\User') is always the first occurrence :/\n. My subject talks about filters and fields rather than inheritance. Yes, it's really \"legit\" to have two different backends for the same entity, like other backend admins. I can use create<EntityName>ListQueryBuilder to filter the same entity, showing diferent columns, actions and form fields for each administration.\nSonata allow this feature and Django use filters inside entity admin.\n. @javiereguiluz is possible to use $this->getEntityConfig('<EntityName>') instead? \nMy idea is to try remove this method getEntityConfigByClass.\n. @javiereguiluz for me that will be a problem when this changes have been released on the next version, because it's the only way to create multiple admins on the same entity.\n. It sounds good, but I think it would be best to use a new property for that, currently type is used in many places and this might get a bit complicated.\n. I just ask, why allow a service for that? below, the controller has been injected with service container. FQCN should be enough at all.\n. this feature should be supported by list action only.\n. the $action parameter doesn't make sense here.\n. maybe this method will allow access to query builder (with previous items selection).\n. is_subclass_of should be enough for all cases.\n. I know that necessary, but EasyAdminEvents::PRE_INITIALIZE and EasyAdminEvents::POST_INITIALIZE events they are triggering twice.\n. :+1: Fixed!\nEDIT: I've reverted the commit, since there are empty labels with children they are not headers.\nlook this line\n. The filter will be applied when searching too?\n. In 3.0+ the alias name is removed, so for new custom forms types they are required to use still the FQCN, any idea how to continue using aliases in 3.0+ ??\n. Yes, create these aliases and use them in EasyAdmin?\n. Is there a way to get all aliases (for Symfony's built-in types) <=2.8, but from 3.0+ I don't know..\n. Hi, could be used a short access to the service container? $this->get('fos_user.user_manager')\n. the same as above\n. This execute something like:\nsql\nSELECT u FROM AppBundle:User u WHERE u.username = 'foo'\nRight? I think you should use the LIKE operator to find a partial result:\nsql\nSELECT u FROM AppBundle:User u WHERE u.username LIKE '%foo%'\nExample - $qb->expr()->like('u.username', $qb->expr()->literal('%foo%'))\n. I think that using EntityType can be removed the data transformers: \n- To set the choices option to [] for empty initial result\n- Using the text input of the select2 to search and load ajax result.\n- Allow support to OneToMany and ManyToMany relationsip (settings <select multiple>) \nSo we leave all the job to the EntityType, WDYT?\n. here there is a full example for \"Loading remote data\"\n. Forgets the related option in https://github.com/javiereguiluz/EasyAdminBundle/pull/1066#issuecomment-204807539. Just is needed an event to modify this values to send.\n. this could be an option? maybe - { property: 'buyer', type: 'easyadmin_autocomplete', max_results: 30 }\n. You think of add an option to determine the fields where to look? This could reduce the performance.\n. this right now is not needed, right?\n. Okey the problem now is when submit the data form, right? The validator should throws an exception like this: 'this value is not valid' right? Thinking...\n. One solution might be to don't this, when submit the form.\n. we can use http://symfony.com/doc/current/cookbook/form/dynamic_form_modification.html#dynamic-generation-for-submitted-forms to do it.\nothers references:\n- http://stackoverflow.com/questions/12946461/validating-dynamically-loaded-choices-in-symfony-2\n- http://stackoverflow.com/questions/18207476/symfony2-dynamic-form-choices-validation-remove\n. :+1: I'll think about other solution. If any better idea, please tell me. Thanks!\n. I'm not sure I understand the problem :confused: my idea is to reuse the father options (class, multiple, etc) to create the child form. By default this father is compound, then I need that the child not be compound.\nThis change not affects the parent options at all EasyAdminAutocompleteType will continue being compound = true\n. Right, updated! \nI've reverted the last commit because expanded option is not exists for EasyAdminAutocompleteType, if it's settings manually then throws an exception.\n. Sorry, I forgot to make this commits.\n.  :+1: A lot cleaner!\n. What I mean is that you must adjust the settings parent options to later you apply it to the child form. That's why I call it inherited options. My English is not good, sorry :disappointed: \n. This means that events (EasyAdminEvents::PRE_INITIALIZE and EasyAdminEvents::POST_INITIALIZE) and initialize process will run twice ? instead you can copy the current AdminController initialized configuration?\n. maybe check AdminController parent class before that? with a nice exception? maybe in normalization process?\n. haven't been implemented the __constructor for NormalizerConfigPass  ?\n. I'm not sure that double initialization has been prevented ? there are two controller instances, so isInitialized is false for each of them ?\n. Thanks fixed!\n. It's the last case to the label value: https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Twig/Resources/views/Form/form_div_layout.html.twig#L225\n. IMO this should cover all possibilities:\n(1) easyadmin.field['label'] == 'Foobar':\nyml\n- { property: 'buyer', label: 'Foobar', type: 'easyadmin_autocomplete' }\n(2) form.vars.label == 'Foobar':\nyml\n- { property: 'buyer', type: 'easyadmin_autocomplete', type_options: { label: 'Foobar' } }\n(3) form.vars.name == 'buyer':\nyml\n- { property: 'buyer', type: 'easyadmin_autocomplete' }\n. We can access to easyadmin.field['label'] in autocomplete form type ?\n. You're right, it's valid when label is empty only.\n. when autocomplete label is null by \"inheriting\" parent options, the label result is \"autocomplete\" (the form field name). Then I need set the parent form name.\n. Honestly I think that is a few complex, but you're right when talking about:\n\n\nnot alter the FormView data.\nallow to override the behavior by replacing the form_label block in a custom template/form theme.\navoid edge cases or forget about some particular behaviors present in default form themes.\n\n\nI'll throw my last bullet, please tell me if this changes break one of these premises.\n. @ogizanagi but, you solution is very good.\n. ... in _select2_locales\n. yeah! this line wouldn't allow execute this other https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Configuration/PropertyConfigPass.php#L197, so the format value was normalized from metadata type (always) instead of configured type.\n. Now, we need ensure if there isn't a custom type we must execute this removed line, right ? otherwise the format value is null and we need one defaults thought.\nNevermind :) always we have a type from property metadata.\n. Yeap ->leftJoin() better :)\n. Maybe this one can be ignored, gives no value.. Maybe the $action parameter should passed too, useful for custom actions ;) and not always when we pass an instance of the entity we want to generate the \"edit\" action.\nps: I know that it can be passed into $parameters ;). IMO This should be part of the method signature explicitly (without default value) because easyadmin_path($entity) does not deduct (i.e. by its own name) the default action to be taken.. > If you put string as $entity you can't use any action different from new (or something custom).\nIMO that should be optional (whatever context) I would like to pass $entity as both (string or object), and this one, shouldn't infer the action value.\nSo it should be one alternative to get the entity configuration only rather than a behavior to determinate the action value too. \nFor example:\n```\ncurrent:\n$this->eaRouter->generate($entity, ['action' => 'custom']);\nsuggest:\n$this->eaRouter->generate($entity or Entity::class, 'custom');\nThe action info is mandatory anyway to generate a valid url for EA, so be explicit in this case avoids magic behavior and future issues with the method signature.. `$this->requestStack->getCurrentRequest()` ?. We could take advantage of sub-requests to change the `referer` parameter ;) (i.e through URI). You might need add `on-invalid=\"null\"` and create a BC layer for 2.3 support (see `RequestPostInitializeListener` service for implementation details). Yep, you might require `RouterInterface` only if you need call to `getRouteCollection` and it's not the case, good catch!. Still missing https://github.com/javiereguiluz/EasyAdminBundle/pull/1677#discussion_r122744963 i.e add a BC layer for SF 2.3. AFAIK Injecting the container is a bad practice, instead you could move the locale logic to the bundle extension?. You could complete the service definition into `EasyAdminExtension`:php\nif ($container->hasParameter('locale')) {\n    $locale = $container->getParameter('locale');\n} else {\n    $locale = $this->container->getParameter('kernel.default_locale');\n}\n$definition = $container->getDefinition('easyadmin.configuration.design_config_pass');\n$definition->replaceArgument(2, $locale);\n. However, try this:xml\ncontainer.hasParameter('locale') ? parameter('locale') : parameter('kernel.default_locale')\n``. Extra%. This is fine, but by Symfony convention this part is responsability of the compiler pass class, i.eDependencyInjection\\Compiler\\?.if (null === $templatePath)?. Same here.. The parameter definition can be removed too?. what case cover!empty($templatePath)?. try to injecttwig.loader.native_filesystemwhich is the native loader for Twig in the Framework, avoiding the circular references error, anyway it's the object that you need in (The Law of Demeter).. It's required anyway by TwigBundle, so if someone is doing weird things with this service, likely needs extend fromTwig_Loader_Filesystemto make it work.. Perhaps we can passfirewalls..switch_user.parameterconfiguration toEasyAdminTwigExtensionand create a new functioneasyadmin_exit_impersonation_path()(we would need to know the current firewall name) to generate this path dinamically?. A little hint in https://github.com/symfony/symfony/commit/a3253f6db686adbaca39e0e034af49e7ab293ab2 but it should be adapted to achieve compatibility since Symfony2.3, so you probably need to injectFirewallMaptoo to get the current firewall name through$this->firewallMap->getFirewallConfig($request)->getName()and match it with the rightfirewalls..switch_user.parameter, then you can generate a valid query parameter.. In theoryisset($metadata['associationType'])isfalseif the linked field is not an association field, isn't?. No, LGTM :) This would allow DTO to use it as well.. Yes, for me too, but I had to do it to keep **2.3** BC, for some reason (I didn't understand why) _sometimes_ the form didn't contain its child form like'autocomplete' => but'0' => (only for 2.3) :/ so I didn't have another option.. I suggestsis not emptyto cover more edge-cases. We should start thinking of an object that encapsulates this information :) we might need more arguments in the future.. I suggest add a listener class to make thisEasyAdminFormTypeclass more understandable.. IMOleftJoinis fine, because rows not related to the joined table can match the search.. Can this return backslash` as directory separator in Windows? if so, this should be normalized before the isset statement below, otherwise these templates will be ignored.. What will happen for fields of type array where the keys may not be integers?. No strong opinion about this. I like that the request method matches the request action, but you're right about standards, so fixed.. Still you can, just don't use the first argument but the second one passed to the custom method. It should cover both cases, simple and complex batch queries.. > I think throwing PRE_BATCH_DELETE, POST_BATCH_DELETE events will be useful too, with array $ids as event argument.\nNot sure about this, this is just one line to override.. batch_actions. This is a workaround to make test pass, later change the CSS class instead.. Done!. In that case I'd prefer to move the form definition to some controller/method and make the extension point there, thus you could add custom batch-fields/form-theme/custom-rendering, etc. WDYT?. This check makes it impossible to render a form within this block the second time it's processed, because a form is rendered once.. That's why I change it by a new block base_content_header wrapping the content, thus we've the same effect (overriding it and let empty) and better performance as all blocks are rendered once.\nSame change for {% if block('global_actions')|trim is not empty %}, which was being rendered up to 4 times.. Done!. Better, thanks.. (To facilitate the review) all new code related to this file is a copy-paste of *ActionsConfig() methods, removing the foreach($this->views as $view) statements and hardcoding the list view value.. Same here.. FIXME: This actions aren't filtered by disabled_actions. \nLikely this static process (this one: https://github.com/EasyCorp/EasyAdminBundle/blob/524f9310814436a041419cc6f3b985e6814e402f/src/Twig/EasyAdminTwigExtension.php#L331-L350) should be done by ActionConfigPass?. So we could remove this repetitive task everywhere, @javiereguiluz what do you think?. TODO: Add default btn-secondary to css_class option if empty. (Fixed in Twig context). Or better, use default |default('btn-secondary') here.. Fixed. Reusing batch_form.vars.batch_actions var, which was already filtered in buildView().. Alternative solution applied.. If so, I think we should do these changes together.. I'd prefer consistency here :)\nI'm also not sure if it's a good practice for third-party bundles, unless the service is clearly useful for the end developer at project level, plus if you've autowire option activated in your app.. Optional: I'd lower the opacity even more 0.1?\n\n. I just created a new PR to fix this one and other similar tests.\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2585. Much better, thanks! :). What about to pass the dql_filter option too? It'll allow us filter the autocomplete results.. Will be great if we can to pass all these new arguments to Autocomplete::find() method too, setting these as fallback, thus we could override the autocompleteAction() to configure it dynamically. e.g:\n```php\nprotected function autocompleteAction()\n{\n    $results = $this->get('easyadmin.autocomplete')->find(\n        $this->request->query->get('entity'),\n        $this->request->query->get('query'),\n        $this->request->query->get('page', 1),\n        'label', // sort field\n        'ASC', // sort direction\n        'entity.publishedAt IS NOT NULL' // dql filter\n    );\nreturn new JsonResponse($results);\n\n}\nwdyt?. Note that this config will affect the normal Category list too and currently the `EasyAdminAutocompleteType` doesn't accept custom entity name (but could be), then we could configure a custom entity for autocomplete field only. What do you think?. Or better if we allow to configure `sort_field` and `sort_direction` in `EasyAdminAutocompleteType`:php\nprotected function autocompleteAction()\n{\n    $results = $this->get('easyadmin.autocomplete')->find(\n        $this->request->query->get('entity'),\n        $this->request->query->get('query'),\n        $this->request->query->get('page', 1),\n        $this->request->query->get('sortField'),\n        $this->request->query->get('sortDirection')\n    );\nreturn new JsonResponse($results);\n\n}\nthus you'll not need to add another entity config nor override this method, but configuring the autocomplete field directly.. See https://github.com/EasyCorp/EasyAdminBundle/pull/2592#discussion_r it's likely the best way to configure it, using this as fallback.. Try this:css\n.content-wrapper {\n    display: grid;\n    grid-auto-rows: max-content;\n    grid-column-gap: 0;\n    grid-row-gap: 0;\n    grid-template-areas:\n        \"flash-messages           flash-messages  flash-messages\"\n        \"sidebar-resizer-handler  content         content-resizer-handler\"\n    ;\n    grid-template-columns: 0 auto 0;\n@media(min-width: 992px) {\n    grid-template-columns: 10px auto 10px;\n}\n\n}\n``\n?. Yes! exactly, let's go for it?. You can create a separate PR if you want ;). IMOdql_filtershouldn't be exposed in the URL through autocomplete requests, so both ideas: https://github.com/EasyCorp/EasyAdminBundle/pull/2592#discussion_r250899921 and https://github.com/EasyCorp/EasyAdminBundle/pull/2592#discussion_r250687387 can be implemented to solve any \"autocomplete\" customization.. In addition, themax_resultsoption can be include into this idea https://github.com/EasyCorp/EasyAdminBundle/pull/2592#discussion_r250635960. This default value is already configured by the [FormType](https://github.com/symfony/symfony/blob/9429face979c7194a9e7ccdcdc8e029be994c9fa/src/Symfony/Component/Form/Extension/Core/Type/FormType.php#L127-L129) according to the underlying data, so no BC at the same time we're opening the door for DTOs approach without configuredata_classeach time.. The$idproperty is not mandatory for DTOs, they're simple..regular.batch_actions?. Just to ensure, can you confirm that adump($metadata['dataType'])before this line returns\"uuid\"`?. > Do you really need a full dump?\nNop, thanks!. Mmm, I missed this change, the new version doesn't show the count of selected items, is this expected for you?\n\n. How about translating the word \"selected\" only? Since we are in Twig's context, can something like this work for you?:\ntwig\n0 === ids.length ? titleContent : ids.length + ' {{ 'label.selected'|trans(...) }}';. Otherwise, can we keep the content of the current title?. I've restored this in case no data is passed to the form, which is weird in EA but still possible, in that case we provide the data class of the passed entity name.. Later, if no data is passed to the form, we provide a default one https://github.com/EasyCorp/EasyAdminBundle/pull/2607#discussion_r252798646. Could you convert it into a single if statement by now?. It can be removed if it is a type-hinted _construct argument, the same for other occurrences.. private. final?. private, same for methods bellow.. add return-hint (: array) and remove the @param, @return attributes from PHPDoc?. elseif can be removed if the above statement ends with continue.. What is the advantage of having this option regarding to the built-in access_control option insecurity.yaml? I wonder if it will be a double unnecessary control.. final?. private. It will avoid obstacles like this:\n\n. ",
    "jcrombez": "Nice, i never understood this dash notation, thanks it's clear now :)\n. Nice, i never understood this dash notation, thanks it's clear now :)\n. ",
    "mploquin": "Hi,\nIs there anything new about Doctrine ODM ?\nThanks a lot.. Hi,\nIs there anything new about Doctrine ODM ?\nThanks a lot.. OK, thanks for your response.\nAnd for Data providers ?. OK, thanks for your response.\nAnd for Data providers ?. ",
    "victorlap": "Hello,\nIt's unfortunatie that there won't be any support for ODM (or other ORMs) anytime soon.\nIs there a way to integrat this ourselves?\nCan we maybe override $this->get('easyadmin.query_builder') (see for example https://github.com/javiereguiluz/EasyAdminBundle/blob/master/src/Controller/AdminController.php#L502 ) with our own query builder, or is this also not possible? . Okay thanks,\nI will try and post my findings here.\n. ",
    "alterphp": "Hi @victorlap and @mploquin. I've just created a bundle for support of MongoDB ODM (https://github.com/alterphp/EasyAdminMongoOdmBundle).\nIt's entirely copied from EasyAdmin code and requiring EasyAdmin bundle as dependency too (global configuration like design, formats, menu and global templates are not copied). For now, it only supports list, search and show. As I personally use MongoDB for mass data, I don't need/want to modify data from MongoDB, but it could be a future feature.\nAs it could be a start point for an integration into EasyAdmin, any interested person are invited to try it !. @javiereguiluz  Please let me show you this feature I implemented as FormType but that is simply a rendered admin list (with a very bit of AJAX to sort and paginate in the container) : https://github.com/alterphp/EasyAdminExtensionBundle#embed-lists-as-form-widgets. @timonf @alberto-coolshop I've got the same message as alberto's one while changing console output.... @alberto-coolshop can you try my patch ?. @javiereguiluz any chance to implement filters in list view that way ? Here is a screenshot that shows what \"embedded lists\" look like in an edit view. https://drive.google.com/file/d/0B6GEDfvMD_28N18wOUN5TXhaREk/view?usp=sharing. Yes it's working but it relies on previous idea to filter lists from GET params, that's why I'd like to get @javiereguiluz opinion about this feature.. see https://github.com/javiereguiluz/EasyAdminBundle/compare/master...alterphp:feature/querystring-list-filters?expand=1. Feature added in https://github.com/alterphp/EasyAdminExtensionBundle. @javiereguiluz @xabbuh I know I can achieve that with events, but doing natively may lead to natively provide a new EmbeddedList form type. . Bad implementation anyway. Feature added in https://github.com/alterphp/EasyAdminExtensionBundle. @xabbuh I changed dependency to the global scope. @javiereguiluz ?. Hi @javiereguiluz ! This is a 10 seconds review !. Hi @javiereguiluz ! This is a 10 seconds review !. :+1: \nThis bundle definitely needs some \"plugs\" to be extended !. :+1: \nThis bundle definitely needs some \"plugs\" to be extended !. @javiereguiluz As a sample use case, please see https://github.com/alterphp/EasyAdminExtensionBundle/pull/2. @javiereguiluz As a sample use case, please see https://github.com/alterphp/EasyAdminExtensionBundle/pull/2. This is even not enough, config used for Form generation is re-processed from ConfigManager in EasyAdminFormType. I think an event should be dispatched from the config manager to affect it afterwards.... This is even not enough, config used for Form generation is re-processed from ConfigManager in EasyAdminFormType. I think an event should be dispatched from the config manager to affect it afterwards.... I think form type_options must not be processed at default field step, but after all form field type resolution. Let's see. I think form type_options must not be processed at default field step, but after all form field type resolution. Let's see. @iluuu1994 @javiereguiluz \nI've added a test for this bug.. @iluuu1994 @javiereguiluz\nI finally found a solution. The case was already handled, but only if no user type_options were defined. I extended it with user defined type_options. Let's review #1815 . Thanks for your feedback. Indeed, class is a mandatory option for EntityType.. Thanks for your feedback. Indeed, class is a mandatory option for EntityType.. That needs some more work and tests.. @iluuu1994 @javiereguiluz \nIt seems all good now. @JoeKre @javiereguiluz Yes, it could be related. I'm going to investigate.... @JoeKre @COil Can you test this attempt of fix https://github.com/javiereguiluz/EasyAdminBundle/pull/1847 ?\nAs I don't use VichUploader nor virtual fields, I can not really test it. Can you write a test for the fix ?. The test of PropertyConfigPass is not a functional test, it does not use full AppBundle test bench...\nCan you dump parameters sent to getFormTypeOptionsOfProperty method at line 194 of PropertyConfigPass file ?\n```php\ndump($normalizedConfig, $fieldMetadata, $originalFieldConfig);\n$normalizedConfig['type_options'] = $this->getFormTypeOptionsOfProperty(\n     $normalizedConfig, $fieldMetadata, $originalFieldConfig\n );\n``. @JoeKre Thanks. I can't see anyrequireditem intype_options... Can you dump the result of thegetFormTypeOptionsOfProperty` method call ?\n```php\ndump($normalizedConfig, $fieldMetadata, $originalFieldConfig);\n$normalizedConfig['type_options'] = $this->getFormTypeOptionsOfProperty(\n     $normalizedConfig, $fieldMetadata, $originalFieldConfig\n );\ndump($normalizedConfig['type_options']);\n```\nAnd if possible, the same dump before the EasyAdminBundle update.. @javiereguiluz @JoeKre @COil \nSo I don't think commit #432b1c2f is related to your problem. The former version neither did match your conditions...\nI don't know where the required type options is set... Have you updated vich package too ?. @iluuu1994  Does ValidatorTypeGuesser (from Symfony) still apply ? If you have a NotBlank constraint on a field, is required value set to true ?. @iluuu1994 Ok, seems good ! I think adding the default value to $defaultVirtualFieldMetadata is definitely the best approach (as it is specific to virtual fields for now).. Bug is not related. @ktrzos It looks good. This is a very needed feature ;-)\n. @ktrzos It looks good. This is a very needed feature ;-)\n. sorry, i did not search the matching keywords.\nIt's the same as #1910 . sorry, i did not search the matching keywords.\nIt's the same as #1910 . The default toggle looks the same, it's just driven by bootstrap color theme (succes for green, danger for red), as folowing :\n\nBut for a specific field_censored toggle, I needed to invert colors, as TRUE value should be marked as red (this is a moderation feature in my admin) :\ntwig\n<input type=\"checkbox\" {{ value == true ? 'checked' : '' }}\n      class=\"toggle-censored\"\n      data-toggle=\"toggle\" data-size=\"mini\"\n      data-onstyle=\"danger\" data-offstyle=\"success\"\n      data-on=\"{{ 'label.true'|trans }}\" data-off=\"{{ 'label.false'|trans }}\">\nThis field_consored now takes cares of the data-onstyle and data-offstyle html attributes. It did not before, because on enforced css.\n\n`\n. Thanks @javiereguiluz . works well, great move !. works well, great move !. @javiereguiluz For the security access control feature, have a look at this implementation : https://github.com/alterphp/EasyAdminExtensionBundle#define-access-permissions\nMenu only show accessible entries (and empty menu groups are pruned), list only show accessible actions and controllers send ForbiddenException if access is denied. Pure role-based access-control.. @javiereguiluz collapse is a basic Bootstrap component (CSS framework theme is build on), using Javascript that is already loaded by the theme. It's also compatible with next Bootstrap version (Bootstrap 4), in case theme will evolve.\nCollapsed state as example for a col-12 group :\n\nJust click on the right icon and it's expanded :\n\ncollapsible option enables the feature on the group (by adding icon link in the title bar and class on the content). expanded set the state at load.\n. @javiereguiluz Great ! Thanks for the tweak ;-). @javiereguiluz Great ! Thanks for the tweak ;-). Works for me too ! Thanks @xabbuh for fast fix.\n@javiereguiluz This really requires a quick merge, tough BC break for end-users.... @xabbuh For information, there is 1 failed PHP syntax check in the commit (https://travis-ci.org/EasyCorp/EasyAdminBundle/jobs/392770723#L641).. @xabbuh For information, there is 1 failed PHP syntax check in the commit (https://travis-ci.org/EasyCorp/EasyAdminBundle/jobs/392770723#L641).. @xabbuh any plan for merge ?. @xabbuh any plan for merge ?. :+1: . :+1: . sensio_framework_extra.router.annotations should be explicitly set to false in Fixtures app configs. This should removes all deprecations from deprecated classes about FrameworkBundle router...\nSome deprecations comes then from Symfony 4.1 :\n\nThe \"security.firewalls.secured_area.logout_on_user_change\" configuration key has been deprecated in Symfony 4.1.\nRelying on the default value (\"false\") of the \"twig.strict_variables\" configuration option is deprecated since Symfony 4.1. You should use \"%kernel.debug%\" explicitly instead, which will be the new default in 5.0.\nReferencing controllers with a single colon is deprecated since Symfony 4.1. Use app.controller::indexAction instead\nReferencing controllers with FrameworkBundle:Template:template is deprecated since Symfony 4.1, use \"Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction\" instead\n\nHopes it helps. I can help by updating the branch if you need (@ndench ).\n. @xabbuh @javiereguiluz The whole thing of this PR is to remove deprecations (appeared with Sf 4.1) that break CI (deprecations makes it break in Travis CI). But as you mentioned most of fixes may break compatibility with older symfony versions.\nI think branch 1.x of EasyAdmin should accept deprecations warnings in CI instead of trying to fix them (that is huge work when needing to keep compatibility with older versions).\n. Good job !\nWhat's the difference between master and 1.x branch ? Is 1.x still following master ?. So this PR should back ported to 1.x too ?. So this PR should back ported to 1.x too ?. 1.x branch is not tested against Sf 4.1, you're right.  That would be a good idea to make it tested against Sf 4.1 too (as some third-party bundles relying on EasyAdmin are tested against Sf 4.1 => https://github.com/alterphp/EasyAdminExtensionBundle :-D)\nEDIT: I have decreased deprecations helper strictness in the CI configuration instead.. 1.x branch is not tested against Sf 4.1, you're right.  That would be a good idea to make it tested against Sf 4.1 too (as some third-party bundles relying on EasyAdmin are tested against Sf 4.1 => https://github.com/alterphp/EasyAdminExtensionBundle :-D)\nEDIT: I have decreased deprecations helper strictness in the CI configuration instead.. What if you make AdminController implement ContainerAwareInterface ?. IMO, making AdminController a service is a solution but it requires to adapt the routing configuration too.\nSee https://symfony.com/doc/current/controller/service.html#referencing-your-service-from-routing. It makes sense to switch to controller as a service as it is the most durable implementation. And 2.0 release is the good time to BC Break !. The BC break I expect is about the way developers will embed the bundle (for now we have to define the routing from FQCN controller). And the way to controller will probably be modified.\nBut I think it's worth it anyway !. Any log in the browser console ? It may come from JS layer.... And what about branch 1.x ?. Source problem (on select2 repo) has been fixed 1 year ago (https://github.com/select2/select2/commit/0ad18a00b8ccba255141d68957c1c14268cb5e0e). But it's not on a stable tag (v4.0.6-rc*) and v4.0.5 is affected... So this will not be fixed on EasyAdmin 2.x branch as long as select2 repo does not release stable v4.0.6 :-(. Thanks for the merge !. I think this implies a whole pass on buttons.scss file in order to keep only what comes over Bootstrap 4 style.\nHow can I generate assets with Webpack ? Should I include webpack.config.js from EasyAdmin from a parent webpack config file ?. Hi @javiereguiluz \n2513 fixes .btn-sm and .btn-lg but it does not re-enable .btn-md, .btn-xl. It's like EasyAdmin replaces the whole Bootstrap btn-* interface instead of just adding its own specific style.\nIMO there is a mistake in the way buttons styles is redefined in EasyAdmin. I'll give a try to simplify and keeping advantage of the whole Bootstrap features.. OK, the key is to identify the required changes from Bootstrap default and only apply those ones without fully redefining this btn-* interface.\nCould you briefly explain the main difference from Bootstrap buttons to new EasyAdmin buttons so that I can focus on them ?\nThanks,. @javiereguiluz I've PRed this refactoring.. I think labels should not be hidden with CSS rules but in the configuration of the form in config/easy_admin.yml :\neasy_admin:\n    entities:\n        MyEntity:\n            form:\n                - property: myRelatedItems\n                      label: 'Items'\n                      type: collection\n                      type_options:\n                        entry_options: { label: false }\nAnd if you really want to hide auto-numbered labels, it should done, IMHO, in the Twig that generates collection items. But is possible to differenciate auto-numbered label from numeric chosen labels ?. IMHO, there are 2 simple changes that may improve display on small screens, and I don't see where it reduces display confort on desktop screens :\n- Remove .wrapper min-width that disables default HTML display adjustment for <table>,\n- Put back the collapsible sidebar\n. IMHO, there are 2 simple changes that may improve display on small screens, and I don't see where it reduces display confort on desktop screens :\n- Remove .wrapper min-width that disables default HTML display adjustment for <table>,\n- Put back the collapsible sidebar\n. @javiereguiluz I just pushed #2560 to put back minimum responsive behavior. I think it's worth giving a try !. @javiereguiluz I just pushed #2560 to put back minimum responsive behavior. I think it's worth giving a try !. - To keep default symfony numeric labels : \nMyEntity:\n              form:    \n                  - property: collectionFields\n                      label: 'Collection fields'\n                      type: collection\n                      type_options:\n                        entry_type: SomeType\n                        entry_options: { label: true }\n                        allow_add: true\n                        allow_delete: true\n                        by_reference: false\n@javiereguiluz When merged, you'll have to re-compile assets. I did not push them as it may breaks other PRs changes. I guess you compile them after every merge.\n. @yceruto  my bad, missing commits were unpushed. that's done !. No, I did not look for any workaround.. No, I did not look for any workaround.. I also changed the delete button in edit view so that it has text-danger class now.\nBEFORE:\n\nAFTER:\n\n. Not possible AFAIK.\nI know you fight everyday against repetitive work ;-) Don't define any label at all and it will take the property name as label. But defining a label for both list and edit is not intended. This would be time saving for CRUD admin but useless when you show processed data in list for example.. Or ... you can use YAML anchors. This idea to re-use and easily maintain a value used many times is already handled by the format.. Not sure YAML anchors is really helpful : https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd\nFor a label resolver, try plugging a ConfigPass around PropertyConfigPass. . Thanks @javiereguiluz for merging this ! The mix CSS/SCSS variables from Bootstrap is still not completely clear to me, I need to use Bootstrap 4 more to understand the whole logic.. Thanks @javiereguiluz for merging this ! The mix CSS/SCSS variables from Bootstrap is still not completely clear to me, I need to use Bootstrap 4 more to understand the whole logic.. I usually use 2 or 3 &nbsp; between <i> element and text to get rid of this spacing issue. @javiereguiluz   is it convenient to you ?. I usually use 2 or 3 &nbsp; between <i> element and text to get rid of this spacing issue. @javiereguiluz   is it convenient to you ?. I expected that (it's dirty indeed). I'm afraid CSS will not fix it unless we enclose the button label in a <span> element.... I expected that (it's dirty indeed). I'm afraid CSS will not fix it unless we enclose the button label in a <span> element.... @javiereguiluz what about span tag to enclose button's labels ?. @javiereguiluz what about span tag to enclose button's labels ?. @ElGecko76 @lyrixx can you test this branch and tell us if basic responsivity of former theme is back with those changes ?. @ElGecko76 @lyrixx can you test this branch and tell us if basic responsivity of former theme is back with those changes ?. Before\n\nFull-Width\n\nFull-Width and Collapsed\n\n. Before\n\nFull-Width\n\nFull-Width and Collapsed\n\n. This PR also prevent form (very) large content to completely hide left bar (that is unreachable even with horizontal scroll).\nBEFORE\n\nAFTER\n\n. Looks good ! Go for it. Looks good ! Go for it. @javiereguiluz All requested changes are pushed ! Thanks. @javiereguiluz All requested changes are pushed ! Thanks. Hi @TomasVotruba,\nMaybe the way you extends easyadmin type is not convenient. Have you tried to extend it, not on object layer, but with Symfony form way :\n```php\nfinal class TrainingRegistrationFormType extends AbstractType\n{\n    // ....\n/**\n * {@inheritdoc}\n */\npublic function getParent()\n{\n    return EasyAdminFormType::class;\n}\n\n}\n```\nIs inheritance better on Twig side that way ?. DoctrineOrmTypeGuesser::guessRequired method seems to deal with *-to-one associations by checking the nullable option...\nWhat if you explicitely set nullable to false ?\nEDIT According to a comment in the code, default value for nullable is true in associations.. DoctrineOrmTypeGuesser::guessRequired method seems to deal with *-to-one associations by checking the nullable option...\nWhat if you explicitely set nullable to false ?\nEDIT According to a comment in the code, default value for nullable is true in associations.. > However, I'm not fan at all (or \"not fan anymore\", don't remember rofl) of the \"magic\" method naming that resolves automatically to {name}BatchAction()\nI don't like it, but I think it's important in order to ease adoption of the bundle by less experimented developers and it increases the amount of installations. So finally, even if I don't use it at all, it could be useful for me (more people using the bundle implies bigger community, more contributors and so on).. > However, I'm not fan at all (or \"not fan anymore\", don't remember rofl) of the \"magic\" method naming that resolves automatically to {name}BatchAction()\nI don't like it, but I think it's important in order to ease adoption of the bundle by less experimented developers and it increases the amount of installations. So finally, even if I don't use it at all, it could be useful for me (more people using the bundle implies bigger community, more contributors and so on).. Would be even better ! And pass $ids and form data to the (name)BatchAction.\nLe mar. 15 janv. 2019 \u00e0 18:49, Yonel Ceruto notifications@github.com a\n\u00e9crit :\n\n@yceruto commented on this pull request.\nIn src/Resources/views/default/list.html.twig\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247996489\n:\n\n@@ -76,6 +83,25 @@\n             \n         {% endblock new_action %}\n     {% endif %}\n+    \n+\n+    {% if _list_batch_actions is not empty %}\n+        \n+            \n+                \n\nIn that case I'd prefer move the form definition to some controller/method\nand make there the extension point, thus you could add custom\nbatch-fields/form-theme/custom-rendering, etc. WDYT?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247996489,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtFzXGt2CSIoqa4KyBlN0iRcXej0Zb7ks5vDhTGgaJpZM4Z_lO5\n.\n. Would be even better ! And pass $ids and form data to the (name)BatchAction.\n\nLe mar. 15 janv. 2019 \u00e0 18:49, Yonel Ceruto notifications@github.com a\n\u00e9crit :\n\n@yceruto commented on this pull request.\nIn src/Resources/views/default/list.html.twig\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247996489\n:\n\n@@ -76,6 +83,25 @@\n             \n         {% endblock new_action %}\n     {% endif %}\n+    \n+\n+    {% if _list_batch_actions is not empty %}\n+        \n+            \n+                \n\nIn that case I'd prefer move the form definition to some controller/method\nand make there the extension point, thus you could add custom\nbatch-fields/form-theme/custom-rendering, etc. WDYT?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2578#discussion_r247996489,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtFzXGt2CSIoqa4KyBlN0iRcXej0Zb7ks5vDhTGgaJpZM4Z_lO5\n.\n. To me it's ready to merge ! @javiereguiluz WDYT ?. To me it's ready to merge ! @javiereguiluz WDYT ?. CSS is broken on my side, did not manage to get it right even after compiling EAB vendor styles. aNything I'm missing ?. CSS is broken on my side, did not manage to get it right even after compiling EAB vendor styles. aNything I'm missing ?. Hi @yceruto ! I don't understand the BEFORE/AFTER example ?. Hi @yceruto ! I don't understand the BEFORE/AFTER example ?. Ok, I get it !. Ok, I get it !. @javiereguiluz The use of Twig filter prune_item_actions could be merged into easyadmin_get_actions_for_*_item existing function. But it implies to change the signature, by passing _entity_config insteadof _entity_config.name.\n\nI let you review this and decide if it could be a good implementation basis.. For documentation, please refer to https://github.com/alterphp/EasyAdminExtensionBundle#define-access-permissions. app.request.query.all ? . same error ?\nanyway, ParameterBag is IteratorAggregate so my suggestion does not change anything.... right, templating service is referenced in the main services.xml file. leftJoin allows to search on NULL values in the future. https://github.com/symfony/symfony/blob/master/UPGRADE-4.1.md#twigbundle. yes, certainly... I did not follow evolutions of Sf 2.8 branch.... yes, certainly... I did not follow evolutions of Sf 2.8 branch.... How do you change it by config ?. Changed to <span class=\"btn-label\">. Why not a POST request here ? This is standard and, IMO, the best matching method for the command being sent through the request.\nBy the way, this implies framework.http_method_override Symfony config to be set to true (https://symfony.com/doc/current/reference/configuration/framework.html#configuration-framework-http-method-override).\n. I would use , as it is a more natural array separator to me but this is a pure opinionated feeling.. I would create and set the QueryBulider in deleteBatchAction method itself. And so just send array $ids to deleteBatchAction.\nIMHO, custom batch actions will often require more than a single DQL update/delete.. As said above, I would do all ORM action in this method.\nI think throwing PRE_BATCH_DELETE, POST_BATCH_DELETE events will be useful too, with array $ids as event argument. . Placing a Twig block in order to add some inputs (like a status selector near a \"update status\" button) would be useful, what do you think ?. I don't understand the test here, nor the next one on global_actions. . Ok, I think you're right, the test (is the block empty) indicates that it requires a wrapping block => content_header_wrapper insteadof of base_content_header ?. I think we should now use FQCN as id for new services (appeared from 2.0 version) ? @javiereguiluz any opinion about this ?. Just for new services as a start ?. Right. :+1: . :+1: . :+1: . :+1: . :+1: . :+1: . I don't like to make classes final in a library/bundle. It's really annoying when you need to add a custom behavior. And I think this bundle is exactly the kind of llibrary developers might want to customize.\nWDYT ?. :+1: . access_control option insecurity.yaml secure paths, not controller actions. This is a bit different.\nThe main reason is, I think it is an easy way to secure all the actions handled by EasyAdmin controller. IMO, it eases bundle's adoption: if your admin area entirely relies on EasyAdmin controller, you don't have to use access_control.. @yceruto up\nMy opinion is that making it final requires to define a matching interface to allow extensibility. WDYT ?. @javiereguiluz Is this something you'd like to be configured on the bundle level or not ?. ",
    "KevinForys": "For my side, the solution that @javiereguiluz propose looks great and simple.\nI work on a prototype so I just need a simple solution :)\n. For my part, I just search something like this: \nphp\n'MyUser':\n    class: AppBundle\\Entity\\User\n    form:\n        fields: ['name', { property: 'role', render: 'extanded/radiobutton' } ]\n. Ok, thanks :)\n. ",
    "antoniojlm84": "Thanks guys. @javiereguiluz, keep working with this admin, I love the work your are doing and I'm sure it would be a great admin backend! (it is a great one now)\n. Thanks guys. @javiereguiluz, keep working with this admin, I love the work your are doing and I'm sure it would be a great admin backend! (it is a great one now)\n. ",
    "ywoume": "how to have textarea in type in form ?. ",
    "nesl247": "I had already tried that before submitting the issue.\n. ",
    "GeO95": "It was it, then I guess the doc was wrong about it : last lines of \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/4-customizing-list-action.md\nNow I'm running into another issue, my property is an external URL, like http://www.website.com/image.jpg\nI can't get to make it correct. If I don't specify a base_path it is prefixed with a /, and if I do it doesn't help.\n. ",
    "jesusdiez": "Cool @javiereguiluz!. As I commented, I did the naivest approach to accomplish my needs, doing a general actions config key. I thought about a per-entity based way too, and that could be compatible with this approach: using the general config list as default one, but allowing a specific entity one to override it.\n@Pierstoval, You may be right. I added it on the AdminController following a simple approach, as there was placed the original array with the admin-wide actions. I haven't studied Configurator too much, but as far as I see, it has a more entity-oriented scope. Anyway, semantically it seems like a better place to locate this.\nAbout the twig function, it seems fair, although the current semantics are pretty understandable, don't you think? \n{% if 'delete' in allowed_actions %} \n  [...HTML...]\n{% endif %}\n. Cool @javiereguiluz!. As I commented, I did the naivest approach to accomplish my needs, doing a general actions config key. I thought about a per-entity based way too, and that could be compatible with this approach: using the general config list as default one, but allowing a specific entity one to override it.\n@Pierstoval, You may be right. I added it on the AdminController following a simple approach, as there was placed the original array with the admin-wide actions. I haven't studied Configurator too much, but as far as I see, it has a more entity-oriented scope. Anyway, semantically it seems like a better place to locate this.\nAbout the twig function, it seems fair, although the current semantics are pretty understandable, don't you think? \n{% if 'delete' in allowed_actions %} \n  [...HTML...]\n{% endif %}\n. That would fit better with @javiereguiluz 's idea of doing a restriction on an entity basis.\nI'll give it a look this evening.\n. That would fit better with @javiereguiluz 's idea of doing a restriction on an entity basis.\nI'll give it a look this evening.\n. @javiereguiluz, I don't know if you were able to take a look in the later changes I did on the #168, after receiving some feedback from @Pierstoval:\nhttps://github.com/jesusdiez/EasyAdminBundle/commit/ec6e3037f77aa0c5143d1b010eebe9201b4db58c enables the per-entity actions and move the configuration logic control to the Configuration class, and the rendering to the Twig function. That code may be a good base to add some of the extra points you described on the PR.\nIMHO, the weakest point of that code is the management of the list action (that always should be enabled) and some trashy tricks used to do so. The overriding of the \"global\" actions it's a little bit weird too, as it uses the general setup if not specific one is defined in the entity and that may not be the desired behavior on every scenario.\n. ",
    "ejkun": "Just made the Pull Request. Hope u guys like it ^^\n. Just made the Pull Request. Hope u guys like it ^^\n. ",
    "aruku": "@Pierstoval I'm using Symfony 2.5.6.\nAFAIK, it doesn't depend on me whether the alias is EasyAdmin or EasyAdminBundle, but on the literals used in the bundle (e.g. @EasyAdmin/edit.html.twig); this corresponds with the behavior I just checked:\nchanging \npaths:\n    '%kernel.root_dir%/../src/UM/AplicacionBundle/Resources/views': EasyAdmin\nto\npaths:\n    '%kernel.root_dir%/../src/UM/AplicacionBundle/Resources/views': EasyAdminBundle\nmakes Symfony to load the template included in EasyAdminBundle, not the one I overrode it with.\n@javiereguiluz Do you know if that can be disabled in any way? Maybe it changed for some reason in my code and that's the problem...\n. The worst thing is that the problems seems to be that Symfony behaves just the opposite as the documentation says.\nThe overriding of resources only works when you refer to resources with the @FOSUserBundle/Resources/config/routing/security.xml method. If you refer to resources without using the @BundleName shortcut, they can't be overridden in this way.\nhttp://symfony.com/doc/2.5/cookbook/bundles/inheritance.html#overriding-resources-templates-routing-etc\nBut when I changed the code in EasyAdminBundle::editAction so the template was referenced like EasyAdmin::edit.html.twig, it actually loaded my derived template!\n. @xabbuh I'm using Symfony 2.5.6.\n. Any ideas on why this happens?\n. I'm sorry for not being able to get back to this sooner; I just made a env for you to reproduce the issue:\nhttps://github.com/aruku/tests/tree/easyadminbundle_181\nAfter cloning the repo or just downloading the package you will need to do a composer update for it to download the requirements and change app/parameters.yml to the appropriate values for your MySQL. Then app/console doctrine:schema:generate --force so it can create the needed databases.\nIf you download the repo you can reset it to HEAD^1, that is the same but using the 1.0.8 version of the bundle (so you have to rm -r vendor and composer update again), which is the one I was using when I opened this issue.\nNow, to see the actual problem, just go to the web server directory where you put the code and access the /admin path (I do it in the app_dev.php front controller); you will see the list view for the only entity configured, and on top of the template, the phrase ' Overridden template' (it means it is using the template in Aruku\\Tests\\AdminBundle). If you go to app/config.yml, comment the lines 31 and 32, and go back to the same page reloading it, you will notice the phrase is gone (it is using the default template).\nI thought of a new possible cause for this: could it be because my bundle lacks some default file or directory that Symfony uses to register the namespaces for Twig?\n. Ok, now I understand that what I have been doing with that config option is telling Symfony the templates for EasyAdmin were in my bundle's directory, and I assume that for those that I didn't overrode it goes to to parent bundle to find them. That's logical.\nBut regarding the bundle inheritance mechanism, it turns out it is mentioned in the documentation:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/v1.2.1/Resources/doc/6-customizing-new-edit-views.md#customize-the-actions-used-to-create-and-edit-entities\nSimilarly to customizing templates, you need to use the Symfony bundle inheritance mechanism to override the controller used to generate the backend.\nAlso, I think it is the only way to customize third-party bundles mentioned in Symfony documentation:\nhttp://symfony.com/doc/current/cookbook/bundles/override.html#controllers\nBut I just tried to do it how you say, do you think there is a performance improvement compared to the Symfony bundle inheritance mechanism?\nAnyway, it was all a big misunderstanding. Sorry for all the troubles and thank you for your dedication.\n. That's what I just realized, I have been so abducted by Symfony's ways that I didn't think of that basic OOP possibility. Thanks!\n. I forgot to ask when is it planned to release a tag with this change so I don't have to require dev-master in Composer.\n. That doesn't work, it also downloads 1.0.8; I solved it using dev-master#5270932, which will still require me to change the constraint in the future, but at least doesn't go any further than what I need.\nThanks anyway!\n. Of course @javiereguiluz, thanks for your hard work. Do you think maybe that big change is related to this other problem (#201) I found?\n. The only way to get it to work is making Composer to get 1dee09b and then applying manually the change fixing #198.\n. Yeah, this seems to be fixed. Thanks!\n. Yeah, this seems to be fixed. Thanks!\n. @javiereguiluz No need for apologies at all; I have downloaded the latest version but this is still happening. I'm gonna try the profiler @Pierstoval suggested and see if I can figure out what is going on.\n. @javiereguiluz No need for apologies at all; I have downloaded the latest version but this is still happening. I'm gonna try the profiler @Pierstoval suggested and see if I can figure out what is going on.\n. I haven't been able to set up blackfire.io, and using other profilers like https://github.com/arnaud-lb/php-memory-profiler I'm not able to figure anything (the app simply crashes sooner or later); I also tried the app through the prod controller to discard Symfony internal profiling, but it keeps happening.\nSince I have no idea what else to try, I'm gonna move to other backoffice bundles. I'll keep the code for easyadmin in the stash for a while to see if a solution appears for it eventually.\n. I haven't been able to set up blackfire.io, and using other profilers like https://github.com/arnaud-lb/php-memory-profiler I'm not able to figure anything (the app simply crashes sooner or later); I also tried the app through the prod controller to discard Symfony internal profiling, but it keeps happening.\nSince I have no idea what else to try, I'm gonna move to other backoffice bundles. I'll keep the code for easyadmin in the stash for a while to see if a solution appears for it eventually.\n. Just for record purposes, we fixed it; we grow the PHP memory limit and figured out why it was running out of memory: the config key form was misspelled as forms, so it didn't have any restraint on what to show making it trying to load every relationship on the entity, one of which has 36k records.\nI saw that screen working before making those checkouts I mentioned in the first post, so I guess that 's' was a typo introduced after that without me noticing it at all.\nAt least I found a plausible reason because I was running almost completely crazy and was just in the edge of giving up.\nSorry for all the trouble.\n. Just for record purposes, we fixed it; we grow the PHP memory limit and figured out why it was running out of memory: the config key form was misspelled as forms, so it didn't have any restraint on what to show making it trying to load every relationship on the entity, one of which has 36k records.\nI saw that screen working before making those checkouts I mentioned in the first post, so I guess that 's' was a typo introduced after that without me noticing it at all.\nAt least I found a plausible reason because I was running almost completely crazy and was just in the edge of giving up.\nSorry for all the trouble.\n. @xabbuh That would be the ideal solution for this kind of problem which can drive people crazy.\n. @xabbuh That would be the ideal solution for this kind of problem which can drive people crazy.\n. You're right, I was using the documentation for master without realizing that; btw, is 1.1.0 the latest stable or is it 1.0.8?\nI don't know what you mean by \"checkout the code\", but I'll paste the a fragment of the resulting HTML here:\n```\n    \n\n\n\n\n\n    <title>            Rol-Unidad DIR\n</title>\n\n                    <link rel=\"stylesheet\" href=\"/projects/unidad_mercado/src/web/bundles/easyadmin/stylesheet/bootstrap.min.css\">\n        <link rel=\"stylesheet\" href=\"/projects/unidad_mercado/src/web/bundles/easyadmin/stylesheet/font-awesome.min.css\">\n        <link rel=\"stylesheet\" href=\"/projects/unidad_mercado/src/web/bundles/easyadmin/stylesheet/admin.css\">\n                    <link rel=\"stylesheet\" href=\"/projects/unidad_mercado/src/web/bundles/umadmin/css/main.css\">\n\n<link rel=\"stylesheet\" href=\"/projects/unidad_mercado/src/web/bundles/easyadmin/stylesheet/bootstrap-toggle.min.css\">\n\n\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"/favicon.png\">\n\n                <script src=\"/projects/unidad_mercado/src/web/bundles/ajax/js/jquery/jquery-1.11.0.min.js\"></script>\n        </head>\n\n```\n. Thanks @Pierstoval, that's what I thought.\nI just found the problem: my overridden layout.html.twig is the one from just before this commit 7334d4d.\nSorry for all the troubles!\n. Then how would you do it without using is_granted()? With an expression?\n. Thanks, I'll try to fix that.\n. Shouldn't it be if item.role is defined or is_granted(item.role)?\nThe way you say it still crash when the entity doesn't have the role defined.\nI figured out the right way to apply it to this foreach filter:\nif item.role is not defined or is_granted(item.role)\nThat way it wouldn't crash it the role is not defined and it will still work when it is.\nThanks!\n. Done with security.authorization_checker. Thanks again!\n. We can add the correspondent check for an empty string, but I think it's not necessary because the developer will see the 403 and then go check the config.yml file.\n. ",
    "teclliure": "Ok, thanks very much. I will put catal\u00e0-valenci\u00e0 translation in my TODO list ;-)\n. ",
    "Zelfrost": "@javiereguiluz My pleasure ! Thank you for your work :)\n. ",
    "ConneXNL": "In his comment he does mention that \"Business code will be in one component folder\". The problem I see, is that contributing to a system where everything is waved into each other, is a lot harder than contributing to a single component.\nThe maintainer of the project will obviously know all the ins and outs, but as the code gets bigger it will become near impossible for others to know understand the architecture. By splitting things into components that do one thing very well, is the main reason Symfony itself got so big. I hope this philosophy will at some point be used for admin related code too.\n. In his comment he does mention that \"Business code will be in one component folder\". The problem I see, is that contributing to a system where everything is waved into each other, is a lot harder than contributing to a single component.\nThe maintainer of the project will obviously know all the ins and outs, but as the code gets bigger it will become near impossible for others to know understand the architecture. By splitting things into components that do one thing very well, is the main reason Symfony itself got so big. I hope this philosophy will at some point be used for admin related code too.\n. ",
    "sylvaincombes": "In fact on the edit view this \"empty\" value will yield an critical error :\nCRITICAL - Uncaught PHP Exception Symfony\\Component\\Form\\Exception\\TransformationFailedException: \"Unable to transform value for property path \"[date]\": This year is invalid\"\nIt seems that \"empty\" date / datetime values like 0000-00-00 00:00:00 or NULL values aren't properly handled. I don't know if it's easy admin related or symfony form related right now.\n. In fact on the edit view this \"empty\" value will yield an critical error :\nCRITICAL - Uncaught PHP Exception Symfony\\Component\\Form\\Exception\\TransformationFailedException: \"Unable to transform value for property path \"[date]\": This year is invalid\"\nIt seems that \"empty\" date / datetime values like 0000-00-00 00:00:00 or NULL values aren't properly handled. I don't know if it's easy admin related or symfony form related right now.\n. ",
    "guillermogfer": "Great to see you are working in the customization of the visual design of the backend! \nI am starting a project with a strong and relatively complex backend and testing some Symfony2 admin generators. EasyAdminBundle is the cleanest and quickiest bundle by far, but lacks some customizations we need (we are currently migrating projects from Symfon 1.4 built with the great admin generator).\nNow we've received great news with your release of custom actions and full action customization, it's simply awesome!\nI'm looking forward to testing this visual customization you are working on and throw away Sonata hehe.\nGreat job!\n. Great to see you are working in the customization of the visual design of the backend! \nI am starting a project with a strong and relatively complex backend and testing some Symfony2 admin generators. EasyAdminBundle is the cleanest and quickiest bundle by far, but lacks some customizations we need (we are currently migrating projects from Symfon 1.4 built with the great admin generator).\nNow we've received great news with your release of custom actions and full action customization, it's simply awesome!\nI'm looking forward to testing this visual customization you are working on and throw away Sonata hehe.\nGreat job!\n. Sorry, I haven't express myself very well. We are very focused on building backends, some of them are complex but not all, we are working on a wide range of complexity. But what I wanted to say, it's that your recent custom actions incorporation solved almost the whole thing in an incoming project we have in hands, so we'll definitely use EasyAdmin to build it. \nThere are some others that I think with a bit of customization in the visual part we could make with this too. And of course there are more complex backends that have to use Sonata because is tremendously powerful but also a nightmare of configurations.\nDon't want to divert this discussion, just want to provide feedback from people using this cool stuff in real backend projects.\nYou are doing really great! (and saving our lifes hehe)\n. Sorry, I haven't express myself very well. We are very focused on building backends, some of them are complex but not all, we are working on a wide range of complexity. But what I wanted to say, it's that your recent custom actions incorporation solved almost the whole thing in an incoming project we have in hands, so we'll definitely use EasyAdmin to build it. \nThere are some others that I think with a bit of customization in the visual part we could make with this too. And of course there are more complex backends that have to use Sonata because is tremendously powerful but also a nightmare of configurations.\nDon't want to divert this discussion, just want to provide feedback from people using this cool stuff in real backend projects.\nYou are doing really great! (and saving our lifes hehe)\n. ",
    "Flushdrew": "Yes. I haven't any default options like the first post\n. Hello. How can i use a drag&drop area to upload \u00e0 file please ? \n. ",
    "rubengc": "The menu part would be awesome\nI'm expecting it impatiently ^^\nAbout the theme option would be interesting add support to register themes from bundles (adding theme CSS and js files and overriding the templates by default)\nSomething about this are planned? Because I'm thinking on doing a admin lte and materialize themes\n. Setting the label to false doesn't works too\n. Setting the label to false doesn't works too\n. Thanks @javiereguiluz \nWhen will merged this PR?\n. The issue has been fixed, thanks EA team\n. thanks you all for the participation\n@Pierstoval about the tfoot search (and the global search) via AJAX I think it's something obligatory so that searches are fast and do not despair user. Refresh the page in every search is quite rudimentary.\nAbout links groups, I mean a multievel navigation, usually this is a collapsible menu items that contains more menu items\n@javiereguiluz I had not noticed that highlight was already implemented, sorry\n@ogizanagi sure there is a way to capture these errors via javascript and active force the navigation to the first tab with errors (I have been implemented something like this, but with my custom validation system)\n. thanks you all for the participation\n@Pierstoval about the tfoot search (and the global search) via AJAX I think it's something obligatory so that searches are fast and do not despair user. Refresh the page in every search is quite rudimentary.\nAbout links groups, I mean a multievel navigation, usually this is a collapsible menu items that contains more menu items\n@javiereguiluz I had not noticed that highlight was already implemented, sorry\n@ogizanagi sure there is a way to capture these errors via javascript and active force the navigation to the first tab with errors (I have been implemented something like this, but with my custom validation system)\n. Why not something more flexible?\nThis displays a box with two tabs (Default and Anvaced)\nyml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                 tabs:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\nThis display two boxes, the first with title Product and a tabbed form. The second box displays a normal form with title. This allow to configure css class of each box and include an option to hide tittle.\nyml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                 blocks:\n                     Product:\n                         tabs:\n                             Default: ['id', 'name', 'price', 'ean']\n                             Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\n                         css_class: 'col-lg-8 col-md-12'\n                         title: false\n                     Store:\n                         fields: ['location', 'stock']\n                         css_class: 'col-lg-4 col-md-12'\n. Why not something more flexible?\nThis displays a box with two tabs (Default and Anvaced)\nyml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                 tabs:\n                      Default: ['id', 'name', 'price', 'ean']\n                      Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\nThis display two boxes, the first with title Product and a tabbed form. The second box displays a normal form with title. This allow to configure css class of each box and include an option to hide tittle.\nyml\neasy_admin:\n    entities:\n        Product:\n            class: AppBundle\\Entity\\Product\n            label: 'Products'\n            edit:\n                 blocks:\n                     Product:\n                         tabs:\n                             Default: ['id', 'name', 'price', 'ean']\n                             Advanced: { default: true, fields: ['enabled', 'createdAt', 'tags']}\n                         css_class: 'col-lg-8 col-md-12'\n                         title: false\n                     Store:\n                         fields: ['location', 'stock']\n                         css_class: 'col-lg-4 col-md-12'\n. @ogizanagi a backend is only simple the first few hours of development\na customer begins taking only some basic information such as name, contact details and address (or addresses). After going to have a group, tags, states, etc. And finally it happens to have billing and shipping address and billing address, payment preferences, bank details etc\nWith a simple blog post the same thing happens, it begins with a title, a date and content. Then needs to be categorized with groups or categories, tags, states, etc. And finally you will need more specific parameters such as meta tags for seo, display options, etc.\nMany times I have fallen into the same mistake as your, \"This backend will be very simple\", \"It will not take many fields\", \"I will not need to configure many things\"\nBut in the developing world you can always improve each application and what the customer and the developers will want, a powerful and flexible application\nI think as options to define your own blocks or sort the contents of the way you want (such as tabs), will give a greater usability to EasyAdmin\n. @ogizanagi I think @javiereguiluz needs keep the ease of configuration but not to stay in the simplicity\nwhether for any basic feature you need override templates and/or controllers, I believe that the package loses its name prefix\nso my vote in this discussion would be: easy YES, simple NO\n. I have been thinking about this feature and with adding groups to fields, anyone have the possibility to customize easily any view (with tabs, boxes, collapsible, etc)\nSo, add second proposal for new, edit and show views is viable?\nI really want this feature because long forms and show views without property groups is taken to me a great problem\n. I have been thinking about this feature and with adding groups to fields, anyone have the possibility to customize easily any view (with tabs, boxes, collapsible, etc)\nSo, add second proposal for new, edit and show views is viable?\nI really want this feature because long forms and show views without property groups is taken to me a great problem\n. EasyAdmin has been evolved so much this weeks with the menu feature and AdminLTE\n@javiereguiluz are you planning on develop this feature in next weeks?\n. the CSS object-fit attribute can be the solution in each views\n. Would be interesting add a configurable login/register template that adds the typical sf login check, not only for fosuser, something that can handle an entity configured fields to display an easyadmin generated login view\n. I do not understand why anyone will want merge javascript with php\nIf I want implement ckeditor or summernote or a datepicker or any component from javascript, I will add a contructor based on their class (like .ckeditor or .editor) in my javascript files\nReally is necessary add a bundle for a simple component?\nI think will be more important the coverage to more complex bundles (fosuser, phpcr, etc)\nSelect2 is different, he covers a common needle that you can't cover by any html5 component and is excellent to cover relationships\n. @javiereguiluz a posible solution could be:\n1 - Add a datepicker extension (I vote for a raw jquery library and support it by default not a bundle)\n2 - Like select2, match everything with data-widget=\"datepicker\" and initialize the plugin (More simple than a custom form type)\n. so, the label option for checkboxes doesn't works?\n. I have been tested with lastest version and not, label doesn't works on checkboxes\n. I have been fixed it with this config:\nyml\n- { property: active, type_options: {label: \"Activo\"} }\n. Thanks @yceruto\nI will test it\nEdit: I have been tested some posible solutions, but none of them work\nI will test the prepend extension and if this works I will pull the changes\n. thanks @javiereguiluz for the PR\n. Thanks @javiereguiluz easyadmin is turning evary day in a more awesome bundle\n. Thanks @javiereguiluz easyadmin is turning evary day in a more awesome bundle\n. In my opinion the part configuration that covers 90% of the file is the configuration of entities\nSo in the first instance to cover the separation of this part of the configuration would reduce considerably the lines of the file and in the future implement more options (such as adding an entity completely from his bundle and that affected the menu if this was loaded or not, or separates the design option)\n. nice work @anboto !\n. @javiereguiluz this sounds awesome and I think this config can resolve any need\nI love this feature\n. +1 to change to admin lte\nIt has an active development and is a robust and flexible theme\nYou will need so much time to get the same goal that admin lte has\nI have been worked with him in three complex backends and the result was amazing\n. 1 hour later...\n\n. 1 hour later...\n\n. Oh, are you working on this too? Well all my work to the trash :disappointed: and wait to your PR :smile:\n. Oh, are you working on this too? Well all my work to the trash :disappointed: and wait to your PR :smile:\n. haha no problem @javiereguiluz sure your work is much better\nReally I want this change, but maintaining your responsive tables (that was an awesome feature)\n. haha no problem @javiereguiluz sure your work is much better\nReally I want this change, but maintaining your responsive tables (that was an awesome feature)\n. Of course!\n``` yml\napp/config/easy_admin.yml\nPolicy:\n            class: AppBundle\\Entity\\Policy\n            label: \"Polizas\"\n            form:\n                fields:\n                    - { property: reference, label: \"N\u00ba de poliza\" }\n                    - { property: vehicle, label: \"Veh\u00edculo\", type: 'AppBundle\\Form\\Type\\VehicleType' } # Vehicle has reference property too\n```\nThe form type:\n``` php\n<?php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nclass VehicleType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add(\n                'reference',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Matr\u00edcula',\n                    'trim'     => true,\n                )\n            )\n            ->add(\n                'trademark',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Marca',\n                    'trim'     => true,\n                )\n            )\n            ->add(\n                'model',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Modelo',\n                    'trim'     => true,\n                )\n            ) ;\n    }\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class'      => 'AppBundle\\Entity\\Vehicle',\n        'intention'       => 'vehicle'\n    ));\n}\n\n}\n```\nThe twig of this field\ntwig\n{% block vehicle_widget %}\n    {#\n        {{ form_widget(form) }} Need fix, renders always an empty field at start of the form\n    #}\n    {{ form_row(form.reference) }}\n    {{ form_row(form.trademark) }}\n    {{ form_row(form.model) }}\n{% endblock %}\n. Of course!\n``` yml\napp/config/easy_admin.yml\nPolicy:\n            class: AppBundle\\Entity\\Policy\n            label: \"Polizas\"\n            form:\n                fields:\n                    - { property: reference, label: \"N\u00ba de poliza\" }\n                    - { property: vehicle, label: \"Veh\u00edculo\", type: 'AppBundle\\Form\\Type\\VehicleType' } # Vehicle has reference property too\n```\nThe form type:\n``` php\n<?php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nclass VehicleType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add(\n                'reference',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Matr\u00edcula',\n                    'trim'     => true,\n                )\n            )\n            ->add(\n                'trademark',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Marca',\n                    'trim'     => true,\n                )\n            )\n            ->add(\n                'model',\n                null,\n                array(\n                    'required' => false,\n                    'label'    => 'Modelo',\n                    'trim'     => true,\n                )\n            ) ;\n    }\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class'      => 'AppBundle\\Entity\\Vehicle',\n        'intention'       => 'vehicle'\n    ));\n}\n\n}\n```\nThe twig of this field\ntwig\n{% block vehicle_widget %}\n    {#\n        {{ form_widget(form) }} Need fix, renders always an empty field at start of the form\n    #}\n    {{ form_row(form.reference) }}\n    {{ form_row(form.trademark) }}\n    {{ form_row(form.model) }}\n{% endblock %}\n. @Pierstoval the same, but with an empty field at start\n. @Pierstoval the same, but with an empty field at start\n. I continue with this problem, if I have more than one field with the same name (but in differents entities)\neasy admin use the first label\nI have been researching a bit more, if you dump each field, the label in vars is correctly, but I don't know why I got this error on rendering\n. I have been found something\nRender directly the form works well, the problem is in collections, in the data-prototype attr the label was the first reference\nEdit: Render directly doesn't works too, my bad\n. I have been found something\nRender directly the form works well, the problem is in collections, in the data-prototype attr the label was the first reference\nEdit: Render directly doesn't works too, my bad\n. the problem comes from form_row function\nif you render them separetly works\ntwig\n{{ form_row(form.reference) }} {# prints 'my.reference' #}\n{{ form_row(form.child.reference) }} {# prints  'my.reference' #}\ntwig\n{{ form_label(form.reference) }} {# prints  'my.reference' #}\n{{ form_label(form.child.reference) }} {# prints  'child.reference' #}\n. Finally I found something!\nMaking dumps inside some blocks of layout I found something inside form_row()\nFields under my custom type always return null on easyadmin.field except fields that matches with already defined in easyadmin configuration\nSo following how easyadmin assings this information I found that error comes from the form extension:\nphp\n// line 64\n'field' => isset($fields[$view->vars['name']]) ? $fields[$view->vars['name']] : null,\n. Finally I found something!\nMaking dumps inside some blocks of layout I found something inside form_row()\nFields under my custom type always return null on easyadmin.field except fields that matches with already defined in easyadmin configuration\nSo following how easyadmin assings this information I found that error comes from the form extension:\nphp\n// line 64\n'field' => isset($fields[$view->vars['name']]) ? $fields[$view->vars['name']] : null,\n. A quick solution\nphp\n'field' => (isset($fields[$view->vars['name']]) and $view->parent->parent == null) ? $fields[$view->vars['name']] : null,\nthe parent of $view is the main form and this hasn't any parent, so if $view is a child of a field has this field as parent and the form as parent of the field \n. A quick solution\nphp\n'field' => (isset($fields[$view->vars['name']]) and $view->parent->parent == null) ? $fields[$view->vars['name']] : null,\nthe parent of $view is the main form and this hasn't any parent, so if $view is a child of a field has this field as parent and the form as parent of the field \n. Awesome? ... Amazing! Beautiful! Incredible!\nSay good bey to all about you think about admin development and say hello to the future!\nEasyadmin is here baby!\nThat's can replace the current description of the project right? XD\n. Awesome? ... Amazing! Beautiful! Incredible!\nSay good bey to all about you think about admin development and say hello to the future!\nEasyadmin is here baby!\nThat's can replace the current description of the project right? XD\n. Amazing work @javiereguiluz really\n. Amazing work @javiereguiluz really\n. About point 6\n@SebTM means that in list view, actions appear in order: Edit - Delete - Show\nI have been triyed to apply a different order (Show - Edit - Delete) but doesn't works\n. About point 6\n@SebTM means that in list view, actions appear in order: Edit - Delete - Show\nI have been triyed to apply a different order (Show - Edit - Delete) but doesn't works\n. see this PR 4841bc025f193158ee440ea64fc8eb6e104bfa86\nIt fix your point 6 (and adds custom order configuration as extra)\n. see this PR 4841bc025f193158ee440ea64fc8eb6e104bfa86\nIt fix your point 6 (and adds custom order configuration as extra)\n. I load my bundle after easyadmin\nphp\n$bundles = [\n            //...\n            new JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle(),\n            //...\n            new UserBundle\\UserBundle(),\n        ];\nI will try with the prepend extension\n. I load my bundle after easyadmin\nphp\n$bundles = [\n            //...\n            new JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle(),\n            //...\n            new UserBundle\\UserBundle(),\n        ];\nI will try with the prepend extension\n. With prepends works:\n``` php\n<?php\nnamespace UserBundle\\DependencyInjection;\nuse Symfony\\Component\\Config\\FileLocator;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\DependencyInjection\\Extension\\Extension;\nuse Symfony\\Component\\DependencyInjection\\Extension\\PrependExtensionInterface;\nuse Symfony\\Component\\DependencyInjection\\Loader\\YamlFileLoader;\nclass UserExtension extends Extension implements PrependExtensionInterface\n{\n    public function load(array $configs, ContainerBuilder $container)\n    {\n        //..\n    }\npublic function prepend(ContainerBuilder $container)\n{\n    $loader = new YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));\n    $loader->load('super_admin.yml');\n}\n\n}\n```\nOne more question and after i will close this issue, Can I get doctrine from the prepend method? I want to apply different yml config depending of the user role\n. With prepends works:\n``` php\n<?php\nnamespace UserBundle\\DependencyInjection;\nuse Symfony\\Component\\Config\\FileLocator;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\DependencyInjection\\Extension\\Extension;\nuse Symfony\\Component\\DependencyInjection\\Extension\\PrependExtensionInterface;\nuse Symfony\\Component\\DependencyInjection\\Loader\\YamlFileLoader;\nclass UserExtension extends Extension implements PrependExtensionInterface\n{\n    public function load(array $configs, ContainerBuilder $container)\n    {\n        //..\n    }\npublic function prepend(ContainerBuilder $container)\n{\n    $loader = new YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));\n    $loader->load('super_admin.yml');\n}\n\n}\n```\nOne more question and after i will close this issue, Can I get doctrine from the prepend method? I want to apply different yml config depending of the user role\n. @Pierstoval Can you explain it a bit more?\nI was search about event listener, but anything about I want (load config on request created)\n. @Pierstoval Can you explain it a bit more?\nI was search about event listener, but anything about I want (load config on request created)\n. @Pierstoval I have been read your comment, but I want to change everything in the panel (the menu has differents dashboards) it is not only about permissions\nIs impossible update a configuration inside the container?\n. Finally for some customizations that I need I have been override some templates, and I my own configuration parser from twig\nAn example:\n``` php\n<?php\nnamespace UserBundle\\Twig;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\ActionConfigPass;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\DefaultConfigPass;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\NormalizerConfigPass;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\PropertyConfigPass;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\ViewConfigPass;\nuse Symfony\\Bridge\\Doctrine\\RegistryInterface;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorage;\nuse Symfony\\Component\\Yaml\\Yaml;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\MenuConfigPass;\nclass UserTwigExtension extends \\Twig_Extension\n{\n    protected $tokenStorage;\npublic function __construct(TokenStorage $tokenStorage)\n{\n    $this->tokenStorage = $tokenStorage;\n}\n\npublic function getFunctions()\n{\n    return array(\n        'getMenuConfig' => new \\Twig_Function_Method($this, 'getMenuConfiguration'),\n    );\n}\n\npublic function getMenuConfiguration() {\n    return $this->processConfiguration($this->readConfiguration())[\"design\"][\"menu\"];\n}\n\npublic function readConfiguration() {\n    $role = strtolower(str_replace(\"ROLE_\", \"\", $this->tokenStorage->getToken()->getUser()->getRole()));\n    return Yaml::parse(file_get_contents(__DIR__.'/../Resources/config/'.$role.'.yml'))[\"easy_admin\"];\n}\n\npublic function processConfiguration($backendConfiguration) {\n    if(!isset($backendConfiguration[\"disabled_actions\"]))\n        $backendConfiguration[\"disabled_actions\"] = array();\n\n    foreach(array_keys($backendConfiguration[\"entities\"]) as $entity) {\n        if(!isset($backendConfiguration[\"entities\"][$entity][\"disabled_actions\"]))\n            $backendConfiguration[\"entities\"][$entity][\"disabled_actions\"] = array();\n\n        if(!isset($backendConfiguration[\"entities\"][$entity][\"properties\"]))\n            $backendConfiguration[\"entities\"][$entity][\"properties\"] = array();\n    }\n\n    $configPasses = array(\n        new NormalizerConfigPass(),\n        new MenuConfigPass(),\n        new DefaultConfigPass(),\n    );\n\n    foreach ($configPasses as $configPass) {\n        $backendConfiguration = $configPass->process($backendConfiguration);\n    }\n\n    return $backendConfiguration;\n}\n\npublic function getName()\n{\n    return 'lol';\n}\n\n}\n```\nEdit: thanks @Pierstoval  and @javiereguiluz for your time\n. Ok, thanks @Pierstoval \na simple $('form .checkbox input').bootstrapToggle(); and include the css and js files solves it\n. I can confirm this before are working and now no\nEdit: I am getting this problem with a ManyToOne\nSo, this occurs always from a select2 multiple\n. And replacing this in form options inside the configurator doesn't fix it?\nEasyAdminBundle\\Form\\Type\\Configurator\\CheckboxTypeConfigurator.php\nphp\n//...\n$options['label'] = $metadata['label'];\n//...\nEdit: Another problem that I have with my custom configuration loader is with the EntityTypeConfigurator, because in not required fields always throw an error about undefined index 'required', and when I update easyadmin, I need to fix this file every time\nEasyAdminBundle\\Form\\Type\\Configurator\\EntityTypeConfigurator.php\nphp\n        // Configure \"placeholder\" option for entity fields\n        if (($metadata['associationType'] & ClassMetadata::TO_ONE)\n            && !isset($options[$placeHolderOptionName = $this->getPlaceholderOptionName()])\n            && isset($options['required']) // This fixes the problem\n            && false === $options['required']\n        ) {\n            $options[$placeHolderOptionName] = 'form.label.empty_value';\n        }\n. And replacing this in form options inside the configurator doesn't fix it?\nEasyAdminBundle\\Form\\Type\\Configurator\\CheckboxTypeConfigurator.php\nphp\n//...\n$options['label'] = $metadata['label'];\n//...\nEdit: Another problem that I have with my custom configuration loader is with the EntityTypeConfigurator, because in not required fields always throw an error about undefined index 'required', and when I update easyadmin, I need to fix this file every time\nEasyAdminBundle\\Form\\Type\\Configurator\\EntityTypeConfigurator.php\nphp\n        // Configure \"placeholder\" option for entity fields\n        if (($metadata['associationType'] & ClassMetadata::TO_ONE)\n            && !isset($options[$placeHolderOptionName = $this->getPlaceholderOptionName()])\n            && isset($options['required']) // This fixes the problem\n            && false === $options['required']\n        ) {\n            $options[$placeHolderOptionName] = 'form.label.empty_value';\n        }\n. +1 for this feature\n. this PR will be merged?\n. this PR will be merged?\n. Well I have been solved this adding a repository dynamic call inside EasyAdminFormType:\n``` php\n// EasyAdminBundle/Form/Type/EasyAdminFormType.php\n//...\nclass EasyAdminFormType extends AbstractType\n{\n    //...\n    protected $repository_function;\n    protected $repository_arguments;\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    //...\n    foreach ($entityProperties as $name => $metadata) {\n       //...\n        if(isset($metadata[\"repository\"])) {\n            $this->repository_function = $metadata[\"repository\"][\"function\"];\n            $this->repository_arguments = $metadata[\"repository\"][\"params\"];\n            $formFieldOptions[\"query_builder\"] = function ($repository) {\n                return call_user_func_array(array($repository, $this->repository_function), $this->repository_arguments);\n            };\n        }\n\n        $formFieldType = $this->useLegacyFormComponent() ? $metadata['fieldType'] : $this->getFormTypeFqcn($metadata['fieldType']);\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n//...\n```\n``` yml\neasy_admin.yml\neasy_admin:\n    entities:\n        BlogPost:\n            class: AppBundle\\Entity\\BlogPost\n            form:\n                fields:\n                    #...\n                    - { property: category, type_options: {required: true}, repository: {function: 'findAllByUsers', params: ['this could be optional', 'but arguments are awesome']} }\n```\n``` php\n// AppBundle/Repository/CategoryRepository.php\n//...\nclass CategoryRepository extends \\Doctrine\\ORM\\EntityRepository\n{\n    public function findAllByUsers($param1, $param2)\n    {\n        // do stuff\n        // important: needs return a queryBuilder object\n        $qb = $this->createQueryBuilder('c');\n        return $qb->->where('c.user = '$param1);\n    }\n}\n```\nEdit: I have been post basically the concept of this, of course I will need send the user id as parameter\nBut would be interesting that easyadmin support repository function calls\n. If @javiereguiluz not think it necessary to include this feature, It can be closed\n. If @javiereguiluz not think it necessary to include this feature, It can be closed\n. :+1: \n. :+1: \n. haha sorry, and fixed\n. haha sorry, and fixed\n. thanks @javiereguiluz but why only assigns a custom name over Sinister entity and not to Expedient too?\n. Why not a go back button? \nhtml\n<a href=\"javascript:void(0)\" onclick=\"window.history.back();\">Go back</a>\n. @pierstoval I have been implemented yet, I'm asking about use this way as default, but thanks for the clarification\n@sebtm yeah, the usage of secure routing is one of the advantages of this change\n. @pierstoval I have been implemented yet, I'm asking about use this way as default, but thanks for the clarification\n@sebtm yeah, the usage of secure routing is one of the advantages of this change\n. @Pierstoval you can do everything manually, included the entire bundle, but we have to think about reducing the obvious shortcomings that anyone will need to modify\n. As commented by @javiereguiluz (comment here)\nHe open my eyes, generate routes can lead to errors\nBesides the route it is not an essential part and usually nobody usually look at it\n. I hav been implemented this on my project, is easy, but I not think it's good idea implement this as default, since it is possible that many want to implement their own widgets\nIf is possible, an implementation of attr [data-widget='toggle'] or a custom param widget: 'toggle' to resolve this (and future widgets)\nThis discussion can open another such as select2 as default and about the complexity of reduce the charge to the database implementig an ajax version of this component\n. nice @ogizanagi \nso this has been fixed completly?\n. This code is a quickly sketch, I have been proposed this but this feature needs  @javiereguiluz approval\n. And about make this a parallel development as an extension un functionality for easyadmin?\nEdit: We can call it EasyDatatablesBundle (Easy prefix to identificate bundles for easyadmin)\n. @mkalisz77 really you dont need this bundle, the implementation of datatables isn't hard and can be accomplished easily\nI have been proposed this because datatables are really powerfull extension for every admin panel, and I like to know if is an accepted feature to get this by default or if you like to get this as extension of easyadmin\n. I found only one template that works, I will describe everything:\nI did two templates, one for an entity (OneToOne) and the another for a field of this entity (an array)\nThe template for the entity doesn't works, but the ones for his field works:\nEntity: Sinister - OneToOne -> SinisterImplicated (field circumstances(array))\nIn TemplateConfigPass I got this values:\nlabel_sinister_implicated\neasy_admin/label_sinister_implicated.html.twig\nlabel_sinister_implicated_circumstances\neasy_admin/label_sinister_implicated_circumstances.html.twig\nResults in show view:\n```\n// SinisterImplicated, expected easy_admin/label_sinister_implicated.html.twig\nshow => [\n....\nsinisterImplicated => [ css_class => col-sm-4 clear, format => null, help => null, label => Implicado, type => association, fieldType => entity, dataType => association, virtual => false, sortable => true, template => easy_admin/label_sinister_implicated.html.twig, type_options => [], fieldName => sinisterImplicated, joinColumns => [ 0 => [ name => sinisterImplicated, unique => false, nullable => true, onDelete => null, columnDefinition => null, referencedColumnName => id ] ], cascade => [ 0 => persist ], inversedBy => null, targetEntity => AppBundle\\Entity\\SinisterImplicated, fetch => 2, mappedBy => null, isOwningSide => true, sourceEntity => AppBundle\\Entity\\Sinister, isCascadeRemove => false, isCascadePersist => true, isCascadeRefresh => false, isCascadeMerge => false, isCascadeDetach => false, sourceToTargetKeyColumns => [ sinisterImplicated => id ], joinColumnFieldNames => [ sinisterImplicated => sinisterImplicated ], targetToSourceKeyColumns => [ id => sinisterImplicated ], orphanRemoval => false, associationType => 2, property => sinisterImplicated ]\n....\n]\n// Renders the ID of this entity\n```\n```\n// SinisterImplicated.circumstances, expected easy_admin/label_sinister_implicated_circumstances.html.twig\nshow => [\n...\nsinisterImplicatedCircumstances => [ css_class => sinister-implicated-circumstances col-sm-2, format => null, help => null, label => Circunstancias, type => text, fieldType => null, dataType => text, virtual => true, sortable => false, template => easy_admin/label_sinister_implicated_circumstances.html.twig, type_options => [], columnName => sinisterImplicatedCircumstances, fieldName => sinisterImplicatedCircumstances, id => false, length => null, nullable => false, precision => 0, scale => 0, unique => false, property => sinisterImplicatedCircumstances ]\n...\n]\n// Renders the field perfectly\n```\nI have another templates (to phone numbers, email anchors, etc) and all of them doesnt work (in new and edit view works)\nEdit: Dumping metada field in show.html.twig the templates appears correctly\n. in JavierEguiluz\\Bundle\\EasyAdminBundle\\Twig\\EasyAdminTwigExtension is where i got the error\n$fieldMetadata['template'] contains the correct template, but my field is rendered here:\n``` php\nif ('association' === $fieldType) {\n                $targetEntityConfig = $this->configurator->getEntityConfigByClass($fieldMetadata['targetEntity']);\n                if (null === $targetEntityConfig) {\n                    // the associated entity is not managed by EasyAdmin\n                    return $twig->render($entityConfiguration['templates']['field_association'], $templateParameters);\n                }\n            $isShowActionAllowed = $this->isActionEnabled($view, 'show', $targetEntityConfig['name']);\n        }\n\n```\n. :+1: \nSearches in list view doesnt works too, I got always all entries as search result in all entities \nIf you like I can open another issue\n. You can find information here about easyadmin field configuration:\n4 Vews and actions\nAn you will need know what ChoiceType Field requires\n. By default easyadmin configures every entity field as a select2 so I think some extra parameter to field definition could transform it into an ajax version of this plugin\nExample one:\nyml\nform:\n    - { property: 'user', autocomplete: true }\nExample two:\nyml\nform:\n    - { property: 'user', ajax: true }\nFrom controller we can implement something like searchAction() for this component (where you can override him or the createSearchQueryBuilder())\nSelect2 allow paginations (a results lazy load when user scroll to bottom) so could work too using pagination\n. I don't use the default theme that brings EasyAdmin but for some time I wanted to comment you some errors I had found\nOne was the suppression of charging method you have and move it to less php and generate css files manually (or through implementing something on asset:install command)\nanother problem he had was the use of opacity to lighten the color of buttons and links that caused blurred text (tested on chrome and edge) with the implementation of less php would solve this and there methods to obtain these colors\n. ",
    "mrkoch": "@javiereguiluz yes, the backend doesn't load the css, and in the browser console I have the not found error message for the admin.css. I have updated the bundle in the morning because i have read the very intersting \"Design\" future in the new version 1.2.0. So i switch my admin panel from V1.0.0 to 1.2.0 and now I see no css formatted page. All the files in the bundles are fine, and the controller have the new method implemented in. Maybe i forgot some configuration, cache problem, permission on the destination render folder for admin css file, some problem with the update procedure??? I don't know :(\nThis is my configuration:\n``` yaml\neasy_admin:\n    design:\n        color_scheme: 'light'\n    site_name: 'Nords Control Panel'\n    entities:\n    Projects: \n        label: 'Projects'\n        class: Nords\\ConsoleBundle\\Entity\\Project\n        list:\n            title: \"Most recent customers\"\n            actions:\n                ['delete']\n\n    Users:\n        label: 'Users'\n        class: Nords\\ConsoleBundle\\Entity\\User\n        list:\n            actions:\n                ['delete']\n\n    Departments:\n        label: 'Departments'\n        class: Nords\\ConsoleBundle\\Entity\\Department\n        list:\n            actions:\n                ['delete']\n\n    Roles:\n        label: 'Roles'\n        class: Nords\\ConsoleBundle\\Entity\\Role\n\n```\nThanks\nD.\n. @javiereguiluz \nHi Javier, I found the error, in my priviously project I created a custom view in the app/Resources/EasyAdminBundle that ovveride the layout.html.twig and that include the old admin.css, deleting this file my project work fine. \nThanks for your support\nD.\n. ",
    "arukado-sama": "I also want to fix this issue. When I try to create a user in easy-admin I got this:\nNeither the property \"id\" nor one of the methods \"addId()\"/\"removeId()\", \"setId()\", \"id()\", \"__set()\" or \"__call()\" exist and have public access in class \"Groupware\\UserBundle\\Entity\\User\"\nI'm using FOSUser too. I tried your fix by overriding the controller in my bundle: \"Groupware\\UserBundle\\Controller\\EasyAdminController\". But sadly it doesn't work, same error message.\n. My entity is already configured and works, only the user creation with easy-admin didn't work.\nHere is my id:\n/**\n   * @ORM\\Column(name=\"id\", type=\"integer\", options={\"unsigned\":true}, nullable=false, length=10)\n   * @ORM\\Id\n   * @ORM\\GeneratedValue(strategy=\"AUTO\")\n   */\n  protected $id;\nI just created setId and getId methods and now it works. I also added the createNewUserEntity function.\n. In fact I did it, it was to test easy-admin bundle at beginning, I'll correct this mistake.\n. Does the feature actually work? It seems I have a problem with it because the \"return to previous page\" link tries to redirect me with absolute path, fusing it with the root link of easyadmin:\nThe requested URL /Symfony/web/app_dev.php/admin//Symfony/web/app_dev.php/admin/?view=list&action=search&entity=CE_Commande&sortField=id&sortDirection=DESC&page=1&query=2278 was not found on this server.\nDon't know if it's a problem with my namespaces or something.\n. I'm still a beginner so I have no idea but @javiereguiluz will know.\n. Nevermind, I solved the issue! Can be useful so I give here the solution:\napp.request.get('entity') to retrieve entity name in string format\n. In fact this is what I used, sort of, thanks!\n. For this example:\n- 1 client has 1 project\n- 1 project belongs to one or multiple clients\nThis is not my real database, just an example to show what I need.\n. Client:\n- integer: id\n- string: name\n- integer: number\n- integer: project_id\nProject:\n- integer: p_id\n- string: project_name\n. Thanks for your answer, it gives me a lot of ideas but sadly this isn't what I need now (but I'll need it later for sure). At the moment I only need to show a field from an other entity (not clickable) but I don't know where and how to start with it. Maybe I have to modify the list twig file for each entity.\n. Nevermind, seems that it's what I'm searching for. I just have to learn how to use OneToOne, ManyToOne etc.\nThanks again for helping me.\n. I'm kind of blocked, I don't really understand how it works.\nHere is what I have.\nClient:\n- cat_id (integer)\nCategory:\n- id (integer)\n- name (string)\nA client has 1 category. Multiple clients can have this category.\nI want to display the name of the client category in the client table. For now I have a ManyToOne relation on cat_id. Don't know if it's the right thing to do.\n. Thanks for this explanation, but I already have a database and the Client table contains the cat_id for each client. There is a lot of clients so write the category for each would be a terrible waste of time. Do you think there is a way to show category name with only the cat_id in Client entity ?\nMaybe I misunderstand, sorry for that.\n. Sorry for off-topic.\nI'm still a beginner at doctrine and the company gave me the complete database and I can't modify it.\nI tried your solution but I got this error when I tried to validate:\n* The referenced column name 'id' has to be a primary key column on the target entity class 'Groupware\\CreativeBundle\\Entity\\ClientCategory'.\nThe id is already a primary key in ClientCategory. Here is what I did in Client entity:\n/**\n   * @var ClientCategory\n   * @ORM\\ManyToOne(targetEntity=\"ClientCategory\")\n   * @ORM\\JoinColumn(name=\"cat_id\")\n   */\n  protected $catId;\nEDIT: Maybe there is an easier solution by editing easy-admin list view for the Client entity?\n. I added the missing option. Null fields (N/A) correctly appear but it's empty when it's not null:\n\n. Do you mean the getCatId getter in Category entity? Or something else?\n. It doesn't seem to change anything. It shows me again null fields but not the fields with values.\nHere is my configuration:\nCE_Client:\n            class: Groupware\\CreativeBundle\\Entity\\Client\n            label: CE Client\n            list:\n                fields:\n                    - { property: 'nom'}\n                    - { property: 'num', label: 'Num\u00e9ro'}\n                    - { property: 'commentaire', label: 'Description'}\n                    - { property: 'catId', label: \"Secteur d'activit\u00e9\"}\n. No problem I'll keep on searching, thanks for your help and have a good week!\n. I didn't, how do I have to proceed?\n. OMG this is exactly what I needed! I can finally return the name of the category!\n\nThanks for explaining how it works to me!\nDo you think I can use multiple associated fields? I mean if I have to show two category columns for example, there is only one __toString method.\n. Mmh... I got this error on some pages of my table, don't know why:\n\n. My __toString method:\npublic function __toString()\n    {\n        return $this->name;\n    }\nI don't see anything wrong, it's working for a lot of clients.\nEDIT: I tried with $this->getName(), same error.\n. I solved it: I have some clients with category 0 but the category 0 doesn't exist in Category table, this is why I got this error. Change all category 0 to null resolves it. Thanks again for helping me!\n. For sure, it's an error from the person who gave me the database because null are allowed for category id so there is no need to put a 0.\n. I tried to do the same for Client and Project (a client have multiple projects, a project have one client), I got this error when I tried to update with doctrine:\n[Doctrine\\DBAL\\Exception\\DriverException]                                    \n  An exception occurred while executing 'ALTER TABLE ce_projet ADD CONSTRAINT  \n   FK_2FA6A34491D79BD3 FOREIGN KEY (c_id) REFERENCES ce_client (c_id)':        \n  Can't create table 'groupware.#sql-e2d_903' (errno: 150)\nSeems that doctrine is trying to create a table, but why?\nI tried to drop my tables but that didn't change anything.\nHere is my new definition for c_id in Project entity:\n/**\n   * @var Client\n   * @ORM\\ManyToOne(targetEntity=\"Client\")\n   * @ORM\\JoinColumn(name=\"c_id\", referencedColumnName=\"c_id\")\n   */\n  protected $cId;\n. I have to add that the link works on easy-admin:\n\nBut I can't update with doctrine.\nEDIT: I solved it, it was an id set to 0 (again...), sorry for that.\n. When I resize the page I can access to hidden entities but can't scroll.\nDon't know if it's normal/related but I have this issue with the admin menu:\n\n. I updated it this morning and still have this issue (and I cleared the cache). Maybe my override of the layout twig isn't updated, I'll compare with the current one.\n. I just checked my overrided layout, there is no difference, only some tests to show the sidebar or not but it works since the beginning.\n. In fact I load this css file:\n```\ntabs ul\n{\n    font: normal 14px arial, sans, sans-serif;\n    -list-style-type: none;\n    margin: 0;\n    padding-left:0;\n    padding-right:0;\n    padding-bottom: 26px;\n}\ntabs ul li\n{\n    display: inline;\n    float: left;\n    height: 24px;\n    min-width:80px;\n    text-align:center;\n    padding:0;\n    margin: 1px 0px 0px 0px;\n    border: 1px solid gray;\n}\ntabs ul li.selected\n{\n    border-bottom: 1px solid #fff;\n    background-color: #fff;\n}\ntabs ul li a\n{\n    float: left;\n    color: #666;\n    text-decoration: none;\n    padding: 4px;\n    text-align:center;\n    background-color:#eee;\n    min-width:80px;\n    border-bottom: 1px solid gray;\n}\ntabs ul li a.selected\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n    border-bottom: 1px solid #fff;\n}\ntabs ul li a:hover\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n}\ncontainer\n{\n    background: white;\n    border:1px solid gray;\n    padding:0;\n    margin:0;\n    left:0;\n    top:0;\n}\niframe\n{\n    border:none;\n}\n```\nBut i remember it wasn't working before I add this css too.\n. No, there is a lot of entities after this one.\n. After updating with composer the \"connected as\" square disappeared, but I still can't scroll down:\n\nI wonder if there is any issue with my css?\n. After updating with composer the \"connected as\" square disappeared, but I still can't scroll down:\n\nI wonder if there is any issue with my css?\n. I could have an idea about this issue. Is there any class named \"container\" in easy-admin? Because I'm using a javascript to resize iframes with \"container\" class in my project, it could affect scroll.\n. I could have an idea about this issue. Is there any class named \"container\" in easy-admin? Because I'm using a javascript to resize iframes with \"container\" class in my project, it could affect scroll.\n. I disabled it, sadly it didn't work. I also tried to delete my override of layout.html.twig to use the default one.\nEDIT: I tried to delete my custom css too, didn't work.\n. I disabled it, sadly it didn't work. I also tried to delete my override of layout.html.twig to use the default one.\nEDIT: I tried to delete my custom css too, didn't work.\n. Seems that it also destroys my booleans and the delete button (it isn't working anymore):\n\n\nI'll try out the demo now.\n. Same problem when I use the bundle from the demo. The problem belongs to my app, somewhere.\n. I tried to use the bundle of the demo (updated) inside my current app (by replacing the last release with it). I think the problem isn't the bundle, I'll try to see if, as @Pierstoval said, there is an error in my assets.\n. Well, I have a bad problem now, blank pages. Don't know why because I correctly cleared the cache, I just did an update with composer.\n. It was a Symfony error, seems that the latest version of Symfony has a bug. Here is how I solved it:\nin /Symfony/vendor/symfony/symfony/src/Symfony/Component/Debug/ExceptionHandler.php on line 383\nChange:\n$link = strtr($this->escapeHtml($linkFormat), array('%f' => $path, , '%l' => (int) $line));\nto:\n$link = strtr($this->escapeHtml($linkFormat), array('%f' => $path, '%l' => (int) $line));\nI hope it will be useful for someone else.\nNow I will comment my css/js files.\n. -- Sorry for triple post --\nI commented all my custom javascript and css files, didn't work, same issue.\nEDIT: I also tried to delete my list view overrides for each entity.\n. I'm using symfony 2.6.x-dev.\nI don't know if I can try another browser, I'm on Debian and I'm using Iceweasel. Maybe I should try to install the real firefox.\n. I'm using firefox now, same issues.\n. Solving this issue repaired the menu:\n\nBut I still can't scroll down in easy-admin interface:\n\nI'll try to add some javascript parents in my list overrides but I don't think it will fix the problem.\nEDIT: It didn't fix it.\n. I still have this strange bug.\nHere is my bootstrap css: http://pastebin.com/5umzPyW7.\nAnd my custom layout.html.twig: http://pastebin.com/BzTf05Ly.\nMy javascript for iframe tabs:\n```\nfunction inIframe () {\n    try {\n        return window.self !== window.top;\n    } catch (e) {\n        return true;\n    }\n}\nfunction loadit(element)\n{\n    var container = document.getElementById('containerTabs');\n    container.src=element.rel;\nvar tabs=document.getElementById('tabs').getElementsByTagName(\"a\");\nfor (var i=0; i < tabs.length; i++)\n{\n    if(tabs[i].rel == element.rel) \n        tabs[i].className=\"selected\";\n    else\n        tabs[i].className=\"\";\n}\n\n}\nfunction startit()\n{\n    var tabs=document.getElementById('tabs').getElementsByTagName(\"a\");\n    var container = document.getElementById('containerTabs');\n    container.src = tabs[0].rel;\n}\nwindow.onload=startit;\n```\nMy javascript for iframe resizing:\n```\nvar myInterval = setInterval(\n    function() {\n            setHeight()\n    },\n\n    500\n\n);\nfunction getHeight()\n{\n        var body = document.body,\n    html = document.documentElement;\n    var height = body.offsetHeight;\n\nreturn height;\n\n}\nfunction setHeight()\n{\n        var height = getHeight() + 10;\n        $('iframe', parent.document.body).height(height);\n}\n```\n. I still have this problem and a new one with the link to add fields in a DCarray:\n\nI can't click on \"add another item\". I think both problems are linked, but I tried everything with css.\n. Wow, didn't see this part of the documentation, so sorry for this topic! Thanks for your help!\n. Thanks for this answer, that's what I needed until delete action is released!\n. Thanks for this answer, that's what I needed until delete action is released!\n. I encounter an error when I try to delete a \"Client\":\nAttempted to call method \"deleteFromListAction\" on class \"JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController\".\nHere is my controller:\n```\n<?php\nnamespace Groupware\\CreativeBundle\\Controller;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\npublic function deleteFromListAction()\n{\n    $id = $this->request->query->get('id');\n    $entity = $this->em->getRepository('GroupwareCreativeBundle:Client')->find($id);\n    $this->em->remove($entity);\n    $this->em->flush();\n\n    // redirect to the 'list' view of the given entity\n    return $this->redirectToRoute('admin', array(\n            'view' => 'list',\n            'entity' => $this->request->query->get('entity'),\n    ));\n}\n\n}\n```\nMoreover is there any way to make a global function for all entities? Because I have multiple entities in one bundle and I think making an AdminController for each entity is a bad idea.\nThanks in advance!\n. I encounter an error when I try to delete a \"Client\":\nAttempted to call method \"deleteFromListAction\" on class \"JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController\".\nHere is my controller:\n```\n<?php\nnamespace Groupware\\CreativeBundle\\Controller;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\npublic function deleteFromListAction()\n{\n    $id = $this->request->query->get('id');\n    $entity = $this->em->getRepository('GroupwareCreativeBundle:Client')->find($id);\n    $this->em->remove($entity);\n    $this->em->flush();\n\n    // redirect to the 'list' view of the given entity\n    return $this->redirectToRoute('admin', array(\n            'view' => 'list',\n            'entity' => $this->request->query->get('entity'),\n    ));\n}\n\n}\n```\nMoreover is there any way to make a global function for all entities? Because I have multiple entities in one bundle and I think making an AdminController for each entity is a bad idea.\nThanks in advance!\n. Wow, thanks for the tip! Sadly I'm getting this error again, don't know why:\nAttempted to call method \"deleteFromListAction\" on class \"JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController\".\n. Wow, thanks for the tip! Sadly I'm getting this error again, don't know why:\nAttempted to call method \"deleteFromListAction\" on class \"JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController\".\n. I added the override of indexAction.\nHere is my route for easy-admin:\nadmin:\n    resource: \"@EasyAdminBundle/Controller/\"\n    type:     annotation\n    prefix:   /admin\nDo I have to create a new route for my bundle?\n. I added the override of indexAction.\nHere is my route for easy-admin:\nadmin:\n    resource: \"@EasyAdminBundle/Controller/\"\n    type:     annotation\n    prefix:   /admin\nDo I have to create a new route for my bundle?\n. It works now, didn't know this trick with annotation! Thanks for your help!\nI have a new issue now, the delete button isn't working (in the show and edit views), don't know why, but I'll investigate and open a new issue if I can't solve it.\n. It works now, didn't know this trick with annotation! Thanks for your help!\nI have a new issue now, the delete button isn't working (in the show and edit views), don't know why, but I'll investigate and open a new issue if I can't solve it.\n. Even if I delete the whole part with refererUrl and return it redirects me to the global list, I don't understand.\nEDIT: If I delete the function the deletion still works. I think my override of this function doesn't work at all.\nEDIT2: Seems that only the override of AdminController for my User entity is working and works with the other entities too.\n. Seems that we can't override twice the same controller (even if it's inside 2 different bundles), so my bad, I'll only use it in my UserBundle. Issue solved.\n. I though it was this but I have the same issues for templates I don't override.\nFor example these screens above show my User entity, but I don't override list/show/edit for this entity nor for all entities:\n\n. Don't know if I have to modify it but here are my javascripts in layout.html.twig:\n\nI did a complete override of the template by copying it at first (without extend).\n. I didn't know this command, what is it for?\nI mean, I don't know --symlink and --relative.\n. The jquery-flexmenu.min.js file fixed my buttons, maybe I missed it after an update of the bundle. Boolean and delete buttons works now. I still have the scroll problem but I can close this issue.\nThanks for helping me and teaching me about these commands!\n. In fact, didn't know it was possible for smallint and integer fields, maybe it would be good to clarify it in this section of the documentation. Anyway thanks for explaining it to me!\n. @ogizanagi thanks for referencing this feature on my issue. It will be very useful indeed, this is what I need (in list view), though it seems not easy to implement/organize.\nI hope it will be possible, thanks again for your hard work!\n. Try to use only fields you need for the forms. For example on a User entity you'll only need username, password, email... You also need to configure \"nullable=true\" for the fields you want optional on your entity definition, this is an ORM property. Hope it will help you.\n. Hi Kirito-kun!\nI think the most useful parts of this are the features that redirect to add form when there is no object and to the object when there is only one (but this one could prevent the user to create an object).\nI don't really understand the rest of this feature, is this for creating an \"immortal object\" which is the only one in his category? I mean, only one object for an entity?\n. Thanks for your concern!\n. @manuelj555 Indeed this is the goal.\n. @manuelj555 Indeed this is the goal.\n. Thanks for this feature. Is it acutally working?\nI tested it 5min ago and it seems that there are spaces again:\n\nBut maybe it's normal(?)\n. Thanks for this feature. Is it acutally working?\nI tested it 5min ago and it seems that there are spaces again:\n\nBut maybe it's normal(?)\n. I tried to override list.html.twig with your changes but it had no effect. Maybe I'm doing it wrong.\nI'll check bootstrap css.\n. I tried to override list.html.twig with your changes but it had no effect. Maybe I'm doing it wrong.\nI'll check bootstrap css.\n. I have a custom css for iframes and for tabs (cause I use iframe tabs).\n```\n@CHARSET \"UTF-8\";\ntabs ul\n{\n    font: normal 14px arial, sans, sans-serif;\n    -list-style-type: none;\n    margin: 0;\n    padding-left:0;\n    padding-right:0;\n    padding-bottom: 26px;\n}\ntabs ul li\n{\n    display: inline;\n    float: left;\n    height: 24px;\n    min-width:80px;\n    text-align:center;\n    padding:0;\n    margin: 1px 0px 0px 0px;\n    border: 1px solid gray;\n}\ntabs ul li.selected\n{\n    border-bottom: 1px solid #fff;\n    background-color: #fff;\n}\ntabs ul li a\n{\n    float: left;\n    color: #666;\n    text-decoration: none;\n    padding: 4px;\n    text-align:center;\n    background-color:#eee;\n    min-width:80px;\n    border-bottom: 1px solid gray;\n}\ntabs ul li a.selected\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n    border-bottom: 1px solid #fff;\n}\ntabs ul li a:hover\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n}\ncontainerTabs\n{\n    background: white;\n    border:1px solid gray;\n    padding:0;\n    margin:0;\n    left:0;\n    top:0;\n}\niframe\n{\n    border:1;\n}\n```\nBesides I copied the original bootstrap css to make my site larger, but I didn't touch the properties you gave above.\n\nEDIT: here is my override of list.html.twig\n```\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block item_actions %}\n    {% spaceless %}\n         {% for _action in _list_item_actions %}\n               {% if 'method' == _action.type %}\n                    {% set _action_href = path('admin', _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n               {% elseif 'route' == _action.type %}\n                    {% set _action_href = path(_action.name, _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n               {% endif %}\n\n               <a class=\"{{ _action.css_class|default('') }}\" href=\"{{ _action_href }}\">\n                    {% if _action.icon %}<i class=\"fa fa-{{ _action.icon }}\"></i>{% endif %}\n                    {{ _action.label|trans({'%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans, '%entity_id%': _item_id}) }}\n               </a>\n         {% endfor %}\n    {% endspaceless %}\n{% endblock item_actions %}\n\n```\n. I have a custom css for iframes and for tabs (cause I use iframe tabs).\n```\n@CHARSET \"UTF-8\";\ntabs ul\n{\n    font: normal 14px arial, sans, sans-serif;\n    -list-style-type: none;\n    margin: 0;\n    padding-left:0;\n    padding-right:0;\n    padding-bottom: 26px;\n}\ntabs ul li\n{\n    display: inline;\n    float: left;\n    height: 24px;\n    min-width:80px;\n    text-align:center;\n    padding:0;\n    margin: 1px 0px 0px 0px;\n    border: 1px solid gray;\n}\ntabs ul li.selected\n{\n    border-bottom: 1px solid #fff;\n    background-color: #fff;\n}\ntabs ul li a\n{\n    float: left;\n    color: #666;\n    text-decoration: none;\n    padding: 4px;\n    text-align:center;\n    background-color:#eee;\n    min-width:80px;\n    border-bottom: 1px solid gray;\n}\ntabs ul li a.selected\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n    border-bottom: 1px solid #fff;\n}\ntabs ul li a:hover\n{\n    color: #000;\n    font-weight:bold;\n    background-color: #fff;\n}\ncontainerTabs\n{\n    background: white;\n    border:1px solid gray;\n    padding:0;\n    margin:0;\n    left:0;\n    top:0;\n}\niframe\n{\n    border:1;\n}\n```\nBesides I copied the original bootstrap css to make my site larger, but I didn't touch the properties you gave above.\n\nEDIT: here is my override of list.html.twig\n```\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block item_actions %}\n    {% spaceless %}\n         {% for _action in _list_item_actions %}\n               {% if 'method' == _action.type %}\n                    {% set _action_href = path('admin', _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n               {% elseif 'route' == _action.type %}\n                    {% set _action_href = path(_action.name, _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n               {% endif %}\n\n               <a class=\"{{ _action.css_class|default('') }}\" href=\"{{ _action_href }}\">\n                    {% if _action.icon %}<i class=\"fa fa-{{ _action.icon }}\"></i>{% endif %}\n                    {{ _action.label|trans({'%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans, '%entity_id%': _item_id}) }}\n               </a>\n         {% endfor %}\n    {% endspaceless %}\n{% endblock item_actions %}\n\n```\n. In fact it's fixed now, thanks again!\n. @RogerBCA thanks for your answer. How/where do I have to use this function exactly?\n. @RogerBCA thanks for your answer. How/where do I have to use this function exactly?\n. Will the set function break my current bigint values in my database?\n. Thanks, I'll test it now!\nEDIT: It works, thanks again for your help!\n. There is an other problem now.\nI want to keep null values for these fields. I modified the get method like this:\npublic function getPlannedStart()\n    {\n        if($this->plannedStart != null)\n        {\n            $date = new \\DateTime();\n            $date->setTimestamp($this->plannedStart);\n            return $date;\n        }\n        else return null;\n    }\n\nAnd it works, but only in list view. When I use edit view it automatically completes the date fields with a default date (01/01/2010) so I can't save my changes on this row cause the null value is replaced with this new default date.\n\n. Thanks for your answers, I'll wait for this generic solution.\n. Well, EventListeners aren't my cup of tea but I contacted the creator of sabre-dav and he's curently helping me to retrieve cards from the server.\nYeah, one day are the terms, I understand that there are other priorities. Hope it will be.\n. My bad I didn't see this. I'm using sabre-dav backend entities at the moment but it could be useful, thanks!\n. Such a great tutorial to show images in list view!\n. I already read this part don't worry. What I have to show is a dynamic progress bar so it will be a little bit different.\n. Thanks for your answer, so I'll wait for this update.\n. My two entities are editable. I have to add that the first relation (on Client) is a bit older than the second (on User). It causes this with all of my old relations so I don't know if it's an easy-admin's update problem. I never had links before, now all my new relations have links. Maybe I should try to re-generate my database?\n. My two entities are editable. I have to add that the first relation (on Client) is a bit older than the second (on User). It causes this with all of my old relations so I don't know if it's an easy-admin's update problem. I never had links before, now all my new relations have links. Maybe I should try to re-generate my database?\n. I always clear my cache. Don't know why but when I try to update database schema there always are queries:\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:update --force\nUpdating database schema...\nDatabase schema updated successfully! \"19\" queries were executed\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:update --force\nUpdating database schema...\nDatabase schema updated successfully! \"19\" queries were executed\nI think it's because of some ORM overrides on entities (to transform fields to unique).\nSo when I want to validate the schema:\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:validate\n[Mapping]  OK - The mapping files are correct.\n[Database] FAIL - The database schema is not in sync with the current mapping file.\n. I always clear my cache. Don't know why but when I try to update database schema there always are queries:\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:update --force\nUpdating database schema...\nDatabase schema updated successfully! \"19\" queries were executed\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:update --force\nUpdating database schema...\nDatabase schema updated successfully! \"19\" queries were executed\nI think it's because of some ORM overrides on entities (to transform fields to unique).\nSo when I want to validate the schema:\nroot@devintranet:/var/www/Symfony# app/console doctrine:schema:validate\n[Mapping]  OK - The mapping files are correct.\n[Database] FAIL - The database schema is not in sync with the current mapping file.\n. I'm using mysql with phpmyadmin.\nHere is the output:\nroot@devintranet:/var/www/Symfony# app/console d:s:u --dump-sql\nALTER TABLE ce_tache ADD CONSTRAINT FK_4AB576395862D41C FOREIGN KEY (ph_id) REFERENCES ce_phase (ph_id) ON DELETE CASCADE;\nALTER TABLE ce_bl_row ADD CONSTRAINT FK_3F909A6ECD2087A9 FOREIGN KEY (bl_id) REFERENCES ce_bl (bl_id) ON DELETE CASCADE;\nALTER TABLE ce_ordre_mis ADD CONSTRAINT FK_E6B9CC5E6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_ordre_mis ADD CONSTRAINT FK_E6B9CC5EAF0627F3 FOREIGN KEY (om_statut) REFERENCES ce_ordre_mis_etat (om_statut);\nALTER TABLE ce_bc_row ADD CONSTRAINT FK_BDC00DBF954397FF FOREIGN KEY (bc_id) REFERENCES ce_bc (bc_id) ON DELETE CASCADE;\nALTER TABLE ce_proto_out ADD CONSTRAINT FK_70B9F22867C663E7 FOREIGN KEY (pr_id) REFERENCES ce_prototype (pr_id) ON DELETE CASCADE;\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F8087C00A36A FOREIGN KEY (d_id) REFERENCES ce_devis (d_id) ON DELETE CASCADE;\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F8087175E667D FOREIGN KEY (ph_livree) REFERENCES ce_phase_livree (ph_livree);\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F80875B6EF206 FOREIGN KEY (ph_etat) REFERENCES ce_devis_etat (d_etat);\nALTER TABLE ce_bl ADD CONSTRAINT FK_6067B06A6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_br ADD CONSTRAINT FK_9A688D096FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_devis ADD CONSTRAINT FK_521593676FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_devis ADD CONSTRAINT FK_52159367EC6A9C8B FOREIGN KEY (d_etat) REFERENCES ce_devis_etat (d_etat);\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFB6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFBD26628FA FOREIGN KEY (exp_id) REFERENCES vcards (id) ON DELETE CASCADE;\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFB79839897 FOREIGN KEY (dest_id) REFERENCES vcards (id) ON DELETE CASCADE;\nALTER TABLE ce_prototype ADD CONSTRAINT FK_8E6D162F923D3FB FOREIGN KEY (pr_etat) REFERENCES ce_proto_etat (pr_etat);\nALTER TABLE ce_prototype ADD CONSTRAINT FK_8E6D1626FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_br_row ADD CONSTRAINT FK_E040B38D7DE6A705 FOREIGN KEY (br_id) REFERENCES ce_br (br_id) ON DELETE CASCADE;\nI really don't understand why it needs to update constraints every time.\n. I'm using mysql with phpmyadmin.\nHere is the output:\nroot@devintranet:/var/www/Symfony# app/console d:s:u --dump-sql\nALTER TABLE ce_tache ADD CONSTRAINT FK_4AB576395862D41C FOREIGN KEY (ph_id) REFERENCES ce_phase (ph_id) ON DELETE CASCADE;\nALTER TABLE ce_bl_row ADD CONSTRAINT FK_3F909A6ECD2087A9 FOREIGN KEY (bl_id) REFERENCES ce_bl (bl_id) ON DELETE CASCADE;\nALTER TABLE ce_ordre_mis ADD CONSTRAINT FK_E6B9CC5E6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_ordre_mis ADD CONSTRAINT FK_E6B9CC5EAF0627F3 FOREIGN KEY (om_statut) REFERENCES ce_ordre_mis_etat (om_statut);\nALTER TABLE ce_bc_row ADD CONSTRAINT FK_BDC00DBF954397FF FOREIGN KEY (bc_id) REFERENCES ce_bc (bc_id) ON DELETE CASCADE;\nALTER TABLE ce_proto_out ADD CONSTRAINT FK_70B9F22867C663E7 FOREIGN KEY (pr_id) REFERENCES ce_prototype (pr_id) ON DELETE CASCADE;\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F8087C00A36A FOREIGN KEY (d_id) REFERENCES ce_devis (d_id) ON DELETE CASCADE;\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F8087175E667D FOREIGN KEY (ph_livree) REFERENCES ce_phase_livree (ph_livree);\nALTER TABLE ce_phase ADD CONSTRAINT FK_688F80875B6EF206 FOREIGN KEY (ph_etat) REFERENCES ce_devis_etat (d_etat);\nALTER TABLE ce_bl ADD CONSTRAINT FK_6067B06A6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_br ADD CONSTRAINT FK_9A688D096FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_devis ADD CONSTRAINT FK_521593676FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_devis ADD CONSTRAINT FK_52159367EC6A9C8B FOREIGN KEY (d_etat) REFERENCES ce_devis_etat (d_etat);\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFB6FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFBD26628FA FOREIGN KEY (exp_id) REFERENCES vcards (id) ON DELETE CASCADE;\nALTER TABLE ce_bc ADD CONSTRAINT FK_F0D8ADFB79839897 FOREIGN KEY (dest_id) REFERENCES vcards (id) ON DELETE CASCADE;\nALTER TABLE ce_prototype ADD CONSTRAINT FK_8E6D162F923D3FB FOREIGN KEY (pr_etat) REFERENCES ce_proto_etat (pr_etat);\nALTER TABLE ce_prototype ADD CONSTRAINT FK_8E6D1626FBC242E FOREIGN KEY (pm_id) REFERENCES ce_projet (pm_id) ON DELETE CASCADE;\nALTER TABLE ce_br_row ADD CONSTRAINT FK_E040B38D7DE6A705 FOREIGN KEY (br_id) REFERENCES ce_br (br_id) ON DELETE CASCADE;\nI really don't understand why it needs to update constraints every time.\n. Where can I see my sql engine?\nNevermind, I think I found it:\n\n. Where can I see my sql engine?\nNevermind, I think I found it:\n\n. You were right, some of my tables are using an other engine:\n\n. You were right, some of my tables are using an other engine:\n\n. Do you think my ORM parameters are wrong for some entities? Validation says that mapping files are correct. Do I have to modify manually the table engines? I hope this is an easy-admin issue cause I really have no idea what is causing this.\nMoreover, all ce_projet, ce_client and users tables are in InnoDB.\n. Do you think my ORM parameters are wrong for some entities? Validation says that mapping files are correct. Do I have to modify manually the table engines? I hope this is an easy-admin issue cause I really have no idea what is causing this.\nMoreover, all ce_projet, ce_client and users tables are in InnoDB.\n. Default is InnoDB but I know why there are MyISAM tables in my base, these tables are copied and modified from an other database (the source database I'm using to convert the project into a Symfony project). So I'll modify the engine for all these tables.\n. Default is InnoDB but I know why there are MyISAM tables in my base, these tables are copied and modified from an other database (the source database I'm using to convert the project into a Symfony project). So I'll modify the engine for all these tables.\n. Well, when I convert to InnoDB some tables can't be updated anymore, it gives me constraint errors. Why did it works before and why is it not working anymore? I checked my relations and everything seems correct. Maybe I should let them in MyISAM?\n. Well, when I convert to InnoDB some tables can't be updated anymore, it gives me constraint errors. Why did it works before and why is it not working anymore? I checked my relations and everything seems correct. Maybe I should let them in MyISAM?\n. It worked, I just have to do this for all tables now (convert to InnoDB, utf-8, then repair constraints). Thanks for your help! (Although it doesn't solve the current issue about entity link)\n. It worked, I just have to do this for all tables now (convert to InnoDB, utf-8, then repair constraints). Thanks for your help! (Although it doesn't solve the current issue about entity link)\n. I'm currently trying to understand what is causing this issue. I checked my entities again and everything seems to be alright. Moreover all my tables are in InnoDB now.\nEDIT:\nI finally understand what this bug really is. It seems that linked entities from the same bundle have no hypertext link, only other bundles entities get a link when associated with a field. It's a clue to find out a solution.\n. This helped me too, I had to begin the translation of my application. Thanks!\n. Don't know if it's the same thing but for example FOSUser class has a roles special collection (DC2Type:array) and when you add this field to easy-admin you don't have to specify his type.\nThen it appears like this on edit view (for example):\n\nI never used collection type so sorry if I'm wrong.\n. Although this button doesn't work anymore for me (I can't click on it), don't know why.\n. It seems to be generated:\n```\n\n                        <a href=\"#\" onclick=\"                        $(function() {\n                            if(event.preventDefault) event.preventDefault(); else event.returnValue = false;\n                        var collection = $('#form_roles');\n                        var numItems = collection.children('div.form-group').length;\n\n                        var newItem = collection.attr('data-prototype')\n                            .replace(/__name__label__/g, numItems)\n                            .replace(/__name__/g, numItems)\n                        ;\n\n                        collection.append(newItem);\n                    });\n                \" class=\"col-sm-12 text-right\">\n                        <i class=\"fa fa-plus-square\"></i>\n                        Add another item\n                    </a>\n                </div>\n\n```\n. Nevermind, now it works, wtf (excuse me for these terms). It didn't work for a long time and 10min ago it didn't work too, but now it works. I really don't understand why I have these sorts of problems with easy-admin, moreover I still can't scroll my entities in the admin interface (but this is an other issue I opened before). I'm using Firefox on Debian, it could be related.\n. Anyway, about this \"collection\" issue, I think it would be interesting to make deletion possible (currently we can't delete roles / collection items) and to implement a choice with existing items:\nBEFORE\n,__,\n,|___|,\n                          + add another item\nAFTER\n,__,\n,|__item____|,   - delete this item\n,__,\n,|___|,\nselect existing item   + add another item\n. I thought the same thing, I just tested it and it doesn't work, the item still remains after saving.\n. Indeed, I'll create a new issue now.\n. Do you mean we already can delete items? I'm using Symfony 2.7.\n. After a new test:\n1- When you create a new item, this new item will become the first of the list (number 0) next time you will edit the entity\n2- You can delete number 0 item, but you can't delete the others, you have to do it one by one starting at number 0\n3- You can't delete an item if it's the only one in the collection\nIn order these are my actions:\n\n\n\n\n\n\n\n. I just tested it again with 3 items. The problem isn't the first item number 0, it's the last. Don't know why but I can't delete the last whatever it could be.\n. So I'm the only one having this problem, I have no idea what is causing this. Or maybe it's a problem related to longtext (DC2Type:array). Can you try with FOSUser roles?\n. I think it's due to FOSUser, the \"roles\" field is a little bit special. This is how it appears in the database:\na:2:{i:0;s:9:\"ROLE_USER\";i:1;s:13:\"ROLE_CREATIVE\";}\n\"a\" is the number of items, \"i\" is the id of the item, \"s\" is the length of the string.\nDon't know if it's the same for other collections\n. So it's the same thing, I don't understand this strange issue.\n. Did someone try the \"FOSUser bug\" I encountered with the roles collection? I'm currently trying to find a better way to edit user's roles, I found this tutorial but it's not compatible with Symfony 2.7 and FOSUser 2.\nI think the better way for now would be to modify the current render for collections in easy-admin forms. Then allowing custom FormType as @Pierstoval said.\n. Hi @sebastianlp !\nI'm using FOSUser groups now, better to manage rights for users. Strangely I didn't have any problem to manage roles for groups in easy-admin, but you're right about this \"invisible\" role cause all my new users got the \"ROLE_USER\" (by default) and it doesn't appear in the database. If I understood this is a FOSUser issue, but right now it doesn't bother me anymore cause I wanted users to have this role by default in any case. Then I just have to set groups for each user.\nBut I still think there should be a better form for \"DC2Type:array\" collections in easy-admin.\n. Hi @sebastianlp !\nI'm using FOSUser groups now, better to manage rights for users. Strangely I didn't have any problem to manage roles for groups in easy-admin, but you're right about this \"invisible\" role cause all my new users got the \"ROLE_USER\" (by default) and it doesn't appear in the database. If I understood this is a FOSUser issue, but right now it doesn't bother me anymore cause I wanted users to have this role by default in any case. Then I just have to set groups for each user.\nBut I still think there should be a better form for \"DC2Type:array\" collections in easy-admin.\n. I was thinking about doing this too to export an address book in vcf. As Pierstoval said you have to use a controller and the easy-admin global layout view. You can also try with the list view, it depends where you want the action link to be.\n. Is this flexMenu behavior the problem? I mean, the function which resize the admin menu? How can we get rid of it for now? I'm not in a hurry but I would like to know how it works.\nEDIT:\nI tried to delete this line from the easy-admin layout\n<script src=\"{{ asset('bundles/easyadmin/javascript/jquery-flexmenu.min.js') }}\"></script>\nThe menu is still adjusting.\n. Do we have to look through the easy-admin css files? @javiereguiluz will know better about this.\nEDIT: I tried to delete all css files from the layout.html.twig, still happening. Maybe it's a javascript issue, but I also tried to delete all javascripts...\n. It didn't solve the problem, same issue which prevents me to set auto for the site width.\nWhat I tried:\n- Delete col-lg-offset-2 from the tags, didn't work\n- Delete col-lg-offset-2 from the tags and replace col-lg-10 by col-lg-12, didn't work\n- Change .col-lg-offset-2{margin-left:16.66666667%} to .col-lg-offset-2{margin-left:0} in bootstrap css\nI cleared my cache before each try.\nThanks in advance for your help!\nEDIT: I found a way to do what I want by modifying admin.css.twig, but I don't know how to override it properly (which folder). Moreover I have to override it under certain conditions (if the user isn't admin), how can I do such a thing in layout.html.twig ? How can I \"include\" this \"css.twig\" ?\n. It didn't solve the problem, same issue which prevents me to set auto for the site width.\nWhat I tried:\n- Delete col-lg-offset-2 from the tags, didn't work\n- Delete col-lg-offset-2 from the tags and replace col-lg-10 by col-lg-12, didn't work\n- Change .col-lg-offset-2{margin-left:16.66666667%} to .col-lg-offset-2{margin-left:0} in bootstrap css\nI cleared my cache before each try.\nThanks in advance for your help!\nEDIT: I found a way to do what I want by modifying admin.css.twig, but I don't know how to override it properly (which folder). Moreover I have to override it under certain conditions (if the user isn't admin), how can I do such a thing in layout.html.twig ? How can I \"include\" this \"css.twig\" ?\n. Wow, seems not easy. I know how I can manage controller functions, but I have no idea how to hide specific things in the views. Is this initialize function controls easy-admin views?\n. I will have to do it for sure, don't know if I will success but thanks for advising me.\n. At this time it's too late for me to use Sonata (moreover I already tried it and this was not my cup of tea). I'll try my best to implement such a thing on easy-admin.\n. Seems possible but I never overrode extensions so I don't really know where do I have to start. I'll try to analyze easy-admin twig views first.\nI think I can use this part of list.html.twig:\n```\n{% if _list_item_actions|length > 0 %}\n                                    {% set _column_label =  'list.row_actions'|trans(_trans_parameters) %}\n                                    \n                                    {% block item_actions %}\n                                        {% spaceless %}\n                                            {% for _action in _list_item_actions %}\n                                                {% if 'method' == _action.type %}\n                                                    {% set _action_href = path('admin', _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n                                                {% elseif 'route' == _action.type %}\n                                                    {% set _action_href = path(_action.name, _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n                                                {% endif %}\n                                            <a class=\"{{ _action.css_class|default('') }}\" href=\"{{ _action_href }}\">\n                                                {% if _action.icon %}<i class=\"fa fa-{{ _action.icon }}\"></i>{% endif %}\n                                                {{ _action.label|trans({'%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans, '%entity_id%': _item_id}) }}\n                                            </a>\n                                        {% endfor %}\n                                    {% endspaceless %}\n                                {% endblock item_actions %}\n                                </td>\n\n{% endif %}\n```\nAs we can check roles with twig and without any need to inject the user class.\n. For those who possibly have to do the same thing here is how I implemented it (overriding list.html.twig):\n```\n{% block item_actions %}\n    {% spaceless %}\n        {% for _action in _list_item_actions %}\n    <!-- DROITS ACTIONS -->\n    {% if\n            ((_action.name == 'show') and ('Devis' not in _entity_config.name) and is_granted(\"ROLE_PROJET_VIEW\"))\n        or ((_action.name == 'edit') and ('Devis' not in _entity_config.name) and is_granted(\"ROLE_PROJET_EDIT\"))\n        or ((_action.name == 'deleteFromList') and ('Devis' not in _entity_config.name) and is_granted(\"ROLE_PROJET_DELETE\"))\n        or ((_action.name == 'show') and ('Devis' in _entity_config.name) and is_granted(\"ROLE_DEVIS_VIEW\"))\n        or ((_action.name == 'edit') and ('Devis' in _entity_config.name) and is_granted(\"ROLE_DEVIS_EDIT\"))\n        or ((_action.name == 'deleteFromList') and ('Devis' in _entity_config.name) and is_granted(\"ROLE_DEVIS_DELETE\"))\n    %}\n    <!-- DROITS ACTIONS -->\n\n        {% if 'method' == _action.type %}\n            {% set _action_href = path('admin', _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n        {% elseif 'route' == _action.type %}\n            {% set _action_href = path(_action.name, _request_parameters|merge({ action: _action.name, id: _item_id })) %}\n        {% endif %}\n\n            <a class=\"{{ _action.css_class|default('') }}\" href=\"{{ _action_href }}\">\n                {% if _action.icon %}<i class=\"fa fa-{{ _action.icon }}\"></i>{% endif %}\n                {{ _action.label|trans({'%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans, '%entity_id%': _item_id}) }}\n            </a>\n\n    {% endif %}\n\n    {% endfor %}\n{% endspaceless %}\n\n{% endblock item_actions %}\n```\nNow I'll have to hide the show view buttons, if anyone get an idea while I'm searching please tell me here, thanks.\n. A little problem here. I tried to solve it, without success:\n```\n{% block new_action %}\n{% if\n            (('Devis' not in _entity_config.name) and is_granted(\"ROLE_PROJET_ADD\"))\n        or (('Devis' in _entity_config.name) and is_granted(\"ROLE_DEVIS_ADD\"))\n%}\n\n{% set _action = easyadmin_get_action_for_list_view('new', _entity_config.name) %}\n    <div id=\"content-actions\">\n        <a class=\"btn {{ _action.css_class|default('') }}\" href=\"{{ path('admin', _request_parameters|merge({ action: _action.name })) }}\">\n            {% if _action.icon %}<i class=\"fa fa-{{ _action.icon }}\"></i>{% endif %}\n                {{ _action.label|default('action.new')|trans(_trans_parameters) }}\n        </a>\n    </div>\n\n{% endif %}\n\n{% endblock new_action %}\n```\nWhen I override this block to make the New button hide-able the label of the button become \"action.new\".\n. Wow, totally forgot this thing, thanks!\n. Do you mean like this fieldType: 'boolean'? I just tested it and it doesn't work.\n. Do you mean like this fieldType: 'boolean'? I just tested it and it doesn't work.\n. Sadly I tried it too, didn't work.\n. Sadly I tried it too, didn't work.\n. Checkboxes are ok, but it would be interesting to have the toggle widget too. I'll test checkboxes now.\nEDIT:\nWe can't use checkboxes for smallint, error message from Symfony:\nUnable to transform value for property path \"billed\": Expected a Boolean.\n. I have the same problem with some of my entities and sadly you can't get an entity in an other if it is not associated with.\nTo select your country in the Town entity you have to create a country_id in your Town entity, this country_id will be a ManyToOne relation to the real country_id which is in your Country entity. Then you'll just have to create the __toString() method in your Country entity to return the name of the country, and easy-admin will show the name of the country in his tables.\n```\nIn your Town entity:\n/*\n   * @var Country\n   * @ORM\\ManyToOne(targetEntity=\"YourCompany\\YourBundle\\Entity\\Country\")\n   * @ORM\\JoinColumn(name=\"country_id\", referencedColumnName=\"id\", onDelete=\"cascade\")\n   /\n  protected $country_id;\nIn your Country entity:\n /**\n * String representation of this object\n * @return string\n */\npublic function __toString()\n{\n    return $this->getCountryName();\n}\n\n```\nIf you want to show the Country of a State you'll have to do a ManyToOne relation in your States entity to link it with your Country entity the same way. Sadly if you want to show the states on your country you'll have to use collections (and this is not my cup of tea), but you can also trick easy-admin twigs to show what you want on the \"show\" and \"edit\" views by retrieving the id.\nFor example if you want to show the states of a country in the country view:\n1 . Do a ManyToOne relation on the state entity to link it with your country (country_id)\n2 . In easy-admin configuration, configure your State entity to only search on the country_id\n3 . In the overrode Show or Edit view of the Country entity (app/Resources/views/easy_admin/Country/show.html.twig) you'll have to create a frame or an iframe that retrieve the id of your Country but with the State table:\n<iframe href=\"../admin/?action=search&entity=State&query={{ app.request.query.get(\"id\") }}\" width=\"100%\"></iframe>\nThis will show the States list on your Country view, but as I said this is very tricky and you'll have to disable the admin menu for the State entity when the search action is performed (and possibly disable search when you are on a search page).\nSo:\n- a state will belongs to a country\n- a town will belongs to a state and a country (but you can omit the relation with the country, as country and state are already linked)\nIn your Town: a state_id\nIn your State: a country_id\nI don't know if it's what you want so sorry if I'm wrong. There is no easy way to select both country and state when you create a town, not sure but I think you'll have to use Ajax (in fact this is what you really want) but I'm not good with Ajax and I don't think it particularly concerns easy-admin.\n. I have the same problem with some of my entities and sadly you can't get an entity in an other if it is not associated with.\nTo select your country in the Town entity you have to create a country_id in your Town entity, this country_id will be a ManyToOne relation to the real country_id which is in your Country entity. Then you'll just have to create the __toString() method in your Country entity to return the name of the country, and easy-admin will show the name of the country in his tables.\n```\nIn your Town entity:\n/*\n   * @var Country\n   * @ORM\\ManyToOne(targetEntity=\"YourCompany\\YourBundle\\Entity\\Country\")\n   * @ORM\\JoinColumn(name=\"country_id\", referencedColumnName=\"id\", onDelete=\"cascade\")\n   /\n  protected $country_id;\nIn your Country entity:\n /**\n * String representation of this object\n * @return string\n */\npublic function __toString()\n{\n    return $this->getCountryName();\n}\n\n```\nIf you want to show the Country of a State you'll have to do a ManyToOne relation in your States entity to link it with your Country entity the same way. Sadly if you want to show the states on your country you'll have to use collections (and this is not my cup of tea), but you can also trick easy-admin twigs to show what you want on the \"show\" and \"edit\" views by retrieving the id.\nFor example if you want to show the states of a country in the country view:\n1 . Do a ManyToOne relation on the state entity to link it with your country (country_id)\n2 . In easy-admin configuration, configure your State entity to only search on the country_id\n3 . In the overrode Show or Edit view of the Country entity (app/Resources/views/easy_admin/Country/show.html.twig) you'll have to create a frame or an iframe that retrieve the id of your Country but with the State table:\n<iframe href=\"../admin/?action=search&entity=State&query={{ app.request.query.get(\"id\") }}\" width=\"100%\"></iframe>\nThis will show the States list on your Country view, but as I said this is very tricky and you'll have to disable the admin menu for the State entity when the search action is performed (and possibly disable search when you are on a search page).\nSo:\n- a state will belongs to a country\n- a town will belongs to a state and a country (but you can omit the relation with the country, as country and state are already linked)\nIn your Town: a state_id\nIn your State: a country_id\nI don't know if it's what you want so sorry if I'm wrong. There is no easy way to select both country and state when you create a town, not sure but I think you'll have to use Ajax (in fact this is what you really want) but I'm not good with Ajax and I don't think it particularly concerns easy-admin.\n. ",
    "robertfausk": "@Pierstoval Do you have your documentation online and if yes where can it be found?\n. @forsetius user is a reserved word in PostgreSQL.\nAlso see https://www.postgresql.org/docs/7.3/static/sql-keywords-appendix.html\nMaybe you need to change the name of the user table or the lib you are loading the fixtures with (DoctrineFixturesBundle? HautelookAliceBundle?) should escape the table name in the query. (But currently I don't know if the second suggestion would solve the reserved word PostgreSQL issue.). @forsetius user is a reserved word in PostgreSQL.\nAlso see https://www.postgresql.org/docs/7.3/static/sql-keywords-appendix.html\nMaybe you need to change the name of the user table or the lib you are loading the fixtures with (DoctrineFixturesBundle? HautelookAliceBundle?) should escape the table name in the query. (But currently I don't know if the second suggestion would solve the reserved word PostgreSQL issue.). ",
    "vitrus": "Slightly off topic @Pierstoval, but looking at the code above and the example you provide in your blog.\nDo you have a user friendly way to manage the roles of your user? Or do you have to click 'add another one' and type out the role-names manually?\n. ",
    "smoench": "Your proposal is great. :+1: \nIt would be enough if the search form block would be placed in list.html.twig\nIMHO an entity related template should have a higher priority than a config template.\n. ",
    "byhoratiss": "I think this issue is not solved.\nLooking for the answer I found that the method \"findBy\" (https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Controller/AdminController.php#L499) actually does not cares about sorting fields & order.\nEdit:\nAlso I could not override the \"searchAction\" to write by own \"findBy\" logic because I cannot use the \"dispatch\" private method declared on the AdminController,\nAlso the events (PRE_SEARCH & POST_SEARCH) will not help me with this issue, because the paginator has already received the QueryBuilder from within the \"findBy\" method.\nEdit 2:\nThis PR is related https://github.com/javiereguiluz/EasyAdminBundle/pull/245\n. Yes @ogizanagi that is one possibility, but, I could only access those entities by only 1 EntityManager, and I want to be able to \"switch\" EntityManagers.\nI think that one subscriber on \"kernel.controller\" that modify the \"Configurator\" service could be a solution, but I'm not sure.\n. @javiereguiluz Yes, that would help, thank you!\nI'm just wondering, in my case, when 2 entities can be managed by 2 EntityManagers, why Doctrine always returns the first defined EM?\n. Hi @javiereguiluz !\nI've updated the EasyAdmin and now I'm facing a new problem. In old versions, the \"manager\" for requesting the Entity to be managed for all actions (show, edit, etc.) was \"easily\" changed within the controller. \nIn newer versions, all entities are retrieved by \"RequestPostInitializeListener\" listener.\nMy problem is that I've same entities managed by different EntityManagers, and each one uses a different DBAL connections and configuration.\nSo when Registry service tryes to fetch the \"right manager\" for the entity class, it always brings the first defined manager by its name.\nHow could I change this behaviour in a clean way?. ",
    "fpradolini": "Gracias a vos Javier por tu pronta respuesta. excelente trabajo!\n. ",
    "fadoe": "@javiereguiluz Yes, you can wrap the code in a try/catch-block and give the error to the form object. I didn't have time until now to look how I can implement this in EasyAdminBundle. When I find a solution you get a PR.\nbtw: Very nice tool. Thank you!\n. @Pierstoval Thanks for your comment. It sounds very good. I like a message in the form \"there are required fields\" and i can fix my mistake.\nBy writing this text I have a new idea. Can we compare the data again the database schema? So we can catch a \"required field error\" before we store the data in database.\n@javiereguiluz What solution do you prefer? Try/catch or a EventListener? Any other ideas?\n. @Pierstoval The same old mistake as every time. I created a validation.yml and not working. After disabling annotations it works. Now we are talking only about database errors and not validation errors.\nI've been thinking about the listener. In your example the exception is converted to a json response. We need to catch a database exception and show the input form again. I don't think this is a good job for a listener.\n. This sounds good. Can you implement it?\n. This sounds good. Can you implement it?\n. :+1: \n. :+1: \n. I wrote a standard-application with only needed symfony components to get them running. I use it for small projects.\nThis weekend I needed only a input form for some data. After adding the EasyAdminBundle to composer I get the complete symfony stuff. But I don't need them.\nThe only negative thing is, it take longer to upload the project to a webserver.\nI prefer bundles, components and so on ... they include only libraries they really need and no big frameworks. So you can also look if a library is really required.\nSome examples:\nNeed EAB the swiftmailer? Installed with swiftmailer bridge\nNeed EAB monolog? Installed with monolog bridge\nNeed EAB BrowserKit? Only f\u00fcr UnitTests\n...\nIt's okay for me when you say it is easier to include the complete symfony framework. I think many developers use this bundle with the standard edition. But some sometimes not ;-).\n. @Pierstoval \"you should consider a more secure deployment process\" I use a sftp connection.\n. The easiest way imho: Have a look or grep at the \"use\" statements in the EasyAdminBundle/src files and include this components as \"require\" in composer.json. Running the tests and add all other missing libraries to require-dev.\n. @Pierstoval I will have a look at pr #424 and #432 first and then I give you an answer. :)\n. @javiereguiluz Thank you for your tip. I found the part in the documentation. I will test it the next days.\n. It works.\n. @javiereguiluz I work with my reported changes since some weeks and no other problems occur until now. I will have a look at the other issues. Maybe I will find a solution.. Why not add parameters to createOrmPaginator() to configure DoctrineORMAdapter()?. Why not add parameters to createOrmPaginator() to configure DoctrineORMAdapter()?. You don't need to wirte your own HTML. You can use Symfony form for that.\nI would write a new action, read the data from the database into the Symfony form and render this. Then make your changes and store this as a new item.\nI think you must create a own Symfony form type because the easyadmin form builder is not flexible enough.. You don't need to wirte your own HTML. You can use Symfony form for that.\nI would write a new action, read the data from the database into the Symfony form and render this. Then make your changes and store this as a new item.\nI think you must create a own Symfony form type because the easyadmin form builder is not flexible enough.. I had a similar problem and solved it with native SQL and manual mapping: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/native-sql.html\nWorks good for me.. First create a entity. In your case\nphp\nclass ContractsLists {\n    private $entities;\n    private $maxEntityId;\n    private $orderGroup;\n}\nThen create your Query. I used Zend\\Db\\Sql\\Select, because it is more flexible then doctrine query builder. Or you write plain SQL.\nNow you must map the query results to the entity. This looks like this:\n```php\n$resultSetMappingBuilder = new ResultSetMappingBuilder($this->entityManager);\n$resultSetMappingBuilder->addEntityResult(ContractList::class, 'c');\n// addFieldResult parameters: c = entity class alias, query field name (use max(entiy.id) as max_entity_id), entity property name\n$resultSetMappingBuilder->addFieldResult('c', 'entity', 'entity');\n$resultSetMappingBuilder->addFieldResul('c', 'max_entity_id', 'maxEntityId');\n// more mappings here\n// ...\n// execute the query, $sql is your plain SQL\n$query = $this->entityManager->createNativeQuery($sql, $resultSetMappingBuilder);\n// id added the result to a doctrine ArrayCollection, so I can use EasyAdmin to show the results\nreturn new ArrayCollection($query->getResult());\n```\nNow write a new action in your controller and render a normal list view. You can have a look in the listAction how you can do this.\nI use this solution for all statistic queries that doctrine can not handle (like yours).\nHappy coding :). It's hart to give you a answer without exact bug description (many different errors?). You can work with DDD-Entities in EasyAdmin, but not out of the box. Please give us some example code, so we can help you.. It's hart to give you a answer without exact bug description (many different errors?). You can work with DDD-Entities in EasyAdmin, but not out of the box. Please give us some example code, so we can help you.. ",
    "kbsali": "@antkowiakit I'm sure you got around this already! :) But just for the record here is a nice post by @level7systems about implementing upload and more tweaks : http://level7systems.co.uk/en/more-with-easyadminbundle/ (code available here : https://github.com/level7systems/sf2-easyadmin )\n. @antkowiakit I'm sure you got around this already! :) But just for the record here is a nice post by @level7systems about implementing upload and more tweaks : http://level7systems.co.uk/en/more-with-easyadminbundle/ (code available here : https://github.com/level7systems/sf2-easyadmin )\n. that's also an issue I was trying to solve, and I bet there are more people looking for this kind of hint.\nMaybe it would be a good idea to have a tips & hint section in the docs or something similar..? \n. ",
    "claborier": "Hi guys, \nI'm currently searching a way to override the redirection after creating/editing an item so I can stay on the same page. I've browse a lot of page but this is the only topic I find taking about that (it is quite similar with the sonata solution : \"save\" versus \"save and finish\")\nThe main reason I want to achieve that is because for some entities I have different \"new\" and \"edit\" forms : the edit form is conditioned by the data of of the creation step.\nSo, has something been done about this subject ? \nThanks !. An other way to achieve my goal would have been to set a custom form type for my parent entity, as suggested in this issue : https://github.com/javiereguiluz/EasyAdminBundle/issues/390\nDoing this way would have allow me to pass the parameter (the userID) to the ioConstraint formType. \n. Ok so just to let you know I solve my problem overriding the create<Entity>FormBuilder() method and using FormEvent\nHere is the admin controller code \n```php\npublic function createInsertionOrderEntityFormBuilder($entity, $view){\n    // Get formBuilder to access its children ioConstraint to give it data\n    $formBuilder = parent::createEntityFormBuilder($entity, $view);\n\n    if($view == \"edit\" && $formBuilder->getData()->getUserForm()) {\n\n        $user = $formBuilder->getData()->getUser();\n\n        $formBuilder->addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event) use ($form) {\n\n            /**\n             * An IoContraint associated to an IO directly depends on the \"user\" properties attached to the IO\n             * The IoConstraint \"name\" property should be a select list of all \"Io->getUsers()->getName()\"\n             * Data from the Io user must be given to its children form (the ioConstraint form)\n             * TO achieve that we use form event to inject the children formType with some data as parameters\n             */\n            $event->getForm()->add('ioConstraints', CollectionType::class, [\n                'entry_type'    => IoConstraintType::class,\n                'allow_add'     => true,\n                'allow_delete'  => true,\n                'by_reference'  => false,\n                'entry_options' => [\n                    'attr' => [\n                        \"user\" => $user,\n                    ]\n                ]\n            ]);\n\n        });\n    }\n    return $formBuilder;\n}\n\n```\nSo in the IoConstraintType I'm now able to filter the available choice of a field. \n. But this solve a problem to create an other one : now that I've customize my InsertionOrder form builder to manage its child IoConstraint, I loose the easy_admin display configuration. \n=> The embedded form IoConstraint is not displayed well as it now appears under the form actions. \nI think that this is a know problem, but I don't know if there is an \"easy\" way to solve that.\nIs overriding the edit view for that entity the solution I need ?  \n. ",
    "fabiofdsantos": "@claborier,\nI had the same problem. You just need to create a custom template for actions (actions.html.twig).\nBasically I'm changing the referrer present on \"edit\" links because of the implementation of method redirectToReferrer in AdminController.php. It needs a referrer, otherwise it will redirect you to the \"list\" or the \"homepage\" if the first action is not allowed.\nFind:\n{{ include('@EasyAdmin/default/includes/_actions.html.twig', {\nReplace with:\n{{ include('@MyBundle/Resources/views/Default/custom_actions.html.twig', {\ncustom_actions.html.twig:\n```\n{% set original_request_params = request_parameters %} \n{% for action in actions %} \n{% if 'list' == action.name %} \n    {% set action_href = request_parameters.referer|default('') ? request_parameters.referer|easyadmin_urldecode : path('easyadmin', request_parameters|merge({ action: 'list' })) %} \n{% elseif 'method' == action.type %} \n    {% if 'edit' == action.name %} \n        {% set tmpReferrer = path('easyadmin', { action: action.name, id: item_id, entity: request_parameters['entity'] })|url_encode %} \n        {% set request_parameters = request_parameters|merge({'referer' : tmpReferrer }) %}\n\n        {% set action_href = path('easyadmin', request_parameters|merge({ action: action.name, id: item_id })) %} \n    {% else %} \n        {% set request_parameters = original_request_params %} \n        {% set action_href = path('easyadmin', request_parameters|merge({ action: action.name, id: item_id })) %} \n    {% endif %} \n{% elseif 'route' == action.type %} \n    {% set action_href = path(action.name, request_parameters|merge({ action: action.name, id: item_id })) %} \n{% endif %}\n\n<a class=\"{{ action.css_class|default('') }}\" title=\"{{ action.title|default('') is empty ? '' : action.title|trans(trans_parameters, translation_domain) }}\" href=\"{{ action_href }}\" target=\"{{ action.target }}\"> \n    {%- if action.icon %}<i class=\"fa fa-{{ action.icon }}\"></i> {% endif -%} \n    {%- if action.label is defined and not action.label is empty -%} \n        {{ action.label|trans(arguments = trans_parameters|merge({ '%entity_id%': item_id }), domain = translation_domain) }} \n    {%- endif -%} \n</a>\n\n{% endfor %}\n```. ",
    "mashware": "\nPierstoval, your question has been responded.\nI found another bug with the menu, as you can see in the image.\nThis is because flexMenu is prepared only for horizontal menus, it detect the top of each element with the top + height of the first element, if greater mean that is below the horizontal line and then that element is introduced into a submenu.\nAs you can see when the menu is vertical, that condition always match, as the top of all the elements will always be higher than the first element.\nProposals:\n- Change plugin.\n- Edit this plugin to our requirements. For this we must discuss how, one possibility is to detect if the elements are floating and act only in this case.\n. Another solution, match 'media query' with flexMenu.\nphp\nif ($(window).width() > 768 && $(window).width() < 1024) { //Before 1200\n        mainMenuItems.flexMenu({'linkText': '...'});\n    } else {\n        mainMenuItems.flexMenu({ 'undo': true });\n    }\nThis option would not modify the plugin and it seems to work.\n. ",
    "RogerBCA": "I posted a possible solution #296 \n. I posted a possible solution #296 \n. Thanks!\nIf that I will.\nAnother query.\nDo you have validations? or development with jQuery also because I get a message \"SQL: not null\" if I do not complete the field.\n. Thanks!\nIf that I will.\nAnother query.\nDo you have validations? or development with jQuery also because I get a message \"SQL: not null\" if I do not complete the field.\n. @Pierstoval you used Gedmo\\Translation, I want to use the add administrator but only saved en_US, but I can not save in another language when I change the admin url.\n\nTable ext_translations\n\n. Hola, es correcto hablo espa\u00f1ol.\nLo que quiero hacer es que en el listado me muestre el idioma que estoy actualmente /es/admin/ o /en/admin/, ya hice el proceso de guardar por idioma con la siguiente funcion:.\nphp\n    public function prePersistServiciosEntity($entity)\n    {\n        $entity->setTranslatableLocale($this->get('request')->getLocale());\n    }\n    public function preUpdateServiciosEntity($entity)\n    {\n        $entity->setTranslatableLocale($this->get('request')->getLocale());\n    }\nPero al momento de mostrar la informaci\u00f3n se queda en un solo idioma por defecto que es espa\u00f1ol.\n. Cierro el tema, ya encontre una solucion para el idioma y no se tiene que modificar nada mas de AdminController.php publicare un tutorial y agregare un enlace aqui si es que alguien tiene el mismo problema ya que en google esta nulo de manuales en espa\u00f1ol y su oficial lo veo algo pobre de explicaci\u00f3n.\n. I see it as a form that can be declared in the config.yml\n``` yml\napp/config/config.yml\neasy_admin:\n    entities:\n        About:\n            single: true\n            class: AppBundle\\Entity\\About\n```\n. Since you use a field out of the ordinary to use your body date you do the conversion:\nphp\npublic function getDateonlist()\n{\n    /* Here you make the conversion and you want to display results */\n    return $this->dateonlist;\n}\n. Since you use a field out of the ordinary to use your body date you do the conversion:\nphp\npublic function getDateonlist()\n{\n    /* Here you make the conversion and you want to display results */\n    return $this->dateonlist;\n}\n. It is used in your src/AppBundle/Entity/Category for example.\n. It is used in your src/AppBundle/Entity/Category for example.\n. ",
    "aqnouch": "you're welcome :blush:\n. you're welcome :blush:\n. ",
    "wouterj": "The |raw filter is completely valid and I recommend not to remove it. In CSS, variables are escaped using the CSS escape strategy, which means # will be escaped as \\23 (just like < is escaped in HTML without the |raw filter).\nDetermining the escape strategy based on the file extension was added in Twig 1.17. As TwigBundle 2.6 still supports Twig <1.17, it could not use the Twig_FileExtensionEscapingStrategy class. This is why the bundle comes with a custom file extensino escaping strategy class. TwigBundle 2.7 dropped Twig <1.18 support, so it was no longer needed to use this class.\nThe CSS escaping strategy was introduced in Twig 1.18. This means the guesser in the TwigBundle doesn't yet enable the CSS escaper (again, to support Twig <1.18).\nThis is why the CSS strategy is used in Symfony 2.7+ and why it wasn't using the CSS escaping strategy in Symfony 2.6 and below. I'm unsure if this is called a BC break (I would rather put it in the list of things that the bundle did wrong before).\n. I agree with you, see symfony/symfony#14666 :)\n. @javiereguiluz to make your life easier, I recommend to install symfony/phpunit-bridge in the 2.8 test. This will catch all deprecated feature usages and reports them nicely. After you've fixed all deprecation notices, the 3.0 build should pass (otherwise, create a issue/PR to Symfony to report a missing deprecation notice)\n. @javiereguiluz to make your life easier, I recommend to install symfony/phpunit-bridge in the 2.8 test. This will catch all deprecated feature usages and reports them nicely. After you've fixed all deprecation notices, the 3.0 build should pass (otherwise, create a issue/PR to Symfony to report a missing deprecation notice)\n. You also have to change the getExtendedType() method to return the FQCN on 2.8+ (e.g. by checking class_exists('Symfony\\Component\\Form\\Util\\StringUtil')).\n. You also have to change the getExtendedType() method to return the FQCN on 2.8+ (e.g. by checking class_exists('Symfony\\Component\\Form\\Util\\StringUtil')).\n. Symfony/symfony is installed, which includes the asset component. Not sure about the error as well, but it didn't occur in the latest builds\n. Symfony/symfony is installed, which includes the asset component. Not sure about the error as well, but it didn't occur in the latest builds\n. Good job @ogizanagi!\n. I guess this breaks on <2.8, as you need to have an alias attribute. You can leave the alias attribute in there and add the extended-type attribute (any extra attribute doesn't matter and Symfony 2.8 will use extended-type when available and simply ignore alias)\n. this should be set to strict on 2.8 and 3.0, as you want to get the deprecation messages and fix them. Only set it to weak if all reported deprecation notices are unfixable because of compat with other versions. (you can also choose to use the composer require command and execute it on 2.8 only, or to include it in SYMFONY_VERSION)\n. this method will only be called by legacy forms, so we can just always return getBlockPrefix\n. ",
    "joskfg": "Ok, then it is not possible configure the easy admin in different bundles :-S. How do you create then multiple administration backends?\n. Could I exend the AdminController and use it to modify the config?\nMultiple kernels I think it is not a solution because I want to have an APP like this:\nTool1Bundle with admin\nTool2Bundle with admin\nTool3Bundle with admin\nMainBundle to user the tool services\nSo I can have a lot of bundles. I think that I have a problem with the architecture. Is anybody using multiple administration panels for different parts of the application?\nI don't see a solution put maybe 20 entities in the same admin control panel without differentiation.\n. Ok, thanks a lot for the help. I think that I'll try this last suggestion or use a CRUDL generator based in code.\n. ",
    "leonex-cs1": "@javiereguiluz Is the need of multiple backends really so rare? In my case I need a backend for customers and another one for admins, where the shown menu entries should depend on the roles, the current user has.. @Pierstoval Thanks for your fast response. Yes, I am already working on a solution for that. Is there already a tutorial showing what's the best way to achieve this?. @Pierstoval My idea was to create an AdminController which extends the EasyAdmin AdminController and overwrite isActionAllowed\nThere I added this check:\nphp\nif (isset($this->entity['is_granted']) && !$this->isGranted($this->entity['is_granted'])) {\n    return false;\n}\nThis way I can do the authorization config directly in the app/config/config.yml and do not have to write action methods for each action :-)\nyml\neasy_admin:\n    entities:\n        Webshop:\n            is_granted: 'ROLE_USER'. ",
    "txurdi": "I also have to render diferent backend for admin and for customer.\nI think to solve this we can override menu.html.twig.\nIn config, in each menu item we can add \"role: ROLE_X\"\nAnd in the template draw the menu item  only if the actual ROLE is item.role\ncan we override only \"block main_menu\"? I can't do it (perhaps because it is in a include)\nBut I think it could be great if we can define diferent menus in the config, one for each ROLE for example.. I also have to render diferent backend for admin and for customer.\nI think to solve this we can override menu.html.twig.\nIn config, in each menu item we can add \"role: ROLE_X\"\nAnd in the template draw the menu item  only if the actual ROLE is item.role\ncan we override only \"block main_menu\"? I can't do it (perhaps because it is in a include)\nBut I think it could be great if we can define diferent menus in the config, one for each ROLE for example.. I think this is called master-slave?\nI would be interested in it too. . I think this is called master-slave?\nI would be interested in it too. . Could be \"fieldType\" instead of \"type\"?. Hi, I have something similar.\nI use \"a2lix/translation-form-bundle\".\nWith this bundle, in easyadmin, you can put in the form fields something like this:\nyaml\n - { property: 'translations', label: '', type: 'a2lix_translations'  }\nand in list and show, I have this \"hacks\":\nyaml\n - { property: 'dameTraducciones', campo: 'title', label: 'Titulo', template: 'traducciones' }\nIn the entity, you must add this relation and public method:\nphp\n    /**\n     * @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\PlanTranslation\", mappedBy=\"translatable\")\n     */\n    public  $arTraducciones;\nphp\n    public function dameTraducciones() {\n        $arTraducciones=$this->arTraducciones;\n        $campo = array('title', 'other_tranlatable_thing');\n        $arTxtTraducciones = array();\n        foreach ($arTraducciones as $objTrad) {\n            if (is_array($campo)) {\n                foreach ($campo as $txtCampo) {\n                    $geter = 'get'.$txtCampo;\n                    $arTxtTraducciones[$txtCampo][$objTrad->getLocale()] = $objTrad->$geter();\n                }\n//            } else {\n//                $geter = 'get'.$campo;\n//                $arTxtTraducciones[$objTrad->getLocale()] = $objTrad->$geter();\n            }\n        }\n        return $arTxtTraducciones;\n    }\nAnd finally, add a template in app/Resources/views/easy_admin/traducciones.html.twig:\ntwig\n{% set campo = value[field_options.campo]|default('') %}\n{% set locale = app.request.locale %}\n{% if campo is iterable %}\n    <p>\n        {% set otros_idiomas = '' %}\n        {% set idioma_principal = '<span>'~campo[locale]|default('?')~'</span>' %}\n        {% for lang,val in campo %}\n            {% set otros_idiomas = otros_idiomas ~ '<p>['~lang~'] - '~val~'</p>' %}\n        {% endfor %}\n        {% if view=='list' %}\n            <span href=\"#\" data-toggle=\"tooltip\" title=\"{{ otros_idiomas|raw }}\">{{ idioma_principal|raw }} <i class=\"fa fa-info-circle\"></i></span>\n        {% else %}\n            {{ otros_idiomas|raw }}\n        {% endif %}\n    </p>\n{% endif %}\n. ",
    "Zubis": "It works well ! \nI'm embarrassed for not having solved it myself.\nThanks for this fix.\n. there is a discussion about it here : #206\n. ",
    "richwandell": "right now if I add this to my config.yaml\nyaml\n            list:\n                fields:\n                    - { property: 'testthing' }\nand add this to my entity \nphp\n    public function testthing(){\n        return \"hi\";\n    }\nthen I will get what I was looking for. Am I missing something? \n. I found this issue when trying to find a way to add an html list into the middle of the list view. \nhtml\n<ul>\n<li>Thing1</li>\n<li>Thing2</li>\n</ul>\nusing the virtual properties this does not work. Would your feature request give the ability to do this?\n. in a table cell. \nif I return the html list from a virtual property it gets truncated and displays as text\n. thanks for the help. i was just about to reply saying I found what you described above. Worked around this by subscribing in the listAction in my AdminController\n``` php\n    protected function listAction()\n    {\n        $dispatcher = $this->get('event_dispatcher');\n        $subscriber = new EasyAdminSubscriber();\n        $dispatcher->addSubscriber($subscriber);\n        return parent::listAction();\n}\n\n```\nthanks again this worked for me\n. thanks again guys. I know it's not related to this repo its more of a symfony how to so I really appreciate the help!\n. ",
    "andho": "@javiereguiluz The link is broken. I cannot find the documentation for custom-menu feature.\n. @javiereguiluz The link is broken. I cannot find the documentation for custom-menu feature.\n. This is really good. I hacked away at _actions.twig.html to achieve this. I think, before closing this, it would be great if we can have this snippet in the tutorials.\n. ",
    "igormukhingmailcom": "@Pierstoval Yes, you're understand exactly what I mean - something like jQuery sortable + https://sonata-project.org/bundles/admin/master/doc/cookbook/recipe_sortable_listing.html\nThanks for cookbook.\n. @javiereguiluz You confused because there are some sortable functionality exists in bundle, but that is just sorting by any field to view.\nI mean a little bit another - Sortable + Gedmo as described at https://sonata-project.org/bundles/admin/master/doc/cookbook/recipe_sortable_listing.html for reordering data.\n. ",
    "timonf": "Hey there!\nI need a similar feature. I am currently developing a ranking / incremental field. So you can easily change numbers. Here is my approach (currently working):\n\nBut I have still one problem: Columns resort only after page reload (if you sort by \"Order index\" column).\nWhat do you think about my implementation?\nI thinking about a PR if you like it!\nUpdate: I pushed my changes into my own branch: https://github.com/timonf/EasyAdminBundle/tree/rank_move_buttons - but the mentioned problem still exists. \nConfiguration looks like:\nyaml\n      list:\n        fields:\n          - id\n          - {property: 'orderIndex', type: 'rank'}\nYou can use this for also for other types of numbers like priority values or something else.\n. Hey there!\nI need a similar feature. I am currently developing a ranking / incremental field. So you can easily change numbers. Here is my approach (currently working):\n\nBut I have still one problem: Columns resort only after page reload (if you sort by \"Order index\" column).\nWhat do you think about my implementation?\nI thinking about a PR if you like it!\nUpdate: I pushed my changes into my own branch: https://github.com/timonf/EasyAdminBundle/tree/rank_move_buttons - but the mentioned problem still exists. \nConfiguration looks like:\nyaml\n      list:\n        fields:\n          - id\n          - {property: 'orderIndex', type: 'rank'}\nYou can use this for also for other types of numbers like priority values or something else.\n. It would be a good idea to have a \"patch\" action to update single fields. The nice toggle button feature already change content by doing some AJAX but it won't validated on Symfony side. (@Assert\\True will be ignored, I think?). I'm currently working on #352 - there I made an AJAX call to the editAction (like the toggle button). It is working, but does not look really pretty.. It would be a good idea to have a \"patch\" action to update single fields. The nice toggle button feature already change content by doing some AJAX but it won't validated on Symfony side. (@Assert\\True will be ignored, I think?). I'm currently working on #352 - there I made an AJAX call to the editAction (like the toggle button). It is working, but does not look really pretty.. +1\nYeah, I'm not alone. I have the same problem:\n```\n$ phpunit\nPHPUnit 5.6.3 by Sebastian Bergmann and contributors.\ncopy([...]/Projects/EasyAdminBundle/Tests/../build/test.db): failed to open stream: No such file or directory\n```\n\"~/Projects/EasyAdminBundle/build\" does not contain the DB on my machine:\nbuild\n\u251c\u2500\u2500 cache\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 default_backend\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 annotations\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 annotations.map\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 classes.map\n\u2514\u2500\u2500 kernel_logs\n    \u2514\u2500\u2500 default_backend\nI am using:\n- Ubuntu 16.04\n- PHP 7.0.13 (provided by Ubuntu)\nThe question is: Where is the test db or the documentation to run the tests? :grin: \n. Hi @alberto-coolshop \nI changed one line in this file: Tests/bootstrap.php:\n```php\n// Load fixtures of the AppTestBundle\n$input = new ArrayInput(array('command' => 'doctrine:fixtures:load', '--no-interaction' => true, '--append' => false));\n$application->run($input, new \\Symfony\\Component\\Console\\Output\\ConsoleOutput());\n// Make a copy of the original SQLite database to use the same unmodified database in every test\ncopy($buildDir.'/test.db', $buildDir.'/original_test.db');\n```\nI am using ConsoleOutput instead of NullOutput now. After running PhpUnit again, I got this error:\n```\n[Symfony\\Component\\DependencyInjection\\Exception\\ServiceNotFoundException]                \n  The service \"twig\" has a dependency on a non-existent service \"debug.file_link_formatter\".  \nPHPUnit 5.6.3 by Sebastian Bergmann and contributors.\ncopy([...]/Projects/EasyAdminBundle/Tests/../build/test.db): failed to open stream: No such file or directory\n```\nPlease change the line like mine. Do you get the same error?\nTimon\n. Thank you! Works well :). Thank you! Works well :). ",
    "ahmed-bhs": "@timonf Amazing new feature, did you find any solution for the Odder by 'Order index' !!.  @timonf Amazing new feature, did you find any solution for the Odder by 'Order index' !!. I share with you a quick solution to put in place the toggle checkbox field:\nyaml                   \n- { property: 'enabled', type_options: {attr: {'data-toggle': 'toggle', 'data-size':'mini', 'data-onstyle':'success', 'data-offstyle': 'danger' }}  }\nI want to override the form but I'm think we need to override the hole edit template then add some the [data-widget='toggle'] to the {{form(form.enabled, {'attr': {.....})}} !! So @javiereguiluz Is it possible to just applay a form template to just one field ? like we do in view with the template option ?\nI want finnally to apply the template in the design section.. Could you provide us your component plz?. does this for you ??  where you put class AdminController  ?under AppBundle\\controller !. @alberto-coolshop @javiereguiluz  Hi ,\nI'm trying to implement your bundle into my project , the probl\u00e9m when i set the configuration under template, get this error:\nUnrecognized options \"batch_checkbox, batch_actions\" under \"easy_admin.design.templates\"\ntake a look to the exception : \n any idea plz !!!. can you provide me you'r  getExportFile() code, i wanna adapt it with my aplication. Can you provide me your project code plz. @xabbuh  do you have any idea how to translate the help messages ?\nfor exmaple :\neasy_admin:\n    entities:\nDevise:\n            class: AppBundle\\Entity\\Devise\n            list:\n                title: Les demandes de devis\n                help: 'Pour valider une demande , just changer le status correspondant'. routing.yml:\neasy_admin_bundle:\n    resource: \"@EasyAdminBundle/Controller/\"\n    type:     annotation\n    prefix:   /{_locale}/admin\n. @javiereguiluz  any heplp plz. @xabbuh  @reypm  no i ,just asking for the right solution , i have a help message :\neasy_admin:\n    entities:\n        Devise:\n            class: AppBundle\\Entity\\Devise\n            list:\n                title: Les demandes de devis\n                help: 'Pour valider une demande , just changer le status correspondant'\nJust a solution to translate it ?what do i need to put under messages.en.yml ?. @xabbuh thank you for help it works :). @xabbuh Post updated , take a look , by the way the user.php class is extended from BaseUser.php class offred by FosUserBundle.\nI dont know why when i try to modify the password to a new password , it still the old one.. I fixed by adding these line\n```\n    $entity->setPlainPassword($password);\n        $userManager->updatePassword($entity);  \n        $this->em->flush();\n\nBut when i look to the data bse , the salt still null !!. And where you just put the \"KMS\\FroalaEditorBundle\\Form\\Type\\FroalaEditorType\" ? under the configuration like this !!:yaml\n- { property: 'story', type: 'KMS\\FroalaEditorBundle\\Form\\Type\\FroalaEditorType' }. Any working progress with the modal feature istead of New window  ?. ",
    "feyyazesat": "Hi,\nI couldn't see the related entity link in the list view. So I did dig into the code.\nIn Twig Extension  It gets targetEntityClassName but in configurator\nIt tries to match with aliases. So it couldn't find entity, if aliasing used in config.\nUsing with simple configuration as mentioned here There is no problem but through extended configuration syntax. It looses the real class name.\n. ",
    "arnaugm": "You're welcome my friend ;)\n. ",
    "nzurita": "Yes, that was it, EasyAdminBundle.es.yml, thanks\n. ",
    "jawaProject": "Hi. Any idea how to configure collecton in config.yml?I have:\nform:\n                fields:\n                    - { property: 'name', label: 'Name'}\n                    - { property: 'imageFile', type: 'file', label: 'Upload logo', help: 'Select file to upload / change logo' }\n                    - { property: 'width', label: 'Width'}\n                    - { property: 'height', label: 'Height'}\n                    - { property: 'orientation', label: 'Orientation'}\n                    - { property: 'tags', type: collection , label: 'Tags',} ????????????????????\n                    - { property: 'createdBy', label: 'Created By'}\nIn normal form file its really simple:\n            ->add('patients','collection', array(\n                'type' => new PatientType(),   <- how to indicate  obj in the example above?\n                'allow_add' => true,\n                'label' => false\n            ))\n. ",
    "sebastianlp": "Hi @arukado-sama I'm testing this admin with S2.7 and FOSUB 2.0.\nI detected that the problem with the roles and the view is this getter\n``` php\n    //FOS\\UserBundle\\Model\\User\n/**\n * Returns the user roles\n *\n * @return array The roles\n */\npublic function getRoles()\n{\n    $roles = $this->roles;\n\n    foreach ($this->getGroups() as $group) {\n        $roles = array_merge($roles, $group->getRoles());\n    }\n\n    // we need to make sure to have at least one role\n    $roles[] = static::ROLE_DEFAULT;\n\n    return array_unique($roles);\n}\n\n```\nThis is returning at least one role, so if you check your db you'll see that you have none role, but in your admin view you'll see ROLE_CLIENT.\n. Hi! And thanks for response!\n@Pierstoval Hmmm what do you mean with \"Maybe you could use another method in your entity to retrieve the web-relative image path?\" the Vich bundle handles the request of the file with the config.yml bundle section, I don't know if I can change anything in the entity.\n@javiereguiluz I followed that guide.\nI'm thinking if it's a thing with my virtual host? \n. Ok. I found the problem. The thing is, I was using the File property of my entity, this cause that the Vich bundle returns that messy path. \nNow I changed that property by the name of the image, and I'm using '/contenido/imagenes/noticias' in the base_path. It will showing the image in the right way.\nI think this is what @Pierstoval was saying that had to change, right?\nAnyway, thank you and keep the great job with this bundle. Anything I could help, I will around here!\n. Strange.\nHere is my code and my tree:\nyaml\neasy_admin:\n    design:\n        brand_color: '#972269'\n        color_scheme: 'light'\n        form_theme: 'vertical'\n        templates:\n            label_null: ':easy_admin:label_null.html.twig'\n            field_image: ':easy_admin:field_image.html.twig'\n            field_image: ':easy_admin:field_toggle.html.twig'\n    site_name: '<img src=\"/bundles/fideisaludfrontend/images/gobabierto.svg\" />'\n    formats:\n        date:     'd/m/Y'\n        time:     'H:i'\n        datetime: 'd/m/Y H:i:s'\n    entities:\n        Categorias:\n            disabled_actions: ['delete']\n            class: Fideisalud\\CoreBundle\\Entity\\Category\n            templates:\n                field_array: ':easy_admin:field_array.html.twig'\n            list:\n                fields:\n                    - {property: 'id', label: '#'}\n                    - {property: 'name', label: 'Categor\u00eda'}\n                    - {property: 'notices', type:'array', label: 'Noticias'}\n                actions:\n                    - { name: 'show', icon: 'search', label: '' }\n                    - { name: 'edit', icon: 'pencil', label: '' }\n            show:\n                fields:\n                    - {property: 'name', label: 'Categor\u00eda', label: 'Noticias'}\n                    - { property: 'notices', template:'notice_collection'}\nAnd my tree \n\n. Yes I tried that out. The solution I found was to overwrite the field_array template for that entity, but I think that doesn't is the expected working.\n. Perhaps I didn't explain myself, this is what I've done, to get a list of my related notices entities:\nyaml\n        Categorias:\n            templates:\n                field_array: ':easy_admin:field_array.html.twig'\n            show:\n                fields:\n                    - { property: 'notices', type: 'array'}\nNotices is a OneToMany relation.\nGoing back to the origin of this issue, when i try to use the \"template\" property, it seems like the admin didn't find the correct template, so it render the default one. Here is the output of the profiler:\ndisabled_actions:\n    - delete\nclass: Fideisalud\\CoreBundle\\Entity\\Category\nlist:\n    fields:\n        id: { property: id, label: '#', template: null }\n        name: { property: name, label: Categor\u00eda, template: null }\n        notices: { property: notices, label: 'Cantidad de Noticias', template: null }\n    actions:\n        show: { name: show, type: method, label: '', class: '', icon: search }\n        edit: { name: edit, type: method, label: '', class: '', icon: pencil }\n        search: { name: search, type: method, label: action.search, class: '', icon: null }\n        new: { name: new, type: method, label: action.new, class: '', icon: null }\n        list: { name: list, type: method, label: action.list, class: '', icon: null }\nshow:\n    fields:\n        name: { property: name, label: Categor\u00eda, template: null }\n        notices: { property: notices, template: easy_admin/notice_collection.html.twig }\n        createdAt: { property: createdAt, type: datetime, label: 'Fecha de creaci\u00f3n', template: null }\n        updatedAt: { property: updatedAt, type: datetime, label: 'Fecha de modificaci\u00f3n', template: null }\n    actions:\n        delete: { name: delete, type: method, label: action.delete, class: '', icon: trash }\n        list: { name: list, type: method, label: action.list, class: '', icon: null }\n        edit: { name: edit, type: method, label: action.edit, class: '', icon: edit }\nform:\n    fields:\n        - { property: name, label: Categor\u00eda }\nlabel: Categorias\nname: Categorias\nnew:\n    fields:\n        name: { property: name, label: Categor\u00eda }\n    actions:\n        list: { name: list, type: method, label: action.list, class: '', icon: null }\nedit:\n    fields:\n        name: { property: name, label: Categor\u00eda }\n    actions:\n        delete: { name: delete, type: method, label: action.delete, class: '', icon: trash }\n        list: { name: list, type: method, label: action.list, class: '', icon: null }\nsearch:\n    fields: {  }\ntemplates:\n    layout: '@EasyAdmin/default/layout.html.twig'\n    edit: '@EasyAdmin/default/edit.html.twig'\n    list: '@EasyAdmin/default/list.html.twig'\n    new: '@EasyAdmin/default/new.html.twig'\n    show: '@EasyAdmin/default/show.html.twig'\n    form: '@EasyAdmin/default/form.html.twig'\n    flash_messages: '@EasyAdmin/default/flash_messages.html.twig'\n    paginator: '@EasyAdmin/default/paginator.html.twig'\n    field_array: easy_admin/field_array.html.twig\n    field_association: '@EasyAdmin/default/field_association.html.twig'\n    field_bigint: '@EasyAdmin/default/field_bigint.html.twig'\n    field_boolean: '@EasyAdmin/default/field_boolean.html.twig'\n    field_date: '@EasyAdmin/default/field_date.html.twig'\n    field_datetime: '@EasyAdmin/default/field_datetime.html.twig'\n    field_datetimetz: '@EasyAdmin/default/field_datetimetz.html.twig'\n    field_decimal: '@EasyAdmin/default/field_decimal.html.twig'\n    field_float: '@EasyAdmin/default/field_float.html.twig'\n    field_id: '@EasyAdmin/default/field_id.html.twig'\n    field_image: ':easy_admin:field_image.html.twig'\n    field_integer: '@EasyAdmin/default/field_integer.html.twig'\n    field_simple_array: '@EasyAdmin/default/field_simple_array.html.twig'\n    field_smallint: '@EasyAdmin/default/field_smallint.html.twig'\n    field_string: '@EasyAdmin/default/field_string.html.twig'\n    field_text: '@EasyAdmin/default/field_text.html.twig'\n    field_time: '@EasyAdmin/default/field_time.html.twig'\n    field_toggle: easy_admin/field_toggle.html.twig\n    label_empty: '@EasyAdmin/default/label_empty.html.twig'\n    label_inaccessible: '@EasyAdmin/default/label_inaccessible.html.twig'\n    label_null: ':easy_admin:label_null.html.twig'\n    label_undefined: '@EasyAdmin/default/label_undefined.html.twig'\n. But that is the correct location? :/\n. You're totally right. Now easyadmin\n. ",
    "dnagirl": "If you're going to allow custom field templates (Yay!), I'd suggest that rather than overriding an existing template, you allow new templates and a defined template naming scheme like field_someFormType.html.twig.  For example, my TitleType::getName() returns 'title', so its field template file would be called 'field_title.html.twig'. This custom field template could be required to live in app/Resources/views/easyAdmin/default or in app/Resources/views/easyAdmin/customfields or in an entity-specific directory.\nThis approach would obviate the issue of translation domains since those could be coded into the template. e.g.\n{{ value|trans({}, 'MyAppContactBundle')}}\nAnd it would save having to put the config through a Twig parser.\n. @Pierstoval , I like your naming scheme better than what I suggested.\n. ie9 has no problem with the menu being on top (instead of side). So maybe there is a way to turn  @media (min-width: 1200px) off for ie9?\n. ",
    "ianfp": "Is there currently any way to delete items from a collection type?\nHere's my code:\n``` yaml\nconfig.yml\neasy_admin:\n    entities:\n        MyEntity:\n            class: MyProject\\Entity\\MyEntity\n            form:\n                fields:\n                    - property: tags\n                      # Symfony 2.8-style form names (works great!)\n                      type: Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType\n                      type_options:\n                          type: Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType\n                          allow_add: true\n                          allow_delete: true\n                          by_reference: false\n```\n``` php\n// MyEntity.php\nclass MyEntity {\n    /* @param string $name /\n    public function addTag($name) {}\n/** @param string $name */\npublic function removeTag($name) {}\n\n/** @return string[] */\npublic function getTags() {}\n\n}\n``\n. Is there currently any way to delete items from acollection` type?\nHere's my code:\n``` yaml\nconfig.yml\neasy_admin:\n    entities:\n        MyEntity:\n            class: MyProject\\Entity\\MyEntity\n            form:\n                fields:\n                    - property: tags\n                      # Symfony 2.8-style form names (works great!)\n                      type: Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType\n                      type_options:\n                          type: Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType\n                          allow_add: true\n                          allow_delete: true\n                          by_reference: false\n```\n``` php\n// MyEntity.php\nclass MyEntity {\n    /* @param string $name /\n    public function addTag($name) {}\n/** @param string $name */\npublic function removeTag($name) {}\n\n/** @return string[] */\npublic function getTags() {}\n\n}\n```\n. I think there's been some misunderstanding here (perhaps on my part). I have no problem adding and removing tags from the database. My problem is, as @arukado-sama pointed out, there is no UI element in EasyAdminBundle for removing tags in a situation like mine, only for adding new ones.\n. I think there's been some misunderstanding here (perhaps on my part). I have no problem adding and removing tags from the database. My problem is, as @arukado-sama pointed out, there is no UI element in EasyAdminBundle for removing tags in a situation like mine, only for adding new ones.\n. @ogizanagi Sorry for the late reply -- I was on vacation. I've just upgraded to 1.9.7 and it works perfectly now. Thanks to you both for the quick response!\n. ",
    "webmozart": "@ianfp Yes, your code should be working. Make sure you activate orphanRemoval if you're working with Doctrine.\n. ",
    "gastoncs": "Thank you, you mean like this?\npublic function __construct() {\n    $this->fireDate = array('year'=>'Year', 'month'=>'Month', 'day'=>'Day');\n}\n. I see thank you\n. That is perfect, thank you very much for you time arukado-sama\n. That is perfect, thank you very much for you time arukado-sama\n. Thank for you response, I did not understand it well\nI suppose it does not mater where does it come form no? when it hits\n\n return $this->redirect($this->generateUrl('admin', array('action' => 'list', 'entity' => $this->entity['name'])));\n \nit should take me to http://localhost:8081/admin/?action=list&entity=Town\n. Hi @javiereguiluz \nits returning false or empty, I just notice on Google Analytics the following error \"Uncaught URIError: URI malformed\" the entity is correct ( $this->entity['name'] has the correct value \"Town\" ), I don't know if I there is something wrong on my custom form. \nThe strange thing is that if i go with the none custom Town form I get \"/admin/?action=list&entity=Town\" as the return value.\nThis is my custom function on AdminController\n\n    public function createTownNewForm($entity){\n        return $this->createForm(new TownType($this->getDoctrine()->getManager()), $entity);\n    }\n\n. What I did was to change the html normal opening form tag  form method=\"post\" class=\"ajaxForm form-horizontal\" id=\"new-form\"> /form>\nand change it to\n{{ form_start(form) }}\nand it went trough fine.\n. Thanks Javier!\n. Cool thanks!\n. Should I updated to a newer version fro this to work?, my current version is v1.5.5 \n. Thank you very much!\n. Javier I am getting this error\nCompile Error: Access level to MB2\\ATRBundle\\Controller\\AdminController::dispatch() must be  protected (as in class JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController) or weaker\nDo you know why?\n. Thank you Javier\nHow can I use the type_options to sort the choice element? Or I have to create a form and sort it from there?\n. @Pierstoval  I don't have any form, I just setup the config (see above) and the bundle build it by itself, this is the DeparturePoint entity where I have the relationship. please look at the city property.\n``` yaml\nclass DeparturePoint\n{\n    /*\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @ORM\\Column(type=\"string\", length=150, nullable=false)\n */\nprivate $name;\n\n/**\n * @ORM\\Column(type=\"string\", length=5, nullable=true)\n * @Assert\\NotBlank(message = \"not_blank\")\n * @Assert\\Regex(\n *      pattern= \"/^([^0-9]*)$/\",\n *      message=\"No se permiten n\u00fameros\"\n * )\n * @Assert\\Length(\n *      min = \"3\",\n *      max = \"3\",\n *      minMessage = \"M\u00ednimo {{ limit }} caracteres\",\n *      maxMessage = \"M\u00e1ximo {{ limit }} caracteres\"\n * )\n */\nprivate $code;\n\n/**\n * @ORM\\Column(type=\"string\", length=4, nullable=true)\n * @Assert\\Regex(\n *      pattern= \"/^([^0-9]*)$/\",\n *      message=\"No se permiten n\u00fameros\"\n * )\n * @Assert\\Length(\n *      min = \"4\",\n *      max = \"4\",\n *      minMessage = \"M\u00ednimo {{ limit }} caracteres\",\n *      maxMessage = \"M\u00e1ximo {{ limit }} caracteres\"\n * )\n */\nprivate $oaciCode;\n\n/**\n * @ORM\\ManyToOne(targetEntity=\"MB2\\ATRBundle\\Entity\\TransportationType\")\n * @ORM\\JoinColumn(name=\"trasp_type_id\", referencedColumnName=\"id\", nullable=false)\n */\nprivate $transportationType;\n\n/**\n * @ORM\\ManyToOne(targetEntity=\"MB2\\ATRBundle\\Entity\\City\")\n * @ORM\\JoinColumn(name=\"city_id\", referencedColumnName=\"id\", nullable=true)\n */\nprivate $city;\n\n/**\n * @ORM\\Column(type=\"datetime\", nullable=false)\n *\n */\nprivate $created;\n\n/**\n * @ORM\\Column(type=\"datetime\", nullable=true)\n */\nprivate $updated;\n\n/**\n * @ORM\\ManyToOne(targetEntity=\"MB2\\ATRBundle\\Entity\\MBUser\")\n * @ORM\\JoinColumn(name=\"created_by\", referencedColumnName=\"id\", nullable=false)\n *\n */\nprivate $createdBy;\n\n/**\n * @ORM\\ManyToOne(targetEntity=\"MB2\\ATRBundle\\Entity\\MBUser\")\n * @ORM\\JoinColumn(name=\"updated_by\", referencedColumnName=\"id\")\n */\nprivate $updatedBy;\n\n/**\n * @ORM\\Column(type=\"boolean\", nullable=false, options={\"default\":true})\n */\nprivate $active=true;\n\n```\nThe thing is that it just dump the table data sorted by the id, I will like to sort it by the name.\nMaybe I will have to create a form (DeparturepontType()) and do the sort there.\n. @Pierstoval I have the older version 1.5.5, I should upgrade it first, I feel concern that something might come up wrong.\nThank you!\n. @Pierstoval  I am getting this error \nCould not load type \"Symfony\\Component\\Form\\Extension\\DataCollector\\Proxy\\ResolvedTypeDataCollectorProxy\"\ndo you know why?\nThanks\n. Thank you\n. Great thank you very much!\n. Great thank you very much!\n. Thank you @javiereguiluz \n. Thank you @javiereguiluz \n. ",
    "janjango": "Is it possible now to customize a form like @xabbuh  posted?\n. Hey, I am having Could not load type \"phone_number\" problem in edit template.\nI've already fixed the not displaying in list template by creating the phonenumber template as said @javiereguiluz.\nI'm using Symfony 3.1.6\nAny help please?\n. Hey, I am having Could not load type \"phone_number\" problem in edit template.\nI've already fixed the not displaying in list template by creating the phonenumber template as said @javiereguiluz.\nI'm using Symfony 3.1.6\nAny help please?\n. Works as a charm:\n#...\n            edit:\n                fields:\n                    - { property: 'phone', type: 'Misd\\PhoneNumberBundle\\Form\\Type\\PhoneNumberType' }\nThanks @xabbuh \n. Works as a charm:\n#...\n            edit:\n                fields:\n                    - { property: 'phone', type: 'Misd\\PhoneNumberBundle\\Form\\Type\\PhoneNumberType' }\nThanks @xabbuh \n. ",
    "Chrysweel": "Thanks to reply @Pierstoval . I know \"help\" parameter, but I want include a placeholder, not to include a spam with info. \nhttp://www.w3schools.com/tags/att_input_placeholder.asp\nPD: I am in irc channel #symfony and #symfony-es but I think that a doubt that other user can to have in the future is most useful here, instead of question in irc every week\n. Ok thanks @Pierstoval ! :)\n. ",
    "jokari4242": "Works better..  thanks a lot! :-)\n. Hello;\nI have add the DateTime picker like this : \n1/ Install this bundle \nhttps://github.com/stephanecollot/DatetimepickerBundle\n2/ Create a javascript file in web/js/easyAdmin.js : \n$('#your_field_datetime').datetimepicker();\n3/ Add this js and css in config.yml\neasy_admin:\n    design:\n        assets:\n            js: ['bundles/scdatetimepicker/js/bootstrap-datetimepicker.min.js', 'js/easyAdmin.js']\n            css: ['bundles/scdatetimepicker/css/datetimepicker.css']\nBut i think it's not the best solution !\n. Hello;\nI have add the DateTime picker like this : \n1/ Install this bundle \nhttps://github.com/stephanecollot/DatetimepickerBundle\n2/ Create a javascript file in web/js/easyAdmin.js : \n$('#your_field_datetime').datetimepicker();\n3/ Add this js and css in config.yml\neasy_admin:\n    design:\n        assets:\n            js: ['bundles/scdatetimepicker/js/bootstrap-datetimepicker.min.js', 'js/easyAdmin.js']\n            css: ['bundles/scdatetimepicker/css/datetimepicker.css']\nBut i think it's not the best solution !\n. Exactly it's just the cursor :-)\n2016-01-04 3:32 GMT-05:00 Alex Rock Ancelet notifications@github.com:\n\n@javiereguiluz https://github.com/javiereguiluz It might be the text\ncursor :p (or \"caret\", don't remember how it's called in english)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/741#issuecomment-168610197\n.\n. \n",
    "BackEndTea": "For those who ran into this issue as well, the following works: \n{ property: 'projects', type_options: { disabled: true }} where 'projects' is the field.\nAt the time of writing, readonly: true does not seem to work. Thank you @javiereguiluz . Thank you @javiereguiluz . For anyone needing a workaround:\nIn your config/packages/easy_admin.yaml (if symfony flex)\nyml\nfields:\n    - { property: interval,  template: 'date_interval_template.html.twig' }\ndate_interval_template.html.twig:\n{{ value.format('%y Year(s) %m Month(s) %d Day(s)') }}. For symfony flex: i put it directly in my templates/ folder. Thank you @javiereguiluz . Since 2.0 won't support lower symfony versions, can we also remove the 2.3+ and 3.x part?. What is the reason for these !important?. Minor complaint, but there are a lot of inconsistencies between the whitespacing in the CSS.\nSometimes there is an empty line after a }, and sometimes there is not.\nHow about adding the whitespace after every closed tag, to increase readability.. version 0.21 was recently released, how about using that version?. An idea to help with these kind of issues would be to add an editorconfig to the project. ",
    "heleneshaikh": "\n\nFor those who ran into this issue as well, the following works:\n{ property: 'projects', type_options: { disabled: true }} where 'projects' is the field.\nAt the time of writing, readonly: true does not seem to work\n\nBut this doesn't work for datetime fields\n\nI just tested this with datetime fields and the disable option does work:\nform:\n     fields:\n          - { property: 'seasonStart', format : 'd/m', type_options: { disabled: true } } #readonly\n          - { property: 'seasonEnd', format : 'd/m', type_options: { disabled: true } } #readonly\nWhich results in my 2 fields having a 'disabled' attribute. . ",
    "pedroresende": "@javiereguiluz ping\n. @javiereguiluz The last version of Symfony 2.3 has been release yesterday. The bugfixes support, ends this month http://symfony.com/roadmap?version=2.3#checker\n. @javiereguiluz Thanks for the help, I was trying to figure out if the functionality was already in place but actually it was quite simple, just added the template to the property like this\nyaml\n- { property: 'name', label: 'Company Name', template: 'company/list/show_company.html.twig' }\nAnd the template, under app/Resources/view/easy_admin/company/list/show_company.html.twig was based on the field_string.html.twig and it has the following\ntwig\n{% if view == 'show' %}\n    <a href=\"?action=show&entity=Companies&id={{ item.id }}\" >{{ value|nl2br }}</a>\n{% else %}\n    <a href=\"?action=show&entity=Companies&id={{ item.id }}\" >{{ value|easyadmin_truncate }}</a>\n{% endif %}. @javiereguiluz Thanks for the feedback, I understand perfectly and it makes sense. Just wanted to have an ideia, in that case I'll implement it myself.\nGood luck and once again, congratulations for this excelente bundle. ",
    "piqoni": "I'm new to Symfony, but in these cases can't we pass the Symfony version (from Symfony\\Component\\HttpKernel\\Kernel::VERSION) and implement the feature only for Symfony >= 2.7 ? \n. I'm new to Symfony, but in these cases can't we pass the Symfony version (from Symfony\\Component\\HttpKernel\\Kernel::VERSION) and implement the feature only for Symfony >= 2.7 ? \n. ",
    "Napche": "Another option is to define your choices in a parameter\neg. in services.yaml\nparameters:\n   status:\n        Active: 1\n        Inactive: 0\n\nin easy_admin.yaml\n- { property: 'status', type: 'choice', type_options: { expanded: true, choices: '%status%' }}\n\n. ",
    "thomasbeaujean": "I removed the translatios that were not needed. Thanks for the advice.\nThe actions.add_another_item is in the form Resources/views/default/form.html.twig.\nIt is the link that add a row (a js action) when an entity has a oneToMany relationship.\n. I fixed the linked to my account.\n. Thank you for your time.\n. I get what you mean. \nI did not want to add a dependency to JMS Translation Bundle neither but my way was incorrect.\nI did not know that there was a translation extractor in symfony. (the habit of JMSTranslationBundle...)\nFrom what I understand, the native extractor find only the labels of the views.\nJMSTranslation bundle parse all kind of file (controller, form, views) to extract translations (and provide an UI).\nI will modify the branch to provide a command that dump the labels. Do you agree for this?\n. I agree with @javiereguiluz, the translations directly related to the EasyAdminBundle should be translated in the EasyAdminBundle domain. And the translations related to entities, It would be good to have some configuration that specify the domain for these ones.(using messages domain by default)\nAbout the solution of @Pierstoval , I think that your solution is good for a \"big admin\". However, IMO this solution brings complexity and the bundle should remains as simple as possible.\nA big admin like the one you need can always be done using custom twig.\n. I close this PR, the translation system has changed and this PR has become obsolete.\n. The display is not the same : \n-for one error, the display is ERROR: \"the first error\"\n-for more error; the display is ERRORS: list of errors\nso using transchoice would give something like this\n{% if errors|length >= 1 %}\n    <div class=\"error-block\">\n        <span class=\"label label-danger\">\n            {% transchoice count %}\n                 {0} error |errors\n            {% endtranschoice %}\n        {% if errors|length == 1 %}\n             {{ errors|first.message }}\n       {% else %}\n          <ul>\n            {% for error in errors %}\n                <li>{{ error.message }}</li>\n            {% endfor %}\n        </ul>\n        {% endif %}\n    </div>\nI do not find this code more readable.\nMaybe I do not get what you mean.\n. Ok, modifications done\n. @javiereguiluz  Ok, I will do it the next times.\nMy problem:\nI want an EasyAdmin with a searchBar, so I extended the Controller and add some methods.\nThis searchBar is not in the philosophy of the main search input. (because It contains a search field for each attribute of the entity)\nI use the configuration of the EasyAdmin to know the search fields availables in my searchBar.\nHowever the fields(listed in the configuration) for the search are restricted to basic fields (int, string) by the getFieldsForSearchAction method.\n```\n/\n * Returns the list of entity fields on which the search query is performed.\n \n * @return array The list of fields to use for the search\n /\nprotected function getFieldsForSearchAction(array $entityConfiguration)\n{\n    if (0 === count($entityConfiguration['search']['fields'])) {\n        $excludedFieldNames = array();\n        $excludedFieldTypes = array('association', 'binary', 'boolean', 'blob', 'date', 'datetime', 'datetimetz', 'time', 'object');\n        $entityConfiguration['search']['fields'] = $this->filterFieldsByNameAndType($this->defaultEntityFields, $excludedFieldNames, $excludedFieldTypes);\n    }\nreturn $this->normalizeFieldsConfiguration('search', $entityConfiguration);\n\n}\n```\nI want to include the date and association fields:\n- using a configuration to list the excluded field types  would not be correct because this behaviour is only for my searchBar\nSo I extend the Configurator and overwrite the getFieldsForSearchAction method.\n. @Pierstoval The search engine I suggest is a form per entity that match the entity fields:\n- An integer creates a min/max input \n- A ManyToOne creates a select box\n- A date creates a min/max date datePicker\n- A string creates an input\nSo, should the bundle have both search system and some configuration would allows developper to chose the search system ?\n. @javiereguiluz Thanks for the advice, I will use the decoration.\n. @Pierstoval I do not understand why using a css class would be better than using directly the form name.\nFurthermore, using a css class would not allow having two forms in the same page.\n. @Pierstoval I agree that the error should be attached to the property, I will investigate later on this problem.\n. done in PR #440 \n. The display:\n\n. @javiereguiluz I agree with you, I will go for your snippet. I did not want to modify too much the previous code.(the previous 2 ternary operators)\n. Update done\n. @javiereguiluz No problem, thank you for your work.\n. Bug already done in PR #445 \n. Preview (in french):\n\n. @javiereguiluz Sorry i did not see the PR 445. So i close my PR and bug. I will do the translations in a PR for the missing new labels.\n. Done in PR #451 \n. Preview (in fr):\n\n. @Pierstoval no problem, I will put it after.\n. @javiereguiluz You are right, I updated the sources using default filter\n. @javiereguiluz I did not understand the changes about the message domain. That is clear now.\nSorry for the misunderstanding , so I will update the PR considering what you said.\n. I close this PR and will create a new one in order to have a clean commit history\n. @Pierstoval I do not master yet entirely git.. For this time I will do a new PR, I will study the rebase function quickly\n. I thought that my modification was enough but it appears I still got a JS issue. The JS is still not generic enough for several nested levels.\nPlease do not consider this PR while I do not have fully check this issue.\n@Pierstoval Ok, I will try to add a test for the main usage\n. Thank you for these good advices.\nAs suggested:\n- I renamed the add_item_javascript to js_add_item \n- I add block collection_row\n- I put the code in bootstrap_3_layout.html.twig\nAnd I finally could manage to fix my js issue.\nThe identifiers\nSo if you have two nested forms, the strings to replace are like the following:\n-   name__label \n- some_form_entityOne_0_entityTwoname\n- commitmenttype_form[entityOne][0][entityTwo][0][name]\nThe previous behaviour\nYou add an element, the  name  are replaced by the the item index.\nSo  name  is replaced by 0.\nYou want to add a sub item, the  some_form_entityOne_0_entityTwoname has already been replaced by someform_entityOne_0_entityTwo_0, and in the js.\nI want to add a second sub item, and all the 0 are replaced by 0, I get a some_form_entityOne_1_entityTwo_1 instead of some_form_entityOne_0_entityTwo_1.\nIn the second level case, the  name  is the parent index (0, 1 etc.), so before, the code tried to replace the parent index by the child index (replace 0 by 1 for example).\nThe first level of nested form had already replace all the  name  by its index.\nThe solution\nTo avoid this behaviour, I modified the \"replace\" in order to be more specific in the search using the name of the property.\nThe modification in the js\n\n.replace(/> name__label' + numItems + '<')\n.replace(/_{{ form.vars.name}}___name__/g, numItems)\n.replace(/{{ form.vars.name}}][name]/g, '{{ form.vars.name}}][' + numItems + ']')\n\nI hope my explanation is clear enough.\n. Thank you for these good advices.\nAs suggested:\n- I renamed the add_item_javascript to js_add_item \n- I add block collection_row\n- I put the code in bootstrap_3_layout.html.twig\nAnd I finally could manage to fix my js issue.\nThe identifiers\nSo if you have two nested forms, the strings to replace are like the following:\n-   name__label \n- some_form_entityOne_0_entityTwoname\n- commitmenttype_form[entityOne][0][entityTwo][0][name]\nThe previous behaviour\nYou add an element, the  name  are replaced by the the item index.\nSo  name  is replaced by 0.\nYou want to add a sub item, the  some_form_entityOne_0_entityTwoname has already been replaced by someform_entityOne_0_entityTwo_0, and in the js.\nI want to add a second sub item, and all the 0 are replaced by 0, I get a some_form_entityOne_1_entityTwo_1 instead of some_form_entityOne_0_entityTwo_1.\nIn the second level case, the  name  is the parent index (0, 1 etc.), so before, the code tried to replace the parent index by the child index (replace 0 by 1 for example).\nThe first level of nested form had already replace all the  name  by its index.\nThe solution\nTo avoid this behaviour, I modified the \"replace\" in order to be more specific in the search using the name of the property.\nThe modification in the js\n\n.replace(/> name__label' + numItems + '<')\n.replace(/_{{ form.vars.name}}___name__/g, numItems)\n.replace(/{{ form.vars.name}}][name]/g, '{{ form.vars.name}}][' + numItems + ']')\n\nI hope my explanation is clear enough.\n. About the virtual properties, my original need is to sort on field of foreign entity. Actually I can not do not without rewriting the list view and the query of the controller.\nAn example:\nI want to list the Products. The product has a Brand.\nSo in the product list I want to display\nProduct->id  | Product->name  |    Brand->name | Brand->website\nI have to sort on all columns.\nSo, my Product entity has the methods:\n- getId()\n- getName()\n- getBrandName()  => virtual\n- getBrandWebsite() => virtual\nThat is why I want to sort on virtual properties.\nI think that adding this configuration is a first step into a global configuration using foreign keys (with automatic join, order, etc.)\nMaybe there is better technique to do this..\n. That is exactly what I am doing. \nBut to do so I have to enable the sort on the virtual property one way or another. It is just that I did not want to override the views just for that.\n. ",
    "fcpauldiaz": "This the admin configuration, the attribute that doesn't show is \"cursos\".\n \neasy_admin:\n    site_name: 'Learn-In Admin'\n    entities:\n        Usuario:\n            class: UserBundle\\Entity\\Usuario\n            list:\n                fields: ['nombreCompleto','username','cursos','email','enabled','lastLogin','roles']\n        Cursos:\n            class: CursoBundle\\Entity\\Curso\n        Comentarios:\n            class: CursoBundle\\Entity\\Comment\n\nThis is the Usuario class\n\nnamespace UserBundle\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\n//sirve para extender de friendofsymfony\nuse FOS\\UserBundle\\Entity\\User as BaseUser;\n//sirve para validar los campos del formulario\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n\n/**\n- @ORM\\Table(name=\"Usuarios\")\n- @ORM\\Entity\n- \n- _/\n  class Usuario extends BaseUser\n  {\n  /_*\n  - @var integer\n  - @ORM\\Column(name=\"id\", type=\"integer\")\n  - @ORM\\Id\n  - @ORM\\GeneratedValue(strategy=\"AUTO\")\n    */\n    protected $id;\n\n    /**\n  - @var string\n  - @ORM\\Column(name=\"nombreCompleto\", type=\"string\", length=50)\n    */\n    private $nombreCompleto;\n\n  /**\n  - @ORM\\ManyToMany(targetEntity=\"CursoBundle\\Entity\\Curso\", inversedBy=\"usuario\")\n  - @ORM\\JoinTable(name=\"cursos_usuario\")\n    **/\n    private $cursos;\n    \n\nAnd here is a screenshot of the problem\n\n. Ohh, I forgot that it was ManyToMany. Ok, thanks.\n. Can it be done in the site name link ? Or it is easier to make a button ? In the site name link could be.\n. Is this the right way ? It works but I hardcoded the entity param. \nThe URL\n\n< a href=\"{{ path('admin') }}?entity=Usuario&action=list\">\n\nIt renders to: http://localhost:8000/easyadmin/?entity=Usuario&action=list\nThe Controller\n\n?php\nnamespace CursoBundle\\Controller;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    /\n     * Don't forget to add this route annotation!\n     \n     * @Route(\"/easyadmin/\", name=\"admin\")\n     /\n    public function indexAction(Request $request)\n    {\n        // if the URL doesn't include the entity name, this is the index page  // if the URL doesn't include the entity name, this is the index page\n        if (null === $request->query->get('entity')) {\n            // define this route in any of your own controllers\n            return $this->redirectToRoute('homepage');\n        }\n```\n    // don't forget to add this line to serve the regular backend pages\n    return parent::indexAction($request);\n}\n// ...\n```\n}\n\nif I click the menu it returns to homepage\n. That works and it's faster. Thanks!\n. That was fast, thank you ! @javiereguiluz @ogizanagi \n. That was fast, thank you ! @javiereguiluz @ogizanagi \n. I use the BrainCraftedBundle  for the embedded forms. Maybe this  or something similar could be used. \n\n. ",
    "nicolas-grekas": "IMHO, it may work in theory, but running the tests is the only proof that actually works.\nYou know: in theory, practice and theory are the same. But in practice...\n. You need to use symfony/flex and restrict the range of allowed symfony versions using the extra.symfony.require configuration entry in your composer.json file. See e.g. https://github.com/symfony/skeleton/pull/93/files#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780R56. ",
    "rogerguasch": "Hi again!,\nI found my error.\nIn my \"app/config/admin.yml\" I put the \"max_results\" key under the definitions of my clases, and this key (as you say) is global for all backend.\nIn other hand, if I wont list of 5 in \"Users\" but I wont 100 in \"Products\" list? It's possible?\nNice job with easyAdmin!!\nGreetings,\nRoger\n. Yes, in the demo applications works perfect, but I copied \"user\" and \"purchase\" from demo to my projects...and fails again and I don't know why.\nI put the most simply that I can this classes and configs\neasyadmin.yml\nyaml\neasy_admin:\n    entities:\n        User:\n            class: AppBundle\\Entity\\User\n        Post:\n            class: AppBundle\\Entity\\Post\nUSER\n``` php\n/\n * AppBundle\\Entity\\Post\n \n * @ORM\\Table(name=\"user\")\n * @ORM\\Entity\n /\nclass User {\n/**\n * @var integer $id\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * @ORM\\Column(name=\"name\", type=\"string\")\n */\nprivate $name;\n\n/**\n * @ORM\\Column(name=\"surname\", type=\"string\")\n */\nprivate $surname;\n\n/**\n * @var Purchase[]\n *\n * @ORM\\OneToMany(targetEntity=\"Post\", mappedBy=\"buyer\", cascade={\"remove\"})\n */\nprivate $purchases;\n\n\npublic function __construct()\n{\n    $this->purchases = new ArrayCollection();\n}\n\npublic function __toString()\n{\n    return $this->name .' '. $this->surname;\n}\n\n/**\n * Get id\n *\n * @return integer \n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @return mixed\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * @param mixed $name\n */\npublic function setName($name)\n{\n    $this->name = $name;\n}\n\n/**\n * @return mixed\n */\npublic function getSurname()\n{\n    return $this->surname;\n}\n\n/**\n * @param mixed $surname\n */\npublic function setSurname($surname)\n{\n    $this->surname = $surname;\n}\n\n/**\n * @return Purchase[]\n */\npublic function getPurchases()\n{\n    return $this->purchases;\n}\n\n/**\n * @param Purchase[] $purchases\n */\npublic function setPurchases($purchases)\n{\n    $this->purchases = $purchases;\n}\n\npublic function serialize()\n{\n    return serialize(array(\n        $this->id,\n        $this->name,\n        $this->surname,\n        $this->purchases\n    ));\n}\n\npublic function unserialize($serialized)\n{\n    list (\n        $this->id,\n        $this->name,\n        $this->surname,\n        $this->purchases\n        ) = unserialize($serialized);\n}\n\n}\n```\nPOST\n``` php\n/\n * AppBundle\\Entity\\Post\n \n * @ORM\\Table(name=\"post\")\n * @ORM\\Entity\n /\nclass Post {\n/**\n * @var integer $id\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * The user who made the purchase.\n *\n * @var User\n * @ORM\\ManyToOne(targetEntity=\"User\", inversedBy=\"purchases\")\n */\nprotected $buyer;\n\n\n/**\n * Get id\n *\n * @return integer\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @return User\n */\npublic function getBuyer()\n{\n    return $this->buyer;\n}\n\n/**\n * @param User $buyer\n */\npublic function setBuyer($buyer)\n{\n    $this->buyer = $buyer;\n}\n\n}\n```\nThank you for advance,\nRoger\n. Yes, in the demo applications works perfect, but I copied \"user\" and \"purchase\" from demo to my projects...and fails again and I don't know why.\nI put the most simply that I can this classes and configs\neasyadmin.yml\nyaml\neasy_admin:\n    entities:\n        User:\n            class: AppBundle\\Entity\\User\n        Post:\n            class: AppBundle\\Entity\\Post\nUSER\n``` php\n/\n * AppBundle\\Entity\\Post\n \n * @ORM\\Table(name=\"user\")\n * @ORM\\Entity\n /\nclass User {\n/**\n * @var integer $id\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * @ORM\\Column(name=\"name\", type=\"string\")\n */\nprivate $name;\n\n/**\n * @ORM\\Column(name=\"surname\", type=\"string\")\n */\nprivate $surname;\n\n/**\n * @var Purchase[]\n *\n * @ORM\\OneToMany(targetEntity=\"Post\", mappedBy=\"buyer\", cascade={\"remove\"})\n */\nprivate $purchases;\n\n\npublic function __construct()\n{\n    $this->purchases = new ArrayCollection();\n}\n\npublic function __toString()\n{\n    return $this->name .' '. $this->surname;\n}\n\n/**\n * Get id\n *\n * @return integer \n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @return mixed\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * @param mixed $name\n */\npublic function setName($name)\n{\n    $this->name = $name;\n}\n\n/**\n * @return mixed\n */\npublic function getSurname()\n{\n    return $this->surname;\n}\n\n/**\n * @param mixed $surname\n */\npublic function setSurname($surname)\n{\n    $this->surname = $surname;\n}\n\n/**\n * @return Purchase[]\n */\npublic function getPurchases()\n{\n    return $this->purchases;\n}\n\n/**\n * @param Purchase[] $purchases\n */\npublic function setPurchases($purchases)\n{\n    $this->purchases = $purchases;\n}\n\npublic function serialize()\n{\n    return serialize(array(\n        $this->id,\n        $this->name,\n        $this->surname,\n        $this->purchases\n    ));\n}\n\npublic function unserialize($serialized)\n{\n    list (\n        $this->id,\n        $this->name,\n        $this->surname,\n        $this->purchases\n        ) = unserialize($serialized);\n}\n\n}\n```\nPOST\n``` php\n/\n * AppBundle\\Entity\\Post\n \n * @ORM\\Table(name=\"post\")\n * @ORM\\Entity\n /\nclass Post {\n/**\n * @var integer $id\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * The user who made the purchase.\n *\n * @var User\n * @ORM\\ManyToOne(targetEntity=\"User\", inversedBy=\"purchases\")\n */\nprotected $buyer;\n\n\n/**\n * Get id\n *\n * @return integer\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @return User\n */\npublic function getBuyer()\n{\n    return $this->buyer;\n}\n\n/**\n * @param User $buyer\n */\npublic function setBuyer($buyer)\n{\n    $this->buyer = $buyer;\n}\n\n}\n```\nThank you for advance,\nRoger\n. ",
    "krish-damani": "Not related to this issue, but still a small question:\nCan we disable pagination when using EasyAdmin?. Not related to this issue, but still a small question:\nCan we disable pagination when using EasyAdmin?. ",
    "elenitaex5": "It fails in the first line\npublic function guardarAutoresAction(){\n        $nombresAutores = $_POST['nombreAutores[]'];\nthe error is this\nNotice: Undefined index: nombreAutores[]\ninside my twig form I have this\n```\n{% for autor in autores %}\n     {{ autor.nombre }} {{ autor.apellido1 }} {{ autor.apellido2 }}\n{% endfor %}\n```\nTrying to solve my problem I've made a var_dump in the first line of my controller action\n        var_dump($_POST);\nAnd the only thing I have is this\narray (size=0)\n  empty\n. You're right I only use Symfony for 2 months, I'll re-read everything,\nbut now I've try the request in my action.\nIn AdminController in EasyAdmin is a protected attribute so I've done this\nvar_dump($this->request->request);\nand this is the answer\nobject(Symfony\\Component\\HttpFoundation\\ParameterBag)[8]\n  protected 'parameters' => \n    array (size=0)\n      empty\nand if I do this\n        var_dump($this->request->request->get('nombreAutores'));\nthe answer is null\n. ok sorry and thank you for your help\n. I've got it now with the annotation @ Route. Thank you @Pierstoval \n. Thanks it really helps me!! \n. ",
    "tiraeth": "@savandriy, using @Pierstoval hint would require you to completely update query passed to Pagerfanta as you cannot update QueryBuilder object when it's already passed to Pagerfanta instance.\nWith 02e6bab9 (released with 1.8.0) it's now easier to apply to match your needs. Use custom Query Builder methods in AdminController plus if you want to stick to events, there is available one too: EasyAdminEvents::POST_SEARCH_QUERY_BUILDER.\n. @savandriy, using @Pierstoval hint would require you to completely update query passed to Pagerfanta as you cannot update QueryBuilder object when it's already passed to Pagerfanta instance.\nWith 02e6bab9 (released with 1.8.0) it's now easier to apply to match your needs. Use custom Query Builder methods in AdminController plus if you want to stick to events, there is available one too: EasyAdminEvents::POST_SEARCH_QUERY_BUILDER.\n. @Pierstoval I'm keen to work on this to utilize getClassMetadata for entity and checking if field type is TextType, ok?\n. @Pierstoval I'm keen to work on this to utilize getClassMetadata for entity and checking if field type is TextType, ok?\n. I thought more about this issue and I think that by default IN operator should be used only to numeric fields. Date/Time search through IN is a complicated thing as we have different input formats. Those should be handled manually by specific entity QueryBuilder which is now possible with the createSearchQueryBuilder method.\nSee my branch 624385d for what my proposal is.\n. I thought more about this issue and I think that by default IN operator should be used only to numeric fields. Date/Time search through IN is a complicated thing as we have different input formats. Those should be handled manually by specific entity QueryBuilder which is now possible with the createSearchQueryBuilder method.\nSee my branch 624385d for what my proposal is.\n. @ogizanagi I think the DataProvider approach will be nice to have in EasyAdminBundle. This depends on you guys, but I think that for now, this small event addon can help users be sure that when they update the library, things won't break. It gives the flexibility that is necessary here + don't introduce other philosophy and \u2014 IMO \u2014 is inline with how EasyAdminBundle currently works :-)\n. @ogizanagi @javiereguiluz @Pierstoval added AdminController methods :-)\n. Rebased to single commit, fixed FQCN and missing return statement ;-) Also, I kept events for extendability in case someone wants to use them.\n. @ogizanagi @Pierstoval I rebased with javiereguiluz/master for quicker merge. Also, updated AdminController to include #548 fix in both DoctrineORMAdapter constructors.\n. @ogizanagi @Pierstoval I rebased with javiereguiluz/master for quicker merge. Also, updated AdminController to include #548 fix in both DoctrineORMAdapter constructors.\n. And used executeDynamicMethod ;-)\n. And used executeDynamicMethod ;-)\n. Guys, if you could find time, please take a look at my fork \u2014 commits e19551a (scopes functionality) and af4a21b (tests). I took a shot at the scopes functionality. If this is the approach you wish EasyAdminBundle should go with, I can work on documentation updates (and include missing translation keys for list.scopes.all default label), rebase everything to a single commit, and prepare a PR for easy merge.\nI tried to keep things fully backward compatible, so existing extensions around QueryBuilder do not break.\n:smile: \n. Guys, if you could find time, please take a look at my fork \u2014 commits e19551a (scopes functionality) and af4a21b (tests). I took a shot at the scopes functionality. If this is the approach you wish EasyAdminBundle should go with, I can work on documentation updates (and include missing translation keys for list.scopes.all default label), rebase everything to a single commit, and prepare a PR for easy merge.\nI tried to keep things fully backward compatible, so existing extensions around QueryBuilder do not break.\n:smile: \n. @javiereguiluz any reason to add functionality that will be removed in future (replaced by scopes) :-) introducing BCB, need for depreciations etc. \n. @javiereguiluz any reason to add functionality that will be removed in future (replaced by scopes) :-) introducing BCB, need for depreciations etc. \n. I can add global filter under list configuration node too that will be used with query builder if not false/null :-)  also I would keep query_ prefix instead of dql_ or none at all. If easyadminbundle is going to be used with other orms/odms in future :-) \n. I can add global filter under list configuration node too that will be used with query builder if not false/null :-)  also I would keep query_ prefix instead of dql_ or none at all. If easyadminbundle is going to be used with other orms/odms in future :-) \n. @javiereguiluz @Pierstoval please check my new commits a4635c5 and 1443572 \u2014 renamed filter to dql_filter, added global dql_filter, modified tests and fixed a small bug in paginator.html.twig HTML structure.\n. @javiereguiluz @Pierstoval please check my new commits a4635c5 and 1443572 \u2014 renamed filter to dql_filter, added global dql_filter, modified tests and fixed a small bug in paginator.html.twig HTML structure.\n. Depends. If you insist on getting rid of this attribute \u2014 I can commit a fix and squash :-)\n. Unless you work on a publicly available bundle that will update query builder with some custom functionality. Anyway, I'll remove this option shortly :-)\n. ",
    "ferchitas": "I checked the doc but I can't find anything about this, has there been any update?. I checked the doc but I can't find anything about this, has there been any update?. ",
    "yosriMekni": "any updates about this feature ?. thx it works ,you can close this. thx it works ,you can close this. ",
    "larzuk91": "~I also find this feature very useful. If it's not going to be implemented, well, that's ok, but at least, can we know why?~\nIt's already implemented in the latest version.. Hey @reypm did you manage to integrate both projects?. Hey @reypm did you manage to integrate both projects?. Thanks @ktrzos, those are great news!. I found the problem, I forgot that one of the two fields were being injected by a listener, a \"prePersist\" listener to be exact, hence, the managed entity it's not fully built by the moment of validations. Sorry for bothering you . ",
    "OskarStark": ":+1: \n. Looks Good :+1:\n. :smile: Sehr gerne\n. sorry too late, but everything is fine! :+1: \n. ",
    "stof": "This change looks wrong to me. Your Travis builds are always running with a dedicated composer.json now, which means you are not testing that the actual composer metadata are right.\n. you should typehint the second argument\n. There is a bug issue. You are making your function as safe for HTML, but this is not safe.\nInstead, you should not mark it as safe, and you should return a Twig_Markup object for cases where you return safe markup.\n. if is enough as the previous if returns\n. the preperty_exists check should be done before getting a ReflectionProperty for it\n. please don't typehint a specific implementation. this will break as soon as composition is used by a bundle. the typehint should use the interface (and it should even use the UrlGeneratorInterface here, because it only cares about the generate() method of the router)\n. you need to escape the URL and the value here, otherwise it is not safe\n. you have an extra useless argument in your sprintf call\n. The namespace is weird. Service has no meaning as far as the class is concerned (a service is an instance of the class registered in the Symfony DIC, but the class is not aware of it)\n. this needs to be escaped in a JS context, not an HTML one\n. Abandonning features ? :smile: \n. Configuration is indeed much better than Service, as it relates to the goal of the class rather than the way it is used. However, it indeed looks duplicate in the FQCN. I don't have good ideas about naming it though\n. @javiereguiluz the metadata are cached in memory for the current request in all cases. Given that Doctrine already loaded the metadata (as you loaded an object), the first point is void.\nbut anyway, I agree with your points about not using it\n. you should use http_build_query($parameters, '', '&') to avoid relying on the php.ini setting not containing weird config\n. shouldn't you apply the same color changes here than in the toolbar ?\n. ",
    "HerrHase": "I have tried this first, but the Problem is that $value in this case is an Object. Or can these be done by set the type to \"raw\"? \n. I have tried this first, but the Problem is that $value in this case is an Object. Or can these be done by set the type to \"raw\"? \n. There is a missunderstanding, the $value is an object. It had a getPath() function that contains the path to the image in the filesystem.\n. ",
    "mkalisz77": "This config is very simple with 2 entities and my own template. Nothing special.\n``` yaml\neasy_admin:\n    entities:\n        - AppBundle\\Entity\\BlogPost\n        - AppBundle\\Entity\\BlogComment\ndesign:\n    templates:\n        layout: 'AppBundle:DBAdmin:layout.html.twig'\n\n```\n. This config is very simple with 2 entities and my own template. Nothing special.\n``` yaml\neasy_admin:\n    entities:\n        - AppBundle\\Entity\\BlogPost\n        - AppBundle\\Entity\\BlogComment\ndesign:\n    templates:\n        layout: 'AppBundle:DBAdmin:layout.html.twig'\n\n```\n. Oh.. I find the solution\nThis error was only in PROD env, not in DEV with app_dev.php. After cache clear error disappear.\nphp app/console cache:clear -e prod\nNow everything works OK. So please close this issue and sorry for inconvenience.\nMicha\u0142 Kalisz\n. Oh.. I find the solution\nThis error was only in PROD env, not in DEV with app_dev.php. After cache clear error disappear.\nphp app/console cache:clear -e prod\nNow everything works OK. So please close this issue and sorry for inconvenience.\nMicha\u0142 Kalisz\n. I think I describe my problem not clear enough.\nSo I try once more.\nI have my custom backend application based on this theme\nhttp://192.241.236.31/themes/preview/smartadmin/1.7.x/ajaxversion/#ajax/table.html\nThis theme has nice feature - it is Ajax based. So when you choose menu option not whole page is reloaded but only main content of dashboard.\nI integrate EasyAdminBundle with this Admin theme. I remove default menu navigation from EasyAdminBundle and replace it by this Smart Admin theme. And now everything works well except Edit because in editAction is condition ( if ($this->request->isXmlHttpRequest()) ) and in my case all requests are Ajax. \nSo I don't want in this bundle to add new ajax_edit action or implement any AJAX, but only more precise condition for checking if AJAX call come from toggle button edit action or not.\nIn my case when I click on Edit button this code is executed\n$this->ajaxEdit();\nwhich gives error: ...Notice: Undefined index:...\n. In my test case this fix is working well.\n. Thank you. I will try this soon.\n. I would like to propose following future: \nAdding possibility to set Security/ROLES in config file for single entity properties.\nEg.\neasy_admin:\n    entities:\n        User:\n            label: entity.user\n            class: AppBundle\\Entity\\User\n            edit:\n                fields:\n                    - { property: 'username', label: 'db.user.username', roles: ['ROLE_ADMIN'] }\n            show:\n                fields:\n                    - { property: 'username', label: 'db.user.username', roles: ['ROLE_ADMIN','ROLE_1'] }    \nIt will be great to have this kind of functionality. Now we can only have security for entities and actions using standard Symfony Access Control functionality\n- { path: ^/easyeadmin_url$, roles: ROLE_X }\n. One nice feature published on symfony.com blog\nhttp://symfony.com/blog/new-in-symfony-2-8-dx-improvements.\nFilter Results the same way in Easy Admin list view it will be very nice feature in EA 2.0.\n. Another proposal for 2.0 version of EA is mass delete possibility.\nAdd checkbox in first column and action for mass delete/update checked records.\n. My proposal for EA 2.0 is easy out-of-the-box Dependent fields functionality.\nMany times we have dependent list of values eg. State/Province. Now it can be done this way:\nhttp://symfony.com/doc/current/cookbook/form/dynamic_form_modification.html\nBut maybe in EasyAdmin it could be done easy only by configuration. What do you think about this feature ?\n. I've never used GIT/Github to make a contribution. So I have no idea how to process such development on Github.\n. Thanks for info\nValid command is\ngit clone https://github.com/mkalisz77/EasyAdminBundle.git\nI test my package and push it and create PR. That was difficult as I do \nit first time.\nThank you, for quick introduction to GIT.\n. Simply add this in EasyAdminControler - it works well.\n```\npublic function createNewGroupEntity()\n{\n    return $this->container->get('fos_user.group_manager')->createGroup('');\n}\npublic function prePersistGroupEntity(Group $group)\n{\n    return $this->container->get('fos_user.group_manager')->updateGroup($group, false);\n}\npublic function preUpdateGroupEntity(Group $group)\n{\n    return $this->container->get('fos_user.group_manager')->updateGroup($group, false);\n}\n```\n. Nice tutorial, but I'm totally newbie in GIT so for me its very difficult to contribute and making PR. Please add line by line command fg. for adding new translations or update current one.\nI use git locally, \ngit clone\ngit add . ???\ngit checkout -b fix_NNN ???\n...\netc.\nThank you..\n. I think this bundle https://github.com/liip/LiipImagineBundle can help with display images properly with good resolution - and even crop to square in list view.\n. http://stackoverflow.com/a/29175791\nI try this solution but without result. It seems that add na remove methods are never called.\n. Found possible solution. It can also be added to FosUserBundle integration doc https://github.com/javiereguiluz/EasyAdminBundle/issues/714\nI add into my Group entity this functions\n``` php\npublic function addUser(User $user)\n{\n//throw new \\Exception('Something went wrong!1');\n    $this->users[] = $user;\n    $user->addGroup($this);\n    return $this;\n}\npublic function removeUser(User $user)\n{\n//throw new \\Exception('Something went wrong!2');\n    $this->users->removeElement($user);\n    $user->removeGroup($this);\n} \n```\nand in my config \nyaml\n            edit:\n                fields:\n                    - { property: 'users', label: 'db.group.users', type_options: { by_reference: false } }\nfound this by_reference in Symfony docs:\nhttp://symfony.com/doc/current/reference/forms/types/collection.html#by-reference\nAnd now we can update Groups/Users both ways from User (add group list) form and Group form (we can add user list)\n. Here is a Group Entity\nphp\nnamespace AppBundle\\Entity;\n\n<puse FOS\\UserBundle\\Model\\Group as BaseGroup;\nuse FOS\\UserBundle\\Model\\UserInterface;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/\n- @ORM\\Entity\n- @ORM\\Table(name=\"my_group\")\n- @UniqueEntity(\"name\")\n  /\n  class Group extends BaseGroup\n  {\n  /\n  - @ORM\\Id\n  - @ORM\\Column(type=\"integer\")\n  - @ORM\\GeneratedValue(strategy=\"AUTO\")\n    /\n    protected $id;\n/\n  - @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\User\", mappedBy=\"groups\")\n    \n/\n    protected $users;\npublic function getUsers()\n  {\n      return $this->users;\n  }\npublic function addUser(User $user)\n  {\n      $this->users[] = $user;\n      $user->addGroup($this);\n      return $this;\n  }\npublic function removeUser(User $user)\n  {\n      $this->users->removeElement($user);\n      $user->removeGroup($this);\n  }\npublic function __toString()\n  {\n     return (string) $this->getName();\n  }\n  }\n. I like this one:\nhttp://eonasdan.github.io/bootstrap-datetimepicker/\n. There is also possibility to implement DatePicker using FormType. I have custom template with JQuery UI. JQuery UI have custom datepicker (https://jqueryui.com/datepicker/). So I integrate it using custom FormType\n```\n<?php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType;\nclass DatePickerType extends AbstractType\n{\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults(array('widget' => 'single_text'\n                                    ,'format' => 'dd/MM/yyyy'\n                                    ,'attr' => array('class'=>'datepicker'\n                                                    ,'data-dateformat'=>'dd/mm/yy'\n                                                    ,'placeholder'=>'Select a date'\n                                                    )\n                                    )\n                              );\n    }\npublic function getParent()\n{\n    return DateType::class;\n}\n\n}         \n```\nand in config file\n- { property: 'event_date', label: 'db.event.date', type: 'AppBundle\\Form\\Type\\DatePickerType' }\nIt works very well\n\nI initialize this using example from JQuery UI:\n  $(function() {\n    $( \"#datepicker\" ).datepicker();\n  });\n  \n. Also it probably will be possible to implement using type_options in config file but if you have many datepicker fields this way is not so nice as solution with custom FormType.\n. Form Type Extension is a very nice way but I can add in config: type: 'AppBundle\\Form\\Type\\DatePickerType' for all date fields. For me it is OK, not to many configuration and it works.\n. Tested... and it seem to be OK.\n. I know this option but the problem is how to override Oooops, Something went wrong! with my custom message so I need to detect that it is Doctrine error message '%ntegrity constraint violation%' and replace Oooops, Something went wrong with my custom message. Thank you\n. I know this option but the problem is how to override Oooops, Something went wrong! with my custom message so I need to detect that it is Doctrine error message '%ntegrity constraint violation%' and replace Oooops, Something went wrong with my custom message. Thank you\n. ```\nError 500\nOooops, Something went wrong!\nYou have experienced a technical error. We apologize.\n```\nStill I have this kind of message. I would like to know that it is possible to change \nmessage for fg. this ones:\n\"You can't delete User because of integrity constraints\" - for this error SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails\nand \n\"General technical Error\" for other kind of errors.\n. Anybody has solution for displaying user friendly messages when trying to delete records with constraint violation ?\n. Anybody has solution for displaying user friendly messages when trying to delete records with constraint violation ?\n. Done. Thank you for GIT explanation.\n. Do you know this bundle: https://github.com/avanzu/AdminThemeBundle. And one Cons:\nExisting integration with other themes (fg. I have such) will probably need to be rewrite in some parts. I modify list new edit, show, layout twig files.\n. Anyway maybe we can post our small enhancements or tips somewhere (wiki, issues with special tag). \nI have another nice one. It disable, enable button Save depending on there were changes on edit form or not:\nin edit.html.twig I add\n        $('#edit-{{form.vars.name}}-form').bind('dirty.areYouSure', function () {\n            $('#button-submit').removeClass('disabled');\n        });\n        $('#edit-{{form.vars.name}}-form').bind('clean.areYouSure', function () {\n            $('#button-submit').addClass('disabled');\n        });   \nAnd initialy set css class disabled for Save button in {% block easyadmin_widget %} \n<button id=\"button-submit\" type=\"submit\" class=\"btn btn-success disabled\">\n                        <i class=\"fa fa-save\"></i> {{ 'action.save'|trans(_trans_parameters, 'messages') }}\n                    </button>\n. Anyway maybe we can post our small enhancements or tips somewhere (wiki, issues with special tag). \nI have another nice one. It disable, enable button Save depending on there were changes on edit form or not:\nin edit.html.twig I add\n        $('#edit-{{form.vars.name}}-form').bind('dirty.areYouSure', function () {\n            $('#button-submit').removeClass('disabled');\n        });\n        $('#edit-{{form.vars.name}}-form').bind('clean.areYouSure', function () {\n            $('#button-submit').addClass('disabled');\n        });   \nAnd initialy set css class disabled for Save button in {% block easyadmin_widget %} \n<button id=\"button-submit\" type=\"submit\" class=\"btn btn-success disabled\">\n                        <i class=\"fa fa-save\"></i> {{ 'action.save'|trans(_trans_parameters, 'messages') }}\n                    </button>\n. I'll try to setup multiple upload, but this OneupUploaderBundle  seems to be more user friendly than VichUploader.\n. Yes and it works If I have to customize existing template fg. field_date. But I've created custom widget and for that widget I have to put it's template into app/Resources/views/easy_admin/.html.twig template. Is it possible to configure custom location for custom widget ? \n. Yes and it works If I have to customize existing template fg. field_date. But I've created custom widget and for that widget I have to put it's template into app/Resources/views/easy_admin/.html.twig template. Is it possible to configure custom location for custom widget ? \n. I need to override display field custom_field_tag with my logic how to display filed in list and show view. And as far as I know I have to put this new template into:\napp/Resources/views/easy_admin//.html.twig template.\napp/Resources/views/easy_admin/.html.twig template.\n. I have created Directory Namer class and don't know how to get current edited/inserted Entity in Easy Admin bundle to set directory name using one of Entity property. See ??? in code ?\n``` php\n<?php\nnamespace AppBundle\\Naming;\nuse Symfony\\Component\\Security\\Core\\SecurityContextInterface;\nuse Vich\\UploaderBundle\\Mapping\\PropertyMapping;\nuse Vich\\UploaderBundle\\Naming\\DirectoryNamerInterface;\nclass UsernameDirectoryNamer implements DirectoryNamerInterface\n{\n    protected $securityContext;\npublic function __construct(SecurityContextInterface $securityContext)\n{\n    $this->securityContext = $securityContext;\n}\n\npublic function directoryName($object, PropertyMapping $mapping)\n{\n    return ????????????????????????????????;\n}\n\n} \n```\n. Base on your solution. My perfectly working class for directory namer.\n``` php\n<?php\nnamespace AppBundle\\Services;\nuse Symfony\\Component\\Security\\Core\\SecurityContextInterface;\nuse Vich\\UploaderBundle\\Mapping\\PropertyMapping;\nuse Vich\\UploaderBundle\\Naming\\DirectoryNamerInterface;\nuse Behat\\Transliterator\\Transliterator;\nuse AppBundle\\Entity\\User;\nclass ImageDirectoryNamer implements DirectoryNamerInterface\n{\npublic function directoryName($object, PropertyMapping $mapping)\n{\n    switch (true) {\n        case $object instanceof User:\n            $name = Transliterator::transliterate($object->getName());\n            break;\n\n        default:\n            $name = $object->getId();\n    }\n\n    return $name;\n}\n\n}\n```\nConfiguration with (FlySystem)\n``` yaml\nvich_uploader:\n    db_driver: orm\n    storage:   flysystem\nmappings:\n    user_avatar_image:\n        uri_prefix:         /uploads/users/avatars\n        upload_destination: user_avatar_img_fs\n        namer:              vich_uploader.namer_origname\n        directory_namer:    app.directory_namer.user_avatar\n\n        inject_on_load:     false\n        delete_on_update:   true\n        delete_on_remove:   true\n\n```\nAnd services.yml\nyaml\nservices:\n    app.directory_namer.user_avatar:\n        class: AppBundle\\Services\\ImageDirectoryNamer\nThank You.\n. Yes exactly I found this issue. And add in Entity.\n```\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n// Only change the updated af if the file is really uploaded to avoid database updates.\n// This is needed when the file should be set when loading the entity.\nif ($image instanceof UploadedFile) {\n    $this->updatedAt = new \\DateTime('now');\n }\n\n}      \n```\nAs here https://github.com/dustin10/VichUploaderBundle/blob/master/Resources/doc/known_issues.md.\nI think yes. It should be added in our docs.\n. But FormType is for create custom field in form. I need possibility to edit in one form two entities with relation One2One.\n. I had same problem few weeks ago. This should be define as bidirectional relation Many2Many.\nphp\n    /**\n     * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\Group\", inversedBy=\"users\")\n     * @ORM\\JoinTable(name=\"zu_user_groups\",\n     *      joinColumns={@ORM\\JoinColumn(name=\"user_id\", referencedColumnName=\"id\")},\n     *      inverseJoinColumns={@ORM\\JoinColumn(name=\"group_id\", referencedColumnName=\"id\")}\n     * )\n     */\n    protected $groups;\n``` php\n    /\n     * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\User\", mappedBy=\"groups\")\n     \n/\n    protected $users;\npublic function getUsers()\n{\n    return $this->users;\n}\n\npublic function addUser(User $user)\n\n{\n    $this->users[] = $user;\n    $user->addGroup($this);\n    return $this;\n}\npublic function removeUser(User $user)\n{\n    $this->users->removeElement($user);\n    $user->removeGroup($this);\n}    \n```\n. Maybe this https://github.com/a2lix/TranslationFormBundle can help. This bundle isn't compatible with gedmo.\n. https://github.com/stwe/DatatablesBundle\nThis bundle helps with Datatables in Symfony.\n. I have tested this and It works OK. No I can have all EA templates in one place. Thanks.\n. When I change in my template\nphp\n'@EasyAdminBundle/Resources/public/javascript/jquery.are-you-sure.min.js'\nto\nphp\n'bundles/easyadmin/javascript/jquery.are-you-sure.min.js'\nthan there is no problem. So it looks like compile commonly used class for JavierEguiluz\\\\Bundle\\\\EasyAdminBundle\\\\EasyAdminBundle cause that in Layout @EasyAdminBundle is not recognized properly.\n. Thank you,\nMost impressive is your issue fixing time, less then 5 minutes.\n. You can see this issue: https://github.com/javiereguiluz/EasyAdminBundle/issues/865. Maybe it can be helpful.\n. Hi,\nI haven't try to use https://github.com/a2lix/TranslationFormBundle yet. In my current project I use https://github.com/Atlantic18/DoctrineExtensions/blob/master/doc/translatable.md and when I integrate it with EasyAdminBundle I will share the solution. \nFrom all posts I read already best opportunity to use a2lix is KnpLabs/DoctrineBehaviors.\nhttps://github.com/abdielcs make it working as I see in #865.\n. So, when I would like to have for each entity own translation file I need to copy/paste in each file action translations. Not very comfortable but from other hand in my language it let to have declination.\nBut point 2. is not covered by this solution. I check and in this case I have to put translations in message.pl.xlf even if I set translation_domain on entity level.a. So, when I would like to have for each entity own translation file I need to copy/paste in each file action translations. Not very comfortable but from other hand in my language it let to have declination.\nBut point 2. is not covered by this solution. I check and in this case I have to put translations in message.pl.xlf even if I set translation_domain on entity level.a. OK. Thank you for your explanations. We can close this thread. \nRegarding to point 2 I have to create custom form Type for my List of Values and I can translate my values inside form Type. \nThank You.. OK. Thank you for your explanations. We can close this thread. \nRegarding to point 2 I have to create custom form Type for my List of Values and I can translate my values inside form Type. \nThank You.. ",
    "alexgt9": "Your welcome! Thanks you for the bundle :smile: \n. Your welcome! Thanks you for the bundle :smile: \n. Thanks Javi, now it works fine. Maybe is something related with the symfony form component\n. :+1: \n. :+1: \n. ",
    "KhanMaytok": "haha +1\n. Yes I'm ashamed, I must read all documentation first\n. Yes I'm ashamed, I must read all documentation first\n. Wow, great\n. Wow, great\n. ",
    "ismailbaskin": "u r welcome\n. you are right.\n. i meant column based filter like this https://github.com/Abhoryo/APYDataGridBundle#screenshot\n. https://github.com/javiereguiluz/EasyAdminBundle/pull/530/files#diff-285b14d5005193790cae0ef24b3fcef3R128\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/530/files#diff-285b14d5005193790cae0ef24b3fcef3R133\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/530/files#diff-285b14d5005193790cae0ef24b3fcef3R141\nthis properties belongs to ClassMetadataInfo, not ClassMetadata\n. you are welcome but it's my second :point_up_2: https://github.com/javiereguiluz/EasyAdminBundle/pull/523\n. so sorry\n. phpstorm warns about missing exceptions\n. :+1: \n. ",
    "bassrock": "I think this feature would really be helpful, This way configuration is managed on the entities when adding a new field. Instead of making sure that the iml configuration matches the entities.\n. Yes I was actually trying to avoid that though since I have about 30 entities all with at least 2 carbon type fields if not more. So I was looking for a global solution first.\n. ",
    "aleperin": "Do not!\nThe entity the amount of an existing model:\n$ php app/console doctrine:mapping:import TEL3AsphuBundle annotation\n$ php app/console doctrine:generate:entities TEL3AsphuBundle\nWhat should I do?\nThank you!\n. Do not!\nThe entity the amount of an existing model:\n$ php app/console doctrine:mapping:import TEL3AsphuBundle annotation\n$ php app/console doctrine:generate:entities TEL3AsphuBundle\nWhat should I do?\nThank you!\n. Ok !, but I put that field in the method?\n/** {@inheritdoc} */\n    public function __toString()\n    {\n        return $this->getName();\n    }\nThank you!\n. Ok !, but I put that field in the method?\n/** {@inheritdoc} */\n    public function __toString()\n    {\n        return $this->getName();\n    }\nThank you!\n. Thank you!\nI thought it was easier to use ... with unrelated entity works great !!!, when they are not related ... and I do not know ... in simplest form is a one-to-many ...\nThanks and regards!\nSorry for my English, I'm Argentino (Spanish) ...\n. Thank you!\nI thought it was easier to use ... with unrelated entity works great !!!, when they are not related ... and I do not know ... in simplest form is a one-to-many ...\nThanks and regards!\nSorry for my English, I'm Argentino (Spanish) ...\n. Hello!\nI could already solve the functioning of related entities by adding the method __toString ().\nThanks and regards!\n. Hello!\nI could already solve the functioning of related entities by adding the method __toString ().\nThanks and regards!\n. ",
    "ghost": "I don't get this guys!\nAt this moment I still have only one entity (User). I manage my users with the FOSUserBundle. \nI want to modify the fields displayed in my list. Like this right?\nyaml\neasy_admin:\n    entities:\n        Users:\n            class: AppBundle\\Entity\\User\n            list:\n                fields:\n                    - username\n                    - email\n                    - last_login\nBut I get this error when trying to do it;\n\nAn exception has been thrown during the rendering of a template (\"Warning: mb_strlen() expects parameter 1 to be string, object given\") in @EasyAdmin/default/field_text.html.twig at line 4. \n\nI've added a __toString() method in my User entity but it still doesn't work;\nphp\npublic function __toString()\n    {\n        return $this->getUsername();\n    }\nI am pretty new to the whole Symfony thing, so can somebody please help me out?\n. Ahhh I see! Thank you very much! It solved my issue!\nGreat job with EasyAdmin. Keep up the good work!\n. I would appreciate this! :)\n. @amit0rana Thanks for your help but in this case I really need a dynamic solution as the drop-down offers some paths which depends on FTP-Uploads\n@javiereguiluz Thanks for your help!\n. Got a similarly message by using the vertical form theme:\nKey \"nullable\" for array with keys \"css_class, format, help, label, type, fieldType, dataType, virtual, sortable, template, type_options, fieldName, columnName, property\" does not exist in @EasyAdmin/form/bootstrap_3_layout.html.twig at line 225\n. @javiereguiluz thanks for your answer!\nI'm using the current version v1.11.3.\nIs it required to define the fields for the edit view/form to get it working?\n. @javiereguiluz thanks, the fix works for me! :+1: \n. Ok, by creating methods which are called by \"executeDynamicMethod\" from the admin controller, it works. But if I have a lot of entities, that is not really nice... \n. 1. If I have time, I will try to provide a pull-request.\n2. It's working on all pages except list-views. As i saw in list.html.twig#L28 you are using \"block page_title\" in the other templates e.g. \"new.html.twig\" you are working with \"block content_title\" which sets used variable. Could you fix it in the next release?\n3. You are right, it's working with \"type_options\". I checked it in the easy-admin-demo before asking - so it seems to be wrong here (https://github.com/javiereguiluz/easy-admin-demo/blob/master/app/config/admin/entities/product.yml) too.\n. Thank you @Pierstoval and @javiereguiluz :+1: \nI think 2. will be fixed with #863 because you switch back to \"block content_title\" in list.html.twig.\n. Okay, is there also a ticket for the first point?\n\nAnother question: Is there a possibility to provide an \"order\" function for entities? I have an Entity \"Category\", which needs to be displayed in frontend in a custom order. Currently my solution is a field called \"severity\" where the admin can define order by numbers. It's working but I think another way would bring better usability.\n. @javiereguiluz Looks good :) Can you tell me, when you will do the next release? Waiting for it to release an update for my application ;)\n@Pierstoval Okay, I understand!\n. Another Question: Is there a field type for select2? Or how can I use select2 in EasyAdminBundle when modifying form-element manually?\n. Yeah, now it works! :)\n. Thank you, I'm trying to use your admin with gedmo translation ORM, passing the $lang in the new object action. It works fine but there a lot to do (handling the differents translation in the template etc...)\n. I use the following code to modify a form generated from EasyAdminBundle:\n``` php\npublic function createEntityFormBuilder( $entity, $view)\n{\n    $formBuilder = parent::createEntityFormBuilder($entity, $view);\n// Here I overwrite field to be disabled\n$formBuilder->add('directory', TextType::class, ['disabled' => true]);\n\nreturn $formBuilder;\n\n}\n```\nThe code is placed in custom AdminController \n. When will this nice feature released? \n. A role based config option for this would be cool. Something like this:\neasy_admin:\n    entities:\n        BlogEntry:\n            class: AppBundle\\Entity\\BlogEntry\n            permissions:\n                list:  ['ROLE_ADMIN', 'ROLE_EDITOR']\n                create:  ['ROLE_ADMIN']\n                edit:  ['ROLE_ADMIN', 'ROLE_EDITOR']\n                delete:  ['ROLE_ADMIN']\n            list:\n                fields: \n                    - 'id'\n                    - 'title'\n            form:\n                fields: \n                    - 'title'\n. I just realized that select2 doesnt work in the complete backend...\n. After removing the folder web/bundles and rerun php app/console assets:install I got this:\n\n. But thats - maybe - my mistake ;) \n. Yes, I see the css tag. But the folder web/bundles/easyadmin/ is empty.\n. The folder vendor/javiereguiluz/easyadmin-bundle/Resources/public IS empty! On my PC...\n. Ok, I removed the vendor folder and reinstalled all composer packages - now it works.\nOnly the layout isn't correct...\n\n. Oh sorry, it does not work yet. The selected values are not accepted.\n\n. @javiereguiluz Please merge this. It's highly needed. \n. I'm having this issue as well when trying to delete any entity (no matter if they have a foreign key relationship or not). \nIt seems that the $form->isValid() fails inside the deleteAction() of the AdminController. I cannot figure out is going wrong though as the ID, entity and request method are all correct. \nThe form does not contain any errors, so I wonder why the isValid() check fails. \nPlease look into it as it's quite a breaking bug.\nEasyAdminBundle version: 1.15.1\nSymfony version: v3.1.4\n. @Raeghal That if-statement works fine for me, just not the form->isValid() check. \nI've now simply overwritten the function and removed the isValid() check, but it's a VERY bad hack. \n. @javiereguiluz Could you please look into this?\n. @javiereguiluz Could you please look into this?\n. @xabbuh I'm sending a valid DELETE request as stated in my comment. The problem is the isValid() which fails for a reason I cannot deduce. \n@Potherca, I don't think that there is a PR request which fixes this issue.\n. @xabbuh I'm sending a valid DELETE request as stated in my comment. The problem is the isValid() which fails for a reason I cannot deduce. \n@Potherca, I don't think that there is a PR request which fixes this issue.\n. @xabbuh bool(true) as expected. Like I said, the problem is with the isValid()-check. I already did some debugging myself.\n. @xabbuh bool(true) as expected. Like I said, the problem is with the isValid()-check. I already did some debugging myself.\n. @xabbuh No problem! It's reproducible by just using the current release version. If needed I'll create a fork with only the basic Symfony stuff. \n. @xabbuh No problem! It's reproducible by just using the current release version. If needed I'll create a fork with only the basic Symfony stuff. \n. Well, shit. I just tried to remove an entity without including my own method and it worked just fine. I guess it was fixed in one of the previous commits or I did something that fixed it, but I have no idea what... Could be a composer update, could be something unrelated. No idea, which sucks, because that means I can't provide proper feedback. \nSorry.\n. Well, shit. I just tried to remove an entity without including my own method and it worked just fine. I guess it was fixed in one of the previous commits or I did something that fixed it, but I have no idea what... Could be a composer update, could be something unrelated. No idea, which sucks, because that means I can't provide proper feedback. \nSorry.\n. Very nice find @czeslav87, that looks like it might indeed be the problem. . Thank you! When I had try with class path I was forgetting the \"Type\" folder!!!! \nSorry...stupid question!. Thank you! When I had try with class path I was forgetting the \"Type\" folder!!!! \nSorry...stupid question!. Yes! it's work perfectly! \nthank you!. Yes! it's work perfectly! \nthank you!. +1. +1. I found the problem. In this file (line) there is a code:\n{{ action.title|default('')|trans(trans_parameters, translation_domain) }}\nIf title attribute for actions is not defined, it uses the default value that is empty and causes error for translator.. ",
    "enekochan": "Sorry I didn't give any info about my environment :( Pretty busy right now. It's Versi\u00f3n 46.0.2490.80 (64-bit) in a Mac OS X El Capitan 10.11.1.\nSymfony 2.7.4\nEasyAdmin 1.7\n. Looks like min-height is being overrided by auto here:\nCSS\nbody.show .form-control {\n    background: #FFFFFF;\n    border: 0;\n    border-radius: 0;\n    box-shadow: none;\n    height: auto;\n}\n. I've send the profile privately because it shares the real website URL (I rather not share it). I'll paste some captures.\n\n\n\nPretty clear that the whole list of restaurants (20,000) is being loaded in the editor. This are the User and Restaurant entities:\n```\n/\n * @ORM\\Entity\n * @ORM\\Table(name=\"users\")\n */\nclass User extends BaseUser\n{\n    /\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    protected $id;\n...\n    /\n     * @ORM\\OneToMany(targetEntity=\"Restaurant\", mappedBy=\"user\")\n     /\n    protected $restaurants;\n...\n}\n```\n```\n/\n * @ORM\\Entity\n * @ORM\\Table(name=\"restaurants\", indexes={@ORM\\Index(name=\"phone1\", columns={\"phone1\"})})\n */\nclass Restaurant\n{\n    /\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    protected $id;\n...\n    /\n     * @ORM\\ManyToOne(targetEntity=\"AppBundle\\Entity\\User\", inversedBy=\"restaurants\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"user_id\", referencedColumnName=\"id\", nullable=true)\n     /\n    protected $user;\n/**\n * @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\Menu\", mappedBy=\"restaurant\", cascade={\"persist\"}, fetch=\"LAZY\")\n */\nprotected $menus;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\Cuisinetype\")\n * @ORM\\JoinTable(name=\"restaurants_cuisinetypes\",\n *      joinColumns={@ORM\\JoinColumn(name=\"restaurant_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"cuisinetype_id\", referencedColumnName=\"id\")}\n *      )\n */\nprotected $cuisinetypes;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\Service\")\n * @ORM\\JoinTable(name=\"restaurants_services\",\n *      joinColumns={@ORM\\JoinColumn(name=\"restaurant_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"service_id\", referencedColumnName=\"id\")}\n *      )\n */\nprotected $services;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\Ambience\")\n * @ORM\\JoinTable(name=\"restaurants_ambiences\",\n *      joinColumns={@ORM\\JoinColumn(name=\"restaurant_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"ambience_id\", referencedColumnName=\"id\")}\n *      )\n */\nprotected $ambiences;\n\n/**\n * @ORM\\OneToOne(targetEntity=\"Application\\Sonata\\MediaBundle\\Entity\\Media\", cascade={\"persist\",\"remove\"}, fetch=\"LAZY\")\n */\nprotected $image;\n\n/**\n * @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\RestaurantHasMedia\", mappedBy=\"restaurant\", cascade={\"persist\",\"remove\"}, fetch=\"LAZY\")\n */\nprotected $images;\n\n/**\n * @ORM\\ManyToOne(targetEntity=\"User\")\n * @ORM\\JoinColumn(name=\"telemarketer_id\", referencedColumnName=\"id\")\n */\nprotected $telemarketer;\n\n...\n}\n```\nThere are some more fields but not particullary interesting for the case.\n. ",
    "artggd": "I take care of that! ;)\n. @javiereguiluz: I can't manage to get your solution working, I still get the HTML validation blocking the submission. Rolling back to 1.7.x for now, I'm not keen on updating all the fields in my admin.yml file.\nI'll keep up to date with this issue and may have a closer look tonight.\n. ",
    "Glideh": "I had this issue (v1.14.0), required: false was not taken into account.\nI had to use validation_groups: false on the field type_options.\nThe issue is I would not be able to add another constraint.\n. Here is another way how it could be configured:\nyml\neasy_admin:\n    entities:\n        User:\n            class: AppBundle\\Entity\\User\n            search:\n                fields: [firstname, lastname, {separated: true, property: enabled}]\nAny separated search field would generate a dedicated search input with the guessed formtype.\n. I've been thinking a lot about advanced searching.\nIndividual search fields are precise and straightforward to use, but I think the unique search input (Google style) remains the user friendlier way.\n\ncriteria1: search string criteria2: other search string\n\nI did an extension to the current one in that spirit.\n(Blue buttons are custom batch actions that I implemented too)\n\nClicking on criterias adds them to the input and focuses it so the user can enter a string to search for each:\n\nRelated configuration:\nyml\neasy_admin:\n    entities:\n        Item:\n            label: 'admin_crud.item.title'\n            class: AppBundle\\Entity\\Item\n            search:\n                fields:\n                    -   property: 'serialNo'\n                        label: 'admin_crud.item.list.serialNo'\n                        search_label: 'serial'\n                    -   property: 'imei'\n                        label: 'admin_crud.item.list.imei'\n                        search_label: 'imei'\n                    -   property: 'projectCustomerSite.project.name'\n                        label: 'admin_crud.item.list.project'\n                        search_label: 'project'\n                # ...\n            list:\n                actions: ['production']\n                title: 'admin_crud.item.title'\n                fields:\n                    -   property: 'id'\n                # ...\nAlso allowing to search on linked entities as you can see.\n. I see, that's why I've put the helper dropdown to allow users to select their criterias rather than typing them.\nBut indeed some users might not understand still.\n. Here is my small workaround\n``` php\nclass EasyAdminController extends BaseEasyAdminController\n{\n    private function checkPermissions()\n    {\n        $easyAdmin = $this->request->attributes->get('easyadmin');\n        if (isset($easyAdmin['entity']['require_permission'])) {\n            $requiredPermission = $easyAdmin['entity']['require_permission'];\n        } else {\n            $view = $easyAdmin['view'];\n            $entity = $easyAdmin['entity']['name'];\n            $requiredPermission = 'ROLE_'.strtoupper($view).'_'.strtoupper($entity);\n            # Or any other default strategy\n        }\n        $this->denyAccessUnlessGranted(\n            $requiredPermission, null, $requiredPermission.' permission required'\n        );\n    }\n/**\n * @Route(\"/\", name=\"easyadmin\")\n * @param Request $request\n * @return RedirectResponse|Response\n */\npublic function indexAction(Request $request)\n{\n    $response = parent::indexAction($request);\n    $this->checkPermissions();\n    return $response;\n}\n\n...\n```\nThe menu part is quite simple.\n. I have this error sometimes (v1.14.0) when I do some changes on my list.html.twig extension.\nFor example here I'm trying to extend the search_form block with a _self form_theme.\nI don't see the relation with _entity_config.\nSo just doing\n```twig\n{% form_theme myForm _self %}\n{% block search_form %}\n......\n{% endblock %}\n```\nGives me the undefined _entity_config error\nUsing a dedicated form theme template fixed the error.. I'm also kind of stuck with this issue.\nI was about to hook a subscriber to the POST_SEARCH_QUERY_BUILDER event but I think there is no way to pass additional query fields to it.\nSeems like we also have to override the global searchAction() and findBy(). We'd have to add a parameter to findBy() (it already takes 7)\nOnce being able to interpret the new search fields, we'd have to override each list<Entity>Action() which need extra search fields, or better, define a specific configuration to add separate search fields, ie:\nyml\neasy_admin:\n    entities:\n        User:\n            class: AppBundle\\Entity\\User\n            search:\n                fields: [firstname, lastname, {separated: true, property: enabled}]\nAny separated search field would generate a dedicated search input\nIf any one have a simpler solution, please don't hesitate to share, I'll try to elaborate mine here.\n. Not only for global ? What do you mean by global ?\nDo you mean searching in a particular field instead of all searchable ?\n. With UserBy you are trying to list and search on the user name aren't you ?\nIn list you already can use userBy.fullname for example or implement a __toString() in your user entity.\nFor the search you'll need to customize the AdminController.\nIs that what you are trying to do ?\n. ",
    "elodie-nazaret": "Indeed, I forgot to change the line of the routing.yml... Now it works !\nThanks you a lot\n. ",
    "sfarkas1988": "Sure, this would be the best solution. \n. wow, great! Many thanks\n. I'm fascinated from you and your bundle! :+1: \nThank you very much\n. great!\n :+1: \nthx\n. ",
    "amit0rana": "Hi, currently for a OneToMany association list view shows a number. How can I make it a link and on click show all the associated rows?\nThanks.\n. Thanks @Pierstoval \n. Hi, thanks for checking. Does this help?\neasy_admin:\n    ...\n    entities:\n        BankRates:\n            class: AppBundle\\Entity\\Core\\BankRate\n            list:\n                fields: ['id','bankMaster','rate1','rate2','effectiveDate','expiryDate']\nBankRate entity:\n/**\n     * @var integer\n     *\n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */\n    private $id;\nScreenshot from easy admin\n\nScreenshot from DB\n\n. I am so sorry, this is such dumb mistake on my part. I guess non-stop coding the whole weekend did this to me.\nI was looking at listing of some other table and comparing it with some other table in DB :(, I actually double/triple checked and even tried to trace the code before posting the issue.\nAll is fine. Sorry for wasting everyone's time.\n. I am new to easyadmin myself so this might not be the best solution. If hardcoding of choices is an option you can do following:\nform:\n    fields:\n        - { property: 'gender', type:'choice', type_options: {choices: {'1':'Male', '2':'Female'}}}\nThis will show a choice with Male/Female option.\n. How do we enable adminLTE?\n. Thanks @javiereguiluz works fine just a minor glitch. You cannot scroll vertically (I tried with two fingre scroll on mac) once you start horizontal scroll. If you are at the beginning of the horizontal scroll vertical scroll works.\n. Thanks @javiereguiluz works fine just a minor glitch. You cannot scroll vertically (I tried with two fingre scroll on mac) once you start horizontal scroll. If you are at the beginning of the horizontal scroll vertical scroll works.\n. Do  you think it makes sense to use something like jquery data tables for lists (https://datatables.net/examples/index). This will then let us easily add file export options (https://datatables.net/extensions/buttons/examples/initialisation/export.html).\n. Thanks @javiereguiluz \nThis is what I did:\n1) created custom template\n<a href=\"{{ path('easyadmin', { action: 'search', entity: 'PurchaseItem', query: 'purchase='~item.id }) }}\"><span class=\"badge\">{{ value|length }}</span></a>\n2) In custom AdminController\n```\npublic function createPurchaseItemSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields) {\n        if (stripos($searchQuery, \"=\") !== false) {\n            list($field,$value) = explode(\"=\",$searchQuery);\n       $newSearchableFields = array();\n        if (array_key_exists($field, $searchableFields)) {\n            $newSearchableFields[$field] = $searchableFields[$field];\n        }\n        return parent::createSearchQueryBuilder($entityClass, $value, $newSearchableFields);\n    } else {\n        return parent::createSearchQueryBuilder($entityClass, $searchQuery, $searchableFields);\n    }\n}\n\n```\nnow I can use this for https://github.com/javiereguiluz/EasyAdminBundle/issues/786 as well (i.e. searching on a specific field). Right now assuming that I will only use only one field=value\n. There is one here: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/getting-started/6-about-this-project.md#our-roadmap\n. Thank you @ogizanagi and @javiereguiluz \n. Hi @javiereguiluz , confirmed works on easy-admin-demo. Although didn't work on my project, will check later why. \nThanks.\n. ",
    "deantomasevic": "Hi @amit0rana \nhow do you solved your problem?\nThanks,\nDean. ",
    "JHGitty": "The phone-number-bundle provides a twig function:\ntwig\n{{ phone_number_format(myPhoneNumber, 'INTERNATIONAL') }}\nI think you should use it in the template which @javiereguiluz described.\n. @Pierstoval SensioDistributionBundle 5.0 will be released for Symfony 2.8 and Symfony 3.0. I think this issue is just a reminder to add this support for the Standard Edition of Symfony 2.8 and Symfony 3.0.\nWithout a fix you are not possible to use Symfony 2.8 or Symfony 3.0.\n@javiereguiluz Maybe this bundle should allow the dev-version until Symfony 2.8 and Symfony 3.0 are released?\n. ",
    "relez": "Hi there, sorry to interrupt, I have something similar, I got this Entity property:\n```\nclass Post\n{\n  ...\n/*\n     * @var boolean\n     * @ORM\\Column(name=\"published\", type=\"boolean\")\n     /\n    protected $published = 1;\n...\n}\n```\nThen, in my config.yml, at easy_admin section:\nBlog:\n    label: 'Posts list'\n    class: MyCompany\\MyBundle\\Entity\\Post\n    list:\n        fields: ['title', 'published']\n    new:\n        fields: \n          - 'title'\n          - 'summary'\n          - 'body'\n          - { property: 'published', type: 'boolean' }\nWhen I try to create a new Blog Post, I got this:\nCould not load type \"boolean\"\nIs this a bug or maybe an issue I have?\nThanks!\n. I am using Symfony 2.7.6 and 1.9.1 for easy_admin. Am I using a wrong version?\nThanks once again!\n. I am using toggle for the list, something like:\nyaml\nBlog:\n            label: 'Posts list'\n            class: MyCompanyt\\MyBundle\\Entity\\Post\n            list:\n                fields: \n                    - 'title'\n                    - { property: 'published', type: 'toggle' }\nAnd it is working perfect, the new and edit are the one who have problems.\n. I tried this:\nyaml\nBlog:\n            label: 'Posts list'\n            class: MyCompany\\MyBundle\\Entity\\Post\n            list:\n                fields: \n                    - 'title'\n                    - { property: 'published', type: 'checkbox' }\n            edit:\n                fields: \n                    - 'title'\n                    - 'summary'\n                    - 'body'\n                    - { property: 'published', type: 'checkbox' }\n            new:\n                fields: \n                    - 'title'\n                    - 'summary'\n                    - 'body'\n                    - { property: 'published', type: 'checkbox' }\nAnd I get this error:\nUnable to transform value for property path \"published\": Expected a Boolean\n. Hi guys, thanks for your reply, I tried the @ogizanagi workaround and it worked, I had \n/**\n     * @var boolean\n     * @ORM\\Column(name=\"published\", type=\"boolean\")\n     */\n    protected $published = 1;\nin my Post entity and I changed to \nprotected $published = true;\nand it worked.\n@javiereguiluz, I no needed to test your suggestion, but thanks a lot!\nPD: Is there a place where I can ask few questions about the plugin?\nThanks!\n. Hello @ogizanagi, thanks for your quick answer, I implemented the __toString() method in my Book entity and as you said, no need to specify the type.\nThanks again for your quick answer.\n. ",
    "TomasVotruba": "Is there a possibility to exclude files now?\nI need to exclude one property only. When I use explicit approach as recommended and add a new property to entity and I always have to think about it to add it to config too.\nI can send PR for it :)\nThanks for this awesome bundle, I just pop up entities and it works. Love it :+1: . :+1: \n. How can this be achieved in 2.0? I need to generate certificates for selected registrations.. Let me know if you need upgrade to PHP 7.1.\nI do it routinely :). Does that mean \"go for it\"? :). Does that mean \"go for it\"? :). It's different project from project. In prototype I don't care what's displayed and what not, I'm fine with all. With real app I'm building (2 actually), I need to control what to show and what not and don't care about it with every new single property. I'm lazy and product focused instead.\nI forgot to mention here that that this feature made it to:\nhttps://github.com/alterphp/EasyAdminExtensionBundle\nVery good package with all that's missing in this package :+1: . No need to have that in core then.\nIf anyone needs it, just install the package and use exactly the same way as described above.. It's different project from project. In prototype I don't care what's displayed and what not, I'm fine with all. With real app I'm building (2 actually), I need to control what to show and what not and don't care about it with every new single property. I'm lazy and product focused instead.\nI forgot to mention here that that this feature made it to:\nhttps://github.com/alterphp/EasyAdminExtensionBundle\nVery good package with all that's missing in this package :+1: . No need to have that in core then.\nIf anyone needs it, just install the package and use exactly the same way as described above.. @javiereguiluz Great job, can't wait for this . Hi, that looks exactly like what I need, thanks :+1: . @gander Is App\\Form\\RouteType registered as a service and autoconfigured?. @gander Is App\\Form\\RouteType registered as a service and autoconfigured?. For anyone having troubles to migrate, I've prepared @rectorphp set\nTo upgrade your controllers, just run:\nvendor/bin/rector process /src --level easy-admin-bundle20. Do you know some way, @alterphp?. > I know you fight everyday against repetitive work ;-)\n:+1:  I'm too lazy to copy-pasted, so I rather invest few hours to setup and forget :D\n\n...take the property name as label\n\nThat was initial state :D I need name=\"stavba\" to be the label (\"stavba\" is a Czech translation). I don't want to polute code by using non-English.\n\nYAML anchors\n\nWhat is that?\nMaybe better question: where can I hook my own \"label resolver\"? That way, I could get property label from the name=\"stavba\" if exists. Fallback to default if not.. > For a label resolver, try plugging a ConfigPass around PropertyConfigPass.\nPropertyConfigPass sounds like the right class, thanks :+1: . Works perfectly, thank you. Works perfectly, thank you. Sure, I'll get to this next week. Thanks for your answers :+1: . How exactly should I use that?\nI could only find @EasyAdmin/form/bootstrap_4.html.twig (not one with _layout)\nI found form_theme in docs\n```twig\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% form_theme form '@EasyAdmin/form/bootstrap_4.html.twig' %}\n{% block main %}\n    Odhadnout cenu\n{{ form(form) }}\n\n{% endblock %}\n```\n\nVariable \"easyadmin\" does not exist.\n\n\n```twig\n{% extends '@EasyAdmin/form/bootstrap_4.html.twig' %}\n{% block main %}\n    \nOdhadnout cenu\n\n    {% if price %}\n        {{ price|number_format }} K\u010d\n    {% endif %}\n\n    <div class=\"text-left\">\n        {{ form(form) }}\n    </div>\n</div>\n\n{% endblock %}\n```\n\nVariable \"filters\" does not exist.\n. How exactly should I use that?\n\nI could only find @EasyAdmin/form/bootstrap_4.html.twig (not one with _layout)\nI found form_theme in docs\n```twig\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% form_theme form '@EasyAdmin/form/bootstrap_4.html.twig' %}\n{% block main %}\n    Odhadnout cenu\n{{ form(form) }}\n\n{% endblock %}\n```\n\nVariable \"easyadmin\" does not exist.\n\n\n```twig\n{% extends '@EasyAdmin/form/bootstrap_4.html.twig' %}\n{% block main %}\n    \nOdhadnout cenu\n\n    {% if price %}\n        {{ price|number_format }} K\u010d\n    {% endif %}\n\n    <div class=\"text-left\">\n        {{ form(form) }}\n    </div>\n</div>\n\n{% endblock %}\n```\n\nVariable \"filters\" does not exist.\n. 1. Change the parent class:\n\ndiff\n-final class TrainingRegistrationFormType extends AbstractType\n+final class TrainingRegistrationFormType extends EasyAdminFormType\n\nCreate in controller:\n\nphp\n$form = $this->createForm(TrainingRegistrationFormType::class);\n\nEDIT, I had to update config, so children of EasyAdminFormType are autowired:\n\n```diff\n # config.yaml\n services:\n     _defaults:\n+         autoconfigure: true\n App\\:\n     resource: '../src/Form'\n\n```. 1. Change the parent class:\ndiff\n-final class TrainingRegistrationFormType extends AbstractType\n+final class TrainingRegistrationFormType extends EasyAdminFormType\n\nCreate in controller:\n\nphp\n$form = $this->createForm(TrainingRegistrationFormType::class);\n\nEDIT, I had to update config, so children of EasyAdminFormType are autowired:\n\n```diff\n # config.yaml\n services:\n     _defaults:\n+         autoconfigure: true\n App\\:\n     resource: '../src/Form'\n\n```. Awesome, thank you :+1: . Thanks for reply. I've checked the code, but I have no idea how to make my form work.\nAny tips?. Thanks for reply. I've checked the code, but I have no idea how to make my form work.\nAny tips?. Thanks, I'll try that.\nIt just feels weird that renderring own form (that EasyAdmin knows about since it's in a Controller that inherits it's Base controller) is so extremly difficult.. Thanks, I'll try that.\nIt just feels weird that renderring own form (that EasyAdmin knows about since it's in a Controller that inherits it's Base controller) is so extremly difficult.. Could you give me more code so I can test it first? I don't get it from $view->vars['easyadmin']\nIf all works, I'll close it :+1: . Thanks for option.\nThere is still Variable \"easyadmin\" does not exist. error\n\n. I've found this workaround in here: https://github.com/EasyCorp/EasyAdminBundle/issues/1081#issuecomment-255541759\n```yaml\neasy_admin.yaml\neasy_admin:\n    entities:\n        Feedback:\n            form:\n                fields:\n                    - 'name'\n                    - 'url'\n                    - 'text'\n                    - { property: 'training', type_options: { required: true} }\n```\nBut it should be detected by nullable=true/false annotation like other properties are, so it seems like a bug.. I've found this workaround in here: https://github.com/EasyCorp/EasyAdminBundle/issues/1081#issuecomment-255541759\n```yaml\neasy_admin.yaml\neasy_admin:\n    entities:\n        Feedback:\n            form:\n                fields:\n                    - 'name'\n                    - 'url'\n                    - 'text'\n                    - { property: 'training', type_options: { required: true} }\n```\nBut it should be detected by nullable=true/false annotation like other properties are, so it seems like a bug.. @HeahDude Hi, works perfectly, thank you :+1: \nWhere could I learn more about this?\nTo complete answer, this namespace is required:\n```php\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n// ...\n/**\n * @ORM\\ManyToOne(targetEntity=Training::class, inversedBy=\"trainingFeedbacks\")\n * @Assert\\NotNull\n */\nprivate $training;\n\n```\n\n@javiereguiluz Hi, is the different approach to nullable=false => required on relations and other properties intentional? Why is that?. @HeahDude So @ORM\\JoinColumn(nullable=false) on relations solves it?. Amazing work :clap: . ",
    "sr972": "Whishlist for 2.0\n- ACL / ROLE_* support down to field level and based on actions\n- Based upon ACL / ROLE_* support an integrated login system, out of the box\n- Beautify URLs / Move GET parameters to POST or session or any other way SF provides (e.g. to the user object)\n. Ok, looked over it 20times... Which 'Side' ? Maybe it's too late for me today to see what you mean.\nEDIT: Do you mean 'Sie' instead of 'Side'? To address someone formally and the entity.create is informally?\n. It's ok for me if you want to change it... Feel free to do it :) I'm in the car right now ;)\n. ",
    "ktrzos": "\nBeautify URLs / Move GET parameters to POST or session or any other way SF provides (e.g. to the user object)\n\nI also think, that this is very unneeded.\n. > Beautify URLs / Move GET parameters to POST or session or any other way SF provides (e.g. to the user object)\nI also think, that this is very unneeded.\n. How can I make this type of form collection in EasyAdmin? For example, a multiple values field oraz multiple file uploader?\n. @CruzyCruz \nCould You give any working example, please?\nI'm still a beginner in Symfony :/. For now, I've built very simple new form type with only one text input, but it's returning me an array... and need particular entity...\nSame thing, when I've added an file by hand to database. Giving error:\nCannot read index \"title\" from object of type \"Notimeo\\PageBundle\\Entity\\PageFile\" because it doesn't implement \\ArrayAccess.\n. @CruzyCruz \n1.\nI don't have OptionsResolverInterface class (Symfony 3.0.1 here). I presume, that I should change it for OptionsResolver class.\n2.\nQuestion to this part of code:\n$builder\n            ->add('winemakerArea', EntityType::class, array(\n                'class' => 'FBNGuideBundle:WinemakerArea',\n                'property' => 'area',\n                ))\n        ;\nIs winemakerArea is a property of Winemaker class?\nAnd... is FBNGuideBundle:WinemakerArea indicating on WinemakerArea class, which is located in FBN\\GuideBundle bundle?\nAnd, I'm getting an error on this: The option \"property\" does not exist.\n3.\nForm builder, which You have presented in WinemakerDomainType class, will create select input, am I right? With that solution I'm limited to select an option only from existing entities. As example, it won't be so good for multiple file uploading which creates new entities storing data about particular files.\n. @Pierstoval \n@CruzyCruz \nThanks to You, I've done it! :smile: \nI think there should be a tutorial about it in EasyAdmin documentation section. It's an important feature.\n. @Pierstoval\n@CruzyCruz\nOk, I have another problem with this form collection.. maybe You could help me (again :smiley:) with this.\nI have those classes:\nPage entity: http://codepad.org/DzDZRbQS\nPageFile entity: http://codepad.org/itQnQGSX\nMyFileType form type: http://codepad.org/wROsk35Y\nScreenshot:\n\nTwo things:\n1)\nHow can I add validation on my form collection? I've tried to set title property as not empty by @Assert\\NotBlank() and \n$builder->add('title', null, [\n    'required' => TRUE,\n]);\nand it seems that none of them is working.\nThis is very simple validation rule. But what with validating files from PageFiles entities, like their extension and size?\n2)\nMy PageFile class have this code:\n/**\n     * @ORM\\PrePersist()\n     * @ORM\\PreUpdate()\n     */\n    public function updateModifiedDatetime()\n    {\n        // update the modified time\n        $this->setUpdateDate(new \\DateTime());\n    }\nbut after title updating it does not update the updateDate property. Why?\n. @CruzyCruz My saviour :heart: \n. @javiereguiluz \nI still got the problem.\nEntity class:\n``` php\n<?php\nnamespace Notimeo\\PageBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Notimeo\\UserBundle\\Entity\\User;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\n/\n * Page\n \n * @ORM\\Table(name=\"pages\")\n * @ORM\\Entity(repositoryClass=\"Notimeo\\PageBundle\\Repository\\PageRepository\")\n * @Gedmo\\TranslationEntity(class=\"Notimeo\\PageBundle\\Entity\\Page\\PageTranslation\")\n * @ORM\\HasLifecycleCallbacks\n * @Vich\\Uploadable\n /\nclass Page\n{\n    // ...\n/**\n * @Vich\\UploadableField(mapping=\"product_images\", fileNameProperty=\"image\")\n * @Assert\\NotBlank(groups={\"add_page\"})\n * @var File\n */\nprivate $imageFile;\n\n// ...\n\n}\n```\nEasyAdmin config:\nyaml\neasy_admin:\n        Page:\n            class: Notimeo\\PageBundle\\Entity\\Page\n            list:\n                fields:\n                    - title\n                    - { property: 'image', type: 'image', base_path: \"%app.path.product_images%\" }\n                    - updateDate\n            show:\n                fields:\n                    - { property: 'image', type: 'image', base_path: \"%app.path.product_images%\" }\n            new:\n                form_options: { validation_groups: ['Default', 'add_page'] }\n            edit:\n                form_options: { validation_groups: ['not_existing_group'] }\n            form:\n                form_options: { validation_groups: ['not_existing_group'] }\n                fields:\n                    - isPublished\n                    - property: 'title'\n                      type: 'Notimeo\\PageBundle\\Form\\TranslatableType'\n                      type_options:\n                          personal_translation: 'Notimeo\\PageBundle\\Entity\\Page\\PageTranslation'\n                          property_path: 'translations'\n                    - { property: 'content', type: 'Notimeo\\PageBundle\\Form\\TranslatableType', type_options: { widget: 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType', personal_translation: 'Notimeo\\PageBundle\\Entity\\Page\\PageTranslation', 'property_path': 'translations' } }\n                    - property: 'imageFile'\n                      type: 'vich_image'\n                      type_options:\n                          allow_delete: false\n                    - { property: 'pageFiles', type: 'collection', type_options: { entry_type: 'Notimeo\\PageBundle\\Form\\Type\\MyFileType', by_reference: false } }\nAnd imageFile field in form is still \"required\" in \"edit\" form page. What I'm doing wrong?\n. @javiereguiluz\nI think I can't reopen this issue :D.\n. https://github.com/ktrzos/SymfonyBasic\nMy app with this problem (in Notimeo\\PageBundle)...\n. The @Assert\\NotBlank(groups={\"add_page\"}) is setting required = true for particular form field. So, I think, that this flag is set every time independently from validation groups...\n. @CruzyCruz \nSo there is no possibility to edit all languages values of particular entity in one form?\nLike here:\nhttp://a2lix.fr/bundles/translation-form/\n. @mkalisz77 \nQuestions:\n1. What's a \"virtual property\"?\n2. Where to add oneLocale config filter?\n. @CruzyCruz \n@mkalisz77 \nI have other idea without using those ready libraries and bundles... and I would be glad if You could (again) help me make this work... if its possible to implement at all...\nSo, let's assume, that there are two entity types:\n\\Acme\\AppBundle\\Entity\\Page\n```\n<?php\nnamespace Acme\\AppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Notimeo\\UserBundle\\Entity\\User;\n/\n * Page\n \n * @ORM\\Table(name=\"pages\")\n * @ORM\\Entity(repositoryClass=\"Acme\\AppBundle\\Repository\\PageRepository\")\n * @ORM\\HasLifecycleCallbacks\n /\nclass Page\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @ORM\\Column(name=\"is_published\", type=\"boolean\")\n */\nprivate $isPublished;\n\n/**\n * @ORM\\OneToMany(\n *     targetEntity=\"Acme\\AppBundle\\Entity\\Locale\\PageLocale\",\n *     mappedBy=\"page\"\n * )\n */\nprivate $locale;\n\n}\n```\n\\Acme\\AppBundle\\Entity\\Locale\\PageLocale\n```\n<?php\nnamespace Acme\\AppBundle\\Entity\\Locale;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Acme\\AppBundle\\Entity\\Page;\n/\n * Class PageLocale\n \n * @package Acme\\AppBundle\n \n * @ORM\\Table(name=\"pages_locales\")\n * @ORM\\Entity(repositoryClass=\"Acme\\AppBundle\\Repository\\PageLocaleRepository\")\n * @ORM\\HasLifecycleCallbacks\n */\nclass PageLocale\n{\n    /\n     * @var int\n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */\n    private $id;\n/**\n * @var string\n * @ORM\\Column(name=\"title\", type=\"string\", length=255)\n */\nprivate $title;\n\n/**\n * @var string\n * @ORM\\Column(name=\"content\", type=\"text\")\n */\nprivate $content;\n\n/**\n * @var string\n * @ORM\\Column(name=\"lang\", type=\"string\", length=5)\n */\nprivate $lang;\n\n/**\n * @var Page\n * @ORM\\ManyToOne(\n *     targetEntity=\"Acme\\AppBundle\\Entity\\Page\",\n *     inversedBy=\"locale\"\n * )\n * @ORM\\JoinColumn(name=\"page_id\", referencedColumnName=\"id\")\n */\nprivate $page;\n\n```\nWhile Page entity is a \"basic\" one, the PageLocale has all fields which should be translated in a simple page article.\nThe question is:\nHow to create a custom form field which would show form fields of particular entity property for all languages:\n\nand when submiting form, something somehow would take those values and assigning them to PageLocale with proper $lang property values (maybe __set() or some listener?). For example, with <input name=\"title[en]\" />, <input name=\"title[pl]\" />, etc.\nThere could be some configuration for those files, like example:\neasy_admin:\n    entities:\n        PageLocale:\n            class: Acme\\AppBundle\\Entity\\Page\n            form:\n                fields:\n                    - { property: 'title', type: 'text' }\n        Page:\n            class: Acme\\AppBundle\\Entity\\Page\n            form:\n                fields:\n                    # ...\n                    - { property: 'locale', type: 'locale', type_options: { take_fields: [ 'title' ] } }\n                    - { property: 'other_property', type: 'text' }\n                    - { property: 'locale', type: 'locale', type_options: { take_fields: [ 'content' ] } } # to make possibility to put translatable fields between the basic ones\nI'm new in Symfony and don't really know how to approach to this problem and some of it's components, like custom form fields.\nAnd well.... all of this can be achieved with collection field type in a very simple way... i think. But those fields would only be placed together and developers will have to create new form field type for each $locale property in each entity.\n. I managed to create what I want with Personal translations and THIS set of files but still... always must be a problem.\nAll errors according to those multi-lang fields are only viewed above the whole form, not near that particular field.\n\n(that error is caused in \"Content\" field)\nI have done it with @Assert\\Length(min=\"10\") and I see, that asserts are creating errors corresponding to entity properties. That's why error is occuring to title or content and not to title:en or content:en which are created by personal translations. How the hell i can manage with this...? :/\nIs there any possibility to load those assert validation rules to fields generated by personal translations?\n. I have created repository of this project here (with database dump in main directory):\nhttps://github.com/ktrzos/SymfonyBasic\nMaybe someone can add more efficient help by directly looking on it all.\n. @javiereguiluz \nWell, damn. I was hoping that there is some solution for this. What do You think about that look:\n\n[Or something similar. I just made it in \"fast-mode\". ]?\n. This feature could apply to not only target attribute. For example, like this configuration:\nyaml\neasy_admin:\n    entities:\n        Test:\n            class: AppBundle\\Entity\\Test\n            list:\n                actions:\n                    - someaction\n                      arguments: { target: \"_blank\", class: 'someclass' }\n. This feature could apply to not only target attribute. For example, like this configuration:\nyaml\neasy_admin:\n    entities:\n        Test:\n            class: AppBundle\\Entity\\Test\n            list:\n                actions:\n                    - someaction\n                      arguments: { target: \"_blank\", class: 'someclass' }\n. @javiereguiluz Hah, indeed! Didn't see that.\n\nBut still... I think that it should be under arguments parameter (or html_arguments) when there would be possibility to overwrite whole HTML arguments.\n. @javiereguiluz Hah, indeed! Didn't see that.\n\nBut still... I think that it should be under arguments parameter (or html_arguments) when there would be possibility to overwrite whole HTML arguments.\n. Still, having only highlighted attributes gives small flexibility. What if I would like to add data-{x} attribute? Or add id? I think there should be possibility to add any HTML attribute or overwrite it's value.\n. Well, we are talking about actions here, so I'm reffering to them (for example adding id or data-{x} HTML attributes, and when button with those values would be clicked, some JavaScript action is running). But, this also be nice to all other elements of EasyAdmin, like list rows, form fields containers etc. I'm a fan of flexibility :stuck_out_tongue:.\n. The purpose of this is to make a link to OTHER entity list.\nFor example, let's assume that I have Banner and BannerCategory entities. Instead of adding all list action links to the sidebar, I would like to add only one of them (BannerCategory). Then, when clicked on that link, among edit and delete actions, there would be also next list action, but related to Banner entity (which are related to proper BannerCategory entities).\nIt's a little bit related to #1120.\n. Hello @HeahDude :).\nOh, ok. Have you got link to this issue on Symfony repo?\n. Hello @HeahDude :).\nOh, ok. Have you got link to this issue on Symfony repo?\n. Well, not exactly. The main entity is a category of banners. It have property banners that is (in add/edit form) a collection related to Banner entity. This collection may have elements, but not must. If it has elements (i.e. Banners entities), then those elements MUST have filled, for example, title property. So... this field (title) should be required if I want to add an item to this collection, right?\n. Well, not exactly. The main entity is a category of banners. It have property banners that is (in add/edit form) a collection related to Banner entity. This collection may have elements, but not must. If it has elements (i.e. Banners entities), then those elements MUST have filled, for example, title property. So... this field (title) should be required if I want to add an item to this collection, right?\n. Yes, I can use validation. But if field from an item in collection is somewhat required, then it should be displayed for my clients as required (with red star near label). They would only know if it's required, when they will not fill it up and see This value should not be blank. message :).\n. Yes, I can use validation. But if field from an item in collection is somewhat required, then it should be displayed for my clients as required (with red star near label). They would only know if it's required, when they will not fill it up and see This value should not be blank. message :).\n. Thanks @HeahDude for help. This is what I needed, but used on field in BannerType class :).\nphp\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder->add('title', Type\\TextType::class, [\n            'required' => false,\n            'label_attr' => ['class' => 'required label-required']\n        ]);\n        $builder->add('isPublished');\n        $builder->add('imageFile', VichFileType::class, ['required' => true]);\n        $builder->add('alt', Type\\TextType::class, ['required' => true]);\n    }\n. That would be great! BTW. How you make such GIFs?\n. @javiereguiluz \nBug encountered. After going on one page from menu, all subtrees have an active item:\n\nOr is it something wrong on my side?\n[First time used this application for GIF recording :).]\n. @javiereguiluz\nWhen you find a time to fully acquaint with this subject, gimme a sign :D. Would love to know if I went in the right way...\n. Yes, I know. That's why I wanted to take list config and add some extra parameters specified only for that new action. \nMaybe there should be any way to extend ConfigManager functionalities, like extra classes in doProcessConfig() method. Maybe in main config:\nyaml\neasy_admin:\n    additional_config_processing:\n        - 'Namespace\\Class'\n        - 'Namespace\\Class2'\n``` php\nAnd method would be like:\nclass ConfigManager\n{\n// ...\n\nprivate function doProcessConfig($backendConfig)\n{\n    $configPasses = array(\n        new NormalizerConfigPass(),\n        new DesignConfigPass($this->container->get('twig'), $this->container->getParameter('kernel.debug')),\n        new MenuConfigPass(),\n        new ActionConfigPass(),\n        new MetadataConfigPass($this->container->get('doctrine')),\n        new PropertyConfigPass(),\n        new ViewConfigPass(),\n        new TemplateConfigPass($this->container->getParameter('kernel.root_dir').'/Resources/views'),\n        new DefaultConfigPass(),\n    );\n\n    if(isset($backendConfig['additional_config_processing'])) {\n        foreach($backendConfig['additional_config_processing'] as $item) {\n            $configPasses[] = new $item;\n        }\n    }\n\n    foreach ($configPasses as $configPass) {\n        $backendConfig = $configPass->process($backendConfig);\n    }\n\n    return $backendConfig;\n}\n\n}\n```\n. +1 :+1: \nI think this is great idea. All, if possible, should not be implemented without hardcoding. \nThe greater the flexibility without touching the views, the better.\n. +1 :+1: \nI think this is great idea. All, if possible, should not be implemented without hardcoding. \nThe greater the flexibility without touching the views, the better.\n. Ok, thanks for Your answer ;).. Ok. So I must define new action or something custom to do this in EasyAdmin? No other possibility?. For now, I have done this with overwritting controller and making those methods:\n```php\n    /*\n     * @return RedirectResponse|Response\n     /\n    protected function passwordAction()\n    {\n        return $this->editAction();\n    }\n/**\n * Creates the form builder of the form used to create or edit the given entity.\n *\n * @param object $entity\n * @param string $view   The name of the view where this form is used ('new' or 'edit')\n *\n * @return FormBuilder\n */\nprotected function createEntityFormBuilder($entity, $view)\n{\n    $easyadmin = $this->request->attributes->get('easyadmin');\n\n    $formBuilder = parent::createEntityFormBuilder($entity, $view);\n\n    switch($easyadmin['view']) {\n        case 'edit':\n            $formBuilder->remove('password');\n            break;\n        case 'password':\n            $attrs = $formBuilder->getAttributes();\n            $groups = $attrs['easyadmin_form_groups'];\n\n            array_pop($groups);\n\n            $formBuilder->setAttribute('easyadmin_form_groups', $groups);\n\n            foreach($formBuilder->all() as $field) {\n                if($field->getName() !== 'password' && $field->getName() !== 'username') {\n                    $formBuilder->remove($field->getName());\n                }\n            }\n    }\n\n    return $formBuilder;\n}\n\n```\nCan't tell it is a good approach.... Well, after using this, field data (which should be stored in easyadmin.field in Twig template) are not passed from easyadmin configuration file...\nFor \"edit\" action everything is fine :/.\nEDIT:\nOk, because JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Extension\\EasyAdminExtension is loading fields config from other place. It is based on action name. I don't know what to do now :).. Ok, the problem was in type with the backslash...\nwas: type: \\App\\ClassifiedsBundle\\Form\\Type\\ClassifiedsTypesType\nshould be type: App\\ClassifiedsBundle\\Form\\Type\\ClassifiedsTypesType. Do you think it can be a Symfony Forms bug? Maybe I should raport an issue in \"symfony/symfony\" repository?. It's used in Test/bootstrap.php while using run() method from Application. Line 53, for example.\nReference:\n\n/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:123\n\n(I think). Found this while dumping listeners list from Application dispatcher:\n\"console.exception\" => array:1 [\n        0 => array:1 [\n          0 => array:2 [\n            0 => Closure {#398\n              class: \"appTestDebugProjectContainer\"\n              this: appTestDebugProjectContainer {#148 \u202614}\n              file: \"/project_dir/var/cache/test/appTestDebugProjectContainer.php\"\n              line: \"942 to 944\"\n            }\n            1 => \"onException\"\n          ]\n        ]\n      ]\nAnd the only place where this listener is added is\n\nvendor/symfony/symfony/src/Symfony/Component/Console/Tests/ApplicationTest.php:1117\n\nWas searching the whole project for \"console.exception\" string and references for ConsoleEvents::EXCEPTION.\nI even commented mentioned part of code (from ApplicationTest file), removed all files from /var/cache/test and error still appears (with rebuilt files containing \"console.exception\" string).\nI think it all comes from Symfony core somehow. Any suggestions?. I end up with setting:\n<php>\n    <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"weak\" />\n</php>\nin the PhpUnit configuration xml in my application. If there is any other way to remove those warnings, would be glad to learn about some details.. Yup! Turned SwiftmailerBundle off and voil\u00e0: no warnings appeared. Closing this issue then and I'm moving with this problem to the symfony/swiftmailer-bundle. Thanks ;).. I know :). I know that I can define them in:\n- new form type with proper values inside configureOptions() method;\n- entity annotation or separate validation.yml file.\nJust asking if possible to define constraints inside EasyAdmin configuration files.. Would love to see have it implemented in EasyAdmin ;).. Would love to see have it implemented in EasyAdmin ;).. @javiereguiluz Maybe implementation is not a such nightmare at all :). I've got something similar already implemented and it's mostly done with Doctrine relation \"many to one\" (for example: Article entity has relation with many ArticleLocale entities).\n@iluuu1994 Do you have such implementation or does it need to be done?. Don't know how to do it, for now :/. If you could help me with that and write some instructions \"how to\", then maybe I could manage it.. Don't know how to do it, for now :/. If you could help me with that and write some instructions \"how to\", then maybe I could manage it.. @maximecolin Here you go:\nhttps://github.com/javiereguiluz/EasyAdminBundle/pull/1991. I'm not a fan of configuration by annotations. Those things, in my opinion, should be stored in separate config file(s).. You can add \"show\" link with, for example, this:\nyaml\neasy_admin:\n    entities:\n        Article:\n            list:\n                actions:\n                    - { name: show, icon: eye, label: 'Details' }\nIf you want to make the id column linked, you must create custom template in which you are using<a> tag to link it up.. You can add \"show\" link with, for example, this:\nyaml\neasy_admin:\n    entities:\n        Article:\n            list:\n                actions:\n                    - { name: show, icon: eye, label: 'Details' }\nIf you want to make the id column linked, you must create custom template in which you are using<a> tag to link it up.. All right then :). Removed that extra CSS class. Forgot about possibility to define own CSS classes inside configuration.. You're right. Merged your changes. Thanks for help! :). Great news! At last new major version :). And can't wait for \"form tabs\" to be implemented.. Maybe it would be even better to remove it completely from the configuration (the color_scheme keyword)? Or do you plan to use it in the future?. Which EasyAdmin version you're using? Your code is working on 1.16.9.. Not by any configuration, from what I know. Nevertheless, you can use this template to write your custom menu items inside user_menu_dropdown twig block. After that, you must only change default layout template for EasyAdmin to your own.. Not by any configuration, from what I know. Nevertheless, you can use this template to write your custom menu items inside user_menu_dropdown twig block. After that, you must only change default layout template for EasyAdmin to your own.. Because it's not implemented :).. For that moment, EasyAdmin does not support multiple roles which would restrict access to particular entity types. You can only make, for example, ROLE_ADMIN limitation on particular path (i.e. /admin). Nevertheless, you can implement that functionality by yourself. Code is nice and flexible so it's not hard to do it ;).. This error occurs because EasyAdmin twig templates are reffering to easyadmin variable inside their content. If I remember correctly, that variable is defined by form extension (EasyAdminExtension) only when actual Request is having proper \"easyadmin\" attribute.\nI assume, that your form is used on other than EasyAdmin page, so your requests does not have proper attribute which allows to add easyadmin variable to FormView.\nFor more details please check code of EasyAdminExtension class.. This error occurs because EasyAdmin twig templates are reffering to easyadmin variable inside their content. If I remember correctly, that variable is defined by form extension (EasyAdminExtension) only when actual Request is having proper \"easyadmin\" attribute.\nI assume, that your form is used on other than EasyAdmin page, so your requests does not have proper attribute which allows to add easyadmin variable to FormView.\nFor more details please check code of EasyAdminExtension class.. I think that you could implement your own extension similar to the EasyAdminExtension. It must just fill proper information in $view->vars['easyadmin']. This could be the solution, but might not be so easy. Don't know (for now) if other way exists.. I think that you could implement your own extension similar to the EasyAdminExtension. It must just fill proper information in $view->vars['easyadmin']. This could be the solution, but might not be so easy. Don't know (for now) if other way exists.. @TomasVotruba \nI think, that you can close this issue :). If you would have any other questions regarding this topic, just re-open it ;).. The \"Znaleziono wynik\u00f3w 22\" option do not sound too good in polish ;). If we want really use this type of words, lets change it on: \"Znaleziono wynik\u00f3w: 22\" ;).. The \"Znaleziono wynik\u00f3w 22\" option do not sound too good in polish ;). If we want really use this type of words, lets change it on: \"Znaleziono wynik\u00f3w: 22\" ;).. @dominikhajduk \nI think it'll be ok, if before the number colon will be added. So \"Liczba wynik\u00f3w: 22\", for example. And what I think, this is the best option. Or maybe \"Ilo\u015b\u0107 wynik\u00f3w: 22\", because \"ilo\u015b\u0107\" is about amount, and \"number\" is just a \"number\" :).. @dominikhajduk \nI think it'll be ok, if before the number colon will be added. So \"Liczba wynik\u00f3w: 22\", for example. And what I think, this is the best option. Or maybe \"Ilo\u015b\u0107 wynik\u00f3w: 22\", because \"ilo\u015b\u0107\" is about amount, and \"number\" is just a \"number\" :).. Some other options:\n\nWyjd\u017a z trybu na\u015bladowania\nWr\u00f3\u0107 do swojego u\u017cytkownika\n\nOption proposed by @partikus Wy\u0142\u0105cz maskowanie is also nice. It would be nice to make it simple like: \"Wy\u0142\u0105cz X\", \"Opu\u015b\u0107 tryb X\".. Some other options:\n\nWyjd\u017a z trybu na\u015bladowania\nWr\u00f3\u0107 do swojego u\u017cytkownika\n\nOption proposed by @partikus Wy\u0142\u0105cz maskowanie is also nice. It would be nice to make it simple like: \"Wy\u0142\u0105cz X\", \"Opu\u015b\u0107 tryb X\".. There is another use of help-block class in show.html.twig. I think it should be changed.\nAnd while using new \"Help\" text, we also should remove some code which is styling this CSS class in forms.scss file (because it will be used no more).. There is another use of help-block class in show.html.twig. I think it should be changed.\nAnd while using new \"Help\" text, we also should remove some code which is styling this CSS class in forms.scss file (because it will be used no more).. ",
    "zergu": "@Pierstoval Yeah, I know, but I meant automatically generated filters here. Like this one for dates:\nhttps://raw.githubusercontent.com/silentsokolov/django-admin-rangefilter/master/docs/images/screenshot.png\nThis could appear from config like that:\nentites:\n  Item:\n     filter:\n       - created_at\n. ",
    "comolo": "Perfect, thank you @yceruto ! :+1:\n. ",
    "shakaran": "@javiereguiluz Sorry for delay, I was astonished too with this strange error. Probably I get this caused because I define the method in config.yml and I don't implement the code in the AdminController, but in some way it gets autogenerated. I think that the solution checking is_callable is better than the mine. Thanks to everyone for the great support.\n. And if I use a custom action like 'delete_order' it works displaying the icon to remove, but in that case I will have to implement the deletion in a custom method for that custom action\n- { name: 'delete_order', icon: 'remove', label: 'Delete the order' }\n. @Pierstoval thanks for your explanation. Well, a bit tedious to implement every delete/remove action in list view, but I understood your explanation that it is building following the HTTP verbs.\nI don't know if it is a good principle to apply in this case, since my client reports that he needs make more clicks just for delete a object (going to show the object and then delete, instead delete it directly from list view).\nBut well, I think that I will apply a general custom action generic as your purpose for all the objects, thanks for your support :) Closing this issue then.\n. Please consider reopen this and don't leave it for months/years in the bag of \"future ideas to implement\".\nIn my opinion this feature is a must and it should have more priority. I have clients complaining about the way that datetime fields are displayed and I have to hardcode every field with datetime creating the custom code for each field.\nPlease put more priority at this. A simple addition like select2 as data-widget=\"datepicker\" will solve all this issue quickly.\nFor example I am using in edit.html.twig template a simple way to add this like the select2:\ntwig\n {{ include('@EasyAdmin/default/includes/_select2_widget.html.twig') }}\nBut for datepicker:\ntwig\n {{ include('@EasyAdmin/default/includes/_datepicker_widget.html.twig') }}\nThis is the template that I use:\n```twig\nResources/default/includes/_datepicker_widget.html.twig\n{% set datepicker_locales = ['ar', 'az', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'en', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'is', 'it', 'ja', 'km', 'ko', 'lt', 'lv', 'mk', 'ms', 'nb', 'nl', 'pl', 'pt-BR', 'pt', 'ro', 'ru', 'sk', 'sr-Cyrl', 'sr', 'sv', 'th', 'tr', 'uk', 'vi', 'zh-CN', 'zh-TW'] %}\n{% set _app_language = app.request.locale|split('-')|first|split('')|first %}\n{% set _datepicker_locale = app.request.locale in _datepicker_locales\n    ? app.request.locale\n    : _app_language in _datepicker_locales ? _app_language : 'en'\n%}\n\n\n\n\n\n$(function() {\n    // datepicker widget is only enabled for the <input> elements which\n    // explicitly ask for it\n    $('#main').find('form input[data-widget=\"datepicker\"]').datepicker({\n        language: '{{ _datepicker_locale }}',\n\n        /* Other options that could be added via parameters\n        locale: {{ _datepicker_locale }},\n        format: \"mm/dd/yyyy\",\n        clearBtn: true,\n        autoclose: true,\n        todayBtn: 'true',\n        todayHighlight: 'true',\n        weekStart: 1,\n        */\n    });\n});\n\n```\nThe as suggested above, I have a type form defined (this is using spanish format, it should take from parameters the locale format date and others from easyadmin:\n```php\n<?php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType;\nclass DatePickerType extends AbstractType\n{\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults(array('widget' => 'single_text'\n                                    ,'format' => 'dd/MM/yyyy'\n                                    ,'attr' => [\n                                        'class'=>'datepicker',\n                                        'data-dateformat'=>'dd/mm/yy',\n                                        'data-widget' => \"datepicker\",\n                                        'data-provide' => \"datepicker\",\n                                                    ]\n                                    )\n                              );\n    }\npublic function getParent()\n{\n    return DateType::class;\n}\n\n}     \n```\nThen in easyadmin.yml I define the field like:\nyaml\n- { property: 'creationDate', label: 'Creation date', type: 'AppBundle\\Form\\Type\\DatePickerType', format: 'd-m-Y h:i:s' }`\nNote that format is used for display as text in lis option or as string (not edit which it will be displayed as datepicker). @Pierstoval following your reasoning, why is added as default select2 widget if the \"select\" native html is built from browsers already? It is the same reason like easyadmin needs a better widget for dates.\nThe native html5 datepicker don't offer probably the amount of customization and integration that bootstrap datepicker (at least without a lot effort). Plus, I think that this simple feature don't overhead at all the bundle unless that you have a form with 100 datepickers, which is pretty weird.\nAbout the DateType, I could customize as much I can of course, the thing is provide by default in this automatic entity generator, because when someone use this easyadmin panel, at least in my opinion, they expect a nice gui and easy and don't override or built a lot things just for display a datepicker.. My 2 cent. Be careful when you override preRemoveEntity method, since all the entities each time that one entity will be removed, it will execute the method, so it is more proper check if the entity is a instance desired of your current User class, for example:\n```\n    public function preRemoveEntity($entity)\n    {\n        // With this condition we avoid call to hasRole in \n        // other different entities which could not have that method\n        if($entity instanceof User)\n        {\n            if ($entity->hasRole('ROLE_ADMIN')) {\n                $this->addFlash('error', 'You cannot delete admin users.');\n            return $this->redirectToRoute('easyadmin', ['action' => 'list', 'entity' => $this->entity['name']]);\n        }\n    }\n}\n\n```\n. My 2 cent. Be careful when you override preRemoveEntity method, since all the entities each time that one entity will be removed, it will execute the method, so it is more proper check if the entity is a instance desired of your current User class, for example:\n```\n    public function preRemoveEntity($entity)\n    {\n        // With this condition we avoid call to hasRole in \n        // other different entities which could not have that method\n        if($entity instanceof User)\n        {\n            if ($entity->hasRole('ROLE_ADMIN')) {\n                $this->addFlash('error', 'You cannot delete admin users.');\n            return $this->redirectToRoute('easyadmin', ['action' => 'list', 'entity' => $this->entity['name']]);\n        }\n    }\n}\n\n```\n. @jansabat just trying to help you to improve your bug/feature issue.\nThe changes that you made are on:\nhttps://github.com/javiereguiluz/EasyAdminBundle/compare/master...jansabat:button_title\nI suggest you update your branch with upstream and make a Pull Request. That could help to @javiereguiluz to merge more quickly this or modify if needed when he checks again this issue\n. @jansabat just trying to help you to improve your bug/feature issue.\nThe changes that you made are on:\nhttps://github.com/javiereguiluz/EasyAdminBundle/compare/master...jansabat:button_title\nI suggest you update your branch with upstream and make a Pull Request. That could help to @javiereguiluz to merge more quickly this or modify if needed when he checks again this issue\n. @annaos I am not sure if a missing dynamic method for 'postPersistEntity' is a way considered by the original autor.\nIt makes sense that in the part that you mention he can include a new dynamic method after the persist of the entity.\nIf you read the documentation regarding to this topic he doesn't mention in any place the support of postPersist dynamic method, probably because it could be reached in other way (I am not expert here, so only trying to guess). But indeed, if this doesn't exist or it cannot be achieved in other way, it could be a good feature trigger that method after persist, since you can probably make some final checks or tweaks to the entity or trigger other bonds with other entities as reaction.\nLets see if @javiereguiluz could check this old issue briefly and give us his opinion when he has some minutes.\n. @annaos I am not sure if a missing dynamic method for 'postPersistEntity' is a way considered by the original autor.\nIt makes sense that in the part that you mention he can include a new dynamic method after the persist of the entity.\nIf you read the documentation regarding to this topic he doesn't mention in any place the support of postPersist dynamic method, probably because it could be reached in other way (I am not expert here, so only trying to guess). But indeed, if this doesn't exist or it cannot be achieved in other way, it could be a good feature trigger that method after persist, since you can probably make some final checks or tweaks to the entity or trigger other bonds with other entities as reaction.\nLets see if @javiereguiluz could check this old issue briefly and give us his opinion when he has some minutes.\n. @javiereguiluz This issue could be actually closed since it is already merged in doc? I know that you are pretty busy, just trying to help you to clean the issues list and PR merges, so you can release quickly and often.\n. @javiereguiluz This issue could be actually closed since it is already merged in doc? I know that you are pretty busy, just trying to help you to clean the issues list and PR merges, so you can release quickly and often.\n. @javiereguiluz this issue is good to close for clean the backlog IMHO. Probably it is a good idea, add a small note in docs explaining that it is needed set the fallback locale for generate the translations strings.\n. @javiereguiluz your modification LGTM and shows the docs more compact, no prob. Thanks for the merge!\n. @javiereguiluz your modification LGTM and shows the docs more compact, no prob. Thanks for the merge!\n. @javiereguiluz +1 for this. It seems a quick merge, do you have any free min to review it? Thanks\n. @vrobic If I understand you well, you are proposing redirect the actions after they finish. Something like:\nedit => list change to edit => edit\nnew => list change to new => edit\ndelete => list change to delete => easy_admin_bundle\nshow => Don't apply\nlist => Don't apply\nI think that this should be implemented in a general way, with a custom param like \"redirect\" which is just triggered to a custom path route or string with the absolute/relative route, having as \"special\" words \"new\", \"edit\", \"delete\".\nFor example:\nCountry:\n    title: \"Countries in the world\"\n    edit:\n        redirect: 'edit'  # Could be 'edit', 'new', 'delete' or path like 'easy_admin_bundle' or 'myroute/someaction'\n    new:\n        redirect: 'edit'\n    delete:\n        redirect: 'easy_admin_bundle'\nI think that PR are always welcome in case that you want to send it  \n. @vrobic If I understand you well, you are proposing redirect the actions after they finish. Something like:\nedit => list change to edit => edit\nnew => list change to new => edit\ndelete => list change to delete => easy_admin_bundle\nshow => Don't apply\nlist => Don't apply\nI think that this should be implemented in a general way, with a custom param like \"redirect\" which is just triggered to a custom path route or string with the absolute/relative route, having as \"special\" words \"new\", \"edit\", \"delete\".\nFor example:\nCountry:\n    title: \"Countries in the world\"\n    edit:\n        redirect: 'edit'  # Could be 'edit', 'new', 'delete' or path like 'easy_admin_bundle' or 'myroute/someaction'\n    new:\n        redirect: 'edit'\n    delete:\n        redirect: 'easy_admin_bundle'\nI think that PR are always welcome in case that you want to send it  \n. @nexuslinkservices Thanks! LGTM and very elegant resolved ;) I would like see this merged on master soon ;)\n. @javiereguiluz ping you here as BUMP the PR, so maybe you can merge to master and make another quick and great release this week ;)\n. @javiereguiluz ping you here as BUMP the PR, so maybe you can merge to master and make another quick and great release this week ;)\n. @javiereguiluz any chance that this PR could be merged to master in the next days? There are something to modify it or wrong for avoid the merge?\n. @javiereguiluz any chance that this PR could be merged to master in the next days? There are something to modify it or wrong for avoid the merge?\n. @javiereguiluz I am waiting for a merge almost 6 months here (it seems a quick fix), please could you give at least your impressions about if this is ok to merge?. @javiereguiluz almost a year birthday for merge or review this Pull Request. I know that you are busy with Symfony 4, but yeah, a bit dissapointing.. @javiereguiluz ok, it seems a good idea wait a bit, you have more knowledge about internals ;)\n. @javiereguiluz ok, it seems a good idea wait a bit, you have more knowledge about internals ;)\n. @javiereguiluz Yep, the composer PHP versions stats  still shows pretty bad numbers, but it will do more and more years probably.\nif you watch or take other stats like the w3techs stats still will show you more misleading numbers with PHP 5 versions (according to that, you are not giving support for 5.0, 5.1, 5.2 which sum around 10% PHP servers, and yes 5.3 will be around 25% additional).\nIt is true that a lot production servers will keep PHP 5.3, but if still everybody is giving support, that people will stay years and years using it, because they are not forced to new move. They are using even unsecure software versions which is really bad for final clients data, so I think that it is a error keep maintaining so long the support. \nEven if you want keep the support, they are probably not upgrading to latest versions of EasyBundle, so why don't release a 1.2 version or so, where you can use a proper version of php? Thats because I mention \"At least consider this for future versions of EasyBundle.\" before to close it. But you are the owner of the project, you have the final decision of course.\n. @javiereguiluz Yep, the composer PHP versions stats  still shows pretty bad numbers, but it will do more and more years probably.\nif you watch or take other stats like the w3techs stats still will show you more misleading numbers with PHP 5 versions (according to that, you are not giving support for 5.0, 5.1, 5.2 which sum around 10% PHP servers, and yes 5.3 will be around 25% additional).\nIt is true that a lot production servers will keep PHP 5.3, but if still everybody is giving support, that people will stay years and years using it, because they are not forced to new move. They are using even unsecure software versions which is really bad for final clients data, so I think that it is a error keep maintaining so long the support. \nEven if you want keep the support, they are probably not upgrading to latest versions of EasyBundle, so why don't release a 1.2 version or so, where you can use a proper version of php? Thats because I mention \"At least consider this for future versions of EasyBundle.\" before to close it. But you are the owner of the project, you have the final decision of course.\n. I figure out how implement a first stage of this feature:\nIn the default/edit.html.twig and default/show.html.twig I am using this custom code for the block entity_form which adds a save and delete button at beggining of the form (very useful for long forms, so you don't have to scroll to the end of page to save) and I add the Next/Previous based in the id. This could fail in next/previous if the id don't exist (so it should be properly fetch via doctrine repository entity getting the previous id to the record and next id to the record), but an initial implementation works fine to me because when the id doesn't exist it will show a 404 with the entity not found\n```twig\n{% set _paginator_request_parameters = _request_parameters|merge({'referer': null}) %}\n{% block entity_form %}\n\n\n\n\n                        {# the 'save' action is hardcoded for the 'edit' and 'new' views #}\n                        \n {{ 'action.save'|trans(_trans_parameters, _translation_domain) }}\n                        \n                    {{\n                        form(delete_form, {\n                            action: delete_form.vars.action ~ '&referer=' ~ referer,\n                            method: 'DELETE',\n                            attr: { id: 'delete-form', style: 'display: inline-block' }\n                        })\n                    }}\n\n                    <div id=\"modal-delete\" class=\"modal fade\">\n                        <div class=\"modal-dialog\">\n                            <div class=\"modal-content\">\n                                <div class=\"modal-body\">\n                                    <h4>{{ 'delete_modal.title'|trans(_trans_parameters, 'EasyAdminBundle') }}</h4>\n                                    <p>{{ 'delete_modal.content'|trans(_trans_parameters, 'EasyAdminBundle') }}</p>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn\">\n                                        {{ 'action.cancel'|trans(_trans_parameters, _translation_domain) }}\n                                    </button>\n\n                                    {% if easyadmin_action_is_enabled(view, 'delete', _entity_config.name) %}\n                                        {% set _delete_action = easyadmin_get_action(view, 'delete', _entity_config.name) %}\n                                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-danger\" id=\"modal-delete-button\" formtarget=\"{{ _delete_action.target }}\">\n                                            {% if _delete_action.icon %}<i class=\"fa fa-{{ _delete_action.icon }}\"></i>{% endif %}\n                                            {{ 'delete_modal.action'|trans(_trans_parameters, 'EasyAdminBundle') }}\n                                        </button>\n                                    {% endif %}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n Previous\n                        \n\n\n\n                            Next \n\n\n\n\n\n\n    {{ form(form) }}\n{% endblock entity_form %}\n\n```. @gregoirepaqueron I know, but how to test that from the twig template? Probably it should be needed make that from the controller or the dinamyc method (in this case for edit and new actions). @javiereguiluz nice to add in master even with feature freeze. It only affects to README :pray: . @javiereguiluz I detect how is raised. A bad configured manyToOne relation, produce that the owner side of the association fails. The real error cames from /vendor/doctrine/orm/lib/Doctrine/ORM/PersistentCollection.php\nFrom the part:\nphp\nforeach ($this->collection as $element) {\n                $uow->scheduleOrphanRemoval($element);\n            }\nSo it seems a false positive, because Doctrine raise an exception that makes twig fails and catch wrongly the traceback. This is produced because the $this->collection was not initialized in consecuence of bad especification in the orm spec file.\nAfter fix the association in the orm spec, the error is never raised. It is a problem rely in Doctrine when they always expect that foreach are not empty and they don't make checks, also they don't check the input data or conditions that could raise this. So I think that this is not a bug for EasyAdmin then. Thanks for spend a bit of time on this ;) I would wish that you could spent a little more of time in other issues or PR that I have opened (at least for push in the 2.0 branch if right now the project is on feature freeze). @jdecool you have some typos in the code around \"datetimetz_immuable\" (missing t). @jdecool you have some typos in the code around \"datetimetz_immuable\" (missing t). ",
    "pvdleek": "Cool thanks!\n. https://github.com/javiereguiluz/EasyAdminBundle/pull/632\n. ",
    "helios-ag": "Thank you @javiereguiluz !\n. It depends, for example you send patch against docs, and docs was updated by someone else PR.\n. Will do :)\n. I think squashing commits is useful for a lot of them (commits), something like more than 3, but I like to hear maintainer opinion here.\n. ",
    "Jean-PaulvHouten": "I encountered the exact same problem since a day or so, not sure what happened suddenly since it accured in a not-very-often used project.\nThe problem is, your solution using select2.full.min.js isn't an option for me because I do not have this js file.\n. @reypm Thank you I finally found a good copy, once I copied it all my bugs just flew away :dancer: \n. ",
    "pribeirojtm": "Sorry for the question here, but can you tell me the difference between the select2.full.min.js and the select2.min.js ? Which file should I use? \nThanks. Thank you @reypm . ",
    "barhoumio": "I know this method to customize the search (the doctrine query) but in my case i have the  __toString() method in user entity:\njavascript\n    public function __toString()\n    {\n        return (string) $this->getId();\n    }\nSo,how i can used it in my case to filter photo with user and override change the method in AdminController.php , juste add another condition elseif(manyToOne Condition or __tostring condition ){\n                 //some code \n           }\n``` javascript\n    /\n     * Creates Query Builder instance for search query.\n     \n     * @param string $entityClass\n     * @param string $searchQuery\n     * @param array  $searchableFields\n     \n     * @return QueryBuilder The Query Builder instance\n     */\n    protected function createSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields)\n    {\n        $databaseIsPostgreSql = $this->isPostgreSqlUsedByEntity($entityClass);\n        $queryBuilder = $this->em->createQueryBuilder()->select('entity')->from($entityClass, 'entity');\n    $queryConditions = $queryBuilder->expr()->orX();\n    $queryParameters = array();\n    foreach ($searchableFields as $name => $metadata) {\n        $isNumericField = in_array($metadata['dataType'], array('integer', 'number', 'smallint', 'bigint', 'decimal', 'float'));\n        $isTextField = in_array($metadata['dataType'], array('string', 'text', 'guid'));\n\n        if (is_numeric($searchQuery) && $isNumericField) {\n            $queryConditions->add(sprintf('entity.%s = :exact_query', $name));\n            $queryParameters['exact_query'] = 0 + $searchQuery; // adding '0' turns the string into a numeric value\n        } elseif ($isTextField) {\n            $queryConditions->add(sprintf('entity.%s LIKE :fuzzy_query', $name));\n            $queryParameters['fuzzy_query'] = '%'.$searchQuery.'%';\n        } \n        elseif(manyToOne Condition or __tostring condition ){\n             //some code \n       }\n        else {\n            // PostgreSQL doesn't allow to compare string values with non-string columns (e.g. 'id')\n            if ($databaseIsPostgreSql) {\n                continue;\n            }\n\n            $queryConditions->add(sprintf('entity.%s IN (:words)', $name));\n            $queryParameters['words'] = explode(' ', $searchQuery);\n        }\n    }\n\n    $queryBuilder->add('where', $queryConditions)->setParameters($queryParameters);\n\n    return $queryBuilder;\n}\n\n```\nThanks a lot :+1: \n. ",
    "safaksaylam": "Alternative solution:\npublic function __construct($name = null, array $roles = array())\n    {\n        parent::__construct($name, $roles);\n    }\n$name = null is works well.. ",
    "LogansUA": "@javiereguiluz thank you too for this amazing bundle, finally normal alternative to SonataAdminBundle.\n. ",
    "CruzyCruz": "It's clear. \nThank you.\n. It's clear. \nThank you.\n. @Pierstoval\nThanks.\nI'll try this command before beginning with EasyAdmin.\n. @Pierstoval\nThanks.\nI'll try this command before beginning with EasyAdmin.\n. @ktrzos \nCan you precise what you want to achieve ? Do you want to use collection field type in the case of Many-To-Many or One-To-Many associations with add / delete buttons ? In this case it is already implemented in EasyAdminBundle with allow_add and allow_delete options set to true by default (+ JS).\nI give you an example for a One-To-Many association : Winemaker (1) to (*) WinemakerDomain \n``` yaml\nadmin.yml\neasy_admin:\n    entities:\n        Winemaker:\n            class : FBN\\GuideBundle\\Entity\\Winemaker\n            form:\n                fields:\n                    - 'name'\n                    - 'author'\n                    - 'description'\n                    - { property: 'image', type: 'FBN\\GuideBundle\\Form\\ImageWinemakerType' }\n                    # by_reference : false => Needed to ensure that addWinemakerDomain() and removeWinemakerDomain() will be called during the flush.\n                    # See (last lines) : http://symfony.com/doc/master/reference/forms/types/collection.html#by-reference\n                    - { property: 'winemakerDomain', type: 'collection', type_options: { entry_type: 'FBN\\GuideBundle\\Form\\WinemakerDomainType', by_reference: false } }\n                    - { property: 'publication', type_options: { required: false } }\n```\n. @ktrzos \nHere is the same example but with more details (only what is necessary for your case). One thing important : you have to make the association One-To-Many bidirectionnal.\n``` yaml\nadmin.yml\neasy_admin:\n    entities:\n        Winemaker:\n            class : FBN\\GuideBundle\\Entity\\Winemaker\n            form:\n                fields:\n                    # by_reference : false => Needed to ensure that addWinemakerDomain() and removeWinemakerDomain() will be called during the flush.\n                    # See (last lines) : http://symfony.com/doc/master/reference/forms/types/collection.html#by-reference\n                    - { property: 'winemakerDomain', type: 'collection', type_options: { entry_type: 'FBN\\GuideBundle\\Form\\WinemakerDomainType', by_reference: false } }\n```\n``` php\n// Winemaker.php\n<?php\nnamespace FBN\\GuideBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\n/\n * Winemaker.\n \n * @ORM\\Table(name=\"winemaker\")\n * @ORM\\Entity(repositoryClass=\"FBN\\GuideBundle\\Entity\\WinemakerRepository\")\n /\nclass Winemaker extends Article\n{\n    /\n   * @ORM\\OneToMany(targetEntity=\"FBN\\GuideBundle\\Entity\\WinemakerDomain\", mappedBy=\"winemaker\", cascade={\"persist\",\"remove\"}, orphanRemoval=true)\n   */\n  private $winemakerDomain;\n/**\n * @var int\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n\n/**\n * Constructor.\n */\npublic function __construct()\n{\n    parent::__construct();\n    $this->winemakerDomain = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n}\n\n/**\n * Get id.\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Add winemakerDomain.\n *\n * @param \\FBN\\GuideBundle\\Entity\\WinemakerDomain $winemakerDomain\n *\n * @return Winemaker\n */\npublic function addWinemakerDomain(\\FBN\\GuideBundle\\Entity\\WinemakerDomain $winemakerDomain)\n{\n    $this->winemakerDomain[] = $winemakerDomain;\n    $winemakerDomain->setWinemaker($this);\n\n    return $this;\n}\n\n/**\n * Remove winemakerDomain.\n *\n * @param \\FBN\\GuideBundle\\Entity\\WinemakerDomain $winemakerDomain\n */\npublic function removeWinemakerDomain(\\FBN\\GuideBundle\\Entity\\WinemakerDomain $winemakerDomain)\n{\n    $this->winemakerDomain->removeElement($winemakerDomain);\n}\n\n/**\n * Get winemakerDomain.\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getWinemakerDomain()\n{\n    return $this->winemakerDomain;\n}\n\n}\n```\n``` php\n// WinemakerDomain.php\n<?php\nnamespace FBN\\GuideBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\n/\n * WinemakerDomain.\n \n * @ORM\\Table(name=\"winemakerdomain\")\n * @ORM\\Entity(repositoryClass=\"FBN\\GuideBundle\\Entity\\WinemakerDomainRepository\")\n * @Gedmo\\TranslationEntity(class=\"FBN\\GuideBundle\\Entity\\Translation\\WinemakerDomainTranslation\")\n/\nclass WinemakerDomain\n{\n    /\n     * @ORM\\ManyToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Winemaker\", inversedBy=\"winemakerDomain\")\n     * @ORM\\JoinColumn(nullable=false)\n     */\n    private $winemaker;\n/**\n * @var int\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * Get id.\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set winemaker.\n *\n * @param \\FBN\\GuideBundle\\Entity\\Winemaker $winemaker\n *\n * @return WinemakerDomain\n */\npublic function setWinemaker(\\FBN\\GuideBundle\\Entity\\Winemaker $winemaker)\n{\n    $this->winemaker = $winemaker;\n\n    return $this;\n}\n\n/**\n * Get winemaker.\n *\n * @return \\FBN\\GuideBundle\\Entity\\Winemaker\n */\npublic function getWinemaker()\n{\n    return $this->winemaker;\n}\n\n}\n```\n``` php\n// WinemakerDomainType.php\n<?php\nnamespace FBN\\GuideBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\nuse Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType;\nclass WinemakerDomainType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('winemakerArea', EntityType::class, array(\n                'class' => 'FBNGuideBundle:WinemakerArea',\n                'property' => 'area',\n                ))\n        ;\n    }\n/**\n * @param OptionsResolverInterface $resolver\n */\npublic function setDefaultOptions(OptionsResolverInterface $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'FBN\\GuideBundle\\Entity\\WinemakerDomain',\n    ));\n}\n\n/**\n * @return string\n */\npublic function getName()\n{\n    return 'fbn_guidebundle_winemakerdomain';\n}\n\n}\n```\n. @ktrzos \n1.\nI use Symfony 2.8 and I am not yet ready to upgrade to Symfony >= 3 as I have some deprecated code to modify  :blush:\n2.\n\nActually with what I see, no.\nwinemakerArea is a property of the WinemakerDomain entity.\nThe relation seems to be like this:\nWinemaker has one or more WinemakerDomain (OneToMany).\nA WinemakerDomain is associated to one single WinemakerArea (ManyToOne)\n\n@Pierstoval That's it.\nTo follow my own logic, WinemakerArea should be renamed in WinemakerDomainArea (on my todo list). Sorry but I gave you a reduced code for easier readablity and relation between  WinemakerDomain and WinemakerArea does not appear.\nHere is an extract from my doctrine entities associations visual representation if it can help you (consider only black associations):\n\n3.\n\nForm builder, which You have presented in WinemakerDomainType class, will create select input, am I right? With that solution I'm limited to select an option only from existing entities. \n\nThat's it. It's a list of predifined area.\n\nAs example, it won't be so good for multiple file uploading which creates new entities storing data about particular files.\n\nNo, what you are talking about is already shown in the example : in the Winemaker form, you can add or remove several WinemakerDomain and for each of them you can choose the correct area. I am at work but if you want I will make a screen capture tonight.\n. @ktrzos \nHere is a screen capture of what you should obtain (full example).\n\n. @ktrzos \n1)\nI suggest you have a look at this chapter of the documentation.\n2)\nIn Page entity, you forgot the @HasLifecycleCallbacks marker annotation on the entity class.\nRead this.\nI suggest that you install the StofDoctrineExtensionsBundle and use the timestampable extension to achieve this.\n. @ktrzos \nI'm glad I could help you  :blush:\n. @SebTM \nThank you for you help (I had also a look at #794).\nMy goal was to create embedded forms. So in case you don't want to represent relations with other entities using the __tostring() method of the related entity, but you prefer a form as it is a more ergonomic solution it is useful to access the form builder. \nHere is my implementation:\n1. Define the fields to be natively displayed by EasyAdmin\nadmin.yml\nyaml\neasy_admin:\n    entities:\n        Restaurant:\n            class : FBN\\GuideBundle\\Entity\\Restaurant\n            form:\n                fields:\n                    - 'name'\n                    - 'author'\n                    - 'description'\n                    - 'restaurateur'\n                    - 'openingHours'\n                    - 'tel'\n                    - 'site'\n                    - 'href'\n                    - 'restaurantPrice' # ManyToOne\n                    - 'restaurantStyle' # ManyToMany\n                    - 'restaurantBonus' # ManyToMany\n                    #- 'image' # OneToOne\n                    #- 'coordinates' # OneToOne\n2. Create your custom form types\nImageRestaurantType\n``` php\nnamespace FBN\\GuideBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\nclass ImageRestaurantType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('legend', 'text')\n            ->add('file', 'vich_image', array(\n                'required' => false,\n                'allow_delete' => true, // not mandatory, default is true\n                'download_link' => true, // not mandatory, default is true\n                ))\n        ;\n    }\n/**\n * @param OptionsResolverInterface $resolver\n */\npublic function setDefaultOptions(OptionsResolverInterface $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'FBN\\GuideBundle\\Entity\\ImageRestaurant',\n    ));\n}\n\n/**\n * @return string\n */\npublic function getName()\n{\n    return 'fbn_guidebundle_imagerestaurant';\n}\n\n}\n```\nCoordinatesType\nphp\n\\\\...\n3. Extends default AdminController\n``` php\nnamespace FBN\\GuideBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse FBN\\GuideBundle\\Form\\ImageRestaurantType;\nuse FBN\\GuideBundle\\Form\\CoordinatesType;\nclass AdminController extends BaseAdminController\n{\n    public function createRestaurantEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    $formBuilder\n        ->add('image', ImageRestaurantType::class)\n        ->add('coordinates', CoordinatesType::class)\n    ;\n\n    return $formBuilder;\n}\n\n}\n```\n. @Pierstoval \nThank you. I didn't realize it could be achieved this way.\nI suppose this is what the doc suggests in the chapter Customize the Properties Appearance (section type)...\n. @javiereguiluz \nI susbcribed to this post a long time ago, and since, I had to face the same issue. So if it can help here is my solution (used also for plainPassword field with FOSUserBundle integration)\nIf I understand, the problem is only on client side. So, depending on the view (new or edit), the imageFile property should be required or not. Actually, this can be solved by fully defining new and edit view and modifying required type option for imageFile property. But thanks to PR #1341 that should be merged soon (thank you Javier), this could be done:\nyml\nform:\n    #....\nnew:\n    fields:\n        - { property: 'imageFile', type: 'vich_image', type_options: { required: true} }\nedit:\n    fields:\n        - { property: 'imageFile', type: 'vich_image', type_options: { required: false} }\nI think there is no bug.\nPS : imageFile property is not a mapped field, so using @ORM\\JoinColumn(nullable=true) won't have any impact on database side ?\n. @javiereguiluz \nI susbcribed to this post a long time ago, and since, I had to face the same issue. So if it can help here is my solution (used also for plainPassword field with FOSUserBundle integration)\nIf I understand, the problem is only on client side. So, depending on the view (new or edit), the imageFile property should be required or not. Actually, this can be solved by fully defining new and edit view and modifying required type option for imageFile property. But thanks to PR #1341 that should be merged soon (thank you Javier), this could be done:\nyml\nform:\n    #....\nnew:\n    fields:\n        - { property: 'imageFile', type: 'vich_image', type_options: { required: true} }\nedit:\n    fields:\n        - { property: 'imageFile', type: 'vich_image', type_options: { required: false} }\nI think there is no bug.\nPS : imageFile property is not a mapped field, so using @ORM\\JoinColumn(nullable=true) won't have any impact on database side ?\n. @laurent-bientz \nDid you try to disable the HTML validation for edition (type_options: { required: false})? In this case and using a classical assertion on photoFile property (without Expression), does the validation still fail ?\nIn my case it works : I can edit my main entity without having to re-upload an image (I have a dedicated Image entity with a OneToOne relationship with my main entity).\n\nand don't forget to disable the allow_delete on the field, cause nonsense to allow delete on a non-nullable field:\n\nI agree, I did the same thing.\n. @laurent-bientz \nYou are right. I forgot a little something. In my case, with a OneToOne relationship, I have to add at relationship level (i.e on the image property of my main entity) anAssert\\NotNull() in addition to @Assert\\Valid(). So even without HTML validation, it won't be possible to record the data without having correctly filled the Image embedded form (and I don't need Assert\\NotBlank() on file property). But it's not an elegant solution. Moreover, the displayed error message is at the top of the page.\nI will consider your solution when I have time. I let you know soon.. @laurent-bientz \nI introduced your assertion to validate my images. It works perfectly. I think that this whole conversation gives a correct method for image validation when using VichUploader bundle. In my next comment I propose a summary in order to close this issue.. @javiereguiluz \nThanks to @laurent-bientz  and its solution for image validation, I propose that we close this issue (and remove the bug and unconfirmed labels).\nHere is a summary for image validation when the image is mandatory (non-nullable).\nConsidering the following entity (getters and setters are not given):\n```php\nnamespace Namespace\\Entity\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n/\n * @Vich\\Uploadable\n */\nclass MyEntity\n{\n    /\n     * @var File\n     \n     * @Vich\\UploadableField(mapping=\"images\", fileNameProperty=\"image\")\n     /\n    private $file;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"image\", type=\"string\", length=255)\n */\n private $image;\n\n}\n```\nConfig file + front validation :\nyml\nMyEntity:\n  class : Namespace\\Entity\\MyEntity\n  form:\n      #....\n  new:\n      fields:\n         # No image at entity creation so it is required.\n         # Image deletion at form level has to be disabled.\n          - { property: 'file', type: 'vich_image', type_options: { required: true, allow_delete: false} }\n  edit:\n      fields:\n          # An image has already been uploaded, image is not required.\n          # Image deletion at form level has to be disabled.\n          - { property: 'file', type: 'vich_image', type_options: { required: false, allow_delete: false} }\nBack validation:\n```php\nnamespace Namespace\\Entity\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n/\n * @Vich\\Uploadable\n */\nclass MyEntity\n{\n    /\n     * @var File\n     \n     * @Vich\\UploadableField(mapping=\"images\", fileNameProperty=\"image\")\n     * @Assert\\Expression(\"this.getFile() or this.getImage()\", message=\"admin.validation.image.upload\")\n     /\n    private $file;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"image\", type=\"string\", length=255)\n */\n private $image;\n\n}\n```\n. @rubengc\nFor inline code declared in <a></a> elements (onclick  attribute) I agree with you that it is not really nice.\nCan you explain me what is a bad practice ? \nIf I understand the feature #1073, a single file will replace all assets file (respectively for css and js) in the next release ?\nI am not experimented enough in web dev but there are tools (like assetic or others) to compile and minimize files when publishing assets ?\nCould you please develop the solution using body.edit-EntityName ? You mean that I have to check in my js code if the view corresponds to the one where I want to act ? This is something I have already considered but I thaught it would be preferable to avoid this (that's why I prefer to have a dedicated js file for the dedicated view).\n. @javiereguiluz \nThank you for your proposal. I understand that this feature would be really minor. \n. @ktrzos \nYou can install StofDoctrineExtensionsBundle and use translatable extension. This way you just have to change the locale to translate your contents.\n. @ktrzos \nNot natively.\nI think the solution linked by @mkalisz77 is a  good one.\n. @mkalisz77 \nIn this a2lix/TranslationFormBundle #187 (june 2015) you disccussed about the combination with Atlantic18/DoctrineExtensions translatable. This discussion concludes that it is not the rigth way. In EasyAdminBundle #865, the proposed solution is to combine a2lix/I18nDoctrineBundle with a2lix/TranslationFormBundle. But it appears that a2lix/I18nDoctrineBundle is not maintained anymore. a2lix/TranslationFormBundle has low activity but is still maintained.\nAs discussed in a2lix/TranslationFormBundle #187, two solutions are proposed:\n- KnpLabs/DoctrineBehaviors translatable with regular activity\n- Prezent/doctrine-translatable with null activity\nSo my conclusion is that the best combination should be : KnpLabs/DoctrineBehaviors translatable + a2lix/TranslationFormBundle\nWhat do you think about it ? Have you succeed with this kind of implementation in EasyAdminBundle ? If yes, could you please provide your method ?\n@ktrzos \nI would be interested by your solution when you have finished.\nActually I use Atlantic18/DoctrineExtensions translatable but I would consider to change for a more accurate solution if needed.\n. @mkalisz77 \nIn #865 it seems that abdielcs uses  a2lix/I18nDoctrineBundle and not KnpLabs/DoctrineBehaviors translatable.\nIf you succeed with the combination of a2lix/TranslationFormBundle with Atlantic18/DoctrineExtensions translatable let us know. It seems possible if you read that but discouraged if you read that.\n. @ktrzos \nI have no time to think about this in details. What you propose in your example is very close to Atlantic18/DoctrineExtensions personal-translations.\nWhy don't you try KnpLabs/DoctrineBehaviors  + a2lix/I18nDoctrineBundle ? Maybe this could work great ? For classic problem I prefer to us bundles developped and tested by the community.\nI develop actually my first website ever so I am not at a Symfony/Doctrine expert :smile:\n. @ktrzos \nThanks for sharing your solution.\nI already had this error, and in my case it was because there was a validation rule on an entity attribute but this field was not declared in EasAdmin config. But in your particular case, it seems that the form fields are generated on the fly and have not a direct correspondence with your entity attribute (\"content\").\n. @Eng3l \nI am not sure that this is the correct method to achieve your goal. What you are trying to do relates to Doctrine events.\nAs explained here, EasyAdminBundle wraps the Doctrine logic inside custom events that let you tweak the entity.\nIn your case you need to access the entity state before and after the modification. I don't know if it is possible with Easyadmin (maybe but I have never tried) but you can easily achieve this using Doctrine PreUpdate event and an associated listener/suscriber. Note that to create a log file it would be relevant to use the postUpdate event in combination with the preUpdate one (to be sure that everything is OK).\n. @Eng3l \nEasyAdminBundle is an interface between your entities and Doctrine. Doctrine events are totally relevants (I use many of them in combination with EasyAdmin).\nTo answer you question, I suppose because of this part of the editAction() method in AdminController:\n``` php\n        if ($editForm->isValid()) {\n            $this->dispatch(EasyAdminEvents::PRE_UPDATE, array('entity' => $entity));\n        $this->executeDynamicMethod('preUpdate<EntityName>Entity', array($entity));\n        $this->em->flush();\n\n        ...\n    }\n\n```\nAt this time, the preUpdateEntity() method receives the updated entity (with form data) as an argument and just before the PRE_UPDATE event is dispatched. So like for Doctrine events (getEntity() method), the PRE_UPDATE event gives you access to the updated entity but, unlike Doctrine (getEntityChangeSet() method), you don't have access to the previous values of the entity attributes (inside AdminController preUpdateEntity() method).\n. @Eng3l \nI agree that in my last post I did not explain  why when you get the entity from database using the entity manager you have the updated entity although flush has not been triggered.\nThanks to @javiereguiluz now I know.\nJust for information, the unit of work is also accesible during Doctrine onFlush event.\n. @Pablossoo \nI suggest you read #1076 and #959.\n. @revollat \nYou have to create a form type for Evtdate (let's say EvtdateType) and configure your backend like this:\nyml\n- { property: 'evtdates', type: 'collection', type_options: { entry_type: 'YourNameSpace\\EvtdateType', by_reference: false } }\nYou can read #851  to have a full example.\n. As the relation between EvtDate and Evenement is bidirectionnal, you have to adapt the setter in one of the two entities (each entity has to know to which entity it is linked). For example:\n``` php\n    /\n     * Add evtdate\n     \n     * @param \\AppBundle\\Entity\\Evtdateate $evtdate\n     \n     * @return Evenement\n     */\n    public function addEvtdate(\\AppBundle\\Entity\\Evtdate $evtdate)\n    {\n        $this->evtdates[] = $evtdate;\n        $evtdate->setEvenement($this); // Add this line\n    return $this;\n}\n\n``\n. @revollat Did it work ?\n. You can access full configuration in an extended [AdminController](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Controller/AdminController.php) using attribute$config($this->config`). ConfigManager is declared as a service so you can call it through the container. It is done in initialize() method.\nThen, you can define whatever you need in config file and access your custom configuration.\n. You can access full configuration in an extended AdminController using attribute $config ($this->config). ConfigManager is declared as a service so you can call it through the container. It is done in initialize() method.\nThen, you can define whatever you need in config file and access your custom configuration.\n. @ktrzos \nI have already asked for that : you can read issue #1088.\nIn my case I simply extend the entity template (new and edit) and I load custom assets.\n. @Yunyun548 \nYes it does because in #1312 I define both edit and new sections. Here, following the doc I thought I could override the property plainPassword without having to redefine other properties.\n. @Yunyun548 \nThose two issues are differents. One is for reporting that I am not able to override some specific options following doc instructions. The other one is for proposing an improvement of the documentation.\nI can try to create a PR for #1312 (doc improvement) but you will have to be indulgent as it will be my first PR :)\n. @javiereguiluz \nI understand. Effectively, array_replace_recursive() would allow the wished granularity.\n. Ok, it makes sense.\n. @yceruto \nThank you very much for your help.\nFor now, what I understand is that easyadmin custom attributes are added to request thanks to RequestPostInitializeListener and then easyadmin  custom attributes are injected to view rendering the form thanks to EasyAdminExtension. This line lets the possibility for field variable to be null.\nI'll wait for your expertise.\n. @javiereguiluz \nDo you plane to merge PR #1314 prepared by @yceruto ?\nIn this case I (or you) can close this issue ? \n. @javiereguiluz \nDo you plane to merge PR #1314 prepared by @yceruto ?\nIn this case I (or you) can close this issue ? \n. > When PR are merged, related issues are automatically close\nSorry for the question. I should have guessed this modus operandi. :)\n. > When PR are merged, related issues are automatically close\nSorry for the question. I should have guessed this modus operandi. :)\n. @yceruto \nThanks for your reactivity. I have tried with the following configuration:\nadmin.yml\nyml\neasy_admin:\n    entities:\n        Restaurant:\n            class : FBN\\GuideBundle\\Entity\\Restaurant\n            form:\n                fields:\n                    - { property: 'coordinates', type: 'FBN\\GuideBundle\\Form\\CoordinatesType', type_options: { required: true } }                    \n        CoordinatesFRCity:    \n            class : FBN\\GuideBundle\\Entity\\CoordinatesFRCity\nCoordinatesType.php\nphp\nclass CoordinatesType extends AbstractType\n{\n    /**\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('coordinatesFR', CoordinatesFRType::class)\n        ;\n    }\n}\nCoordinatesFRType.php\n``` php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType;\nclass CoordinatesFRType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('coordinatesFRCity', EasyAdminAutocompleteType::class, array(\n                'class' => 'FBNGuideBundle:CoordinatesFRCity',\n                ))\n        ;\n    }\n}\n```\nCoordinatesFRCity.php (entity)\nphp\nclass CoordinatesFRCity extends CoordinatesISOCity\n{\n    public function __toString()\n    {\n        return $this->city.' ('.$this->postCode.')';\n    }\n}\nThe InvalidArgumentException is thrown with an error (an argument is missing for the second placeholder %s):\nWarning: sprintf(): Too few arguments\n500 Internal Server Error - ContextErrorException\nwith\nStack Trace\nin vendor/javiereguiluz/easyadmin-bundle/Form/Type/EasyAdminAutocompleteType.php at line 93  -\n``` php\npublic function finishView(FormView $view, FormInterface $form, array $options)\n{\n    if (null === $config = $this->configManager->getEntityConfigByClass($options['class'])) {\n        throw new \\InvalidArgumentException(sprintf('The configuration of the \"%s\" entity is not available (this entity is used as the target of the \"%s\" autocomplete field).', $options['class']));\n}\n$view->vars['autocomplete_entity_name'] = $config['name'];\n```\nSo I think my configuration is not correct ?\n. @yceruto \nIt works like a charm :)\nDo you think it could be useful to improve the documentation to precise that, in case of use in embedded form:\n- it's mandatory that the entity related to the autocomplete field has to be managed by EasyAdmin\n- for that entity, the FQCN has to be used\nI hope this PR will be merged soon !\nThanks again.\n. I understand :)\n\nfor that entity, the FQCN has to be used\n\nI meant just in the embedded form (not in easy admin configuration even if it is also mandatory), to make work the autocomplete field as it is required by 'data_class' option (i.e not to make the same mistake as mine!). Thanks for this explanation.\n. I understand :)\n\nfor that entity, the FQCN has to be used\n\nI meant just in the embedded form (not in easy admin configuration even if it is also mandatory), to make work the autocomplete field as it is required by 'data_class' option (i.e not to make the same mistake as mine!). Thanks for this explanation.\n. To close the conversation and help, I propose the following addition (based on your example) to autocomplete section in 4-edit-new-configuration.md:\n\nIf used in embedded forms, the entity related to aucomplete field has also to be defined in configuration:\nyml\neasy_admin:\n    entities:\n        Category:\n            class: AppBundle\\Entity\\Category\nAnd in the embedded form type\nphp\n$builder->add('category', EasyAdminAutocompleteType::class, array('class' => Category::class));\nNote that the class option needs a FQCN (Category::class or AppBundle\\Entity\\Category).\n. To close the conversation and help, I propose the following addition (based on your example) to autocomplete section in 4-edit-new-configuration.md:\n\nIf used in embedded forms, the entity related to aucomplete field has also to be defined in configuration:\nyml\neasy_admin:\n    entities:\n        Category:\n            class: AppBundle\\Entity\\Category\nAnd in the embedded form type\nphp\n$builder->add('category', EasyAdminAutocompleteType::class, array('class' => Category::class));\nNote that the class option needs a FQCN (Category::class or AppBundle\\Entity\\Category).\n. Did you define 'pais' in easy admin configuration ? (see my example with 'category' above) . Could you try with this basic configuration ?\nyml\neasy_admin:\n    entities:\n     Pais:\n         class: AppBundle\\Entity\\Pais\nOther question : are you sure that you have loaded some fixtures for Pais entity ?. When you use a classical EntityType does it work ?. Sorry but I don't have any other ideas right now.. You don't use the built-in EasyAdmin edition page  ?. In this case be careful, you need the correct template fragment. Have a look at this.. @javiereguiluz Do you plane to introduce this plugin in EasyAdmin ? (for one of my entity, I had to use custom js to add the move up/down functionnality to my collections). This would be a nice addition :stuck_out_tongue:\n. @javiereguiluz \nThanks for your reactivity !\nHere is for the documentation. It is very clear for me. Sorry for the multiple comments in this conversation, it is my first time at PR reviewing... Github button \"Start a review\" should have been a better option !\nI will have a look at the new method mergeFormConfig()  later (tonight or tomorrow morningbefore work).\nEdit : when all tests will be successfull, I can install this branch and test it locally in my project if you want.\n. @javiereguiluz \nSymfony 2.8.12\nI tried to install this branch (fix_1311) but I got a warning message from composer:\n\nYour requirements could not be resolved to an installable set of packages.\n\nI attach the complete composer log but may be it would preferable that I wait for the next release of EasyAdmin. Just trying to help, I don't want to waste your time.\nMy composer.json file (this is the only difference with my regular composer.json file)\njson\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/javiereguiluz/EasyAdminBundle\"\n        }\n    ],    \n    \"require\": {\n        \"javiereguiluz/easyadmin-bundle\": \"dev-fix_1311\",\n    },\ncomposer.txt\n. @javiereguiluz \nSymfony 2.8.12\nI tried to install this branch (fix_1311) but I got a warning message from composer:\n\nYour requirements could not be resolved to an installable set of packages.\n\nI attach the complete composer log but may be it would preferable that I wait for the next release of EasyAdmin. Just trying to help, I don't want to waste your time.\nMy composer.json file (this is the only difference with my regular composer.json file)\njson\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/javiereguiluz/EasyAdminBundle\"\n        }\n    ],    \n    \"require\": {\n        \"javiereguiluz/easyadmin-bundle\": \"dev-fix_1311\",\n    },\ncomposer.txt\n. @javiereguiluz Using Symfony 2.8.*, I still have the same problem when trying to install this branch as described in issue #1349.\n. @javiereguiluz Thanks to 1.16.1 release I could test this feature in my Symfony 2.8 application. It works perfectly  :thumbsup:\n. OK I got it (and it is consistent with composer.lock).\nDo you think there is (or I have) a problem with 1.15.3 ?\nEdit: I just saw the bug + unconfirmed labels. Waiting for your expertise. Thank you.\n. @javiereguiluz \nI tried to install the last EasyAdmin release 1.16.0 and I still have the same error using Symfony 2.8. At this time it is not a big problem for me (and if it is necessary I will take time to switch to Symfony 3.*).\nJust for information, do you know what is the problem ?\nThank you.\n. @javiereguiluz \nI tried to install the last EasyAdmin release 1.16.0 and I still have the same error using Symfony 2.8. At this time it is not a big problem for me (and if it is necessary I will take time to switch to Symfony 3.*).\nJust for information, do you know what is the problem ?\nThank you.\n. Could you provide the code, the EasyAdmin configuration and the error message ?\n. Could you provide the code, the EasyAdmin configuration and the error message ?\n. I don't know exactly how you want to use your entity (may be you don't want to edit all fields, actually this is the case) but the error message tells you that a getter method to access your children collection is missing.\nTry this:\nphp\n    /**\n     * Get children.\n     *\n     * @return \\Doctrine\\Common\\Collections\\Collection\n     */\n    public function getChildren()\n    {\n        return $this->children;\n    }\n. It is normal as childrenproperty defines a One-To-Many relationship and promocionProducto property defines a Many-To-One relationship.\nIt now depends of your business logic. Which property do you want to display in your form ? It is easily customizable using new and edit view configuration.\nFor example, if you only want to keep children property (edit and new view), use the following configuration:\nyml\neasy_admin:\n    entities:\n        Producto:\n            class: AppBundle\\Entity\\Producto\n            form:  \n                fields:\n                    - 'children'\n. @csu6 It is not a bug of EasyAdmin.\nYou can read #1354 and #1278 (till the end).\n. @csu6 It is not a bug of EasyAdmin.\nYou can read #1354 and #1278 (till the end).\n. Read this, and in particular the last lines of the paragraph.\nAnd try this:\nyml\nProviders:\n    form:\n        fields:\n            - { property: 'options', type: 'collection', type_options: { by_reference: false } }\n. Read this, and in particular the last lines of the paragraph.\nAnd try this:\nyml\nProviders:\n    form:\n        fields:\n            - { property: 'options', type: 'collection', type_options: { by_reference: false } }\n. @xabbuh \nThat's exactly what I was about to try but I thought that the right syntax was (as for the rest of the dependencies that are symfony components)\nyml\n\"symfony/twig-bridge\": \"~2.3|~3.0\",\nIf I understand this permits to support Symfony versions  >=2.3  <3.0.0 OR >=3.0.0 <4.0.0.\nThe composer.json of Symfony has the replace key activated for any of its components:\nyml\n\"replace\": {\n    \"symfony/twig-bridge\": \"self.version\",\n},\nSo at installation, the component version will stick to the version of Symfony ? (I am not sure of my understanding of the replace key).\nWhy 2.3.4 ?\n. @xabbuh Thank you for your explanations  :thumbsup:\n. @xabbuh @javiereguiluz I confirm that it solves the problem (dev-master aka 1.16.1-DEV).\n. I think it's the normal behavior (in a new view) of EasyAdmin when you embedd a form related to an entity . It tells that the property that defines the relationship (for example subdomains here) is null. The same for me in my application. Once your form is submitted and validated it disappears. I didn't realize that it could also disappear when validation fails.\nDo you think that it should be preferable to avoid this label ?. @laurent-bientz \nI tried the following to understand why the label empty is displayed when validation fails:\nI have a Restaurant entity with a OneToOne relationship with a Coordinates entity (an address). If I make the validation fails, the empty label disappears (like for you).\nyml\neasy_admin:                              \n        Restaurant:\n            class : FBN\\GuideBundle\\Entity\\Restaurant         \n            form:\n                fields:\n                    - { property: 'coordinates', type: 'FBN\\GuideBundle\\Form\\CoordinatesType', type_options: { required: true } }\nI introduced those two tests in my code:\n\nAt Restaurant entity level, I dumped the underlying Coordinates object at setter level:\n\n```php\nclass Restaurant extends Article\n{\n    /*\n     * @ORM\\OneToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Coordinates\", inversedBy=\"restaurant\", cascade={\"persist\",\"remove\"})\n     * @ORM\\JoinColumn(nullable=true, onDelete=\"SET NULL\")\n     * @Assert\\Valid()\n     /\n    private $coordinates;\n/**\n * Set coordinates.\n *\n * @param \\FBN\\GuideBundle\\Entity\\Coordinates $coordinates\n *\n * @return Restaurant\n */\npublic function setCoordinates(\\FBN\\GuideBundle\\Entity\\Coordinates $coordinates)\n{\n    //////////////////////////\n    dump('TEST 1');\n    dump($coordinates);\n    die();\n    //////////////////////////\n    $this->coordinates = $coordinates;\n    $coordinates->setRestaurant($this);\n\n    return $this;\n}\n\n}\n```\n2.  In my custom AdminController I introduced a form event to catch the form datas just before the form submission and before validation. See here.\n```php\nclass AdminController extends BaseAdminController\n{\n    public function createRestaurantEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    //////////////////////////\n    $formBuilder->addEventListener(FormEvents::POST_SUBMIT, function (FormEvent $event) {\n        $data = $event->getData();\n        dump('TEST 2');\n        dump($data->getCoordinates());\n        die();\n    }, 900);\n    //////////////////////////\n\n    // .....\n}\n\n}\n```\nResults:\n- TEST 1 is displayed before TEST 2 : normal\n- Both tests gives a non null instance of Coordinates : consistent\nTEST 1\nRestaurant.php on line 325:\nCoordinates {#2147 \u25bc\n  -coordinatesCountry: CoordinatesCountry {#2220 \u25b6}\n  -coordinatesFR: CoordinatesFR {#2138 \u25b6}\n  -restaurant: null\n  -winemakerDomain: null\n  -shop: null\n  -event: null\n  -id: null\n}\nTEST 2 \nAdminController.php on line 68:\nCoordinates {#1839 \u25bc\n  -coordinatesCountry: CoordinatesCountry {#1912 \u25b6}\n  -coordinatesFR: CoordinatesFR {#1830 \u25b6}\n  -restaurant: Restaurant {#1221 \u25b6}\n  -winemakerDomain: null\n  -shop: null\n  -event: null\n  -id: null\n}\nSo I suppose that when the view is displayed with error messages, coordinates field of Restaurant entity is not null and the association is considered as not null.\n. @laurent-bientz \nHave a look at this template and this CSS file (.labeland .label-empty).\nIn this part of the doc, even if it is about list, show and search view, it is said that:\n\nIn addition, there are other templates defined to render special labels:\nlabel_empty.html.twig, used when the property to render is empty (it's used for arrays, collections, associations, images, etc.)\n\n\nI don't know if this template is used (it seems) in edit view but it is the same HTML element <span class=\"label label-empty\">.\nThen have a look at the documentation related to advanced design configuration for edit and new view.. In my case, I use what is proposed by Javier in #1145. I use a custom admin controller and I introduce the query_builder in options at form builder level.\nExample with my Event entity:\n```php\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse FBN\\GuideBundle\\Entity\\EventRepository;\nclass AdminController extends BaseAdminController\n{\npublic function createEventEntityFormBuilder($entity, $view)\n{\n    $formBuilder = parent::createEntityFormBuilder($entity, $view);\n\n    // stuff...\n\n    $id = (null !== $entity->getId()) ? $entity->getId() : 0;\n    $formBuilder->add('eventPast', EntityType::class, array(\n        'class' => 'FBNGuideBundle:Event',\n        'query_builder' => function (EventRepository $repo) use ($id) {\n            return $repo->getEventsWithCoordinatesAndExcludedId($id);\n            },\n        // ...\n        )\n    );\n\n    // stuff...\n}\n\n}\n```\n. @srosset81 \n\nas a simple dropdown menu instead of the select2 field\n\nTry to add this:\n```php\n    public function createEntityFormBuilder($entity, $view)\n    {\n        //...\n        $options['attr'] = ['data-widget' => 'select2'];\n        $formBuilder->add('impacts', EntityType::class, $options);\n    //...\n}\n\n```\n\nthe field gets displayed at the bottom\n\nI don't know why. It works for me. In my case, as I re-add this field at form builder level, I only declare it without any options at config level. Full code (css_class is used for javascript needs):\nadmin.yml\nyml\neasy_admin:                   \n        Event: \n            class : FBN\\GuideBundle\\Entity\\Event\n            form:\n                fields:\n                    # ...                \n                    - { property: 'eventPast', css_class: 'col-xs-12 eventPast' }\n                    # ...\nCustom AdminController\n```php\nnamespace FBN\\GuideBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType;\nuse FBN\\GuideBundle\\Entity\\EventRepository;\nclass AdminController extends BaseAdminController\n{\n    public function createEventEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n        // stuff...\n    $id = (null !== $entity->getId()) ? $entity->getId() : 0;\n    $formBuilder->add('eventPast', EntityType::class, array(\n        'class' => 'FBNGuideBundle:Event',\n        'query_builder' => function (EventRepository $repo) use ($id) {\n            return $repo->getEventsWithCoordinatesAndExcludedId($id);\n            },\n        'attr' => ['data-widget' => 'select2'],\n        'placeholder' => 'label.form.empty_value',\n        'required' => false,\n        )\n    );\n\n    return $this->getFormBuilderForNonDefaultLocale($formBuilder, $entity, $view);\n}\n\n}\n```\n. @srosset81 \n\nas a simple dropdown menu instead of the select2 field\n\nTry to add this:\n```php\n    public function createEntityFormBuilder($entity, $view)\n    {\n        //...\n        $options['attr'] = ['data-widget' => 'select2'];\n        $formBuilder->add('impacts', EntityType::class, $options);\n    //...\n}\n\n```\n\nthe field gets displayed at the bottom\n\nI don't know why. It works for me. In my case, as I re-add this field at form builder level, I only declare it without any options at config level. Full code (css_class is used for javascript needs):\nadmin.yml\nyml\neasy_admin:                   \n        Event: \n            class : FBN\\GuideBundle\\Entity\\Event\n            form:\n                fields:\n                    # ...                \n                    - { property: 'eventPast', css_class: 'col-xs-12 eventPast' }\n                    # ...\nCustom AdminController\n```php\nnamespace FBN\\GuideBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType;\nuse FBN\\GuideBundle\\Entity\\EventRepository;\nclass AdminController extends BaseAdminController\n{\n    public function createEventEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n        // stuff...\n    $id = (null !== $entity->getId()) ? $entity->getId() : 0;\n    $formBuilder->add('eventPast', EntityType::class, array(\n        'class' => 'FBNGuideBundle:Event',\n        'query_builder' => function (EventRepository $repo) use ($id) {\n            return $repo->getEventsWithCoordinatesAndExcludedId($id);\n            },\n        'attr' => ['data-widget' => 'select2'],\n        'placeholder' => 'label.form.empty_value',\n        'required' => false,\n        )\n    );\n\n    return $this->getFormBuilderForNonDefaultLocale($formBuilder, $entity, $view);\n}\n\n}\n```\n. @srosset81 \n\nActually the \"select2\" data-widget is being passed down by my code and it is working, I don't know why I had issues with that.\n\nI am surprised because it was not the case for me. But I will try to remove this from my code to see if it work.\nFor the field displaying at the bottom of the page, let us know if you find a solution. Strange because it works correctly for me. Can you show your entity configuration ?. @srosset81 \n\nActually the \"select2\" data-widget is being passed down by my code and it is working, I don't know why I had issues with that.\n\nI am surprised because it was not the case for me. But I will try to remove this from my code to see if it work.\nFor the field displaying at the bottom of the page, let us know if you find a solution. Strange because it works correctly for me. Can you show your entity configuration ?. > It works for me because I first copy all the options, and this includes the attr field\nYes of course !\nI understand now what you call the group  option (I don't have this in my configuration). So did you try without this element ? If it works it will confirm your doubts. May be there is a way to replace the field at the right place in the group (by accessing the configuration or something else).. > It works for me because I first copy all the options, and this includes the attr field\nYes of course !\nI understand now what you call the group  option (I don't have this in my configuration). So did you try without this element ? If it works it will confirm your doubts. May be there is a way to replace the field at the right place in the group (by accessing the configuration or something else).. The assertion @Assert\\Expression(\"this.getImageFile() or this.getImage()\") is intended to work with a non-nullable $image field (please read #1081). Remove this assertion and it should work.. Try with the FQCN:\nyml\n- { property: 'roles', type: 'AppBundle\\Form\\RolesChoiceType', label: 'Roles' }\nBy the way, if what you need is a list of roles in you User entity you can implement this configuration.. Try with the FQCN:\nyml\n- { property: 'roles', type: 'AppBundle\\Form\\RolesChoiceType', label: 'Roles' }\nBy the way, if what you need is a list of roles in you User entity you can implement this configuration.. @Benjamin-Porquet  \nI reproduced your example. I obtain the same error message than you. But, if I use a classical EntityType, I have also this error. In your example (thanks to EasyAdmin facilities) it consists of the following configuration:\nyml\n- { property: 'service',  css_class: 'col-sm-4', type_options: {required: false} }\nI removed {required:true} option to pass over the HTML validation.\n@javiereguiluz\nI think this issue is neither related to easyadmin_autocomplete nor EasyAdminBundle but to Symfony.\nFrom this issue, a quick solution: modify the setter to define default as null (see Stof's comment). I tried, it works.\nphp\npublic function setService(AppBundle\\Entity\\Service $service = null)\nThe other solution described is to use a DTO (Data Transfer Object). But, IMHO, it is absolutely not in the philosophy of EasyAdmin as the idea is to quickly create an efficient backend with all kinds of relationships between entities taken into account.\nLast thing : I noticed that using {required:true}option with easyadmin_autocomplete has no effect.\n. Did you try something like this ?\nyml\neasy_admin:    \n    entities:\n        User:\n            class: XXX\\Entity\\User                \n            form:\n                fields:\n                    - 'username'\n                    - 'password'\n                    - { property: 'address', type: 'XXX\\Form\\AdressType', type_options: { required: true } }. Did you try something like this ?\nyml\neasy_admin:    \n    entities:\n        User:\n            class: XXX\\Entity\\User                \n            form:\n                fields:\n                    - 'username'\n                    - 'password'\n                    - { property: 'address', type: 'XXX\\Form\\AdressType', type_options: { required: true } }. @jplammie \nIt's really strange, I don't understand why you have to declare the form type as a service in this case. Do you have others form type configured in EA that works without this workaround ?. Not at this time. For what I could understand by reading, it will probably be included but in the future (maybe with EasyAdmin >= 2.0 ?). Using Symfony voters can be a good solution for you. If you need something ready to use out of the box consider using SonataAdminBundle.. @yceruto \nThanks for your answer.\n\nThis no makes sense to me... is there a contradiction?\n\nI understand that you don't understand. The best way to expose my issue is to explain my real use case. Maybe at the end of your reading the conclusion will be that my form is badly designed.\n\nIs that the problem that you're pointed?\n\nYes but in this use case it is slightly different. I show the problem later in this explanation.\nDescription:\nI have an Event entity. The address of an Event can be set by filling some Coordinates (a complete address) or by making a reference to a place that already has an address : Restaurant, Shop, Winemaker domain, Event from the past. In term of Entity and EasyAdmin configuration it gives the following:\n```php\nclass Event\n{\n  /*\n   * @ORM\\OneToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Coordinates\", inversedBy=\"event\", cascade={\"persist\",\"remove\"}, orphanRemoval=true)\n   * @Assert\\Valid()\n   /\n  private $coordinates;  \n/*\n   * @ORM\\ManyToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Restaurant\", inversedBy=\"event\")\n   * @ORM\\JoinColumn(nullable=true, onDelete=\"SET NULL\")\n   /\n  private $restaurant;\n/*\n   * @ORM\\ManyToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Shop\", inversedBy=\"event\")\n   * @ORM\\JoinColumn(nullable=true, onDelete=\"SET NULL\")\n   /\n  private $shop;\n/*\n   * @ORM\\ManyToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\WinemakerDomain\", inversedBy=\"event\")\n   * @ORM\\JoinColumn(nullable=true, onDelete=\"SET NULL\")\n   /\n  private $winemakerDomain;\n/*\n   * @ORM\\ManyToOne(targetEntity=\"FBN\\GuideBundle\\Entity\\Event\", inversedBy=\"event\")\n   * @ORM\\JoinColumn(nullable=true, onDelete=\"SET NULL\")\n   /\n  private $eventPast;\n}\nyml\nEvent: \n  class : FBN\\GuideBundle\\Entity\\Event\n  form:\n      fields:              \n          - { property: 'coordinates', type: 'FBN\\GuideBundle\\Form\\CoordinatesType', type_options: { required: true }, css_class: 'col-xs-12 coordinates' }                  \n          - { property: 'restaurant', css_class: 'col-xs-12 restaurant' }\n          - { property: 'shop', css_class: 'col-xs-12 shop' }\n          - { property: 'winemakerDomain', css_class: 'col-xs-12 winemakerDomain' }\n          - { property: 'eventPast', css_class: 'col-xs-12 eventPast' }  \n```\nIn term of form, Coordinates field is an embedded form and other fields (alternative locations such as Restaurant) are select elements that represents an entity. In the Coordinates embedded form, CoordinatesFRCity is the autocomplete field.\nThe user can choose to fill what he wants. In case he picks an alternative location, the Coordinates field at entity level as to be set to null. To do that I listen to SUBMIT form event in AdminController:\n```php\nclass AdminController extends BaseAdminController\n{\n    public function createEventEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    $formBuilder->addEventListener(FormEvents::SUBMIT, function (FormEvent $event) {\n        $data = $event->getData();\n\n        if ((null !== $data->getRestaurant()) || (null !== $data->getShop()) || (null !== $data->getWinemakerDomain()) || (null !== $data->getEventPast())) {\n            $data->setCoordinates(null);\n        }\n\n        $event->setData($data);\n    });\n}\n\n}\n```\nExample:\nIf I begin with an Event form that have a Coordinates already filled and I choose an alternative location like Shop, I have no error because CoordinatesFRCity has a value. See the gif below:\n\nNow, I have an empty Coordinates form in my Event form. I try to change the previous alternative location Shop to Restaurant. As CoordinatesFRCity field is empty, the error is triggered:\n\nSolution:\nTo avoid this I have introduced the following PRE_SUBMIT event listener in my CoordinatesFRType (which is embedded in CoordinatesType):\n```php\nclass CoordinatesFRType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            //...\n            ->add('coordinatesFRCity', EasyAdminAutocompleteType::class, array(\n                'class' => CoordinatesFRCity::class,\n                ))\n        ;\n    $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) {\n        $data = $event->getData();\n        if (!isset($data[\"coordinatesFRCity\"])) {\n            $data[\"coordinatesFRCity\"][\"autocomplete\"] = \"\";\n            $event->setData($data);\n        }\n    });\n}\n\n}\n```\nConclusion:\nMaybe it is not a good way to proceed ? Maybe I should introduce a select field that invites the user to chose the location he wants (Coordinates, Restaurant...) and then load the appropriate form by AJAX ? This way, if user chose Coordinates form, a classical error message will be triggered if he forgets to fill the CoordinatesFRCity field.\nThank you again for your expertise.\n. Closing this as it is probably not an issue.. @mazetuski \nI use translatable behavior Doctrine extension with EasyAdminBundle but in a very simple way : changing the locale (with a menu integrated to EasyAdmin) permits to change the translation. I have a mechanism to impose that any new article (my app is a kind of blog) has to be first filled in the default locale (en) and then can be translated in other locales (fr).\nI don't know if it is enough for you or if you want something more sophisticated as described in #865. \nYou can have look to my repo. If you do, please chose the branch fix_sensiolabs_insight_violations (work in progress).. Missing quotes ('id') ?\n. Missing quotes ('phone') ?\n. Missing quotes ('id') ?\n. Missing quotes ('phone') ?\n. No, you are right, nothing else to say you're the boss :thumbsup:\n. ",
    "anthony-launay": "For the feature --> :smiley:\n. Hi,\nThis is fixed in 1.11.5 release.\nThanks\n. Hi,\nIt's better in the 1.11.5 release.\nHowever, the link \"back to list\" returns to the previous page (\"show\" action) and not to the list view.\n. The URL of  \"Back to list\" button must be the \"list\" URL of the entity consulted.\nHowever, if \"referer\" is different from the URL of the button \"Back to list\", a new \"Back\" button should be added with URL of the \"referer\" value.\n. I need two list actions with differents filters and if it's possible i would display different fields in this lists.\n. I need two list actions with differents filters and if it's possible i would display different fields in this lists.\n. easy_admin:\n    entities:\n        Partenariat:\n            label: 'Partenariats'\n            class: AppBundle\\Entity\\Partenariat\n            list:\n                fields:\n                    - { property: 'partenaire', label: 'Structure' }\n                    - { property: 'edition', label: 'Edition' }\neasy_admin:\n    entities:\n        Affiche:\n            label: 'Affiche'\n            class: AppBundle\\Entity\\Partenariat\n            list:\n                fields:\n                    - { property: 'partenaire', label: 'Structure' }\n```\neasy_admin:\n    design:\n        menu:\n            - entity: 'Partenariat'\n              icon: 'money'\n              params:\n                sortField: 'partenaire'\n                sortDirection: 'ASC'\n        - entity: 'Affiche'\n          icon: 'money'\n          params:\n            sortField: 'partenaire'\n            sortDirection: 'ASC'\n\n```\n\nRuntimeException in MenuConfigPass.php line 120:\nThe \"Affiche\" entity included in the \"menu\" option is not managed by EasyAdmin. The menu can only include any of these entities: Partenariat, Partenariat2.\n\nDo you have an idea of the problem ?\nThanks\n. easy_admin:\n    entities:\n        Partenariat:\n            label: 'Partenariats'\n            class: AppBundle\\Entity\\Partenariat\n            list:\n                fields:\n                    - { property: 'partenaire', label: 'Structure' }\n                    - { property: 'edition', label: 'Edition' }\neasy_admin:\n    entities:\n        Affiche:\n            label: 'Affiche'\n            class: AppBundle\\Entity\\Partenariat\n            list:\n                fields:\n                    - { property: 'partenaire', label: 'Structure' }\n```\neasy_admin:\n    design:\n        menu:\n            - entity: 'Partenariat'\n              icon: 'money'\n              params:\n                sortField: 'partenaire'\n                sortDirection: 'ASC'\n        - entity: 'Affiche'\n          icon: 'money'\n          params:\n            sortField: 'partenaire'\n            sortDirection: 'ASC'\n\n```\n\nRuntimeException in MenuConfigPass.php line 120:\nThe \"Affiche\" entity included in the \"menu\" option is not managed by EasyAdmin. The menu can only include any of these entities: Partenariat, Partenariat2.\n\nDo you have an idea of the problem ?\nThanks\n. Thanks for the speed and relevance of your answers !\n. Thanks for the speed and relevance of your answers !\n. Thanks ! \nI hadn't seen this option =) \n. +1 \n. Hi !\nYou need enable translator service in the application (Documentation)\nAnd you need to set locale in your paramater.yml  (Documentation)\n. Very good news !\nHowever, it seems that it's not possible to apply this layout on view \"show\", but only for forms (add / edit).\nIs it possible use the same options (section, group ...) on the \"show\" view ?\nDo not having uniformity between views may be disturbing ... no ?\n. Thank you for this quick response.\nHave a nice day\n. @javiereguiluz it's ok for you ? \n. @javiereguiluz it's ok for you ? \n. I have the same problem to install EasyAdmin 1.16.0\n. I have the same problem to install EasyAdmin 1.16.0\n. Thanks, I had thought of the solution to overwrite the template, however, I thought it was possible to do this in configuration.\nHave a good day. Hello,\nI have the same problem.\nIt works in 1.16.5 but not in 1.16.6. Hi\nWhen there are many columns in a listing and it's viewed on a high resolution screen. The following CSS property is problematic because it doesn't allow to have the listing in full screen (big margin on the left but not on the right).\nbody: not (.easyminmin-content-width-full) .wrapper {\n\u00a0\u00a0\u00a0\u00a0 max-width: var (- body-max-width);\n}\nChanging the \"max-width\" value to \"100%\" seems to correct the problem.\nWhat do you think ?. ",
    "alrick": "@javiereguiluz \nAre you considering to implement the tabs group option?\nI think group options currently available aren't as efficient as tabs to separate fields.. @javiereguiluz \nAre you considering to implement the tabs group option?\nI think group options currently available aren't as efficient as tabs to separate fields.. Is this a known problem? \nI tried it with the easy-admin-demo and got the same problem, which surprise me because it's such an essential feature if you have a lot of entries in the relation.. ",
    "yurtesen": "Sorry to dig up a closed issue but in @mkalisz77 's answer, the lines \n$this->users[] = $user;\nand\n$this->users->removeElement($user);\nare completely redundant isnt it? just trying to figure out if I am missing something...\nBy the way, can't this be a feature of EasyAdmin to detect owning side and inverse side and act accordingly so we won't need special configuration?. ",
    "devkbsc": "@javiereguiluz Hello, Just tried the samething in my adminoffice. I wanted to add this. Is there any other possibilities incase the feature is not yet added?. Thank you very much for the update. It left an error message on my cmd console that as follow :\n\n10:42:50 ERROR     [console] Error thrown while running command \"debug:container \"AdminBundle\\Event\\EasyAdminSubscriber\"\". Message: \"No services found that match \"AdminBundle\\Event\\EasyAdminSubscriber\".\" [\"exception\" => Symfony\\Component\\Console\\Exception\\InvalidArgumentException { \u00d4\u00c7\u00aa},\"command\" => \"debug:container \"AdminBundle\\Event\\EasyAdminSubscriber\"\",\"message\" => \"No services found that match \"AdminBundle\\Event\\EasyAdminSubscriber\".\"] []\nNo services found that match \"AdminBundle\\Event\\EasyAdminSubscriber\".\ndebug:container [--show-private] [--show-arguments] [--tag TAG] [--tags] [--parameter PARAMETER] [--parameters] [--types] [--format FORMAT] [--raw] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--]  []\n. It's EasyAdminSubscriber everywhere. It's already in the end of the file services.yaml\n. ok sure! here is \n\nconfig.yaml\n```\nimports:\n    - { resource: \"parameters.yml\" }\n    - { resource: \"security.yml\" }\n    - { resource: \"services.yml\" }\n    - { resource: \"@BlogBundle/Resources/config/services.yml\" }\n    - { resource: \"@UserBundle/Resources/config/services.yml\" }\n    - { resource: \"@ProjetBundle/Resources/config/services.yml\" }\n    - { resource: easyadmin/ }\n    - { resource: \"@AdminBundle/Resources/config/services.yml\" }\n    - { resource: \"@NewsletterBundle/Resources/config/services.yml\" }\nparameters:\n    locale: fr\nframework:\ntranslator:      { fallbacks: \"%locale%\" }\nsecret:          \"%secret%\"\nrouter:\n    resource: \"%kernel.root_dir%/config/routing.yml\"\n    strict_requirements: ~\n\nform:            ~\ncsrf_protection: ~\nvalidation:      { enable_annotations: true }\ntemplating:\n    engines: ['twig']\n\nsession:\n    handler_id:  session.handler.native_file\n    save_path:   \"%kernel.root_dir%/../var/sessions/%kernel.environment%\"\nfragments:       ~\nhttp_method_override: true\nassets: ~\nphp_errors:\n    log: true\n\nTwig Configuration\ntwig:\n    cache: false\n    globals:\n        pathToWeb: \"%kernel.root_dir%/../web\"\ndebug:            \"%kernel.debug%\"\nstrict_variables: \"%kernel.debug%\"\ncache : false\n\nassetic:\n    debug:          '%kernel.debug%'\n    use_controller: '%kernel.debug%'\n    filters:\n        cssrewrite: ~\ndoctrine:\n    dbal:\n        driver:   pdo_mysql\n        host:     \"%database_host%\"\n        port:     \"%database_port%\"\n        dbname:   \"%database_name%\"\n        user:     \"%database_user%\"\n        password: \"%database_password%\"\n        charset:  UTF8\norm:\n    auto_generate_proxy_classes: false\n    proxy_dir:            '%kernel.cache_dir%/doctrine/orm/Proxies'\n    proxy_namespace:      Proxies\n    naming_strategy: doctrine.orm.naming_strategy.underscore\n    auto_mapping: true\n\nstof_doctrine_extensions:\n    orm:\n        default:\n            sluggable: true\n            timestampable: true\nSwiftmailer Configuration\nswiftmailer:\n    transport: smtp\n    encryption: ssl   \n    auth_mode:  login \n    host: \"%mailer_host%\"\n    username:  \"%mailer_user%\"\n    password:  \"%mailer_password%\"\n    spool:     { type: memory }\n    logging:  \"%kernel.debug%\"\n#FOS_USER config\nfos_user:\n    db_driver: orm # other valid values are 'mongodb' and 'couchdb'\n    firewall_name: main\n    user_class: UserBundle\\Entity\\User\nfrom_email:\n    address: developer@test.com\n    sender_name: website name\n\nregistration:\n    confirmation:\n        from_email:\n            address: developer@test.com\n            sender_name: website email\n        enabled: true\n        template:   FOSUserBundle:Registration:email.txt.twig\n    form:\n        type: UserBundle\\Form\\RegistrationType\n        name: app_user_registration\n\nprofile:\n    form:\n        type: UserBundle\\Form\\ProfileFormType\n        name: app_user_profile\n\nresetting:\n    email:\n        from_email:\n            address:        developer@test.com\n            sender_name:    R\u00e9initialiser me mot de passe\n\nfos_message:\n    db_driver: orm\n    thread_class: UserBundle\\Entity\\Thread\n    message_class: UserBundle\\Entity\\Message\nivory_ck_editor:\n    input_sync: true\n    default_config: base_config\n    configs:\n        base_config:\n            toolbar: full\nUploader configuration\nvich_uploader:\n    db_driver: orm\nmappings:\n    articles_images:\n        uri_prefix:  \"%app.path.articles_images%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/articles/images\"\n\n    articles_videos:\n        uri_prefix:  \"%app.path.articles_videos%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/articles/videos\"\n\n    projets_images:\n        uri_prefix:  \"%app.path.projets_images%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/projets/images\"\n\n    profile_images:\n        uri_prefix:  \"%app.path.profile_images%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/profile/images\"\n\n    projets_documents:\n        uri_prefix:  \"%app.path.projets_documents%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/documents\"\n\n    images:\n        uri_prefix:  \"%app.path.images%\"\n        upload_destination: \"%kernel.root_dir%/../web/uploads/app\"\n\nweb_profiler:\n    intercept_redirects: true\nknp_snappy:\n    pdf:\n        enabled:    true\n        binary:     \"\\\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\\\"\"\n        options:\n            no-outline: true\n            page-size: 'A4'\n            encoding: 'UTF-8'\n            margin-top: '20mm'\n            margin-bottom: '20mm'\n            margin-right: '15mm'\n            margin-left: '20mm'\nhwi_oauth:\n    connect:\n        confirmation: true\n        registration_form: fos_user.registration.form.factory\n    firewall_names : [main]\n    fosub:\n        username_iterations: 30\n        properties:\n            facebook: facebookID\n            google: googleID\nresource_owners:\n    #facebook access\n    facebook:\n        type:                facebook\n        client_id:           aaaaaaaaaaaaa\n        client_secret:       bbbbbbbbbbbbbbbbbbbb\n        scope:               \"email\"\n        option:\n            display: popup\n            auth_type: rerequest\n\n    #Google access\n    google:\n        type:                google\n        client_id:           bbbbbbbbbbbbbbbbbbb.apps.googleusercontent.com\n        client_secret:       aaaaaaaaaaaaaaaa\n        scope:               \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\"\n\ngos_web_socket:\n    server:\n        #The port the socket server will listen on\n        port: 8080 \n        #The host ip to bind to\n        host: 127.0.0.1   \n```\n. The exact file is \nAdminBundle\\Event\\EasyAdminSubscriber.php\n. here it is \n```\nservices:\n    app.form.registration:\n        class: UserBundle\\Form\\RegistrationType\n        tags:\n            - { name: form.type, alias: app_user_registration }\napp.profile.form.type:\n    class: UserBundle\\Form\\ProfileFormType\n    tags:\n        - { name: form.type, alias: app_user_profile }\n\n\n#HWI aouth\nmy.oauth_aware.user_provider.fosub_bridge:\n    class: HWI\\Bundle\\OAuthBundle\\Security\\Core\\User\\FOSUBUserProvider\n    arguments:\n        - '@fos_user.user_manager'\n        - ['pass properties as array']\n\n\ntwig.extension.intl:\n    class: Twig_Extensions_Extension_Intl\n    tags:\n        - { name: twig.extension }\n\nservices:\n    AdminBundle\\Event\\EasyAdminSubscriber:\n        tags:\n            - { name: kernel.event_listener, event: kernel.exception }\n    _defaults:\n        autowire: true\n        autoconfigure: true\n        public: false\nAdminBundle\\:\n    resource: 'AdminBundle/*'\n    exclude: 'AdminBundle/{Entity,Repository,Tests,Event}'\n\nAdminBundle\\Controller\\:\n    resource: 'AdminBundle/Controller'\n    public: true\n    tags: ['controller.service_arguments']\n\n```. I don't understand what the move you want to make in it??  \nwhat you mean move it to the bottom  ???\nthis file is not loaded as i have seen in the cmd error message!. Sorry for the not understood! Just saw the source code difference! I have just tested this again on cmd by tying this\nphp bin/console debug:container AdminBundle\\Event\\EasyAdminSubscriber\nThere is no change! still the file is not leaded \n\nNo services found that match \"AdminBundle\\Event\\EasyAdminSubscriber\".. Kindly mention the filename please!\n\nservices.yaml is in the app/config\nEasyadminsubscriber.php is in the src/AdminBundle/Event/\nBut I don't need to mention src/ in services.yaml , right??. I have provided the two config files which are only i have ! I don't have any others!\nSure i will upload my project on github i will provide the link here!. ",
    "seb-jean": "It would be great to integrate a datepicker to this bundle :)\n. It would be great to integrate a datepicker to this bundle :)\n. Maybe wait Admin LTE 3 version stable ?. I found the solution. I found the solution. Hi,\nLoading the entire Bootstrap Framework, the fieldset's .field-group are override by bootstrap-all.css.\nWith bootstrap-all.css :\n\nWithout bootstrap-all.css :\n. Hi,\nWhen field using select2 andcss_class is long, field's width is not full.\n{ property: 'tags', label: label.tags, css_class: 'long' }\n\n. @javiereguiluz it's good for the  2 issues :). Thanks. @javiereguiluz, for checkboxes and radios, we could by default use Bootstrap's Custom forms : \nhttps://getbootstrap.com/docs/4.1/components/forms/#custom-forms\n. When an entity is saved (create, update, delete), it would be cool to have a message of success or error depending on the case! :)\n. This is my personal opinion but I think we must add to fieldsets background-color: #FFF;\nIt will also match the first version of EasyAdmin :\n\n. Hi,\nI use Chrome on Windows 7.\nBelow is the less zoomed image and associated YAML code. I hope it can help you :\n\nyaml\neasy_admin:\n    entities:\n        User:\n            class: App\\Entity\\User\n            edit:\n                title: title.profile_edit\n            form:\n                fields:\n                - { type: 'group', label: 'Informations' }\n                - { property: 'firstName', label: label.first_name, css_class: 'long', columns: 6 }\n                - { property: 'lastName', label: label.last_name, css_class: 'long', columns: 6 }\n                - { property: 'skills', label: label.tags, css_class: 'long', columns: 6 }\n            disabled_actions: ['new', 'list', 'delete']. On the element that has the classes select2 select2-container select2-container--bootstrap, there is a width defined automatically.\nBy disabling this width in Chrome, the width is correct.. Hi,\nThat's what I did in my file my_project\\config\\packages\\easy_admin\\basic.yml :\nyaml\neasy_admin:\n    translation_domain: 'blog'\n    site_name: 'Blog'\nBut it does not work.. I defined the translation_domain option in my entity, but it does not work :\nyaml\neasy_admin:\n    entities:\n        Post:\n            translation_domain: 'blog'. The missing translations appear under the messages domain.. @xabbuh, are you talking to @javiereguiluz  or me?\n. So here is a repository that I created quickly with the help of your repository symfony/demo : https://github.com/guice12/symfony-demo-ea\nThe impacted files:\n- https://github.com/guice12/symfony-demo-ea/blob/master/translations/blog.fr.xlf\n- https://github.com/guice12/symfony-demo-ea/blob/master/templates/administration/dashboard/index.html.twig\n- https://github.com/guice12/symfony-demo-ea/blob/master/config/routes/easy_admin.yaml\n- https://github.com/guice12/symfony-demo-ea/blob/master/config/packages/easy_admin.yaml\n- https://github.com/guice12/symfony-demo-ea/blob/master/src/Controller/Administration/DashboardController.php\nAdmin URL for Easy Admin is : http://127.0.0.1:8000/admininstration/\nMenu is translated\nDashboard URL : http://127.0.0.1:8000/fr/dashboard\nMenu is not translated. Hi\nI need Input group for custom field like below image :\n\nIt would be interesting to be able to configure it via the options of a form class.\nThanks !. Hi,\nThere may be a possibility to take inspiration from the class https://github.com/braincrafted/bootstrap-bundle/blob/develop/Form/Extension/InputGroupButtonExtension.php and view https://github.com/braincrafted/bootstrap-bundle/blob/develop/Resources/views/Form/bootstrap.html.twig for implement this feature.\n. Hi,\nThere may be a possibility to take inspiration from the class https://github.com/braincrafted/bootstrap-bundle/blob/develop/Form/Extension/InputGroupButtonExtension.php and view https://github.com/braincrafted/bootstrap-bundle/blob/develop/Resources/views/Form/bootstrap.html.twig for implement this feature.\n. Hi,\nFor my part, I have error The required options \"entity\", \"view\" are missing. with getParent. Hi,\nFor my part, I have error The required options \"entity\", \"view\" are missing. with getParent. I check the styles. The property margin of .wrapper is the reason :\nNow :\ncss\n.wrapper {\n    display: grid;\n    grid-row-gap: 20px;\n    grid-template-areas: \"header\" \"content-wrapper\";\n    margin: 20px 15px;\n}\nThis works with below but the design is broken :\ncss\n.wrapper {\n    display: grid;\n    grid-row-gap: 20px;\n    grid-template-areas: \"header\" \"content-wrapper\";\n    margin: 0 15px;\n}. I have this line but I do not find it clean.\ncss\n@import \"../../../vendor/easycorp/easyadmin-bundle/assets/css/easyadmin-theme/variables\"; . And if I put $text-color: hsl(237, 30%, 24%);, It will not work because my file will not be taken into account or I forgot something.. In fact, I'd like to do like for Bootstrap to overload variables: https://getbootstrap.com/docs/4.2/getting-started/webpack/#importing-styles\n. And what do you put in the SCSS file that allows you to compile the CSS?\nThanks. Yes. So there may be an error in https://github.com/EasyCorp/EasyAdminBundle/blob/master/doc/book/basic-configuration.rst :\nThis is not the right controller.\n```yaml\napp/config/routing.yml\neasy_admin_bundle:\n    resource: \"@EasyAdminBundle/Controller/AdminController.php\"\n    type:     annotation\n    prefix:   /_secret_backend  # <-- change this value\n``. Yes, I can ?. I found the solution with functioncreateNewEntity`. Thanks @ktrzos , I updated PR.. ",
    "Eng3l": "I was trying to check constraint on preDeleteEntity.\n``` php\npublic function preDeleteUsuarioEntity($user) {\n        if ($user->hasData()) {\n        $this->get('session')->getFlashBag()\n            ->add('warn', 'Usefull message.');\n\n        return $this->redirectToRoute('easyadmin', array(\n                'view' => 'list',\n                'entity' => $this->request->query->get('entity'),\n        ));\n    }\n}\n\n```\nBut I doesn't work at all. Still trying to delete the record and throwing the exception.\n. I'm trying to log changes produced only with EasyAdmin, others doctrine events are irrelevants for me.\nI'm asking why I get the object that is being modified when this is not persistet yet.\n. @javiereguiluz Thanks for the tips.\nSo, there is another way to get the original object from database?\n. @javiereguiluz That was exactly I was looking for. Thanks a lot.\n. Just happend to me.\n. I achieve this by modifying the template. I achieve this by modifying the template. ",
    "dgil": ":+1: \nThanks @Pierstoval for your prompt response.\n. ",
    "julienbernier": "Did you activate delete action in list ?\n. I extend your view list.html.twig.\nError is in line number 38 of my view, which corresponds to the section {{ parent() }}. After debugging, the problem seems to be in this section code in your list.html.twig (proble with merge function !?) :\n\n{% set referer = paginator.currentPage == paginator.nbPages and 0 != paginator.currentPage and 1 == paginator.currentPageResults.count ? path('easyadmin', app.request.query|merge({ page: app.request.query.get('page') - 1 })) : app.request.requestUri %}\n\nIf you want, i will give you this evening the full stack trace displayed by the Symfony exception page, and more details about values of paginator, app.request.query.get('page'), ...\n. I update easyadmin on my project, your correction fix my issue.\nThanks a lot.\n. I update easyadmin on my project, your correction fix my issue.\nThanks a lot.\n. ",
    "anboto": "Yes, there is no other place that can found which takes default manager in the bundle, I am doing PR @javiereguiluz\n. Thank you too.\n. You are welcome! Kind regards.\n. Right, I think 'Konexioa' is perfect too and more simplistic (as generic as 'Saioa(n)' maybe), but it may make confusion in some distant scenario as you say.\nAbout the last translation, I know there are plural needs for this word, but in Basque if you have quantity there is no plural word. If there is no quantity and only takes care about one or more you are right and here looks like this (https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/form/bootstrap_3_layout.html.twig#L321), so I'm reverting and doing it right way. But I'm confused with this line: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/form/bootstrap_3_layout.html.twig#L319 I'm afraid if could become anytime 'n Erroreak' when error_count > 1\nCongratulations for the awesome :cake:!\n. Ez da ezer and keep going!\n. @INHack20 I have solved same problem by adding a custom form field after requiring the bundle:\nyaml\neasy_admin:\n    entities:\n        AnyEntityName:\n            form:\n                fields:\n                    - { property: 'description', type: 'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n@see https://github.com/egeloen/IvoryCKEditorBundle/issues/329. @INHack20 I have solved same problem by adding a custom form field after requiring the bundle:\nyaml\neasy_admin:\n    entities:\n        AnyEntityName:\n            form:\n                fields:\n                    - { property: 'description', type: 'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n@see https://github.com/egeloen/IvoryCKEditorBundle/issues/329. ",
    "fatihkahveci": "I actually want to override current theme to AdminLTE2 to my own project as well so i can help for that. I think AdminLTE2 will be best choice. Only cons for me large files.\n.  :+1: Awesome\n. ",
    "gabiudrescu": "looks very promising :+1: \n. This weekend I was about to re-open #410 :tired_face: \nI've put a calendar memo once 2.3 becomes obsolete to re-open that PR\n. This weekend I was about to re-open #410 :tired_face: \nI've put a calendar memo once 2.3 becomes obsolete to re-open that PR\n. is there any progress with this?. is there any progress with this?. Hi Javier,\nI'll be thinking about some use cases and come back with some examples. But top of mind is creating a bundle that uses EasyAdmin without extending it per-se.\nFor example, a bundle that allows you to read state machines for entities and render the transitions as buttons. And each time you want to render the buttons, you hook into one of the predefined events and render the content you need in there.\nI find it very easy to use, especially when you don't want to mess with the predefined structure of EasyAdmin. When you need to add, rather than remove.\nI'd use it for creating multiple checkboxes for bulk actions in EasyAdmin too. Or even better, conditional checkboxes.\nI also find it future proof: no matter how the design of EasyAdmin goes, the customization is tied only to that event, which should be pretty consistent: e.g: easyadmin.logo.before / easyadmin.entity.list.buttons.add. And issuing events from the templates doesn't seem a bad idea, as long as you use them for design / view purposes, not business logic or something like that.\nWhich I totally agree, it's like doing SQL in a twig file. @javiereguiluz should I provide a POC for this feature?. I have created a POC application: https://github.com/gabiudrescu/EasyAdminWithStateMachine\nrelevant files:\n\nthe state machine configuration: https://github.com/gabiudrescu/EasyAdminWithStateMachine/blob/master/app/config/config.yml#L11 (I plan to include this in my own bundle)\nthe event thrown in twig: https://github.com/gabiudrescu/EasyAdminWithStateMachine/blob/master/app/Resources/views/easy_admin/list.html.twig#L5\nthe listener configuration for this event: https://github.com/gabiudrescu/EasyAdminWithStateMachine/blob/master/app/config/services.yml#L32\nthe class doing the rendering: https://github.com/gabiudrescu/EasyAdminWithStateMachine/blob/master/src/AppBundle/Blocks/BlockEventListener.php\nthe controller that will handle the transitions: https://github.com/gabiudrescu/EasyAdminWithStateMachine/blob/master/src/AppBundle/Controller/DefaultController.php#L27\n\nMy plan is to craft a bundle called something like \"EasyStateMachine\" that couples EasyAdmin with WinzouStateMachine for a super-awesome RAD toolkit you can use to build awesome apps. \nHence the need to have hooks into EasyAdmin where I can hook to display certain stuff based on certain criterias without extending EasyAdmin per-se.\nWDYT?. @javiereguiluz no worry, I totally understand your position. \nunfortunately, I haven't had much time lately for this idea and the business case I was trying to use it for got sidelined. \nI still believe adding state machine integration with EasyAdminBundle is a good idea, maybe in the future it will become again interesting and we'll give it a shot then.. @javiereguiluz no worry, I totally understand your position. \nunfortunately, I haven't had much time lately for this idea and the business case I was trying to use it for got sidelined. \nI still believe adding state machine integration with EasyAdminBundle is a good idea, maybe in the future it will become again interesting and we'll give it a shot then.. > We lose the ability of defining a template to override that same template in all entities.\nso basically, if I want to override the view template for all entities, I will no longer be able to do so?. Maybe when merged, this https://github.com/symfony/symfony/pull/26132 will alleviate such situations.. so that's why PHPUnit failed on my localhost :)\nsilly me. I think now it's OK.\n. ",
    "Jjourde": "@javiereguiluz You're welcome ;)\n. ",
    "MatthieuPoullin": "@Jjourde @javiereguiluz  Awesome !\n. ",
    "acrobat22": "@amit0rana. Hello. Sorry to return to this old subject.\n I would need to do the same thing. \nBut I can't. \nIn the yml of the entity how do we recover the id sent in the route? With dal_filter ?\nThank you in advance for your help. It's curious about chrome that works.\nBut not on Safari\n. It's curious about chrome that works.\nBut not on Safari\n. Thank you for your answer.\nIn the app.js file are Edge, Trident, Firefox browsers ... but not Safari.\nMaybe this is where there is a problem?. Thank you for your answer.\nIn the app.js file are Edge, Trident, Firefox browsers ... but not Safari.\nMaybe this is where there is a problem?. ",
    "crossplatformdev": "@reypm If you want, you can use this twig function:\n{# example security usage, see below #}\n{% if is_granted('IS_AUTHENTICATED_FULLY') %}\n    {# ... #}\n{% endif %}\n{# you can put any role up there #}\nIt's way better than hide content with only CSS ;-)\nIn order to do so, I had to override the templates by placing the @javiereguiluz folder from vendors and placing it under src and renamed the folder and subfolder, as it is indicated in Symfony book, but at first it did not work, because I was not able to match the namespace, reflecting it on the directory tree (I ask here help for this topic, as it is very related).\nJust to try the twig function out, I renamed the namespace and the backslashed strings containing also the namespace and made Symfony believe that it is one of my sources (I've also modified the bundle initialization in AppKernel.php).\nIt works indeed, thus, I am not comfortable with having to do such a mess (rename the namespace), in order to do what Symfony is supposed to do for me, just using a valid directory tree. I ask @javiereguiluz support for that.\nAlso, I've successfully added these snippets on the AdminController.php file, which also works:\n$id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n         // ... Your role-granted or user id code goes here ...\n    } else {\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n$this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\nI just have two roles, and this trick does fit my needs. I just only need to work on the webflow (navigation) now, as the usual easy admin won't work for regular users, but it will still work great to users with ROLE_SUPER_ADMIN.\nBTW, the function renderForbiddenActtionError(), did not find the template. Not even present on vendor folder, version ^1.14.\nVery related to mine: http://symfony.com/doc/current/cookbook/bundles/override.html\nVery related to @reypm: http://symfony.com/doc/current/book/security.html\n. @reypm If you want, you can use this twig function:\n{# example security usage, see below #}\n{% if is_granted('IS_AUTHENTICATED_FULLY') %}\n    {# ... #}\n{% endif %}\n{# you can put any role up there #}\nIt's way better than hide content with only CSS ;-)\nIn order to do so, I had to override the templates by placing the @javiereguiluz folder from vendors and placing it under src and renamed the folder and subfolder, as it is indicated in Symfony book, but at first it did not work, because I was not able to match the namespace, reflecting it on the directory tree (I ask here help for this topic, as it is very related).\nJust to try the twig function out, I renamed the namespace and the backslashed strings containing also the namespace and made Symfony believe that it is one of my sources (I've also modified the bundle initialization in AppKernel.php).\nIt works indeed, thus, I am not comfortable with having to do such a mess (rename the namespace), in order to do what Symfony is supposed to do for me, just using a valid directory tree. I ask @javiereguiluz support for that.\nAlso, I've successfully added these snippets on the AdminController.php file, which also works:\n$id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n         // ... Your role-granted or user id code goes here ...\n    } else {\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n$this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\nI just have two roles, and this trick does fit my needs. I just only need to work on the webflow (navigation) now, as the usual easy admin won't work for regular users, but it will still work great to users with ROLE_SUPER_ADMIN.\nBTW, the function renderForbiddenActtionError(), did not find the template. Not even present on vendor folder, version ^1.14.\nVery related to mine: http://symfony.com/doc/current/cookbook/bundles/override.html\nVery related to @reypm: http://symfony.com/doc/current/book/security.html\n. By the way, I finally solved my issue.\nTo override EasyAdminBundle controller or views, you have to follow the steps described in here:\nhttp://symfony.com/doc/current/cookbook/bundles/override.html\n. By the way, I finally solved my issue.\nTo override EasyAdminBundle controller or views, you have to follow the steps described in here:\nhttp://symfony.com/doc/current/cookbook/bundles/override.html\n. @javiereguiluz I see your point, thank you.\nI followed the documentation to override the controller and also the views. \nHere is how to override the Controller: \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\nMy AdminController:\n```\n//OhmyBundle/Controller/AdminController\n/\n * This file is part of the EasyAdminBundle.\n \n * (c) Javier Eguiluz javier.eguiluz@gmail.com\n\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n /\nnamespace OhmyBundle\\Controller;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Event\\EasyAdminEvents;\nuse Symfony\\Component\\EventDispatcher\\GenericEvent;\nuse Symfony\\Component\\HttpFoundation\\Request as Request;\nclass AdminController extends BaseAdminController\n{\n    /\n     * @Route(\"/\", name=\"easyadmin\")\n     * @Route(\"/\", name=\"admin\")\n     \n     * The 'admin' route is deprecated since version 1.8.0 and it will be removed in 2.0.\n     \n     * @param Request $request\n     \n     * @return RedirectResponse|Response\n     /\n    public function indexAction(Request $request) {\n        $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->redirectToBackendHomepage();\n    }\n\n    $action = $request->query->get('action', 'list');\n    if (!$this->isActionAllowed($action)) {\n        throw new ForbiddenActionException(array('action' => $action, 'entity' => $this->entity['name']));\n    }\n\n    return $this->executeDynamicMethod($action . '<EntityName>Action');\n}\n\n/**\n * The method that is executed when the user performs a 'list' action on an entity.\n *\n * @return Response\n */\nprotected function listAction() {\n    $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n    $this->dispatch(EasyAdminEvents::PRE_LIST);\n\n    $fields = $this->entity['list']['fields'];\n    $paginator = $this->findAll($this->entity['class'], $this->request->query->get('page', 1), $this->config['list']['max_results'], $this->request->query->get('sortField'), $this->request->query->get('sortDirection'));\n\n    $this->dispatch(EasyAdminEvents::POST_LIST, array('paginator' => $paginator));\n\n    return $this->render($this->entity['templates']['list'], array(\n                'paginator' => $paginator,\n                'fields' => $fields,\n                'delete_form_template' => $this->createDeleteForm($this->entity['name'], '__id__')->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'edit' action on an entity.\n *\n * @return RedirectResponse|Response\n */\nprotected function editAction() {\n    $this->dispatch(EasyAdminEvents::PRE_EDIT);\n\n    $id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n\n    } else {\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $entity = $easyadmin['item'];\n\n    if ($this->request->isXmlHttpRequest() && $property = $this->request->query->get('property')) {\n        $newValue = 'true' === strtolower($this->request->query->get('newValue'));\n        $fieldsMetadata = $this->entity['list']['fields'];\n\n        if (!isset($fieldsMetadata[$property]) || 'toggle' !== $fieldsMetadata[$property]['dataType']) {\n            throw new \\RuntimeException(sprintf('The type of the \"%s\" property is not \"toggle\".', $property));\n        }\n\n        $this->updateEntityProperty($entity, $property, $newValue);\n\n        return new Response((string) $newValue);\n    }\n\n    $fields = $this->entity['edit']['fields'];\n\n    $editForm = $this->executeDynamicMethod('create<EntityName>EditForm', array($entity, $fields));\n    $deleteForm = $this->createDeleteForm($this->entity['name'], $id);\n\n    $editForm->handleRequest($this->request);\n    if ($editForm->isValid()) {\n        $this->dispatch(EasyAdminEvents::PRE_UPDATE, array('entity' => $entity));\n\n        $this->executeDynamicMethod('preUpdate<EntityName>Entity', array($entity));\n        $this->em->flush();\n\n        $this->dispatch(EasyAdminEvents::POST_UPDATE, array('entity' => $entity));\n\n        $refererUrl = $this->request->query->get('referer', '');\n\n        return !empty($refererUrl) ? $this->redirect(urldecode($refererUrl)) : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n    $this->dispatch(EasyAdminEvents::POST_EDIT);\n\n    return $this->render($this->entity['templates']['edit'], array(\n                'form' => $editForm->createView(),\n                'entity_fields' => $fields,\n                'entity' => $entity,\n                'delete_form' => $deleteForm->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'show' action on an entity.\n *\n * @return Response\n */\nprotected function showAction() {\n    $this->dispatch(EasyAdminEvents::PRE_SHOW);\n\n    $id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n\n    } else {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $entity = $easyadmin['item'];\n\n    $fields = $this->entity['show']['fields'];\n    $deleteForm = $this->createDeleteForm($this->entity['name'], $id);\n\n    $this->dispatch(EasyAdminEvents::POST_SHOW, array(\n        'deleteForm' => $deleteForm,\n        'fields' => $fields,\n        'entity' => $entity,\n    ));\n\n    return $this->render($this->entity['templates']['show'], array(\n                'entity' => $entity,\n                'fields' => $fields,\n                'delete_form' => $deleteForm->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'new' action on an entity.\n *\n * @return RedirectResponse|Response\n */\nprotected function newAction() {\n    $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n    $this->dispatch(EasyAdminEvents::PRE_NEW);\n\n    $entity = $this->executeDynamicMethod('createNew<EntityName>Entity');\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $easyadmin['item'] = $entity;\n    $this->request->attributes->set('easyadmin', $easyadmin);\n\n    $fields = $this->entity['new']['fields'];\n\n    $newForm = $this->executeDynamicMethod('create<EntityName>NewForm', array($entity, $fields));\n\n    $newForm->handleRequest($this->request);\n    if ($newForm->isValid()) {\n        $this->dispatch(EasyAdminEvents::PRE_PERSIST, array('entity' => $entity));\n\n        $this->executeDynamicMethod('prePersist<EntityName>Entity', array($entity));\n\n        $this->em->persist($entity);\n        $this->em->flush();\n\n        $this->dispatch(EasyAdminEvents::POST_PERSIST, array('entity' => $entity));\n\n        $refererUrl = $this->request->query->get('referer', '');\n\n        return !empty($refererUrl) ? $this->redirect(urldecode($refererUrl)) : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n    $this->dispatch(EasyAdminEvents::POST_NEW, array(\n        'entity_fields' => $fields,\n        'form' => $newForm,\n        'entity' => $entity,\n    ));\n\n    return $this->render($this->entity['templates']['new'], array(\n                'form' => $newForm->createView(),\n                'entity_fields' => $fields,\n                'entity' => $entity,\n    ));\n}\n\n```\nHere is how to override templates:\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/464\n(assume they are under 'src\\OhmyBundle\\Resources\\views\\EasyAdminBundle\\views\\'). My config.yml is as follows:\n```\neasy_admin:\n     entities:\n         OhmyUser:\n             templates:\n                 layout: '@Ohmy/EasyAdminBundle/views/layout.html.twig'\n                 edit: '@Ohmy/EasyAdminBundle/views/edit.html.twig'\n                 list: '@Ohmy/EasyAdminBundle/views/list.html.twig'\n                 new: '@Ohmy/EasyAdminBundle/views/new.html.twig'\n                 show: '@Ohmy/EasyAdminBundle/views/show.html.twig'\n                 form: '@Ohmy/EasyAdminBundle/views/form.html.twig'\n                 flash_messages: '@Ohmy/EasyAdminBundle/views/flash_messages.html.twig'\n                 paginator: '@Ohmy/EasyAdminBundle/views/paginator.html.twig'\n                 field_array: '@Ohmy/EasyAdminBundle/views/field_array.html.twig'\n                 field_association: '@Ohmy/EasyAdminBundle/views/field_association.html.twig'\n                 field_bigint: '@Ohmy/EasyAdminBundle/views/field_bigint.html.twig'\n                 field_boolean: '@Ohmy/EasyAdminBundle/views/field_boolean.html.twig'\n                 field_date: '@Ohmy/EasyAdminBundle/views/field_date.html.twig'\n                 field_datetime: '@Ohmy/EasyAdminBundle/views/field_datetime.html.twig'\n                 field_datetimetz: '@Ohmy/EasyAdminBundle/views/field_datetimetz.html.twig'\n                 field_decimal: '@Ohmy/EasyAdminBundle/views/field_decimal.html.twig'\n                 field_float: '@Ohmy/EasyAdminBundle/views/field_float.html.twig'\n                 field_id: '@Ohmy/EasyAdminBundle/views/field_id.html.twig'\n                 field_image: ':easy_admin:field_image.html.twig'\n                 field_integer: '@Ohmy/EasyAdminBundle/views/field_integer.html.twig'\n                 field_simple_array: '@Ohmy/EasyAdminBundle/views/field_simple_array.html.twig'\n                 field_smallint: '@Ohmy/EasyAdminBundle/views/field_smallint.html.twig'\n                 field_string: '@Ohmy/EasyAdminBundle/views/field_string.html.twig'\n                 field_text: '@Ohmy/EasyAdminBundle/views/field_text.html.twig'\n                 field_time: '@Ohmy/EasyAdminBundle/views/field_time.html.twig'\n                 field_toggle: '@Ohmy/EasyAdminBundle/views/field_toggle.html.twig'\n                 label_empty: '@Ohmy/EasyAdminBundle/views/label_empty.html.twig'\n                 label_inaccessible: '@Ohmy/EasyAdminBundle/views/label_inaccessible.html.twig'\n                 label_null: ':easy_admin:label_null.html.twig'\n                 label_undefined: '@Ohmy/EasyAdminBundle/views/label_undefined.html.twig'\n```\nIt would be nice to have a way to override templates globally, apart than per entity.\n. @javiereguiluz I see your point, thank you.\nI followed the documentation to override the controller and also the views. \nHere is how to override the Controller: \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\nMy AdminController:\n```\n//OhmyBundle/Controller/AdminController\n/\n * This file is part of the EasyAdminBundle.\n \n * (c) Javier Eguiluz javier.eguiluz@gmail.com\n\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n /\nnamespace OhmyBundle\\Controller;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Event\\EasyAdminEvents;\nuse Symfony\\Component\\EventDispatcher\\GenericEvent;\nuse Symfony\\Component\\HttpFoundation\\Request as Request;\nclass AdminController extends BaseAdminController\n{\n    /\n     * @Route(\"/\", name=\"easyadmin\")\n     * @Route(\"/\", name=\"admin\")\n     \n     * The 'admin' route is deprecated since version 1.8.0 and it will be removed in 2.0.\n     \n     * @param Request $request\n     \n     * @return RedirectResponse|Response\n     /\n    public function indexAction(Request $request) {\n        $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->redirectToBackendHomepage();\n    }\n\n    $action = $request->query->get('action', 'list');\n    if (!$this->isActionAllowed($action)) {\n        throw new ForbiddenActionException(array('action' => $action, 'entity' => $this->entity['name']));\n    }\n\n    return $this->executeDynamicMethod($action . '<EntityName>Action');\n}\n\n/**\n * The method that is executed when the user performs a 'list' action on an entity.\n *\n * @return Response\n */\nprotected function listAction() {\n    $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n    $this->dispatch(EasyAdminEvents::PRE_LIST);\n\n    $fields = $this->entity['list']['fields'];\n    $paginator = $this->findAll($this->entity['class'], $this->request->query->get('page', 1), $this->config['list']['max_results'], $this->request->query->get('sortField'), $this->request->query->get('sortDirection'));\n\n    $this->dispatch(EasyAdminEvents::POST_LIST, array('paginator' => $paginator));\n\n    return $this->render($this->entity['templates']['list'], array(\n                'paginator' => $paginator,\n                'fields' => $fields,\n                'delete_form_template' => $this->createDeleteForm($this->entity['name'], '__id__')->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'edit' action on an entity.\n *\n * @return RedirectResponse|Response\n */\nprotected function editAction() {\n    $this->dispatch(EasyAdminEvents::PRE_EDIT);\n\n    $id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n\n    } else {\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $entity = $easyadmin['item'];\n\n    if ($this->request->isXmlHttpRequest() && $property = $this->request->query->get('property')) {\n        $newValue = 'true' === strtolower($this->request->query->get('newValue'));\n        $fieldsMetadata = $this->entity['list']['fields'];\n\n        if (!isset($fieldsMetadata[$property]) || 'toggle' !== $fieldsMetadata[$property]['dataType']) {\n            throw new \\RuntimeException(sprintf('The type of the \"%s\" property is not \"toggle\".', $property));\n        }\n\n        $this->updateEntityProperty($entity, $property, $newValue);\n\n        return new Response((string) $newValue);\n    }\n\n    $fields = $this->entity['edit']['fields'];\n\n    $editForm = $this->executeDynamicMethod('create<EntityName>EditForm', array($entity, $fields));\n    $deleteForm = $this->createDeleteForm($this->entity['name'], $id);\n\n    $editForm->handleRequest($this->request);\n    if ($editForm->isValid()) {\n        $this->dispatch(EasyAdminEvents::PRE_UPDATE, array('entity' => $entity));\n\n        $this->executeDynamicMethod('preUpdate<EntityName>Entity', array($entity));\n        $this->em->flush();\n\n        $this->dispatch(EasyAdminEvents::POST_UPDATE, array('entity' => $entity));\n\n        $refererUrl = $this->request->query->get('referer', '');\n\n        return !empty($refererUrl) ? $this->redirect(urldecode($refererUrl)) : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n    $this->dispatch(EasyAdminEvents::POST_EDIT);\n\n    return $this->render($this->entity['templates']['edit'], array(\n                'form' => $editForm->createView(),\n                'entity_fields' => $fields,\n                'entity' => $entity,\n                'delete_form' => $deleteForm->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'show' action on an entity.\n *\n * @return Response\n */\nprotected function showAction() {\n    $this->dispatch(EasyAdminEvents::PRE_SHOW);\n\n    $id = $this->request->query->get('id');\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if ($this->isGranted(\"ROLE_SUPER_ADMIN\") || $id === strval($user->getId())) {\n\n    } else {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n    if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n        //$this->renderForbiddenActionError($this->request->query->get('action'));\n        throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n    }\n\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $entity = $easyadmin['item'];\n\n    $fields = $this->entity['show']['fields'];\n    $deleteForm = $this->createDeleteForm($this->entity['name'], $id);\n\n    $this->dispatch(EasyAdminEvents::POST_SHOW, array(\n        'deleteForm' => $deleteForm,\n        'fields' => $fields,\n        'entity' => $entity,\n    ));\n\n    return $this->render($this->entity['templates']['show'], array(\n                'entity' => $entity,\n                'fields' => $fields,\n                'delete_form' => $deleteForm->createView(),\n    ));\n}\n\n/**\n * The method that is executed when the user performs a 'new' action on an entity.\n *\n * @return RedirectResponse|Response\n */\nprotected function newAction() {\n    $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, \"You have not the right permissions to render this page!\");\n    $this->dispatch(EasyAdminEvents::PRE_NEW);\n\n    $entity = $this->executeDynamicMethod('createNew<EntityName>Entity');\n\n    $easyadmin = $this->request->attributes->get('easyadmin');\n    $easyadmin['item'] = $entity;\n    $this->request->attributes->set('easyadmin', $easyadmin);\n\n    $fields = $this->entity['new']['fields'];\n\n    $newForm = $this->executeDynamicMethod('create<EntityName>NewForm', array($entity, $fields));\n\n    $newForm->handleRequest($this->request);\n    if ($newForm->isValid()) {\n        $this->dispatch(EasyAdminEvents::PRE_PERSIST, array('entity' => $entity));\n\n        $this->executeDynamicMethod('prePersist<EntityName>Entity', array($entity));\n\n        $this->em->persist($entity);\n        $this->em->flush();\n\n        $this->dispatch(EasyAdminEvents::POST_PERSIST, array('entity' => $entity));\n\n        $refererUrl = $this->request->query->get('referer', '');\n\n        return !empty($refererUrl) ? $this->redirect(urldecode($refererUrl)) : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n    $this->dispatch(EasyAdminEvents::POST_NEW, array(\n        'entity_fields' => $fields,\n        'form' => $newForm,\n        'entity' => $entity,\n    ));\n\n    return $this->render($this->entity['templates']['new'], array(\n                'form' => $newForm->createView(),\n                'entity_fields' => $fields,\n                'entity' => $entity,\n    ));\n}\n\n```\nHere is how to override templates:\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/464\n(assume they are under 'src\\OhmyBundle\\Resources\\views\\EasyAdminBundle\\views\\'). My config.yml is as follows:\n```\neasy_admin:\n     entities:\n         OhmyUser:\n             templates:\n                 layout: '@Ohmy/EasyAdminBundle/views/layout.html.twig'\n                 edit: '@Ohmy/EasyAdminBundle/views/edit.html.twig'\n                 list: '@Ohmy/EasyAdminBundle/views/list.html.twig'\n                 new: '@Ohmy/EasyAdminBundle/views/new.html.twig'\n                 show: '@Ohmy/EasyAdminBundle/views/show.html.twig'\n                 form: '@Ohmy/EasyAdminBundle/views/form.html.twig'\n                 flash_messages: '@Ohmy/EasyAdminBundle/views/flash_messages.html.twig'\n                 paginator: '@Ohmy/EasyAdminBundle/views/paginator.html.twig'\n                 field_array: '@Ohmy/EasyAdminBundle/views/field_array.html.twig'\n                 field_association: '@Ohmy/EasyAdminBundle/views/field_association.html.twig'\n                 field_bigint: '@Ohmy/EasyAdminBundle/views/field_bigint.html.twig'\n                 field_boolean: '@Ohmy/EasyAdminBundle/views/field_boolean.html.twig'\n                 field_date: '@Ohmy/EasyAdminBundle/views/field_date.html.twig'\n                 field_datetime: '@Ohmy/EasyAdminBundle/views/field_datetime.html.twig'\n                 field_datetimetz: '@Ohmy/EasyAdminBundle/views/field_datetimetz.html.twig'\n                 field_decimal: '@Ohmy/EasyAdminBundle/views/field_decimal.html.twig'\n                 field_float: '@Ohmy/EasyAdminBundle/views/field_float.html.twig'\n                 field_id: '@Ohmy/EasyAdminBundle/views/field_id.html.twig'\n                 field_image: ':easy_admin:field_image.html.twig'\n                 field_integer: '@Ohmy/EasyAdminBundle/views/field_integer.html.twig'\n                 field_simple_array: '@Ohmy/EasyAdminBundle/views/field_simple_array.html.twig'\n                 field_smallint: '@Ohmy/EasyAdminBundle/views/field_smallint.html.twig'\n                 field_string: '@Ohmy/EasyAdminBundle/views/field_string.html.twig'\n                 field_text: '@Ohmy/EasyAdminBundle/views/field_text.html.twig'\n                 field_time: '@Ohmy/EasyAdminBundle/views/field_time.html.twig'\n                 field_toggle: '@Ohmy/EasyAdminBundle/views/field_toggle.html.twig'\n                 label_empty: '@Ohmy/EasyAdminBundle/views/label_empty.html.twig'\n                 label_inaccessible: '@Ohmy/EasyAdminBundle/views/label_inaccessible.html.twig'\n                 label_null: ':easy_admin:label_null.html.twig'\n                 label_undefined: '@Ohmy/EasyAdminBundle/views/label_undefined.html.twig'\n```\nIt would be nice to have a way to override templates globally, apart than per entity.\n. @Pierstoval is right, I missed that. I moved the logic to the indexAction, here it is:\n```\n    public function indexAction(Request $request) {\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->redirectToBackendHomepage();\n    }\n\n    $action = $request->query->get('action', 'list');\n    if (!$this->isActionAllowed($action)) {\n        throw new ForbiddenActionException(array('action' => $action, 'entity' => $this->entity['name']));\n    }\n\n    $user = $this->get('security.token_storage')->getToken()->getUser();\n    if (!$this->isGranted(\"ROLE_SUPER_ADMIN\")) {\n        if ($request->query->get('entity') === 'OhmyUser') {\n            $id = $request->query->get('id');\n\n            if (is_null($id)) {\n                //$this->renderForbiddenActionError($this->request->query->get('action'));\n                return $this->redirect($this->generateUrl('easyadmin', array('action' => 'show', 'entity' => $this->entity['name'], 'id' => $user->getId())));\n            }\n\n\n            if (!$this->isGranted(\"ROLE_SUPER_ADMIN\") && is_null($user)) {\n                //$this->renderForbiddenActionError($this->request->query->get('action'));\n                throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n            }\n\n            if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n                //$this->renderForbiddenActionError($this->request->query->get('action'));\n                throw new \\Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException();\n            }\n\n\n            $action = $request->query->get('action');\n            switch ($action) {\n                default:\n                case 'show':\n                    return $this->executeDynamicMethod('show' . '<EntityName>Action');\n                case 'edit':\n                    return $this->executeDynamicMethod('edit' . '<EntityName>Action');\n            }\n        }\n    }\n    return $this->executeDynamicMethod($action . '<EntityName>Action');\n}\n\n```\nThis way I force non ROLE_SUPER_ADMIN users to be only able to view 'edit' and 'show' views. In order to acomplish that, I also had to modify the return sentences of some other actions:\nEdit and Delete actions, so it does not go back tu list view unless user is privileged:\nreturn !empty($refererUrl) ? $this->redirect(urldecode($refererUrl)) :\n    $this->isGranted('ROLE_SUPER_ADMIN') ? \n        $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name']))) :\n        $this->redirect($this->generateUrl('easyadmin', array('action' => 'show', 'entity' => $this->entity['name'], 'id' => $id)));\nOn the YAML config, I placed all the view overrides in global scope:\n```\neasyadmin:\n    design:\n        templates:\n           layout: '@Ohmy/EasyAdminBundle/views/layout.html.twig'\n           edit: '@Ohmy/EasyAdminBundle/views/edit.html.twig'\n           list: '@Ohmy/EasyAdminBundle/views/list.html.twig'\n           new: '@Ohmy/EasyAdminBundle/views/new.html.twig'\n           show: '@Ohmy/EasyAdminBundle/views/show.html.twig'\n           # Absolutely everyone. 'form' launches a dependency injection exception, \n           # as the bundle thinks it is another setting\nentities:\n    Servers:\n        class: OhmyBundle\\Entity\\Server\n        label: 'Servers'\n    OhmyUser:\n        class: OhmyBundle\\Entity\\OhmyUser\n        label: 'Users'\n        list:\n            title: \"Users list.\"\n            fields: [ {label: \"User\", property: \"usernameCanonical\" }, \"phone\",\"address\",\"company\",\"vat\",\"firstName\",\"lastName\", \"password\"]\n        show:\n            title: \"Show User.\"\n            fields: [ {label: \"User\", property: \"usernameCanonical\" }, \"phone\",\"address\",\"company\",\"vat\",\"firstName\",\"lastName\", \"password\"]\n            actions: ['edit', '-delete', '-list']\n        edit:\n            title: \"Edit User.\"\n            fields: [ {label: \"User\", property: \"usernameCanonical\" }, \"phone\",\"address\",\"company\",\"vat\",\"firstName\",\"lastName\", \"password\"]\n            actions: ['-delete', '-list']\n        new:\n            title: \"New User.\"\n            fields: [ {label: \"User\", property: \"usernameCanonical\" }, \"phone\",\"address\",\"company\",\"vat\",\"firstName\",\"lastName\", \"password\"]\n\n```\nSo the next step is customizing the twig templates by using is_granted('ROLE_SUPER_ADMIN') function to change views behaviour based on user role. For example, in menu.html.twig, I wrote:\nline 20:\n{% if is_granted('ROLE_SUPER_ADMIN') %}\n        <a href=\"{{ path }}\" {% if item.target|default(false) %}target=\"{{ item.target }}\"{% endif %}>\n            {% if item.icon is not empty %}<i class=\"fa {{ item.icon }}\"></i>{% endif %}\n            <span>{{ item.label|trans }}</span>\n            {% if item.children|default([]) is not empty %}<i class=\"fa fa-angle-left pull-right\"></i>{% endif %}\n        </a>\n        {% else %}\n            {% if item.label == 'Servers' %}\n                <a href=\"{{ path }}\" {% if item.target|default(false) %}target=\"{{ item.target }}\"{% endif %}>\n                {% if item.icon is not empty %}<i class=\"fa {{ item.icon }}\"></i>{% endif %}\n                <span>{{ item.label|trans }}</span>\n                {% if item.children|default([]) is not empty %}<i class=\"fa fa-angle-left pull-right\"></i>{% endif %}\n            {% endif %}\n        {% endif `%}\nIs a simple proof of concept, but it works, and is way better than hiding content by using CSS (as anyone with a F12 key could see the content ;) )\nNow I almost have all the functionalities of EasyAdmin for the ROLE_SUPER_ADMIN and a very limited instance of it for regular users.\nNow I am wondering if there is a way to customize view fields shown based on roles... On this case, it would be desirable for the admin to view all de FOSUser fields (OhmyUser extends the model class), while keeping regular users to view (and furthermore, edit...) only certain ones.\n@javiereguiluz BTW, this function does not work at all:\n$this->renderForbiddenActionError($this->request->query->get('action'));\nas the twig template that it tries to render does not exist on version \"^1.14\".\n. ",
    "bernardpeh": "hi all, chipping in my 5 cents here. first of all, thanks javier for the wonderful bundle. I think that roles and permission support is still something highly sought after but I agree that doing it correctly requires a lot of thinking and code refactoring. Ideally, we should be able to manipulate the yaml to support role, ie something along the lines of\neasy_admin:\n    entities:\n        UserLog:\n            class: AppBundle\\Entity\\UserLog\n            label: admin.link.user_log\n            role: ROLE_ADMIN\n                 show:\n                       actions: ['list', '-edit', '-delete']\n                       .... \n            role: ROLE_USER\n                list:\n                    actions: ['show', '-edit', '-delete']\n                    ....\nWe should be able to implement this using a combination of compilerpass and event listeners. For those who are interested, I've wrote a simple article describing the process. It doesn't cover everything but should points to a direction - https://leanpub.com/practicalsymfony3/read#leanpub-auto-adding-simple-access-control-to-easyadminbundle\n. I don't know french but nice work @laurent-bientz ... An alternative to using \"currentEntityConfig[actionName].role\" in the views is to overwrite getActionsForItem as describe in https://leanpub.com/practicalsymfony3/read#leanpub-auto-adding-roles-to-easyadmin-actions. ",
    "AntoscencoVladimir": "@bernardpeh Thanks man, you saved my day . @bernardpeh Thanks man, you saved my day . @maxenceboucas Hi I just try to describe how I implemented tags like you want, except of styles but I think you can do it by yourself.\nIt will be like this:\n\n(Also you can see issues about this)\nTo do it \n1.First in my News Entity I have:\n```php\n<?php\nnamespace AcmeBundle\\Entity\\News;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/*\n * @ORM\\Entity\n * @ORM\\Table(name=\"news\")\n /\nclass News\n{\n/**\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n * @ORM\\Column(type=\"integer\")\n */\nprivate $id;\n\n/**\n * @ORM\\Column(type=\"string\", nullable=false)\n */\nprivate $title;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"AcmeBundle\\Entity\\News\\NewsTag\", cascade={\"persist\"})\n */\nprivate $tags;\n\n\n/**\n * @return mixed\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @param mixed $id\n */\npublic function setId($id)\n{\n    $this->id = $id;\n}\n\n/**\n * @return mixed\n */\npublic function getTitle()\n{\n    return $this->title;\n}\n\n/**\n * @param mixed $title\n */\npublic function setTitle($title)\n{\n    $this->title = $title;\n}\n\n/**\n * -------------------------- Tags ------------------------------\n */\n\n/**\n * @param NewsTag $tag\n */\npublic function addTag(NewsTag $tag)\n{\n    $this->tags->add($tag);\n}\n\npublic function removeTag(NewsTag $tag)\n{\n    // ...\n}\n\n\n/**\n * -------------------------- Tags end-------------------------------\n */\n\npublic function getTags()\n{\n    return $this->tags;\n}\n\n\n\npublic function __construct()\n{\n\n    $this->tags = new ArrayCollection();\n\n}\n\n/**\n * {@inheritdoc}\n */\npublic function __toString()\n{\n    return (string) $this->getTitle();\n\n}\n\n}\n```\n2.Second my Tag Entity:\n```php\n<?php\nnamespace AcmeBundle\\Entity\\News;\nuse Doctrine\\ORM\\Mapping as ORM;\n/\n\n * @ORM\\Table(name=\"news_tags\")\n * @ORM\\Entity\n /\nclass NewsTag\n{\n    /\n\n     * @var int\n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    protected $id = null;\n/**\n *\n * @var string\n * @ORM\\Column(type=\"string\")\n */\nprotected $name;\n\n\nprotected $news;\n\n\n/**\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @param string $name\n */\npublic function setName($name)\n{\n    $this->name = $name;\n}\n\n/**\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n\n\npublic function __construct()\n{\n\n}\n\npublic function __toString()\n{\n    return $this->getName();\n}\n\n}\n```\n\nCustomize your admin controller and add action:\n\n```php\npublic function createNewsEntityFormBuilder(News $entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    $formBuilder->remove('tags');\n\n    $formBuilder->add('tags', CollectionType::class, array(\n        'allow_add'    => true,\n        'allow_delete' => true,\n        'by_reference' => false,\n        'entry_type' => TagType::class\n    ));\n\n    return $formBuilder;\n}\n\n4. Add Tag Type in AcmeBundle\\Form\\Typephp\n//AcmeBundle\\Form\\Type\\TagType.php\nphp\n\n<pnamespace AcmeBundle\\Form\\Type;\nuse AcmeBundle\\Entity\\News\\NewsTag;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nclass TagType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder->add('name');\n    }\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => NewsTag::class,\n    ));\n}\n\n}\n```\n\nIn your easy admin config:\n\n```yml\neasy_admin:\n    entities:\n        News:\n            class: AcmeBundle\\Entity\\News\\News\n            label: 'News'\n            form:\n                title: \"\"\n                fields:\n                    #your fields ...\n                    - { property: 'tags', type: collection }\n```\n. @maxenceboucas please create exactly like I wrote (don't forget update your schema) and don't add your another's getters setters etc. (you can add it later) it should work in my bundle all works fine. ",
    "Yondz": "Hey guys, following to this interesting topic, I'm using something based on @Glideh solution with per-view role, not sure if it's stable enough but here's my checkPermission() version.\n```php\n private function checkPermissions()\n  {\n  $easyAdmin = $this->request->attributes->get('easyadmin');\n\n  if (isset($easyAdmin['entity'][$easyAdmin['view']]['require_permission'])) {\n      $requiredPermission = $easyAdmin['entity'][$easyAdmin['view']]['require_permission'];\n  } else if(isset($easyAdmin['entity']['require_permission']) ){\n      $requiredPermission = $easyAdmin['entity']['require_permission'];\n  } else {\n      $view = $easyAdmin['view'];\n      $entity = $easyAdmin['entity']['name'];\n      $requiredPermission = 'ROLE_'.strtoupper($view).'_'.strtoupper($entity);\n  }\n  $this->denyAccessUnlessGranted(\n      $requiredPermission, null, $requiredPermission.' permission required'\n  );\n\n}\n```\nLike this I'm still keeping the default ROLE policy but I can define roles this way : \nyaml\neasy_admin:\n  entities:\n    User:\n      class: AppBundle\\Entity\\User\n      label: 'Utilisateurs'\n      require_permission: \"ROLE_TEST2\" # Defaut permission for all views without the require_permission option\n      # for new user\n      new:\n        require_permission: \"ROLE_TEST1\"\n        fields:\n         ...\n      edit: \n         # No permission here, it'll take the one from User, or ROLE_EDIT_USER if none is defined on User\n        actions: ['-delete', '-list']\n        .... Hey guys, following to this interesting topic, I'm using something based on @Glideh solution with per-view role, not sure if it's stable enough but here's my checkPermission() version.\n```php\n private function checkPermissions()\n  {\n  $easyAdmin = $this->request->attributes->get('easyadmin');\n\n  if (isset($easyAdmin['entity'][$easyAdmin['view']]['require_permission'])) {\n      $requiredPermission = $easyAdmin['entity'][$easyAdmin['view']]['require_permission'];\n  } else if(isset($easyAdmin['entity']['require_permission']) ){\n      $requiredPermission = $easyAdmin['entity']['require_permission'];\n  } else {\n      $view = $easyAdmin['view'];\n      $entity = $easyAdmin['entity']['name'];\n      $requiredPermission = 'ROLE_'.strtoupper($view).'_'.strtoupper($entity);\n  }\n  $this->denyAccessUnlessGranted(\n      $requiredPermission, null, $requiredPermission.' permission required'\n  );\n\n}\n```\nLike this I'm still keeping the default ROLE policy but I can define roles this way : \nyaml\neasy_admin:\n  entities:\n    User:\n      class: AppBundle\\Entity\\User\n      label: 'Utilisateurs'\n      require_permission: \"ROLE_TEST2\" # Defaut permission for all views without the require_permission option\n      # for new user\n      new:\n        require_permission: \"ROLE_TEST1\"\n        fields:\n         ...\n      edit: \n         # No permission here, it'll take the one from User, or ROLE_EDIT_USER if none is defined on User\n        actions: ['-delete', '-list']\n        .... ",
    "luislaborda": "Is the option of show/hide an entity menu item available by user role? or still to be implemented. . ",
    "laurent-bientz": "For french people (sry), if you want to implement some ACL while waiting EasyAdmin 2.0, a quick draft of how we've implemented it in our company (based on @bernardpeh works):\n\nhttps://github.com/WandiParis/documentation/blob/master/symfony/06-easy-admin-bundle-acl.md. @guyz, sorry for the french, it was an internal workshop  ;)\n\n@bernardpeh thx for your clever idea for overwriting actions in the view side, really great approach!\nIt was for us the worse, crappy and less generic part of this work, i'll give it a try on the next project.. @reypm not now sry, too many work.\nTry to follow and adapt works from @bernardpeh, it's really nice documented:\n\nhttps://leanpub.com/practicalsymfony3/read#leanpub-auto-adding-simple-access-control-to-easyadminbundle\n\nPut your questions here if any problems.\nCheers. The situation appears when a persistant non-nullable field (eg \"photo\") is binded on a virtual field for the file (eg photoFile) with an Assert\\NotBlank().\nWhen we try to edit the recordset (no problem when adding), the assert on the file forces user to reupload the file, even if the field photo is set (in front with HTML validation and in back with assert on file), so the validation fails.\nPutting a validation group on each entity with a non-nullable file is a pain.\nDon't know if it's the best way but I solve the problem with an expression assert which checks both fields instead of only the virtual field:\n``` php\n/\n * @var File\n \n * @Vich\\UploadableField(mapping=\"about_image\", fileNameProperty=\"photo\")\n * @Assert\\Expression(\"this.getPhotoFile() or this.getPhoto()\", message=\"Vous devez uploader une photo.\")\n * @Assert\\Image(\n *     minWidth=\"1600\",\n *     minWidthMessage=\"Votre photo doit faire minimum 1600px de largeur.\",\n *     minHeight=\"500\",\n *     minHeightMessage=\"Votre photo doit faire minimum 500px de hauteur.\",\n *     mimeTypes={\"image/jpeg\", \"image/png\", \"image/gif\"},\n *     mimeTypesMessage=\"Formats autoris\u00e9s : .png, .jpeg, .jpg, gif \"\n *     )\n /\nprivate $photoFile;\n/\n * @var string\n \n * @ORM\\Column(name=\"photo\", type=\"string\", length=255)\n /\nprivate $photo;\n```\nand don't forget to disable the allow_delete on the field, cause nonsense to allow delete on a non-nullable field:\nyml\n- { property: 'photoFile', label: 'Photo', type: 'vich_image', help: 'Taille recommand\u00e9e: 1920*620 px', type_options: { allow_delete: false } }\nHope it helps, if someone have a best idea, I'll take it ;) \n. @CruzyCruz, yes I did, no problem in Front but error (caused by NotBlank() assert) after submiting.\nNo OneToOne relation for me, it's directly a field in the current entity, maybe it's the difference.\n. > I have to add at relationship level (i.e on the image property of my main entity) anAssert\\NotNull() in addition to @Assert\\Valid()\nyep, that's why.\n\nMoreover, the displayed error message is at the top of the page.\n\nNot really ergonomic but same for me in the case of Assert only on the file :/\nHowever with my expression assert, the error is displayed at the right place.\n\nI will consider your solution when I have time. I let you know soon.\n\nOk, you can also manage it with defining the same kind of tests in an Assert\\Callback(). Hi @HeahDude \n1 year later, still the problem,\nYour fix/hack (putting the right class in the label_attr) helped me, so thanks.\nStill no better way to add required in front automatically (just based on validation)?. In our company, we've succeeded the integration like that:\nyml\nassets:\n    js:\n        - '/bundles/cksourceckfinder/ckfinder/ckfinder.js'\n        - '/js/setup-ckfinder.js'\nand in setup-ckfinder.js:\njs\nwindow.onload = function () {\n    if (window.CKEDITOR){\n        CKFinder.config( { connectorPath: '/app.php/ckfinder/connector' } );\n        for (var ckInstance in CKEDITOR.instances){\n            CKFinder.setupCKEditor(CKEDITOR.instances[ckInstance]);\n        }\n    }\n}\nif it helps\n. Hi @javiereguiluz \nWe've improved the JS code since I posted my message. \nMy previous code wasn't perfect with the absolute URI on 'app.php' and could cause cache problem when using app_dev environment.\njs\n// web/js/setup-ckfinder.js\nwindow.onload = function () {\n    if (window.CKEDITOR){\n        var path = '/ckfinder/connector';\n        CKFinder.config( { connectorPath: (window.location.pathname.indexOf(\"app_dev.php\") == -1 ) ? path : '/app_dev.php'+path} );\n        for (var ckInstance in CKEDITOR.instances){\n            CKFinder.setupCKEditor(CKEDITOR.instances[ckInstance]);\n        }\n    }\n}\nCheers\n. Hi @CruzyCruz \nOn the one hand, I think keeping the \"empty\" before adding new element is normal (same thing if we've deleted all the children), but on the other hand, when we've added a new element, for me (and for customer), it's weird to keep it, even if u'r right, it's not created yet.\nI understand your explanation but why it disappears if validation fails? cause no persist yet and no relations are set ; so if it was a wanted state, why this difference between load and reload?\n@javiereguiluz what's your point of view?. @CruzyCruz \nGreat catch, so now we know why no empty label are present when reloading with errors, even if the entity is not yet persisted, the relation exists.\nMaybe @javiereguiluz can say to us if it's possible to remove the empty label directly in front-end while adding children or a custom entity?. @CruzyCruz \nyep, I already saw that, I'll give it a try when I can but I'm pretty sure that it's the same css class when collection is empty... and in this case, it's a good point to have this info.\nCheers. @CruzyCruz \nI fixed it with a simple css override:\nyaml\neasy_admin:\n    design:\n        assets:\n            css:\n                - '/assets/portal/css/easyadmin-tuning.css'\n```css\n.field-user .collection-empty,\nshop_subdomains .collection-empty{\ndisplay:none;\n\n}\n```\nI know it's crappy but it's quick.. @CruzyCruz \nI fixed it with a simple css override:\nyaml\neasy_admin:\n    design:\n        assets:\n            css:\n                - '/assets/portal/css/easyadmin-tuning.css'\n```css\n.field-user .collection-empty,\nshop_subdomains .collection-empty{\ndisplay:none;\n\n}\n```\nI know it's crappy but it's quick.. @adidoes: nop, I just dont display images on listing ;)\nMaybe you can patch it with a virtual property and write a custom getter who does the job.... @adidoes and if other found this issue a year later -- I've a generic solution for this now ;)\nyaml\n- { property: image, label: 'Picture', template: 'vich_uploader_image.html.twig', propertyFile: 'logoFile' }\nwhere propertyFile is a custom attribute to tell which property stores the file.\nThen create your own template in templates/easy_admin/vich_uploader_image.html.twig (Symfony 4):\n```twig\n{% if value is not null %}\n    {%  set uid = random(99999) ~ 'now'|date('U') ~ random(99999) %} {# crappy #}\n<a href=\"#\" class=\"easyadmin-thumbnail\" data-featherlight=\"#easyadmin-lightbox-{{ uid }}\" data-featherlight-close-on-click=\"anywhere\">\n    <img src=\"{{ vich_uploader_asset(item, field_options.propertyFile) }}\">\n</a>\n\n<div id=\"easyadmin-lightbox-{{ uid }}\" class=\"easyadmin-lightbox\">\n    <img src=\"{{ vich_uploader_asset(item, field_options.propertyFile) }}\">\n</div>\n\n{% else %}\n    {{ 'label.null'|trans(domain = 'EasyAdminBundle') }}\n{% endif %}\n```\nOr use our EasyAdmin's extension, it's packaged inside \ud83d\udc4d \nhttps://github.com/WandiParis/EasyAdminPlusBundle\nWe have the same behavior for VichFile.. @adidoes and if other found this issue a year later -- I've a generic solution for this now ;)\nyaml\n- { property: image, label: 'Picture', template: 'vich_uploader_image.html.twig', propertyFile: 'logoFile' }\nwhere propertyFile is a custom attribute to tell which property stores the file.\nThen create your own template in templates/easy_admin/vich_uploader_image.html.twig (Symfony 4):\n```twig\n{% if value is not null %}\n    {%  set uid = random(99999) ~ 'now'|date('U') ~ random(99999) %} {# crappy #}\n<a href=\"#\" class=\"easyadmin-thumbnail\" data-featherlight=\"#easyadmin-lightbox-{{ uid }}\" data-featherlight-close-on-click=\"anywhere\">\n    <img src=\"{{ vich_uploader_asset(item, field_options.propertyFile) }}\">\n</a>\n\n<div id=\"easyadmin-lightbox-{{ uid }}\" class=\"easyadmin-lightbox\">\n    <img src=\"{{ vich_uploader_asset(item, field_options.propertyFile) }}\">\n</div>\n\n{% else %}\n    {{ 'label.null'|trans(domain = 'EasyAdminBundle') }}\n{% endif %}\n```\nOr use our EasyAdmin's extension, it's packaged inside \ud83d\udc4d \nhttps://github.com/WandiParis/EasyAdminPlusBundle\nWe have the same behavior for VichFile.. Hi @javiereguiluz, didn't see that, thanks.\nGood news if you've a definitive solution to solve this cause your hack forces us to reorder elements by hand.. Hi @javiereguiluz, didn't see that, thanks.\nGood news if you've a definitive solution to solve this cause your hack forces us to reorder elements by hand.. same than #1447, have a look.. Hey,\nYes, you need ArrayCollection and add/remove methods.\nFor adding on the fly children, you need cascade={\"persist\"}  and Assert\\Valid() on the OneToMany (in my example it's FluoresceAssert\\Validate cause I need to validate on a special validation group and not possible with basic Assert\\Valid).\nIn your add{Entity}, you also need to set the backwards reference ($children->setParent($this)).\nIf u want to also remove children when deleting parent entity, u need orphanRemoval=true.\nBasic exemple:\n```php\n/\n * WeightList.\n \n * @ORM\\Table(name=\"sh_weight_list\")\n * @ORM\\Entity(repositoryClass=\"ShopBundle\\Repository\\WeightListRepository\")\n * @Gedmo\\SoftDeleteable(fieldName=\"deletedAt\", timeAware=false)\n /\nclass WeightList\n{\n    use TimestampableEntity;\n    use SoftDeleteableEntity;\n# ...\n\n/**\n * @var Collection\n *\n * @ORM\\OneToMany(targetEntity=\"ShopBundle\\Entity\\WeightMultiple\", mappedBy=\"list\", cascade={\"persist\",\"remove\"}, orphanRemoval=true)\n * @Assert\\Count(min=\"1\", minMessage=\"Vous devez lier minimum {{ limit }} multiple\")\n * @FluoresceAssert\\Validate(groups={\"BoProductMultipleList\"})\n */\nprivate $multiples;\n\n# ...\n\n/**\n * Constructor.\n */\npublic function __construct()\n{\n    $this->multiples = new ArrayCollection();\n}\n\n# ...\n\n/**\n * Add multiple.\n *\n * @param WeightMultiple $multiple\n *\n * @return WeightList\n */\npublic function addMultiple(WeightMultiple $multiple)\n{\n    $this->multiples[] = $multiple;\n    $multiple->setList($this);\n\n    return $this;\n}\n\n/**\n * Remove multiple.\n *\n * @param WeightMultiple $multiple\n */\npublic function removeMultiple(WeightMultiple $multiple)\n{\n    $this->multiples->removeElement($multiple);\n}\n\n/**\n * Get multiples.\n *\n * @return Collection\n */\npublic function getMultiples()\n{\n    return $this->multiples;\n}\n\n# ...\n\n}\n```\n```php\n/\n * WeightMultiple.\n \n * @ORM\\Table(name=\"sh_weight_multiple\")\n * @ORM\\Entity(repositoryClass=\"ShopBundle\\Repository\\WeightMultipleRepository\")\n * @Gedmo\\SoftDeleteable(fieldName=\"deletedAt\", timeAware=false)\n /\nclass WeightMultiple implements FreezableInterface\n{\n    use TimestampableEntity;\n    use SoftDeleteableEntity;\n# ...\n\n/**\n * @var WeightList\n *\n * @ORM\\ManyToOne(targetEntity=\"ShopBundle\\Entity\\WeightList\", inversedBy=\"multiples\")\n * @ORM\\JoinColumn(nullable=false)\n * @Assert\\NotNull()\n */\nprivate $list;\n\n# ...\n\n}\n```\nEdit:\n@alexcandy91, in the easyadmin settings, for your OneToMany, you've to define a collection and declare your own EntityType:\nyaml\n- { property: 'multiples', label: 'Multiples de poids', type: 'collection', type_options: { entry_type: 'ShopBundle\\Form\\Type\\WeightMultipleType', by_reference: false } }\n```php\n<?php\nnamespace ShopBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n/\n * Class WeightMultipleType.\n \n * used by easyadminbundle custom bo\n /\nclass WeightMultipleType extends AbstractType\n{\n    /\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('value', IntegerType::class)\n        ;\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'ShopBundle\\Entity\\WeightMultiple',\n    ));\n}\n\n}\n```\nHope it helps!. Hi @matudelatower,\nFor a embeded collection, the correct property is entry_type, not type, eg:\nyaml\n- { property: 'subdomains', label: 'Sous-domaines', type: 'collection', type_options: { entry_type: 'PortalBundle\\Form\\Type\\SubdomainType', by_reference: false } }\nHope it helps;. @Benjamin-Porquet And? it's not working? what's the pb?. @Benjamin-Porquet: oh ok, sry dude ;)\n@matudelatower: is it working for you?. @matudelatower: my mistake, didn't see it was sf 2x.\nAccording to the doc, the correct option is type, so I don't know why your first try wasn't working.\nMaybe someone using sf2 could helps?. I've bypassed the pb with a custom service in which i'm trying to validate the correct group based on my type...\nIf someone is interested:\n```php\nclass PanelValidationGroupsValidator extends ConstraintValidator\n{\n    private $validator;\npublic function __construct(ValidatorInterface $validator)\n{\n    $this->validator = $validator;\n}\n\npublic function validate($value, Constraint $constraint)\n{\n    if ($value === null) {\n        return;\n    }\n\n    if (!$value instanceof Panel) {\n        throw new UnexpectedTypeException($value, 'Panel');\n    }\n\n    /** @var Panel $panel */\n    $panel = $value;\n\n    $violations = [];\n    switch ($panel->getType()){\n        case \"intro\":\n            $violations = $this->validator->validate($panel, null, [\"PanelIntro\"]);\n            break;\n        case \"lang\":\n            $violations = $this->validator->validate($panel, null, [\"PanelLang\"]);\n            break;\n        case \"question\":\n            $violations = $this->validator->validate($panel, null, [\"PanelQuestion\"]);\n            break;\n        case \"form\":\n            $violations = $this->validator->validate($panel, null, [\"PanelForm\"]);\n            break;\n        case \"splash\":\n            $violations = $this->validator->validate($panel, null, [\"PanelSplash\"]);\n            break;\n        case \"thanks\":\n            $violations = $this->validator->validate($panel, null, [\"PanelThanks\"]);\n            break;\n    }\n\n    foreach($violations as $violation){\n        /** @var ConstraintViolation $violation */\n        $this->context->buildViolation($violation->getMessage())\n            ->atPath($violation->getPropertyPath())\n            ->addViolation();\n    }\n}\n\n}\n```\nBut i'm thinking the problem is not related to easyadmin.\nLike you, i'm not confortable with Form behavior, so i'm not sure.. I've bypassed the pb with a custom service in which i'm trying to validate the correct group based on my type...\nIf someone is interested:\n```php\nclass PanelValidationGroupsValidator extends ConstraintValidator\n{\n    private $validator;\npublic function __construct(ValidatorInterface $validator)\n{\n    $this->validator = $validator;\n}\n\npublic function validate($value, Constraint $constraint)\n{\n    if ($value === null) {\n        return;\n    }\n\n    if (!$value instanceof Panel) {\n        throw new UnexpectedTypeException($value, 'Panel');\n    }\n\n    /** @var Panel $panel */\n    $panel = $value;\n\n    $violations = [];\n    switch ($panel->getType()){\n        case \"intro\":\n            $violations = $this->validator->validate($panel, null, [\"PanelIntro\"]);\n            break;\n        case \"lang\":\n            $violations = $this->validator->validate($panel, null, [\"PanelLang\"]);\n            break;\n        case \"question\":\n            $violations = $this->validator->validate($panel, null, [\"PanelQuestion\"]);\n            break;\n        case \"form\":\n            $violations = $this->validator->validate($panel, null, [\"PanelForm\"]);\n            break;\n        case \"splash\":\n            $violations = $this->validator->validate($panel, null, [\"PanelSplash\"]);\n            break;\n        case \"thanks\":\n            $violations = $this->validator->validate($panel, null, [\"PanelThanks\"]);\n            break;\n    }\n\n    foreach($violations as $violation){\n        /** @var ConstraintViolation $violation */\n        $this->context->buildViolation($violation->getMessage())\n            ->atPath($violation->getPropertyPath())\n            ->addViolation();\n    }\n}\n\n}\n```\nBut i'm thinking the problem is not related to easyadmin.\nLike you, i'm not confortable with Form behavior, so i'm not sure.. Hey @javiereguiluz \nStill the same, I don't know why but the FormType only tries to validate Default group.. Hi,\nIn your form type, did u set the binded data_class?\neg:\nphp\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'MyBundle\\Entity\\Url',\n    ));\n}. @phpPhil it's very weird cause your full example seems pretty good.\nYou can delete the getName() method in your form type, it's deprecated since 2.8 if I remember ; I don't think it'll change something but who knows.\nWhen you inspect with dev tools/firebug your html collection, which name have each field?\nI don't understand which field of your Url entity is binded this collection.\n. Hey @phpPhil \nI finally found the problem, you're unlucky for a first try ;)\nThe problem is that you choose UrlType as custom form type name and it's a native Sf type. \nI don't know if it's a Symfony or EasyAdmin problem, but when the type is resolved, it's overriden by the native UrlType.\nJust rename your FormType and it's ok.\nCheers. you're welcome!\n@javiereguiluz: if u want to take a look? if we name our custom form type UrlType, it is resolved (and erased) as the native Symfony UrlType despite the FQN.. Hi,\n2 ways:\n- use the native birthday type directly in the yml (last 120 years)\n- define your own custom form type and set the range in the years setting. Hey @phpPhil,\nDid u implement addUrl(), getUrls() and removeUrl() methods in your Article Entity? \nDid u initialize a new ArrayCollection() on your collection in your constructor?\nAnd you can add the annotation orphanRemoval=true to your OneToMany.\n. @phpPhil: any news?\nIf I omit orphanRemoval=true, I got the same result than u, nothing is deleted, with the annotation it's working like a charm!\nI know the documentation is confusing but did u try?\na working example, i've recheck:\nphp\n/**\n * @var \\Doctrine\\Common\\Collections\\Collection\n *\n * @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\HomeDish\", mappedBy=\"home\", cascade={\"persist\"}, orphanRemoval=true)\n * @Assert\\Valid()\n * @Assert\\Count(min=\"1\", minMessage=\"Vous devez ajouter au moins 1 plat \u00e0 la carte.\")\n */\nprivate $homeDishes;\nedit: see this thread for orphanRemoval explanations.\nedit2: according to him #1689, it solves the pb ;). Alright, so you can close ;). I've the same problem, I think is a known limitation, if someone has an idea to fix it?. @phpPhil See #1124 to solve it.\n@amustill it's not related to validation, even with assert, there is no \"red star\" in front for required fiels in nested collection. Hi @javiereguiluz \nNop, still the same.\nThe complete case is:\n\n\nAn Entity Page with a oneToMany (Assert\\Valid) to Entity Block:\n```php\n/**\n\n@var \\Doctrine\\Common\\Collections\\Collection\n *\n@ORM\\OneToMany(targetEntity=\"PageBlock\", mappedBy=\"page\", cascade={\"merge\", \"persist\"}, fetch=\"EAGER\")\n@ORM\\OrderBy({\"createdAt\" = \"ASC\"})\n@Assert\\Valid()\n */\nprivate $blocks;\n```\n\n\n\nAsserts on Block Entity fields (and non-nullable field):\n```php\n/**\n\n@var string\n@ORM\\Column(name=\"content\", type=\"text\")\n@Assert\\NotBlank(message=\"Vous devez renseigner le contenu.\")\n */\nprivate $content;\n```\n\n\n\nOn Page settings in yml, a simple collection with a custom FormType:\n```yml\n\n\n{ property: 'blocks', label: 'Blocks de contenu', type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\Type\\PageBlockType', by_reference: false } }\n```\n\n\nThe custom FormType (event with trying to force 'required': true):\n```php\n/**\n\nClass PageBlockType.\n *\n\nused by easyadminbundle custom bo\n /\nclass PageBlockType extends AbstractType\n{\n    /*\n\n@param FormBuilderInterface $builder\n@param array                $options\n */\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    $builder\n        ->add(\n            'content',\n            CKEditorType::class,\n            array(\n                'label' => false,\n                'required' => true,\n            )\n        )\n    ;\n}\n\n/*\n * @param OptionsResolver $resolver\n /\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\PageBlock',\n    ));\n}\n}\n```\n\n\nResult: \nNo red star and no HTML5 validation on nested collection (hopefully back-end validation is ok):\n\n\n\nAs @HeahDude said in #1124, the only way to hack it is to add the correct classes for the label directly in the FormType:\nphp\n$builder\n            ->add(\n                'content',\n                CKEditorType::class,\n                array(\n                    'label' => false,\n                    'required' => true,\n                    'label_attr' => ['class' => 'required label-required']\n                )\n            )\n        ;\nHope it can helps.. the salt is not needed with the bcrypt encoder, which is standard now.. @devkbsc, you've to add a __toString() method in your UserGroup Entity, for example:\nphp\npublic function __toString()\n{\n    return $this->title;\n}. @devkbsc, you've to add a __toString() method in your UserGroup Entity, for example:\nphp\npublic function __toString()\n{\n    return $this->title;\n}. hey @vkhramtsov,\nI suggest you to take a look: #807 . hey @vkhramtsov,\nI suggest you to take a look: #807 . @vkhramtsov yes you've to write and edit some codes (many in fact ;) but unfortunately for now, EasyAdmin doesn't provide any ACL. It's a future feature for EasyAdmin 2.. @vkhramtsov yes you've to write and edit some codes (many in fact ;) but unfortunately for now, EasyAdmin doesn't provide any ACL. It's a future feature for EasyAdmin 2.. @josamanun ,you're on a Symfony (PHP) Bundle, I think you're confusing about the github account, no JSP/Java here.. @josamanun ,you're on a Symfony (PHP) Bundle, I think you're confusing about the github account, no JSP/Java here.. @tantanito , you've to enable the translator in your config.yml:\nyaml\nframework:\n    translator: { fallbacks: ['%locale%'] }\nand follow the instructions of @int99h . @tantanito , you've to enable the translator in your config.yml:\nyaml\nframework:\n    translator: { fallbacks: ['%locale%'] }\nand follow the instructions of @int99h . @tantanito, as @int99h said, you've to install assets:\n\nphp bin/console assets:install --symlink\n\nand empty your browser cache, it must be ok.\nif not, you can also try to clear sf cache:\n\nphp bin/console c:c && php bin/console c:c --env=prod. @tantanito, are u on a Linux distribution or Windows?\n\ntry to inspect what's wrong in network profiler of your browser? the css (easyadmin-all.min.css) isn't loaded with a 404? a 403?\nare-u on localhost? remote host? \nif it's a git based remote repo, have-u installed the assets on the remote server? same for \"composer install\"?\nmaybe your dir '/web/bundles' is just not versioned \ntry to check if the directory /web/bundles/easyadmin/ exists\nit's seems to just be a missing css/js, check a few. hey @chrisyue \naccording to the doc (http://symfony.com/doc/current/bundles/EasyAdminBundle/book/configuration-reference.html#formats), you can define the format of your dates.. hey @chrisyue \naccording to the doc (http://symfony.com/doc/current/bundles/EasyAdminBundle/book/configuration-reference.html#formats), you can define the format of your dates.. @devkbsc if u want to display the usergroup in your User edit's form, you've to add the same definition than the new tag in the yml:\nyaml\nform:\n    title: 'Ajouter/Modifier Utilisateurs'\n    fields:\n        - { type: 'group', css_class: 'col-sm-12', label: 'Information Compte', icon: 'user' }    \n        - id_group\n        - statut_id \n        - { property: 'id_group', label: 'Privillage' type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\\Entity\\UserGroup' } }\n        - { property: 'statut_id', label: 'Etat du compte' type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\\Entity\\UserStatut' } }\nYou can do the same in the show tag if needed.\nAll these features are pretty clears in the documentation.\nnew is only for adding, edit for editing, form for both.. \ud83d\udc4d It'll be awesome, especially for translation stuff !. I'm not sure to understand your first point point.\nIf you want to add/edit an Image entity (relation) in the same way than adding/editing a user, you can by specifying a custom formtype for your field, eg:\nyaml\n- { property: 'image', label: 'Image', type: 'AppBundle\\Form\\Type\\ImageType' }\n```php\n/\n * Class ImageType.\n \n * used by easyadminbundle custom bo\n /\nclass ImageType extends AbstractType\n{\n    /\n     * @param FormBuilderInterface $builder\n     * @param array                $options\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add(\n                'imageFile',\n                VichImageType::class,\n                array(\n                    'label' => 'Image',\n                    'allow_delete' => false,\n                )\n            )\n        ;\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(\n        array(\n            'data_class' => 'AppBundle\\Entity\\Image',\n            'label' => false,\n        )\n    );\n}\n\n}\n```\nFor the second point, I think you've to extend and override some part of the listing yaml to put your own link.\nAnother way (crappy) to do that is to just put a virtual property and getter in your entity which return directly the html, eg:\nyaml\n- { property: 'authorLink', label: 'Author', type: 'raw' }\n```php\n/\n * Virtual custom getter for EasyAdmin\n \n * @var string\n /\nprivate $authorLink;\n/*\n * @return string\n /\npublic function getAuthorLink()\n{\n    return sprintf('%s', $href, $this->getAuthor());\n}\n```\n. I've the same problem since 1.17.8 > updates in children are not saved.\nIf I force 1.17.7 in composer, still ok.\n@javiereguiluz . I've the same problem since 1.17.8 > updates in children are not saved.\nIf I force 1.17.7 in composer, still ok.\n@javiereguiluz . see #2015 . Hey @OuterAlt ,\nYour rooms are created in db? It's only the foreign key which is not set?\nDid u try to set the backward reference in your addEstateRoom() function ?\neg:\n```php\n/\n     * Add room.\n     \n     * @param EstateRoom $room\n     \n     * @return Estate\n     */\n    public function addEstateRoom(EstateRoom $room)\n    {\n        $this->rooms[] = $room;\n        $room->setEstate($this);\n    return $this;\n}\n\n```\nAlso, you miss 2 points in your OneToMany, u've to put an Assert\\Valid() if u want to cascade assertions in your children (validate Room entity) and u've to add orphanRemoval=true to cascade deletions. Hey @OuterAlt ,\nYour rooms are created in db? It's only the foreign key which is not set?\nDid u try to set the backward reference in your addEstateRoom() function ?\neg:\n```php\n/\n     * Add room.\n     \n     * @param EstateRoom $room\n     \n     * @return Estate\n     */\n    public function addEstateRoom(EstateRoom $room)\n    {\n        $this->rooms[] = $room;\n        $room->setEstate($this);\n    return $this;\n}\n\n```\nAlso, you miss 2 points in your OneToMany, u've to put an Assert\\Valid() if u want to cascade assertions in your children (validate Room entity) and u've to add orphanRemoval=true to cascade deletions. Hi @TheKassaK,\nYou've to set directly your FormType in your yml:\nyml\nAdmin:\n    class: AppBundle\\Entity\\Admin\n    new:\n        fields:\n            # ...\n            - { property: 'address', label: '', type: 'AppBundle\\Form\\Type\\AddressType' }. Hey @javiereguiluz do u want a PR?\nWorking draft (have to put flash in dictrionary):\n```php\n/*\n     * @return RedirectResponse\n     /\n    protected function redirectToReferrer()\n    {\n        $refererUrl = $this->request->query->get('referer', '');\n        $refererAction = $this->request->query->get('action');\n    // redirect on list if possible\n    if ($this->isActionAllowed('list')) {\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'list',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n        ]));\n\n    }\n\n    // else from new|edit action, redirect on edit if possible\n    elseif (in_array($refererAction, ['new', 'edit']) && $this->isActionAllowed('edit')) {\n\n        $this->addFlash('success', ($refererAction == 'new')\n            ? 'Votre enregistrement a \u00e9t\u00e9 cr\u00e9e avec succ\u00e8s'\n            : 'Modification enregistr\u00e9e avec succ\u00e8s'\n        );\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'edit',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n            'id'            => ($refererAction == 'new')\n                ? PropertyAccess::createPropertyAccessor()->getValue($this->request->attributes->get('easyadmin')['item'], $this->entity['primary_key_field_name'])\n                : $this->request->query->get('id')\n        ]));\n    }\n\n    // elseif from new action, redirect on new if possible\n    elseif ($refererAction == 'new' && $this->isActionAllowed('new')) {\n\n        $this->addFlash('success', 'Votre enregistrement a \u00e9t\u00e9 cr\u00e9e avec succ\u00e8s');\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'new',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n        ]));\n\n    }\n\n    if (!empty($refererUrl)) {\n        return $this->redirect(urldecode($refererUrl));\n    }\n\n    return $this->redirectToBackendHomepage();\n}\n\n```\nCheers,. Hey @javiereguiluz do u want a PR?\nWorking draft (have to put flash in dictrionary):\n```php\n/*\n     * @return RedirectResponse\n     /\n    protected function redirectToReferrer()\n    {\n        $refererUrl = $this->request->query->get('referer', '');\n        $refererAction = $this->request->query->get('action');\n    // redirect on list if possible\n    if ($this->isActionAllowed('list')) {\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'list',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n        ]));\n\n    }\n\n    // else from new|edit action, redirect on edit if possible\n    elseif (in_array($refererAction, ['new', 'edit']) && $this->isActionAllowed('edit')) {\n\n        $this->addFlash('success', ($refererAction == 'new')\n            ? 'Votre enregistrement a \u00e9t\u00e9 cr\u00e9e avec succ\u00e8s'\n            : 'Modification enregistr\u00e9e avec succ\u00e8s'\n        );\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'edit',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n            'id'            => ($refererAction == 'new')\n                ? PropertyAccess::createPropertyAccessor()->getValue($this->request->attributes->get('easyadmin')['item'], $this->entity['primary_key_field_name'])\n                : $this->request->query->get('id')\n        ]));\n    }\n\n    // elseif from new action, redirect on new if possible\n    elseif ($refererAction == 'new' && $this->isActionAllowed('new')) {\n\n        $this->addFlash('success', 'Votre enregistrement a \u00e9t\u00e9 cr\u00e9e avec succ\u00e8s');\n\n        return $this->redirect($this->generateUrl('easyadmin', [\n            'action'        => 'new',\n            'entity'        => $this->entity['name'],\n            'menuIndex'     => $this->request->query->get('menuIndex'),\n            'submenuIndex'  => $this->request->query->get('submenuIndex'),\n        ]));\n\n    }\n\n    if (!empty($refererUrl)) {\n        return $this->redirect(urldecode($refererUrl));\n    }\n\n    return $this->redirectToBackendHomepage();\n}\n\n```\nCheers,. Merged in 1.x, so we can close ;). I'm closing to put it in a dedicated branch. I'm closing to put it in a dedicated branch. They are completely dissociable.\nThis one (#2151) is only about finding the default backend route (when trying to access /admin for example).\nBefore, you chose the first entity & go on List without checking if list is disabled or if user had set default route params (like edit, id 1) in menu configuration.\nThe other one (#2099) is only about managing redirects after add, edit or delete in case some actions were disabled.\nThe only link between both PR is when no redirect on the current entity is possible (weird case, example allow to delete but not list), we redirect on default backend.. They are completely dissociable.\nThis one (#2151) is only about finding the default backend route (when trying to access /admin for example).\nBefore, you chose the first entity & go on List without checking if list is disabled or if user had set default route params (like edit, id 1) in menu configuration.\nThe other one (#2099) is only about managing redirects after add, edit or delete in case some actions were disabled.\nThe only link between both PR is when no redirect on the current entity is possible (weird case, example allow to delete but not list), we redirect on default backend.. Hey @javiereguiluz any news on this PR? \nDo u need some extra infos before merge?\nCheers. @javiereguiluz \n- I added a redirect to referrer if not empty before trying to regenerate list route\n- I updated to use the redirectToRoute shortcut instead of redirect\n- For me, it can't be possible to have a referer param if list is disabled cause we're coming directly from menu, if I'm wrong, plz explain to me how it can be possible?\n- I remove flash msgs and translations  :sweat:. @javiereguiluz \n- I added a redirect to referrer if not empty before trying to regenerate list route\n- I updated to use the redirectToRoute shortcut instead of redirect\n- For me, it can't be possible to have a referer param if list is disabled cause we're coming directly from menu, if I'm wrong, plz explain to me how it can be possible?\n- I remove flash msgs and translations  :sweat:. hi @ossinkine,\ncause Javier asked me to do it ;)\nhttps://github.com/EasyCorp/EasyAdminBundle/pull/2150/files/b72574bad9ebc32564d719b55209b20f2e85fea5\nFeel free to discuss about it with him.. @Pierstoval sry didn't see your message.\nWhat kind of docs do you want I add? because I added no new configurations at all.\nI'm just looping on the design menu configuration to find the first entity and to check if it have params defined to forward on the correct wanted action.\neg:\nyaml\neasy_admin:\n    design:\n        menu:\n            - { label: 'Page', entity: app_careerspage, params: { action: 'edit', id: 1 } }\n            - #...\nBefore these parameters produced an error, cause we were trying to forward on List action instead on Edit (id: 1).\nThat the point I fixed in this PR.\nFor adding tests, sorry I'm not very comfortable with that.\n. @devkbsc it's the default behavior.\nYou can override rules by adding your own css file, see design configuration chapter\nFor your case, it's seems that you can override like that:\ncss\nh1.title {\n    text-align: center;\n}. Can u confirm that referer param is always set when we're coming from List?. \ud83d\udc4d . You're the boss  :stuck_out_tongue: even if I'm not rly fan about that.. I understand your point but in my opinion, there can not be any referrer param in case of disabled listing or I miss something?\nIn case of redirects:\n- edit > edit\n- add > edit\n- add > add\nUser access the source action by clicking directly on the menu, so no possible referer?. Cause in my opinion, I think it's better to be redirected on the recordset we just created after add (if edit is not disabled), that's why I use the PropertyAccess to get the value from the PK.\nYour case is just below (lines 853-861), edit is disabled and we're on add, so we redirect on add without id.\nWhat do u think about that?. ",
    "djluza": "I just add Menu with roles. Follow these step:\n1)config.yml\n    menu:\n        - label: 'Test'\n          require_permission: [\"ROLE_ADMIN\", \"ROLE_USER\"]\n          icon: 'users'\n          children:\n            - { label: 'Menu1', icon: 'file-new', entity: 'Clienti' }\n            - { label: 'Menu2', icon: 'file-new', entity: 'Utilizzatori' }\n\n        - label: 'Menu'\n          require_permission: [\"ROLE_GUEST\"]\n          icon: 'users'\n          children:\n            - { label: 'Menu1', icon: 'file-new', entity: 'Clienti' }\n\n2)Template menu.html.twig\n\n\n    {% block main_menu %}\n        {% for role in app.user.roles %}\n            {% for item in easyadmin_config('design.menu') %}\n                {% if role in item.require_permission|default([]) %}\n                    \n                        {{ helper.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}\n\n                        {% if item.children|default([]) is not empty %}\n                            \n                                {% for subitem in item.children %}\n                                    \n                                        {{ helper.render_menu_item(subitem, _entity_config.translation_domain|default('messages')) }}\n                                    \n                                {% endfor %}\n                            \n                        {% endif %}\n                    \n\n                {% endif %}\n            {%  endfor %}\n\n        {% endfor %}\n    {% endblock main_menu %}\n\n3)Thats all!. You are right, thank you for the clarification. \ud83d\udc4d . You can restrict action in this way:\nentities:\n        Clienti:\n                class: App\\xxx\\Entity\\Clienti\n                controller: App\\xxx\\Controller\\ClientiController\n                require_permission: [\"ROLE_ADMIN\",\"ROLE_USER\"]\n                list:\n                    require_permission: [\"ROLE_ADMIN\",\"ROLE_USER\"]\n                    actions:\n                         - { name: 'new', label: 'Crea Nuovo', css_class: 'btn btn-success' }\n                    title: 'Clienti'\n                    fields:\n                        #- { property: 'codcliente', label: 'Codice' }\n                        - { property: 'desccliente', label: 'Descrizione' }\n                        - { property: 'rifgruppoclienti', label: 'Riferimento Gruppo' }\n                edit:\n                    require_permission: [\"ROLE_ADMIN\",\"ROLE_USER\"]\n                    title: 'Modifica Clienti'\n                    fields:\n                        #- { property: 'codcliente', label: 'Codice' }\n                        - { property: 'desccliente', label: 'Descrizione' }\n                        - { property: 'rifgruppoclienti', label: 'Riferimento Gruppo'}\n                new:\n                    require_permission: [\"ROLE_ADMIN\",\"ROLE_USER\"]\n                    #actions:\n                        #- { type: 'entity', name: 'Gruppiclienti', action: 'new', label: 'User Details' }\n                    title: 'Crea Clienti'\n                    fields:\n                        - { type: 'section', label: 'Test Linea' }\n                        #- { property: 'codcliente', label: 'Codice' }\n                        - { property: 'desccliente', label: 'Descrizione' }\n                        - { property: 'rifgruppoclienti', label: 'Riferimento Gruppo'}\n                delete:\n                    require_permission: [\"ROLE_ADMIN\",\"ROLE_USER\"]\nAdd this code in AdminController.php\n```\nprivate function checkPermissions()\n    {\n        if (!$this->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {\n            throw $this->createAccessDeniedException();\n        }\n    $easyAdmin = $this->request->attributes->get('easyadmin');\n\n    $action = $this->request->query->get('action');\n\n    $perms = $easyAdmin['entity'][$action]['require_permission'];\n    $roles = $this->get('security.context')->getToken()->getUser()->getRoles();\n\n    foreach ($roles as $key => $value)\n    {\n\n        $permessi_file = $value;\n\n        if (in_array($permessi_file, $perms)) {\n\n            $requiredPermission = $permessi_file;\n\n        }\n        else\n        {\n            $view = $easyAdmin['view'];\n            $entity = $easyAdmin['entity']['name'];\n            $requiredPermission = 'ROLE_'.strtoupper($view).'_'.strtoupper($entity);\n            # Or any other default strategy\n        }\n        $this->denyAccessUnlessGranted(\n            $requiredPermission, null, $requiredPermission.' permission required'\n        );\n    }\n\n}\n\npublic function indexAction(Request $request)\n    {\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->redirectToBackendHomepage();\n    }\n\n    $action = $request->query->get('action', 'list');\n    if (!$this->isActionAllowed($action)) {\n        throw new ForbiddenActionException(array('action' => $action, 'entity_name' => $this->entity['name']));\n    }\n    $this->checkPermissions();\n    return $this->executeDynamicMethod($action.'<EntityName>Action');\n}\n\n```\n. ",
    "forsetius": "When it comes to restricting the actions, I did it a bit differently:\n```yaml\n/app/config/security\nparameters:\n    role_hierarchy:\n        ROLE_ADMIN:       ROLE_USER\n        ROLE_SUPER_ADMIN: ROLE_ADMIN\nsecurity:\n    role_hierarchy: '%role_hierarchy%'\n```\n```yaml\nUser entity definition: user.yml\nsecurity:\n    role_hierarchy:\n        ROLE_USER_SHOW: ~\n        ROLE_USER_LIST: ROLE_USER_SEARCH\n        ROLE_USER_NEW: ~\n        ROLE_USER_EDIT: ~\n        ROLE_USER_DELETE: ~\n        ROLE_USER_SEE:\n            - ROLE_USER_SHOW\n            - ROLE_USER_LIST\n        ROLE_USER_ALL:\n            - ROLE_USER_SEE\n            - ROLE_USER_NEW\n            - ROLE_USER_EDIT\n            - ROLE_USER_DELETE\n```\n```php\n// ...\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse Symfony\\Component\\Security\\Core\\Role\\Role;\nuse Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy;\n// ...\nclass AdminController extends BaseAdminController\n{\n    public function indexAction(Request $request)\n    {\n        // ...\n        $r = $request->query;\n        if (! $this->hasRole(strtoupper('ROLE_'.$r->get('entity').'_'.$r->get('action'))) ) {\n            throw $this->createAccessDeniedException();\n        }\n    }\nprotected $roleHierarchy;\nprotected function hasRole($role)\n{\n    if (\\is_null($this->roleHierarchy)) {\n        $this->roleHierarchy = new RoleHierarchy($this->container->getParameter('security.role_hierarchy.roles'));\n    }\n\n    return \\count($this->roleHierarchy->getReachableRoles([new Role($role)])) > 0;\n}\n\n}\n``\nIt doesn't require you to write entries for every view separately. Sure, you have to write the hierarchy but once you do it once it is findENTITY1NAME, replaceENTITY2NAME. And you have nice role hierarchy you could use to assign roles to groups dynamically :). Ok, I did it. I've had some problem with branching but now it should be fine.\nAt the moment I'm using EasyAdmin extensively both at work and at my home project so I hope I'll be able to give something back. So yes, I consider it to be just small start :)\nBest regards.\n. Upon second thought:\n- this isn't dependent on improved sidebar - old one would behave identically\n- user could just starteasy_admin.site_namewith \" \" and in contracted state would get empty corner\n- adding theeasy_admin.site_icon` would be a good feature on its own\nSo IMHO both mentioned solutions should be implemented and this is both a bug and a feature request.\n. The design you shared - with titlebar on top and sidebar wholly below - is a good idea. The icon, name, slogan, what-have-you doesn't change with toolbar state because IMHO there is no reason it should: \n- with menu on the left and below there is plenty of room in the titlebar - no need to squash the title because of menu\n- titlebar isn't used for displaying messages and apart from title et al, there is only user menu (for example in GNOME titlebar is used for misc. UI controls, mainly buttons and switches - this is not the case).\n- brand identification isn't in any way connected with menu\nI don't like search field in titlebar, though. It implies we're able to search whole backend. This is not the case - we're able to search one entity only, so the search field should be where it is now.\nI'm against the sidebar switch in left corner of title bar. This is one of most valuable locations on website and on computer screen it's traditionally reserved for logo+link to index page. If I could propose the switch location it would be on the right of first menu item/label.\n. As I mentioned in a comment to #1137, I see it a bit differently. Here are pics:\n\n\nNotice that:\n- Icon + title doesn't change nor move at all\n- All the titlebar has the same color\n- There is an external \"handle\" to switch sidebar state\n- I'm no graphic artist so please treat the handle shape as approximation - perhaps it'd be better if it was smaller or bigger or had rounded corners or another symbol on it...\nThat's my opinion only. Even if you doesn't agree with it and would rather keep your solution, please fix the size of \"three bars\" icon. It's quite jarring when it changes size on sidebar state change.\nBest regards\n. Hi,\nPlease look at the close-up:\n\nIt starts with expanded state: icon is near left edge, title a bit to the right.\nNow we contract the sidebar: icon goes a bit to the right, distance between icon and title is doubled - this is instant switch between states, no animation. Meanwhile, below menuitems' icons go bigger and sidebar gradually contracts to the left.\nSo, upper part goes right - different parts at different length, lower part goes left and part of it changes size. It's too much movement and in conflicting directions. I'd at least keep titlebar static no matter what's the sidebar state (as I said before - sidebar state has no logical connection to backend's titlebar) and only animate sidebar below the titlebar.\nNow, the sidebar animation is wonderful. I like both contracting animation and growing icons. It's esthetic, non-distracting and has clear purpose.\nAs for the position of sidebar's icon and it's relation to logo picture. Indeed, the pics you attached are proof that the standard I mentioned is changing as designers try to unify experience on desktops and mobiles. I'm not entirely convinced, but who am I to stand in the way of industry's progress? ;) Seriously though, top-left position of sidebar icon isn't bad and even better if users are already taught such visual pattern.  The key problem is to place the icon in such a way it doesn't steal attention from logo+title. So perhaps the sidebar icon could be smaller, more subtle - something like this:\n\n\n. First, sorry for delay - Fatherland called.\nNow, I've noticed the alignment. This can be solved by giving the icons' column the same width regardless of sidebar state. In expanded state the icons would just have more padding.\nBut ultimately, this is a matter of taste. De gustibus non disputandum est so there is no solution that would fit all. You already said that you don't want too much config options for everything (and I find it good decision) but I've got another, broader idea: perhaps you could set up a repository for alternative designs, custom templates for fields and Symfony form elements? I've already done some fields that integrate color picker, datetime setter, labelling the groups and more will come. I could contribute it to javiereguiluz/EasyAdminBundle (after some polishing) but in time a library of such content could overshadow EasyAdmin proper. Of course, such repository would need your overseeing, so it could be a burden but IMHO it could be worth it.\nIf you think it's a good idea I could add a feature request so that discussion on that would have its place.\nBest regards,\nMarcin\nOff topic: even having so much years writing in English I find it uncomfortable that \"I\" is to be written uppercase and \"you/your\" - lowercase. In my language it's the other way - in correspondence it's a matter of courtesy to uppercase \"you\". Just a random thought :)\n. In the end it looks really good. It was a good discussion indeed and quite fruitful :) Thanks!\nStill, I think there is a place for a repository on layout tweaks, integrations with custom widgets and such. Should I add the feature request? What do you think? \n. Indeed, update to 1.13.0 completed successfully now. I can see 1.13.0 both in Eclipse and on Packagist. Thanks a lot!\nFor me it's fixed but I don't close the issue as you may want to ascertain that the problem is completely resolved and won't happen in the future.\n. Indeed, update to 1.13.0 completed successfully now. I can see 1.13.0 both in Eclipse and on Packagist. Thanks a lot!\nFor me it's fixed but I don't close the issue as you may want to ascertain that the problem is completely resolved and won't happen in the future.\n. This PR doesn't include any CSS classes to assign to table cells - it's up to developer to define and use them on as-needed basis.The PR only allows css_class option to be usable in list view.\n. This PR doesn't include any CSS classes to assign to table cells - it's up to developer to define and use them on as-needed basis.The PR only allows css_class option to be usable in list view.\n. Good idea - some column headers could be centered too. Or colored differently.\nBut we'd need another option for it. How do I add new option to field definition?\n. Good idea - some column headers could be centered too. Or colored differently.\nBut we'd need another option for it. How do I add new option to field definition?\n. OK, I got it\n. OK, I got it\n. Should I update the documentation too? Or do you prefer to do it by yourself?\n. Well, I've came up with this header_css_class because I wanted we could use classes predefined in Bootstrap (like bg-danger). It turns out however that this isn't that straightforward because other styles for header that have higher specificity. To get intended result the developer would have to redefine Bootstrap class with !important clause, which defeats the purpose of predefined class.\nThe solution would be to surround the <a> tag in <th> cell with additional <div class=\"{{ metadata.css_class }}\"> element. This way we can avoid using !important and can employ Bootstrap classes without touching CSS files. To be able to use Bootstrap class  only on <td> or only on <th> without redeclaring it we need header_css_class however.\nBut it's not perfect solution. It doesn't cover the situation when developer restyles the table header with white-space: normal. In such situation if table header is 2 lines of text high and developer uses bg-danger on the column header with one line of text, then only that one line has background colored.\nUnfortunately, I couldn't find flawless solution. If anyone knows it I'll be glad to know as I have one table with white-space: normal that could use styling. So we can safely drop header_css_class for now and think about introducing it again if solution for white-space: normal is found. Until then the developer will have to define a style that's working in his use-case.\n. As I realize there would be two options:\n1. Define role hierarchy in security.role_hierarchy - merges nicely but merged form is inaccessible to other sections\n2. Define role hierarchy in parameters section - accessible but doesn't merge\nSo I decided to use security.role_hierarchy as mergable point of defining this and then set the array of roles to the field's type_options at controller. But it doesn't work - Twig extension gets configuration straight from config files. So I suppose I should extend ConfigManager or PropertyConfigPass.\nIs this good approach at all? How to extend those classes?\n. OK, it took a few hours but I did it :)\nHere is how:\nAs I said, security.role_hierarchy is mergable point of defining security hierarchy - and a list of roles used in application. I leave choice field with undefined choices, like so:\n- \n                      property: 'roles' \n                      type: choice\n                      type_options: \n                          expanded: true\n                          multiple: true\nThen I use a method in controller to set up the choices. I do it only for Group entity as it's the only one to need it:\n// AppBundle/Controller/AdminController.php\n    public function createGroupEntityFormBuilder($entity, $view)\n    {\n        $choices = [];$preferred = [];\n        $vals = array_keys($this->container->getParameter('security.role_hierarchy.roles'));\n        $choices = $vals;\n        // actually there is some beautifying of choices but it's not that important\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n        $formBuilder->add('roles', ChoiceType::class, ['choices'=>array_combine($choices, $vals), 'preferred_choices'=>$preferred, 'multiple'=>true, 'expanded'=>false]);\n        return $formBuilder;\n    }\nAnd the security is enforced at controller's indexAction():\n```\npublic function indexAction(Request $request)\n    {\n        $r = $request->query;\n        $entity = (count($r)>0) ? $r->get('entity') : $this->container->getParameter('startingPage');\n        $action = (count($r)>0) ? $r->get('action') : 'list';\n    if (! $this->get('security')->hasRole(strtoupper(\"ROLE_{$entity}_$action\")) )\n        throw $this->createAccessDeniedException();\n\n    return parent::indexAction($request);\n}\n\n```\nSimple and easy - as everything in Symfony ;-P\n. Thanks, @joazvsoares, @javiereguiluz: indeed you were right. I thought it's the other way - if resource is referenced in original bundle Symfony looks for it in overriding bundle first. Not the case obviously :)\n@javiereguiluz: As of overriding the controller's index action: I already do that - for deciding if user could be given entry to entity/action before trying to actually display it. But then I want to check for each entity's menuitem in left menu if user has the right to /list - if not the menuitem is not displayed at all. The menu's Twig template reaches to ConfigManager for config values and CM brings them right from config files. So I thought it's better to solve the problem at it's root and just modify the ConfigManager's method to check for needed role before even considering more checks - anyway, it's one additional line only. Besides I could need this mechanism when I'll be checking if user's rights are sufficient to display links to 'show' action to linked record on association fields for example.\n. Well, that wasn't exactly a one-liner I thought it would be but it's done - user's rights influence visibility of both menuitem and links on associations. However, I'm not pleased with the solution at all. I had to reimplement whole MenuConfigPass (by copy&paste) and half of ConfigManager because of private methods and properties.\n@javiereguiluz: I'll propose PR that changes visibility of all the private methods and properties in ConfigManager, MenuConfigPass and ActionConfigPass (I'll need it in next step). My security implementation would be greatly simplified should you accept it.\n. If you keep entities configuration in one file you could probably use a features of YAML: anchors, references and array merges. Recently I've found really nice example on this, see: http://blog.geekdaily.org/2010/08/advanced-yaml-tricking-out-your-databaseyml.html \nBut this works in the same file only.\n. Well, the icon + label scheme would be both easier for newcomers and consistent with definitions of list actions. Still, having this covered by docs is ok too - those options aren't mutually exclusive of course :)\nAs noted by @ogizanagi, doing it in the label is more flexible as it allows for more advanced techniques like those described on Font Awesome Examples page. Like: <b class=\"fa fa-3x fa-spinner fa-spin fa-fw text-danger\"></b> ;)\n. Well, the icon + label scheme would be both easier for newcomers and consistent with definitions of list actions. Still, having this covered by docs is ok too - those options aren't mutually exclusive of course :)\nAs noted by @ogizanagi, doing it in the label is more flexible as it allows for more advanced techniques like those described on Font Awesome Examples page. Like: <b class=\"fa fa-3x fa-spinner fa-spin fa-fw text-danger\"></b> ;)\n. Well, I use the 'dev' environment, calling app_dev.php. And still, first request processes long time before serving anything, next ones are remarkably faster. var/cache/dev is filled with some content after the first time too. I don't use cache:clear, just ditch everything with sudo rm -Rf var/cache/de* (asterisk because sometimes there is de~ directory created).\nSo, I have some caching in dev environment and the problem arises only after this sudo rm..., any change to config files or after user logout.\nExcuse me if I don't get something obvious, I have only 3 months of Symfony experience so it still has its share of surprises for me :)\n. Well, I use the 'dev' environment, calling app_dev.php. And still, first request processes long time before serving anything, next ones are remarkably faster. var/cache/dev is filled with some content after the first time too. I don't use cache:clear, just ditch everything with sudo rm -Rf var/cache/de* (asterisk because sometimes there is de~ directory created).\nSo, I have some caching in dev environment and the problem arises only after this sudo rm..., any change to config files or after user logout.\nExcuse me if I don't get something obvious, I have only 3 months of Symfony experience so it still has its share of surprises for me :)\n. I'm into other project right now but in a month I'll have to get back to EA security. If you don't mind please leave this issue open for now.. Sorry for delay in response, I have deployment at the moment with all my attention on it. Yes @javiereguiluz, let's close it. I've already reimplemented the security the other way but I'm still getting some error that arises the first time I access EA after making some code change. Next a subsequent time I access EA everything is ok. I'm sorry but I'm unable to give specifics right now. I'll share my work (showing/hiding side menu entries based on privileges) are exact errors when this deployment will be over (probably with beginning of April). Then, we could decide whether to re-open it or not.. Nice you ask, I'm just tackling the problem at the moment. \nIf you use Bootstrap modals it's easy to override the layout template and insert modal's HTML code there. But I had no time yet to find a way to override the form's buttons so that they closed the modal beside submitting the form. The next problem I see is refreshing the combo once the form is submitted and modal closed - I think that some JavaScript that modifies the INPUT's content would be enough, but I have to check that.\nCould you drop a hint if you'll make any progress?\n. Nice you ask, I'm just tackling the problem at the moment. \nIf you use Bootstrap modals it's easy to override the layout template and insert modal's HTML code there. But I had no time yet to find a way to override the form's buttons so that they closed the modal beside submitting the form. The next problem I see is refreshing the combo once the form is submitted and modal closed - I think that some JavaScript that modifies the INPUT's content would be enough, but I have to check that.\nCould you drop a hint if you'll make any progress?\n. For starters: thanks for implementing those features. Complex layouts look really impressive, great work!\nThis said, in two of my current projects, design consistency is a must-have. It is also a classic good design principle. So I'd appreciate that all that goodies you made in this issue were available for \"show\" action too. But I have impression that \"edit\" was the harder part and \"show\" would be easier. Am I right?\nActually, I've made some forays into improving the vertical style of show layout (mostly CSS: proper padding and display: table(-cell) but it required all fields to have col-sm-* class) but it was pretty basic and nowhere as complete as your work on \"edit\" action. So I keep fingers crossed for groups, headers and dividers in \"show\" action too :)\n. Thanks @Yunyun548! You've pointed me in right direction!\nOf course I'm too lazy to make a separate template for every case like this and since laziness is a motor of progress ;) , I've done universal template, based on field_association:\nTemplate src/AppBundle/Resources/views/easy_admin/field_foreign_association.html.twig:\n```\n{# foreign *-to-many collection of values #}\n{% set fEntity = attribute(item, value.entity) %}\n{% set fField = (fEntity is null) ? [] : attribute(fEntity, value.field) %}\n{% if fField is iterable %}\n    {% if 'show' == view %}\n        {% if fField|length > 0 %}\n            \n                {% for item in fField|slice(0, easyadmin_config('show.max_results')) %}\n                    \n                        {% if link_parameters is defined %}\n                            {% set primary_key_value = attribute(item, link_parameters.primary_key_name) %}\n                            {{ item }}\n                        {% else %}\n                            {{ item }}\n                        {% endif %}\n                    \n                {% endfor %}\n            {% set _remaining_items = fField|length - easyadmin_config('show.max_results') %}\n            {% if _remaining_items > 0 %}\n                <li>({{ 'show.remaining_items'|transchoice(count = _remaining_items, domain = 'EasyAdminBundle') }})</li>\n            {% endif %}\n        </ul>\n    {% else %}\n        <div class=\"empty collection-empty\">\n            <span class=\"label label-empty\">{{ 'label.empty'|trans({}, 'EasyAdminBundle') }}</span>\n        </div>\n    {% endif %}\n{% elseif 'list' == view %}\n    <span class=\"badge\">{{ fField|length }}</span>\n{% endif %}\n\n{# a simple *-to-one value associated with an entity managed by this backend #}\n{% elseif link_parameters is defined %}\n    {{ fField|easyadmin_truncate }}\n{% else %}\n    {{ fField|easyadmin_truncate }}\n{% endif %}\n```\nIn SeatGroups config file:\n- { property: 'seats', template: '@App/easy_admin/field_foreign_association.html.twig' }\nIn SeatGroup entity class:\npublic function getSeats()\n{\n    return ['entity'=>'room', 'field'=>'seats'];\n}\nAnd it does it... mostly.\nSecond part of the template doesn't work - the one between elseif and else, For the sake of completeness I'd like to have a link on text shown if value is not iterable but points to some other entity. Say that room.type references a RoomType entity (one RoomType to many Rooms) - if I define getType() as:\nreturn ['entity'=>'room', 'field'=>'type'];\nI'd like that type shown had a link pointing to that RoomType.  For that I need link_parameters defined, but I don't know how get it done.\nCould you help?\n. Thanks @Yunyun548! You've pointed me in right direction!\nOf course I'm too lazy to make a separate template for every case like this and since laziness is a motor of progress ;) , I've done universal template, based on field_association:\nTemplate src/AppBundle/Resources/views/easy_admin/field_foreign_association.html.twig:\n```\n{# foreign *-to-many collection of values #}\n{% set fEntity = attribute(item, value.entity) %}\n{% set fField = (fEntity is null) ? [] : attribute(fEntity, value.field) %}\n{% if fField is iterable %}\n    {% if 'show' == view %}\n        {% if fField|length > 0 %}\n            \n                {% for item in fField|slice(0, easyadmin_config('show.max_results')) %}\n                    \n                        {% if link_parameters is defined %}\n                            {% set primary_key_value = attribute(item, link_parameters.primary_key_name) %}\n                            {{ item }}\n                        {% else %}\n                            {{ item }}\n                        {% endif %}\n                    \n                {% endfor %}\n            {% set _remaining_items = fField|length - easyadmin_config('show.max_results') %}\n            {% if _remaining_items > 0 %}\n                <li>({{ 'show.remaining_items'|transchoice(count = _remaining_items, domain = 'EasyAdminBundle') }})</li>\n            {% endif %}\n        </ul>\n    {% else %}\n        <div class=\"empty collection-empty\">\n            <span class=\"label label-empty\">{{ 'label.empty'|trans({}, 'EasyAdminBundle') }}</span>\n        </div>\n    {% endif %}\n{% elseif 'list' == view %}\n    <span class=\"badge\">{{ fField|length }}</span>\n{% endif %}\n\n{# a simple *-to-one value associated with an entity managed by this backend #}\n{% elseif link_parameters is defined %}\n    {{ fField|easyadmin_truncate }}\n{% else %}\n    {{ fField|easyadmin_truncate }}\n{% endif %}\n```\nIn SeatGroups config file:\n- { property: 'seats', template: '@App/easy_admin/field_foreign_association.html.twig' }\nIn SeatGroup entity class:\npublic function getSeats()\n{\n    return ['entity'=>'room', 'field'=>'seats'];\n}\nAnd it does it... mostly.\nSecond part of the template doesn't work - the one between elseif and else, For the sake of completeness I'd like to have a link on text shown if value is not iterable but points to some other entity. Say that room.type references a RoomType entity (one RoomType to many Rooms) - if I define getType() as:\nreturn ['entity'=>'room', 'field'=>'type'];\nI'd like that type shown had a link pointing to that RoomType.  For that I need link_parameters defined, but I don't know how get it done.\nCould you help?\n. Should I close this issue as it's meant to be implemented in the future or leave it open as a todo reminder?\n. Should I close this issue as it's meant to be implemented in the future or leave it open as a todo reminder?\n. I'm not a big fan of the name myself. I wanted a name that wouldn\"t be used only in that place but could denote a text that is additional information on data proper. Apart from \"more items\" case it could be used in cases like \"some text was ellipsised\", \"the list is filtered\" etc. But perhaps due to hard takeoff on this Monday I can't came up with anything better than \"metainfo\" ;)\nFeel free to change it :)\n. I'm not a big fan of the name myself. I wanted a name that wouldn\"t be used only in that place but could denote a text that is additional information on data proper. Apart from \"more items\" case it could be used in cases like \"some text was ellipsised\", \"the list is filtered\" etc. But perhaps due to hard takeoff on this Monday I can't came up with anything better than \"metainfo\" ;)\nFeel free to change it :)\n. Well, let's stick to simplest name: the name of Twig variable :)\nHence: .remaining-items. PR updated. Is that ok?\n. Well, let's stick to simplest name: the name of Twig variable :)\nHence: .remaining-items. PR updated. Is that ok?\n. It's quite easily done by creating new Twig template and new Symfony form type. \nAnalogous to this definition of 'color' fields:\n```\nadmin.yml\neasy_admin:\n    entities:\n        Entity:\n            form:\n                fields:\n                    -\n                      property: 'color'\n                      label: 'trait.color'\n                      type: '\\AppBundle\\Form\\Type\\ColorType'\n            show:\n                fields:\n                    -\n                      property: 'color'\n                      label: 'trait.color'\n                      template: '@AppBundle/field_color.html.twig'\nAppBundle/Form/Type/ColorType.php\nnamespace AppBundle\\Form\\Type;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nclass ColorType extends TextType\n{\n    public function getBlockPrefix()\n    {\n        return 'color';\n    }\n}\nAppBundle/Resources/views/field_color.html.twig\n{# a *-to-many collection of values #}\n{% if value is iterable %}\n    {% for item in value %}\n        {% if link_parameters is defined -%}\n            {% set primary_key_value = attribute(item, link_parameters.primary_key_name) %}\n            \n{{ item }}\n\n        {%- else %}\n                {{ item }}\n        {% endif %}\n    {% endfor %}\n{# a simple *-to-one value associated with an entity managed by this backend #}\n{% elseif link_parameters is defined %}\n    {{ value|easyadmin_truncate }}\n{% else %}\n    {{ value }}\n{% endif %}\n```\nDon't worry about the field.html - it's not that hard. It's based on EasyAdmin's field_association.html.twig, just trimmed down and then expanded to accommodate color widget.\nThere is however one thing I'd like to know: how to do define short name for custom types. Instead of type: '\\AppBundle\\Form\\Type\\ColorType' I'd like to be able to write just type: color. EasyAdmin does it for its types but I'd like to be able to duplicate this features for my types. \nCould recipe for this be added to documentation? \n. I'm using FQCN already, just thought I could simplify things by using shorter, easier type names. However, the LegacyFormHelper is final so probably recreating it for custom use is not worth the trouble.\nThanks for the pointing the class to me, though :)\n. Also, I'd like to add that all works fine if I copy-paste the createGroupEntityFormBuilder into a trait and use it directly in AdminController.\n. Also, I'd like to add that all works fine if I copy-paste the createGroupEntityFormBuilder into a trait and use it directly in AdminController.\n. Sorry for delay, very busy week :(\nNot yet. On Saturday I'm going to create a clean Symfony project EA 1.16 and test it then. Thanks for that addition to demo app, I'll see it.\n. So, I tried with a clean Symfony project, EA 1.16 and quite simple EA setup with only User and Groups by FOSUserBundle. To no avail. So I thought I'll install easy-admin-demo. However, I have a problem with setting it up.\nI'm setting it with Postgresql as DB and up to point 6 of install instructions (php bin/console doctrine:schema:create) it goes well. Then, trying to load the fixtures I get:\n[Doctrine\\DBAL\\Exception\\SyntaxErrorException]                               \n  An exception occurred while executing 'INSERT INTO user (username, username  \n  _canonical, email, email_canonical, enabled, salt, password, last_login, lo  \n  cked, expired, expires_at, confirmation_token, password_requested_at, roles  \n  , credentials_expired, credentials_expire_at, id, isActive, contract) VALUE  \n  S (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"  \n  user0\", \"user0\", \"user0@example.com\", \"user0@example.com\", 1, \"ids4qbftg9c8  \n  s084s4c00cg88ck00wc\", \"$2y$13$q2NcFyaZJJnnWzZAftiJG.2jMFYF\\/m3KxgjLQkc5H3Qq  \n  y3j32uG7K\", null, 0, 0, null, null, null, \"a:0:{}\", 0, null, 1, 1, \"contrac  \n  t0.pdf\"]:                                                                    \n  SQLSTATE[42601]: Syntax error: 7 ERROR:  syntax error in or near \"user\"     \n  LINE 1: INSERT INTO user (username, username_canonical, email, email...      \n                      ^\n\nNote that I've translated the part after \"SQLSTATE[42601]: Syntax error: 7 \" back into English, there could be minor differences with standard English error message  \n\nDoes it looks like something on my part or should I file a new issue?\nI'll get back to testing this issue once I fix that Postgres error.. OK, I started another Symfony project with EasyAdmin and FOSUserBundle so I thought I'll try again with this. Now I think there is something on my side but I suspect there is some Symfony magic involved because I don't see anything obvious.\nConfig of EasyAdmin in divided into different YAML files:\n```yaml\nsrc/Eg/AdminBundle/Resources/config/admin/group.yml\neasy_admin:\n    entities:\n        Group:\n            class: Eg\\AdminBundle\\Entity\\Group\n            controller: Eg\\AdminBundle\\Controller\\GroupAdminController\nsrc/Eg/AdminBundle/Resources/config/admin/user.yml\neasy_admin:\n    entities:\n        User:\n            class: Eg\\AdminBundle\\Entity\\User\n            controller: Eg\\AdminBundle\\Controller\\UserAdminController\napp/config/easy_admin.yml\neasy_admin:\n    design:\n        menu:\n            - label: 'app.menu.access'\n            - { entity: 'User', icon: 'user', label: 'admin.user.enames' }\n            - { entity: 'Group', icon: 'group', label: 'admin.group.enames' }\n```\nThey are of course imported appropriately\nSo, the code of Group is basically the same as before, except this time I added listAction() for a test:\nphp\n// src/Eg/AdminBundle/Controller/GroupAdminController\nnamespace Eg\\AdminBundle\\Controller;\nuse Eg\\AdminBundle\\Controller\\AdminController as AdminController;\nclass GroupAdminController extends AdminController\n{\n    protected function listGroupAction() {\n        dump('TestG');\n        return parent::listAction();\n    }\n}\nThen there is UserAdminController:\nphp\n// src/Eg/AdminBundle/Controller/UserAdminController\nnamespace Eg\\AdminBundle\\Controller;\nuse Eg\\AdminBundle\\Controller\\AdminController as AdminController;\nclass UserAdminController extends AdminController\n{\n    protected function listUserAction() {\n        dump('TestU');\n        return parent::listAction();\n    }\n}\nNotice I used listGroupAction and listUserAction not listAction. In this case entering User listing I get variable dumped with \"TestU\" content. But entering Group or any other entity I get nothing dumped.\nNow, if I use protected function listAction() { in both classes instead of protected function list<Entity>Action() { I get \"TestU\" in listings of all entities.\nIt doesn't matter if I reverse the order of User and Group in EA menu or order of imports of those entities definitions - I get \"TestU\" and never \"TestG\".  \nI think it could be something with routing. It is configured like this:\n```yaml\napp/config/routing.yml\nadmin:\n    resource: \"@AdminBundle/Resources/config/routing-admin.yml\"\n    prefix: /admin\nsrc/Eg/AdminBundle/Resources/config/routing-admin.yml\nadmin:\n    resource: \"@EgAdminBundle/Controller/\"\n    type:     annotation\n```\nMy main controller goes like this:\n```php\nnamespace Eg\\AdminBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n/**\n * @Route(\"/\", name=\"admin\")\n * @Route(\"/\", name=\"easyadmin\")\n *\n * @param Request $request\n * @return RedirectResponse|Response\n */\npublic function indexAction(Request $request) {\n    $twig = $this->container->get('twig');\n    foreach (['site_icon', 'widgets'] as $twigGlobal)\n        $twig->addGlobal(\"_$twigGlobal\", $this->container->getParameter($twigGlobal));\n\n    $r = $request->query;\n    $entity = (count($r)>0) ? $r->get('entity') : $this->container->getParameter('startingPage');\n    $action = (count($r)>0) ? $r->get('action') : 'list';\n\n    if (! $this->get('security')->hasRole(strtoupper(\"ROLE_{$entity}_$action\")) ) {\n        throw $this->createAccessDeniedException();\n    }\n    return parent::indexAction($request);\n}\n\n}\n```\nAll in all it would seem that all custom controllers are ignored except UserAdminController that is considered a controller for all entities but if I try to intentionally misspell GroupAdminControlle there is Exception thrown.\n@javiereguiluz: Could you offer any hints?. Indeed, getting changes instead of computing them based on original and edited states is the easier way of doing it :)\nThanks @javiereguiluz . You can do it with prePersistPostEntity() method in your controller. You need to define it and iterate over image collection creating Image entities and persisting them to database.\nAlso, if you need to edit the Post and manipulate its images collection you need to consider defining preUpdatePostEntity() method that would check for missing images and create them like in \"persist\" event.. You can do it with prePersistPostEntity() method in your controller. You need to define it and iterate over image collection creating Image entities and persisting them to database.\nAlso, if you need to edit the Post and manipulate its images collection you need to consider defining preUpdatePostEntity() method that would check for missing images and create them like in \"persist\" event.. OK, so for now I'll use the \"hack\" above. I edited it as I forgot the fragment about AbstractEntity. \nPerhaps it will be of use to someone should they need spacers in show view until it gets implemented more cleanly in EasyAdmin proper.. Or... if you just need to enforce new row of fields you can use:\n```yml\n  - { property: 'aProp', css_class: 'col-sm-12' }\n  - { property: 'bProp', css_class: 'col-sm-1' }\nnotice the 'new-row' CSS class\n\n{ property: 'cProp', css_class: 'col-sm-6 new-row' }\n...and `cProp` will be at 3rd row despite of `bProp` having only `css_class: 'col-sm-1'`. So, it can be done but in addition to things in original post I had to modify several `ConfigPass`es:php\n\nNormalizerConfigPass\nline 135:\nforeach (array('edit', 'form', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\nline 175:\nforeach (array('form', 'edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\nline 274:\n$views = array('edit', 'list', 'new', 'show', 'liveMap', 'form');\nthen, add after line 35:\n    'liveMap' => array(\n        'fields' => array(),\n    ),\n\n```\n```php\nPropertyConfigPass\nline 142:\nforeach (array('edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\n```\n```php\nActionConfigPass\n\"livemap\" entries must be added to getDefaultActions() and getDefaultActionsConfig()\nline 22:\nprivate $views = array('edit', 'list', 'new', 'show', 'liveMap');\n```\n```php\nViewConfigPass\nline 37:\nforeach (array('edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\n```\n```php\nTemplateConfigPass\nLine 119:\nforeach (array('list', 'show', 'liveMap') as $view) {\nLine 200:\nforeach (array('list', 'show', 'liveMap') as $view) {\n```\nPerhaps the EasyAdmin could be enhanced so that those arrays were parametrized? Most of them are very similar, they could use one point of configuration. Then methods containing those lines could be made protected so that those ConfigPasses could be extended with custom classes (if ConfigManager can be made to employ those extended ConfigPasses of course). So, it can be done but in addition to things in original post I had to modify several ConfigPasses:\n```php\nNormalizerConfigPass\nline 135:\nforeach (array('edit', 'form', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\nline 175:\nforeach (array('form', 'edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\nline 274:\n$views = array('edit', 'list', 'new', 'show', 'liveMap', 'form');\nthen, add after line 35:\n    'liveMap' => array(\n        'fields' => array(),\n    ),\n\n```\n```php\nPropertyConfigPass\nline 142:\nforeach (array('edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\n```\n```php\nActionConfigPass\n\"livemap\" entries must be added to getDefaultActions() and getDefaultActionsConfig()\nline 22:\nprivate $views = array('edit', 'list', 'new', 'show', 'liveMap');\n```\n```php\nViewConfigPass\nline 37:\nforeach (array('edit', 'list', 'new', 'search', 'show', 'liveMap') as $view) {\n```\n```php\nTemplateConfigPass\nLine 119:\nforeach (array('list', 'show', 'liveMap') as $view) {\nLine 200:\nforeach (array('list', 'show', 'liveMap') as $view) {\n```\nPerhaps the EasyAdmin could be enhanced so that those arrays were parametrized? Most of them are very similar, they could use one point of configuration. Then methods containing those lines could be made protected so that those ConfigPasses could be extended with custom classes (if ConfigManager can be made to employ those extended ConfigPasses of course). So, it turns out that there is no real need for additional show view. Instead I could just declare a new \"virtual\" entity in EA config with new name but pointing to old class and configure a new set of views as I like. It goes like so:\nyaml\neasy_admin:\n    entities:\n        City:\n            class: Admin/Entity/City\n            # views configuration for City proper\n        CityMap:\n            class: Admin/Entity/City\n            # views configuration for City live map\n@javiereguiluz: It's a neat trick, maybe it would be good to describe it in manual?. OK, so for reference in case someone would need it:\nGlobal actions system\nFirst, in the config file we define the array of global actions under the parameters key. Also, we need to define a Twig global to be able to use the array in Twig template (list.html.twig) later.\n```yaml\napp/config/config.yml\nparameters:\n    global_actions:\n        - exportCsv\ntwig:                                         \n    globals:\n        global_actions: '%global_actions%'\neasy_admin:\n    design:\n        templates:\n            list: '@Admin/easy_admin/list.html.twig'\n```\nSo, in list template we extend global_actions block so that global actions buttons would show next to New button. We use app.action.<actionName> translation label for the button's text. \n```twig\n{# src/AdminBundle/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block global_actions %} \n    {{ parent() }}\n    {% for global_action in global_actions %} \n        {% if easyadmin_action_is_enabled_for_list_view(global_action, _entity_config.name) %} \n            \n \n                    {{ ('app.action.' ~ global_action)|trans }}\n                \n\n        {% endif %}\n    {% endfor %}\n{% endblock global_actions %}\n```\nSo we need to provide the translation for the label\n```yaml\nsrc/AdminBundle/Resources/translations/messages.pl.yml\napp.action.exportCsv: Eksport CSV\n```\nTo delete the global action links at rows:\ntwig\n{# src/AdminBundle/Resources/views/easy_admin/list.html.twig #}\n{% block item_actions %}\n    {% set _list_item_actions = _list_item_actions|filter_admin_actions(item) %}\n    {{ parent() }}\n{% endblock %}\nNext, we need to define filter_admin_actions() function in Twig extension\n```php\n<?php\nnamespace AdminBundle\\Twig;\nuse HelperBundle\\Tool\\Shortcuts as Sf;\nuse HelperBundle\\Tool\\Store;\nclass FilterActionsExtension extends \\Twig_Extension\n{\n    public function getFilters()\n    {\n        return [\n            new \\Twig_SimpleFilter(\n                'filter_admin_actions',\n                [$this, 'filterActions']\n            )\n        ];\n    }\npublic function filterActions(array $itemActions, $item)\n{\n    if (method_exists($item, 'filterActions')) {\n        $itemActions = $item->filterActions($itemActions, $item);\n    }\n    return array_diff_key($itemActions, array_flip(\n        $GLOBALS['kernel']->getContainer()->getParameter('global_actions')\n    ));\n}\n\n}\n?>\n```\nTwig extension needs to be registered as a service in the config file (attention: Symfony 3.3 changed things at this point)\nyaml\nservices:\n    admin.twig_extension.filter_admin_actions:\n        class:      AdminBundle\\Twig\\FilterActionsExtension\n        public:     false\n        tags:\n            - { name: twig.extension }\nTo actually see the global action buttons for entities that need it, we need to put the global actions' names in the configuration of list view\nyaml\neasy_admin:\n    entities:\n        EntityName:\n            list:\n                actions: ['show', 'exportCsv']\nThat creates the global actions' interface. However, buttons' actions must be defined in the controller of course. It has to be named just as in the config file - in our case it would be exportCsvAction(). \nI don't want to repeat the aforementioned tutorial - see it for CSV export proper!. OK, so for reference in case someone would need it:\nGlobal actions system\nFirst, in the config file we define the array of global actions under the parameters key. Also, we need to define a Twig global to be able to use the array in Twig template (list.html.twig) later.\n```yaml\napp/config/config.yml\nparameters:\n    global_actions:\n        - exportCsv\ntwig:                                         \n    globals:\n        global_actions: '%global_actions%'\neasy_admin:\n    design:\n        templates:\n            list: '@Admin/easy_admin/list.html.twig'\n```\nSo, in list template we extend global_actions block so that global actions buttons would show next to New button. We use app.action.<actionName> translation label for the button's text. \n```twig\n{# src/AdminBundle/Resources/views/easy_admin/list.html.twig #}\n{% extends '@EasyAdmin/default/list.html.twig' %}\n{% block global_actions %} \n    {{ parent() }}\n    {% for global_action in global_actions %} \n        {% if easyadmin_action_is_enabled_for_list_view(global_action, _entity_config.name) %} \n            \n \n                    {{ ('app.action.' ~ global_action)|trans }}\n                \n\n        {% endif %}\n    {% endfor %}\n{% endblock global_actions %}\n```\nSo we need to provide the translation for the label\n```yaml\nsrc/AdminBundle/Resources/translations/messages.pl.yml\napp.action.exportCsv: Eksport CSV\n```\nTo delete the global action links at rows:\ntwig\n{# src/AdminBundle/Resources/views/easy_admin/list.html.twig #}\n{% block item_actions %}\n    {% set _list_item_actions = _list_item_actions|filter_admin_actions(item) %}\n    {{ parent() }}\n{% endblock %}\nNext, we need to define filter_admin_actions() function in Twig extension\n```php\n<?php\nnamespace AdminBundle\\Twig;\nuse HelperBundle\\Tool\\Shortcuts as Sf;\nuse HelperBundle\\Tool\\Store;\nclass FilterActionsExtension extends \\Twig_Extension\n{\n    public function getFilters()\n    {\n        return [\n            new \\Twig_SimpleFilter(\n                'filter_admin_actions',\n                [$this, 'filterActions']\n            )\n        ];\n    }\npublic function filterActions(array $itemActions, $item)\n{\n    if (method_exists($item, 'filterActions')) {\n        $itemActions = $item->filterActions($itemActions, $item);\n    }\n    return array_diff_key($itemActions, array_flip(\n        $GLOBALS['kernel']->getContainer()->getParameter('global_actions')\n    ));\n}\n\n}\n?>\n```\nTwig extension needs to be registered as a service in the config file (attention: Symfony 3.3 changed things at this point)\nyaml\nservices:\n    admin.twig_extension.filter_admin_actions:\n        class:      AdminBundle\\Twig\\FilterActionsExtension\n        public:     false\n        tags:\n            - { name: twig.extension }\nTo actually see the global action buttons for entities that need it, we need to put the global actions' names in the configuration of list view\nyaml\neasy_admin:\n    entities:\n        EntityName:\n            list:\n                actions: ['show', 'exportCsv']\nThat creates the global actions' interface. However, buttons' actions must be defined in the controller of course. It has to be named just as in the config file - in our case it would be exportCsvAction(). \nI don't want to repeat the aforementioned tutorial - see it for CSV export proper!. It is already possible to have non-entity based items in the left menu, see documentation. But this uses Symfony routes to redirect to another page so you'd need to implement suitable controllers, forms etc. by yourself.\nThere is also Sulu  - a Symfony-based product that does CMS. It has an extension called SuluFormBundle that should handle dynamic forms defined in the backend. However, it is not stable yet and I wasn't able to verify if it works.\nAnyway, Sulu is just some Symfony bundles and so it should be possible to combine it with EasyAdmin. Frankly, I'd be interested in hearing if it's indeed practically feasible. If you'd like to go this way please share your experiences :). Indeed, it's tempting to have everything about entity class in one file. But in current implementation it is possible to configure many EA menu entries out of one entity class:\nyaml\neasy_admin:\n    entities:\n        One:\n            class: AppBundle/Entity/One\n        Two:\n            class: AppBundle/Entity/One\nWould it be possible using annotations? I actually use this trick to create different views for a City entity - one is standard form, second is map widget view.. Yeah, sure but we do it so that we have different sets of fields in each EA entry. So, in such case an entity's field needs to have annotation like:\n/**\n * @AdminField (adminEntry=\"One\", <rest of config for One here>)\n * @AdminField (adminEntry=\"Two\", <rest of config for Two here>)\n */\nRemember that to properly configure the field, we need to configure the label (needed for translation), action views (list, show etc.) and for each action: CSS classes and sometimes type and type options. In some cases label needs to be different for different actions.\nI'm worrying that resulting annotations for each field would be too convoluted if we'd have to define them separately for each EA entry :(. @grachevko: I gave you +1 because I like the annotation before virtualField. Nice and concise way of stating it's meant for display in EA only.\n@iluuu1994: oh, yeah, the order of elements. The solution would be: @EA\\Property(order=1) or @EA\\PropertyAction(name=\"form\", order=2). As of convoluted: I'll try to prepare something more real-life for tomorrow... err, today. \nOh, just occured to me: since that annotation-type config is a part of PHP it can be used in traits. It has upsides (you define a config for a field once, no repetition like defining equivalent of: - {property: 'name', label: 'trait.name' } zillion times) and downsides (you defined a config for a field once and then you need to change only cssClass for one action in one entity). I'll provide aforementioned example to make the downside more clear.. Sorry for delay, here is more real-life example of current yaml config and my attempt to translate it to annotations. Assumptions:\n1. Class-level @EA\\Entity annotations to assign EA entities (menu entries) to Doctrine entities. Also, EA entity properties except actions and class defined here\n2. Class-level @EA\\Action annotations to define action properties except fields. If more than one EA entities defined on the Doctrine entity and their properties differ on given action then entity attribute must be provided for that action\n3. Field-level @EA\\Property annotations to define attributes common for all actions\n4. Field-level @EA\\PropertyAction annotations to denote that field has to be actually rendered for given action. Attributes given here override @EA\\Property ones. If more than one EA entities defined on the Doctrine entity and their properties differ on given action then entity attribute must be provided for that action\nI tried to minimize the amount of text required (by attributes overrides) but as you'll see it comes at a cost of clarity. Here we go...\nFirst current yaml config:\nyaml\neasy_admin:\n    entities:\n        City:\n            class: AppBundle\\Entity\\City\n            form:\n                widgets: ['color']\n                fields:\n                    - { property: 'name', label: 'trait.name', type: text, css_class: col-sm-10 }\n                    - { property: 'color', label: 'trait.color', css_class: col-sm-2, type: 'AppBundle\\Form\\Type\\ColorType' }\n                    -\n                      property: 'zones'\n                      label: 'zone.enames'\n                      type: entity\n                      type_options:\n                          multiple: true\n                          class: AppBundle\\Entity\\Zone\n                          by_reference: false\n                    - { property: 'extent', label: 'trait.extent', css_class: hidden}\n            new:\n                title: city.etitle.new\n            edit:\n                title: city.etitle.edit\n            show:\n                title: city.ename\n                fields:\n                    - { property: 'name', label: 'trait.name', css_class: col-sm-4 }\n                    - { property: 'color', label: 'trait.color', css_class: col-sm-2, template: '@App/widgets/color/field.html.twig' }\n                    - { property: 'zones', label: 'zone.enames', css_class: col-sm-6 }\n                    - { property: 'extent', label: 'trait.extent', type: raw, css_class: hidden }\n            list:\n                title: city.enames\n                fields:\n                    - { property: 'coloredName', label: 'trait.name', template: '@App/widgets/color/field.html.twig' }\n                    - { property: 'zones', label: 'zone.eicon' }\n        Map:\n            class: AppBundle\\Entity\\City\n            disabled_actions: ['list', 'new', 'edit']\n            show:\n                title: city.emap\n                fields: \n                    - { property: 'name', label: 'trait.name' }\n                    - { property: 'extent', label: 'trait.map', type: raw, template: '@MapWidget/map_field.html.twig'}\nNow, attempt at annotations:\n```php\n<?php\n// snip \"uses\"\n/*\n * @ORM\\Entity\n * @ORM\\Table(name=\"m_cities\")\n * @Gedmo\\SoftDeleteable(fieldName=\"deletedAt\", timeAware=false)\n * @EA\\Entity(name=\"City\")\n * @EA\\Entity(name=\"Map\", disabledActions=\"list,new,edit\")\n * @EA\\Action(name=\"new\", label=\"city.etitle.new\")\n * @EA\\Action(name=\"edit\", label=\"city.etitle.edit\")\n * @EA\\Action(entity=\"City\", name=\"show\", label=\"city.ename\")\n * @EA\\Action(name=\"list\", label=\"city.enames\")\n * @EA\\Action(entity=\"Map\", name=\"show\", label=\"city.emap\")\n /\nclass City\n{\n    use SoftDeleteableEntity;\n/**\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprotected $id;\n\n/**\n * @ORM\\Column(type=\"string\", length=255, unique=true)\n * @EA\\Property(label=\"trait.name\", order=1)\n * @EA\\PropertyAction(name=\"form\", type=\"text\", css_class=\"col-sm-10\")\n * @EA\\PropertyAction(entity=\"City\", name=\"show\", css_class=\"col-sm-4\")\n * @EA\\PropertyAction(entity=\"Map\", name=\"show\")\n */\nprotected $name;\n\n/**\n * @ORM\\Column(type=\"string\", length=7)\n * @EA\\Property(label=\"trait.color\", order=2, css_class=\"col-sm-2\")\n * @EA\\PropertyAction(name=\"form\", type=\"AppBundle\\Form\\Type\\ColorType\")\n * @EA\\PropertyAction(entity=\"City\", name=\"show\", template=\"@App/widgets/color/field.html.twig\")\n */\nprotected $color = '#ffffff';\n\n/**\n * @ORM\\Column(type=\"string\", length=255, nullable=false)\n * @EA\\Property(label=\"trait.extent\", order=4, css_class=\"hidden\")\n * @EA\\PropertyAction(name=\"form\")\n * @EA\\PropertyAction(entity=\"City\", name=\"show\", type=\"raw\")\n * @EA\\PropertyAction(entity=\"Map\", name=\"show\", type=\"raw\", template=\"@MapWidget/map_field.html.twig\", css_class=\"col-sm-12\")\n */\nprotected $extent;\n\n/**\n * @ORM\\OneToMany(targetEntity=\"Zone\", mappedBy=\"city\")\n * @EA\\Property(label=\"zone.enames\", order=3)\n * @EA\\PropertyAction(name=\"form\", type=\"entity\", type_options={\"multiple\"=true, \"class\"=\"AppBundle\\Entity\\Zone\", \"by_reference\"=false})\n * @EA\\PropertyAction(entity=\"City\", name=\"show\", css_class=\"col-sm-6\")\n * @EA\\PropertyAction(name=\"list\", label=\"zone.eicon\")\n */\nprotected $zones;\n\n/**\n * Virtual property\n * @EA\\Property(label=\"trait.name\", order=1, template=\"@App/widgets/color/field.html.twig\")\n * @EA\\PropertyAction(name=\"list\")\n */\npublic function coloredName() \n{\n    return $this->name .'|color~'. $this->color;\n}\n\n// snip accessors\n}\n``\nI don't know how to represent thewidgets` custom attribute using annotations.\nAs you can see yaml is much more concise, clear and orderly. The only annotation's advantage I can see is that it comes in one place with model's and Doctrine entity's definition. I'm not sure it's worth it.. ",
    "unexge": ":+1:\n. @ogizanagi i tried this first with localStorage, but since localStorage is client-side, we can't access it from PHP. so we need to hide/show menu after page loaded(e.g. firstly menu appear, after 1-2s the menu disappear), this approach seems very annoying to me :smile:.\n. @ogizanagi i tried this first with localStorage, but since localStorage is client-side, we can't access it from PHP. so we need to hide/show menu after page loaded(e.g. firstly menu appear, after 1-2s the menu disappear), this approach seems very annoying to me :smile:.\n. :+1:, also we can change the cookie key, with more symfony likely name. like you did here\n. :+1:, also we can change the cookie key, with more symfony likely name. like you did here\n. @javiereguiluz ok man, don't worry i am having fun with working open source projects :smile:.\n. @yceruto, thanks for the comments!\nIMO, batch actions also need to be apply search action. \nFor the process method, i'm thinking to add an option(adding a method to interface) for decide the batch action wants pure data(i.e. ids of the selected records) or the entity collection.\nAlso in the current implementation batch actions are services. so you can inject whatever you want.\n. @Pierstoval yes, merging list and search sounds reliable. i will add a todo for that.\n. @Pierstoval yes, merging list and search sounds reliable. i will add a todo for that.\n. @Pierstoval sorry, i misunderstood you :smile:. when you say merging, i understood to merging batch actions for list and search.\n. @Pierstoval sorry, i misunderstood you :smile:. when you say merging, i understood to merging batch actions for list and search.\n. @Benjamin-Porquet seems like you can call parent editAction after your security check.\nlike this:\n```php\nprotected function editAction() {\n    // do your security check here\nparent::editAction();\n\n}\n``. @Benjamin-Porquet seems like you can call parenteditAction` after your security check.\nlike this:\n```php\nprotected function editAction() {\n    // do your security check here\nparent::editAction();\n\n}\n```. ",
    "juaruipi": "I got this to work with VichUploaderBundle.\nI wanted to have an entity to hold images for several other entities and this is what I did:\nFirst of all I created the Image entity (it has a name field that I needed for this case which also works):\nAppBundle\\Entity\\Image\n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n/\n * Image\n \n * @ORM\\Table()\n * @ORM\\Entity()\n * @Vich\\Uploadable\n /\nclass Image\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"name\", type=\"string\", length=255)\n */\nprivate $name;\n\n/**\n * @var string\n *\n * @ORM\\Column(type=\"string\", length=255)\n */\nprivate $image;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"images\", fileNameProperty=\"image\")\n */\nprivate $imageFile;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(type=\"datetime\", length=255)\n */\nprivate $updatedAt;\n\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return Image\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * @param File|null $image\n * @return Image\n */\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n\n    if ($image) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n\n    return $this;\n}\n\n/**\n * @return File\n */\npublic function getImageFile()\n{\n    return $this->imageFile;\n}\n\n/**\n * @param string $image\n * @return Image\n */\npublic function setImage($image)\n{\n    $this->image = $image;\n\n    return $this;\n}\n\n/**\n * @return string\n */\npublic function getImage()\n{\n    return $this->image;\n}\n\n}\n```\nAnd its form type:\nAppBundle\\Form\\ImageType\n```\n<?php\nnamespace AppBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Vich\\UploaderBundle\\Form\\Type\\VichFileType;\nclass ImageType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('name')\n            ->add('imageFile', VichFileType::class)\n        ;\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\Image'\n    ));\n}\n\n}\n```\nOne of the owner entities:\nAppBundle\\Entity\\Owner\n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\ORM\\Mapping as ORM;\n/\n * Owner\n \n * @ORM\\Table()\n * @ORM\\Entity()\n /\nclass Owner\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @var Image[]|ArrayCollection\n *\n * @ORM\\ManyToMany(targetEntity=\"Image\", cascade={\"persist\"})\n * @ORM\\JoinTable(name=\"owner_images\",\n *      joinColumns={@ORM\\JoinColumn(name=\"owner_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"image_id\", referencedColumnName=\"id\", unique=true)}\n * )\n */\nprivate $images;\n\n\n/**\n * Owner constructor.\n */\npublic function __construct()\n{\n    $this->images = new ArrayCollection();\n}\n\n/**\n * Get images\n *\n * @return Image[]|ArrayCollection\n */\npublic function getImages()\n{\n    return $this->images;\n}\n\n}\n```\nThen I configured the Vich mapping and easy admin config:\napp/config/config.yml\n```\nparameters:\n    app.path.images: /images/uploaded/\nvich_uploader:\n    db_driver: orm\n    mappings:\n        images:\n            uri_prefix:         %app.path.images%\n            upload_destination: %kernel.root_dir%/../web/%app.path.images%\neasy_admin:\n    entities:\n        Owner:\n            class: AppBundle\\Entity\\Owner\n            form:\n                fields: [{ property: 'images', type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\ImageType' }}]\n            list:\n                fields: ['id','images']\n```\nHaven't had time to find a better solution but I hope this could help someone.\n. @mysiar Have you tried setting by_reference option to false for the images collection field?\neasy_admin:\n    entities:\n        Owner:\n            class: AppBundle\\Entity\\Room\n            form:\n                fields: [{ property: 'images', type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\RoomImage', by_reference: false }}]. @mysiar Have you tried setting by_reference option to false for the images collection field?\neasy_admin:\n    entities:\n        Owner:\n            class: AppBundle\\Entity\\Room\n            form:\n                fields: [{ property: 'images', type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\RoomImage', by_reference: false }}]. @mysiar Have you removed all the calls to the dump function? If it's using var_dump or similar, you can have problems when dumping entities or other objects. In this case, your image instance is now pointing to its room and you've an infinite loop there.. @mysiar Have you removed all the calls to the dump function? If it's using var_dump or similar, you can have problems when dumping entities or other objects. In this case, your image instance is now pointing to its room and you've an infinite loop there.. Hi @Tinougit,\nMaybe you had an error when pasting your code, but just to be sure, are you missing the php opening tag in your ImageType.php file?\n```\n<?php\nnamespace HeliMusicBundle\\Form;\n```. @Tinougit are you using Symfony 2.7?\nIf so, I think you'll need to define your form as a service and use its id instead.. @Tinougit I see you use the prefix \"Projet\" in all the other namespaces. Are you missing this part in your ImageType's namespace declaration?. @Tinougit I see you use the prefix \"Projet\" in all the other namespaces. Are you missing this part in your ImageType's namespace declaration?. @Tinougit did you change it in both the file and the config (entry_type)?\nIf yes, your best option would be to fork symfony-standard and commit the minimum setup to reproduce your issue.. @Tinougit did you change it in both the file and the config (entry_type)?\nIf yes, your best option would be to fork symfony-standard and commit the minimum setup to reproduce your issue.. @dsdeiz That field is part of the VichFileType and it is intended to delete the reference to the file but not the entity instance itself. This means setting the entity property which holds the path to the uploaded file (i.e. imageFile) to null. For this to work, the property must be nullable or you'll get a doctrine exception when using the checkbox.\nIf you don't want this field to appear, you should set the VichFileType option 'allow_delete' to false:\n->add('imageFile', VichFileType::class [ 'allow_delete' => false ])\nTo delete an item from the collection, use the \"Remove the item\" link instead: http://imgur.com/meGh9I7. @dsdeiz That field is part of the VichFileType and it is intended to delete the reference to the file but not the entity instance itself. This means setting the entity property which holds the path to the uploaded file (i.e. imageFile) to null. For this to work, the property must be nullable or you'll get a doctrine exception when using the checkbox.\nIf you don't want this field to appear, you should set the VichFileType option 'allow_delete' to false:\n->add('imageFile', VichFileType::class [ 'allow_delete' => false ])\nTo delete an item from the collection, use the \"Remove the item\" link instead: http://imgur.com/meGh9I7. ",
    "mysiar": "@juaruipi I tried to follow above example to get OneToMany relation with images for rooms:\nRoomImage that suppose to store images for class Room\n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\n/\n * RoomImage\n \n * @ORM\\Table(name=room_images\")\n * @ORM\\Entity(repositoryClass=\"AppBundle\\Repository\\RoomImageRepository\")\n * @Vich\\Uploadable\n /\nclass RoomImage\n{\n/**\n * @var Room\n * @ORM\\ManyToOne(targetEntity=\"Room\", inversedBy=\"images\")\n */\nprivate $room;\n\n/**\n * @var integer\n *\n * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"SEQUENCE\")\n * @ORM\\SequenceGenerator(sequenceName=\"room_images_id_seq\", allocationSize=1, initialValue=1)\n */\nprivate $id;\n\n/**\n * @ORM\\Column(name=\"image\", type=\"string\", length=255, nullable=true)\n * @var string\n */\nprivate $image;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"room_images\", fileNameProperty=\"image\")\n */\nprivate $imageFile;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(type=\"datetime\", length=255)\n */\nprivate $updatedAt;\n\n\n/**\n * Get id\n *\n * @return integer\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n\n/**\n * Set room\n *\n * @param Room $room\n *\n * @return RoomImage\n */\npublic function setRoom(Room $room = null)\n{\n    $this->room = $room;\n\n    return $this;\n}\n\n/**\n * Get room\n *\n * @return Room\n */\npublic function getRoom()\n{\n    return $this->room;\n}\n\n/**\n * @param File|null $image\n * @return Image\n */\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n\n    if ($image) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n\n    return $this;\n}\n\n/**\n * @return File\n */\npublic function getImageFile()\n{\n    return $this->imageFile;\n}\n\n/**\n * @param string $image\n * @return Image\n */\npublic function setImage($image)\n{\n    $this->image = $image;\n\n    return $this;\n}\n\n/**\n * @return string\n */\npublic function getImage()\n{\n    return $this->image;\n}\n\npublic function __toString()\n{\n    return (string)$this->image;\n}\n\n}\nclass **Room**\n<?php\nnamespace Agh\\GeoEpomBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\nuse Doctrine\\ORM\\Mapping as ORM;\n/\n * Room\n \n * @ORM\\Table(name=\"rooms\")\n * @ORM\\Entity(repositoryClass=\"AppBundle\\Repository\\RoomRepository\")\n * @Gedmo\\Loggable()\n /\nclass Room\n{\n    /\n     * @var RoomImage[]|ArrayCollection\n     \n     * @ORM\\OneToMany(targetEntity=\"RoomImage\", mappedBy=\"room\", cascade={\"persist\"})\n     /\n    private $images;\n// other functionality of the class\n/\n     * Get images\n     \n     * @return RoomImages[]|ArrayCollection\n     /\n    public function getImages()\n    {\n        return $this->images;\n    }\n/**\n * Add image\n *\n * @param RoomImage $image\n *\n * @return Room\n */\npublic function addImage(RoomImage $image)\n{\n    $image->setRoom($this);\n    $this->images[] = $image;\n\n    dump($image);\n\n    return $this;\n}\n\n/**\n * Remove image\n *\n * @param RoomImage $image\n */\npublic function removeImage(RoomImage $image)\n{\n    $image->setRoom(null);\n    $this->images->removeElement($image);\n}\n\nI modified **ImageType** as I do not need **_name_** field\n<?php\nnamespace AppBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Vich\\UploaderBundle\\Form\\Type\\VichFileType;\nclass ImageType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n//            ->add('name')\n            ->add('imageFile', VichFileType::class);\n        dump($builder);\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\RoomImage'\n    ));\n}\n\n}\nconfig file\nparameters:\n    app.path.room_images: /uploads/images/rooms\nvich_uploader:\n    db_driver: orm\nmappings:\n    room_images:\n        uri_prefix:         %app.path.room_images%\n        upload_destination: %kernel.root_dir%/../web/uploads/images/rooms\n\n```\nI have it partially working. I have form in EasyAdmin, can select and add many files but the only info stored in RoomImage table is:\n| id  | room_id | image  | updated_at |\n| ------------- | ------------- | ------------- | ------------- |\n| 1  | NULL  | image1.jpg  | 2017-01-17 13:15:15  |\n| 2  | NULL  | image2.jpg  | 2017-01-17 13:25:35  |\n. @juaruipi I tried to follow above example to get OneToMany relation with images for rooms:\nRoomImage that suppose to store images for class Room\n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\n/\n * RoomImage\n \n * @ORM\\Table(name=room_images\")\n * @ORM\\Entity(repositoryClass=\"AppBundle\\Repository\\RoomImageRepository\")\n * @Vich\\Uploadable\n /\nclass RoomImage\n{\n/**\n * @var Room\n * @ORM\\ManyToOne(targetEntity=\"Room\", inversedBy=\"images\")\n */\nprivate $room;\n\n/**\n * @var integer\n *\n * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"SEQUENCE\")\n * @ORM\\SequenceGenerator(sequenceName=\"room_images_id_seq\", allocationSize=1, initialValue=1)\n */\nprivate $id;\n\n/**\n * @ORM\\Column(name=\"image\", type=\"string\", length=255, nullable=true)\n * @var string\n */\nprivate $image;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"room_images\", fileNameProperty=\"image\")\n */\nprivate $imageFile;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(type=\"datetime\", length=255)\n */\nprivate $updatedAt;\n\n\n/**\n * Get id\n *\n * @return integer\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n\n/**\n * Set room\n *\n * @param Room $room\n *\n * @return RoomImage\n */\npublic function setRoom(Room $room = null)\n{\n    $this->room = $room;\n\n    return $this;\n}\n\n/**\n * Get room\n *\n * @return Room\n */\npublic function getRoom()\n{\n    return $this->room;\n}\n\n/**\n * @param File|null $image\n * @return Image\n */\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n\n    if ($image) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n\n    return $this;\n}\n\n/**\n * @return File\n */\npublic function getImageFile()\n{\n    return $this->imageFile;\n}\n\n/**\n * @param string $image\n * @return Image\n */\npublic function setImage($image)\n{\n    $this->image = $image;\n\n    return $this;\n}\n\n/**\n * @return string\n */\npublic function getImage()\n{\n    return $this->image;\n}\n\npublic function __toString()\n{\n    return (string)$this->image;\n}\n\n}\nclass **Room**\n<?php\nnamespace Agh\\GeoEpomBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\nuse Doctrine\\ORM\\Mapping as ORM;\n/\n * Room\n \n * @ORM\\Table(name=\"rooms\")\n * @ORM\\Entity(repositoryClass=\"AppBundle\\Repository\\RoomRepository\")\n * @Gedmo\\Loggable()\n /\nclass Room\n{\n    /\n     * @var RoomImage[]|ArrayCollection\n     \n     * @ORM\\OneToMany(targetEntity=\"RoomImage\", mappedBy=\"room\", cascade={\"persist\"})\n     /\n    private $images;\n// other functionality of the class\n/\n     * Get images\n     \n     * @return RoomImages[]|ArrayCollection\n     /\n    public function getImages()\n    {\n        return $this->images;\n    }\n/**\n * Add image\n *\n * @param RoomImage $image\n *\n * @return Room\n */\npublic function addImage(RoomImage $image)\n{\n    $image->setRoom($this);\n    $this->images[] = $image;\n\n    dump($image);\n\n    return $this;\n}\n\n/**\n * Remove image\n *\n * @param RoomImage $image\n */\npublic function removeImage(RoomImage $image)\n{\n    $image->setRoom(null);\n    $this->images->removeElement($image);\n}\n\nI modified **ImageType** as I do not need **_name_** field\n<?php\nnamespace AppBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Vich\\UploaderBundle\\Form\\Type\\VichFileType;\nclass ImageType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n//            ->add('name')\n            ->add('imageFile', VichFileType::class);\n        dump($builder);\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'AppBundle\\Entity\\RoomImage'\n    ));\n}\n\n}\nconfig file\nparameters:\n    app.path.room_images: /uploads/images/rooms\nvich_uploader:\n    db_driver: orm\nmappings:\n    room_images:\n        uri_prefix:         %app.path.room_images%\n        upload_destination: %kernel.root_dir%/../web/uploads/images/rooms\n\n```\nI have it partially working. I have form in EasyAdmin, can select and add many files but the only info stored in RoomImage table is:\n| id  | room_id | image  | updated_at |\n| ------------- | ------------- | ------------- | ------------- |\n| 1  | NULL  | image1.jpg  | 2017-01-17 13:15:15  |\n| 2  | NULL  | image2.jpg  | 2017-01-17 13:25:35  |\n. @juaruipi THANKS FOR THAT :)\nworking as charm now for adding images but problem is for editing\n\nError: Maximum function nesting level of '100' reached, aborting!. @juaruipi THANKS FOR THAT :)\nworking as charm now for adding images but problem is for editing\nError: Maximum function nesting level of '100' reached, aborting!. @juaruipi I found the problem. To solve it I had to add below config to php.ini\n\n[xdebug]\nxdebug.max_nesting_level = 1000. @juaruipi I found the problem. To solve it I had to add below config to php.ini\n[xdebug]\nxdebug.max_nesting_level = 1000. @javiereguiluz I do not have any dump functions running\n@Pierstoval I have entity with 7 relations so maybe this was a problem. @javiereguiluz I do not have any dump functions running\n@Pierstoval I have entity with 7 relations so maybe this was a problem. Is there any reason why below config line cause problem ?\n- { property: 'image', type: 'image', base_path: %vich_uploader.mappings.room_image% }\nmy vich configuration is:\n```\nparameters:\n    app.path.room_images: /uploads/images/rooms\nvich_uploader:\n    db_driver: orm\nmappings:\n    room_image:\n        uri_prefix:         %app.path.room_images%\n        upload_destination: %kernel.root_dir%/../web/uploads/images/rooms\n        namer:              vich_uploader.namer_origname\n        directory_namer:\n            service: vich_uploader.directory_namer_subdir\n            options: {chars_per_dir: 4}\n\n```\nerror message says\nParameterNotFoundException in ParameterBag.php line 100: \nYou have requested a non-existent parameter \"vich_uploader.mappings.room_image\".. Is there any reason why below config line cause problem ?\n- { property: 'image', type: 'image', base_path: %vich_uploader.mappings.room_image% }\nmy vich configuration is:\n```\nparameters:\n    app.path.room_images: /uploads/images/rooms\nvich_uploader:\n    db_driver: orm\nmappings:\n    room_image:\n        uri_prefix:         %app.path.room_images%\n        upload_destination: %kernel.root_dir%/../web/uploads/images/rooms\n        namer:              vich_uploader.namer_origname\n        directory_namer:\n            service: vich_uploader.directory_namer_subdir\n            options: {chars_per_dir: 4}\n\n```\nerror message says\nParameterNotFoundException in ParameterBag.php line 100: \nYou have requested a non-existent parameter \"vich_uploader.mappings.room_image\".. @juaruipi I have another implementation of you above code for ManyToMany this time.\nClass Room\n```\nclass Room\n{\n /\n     * @var RoomDocument[]|ArrayCollection\n     \n     * @ORM\\ManyToMany(targetEntity=\"RoomDocument\", cascade={\"persist\"})\n     * @ORM\\JoinTable(name=\"_room_documents\",\n     *      joinColumns={@ORM\\JoinColumn(name=\"room_id\", referencedColumnName=\"id\")},\n     *      inverseJoinColumns={@ORM\\JoinColumn(name=\"document_id\", referencedColumnName=\"id\")}\n     * )\n     \n     */\n    private $documents;\n/\n     * Add document\n     \n     * @param \\AppBundle\\Entity\\RoomDocument $document\n     \n     * @return Room\n     */\n    public function addDocument(\\AppBundle\\Entity\\RoomDocument $doc)\n    {\n        $this->documents[] = $doc;\n        $doc->addRoom($this);\n    return $this;\n}\n\n/**\n * Remove document\n *\n * @param \\AppBundle\\Entity\\RoomDocument $doc\n */\npublic function removeDocument(\\AppBundle\\Entity\\RoomDocument $doc)\n{\n    $this->documents->removeElement($doc);\n    $doc->removeRoom($this);\n}\n\n/**\n * Get documents\n *\n * @return RoomDocument[]|ArrayCollection\n */\npublic function getDocuments()\n{\n    return $this->documents;\n}\n\n}\n**Class RoomDocument**\nclass RoomDocument\n{\n/**\n * @ORM\\ManyToMany(targetEntity=\"Room\", mappedBy=\"documents\")\n */\nprivate $rooms;\n\n/**\n * @var integer\n *\n * @ORM\\Column(name=\"id\", type=\"integer\", nullable=false)\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"SEQUENCE\")\n * @ORM\\SequenceGenerator(sequenceName=\"geoepom.room_documents_id_seq\", allocationSize=1, initialValue=1)\n */\nprivate $id;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"title\", type=\"string\", length=255, nullable=true)\n */\nprivate $title;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"document\", type=\"string\", length=255)\n */\nprivate $document;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"room_doc\", fileNameProperty=\"document\")\n */\nprivate $documentFile;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"updated_at\", type=\"datetime\", length=255)\n */\nprivate $updatedAt;\n\n/**\n * RoomDocument constructor.\n *\n */\npublic function __construct()\n{\n    $this->rooms = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n}\n\npublic function __toString()\n{\n    return (string)$this->document;\n}\n\n/**\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * @return string\n */\npublic function getTitle()\n{\n    return $this->title;\n}\n\n/**\n * @return string\n */\npublic function getDocument()\n{\n    return $this->document;\n}\n\n/**\n * @return File\n */\npublic function getDocumentFile()\n{\n    return $this->documentFile;\n}\n\n/**\n * @return \\DateTime\n */\npublic function getUpdatedAt()\n{\n    return $this->updatedAt;\n}\n\n/**\n * @param string $title\n * @return RoomDocument\n */\npublic function setTitle($title)\n{\n    $this->title = $title;\n    return $this;\n}\n\n/**\n * @param string $document\n * @return RoomDocument\n */\npublic function setDocument($document)\n{\n    $this->document = $document;\n    return $this;\n}\n\n/**\n * @param File $documentFile\n * @return RoomDocument\n */\npublic function setDocumentFile(File $documentFile = null)\n{\n    $this->documentFile = $documentFile;\n    if ($documentFile) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n    return $this;\n}\n\n/**\n * Add room\n *\n * @param \\AppBundle\\Entity\\Room $room\n *\n * @return RoomDocument\n */\npublic function addRoom(\\AppBundle\\Entity\\Room $room)\n{\n    $this->rooms[] = $room;\n\n    return $this;\n}\n\n/**\n * Remove room\n *\n * @param \\AppBundle\\Entity\\Room $room\n */\npublic function removeRoom(\\AppBundle\\Entity\\Room $room)\n{\n    $this->rooms->removeElement($room);\n}\n\n/**\n * Get rooms\n *\n * @return \\Doctrine\\Common\\Collections\\ArrayCollection\n */\npublic function getRooms()\n{\n    return $this->rooms;\n}\n\n}\n```\nThe problem I'm facing now is that I can't have it write on inverse side despite updating room on document side and using  easy admin config\n- { property: 'documents', label: label.documents, type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\RoomDocumentType', by_reference: false }}. Looks great. I guess it is not in the dev-master tree yet,,\nIs there any way to pull it to my existing project ?. @javiereguiluz I will wait for next release, thanks. Does it mean that class text-right now will work on list view and will align listed entity values not the header?. easy_admin:\n    entities:\n        - mysiar\\AppBundle\\Entity\\Post\n. ",
    "Tinougit": "Hello,\nI tried @juaruipi's solution because I need to have an entity to hold images for other entities too but I have this error:\nCould not load type \"HeliMusicBundle\\Form\\ImageType\" \nI tried cache:clear but still the same error.\nI checked my use but it seems fine.\nCan you help me with this ?\nHere's my code:\nHeliMusicBundle\\Entity\\Image\n```\n<?php\nnamespace Projet\\HeliMusicBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n/\n * Image\n \n * @ORM\\Table(name=\"image\")\n * @ORM\\Entity(repositoryClass=\"Projet\\HeliMusicBundle\\Repository\\ImageRepository\")\n * @Vich\\Uploadable\n /\nclass Image\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"name\", type=\"string\", length=255)\n */\nprivate $name;\n\n/**\n * @var string\n */\nprivate $image;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"cover_img\", fileNameProperty=\"image\")\n */\nprivate $imageFile;\n\n/**\n * @var int\n *\n * @ORM\\Column(name=\"img_size\", type=\"integer\", nullable=true)\n */\nprivate $imgSize;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"created_at\", type=\"datetime\")\n */\nprivate $createdAt;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"updated_at\", type=\"datetime\")\n */\nprivate $updatedAt;\n\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return Image\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * @param File|null $image\n * @return Image\n */\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n\n    if ($image) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n\n    return $this;\n}\n\n/**\n * @return File\n */\npublic function getImageFile()\n{\n    return $this->imageFile;\n}\n\n/**\n * @param string $image\n * @return Image\n */\npublic function setImage($image)\n{\n    $this->image = $image;\n\n    return $this;\n}\n\n/**\n * @return string\n */\npublic function getImage()\n{\n    return $this->image;\n}\n\n/**\n * Set imgSize\n *\n * @param integer $imgSize\n *\n * @return Image\n */\npublic function setImgSize($imgSize)\n{\n    $this->imgSize = $imgSize;\n\n    return $this;\n}\n\n/**\n * Get imgSize\n *\n * @return int\n */\npublic function getImgSize()\n{\n    return $this->imgSize;\n}\n\n/**\n * Set createdAt\n *\n * @param \\DateTime $createdAt\n *\n * @return Image\n */\npublic function setCreatedAt($createdAt)\n{\n    $this->createdAt = $createdAt;\n\n    return $this;\n}\n\n/**\n * Get createdAt\n *\n * @return \\DateTime\n */\npublic function getCreatedAt()\n{\n    return $this->createdAt;\n}\n\n/**\n * Set updatedAt\n *\n * @param \\DateTime $updatedAt\n *\n * @return Image\n */\npublic function setUpdatedAt($updatedAt)\n{\n    $this->updatedAt = $updatedAt;\n\n    return $this;\n}\n\n/**\n * Get updatedAt\n *\n * @return \\DateTime\n */\npublic function getUpdatedAt()\n{\n    return $this->updatedAt;\n\n}\n```\nHeliMusicBundle\\Form\\ImageType\n```\n<?php\nnamespace HeliMusicBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Vich\\UploaderBundle\\Form\\Type\\VichFileType;\nclass ImageType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('name')\n            ->add('imageFile', VichFileType::class)\n        ;\n    }\n/**\n * @param OptionsResolver $resolver\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'HeliMusicBundle\\Entity\\Image'\n    ));\n}\n\n}\n```\nHeliMusicBundle\\Entity\\Image\n```\n<?php\nnamespace Projet\\HeliMusicBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/\n * Page\n \n * @ORM\\Table(name=\"page\")\n * @ORM\\Entity(repositoryClass=\"Projet\\HeliMusicBundle\\Repository\\PageRepository\")\n /\nclass Page\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"name\", type=\"string\", length=255)\n */\nprivate $name;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"meta_title\", type=\"string\", length=255)\n */\nprivate $metaTitle;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"meta_keywords\", type=\"string\", length=255, nullable=true)\n */\nprivate $metaKeywords;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"meta_content\", type=\"string\", length=255, nullable=true)\n */\nprivate $metaContent;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"meta_author\", type=\"string\", length=50, nullable=true)\n */\nprivate $metaAuthor;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"page_title\", type=\"string\", length=255, nullable=true)\n */\nprivate $pageTitle;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"footer_title\", type=\"string\", length=255, nullable=true)\n */\nprivate $footerTitle;\n\n/**\n * @var Image[]|ArrayCollection\n *\n * @ORM\\ManyToMany(targetEntity=\"Image\", cascade={\"persist\"})\n * @ORM\\JoinTable(name=\"page_images\",\n *      joinColumns={@ORM\\JoinColumn(name=\"page_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"image_id\", referencedColumnName=\"id\", unique=true)}\n * )\n */\nprivate $images;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"created_at\", type=\"datetime\")\n */\nprivate $createdAt;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"updated_at\", type=\"datetime\")\n */\nprivate $updatedAt;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"Projet\\HeliMusicBundle\\Entity\\Video\", cascade={\"persist\"})\n */\nprivate $videos;\n\n\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set metaTitle\n *\n * @param string $metaTitle\n *\n * @return Page\n */\npublic function setMetaTitle($metaTitle)\n{\n    $this->metaTitle = $metaTitle;\n\n    return $this;\n}\n\n/**\n * Get metaTitle\n *\n * @return string\n */\npublic function getMetaTitle()\n{\n    return $this->metaTitle;\n}\n\n/**\n * Set metaKeywords\n *\n * @param string $metaKeywords\n *\n * @return Page\n */\npublic function setMetaKeywords($metaKeywords)\n{\n    $this->metaKeywords = $metaKeywords;\n\n    return $this;\n}\n\n/**\n * Get metaKeywords\n *\n * @return string\n */\npublic function getMetaKeywords()\n{\n    return $this->metaKeywords;\n}\n\n/**\n * Set metaContent\n *\n * @param string $metaContent\n *\n * @return Page\n */\npublic function setMetaContent($metaContent)\n{\n    $this->metaContent = $metaContent;\n\n    return $this;\n}\n\n/**\n * Get metaContent\n *\n * @return string\n */\npublic function getMetaContent()\n{\n    return $this->metaContent;\n}\n\n/**\n * Set metaAuthor\n *\n * @param string $metaAuthor\n *\n * @return Page\n */\npublic function setMetaAuthor($metaAuthor)\n{\n    $this->metaAuthor = $metaAuthor;\n\n    return $this;\n}\n\n/**\n * Get metaAuthor\n *\n * @return string\n */\npublic function getMetaAuthor()\n{\n    return $this->metaAuthor;\n}\n\n/**\n * Set pageTitle\n *\n * @param string $pageTitle\n *\n * @return Page\n */\npublic function setPageTitle($pageTitle)\n{\n    $this->pageTitle = $pageTitle;\n\n    return $this;\n}\n\n/**\n * Get pageTitle\n *\n * @return string\n */\npublic function getPageTitle()\n{\n    return $this->pageTitle;\n}\n\n/**\n * Set footerTitle\n *\n * @param string $footerTitle\n *\n * @return Page\n */\npublic function setFooterTitle($footerTitle)\n{\n    $this->footerTitle = $footerTitle;\n\n    return $this;\n}\n\n/**\n * Get footerTitle\n *\n * @return string\n */\npublic function getFooterTitle()\n{\n    return $this->footerTitle;\n}\n\n/**\n * Set createdAt\n *\n * @param \\DateTime $createdAt\n *\n * @return Page\n */\npublic function setCreatedAt($createdAt)\n{\n    $this->createdAt = $createdAt;\n\n    return $this;\n}\n\n/**\n * Get createdAt\n *\n * @return \\DateTime\n */\npublic function getCreatedAt()\n{\n    return $this->createdAt;\n}\n\n/**\n * Set updatedAt\n *\n * @param \\DateTime $updatedAt\n *\n * @return Page\n */\npublic function setUpdatedAt($updatedAt)\n{\n    $this->updatedAt = $updatedAt;\n\n    return $this;\n}\n\n/**\n * Get updatedAt\n *\n * @return \\DateTime\n */\npublic function getUpdatedAt()\n{\n    return $this->updatedAt;\n}\n\n/**\n * page constructor.\n */\npublic function __construct()\n{\n    $this->images = new ArrayCollection();\n\n    $this->albums = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    $this->posts = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    $this->videos = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n}\n\n/**\n * Add album\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Album $album\n *\n * @return Page\n */\npublic function addAlbum(\\Projet\\HeliMusicBundle\\Entity\\Album $album)\n{\n    $this->albums[] = $album;\n\n    return $this;\n}\n\n/**\n * Remove album\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Album $album\n */\npublic function removeAlbum(\\Projet\\HeliMusicBundle\\Entity\\Album $album)\n{\n    $this->albums->removeElement($album);\n}\n\n/**\n * Get albums\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getAlbums()\n{\n    return $this->albums;\n}\n\n\n/**\n * Get images\n *\n * @return Image[]|ArrayCollection\n */\npublic function getImages()\n{\n    return $this->images;\n}\n\n/**\n * Add post\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Post $post\n *\n * @return Page\n */\npublic function addPost(\\Projet\\HeliMusicBundle\\Entity\\Post $post)\n{\n    $this->posts[] = $post;\n\n    return $this;\n}\n\n/**\n * Remove post\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Post $post\n */\npublic function removePost(\\Projet\\HeliMusicBundle\\Entity\\Post $post)\n{\n    $this->posts->removeElement($post);\n}\n\n/**\n * Get posts\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getPosts()\n{\n    return $this->posts;\n}\n\n/**\n * Add video\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Video $video\n *\n * @return Page\n */\npublic function addVideo(\\Projet\\HeliMusicBundle\\Entity\\Video $video)\n{\n    $this->videos[] = $video;\n\n    return $this;\n}\n\n/**\n * Remove video\n *\n * @param \\Projet\\HeliMusicBundle\\Entity\\Video $video\n */\npublic function removeVideo(\\Projet\\HeliMusicBundle\\Entity\\Video $video)\n{\n    $this->videos->removeElement($video);\n}\n\n/**\n * Get videos\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getVideos()\n{\n    return $this->videos;\n}\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return Page\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n}\n```\nAnd config files\n```\nVich config\nvich_uploader:\n    db_driver: orm\nmappings:\n    cover_img:\n        uri_prefix:         /web/uploads/cover\n        upload_destination: '%kernel.root_dir%/../web/uploads/cover'\n        namer:\n            service: vich_uploader.namer_origname\n\neasy_admin config\neasy_admin:\nentities:\n        Page:\n            class: Projet\\HeliMusicBundle\\Entity\\Page\n            label: 'Pages'\n            list:\n                title: 'Listing des %%entity_label%%'\n                fields:\n                    - 'id'\n                    - 'cover_img'\n                    - { property: 'name', label: 'Nom de la page'}\n                    - { property: 'createdAt', label: 'Date de cr\u00e9ation' }\n                    - { property: 'updatedAt', label: 'Date de mise \u00e0 jour' }\n            form:\n                title: 'Edition'\n                fields:\n                    - { property: 'name', label: 'Nom de la page' }\n                    - { property: 'metaTitle', help: 'Titre appara\u00eessant dans l''onglet' }\n                    - { property: 'metaKeywords', help: 'SEO - Mots cl\u00e9 de la page (non apparants sur le site)' }\n                    - { property: 'metaContent', help: 'SEO - Contenu g\u00e9n\u00e9ral de la page (non apparant sur le site)' }\n                    - { property: 'metaAuthor', help: 'SEO - Auteur de la page (non apparant sur le site)' }\n                    - { property: 'pageTitle', label: 'Titre de la page', help: 'Titre appara\u00eessant sur la photo d''en-t\u00eate' }\n                    - { property: 'images', type: 'collection', type_options: { entry_type: 'HeliMusicBundle\\Form\\ImageType' }}\n```\nThanks !\n. Hi,\nI'm sorry, I forgot to copy the php tag, but it's in my ImageType.php file. (code edited here). @juaruipi \nThanks for reply.\nI'm using Symfony 3.3.6, you were on Symfony 3.x when you posted your solution ?\n. @juaruipi yes it was missing in ImageType namespace, I added it, clear cache, but still the same error :(\n. @juaruipi yes it was missing in ImageType namespace, I added it, clear cache, but still the same error :(\n. @juaruipi well done, it's working !!\nI forget the prefix in the config (and 'data_class' too)...\nThanks a lot ! :). @juaruipi well done, it's working !!\nI forget the prefix in the config (and 'data_class' too)...\nThanks a lot ! :). ",
    "dsdeiz": "Anyone happen to know what might be the cause when the \"Delete\" checkbox when ticked doesn't delete the entity nor unset the referenced entity. Referring to this checkbox.. ",
    "Anna5555": "Hello. Thank you for sharing. Beginner on Symfony, having followed your advice with the help of your codes, I have an error when sending an image:\n\nNoSuchPropertyException\nHTTP 500 Internal Server Error\nCould not determine access type for property \"images\" in class \"MO\\WebAppBundle\\Entity\\WebApp\".\n\nHere is my code :   \n\nMy form :\n```\n{{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}\n...\n{{ form_row(form.images) }}\n...\n\n{{ form_end(form) }}\n```\n\nWebApp.php = parent\n\n```\n<?php\nnamespace MO\\WebAppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n//pour le slug\nuse Gedmo\\Mapping\\Annotation as Gedmo;\n/\n * WebApp\n \n * @ORM\\Table(name=\"mo_travel\")\n * @ORM\\Entity(repositoryClass=\"MO\\WebAppBundle\\Repository\\WebAppRepository\")\n \n */\nclass WebApp\n{\n    /\n     * @var int\n     \n     * @ORM\\Column(name=\"id\", type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     /\n    private $id;\n/**\n * @var Image[]|ArrayCollection\n *\n * @ORM\\ManyToMany(targetEntity=\"Image\", cascade={\"persist\"})\n * @ORM\\JoinTable(name=\"mo_travel_images\",\n *      joinColumns={@ORM\\JoinColumn(name=\"travel_id\", referencedColumnName=\"id\")},\n *      inverseJoinColumns={@ORM\\JoinColumn(name=\"image_id\", referencedColumnName=\"id\", unique=true)}\n * )\n */\nprivate $images;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(name=\"date\", type=\"datetime\")\n */\nprivate $date;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"title\", type=\"string\", length=255)\n */\nprivate $title;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"author\", type=\"string\", length=255)\n */\nprivate $author;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"content\", type=\"text\")\n */\nprivate $content;\n\n/**\n * @ORM\\Column(name=\"published\", type=\"boolean\")\n */\nprivate $published = true;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"MO\\WebAppBundle\\Entity\\Category\", cascade={\"persist\"})\n * @ORM\\JoinTable(name=\"mo_travel_category\")\n */\nprivate $categories;\n\n/**\n * @ORM\\Column(name=\"updated_at\", type=\"datetime\", nullable=true)\n *\n * @var \\DateTime\n */\nprivate $updatedAt;\n\n/**\n * @Gedmo\\Slug(fields={\"title\"})\n * @ORM\\Column(name=\"slug\", type=\"string\", length=255, unique=true)\n */\nprivate $slug;\n\n/**\n * WebApp constructor.\n */\npublic function __construct()\n{\n    // Par d\u00e9faut, la date de l'annonce est la date d'aujourd'hui\n    $this->date = new \\Datetime();\n    $this->categories = new ArrayCollection();\n    $this->images = new ArrayCollection();\n}\n\n/**\n * @ORM\\PreUpdate\n */\npublic function updateDate()\n{\n    $this->setUpdatedAt(new \\Datetime());\n}\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set date\n *\n * @param \\DateTime $date\n *\n * @return WebApp\n */\npublic function setDate($date)\n{\n    $this->date = $date;\n\n    return $this;\n}\n\n/**\n * Get date\n *\n * @return \\DateTime\n */\npublic function getDate()\n{\n    return $this->date;\n}\n\n/**\n * Set title\n *\n * @param string $title\n *\n * @return WebApp\n */\npublic function setTitle($title)\n{\n    $this->title = $title;\n\n    return $this;\n}\n\n/**\n * Get title\n *\n * @return string\n */\npublic function getTitle()\n{\n    return $this->title;\n}\n\n/**\n * Set author\n *\n * @param string $author\n *\n * @return WebApp\n */\npublic function setAuthor($author)\n{\n    $this->author = $author;\n\n    return $this;\n}\n\n/**\n * Get author\n *\n * @return string\n */\npublic function getAuthor()\n{\n    return $this->author;\n}\n\n/**\n * Set content\n *\n * @param string $content\n *\n * @return WebApp\n */\npublic function setContent($content)\n{\n    $this->content = $content;\n\n    return $this;\n}\n\n/**\n * Get content\n *\n * @return string\n */\npublic function getContent()\n{\n    return $this->content;\n}\n\n/**\n * @param boolean $published\n *\n * @return WebApp\n */\npublic function setPublished($published)\n{\n    $this->published = $published;\n}\n\n/**\n * @return mixed\n */\npublic function getPublished()\n{\n    return $this->published;\n}\n\n/**\n * Add category\n *\n * @param \\MO\\WebAppBundle\\Entity\\Category $category\n *\n * @return WebApp\n */\npublic function addCategory(\\MO\\WebAppBundle\\Entity\\Category $category)\n{\n    $this->categories[] = $category;\n\n    return $this;\n}\n\n/**\n * Remove category\n *\n * @param \\MO\\WebAppBundle\\Entity\\Category $category\n */\npublic function removeCategory(\\MO\\WebAppBundle\\Entity\\Category $category)\n{\n    $this->categories->removeElement($category);\n}\n\n/**\n * Get categories\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getCategories()\n{\n    return $this->categories;\n}\n\n/**\n * @return mixed\n */\npublic function getUpdatedAt()\n{\n    return $this->updatedAt;\n}\n\n/**\n * @param mixed $updatedAt\n *\n * @return WebApp\n */\npublic function setUpdatedAt($updatedAt)\n{\n    $this->updatedAt = $updatedAt;\n}\n\n/**\n * Set slug\n *\n * @param string $slug\n *\n * @return WebApp\n */\npublic function setSlug($slug)\n{\n    $this->slug = $slug;\n\n    return $this;\n}\n\n/**\n * Get slug\n *\n * @return string\n */\npublic function getSlug()\n{\n    return $this->slug;\n}\n\n/*----------------------------------*/\n/**\n * Get images\n *\n * @return Image[]|ArrayCollection\n */\npublic function getImages()\n{\n    return $this->images;\n}\n\n}\n```\n\nImage.php = multiples children\n\n```\n<?php\nnamespace MO\\WebAppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n/\n * Image\n \n * @ORM\\Table()\n * @ORM\\Entity(repositoryClass=\"MO\\WebAppBundle\\Repository\\ImageRepository\")\n * @Vich\\Uploadable\n /\nclass Image\n{\n    /\n     * @ORM\\ManyToOne(targetEntity=\"MO\\WebAppBundle\\Entity\\WebApp\")\n     * @ORM\\JoinColumn(nullable=false)\n     */\n    private $travel;\n/**\n * @var int\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n *\n */\nprivate $id;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"url\", type=\"string\", length=255)\n */\nprivate $url;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"alt\", type=\"string\", length=255)\n */\nprivate $alt;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"name\", type=\"string\", length=255)\n */\nprivate $name;\n\n/**\n * @var string\n *\n * @ORM\\Column(type=\"string\", length=255)\n */\nprivate $image;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"image_webapp\", fileNameProperty=\"image\")\n */\nprivate $imageFile;\n\n/**\n * @var int\n *\n * @ORM\\Column(name=\"img_size\", type=\"integer\", nullable=true)\n */\nprivate $imgSize;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(type=\"datetime\", length=255)\n */\nprivate $updatedAt;\n\n/**\n * Set travel\n *\n * @param \\MO\\WebAppBundle\\Entity\\WebApp $travel\n *\n * @return Image\n */\npublic function setTravel(\\MO\\WebAppBundle\\Entity\\WebApp $travel)\n{\n    $this->travel = $travel;\n\n    return $this;\n}\n\n/**\n * Get travel\n *\n * @return \\MO\\WebAppBundle\\Entity\\WebApp\n */\npublic function getTravel()\n{\n    return $this->travel;\n}\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set url\n *\n * @param string $url\n *\n * @return Image\n */\npublic function setUrl($url)\n{\n    $this->url = $url;\n\n    return $this;\n}\n\n/**\n * Get url\n *\n * @return string\n */\npublic function getUrl()\n{\n    return $this->url;\n}\n\n/**\n * Set alt\n *\n * @param string $alt\n *\n * @return Image\n */\npublic function setAlt($alt)\n{\n    $this->alt = $alt;\n\n    return $this;\n}\n\n/**\n * Get alt\n *\n * @return string\n */\npublic function getAlt()\n{\n    return $this->alt;\n}\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return Image\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * @param File|null $image\n * @return Image\n */\npublic function setImageFile(File $image = null)\n{\n    $this->imageFile = $image;\n\n    if ($image) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n\n    return $this;\n}\n\n/**\n * @return File\n */\npublic function getImageFile()\n{\n    return $this->imageFile;\n}\n\n/**\n * @param string $image\n * @return Image\n */\npublic function setImage($image)\n{\n    $this->image = $image;\n\n    return $this;\n}\n\n/**\n * @return string\n */\npublic function getImage()\n{\n    return $this->image;\n}\n\n/**\n * Set imgSize\n *\n * @param integer $imgSize\n *\n * @return Image\n */\npublic function setImgSize($imgSize)\n{\n    $this->imgSize = $imgSize;\n\n    return $this;\n}\n\n/**\n * Get imgSize\n *\n * @return int\n */\npublic function getImgSize()\n{\n    return $this->imgSize;\n}\n\n}\n```\n\nWebAppType.php\n\n```\n<?php\nnamespace MO\\WebAppBundle\\Form;\nuse MO\\WebAppBundle\\Entity\\Image;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\DateTimeType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType;\nuse Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextareaType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Symfony\\Component\\Form\\FormEvent;\nuse Symfony\\Component\\Form\\FormEvents;\nclass WebAppType extends AbstractType\n{\n    /*\n     * R\u00e9utilisabilit\u00e9 de notre formulaire\n     * {@inheritdoc}\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('date',      DateTimeType::class)\n            ->add('title',     TextType::class)\n            ->add('author',    TextType::class)\n            ->add('content',   TextareaType::class)\n            ->add('images', FileType::class,\n                array(\n                    'required'    => false,\n                    'data_class' => null,\n                    'label'      => 'MOWebAppBundle:Image',\n            ))\n        //->add('images',     ImageType::class)\n\n        /*->add('images', FileType::class, array(\n            'multiple'     => true,\n            'label' => false,\n            'label_attr' => array('class' => 'MOWebAppBundle:Image'),\n            'required' => true,\n        ))\n\n\n         /*\n          * Rappel :\n          ** - 1er argument : nom du champ, ici \u00ab categories \u00bb, car c'est le nom de l'attribut\n          ** - 2e argument : type du champ, ici \u00ab CollectionType \u00bb qui est une liste de quelque chose\n          ** - 3e argument : tableau d'options du champ\n          */\n        ->add('categories', EntityType::class, array(\n            'class'        => 'MOWebAppBundle:Category',\n            'choice_label' => 'name',\n            'expanded'     => true,\n            'multiple'     => true,\n        ))\n        ->add('save',      SubmitType::class);\n\n    // On ajoute une fonction qui va \u00e9couter un \u00e9v\u00e8nement de formulaire\n    $builder->addEventListener(\n        FormEvents::PRE_SET_DATA,    // 1er argument : L'\u00e9v\u00e8nement qui nous int\u00e9resse : ici, PRE_SET_DATA\n        function(FormEvent $event) { // 2e argument : La fonction \u00e0 ex\u00e9cuter lorsque l'\u00e9v\u00e8nement est d\u00e9clench\u00e9\n            // On r\u00e9cup\u00e8re notre objet WebApp (travel) sous-jacent\n            $travel = $event->getData();\n\n            // Cette condition est importante, on en reparle plus loin\n            if (null === $travel) {\n                return; // On sort de la fonction sans rien faire lorsque $advert vaut null\n            }\n\n            // Si l'annonce n'est pas publi\u00e9e, ou si id null\n            if (!$travel->getPublished() || null === $travel->getId()) {\n                // Alors on ajoute le champ published\n                $event->getForm()->add('published', CheckboxType::class, array('required' => false));\n            } else {\n                // Sinon, on le supprime\n                $event->getForm()->remove('published');\n            }\n        }\n    );\n}\n\n/**\n * {@inheritdoc}\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'MO\\WebAppBundle\\Entity\\WebApp'\n    ));\n}\n\n}\n```\n\nImageType.php\n\n```\n<?php\nnamespace MO\\WebAppBundle\\Form;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Vich\\UploaderBundle\\Form\\Type\\VichFileType;\nclass ImageType extends AbstractType\n{\n    /*\n     * @param FormBuilderInterface $builder\n     * @param array $options\n     /\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('name')\n            ->add('images', VichFileType::class);\n    }\n/**\n * {@inheritdoc}\n */\npublic function configureOptions(OptionsResolver $resolver)\n{\n    $resolver->setDefaults(array(\n        'data_class' => 'MO\\WebAppBundle\\Entity\\Image'\n    ));\n}\n\n}\n```\n\nconfig.yml\n\n```\nVichUploaderBundle\nvich_uploader:\n    db_driver: orm\n    mappings:\n        image_webapp:\n            uri_prefix:         /uploads/img\n            upload_destination: '%kernel.root_dir%/../web/uploads/img'\n        # le fichier doit \u00eatre supprim\u00e9 lorsqu'un nouveau fichier est t\u00e9l\u00e9charg\u00e9\n        delete_on_update :    true\n        #le fichier doit \u00eatre supprim\u00e9 lorsque l'entit\u00e9 est supprim\u00e9e\n        delete_on_remove :    true\n\neasy_admin:\n    entities:\n        WebApp:\n            class: MO\\WebAppBundle\\Entity\\WebApp\n            form:\n                fields: [{ property: 'images', type: 'collection', type_options: { entry_type: 'MO\\WebAppBundle\\Form\\ImageType' }}]\n            list:\n                fields: ['id','image_webapp']\n```\n. ",
    "maximaam": "@Anna5555 did you fix that? I have the same issue and cannot get out of it.\nthx. @Anna5555 did you fix that? I have the same issue and cannot get out of it.\nthx. ",
    "Arielblues": "I just used the above examples to make this viche multiupload work.\nThis multiupload works by \"adding another item\". \nAre there any new improvemts in this field?\nBy actually selecting whole bunch of images at the same time?\nAnd even better also have a drag and drop reorder once files are uploaded? \n. ",
    "rasanga": "@javiereguiluz thanks :+1: it solved the problem\n. ",
    "snaks12": "Hello\n@reypm I've run on the same problem today i've found that my entity don't go through the configure method in JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\Configurator\\EntityTypeConfigurator\nso i added the data attribute via the config like this \nyaml\n{ property: 'tag', type: 'entity', type_options: { class: 'MyEntity', multiple: true, attr: { data-widget: 'select2' } }  }\ni don't know if this feature was intended but this is my solution :)\n. I test easyadmin for not a very long time so i don't know how this part work exactly but when i saw my select don't get the data-widget. I searched where this is added. Next i put a var_dump($options) in configure and it doesn't trigger on the entity with inversBy.\nI can't try more than that now sorry :(\n. ",
    "k3rn3l3rr0r": "@javiereguiluz no problem! You are welcome. Thank you for making my life a bit easier! :+1: \n. ",
    "gregoirepaqueron": "btn-info have not been fixed with it ?. ",
    "dkozickis": "Ref #1174 & #1226 also. Kindly pinging @javiereguiluz \nProviding use case -\nAs I cannot define max_result per Entity, I have to overwrite findAll and modify $maxPerPage based on Entity. I'm not going to change anything else in findAll apart from checking what entity is being worked on and setting maxPerPage accordingly. As findAll relies on executeDynamicMethod, I have to pull it down to be overwrite controller just for the sake of findAll working.\nNow this is two sided, obviously - there's no per entity max_results, so I have to fiddle with overwriting. Most likely this is a very limited example due to specific of my system,\nWith that said - @javiereguiluz will you accept if we re-open #1226 and implement max_results per entity? \n@anthony-launay . Ref #1174 & #1226 also. Kindly pinging @javiereguiluz \nProviding use case -\nAs I cannot define max_result per Entity, I have to overwrite findAll and modify $maxPerPage based on Entity. I'm not going to change anything else in findAll apart from checking what entity is being worked on and setting maxPerPage accordingly. As findAll relies on executeDynamicMethod, I have to pull it down to be overwrite controller just for the sake of findAll working.\nNow this is two sided, obviously - there's no per entity max_results, so I have to fiddle with overwriting. Most likely this is a very limited example due to specific of my system,\nWith that said - @javiereguiluz will you accept if we re-open #1226 and implement max_results per entity? \n@anthony-launay . Similar happening to me on 1.12.6, symfony 2.8.4, Doctrine Bundle 1.4\n\n[2/2] An exception has been thrown during the rendering of a template (\"Notice: Undefined index: airportData\") in @EasyAdmin/default/list.html.twig at line 129.\n[1/2] ContextErrorException: Notice: Undefined index: airportData   -\nin vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php at line 40\n\nWhen trying to sort by OneToOne\nphp\n     /**\n     * @var string\n     *\n     * @ORM\\OneToOne(targetEntity=\"AppBundle\\Entity\\AirportsMasterData\", fetch=\"EAGER\")\n     */\n    private $airportData;\n. Found the issue (at least part of it) in Search/Paginator.php \n$paginator = new Pagerfanta(new DoctrineORMAdapter($queryBuilder, true, false));\nDoctrineORMAdapter second parameter ($fetchJoinCollection), if set to true returns Object without associated field, if set to false returns Object with associated field.\nInvestigating further... \n. I'm possibly hijacking this issue, as my issue might be different but still related. \nLet me know if you want me to open new issue.\nOn the matter:\nI was able to fix my issue by defining custom ListQueryBuilder where I'm explicitly joining my relation.\nRelation (One To One unidirectional):\nphp\n/**\n     * @var string\n     *\n     * @ORM\\OneToOne(targetEntity=\"AppBundle\\Entity\\AirportsMasterData\", fetch=\"EAGER\")\n     */\n    private $airportData;\nCustom ListQueryBuilder:\n``` php\nprotected function createMonitoredAirportsListQueryBuilder($entityConfig, $sortDirection, $sortField)\n    {\n        /* @var EntityManager /\n        $em = $this->get('doctrine')->getManagerForClass($entityConfig);\n    $queryBuilder = $em->createQueryBuilder()\n        ->select(array('entity', 'ad'))\n        ->from($entityConfig, 'entity')\n        ->leftJoin('entity.airportData', 'ad');\n\n    if (null !== $sortField) {\n        if ($sortField == \"airportData\") {\n            $queryBuilder->orderBy('ad.airportIcao', $sortDirection);\n        } else {\n            $queryBuilder->orderBy('entity.'.$sortField, $sortDirection);\n        }\n    }\n\n    return $queryBuilder;\n}\n\n```\nNote that I'm joining on my OneToOne relation and then doing custom orderBy if sortField is my OneToOne relation. \nSnippet of my AirportsMasterData:\n``` php\nclass AirportsMasterData\n{\n    public function __toString()\n    {\n        return $this->airportIcao;\n    }\n/**\n * @var string\n *\n * @ORM\\Column(name=\"airport_icao\", type=\"string\", length=4, unique=true)\n */\nprivate $airportIcao;\n\n```\nQuestions I have remaining:\n1. Am I doing something wrong when I get \"undefined index\" error in my original issue? EasyAdmin should at least attempt to sort by relation id. Right or wrong? It works when DoctrineORMAdapter  is called with fetchJoinCollection as false (please ref my previous comment). doctrine:schema:validate shows all OK.\n2. Is custom ListQueryBuilder the correct way to resolve this or the expectation is that EasyAdmin should work with that by default? (sort of related to 1st question)\n3. Not sure how to implement this - but would it be a good idea for EasyAdmin to have an option to define how to sort on related field? i.e. in my example I have to define custom ListQueryBuilder to say that I wan't to sort on ad.airportIcao (from related table) instead of sorting on relation IDs. It is also the same field that __toString returns. \nDear @javiereguiluz , appreciate if you can comment whenever possible.\n. ",
    "phpdev": "@Pierstoval I updated the issue.\n. It doesn't work.\nCode:\n``` php\n        $em = $this->getDoctrine()->getManager();\n    $c = new Category();\n    $c->setName('Category 001');\n    $c->setSlug('category-001');\n    $c->setContent('category 001');\n\n    $p = new Post();\n    $p->setTitle('Post 001');\n    $p->setSlug('post-001');\n    $p->setSummary('Post 001');\n    $p->setContent('Post 001');\n\n    $c->addPost($p);\n\n    $em->persist($c);\n    $em->flush();\n\n```\nResult:\nCategory:\n\nPost:\n\nconfig.yml\n``` yaml\neasy_admin:\nformats:\n    date:     'd.m.Y'\n    time:     'H:i:s'\n    datetime: 'd.m.Y H:i:s'\n\nlist_max_results: 10\n\nentities:\n    User:\n        class: AppBundle\\Entity\\User\n    Post:\n        class: AppBundle\\Entity\\Post\n    Category:\n        class: AppBundle\\Entity\\Category\n\n```\n. @Pierstoval I've tried.\nThis code works, but...\n```\n        $em = $this->getDoctrine()->getManager();\n    $c = new Category();\n    $c->setName('Category 001');\n    $c->setSlug('category-001');\n    $c->setContent('category 001');\n\n    $p = new Post();\n    $p->setTitle('Post 001');\n    $p->setSlug('post-001');\n    $p->setSummary('Post 001');\n    $p->setContent('Post 001');\n\n    $c->addPost($p);\n\n    $em->persist($c);\n    $em->flush();\n\n```\nEasyadmin does not work. \"update query\" does not send.\nProfiler:\nForm Data:\n\nDoctrine Query:\n\n. I checked. easy-admin-demo have the same problem. :confused:\n. @Pierstoval Congratulations :smile: \nIf I find the solution I share here.\n. @Pierstoval Congratulations :smile: \nIf I find the solution I share here.\n. Problem is solved. @javierrodriguezcuevas Thanks :)\n. @javiereguiluz Yes. I solved the problem. Thanks...\nSolution:\nContact:\n            class: AppBundle\\Entity\\Contact\n            list:\n                actions: [{ name: 'show', label: 'action.show' }]\n            disabled_actions: ['new', 'edit', 'delete']\n. I updated \"setImageFile\" and the problem was solved.\n. Thanks.\n2)\nList action it works.\n\nShow action is not works.\n\n3) Translation is working but I see the missing tab.\n. @javiereguiluz Thanks.\n. ### 4. Translation Missing : edit action\nConfig for \"help\"\nyml\n- { property: 'slug', type: 'text', help: 'Otomatik olu\u015fturmak i\u00e7in bo\u015f b\u0131rak\u0131n\u0131z.' }\nConfig for Post(Yaz\u0131)\n``` yml\napp/Resources/translations/messages.tr.yml\nPost: Yaz\u0131\n```\nImage:\n\n. Thanks @javiereguiluz and @javierrodriguezcuevas.\n. In this way it is solved.\nResources/views/default/menu.html.twig\ntwig\n{% if item.target != '_blank' %}\n    {% set menu_params = { menuIndex: item.menu_index, submenuIndex: item.submenu_index } %}\n{% else %}\n    {% set menu_params = { } %}\n{% endif %}\n. @javiereguiluz yes, but so how will the other routes? (example: contact page) \nI think the moment. I could not find a solution for everyone yet.\n. What if we do this?\ntwig\n{% set path =\n    item.type == 'link' ? item.url :\n    item.type == 'route' ? path(item.route, item.params) :\n    item.type == 'entity' ? path('easyadmin', { entity: item.entity, action: 'list' }|merge(menu_params)|merge(item.params)) :\n    item.type == 'empty' ? '#' : ''\n%}\n. @javiereguiluz Thanks :smile: \n. @javiereguiluz thanks for test. \n. Maybe this can help.\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/860#issuecomment-192605475\n. @javiereguiluz Thanks for PR.\n. I'm not sure if the right solution. @Pierstoval Is it ok now? :smile: \n. I'm not sure if the right solution. @Pierstoval Is it ok now? :smile: \n. @Pierstoval thanks for review. @javiereguiluz okay thanks.\n. @Pierstoval thanks for review. @javiereguiluz okay thanks.\n. > @slmcncb if you can work finishing this, there is a script in Resources/bin/ that compiles all the JS into a single file, so there is no need to do it manually. If you can't work on this, I can finish it.\n@javiereguiluz I can't work on this, You can finish it. Thanks.\n. @hhamon thanks for review. I agree. In addition this must be corrected.\n. ",
    "luispabon": "I'm finding the same problem on a M2O relationship. \n. I'm finding the same problem on a M2O relationship. \n. Hmmm after some investigation, doesn't seem like add is being called on the related entity, leaving the child entity unlinked. I wonder if this is a doctrine issue.\nOverriding the admin controller to add a preUpdateEntityNameEntity where I manually link child entity to parent works, like so\n``` php\n    // src/AppBundle/AdminController.php\n/**\n * Ensure relations are saved.\n * \n * @param PortfolioItem $portfolioItem\n */\npublic function preUpdatePortfolioItemsEntity(PortfolioItem $portfolioItem)\n{\n    foreach ($portfolioItem->getSlideshowItems() as $slideshowItem) {\n        /** @var SlideshowItem $slideshowItem */\n        $slideshowItem->setPortfolioItem($portfolioItem);\n    }\n}\n\n```\nWithout, both entities aren't linked, even though each entity:\n``` php\n    // Entity\\PortfolioItem\n    /\n     * @param SlideshowItem $slideshowItem\n     \n     * @return self\n     /\n    public function addSlideshowItem(SlideshowItem $slideshowItem) : self\n    {\n        $this->slideshowItems[] = $slideshowItem;\n        $slideshowItem->setPortfolioItem($this);\n    return $this;\n}\n\n```\nand \n``` php\n    // Entity\\SlideshowItem\n    /\n     * @param mixed $portfolioItem\n     \n     * @return self\n     /\n    public function setPortfolioItem(PortfolioItem $portfolioItem) : self\n    {\n        $this->portfolioItem = $portfolioItem;\n    if ($portfolioItem->getSlideshowItems()->contains($this) === false) {\n        $portfolioItem->addSlideshowItem($this);\n    }\n\n    return $this;\n}\n\n```\n. Hmmm after some investigation, doesn't seem like add is being called on the related entity, leaving the child entity unlinked. I wonder if this is a doctrine issue.\nOverriding the admin controller to add a preUpdateEntityNameEntity where I manually link child entity to parent works, like so\n``` php\n    // src/AppBundle/AdminController.php\n/**\n * Ensure relations are saved.\n * \n * @param PortfolioItem $portfolioItem\n */\npublic function preUpdatePortfolioItemsEntity(PortfolioItem $portfolioItem)\n{\n    foreach ($portfolioItem->getSlideshowItems() as $slideshowItem) {\n        /** @var SlideshowItem $slideshowItem */\n        $slideshowItem->setPortfolioItem($portfolioItem);\n    }\n}\n\n```\nWithout, both entities aren't linked, even though each entity:\n``` php\n    // Entity\\PortfolioItem\n    /\n     * @param SlideshowItem $slideshowItem\n     \n     * @return self\n     /\n    public function addSlideshowItem(SlideshowItem $slideshowItem) : self\n    {\n        $this->slideshowItems[] = $slideshowItem;\n        $slideshowItem->setPortfolioItem($this);\n    return $this;\n}\n\n```\nand \n``` php\n    // Entity\\SlideshowItem\n    /\n     * @param mixed $portfolioItem\n     \n     * @return self\n     /\n    public function setPortfolioItem(PortfolioItem $portfolioItem) : self\n    {\n        $this->portfolioItem = $portfolioItem;\n    if ($portfolioItem->getSlideshowItems()->contains($this) === false) {\n        $portfolioItem->addSlideshowItem($this);\n    }\n\n    return $this;\n}\n\n```\n. Just for reference for people stumbling upon this question, the __toString method is used on the drop down as the name of the related entity; thus something like\nphp\n    /**\n     * @return string\n     */\n    public function __toString() : string\n    {\n        return sprintf('%s (%s)', $this->getTitle(), $this->getSubtitle());\n    }\ncould do the trick.\n. That worked, deleted the entry, cleared cache, loaded easyadmin, added a blank line to config, reloaded easyadmin with no issues.\n. Gracias, @javiereguiluz  :+1: \n. You're of course right, somehow missed that part on the docs :+1:  apologies!\n. The \"autosave\" feature would be to local storage, as per ticket description. The current feature that prevents from navigating away doesn't work with the back button or when closing the browser or when your session expires.. Understood, please ping me up when you're ready for it to help out :+1: Gracias!. I'm finding this problem as well. I'm currently migrating from s3 to 4, as well as upgraded this bundle to the new composer package.. I'm finding this problem as well. I'm currently migrating from s3 to 4, as well as upgraded this bundle to the new composer package.. \n. \n. This is working fine on Symfony 3.4. I transplanted the easy admin config as is as I have it all on a separate file.. This is working fine on Symfony 3.4. I transplanted the easy admin config as is as I have it all on a separate file.. The error is different when trying to create a new item:\n\nThe dumped array at the bottom is the value of $this->request->attributes->get('easyadmin'); at EasyCorp\\Bundle\\EasyAdminBundle\\Form\\Extension\\EasyAdminExtension at line 58. The error is different when trying to create a new item:\n\nThe dumped array at the bottom is the value of $this->request->attributes->get('easyadmin'); at EasyCorp\\Bundle\\EasyAdminBundle\\Form\\Extension\\EasyAdminExtension at line 58. On the error that happens on edit, interestingly, there's no queries being reported at all on the web profiler. The doctrine section is empty.\nThe normal index pages work fine though.. On the error that happens on edit, interestingly, there's no queries being reported at all on the web profiler. The doctrine section is empty.\nThe normal index pages work fine though.. ```yaml\nparameters:\n    image_form_type:            'Vich\\UploaderBundle\\Form\\Type\\VichImageType'\n    file_form_type:             'Vich\\UploaderBundle\\Form\\Type\\VichFileType'\neasy_admin:\n    site_name: \"FOOFOOFOOF.co.uk\"\n    design:\n        form_theme: 'vertical'\n        assets:\n            js:\n                - 'https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js'\n                - 'https://cloud.tinymce.com/stable/tinymce.min.js?apiKey=%tinymce_api_key%'\n            css:\n                - 'https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.min.css'\nentities:\n    BlogPost:\n        label: 'Blog'\n        class: App\\Entity\\BlogPost\n        list:\n            title: 'Blog posts'\n            fields:\n                - title\n                - { property: slug, label: Preview, template: field_blog_post_url.html.twig }\n                - publicationDate\n                - createdAt\n        form:\n            title: 'Add or edit a blog post'\n            fields:\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: publication_date, type: 'App\\Form\\DatePickerType', css_class: 'col-lg-6 col-md-6' }\n                - { property: intro, label: Blog index intro }\n                - { property: body, label: Main text}\n\n    PortfolioItems:\n        label: 'Portfolio items'\n        class: App\\Entity\\PortfolioItem\n        list:\n            title: 'Portfolio items'\n            fields:\n                - id\n                - title\n                - subtitle\n                - position\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - updatedAt\n                - active\n        form:\n            title: 'Add a new entry to the portfolio'\n            fields:\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: subtitle, css_class: 'col-lg-6 col-md-6' }\n                - description\n                - position\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload' }\n                - { property: active, label: 'Is active'}\n        edit:\n            title: 'Edit portfolio entry'\n\n    SlideshowItems:\n        label: 'Slideshow images'\n        class: App\\Entity\\SlideshowItem\n        list:\n            title: 'Slideshow items'\n            fields:\n                - title\n                - type\n                - portfolioItem\n                - position\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - url\n                - active\n        form:\n            title: 'Add media to a slideshow'\n            fields:\n                - { property: portfolioItem, label: 'Attach to portfolio entry', css_class: 'col-lg-6 col-md-6' }\n                - { property: position, label: 'Position (starts at 0)', css_class: 'col-lg-6 col-md-6' }\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: subtitle, css_class: 'col-lg-6 col-md-6' }\n                - type\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload', css_class: 'col-lg-6 col-md-6' }\n                - { property: url, label: 'Link (if not an image)', css_class: 'col-lg-6 col-md-6' }\n                - { property: active, label: 'Is active'}\n\n    AboutMe:\n        label: 'About me'\n        class: App\\Entity\\AboutMe\n        disabled_actions: ['new', 'delete']\n        list:\n            title: 'About me'\n            fields:\n                - id\n                - title\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - updatedAt\n        form:\n            title: 'Add a new entry to About Me'\n            fields:\n                - title\n                - body\n                - footNote\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload' }\n\n    Upload:\n        label: 'File uploads'\n        class: App\\Entity\\Upload\n        disabled_actions: ['delete']\n        list:\n            title: 'File uploads'\n            fields:\n                - id\n                - title\n                - slug\n                - createdAt\n                - updatedAt\n        form:\n            title: 'Upload a new file'\n            fields:\n                - title\n                - { property: uploadFile, type: '%file_form_type%', label: 'Upload file' }\n\n.yaml\nparameters:\n    image_form_type:            'Vich\\UploaderBundle\\Form\\Type\\VichImageType'\n    file_form_type:             'Vich\\UploaderBundle\\Form\\Type\\VichFileType'\neasy_admin:\n    site_name: \"FOOFOOFOOF.co.uk\"\n    design:\n        form_theme: 'vertical'\n        assets:\n            js:\n                - 'https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.min.js'\n                - 'https://cloud.tinymce.com/stable/tinymce.min.js?apiKey=%tinymce_api_key%'\n            css:\n                - 'https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.min.css'\nentities:\n    BlogPost:\n        label: 'Blog'\n        class: App\\Entity\\BlogPost\n        list:\n            title: 'Blog posts'\n            fields:\n                - title\n                - { property: slug, label: Preview, template: field_blog_post_url.html.twig }\n                - publicationDate\n                - createdAt\n        form:\n            title: 'Add or edit a blog post'\n            fields:\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: publication_date, type: 'App\\Form\\DatePickerType', css_class: 'col-lg-6 col-md-6' }\n                - { property: intro, label: Blog index intro }\n                - { property: body, label: Main text}\n\n    PortfolioItems:\n        label: 'Portfolio items'\n        class: App\\Entity\\PortfolioItem\n        list:\n            title: 'Portfolio items'\n            fields:\n                - id\n                - title\n                - subtitle\n                - position\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - updatedAt\n                - active\n        form:\n            title: 'Add a new entry to the portfolio'\n            fields:\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: subtitle, css_class: 'col-lg-6 col-md-6' }\n                - description\n                - position\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload' }\n                - { property: active, label: 'Is active'}\n        edit:\n            title: 'Edit portfolio entry'\n\n    SlideshowItems:\n        label: 'Slideshow images'\n        class: App\\Entity\\SlideshowItem\n        list:\n            title: 'Slideshow items'\n            fields:\n                - title\n                - type\n                - portfolioItem\n                - position\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - url\n                - active\n        form:\n            title: 'Add media to a slideshow'\n            fields:\n                - { property: portfolioItem, label: 'Attach to portfolio entry', css_class: 'col-lg-6 col-md-6' }\n                - { property: position, label: 'Position (starts at 0)', css_class: 'col-lg-6 col-md-6' }\n                - { property: title, css_class: 'col-lg-6 col-md-6' }\n                - { property: subtitle, css_class: 'col-lg-6 col-md-6' }\n                - type\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload', css_class: 'col-lg-6 col-md-6' }\n                - { property: url, label: 'Link (if not an image)', css_class: 'col-lg-6 col-md-6' }\n                - { property: active, label: 'Is active'}\n\n    AboutMe:\n        label: 'About me'\n        class: App\\Entity\\AboutMe\n        disabled_actions: ['new', 'delete']\n        list:\n            title: 'About me'\n            fields:\n                - id\n                - title\n                - { property: image, type: 'image', base_path: '%vich_uploader_image_upload_uri_prefix%' }\n                - updatedAt\n        form:\n            title: 'Add a new entry to About Me'\n            fields:\n                - title\n                - body\n                - footNote\n                - { property: imageFile, type: '%image_form_type%', label: 'Upload image', help: 'Select file to upload' }\n\n    Upload:\n        label: 'File uploads'\n        class: App\\Entity\\Upload\n        disabled_actions: ['delete']\n        list:\n            title: 'File uploads'\n            fields:\n                - id\n                - title\n                - slug\n                - createdAt\n                - updatedAt\n        form:\n            title: 'Upload a new file'\n            fields:\n                - title\n                - { property: uploadFile, type: '%file_form_type%', label: 'Upload file' }\n\n``. Looks likeEasyCorp\\Bundle\\EasyAdminBundle\\EventListener\\RequestPostInitializeListener::initializeRequest()is never called - I can see it on the web profiler on \"not called listeners\". Looks likeEasyCorp\\Bundle\\EasyAdminBundle\\EventListener\\RequestPostInitializeListener::initializeRequest()is never called - I can see it on the web profiler on \"not called listeners\". the eventeasy_admin.post_initializeis never fired by anything as far as I can tell.. the eventeasy_admin.post_initializeis never fired by anything as far as I can tell.. ..... and it suddenly started working. I didn't clear the symfony cache at all, but I did reboot the containers entirely - could this be some sort of APC cache issue either on easyadmin or doctrine?APP_ENVisdevand debug is on.\n. ..... and it suddenly started working. I didn't clear the symfony cache at all, but I did reboot the containers entirely - could this be some sort of APC cache issue either on easyadmin or doctrine?APP_ENVisdev` and debug is on.\n. ",
    "javierrodriguezcuevas": "You need to set by_reference option to false in collection form in Category:\nyaml\n- { property: 'posts', type_options: { by_reference: false} }\nand also as @Pierstoval said modify Category entity: \n``` php\n// Category.php\n/**\n * Add posts\n *\n * @param \\AppBundle\\Entity\\Post $posts\n * @return Category\n */\npublic function addPost(\\AppBundle\\Entity\\Post $posts)\n{\n    if (!$this->posts->contains($posts)) {\n        $this->posts[] = $posts;\n        $posts->addCategory($this);\n    }\n\n    return $this;\n}\n\n/**\n * Remove posts\n *\n * @param \\AppBundle\\Entity\\Post $posts\n */\npublic function removePost(\\AppBundle\\Entity\\Post $posts)\n{\n    $this->posts->removeElement($posts);\n    $posts->removeCategory($this);\n}\n\n```\nthis is said in documentation http://symfony.com/doc/current/cookbook/form/form_collections.html\n\nA second potential issue deals with the Owning Side and Inverse Side of Doctrine relationships. In this example, if the \"owning\" side of the relationship is \"Task\", then persistence will work fine as the tags are properly added to the Task. However, if the owning side is on \"Tag\", then you'll need to do a little bit more work to ensure that the correct side of the relationship is modified.\nThe trick is to make sure that the single \"Task\" is set on each \"Tag\". One easy way to do this is to add some extra logic to addTag(), which is called by the form type since by_reference is set to false:\n. @Ziiweb The override method have two arguments, $entity and $fields, you need to pass $entity argument to createForm function like this:\n```\npublic function createBillNewForm($entity, $fields)\n{\n    $form = $this->createForm(BillType::class, $entity);\nreturn $form;\n\n}\n```\n. I think the first one is because the label passed to form_label is translated with parameters in block form_row:\n\n```\n{% set _trans_parameters = { '%entity_name%':  easyadmin.entity.name|trans, '%entity_label%': easyadmin.entity.label|trans } %}\n    {% set _field_label = easyadmin.field['label']|default(null) %}\n{{- form_label(form, _field_label|trans(_trans_parameters, translation_domain)) -}}\n\n```\nThe translated string is finally translated again with no parameters in 'form_div_layout.html.twig' in block form_label:\n<label{% for attrname, attrvalue in label_attr %} {{ attrname }}=\"{{ attrvalue }}\"{% endfor %}>{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</label>\nI downloaded easy-admin-demo and removed the translation filter and the missing message dissapear, but maybe it can break other translations:\n{{- form_label(form, _field_label) -}}\n\n\n. I think the third one is because the label in {{ form_row(form.delete) }} is translated in buildForm in VichFileType:\nphp\n        $form->add('delete', $this->getFieldType('checkbox'), array(\n            'label'     => $translator->trans('form.label.delete', array(), 'VichUploaderBundle'),\n            'required'  => false,\n            'mapped'    => false,\n        ));\nat this point the label is 'Deleted?' and it will be translated again in form_label:\ntwig\n        {% if form.delete is defined %}\n            {{ form_row(form.delete) }}\n        {% endif %}\nPrint value result: \ntwig\n        {% if form.delete is defined %}\n            {{ form.delete.vars.label }}\n            {{ form_row(form.delete) }}\n        {% endif %}\n\n. And the second one happends when attribute 'data-prototype' is merged in collection_widget block:\ntwig\n{%- block collection_widget -%}\n    {% if prototype is defined %}\n        {%- set attr = attr|merge({'data-prototype': form_row(prototype) }) -%}\n    {% endif %}\n    {{- block('form_widget') -}}\n{%- endblock collection_widget -%}\nat this point {{ prototype.vars.label }} is 'name__label' and it will be translated in form_label called from form_row(prototype)\n. About Delete?, the problem is that the label value in twig view is 'Delete?' and this string will be\ntranslated with default translation domain 'messages', maybe you can overwrite label value like this:\ntwig\n{{ form_row(form.delete, {label: 'action.delete'}) }}\nthe missing warning dissapear and it will use your key 'action.delete' in 'messages'\n\n\nAbout the second error (name__label translation) I can't see any solution unless you add key 'name__label' with value 'name__label' in 'messages', something unthinkable in my opinion, and is not the best solution, because if the user change de prototype_name in form collection options the missing translation will appear again. So maybe we could leave it unfixed.\n. Yes, I think it could need some jQuery for that effect. I can make something, but I can't start until next week, I have take holidays today! :smiley: \nIn dev environment at this moment I can't see any solution.\n. In this pull request the sticky footer start when the user hits the bottom of the viewport, like this:\n\nthis is what you mean?\n. Yes, it's easy.\n. Sorry for double comment before, I'm with the  smartphone. The reason to make custom plugin was to wrap everything related with sticky footer in one place and because the sticky elements wrap the the element in a div wich brokes design with bootstrap CSS clases. In the custom plugin I create a placeholder which is positioned just after the element and tells the plugin the trigger point when footer has positioned fixed. It's makes the same but with a different aproach\n. It's look like RequiredOptionConfigurator takes required value information from Doctrine annotations and the column that is asked to retrieve this information in this case is imageFile and it don't have Doctrine annotations. \nTo test this, I set the annotation @ORM\\Column(type=\"string\", length=255) in imageFile column\n\n* @Vich\\UploadableField(mapping=\"product_images\", fileNameProperty=\"image\")\n * @ORM\\Column(type=\"string\", length=255)\n *\n * @var File\n */\nprivate $imageFile;\n\nand here is the dump:\n\nnow the required value is true. Obviously this is not the solution, because this column is not a mapped  column, but can help to know \"why is happening\".\nAbout the \"how to solve it\" at this moment I don't know how\n. I see your commit, but when you edit a product, imageFile browser validation fails because is required and it's empty. In other projects I set the required option based on if is new entity or edit entity.\n. Thanks javiereguiluz, It looks great with the trick of web debug toolbar! :smiley: \n. This pull request don't work when a collection has elements loaded at begining, sorry. I'm trying to fix it.\n. I fix it, I'm making a new pull request because I had my fork outdated\n. I thought more in functionality than design and also I like the default \"empty\" template :smile:.\nThe only thing that I see now is that perhaps the name of the block is too generic, do you think it should be changed to something like \"easyadmin_empty_collection\"?\n. I've been looking at the code DoctrineEncryptBundle and in this case maybe it is a typehint bug, if you look the services definitions: \n<!-- Encryption service(subscriber) for encrypt/decrypt entities properties -->    \n        <service id=\"tdm_doctrine_encrypt.orm_subscriber.encrypt\" class=\"TDM\\DoctrineEncryptBundle\\Subscribers\\ORM\\ORMEncrypt\">\n            <argument type=\"service\" id=\"annotation_reader\" />\n            <tag name=\"doctrine.event_listener\" event=\"prePersist\" priority=\"-1000\"/>\n            <tag name=\"doctrine.event_listener\" event=\"preUpdate\" priority=\"-1000\"/>\n        </service>\n        <!-- Decryption service(subscriber) for encrypt/decrypt entities properties -->    \n        <service id=\"tdm_doctrine_encrypt.orm_subscriber.decrypt\" class=\"TDM\\DoctrineEncryptBundle\\Subscribers\\ORM\\ORMDecrypt\">\n            <argument type=\"service\" id=\"annotation_reader\" />\n            <tag name=\"doctrine.event_subscriber\" priority=\"1000\"/>\n        </service>\nand the class constructor that subscribers extends:\nabstract class AbstractDoctrineEncryptSubscriber implements EventSubscriber { \n...\n    public function __construct(Reader $annReader, EncryptorInterface $service) {\n        $this->annReader = $annReader;\n        $this->encryptor = $service;\n    }\n...\nI think the second parameter shoud be optional and allow null, no?. \nI also installed DoctrineEncryptBundle and changed the constructor like this:\npublic function __construct(Reader $annReader, EncryptorInterface $service = null) { \nand both bundles works fine:\n\n\n. Sorry I didn't check the bundle compiler pass, now I see the real problem.\nI quick fix for making both bundles work together could be change the order in AppKernel, EasyAdminBundle should be added after TDMDoctrineEncryptBundle\n. ",
    "ghostal": "Thought I would just add this here, as I was curious about the by_reference type option:\n\nSimilarly, if you're using the CollectionType field where your underlying collection data is an object (like with Doctrine's ArrayCollection), then by_reference must be set to false if you need the adder and remover (e.g. addAuthor() and removeAuthor()) to be called.\n\nhttp://symfony.com/doc/current/reference/forms/types/collection.html#by-reference. Thanks Javier, I'll keep that in mind, but unfortunately in this case it's an issue of the options on a many-to-one association in the form that need to be ordered. Unless I'm mistaken, Doctrine's OrderBy annotation has no effect in this regard:\nphp\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"Country\")\n     * @ORM\\JoinColumn(name=\"following_country_rank_1_id\", referencedColumnName=\"id\")\n     */\n    private $following_country_rank_1;. ",
    "Glancuu": "@javierrodriguezcuevas Thanks! ;). ",
    "abdielcs": "I make it work we a minimal few adjustments. I use the bundle suggested by @mkalisz77 in combination with https://github.com/a2lix/I18nDoctrineBundle, and follow all the instructions in http://a2lix.fr/bundles/translation-form/. The changes was:\n1- Create a virtual property for each property in the translation class and force to return one specific language (work with the default language too but I needed spanish).\n2- Change the configured doctrine filter for getting all languages on edit form:\nyaml\noneLocale:\n    class: A2lix\\I18nDoctrineBundle\\Doctrine\\ORM\\Filter\\OneLocaleFilter\nto \nyaml\noneLocale:\n      class: A2lix\\I18nDoctrineBundle\\Doctrine\\ORM\\Filter\\ManyLocalesFilter\n3- Also I needed to force the session language in my back-end so in my  AdminController I have:\nphp\nprotected function initialize(Request $request)\n    {\n        $this->get('translator')->setLocale('es');\n        if ($locale = $request->attributes->get('_locale')) {\n            $request->getSession()->set('_locale', 'es');\n        } else {\n            // if no explicit locale has been set on this request, use one from the session\n            $request->setLocale($request->getSession()->get('_locale', 'es'));\n        }\n        parent::initialize($request);\n    }\nWith that in place just need to do:\nyaml\neasy_admin:\n    entities:\n        Accesorios:\n            class: AppBundle\\Entity\\Accesorio\n            form:\n                fields:\n                    - { property: 'translations', type: 'a2lix_translations'}\nHope this help you.\n. Mmm, I see your point, I copied exactly as it was in  http://symfony.com/doc/current/cookbook/session/locale_sticky_session.html#creating-a-localelistener and since it work I did not pay much attention. Well, I will be pending, but it seem to be a trick, thanks.\n. Yes I was also looking and it not seem hard to do.  I was thinking in override menu.html.twig with some function call before menu being paint that check if some conditions are meet. I don't find an easy way to put that function in AdminController since is not exposed as a service or accessible from twig extensions, something like the Persisting/Updating/Removing functions  applied to menus and accessible in my override admin class. Also is the problem of some hidden menu being the default one. But in some other custom service and not putting that menu as the default it should work. Thanks a lot for the advice. \n. Yes I was also looking and it not seem hard to do.  I was thinking in override menu.html.twig with some function call before menu being paint that check if some conditions are meet. I don't find an easy way to put that function in AdminController since is not exposed as a service or accessible from twig extensions, something like the Persisting/Updating/Removing functions  applied to menus and accessible in my override admin class. Also is the problem of some hidden menu being the default one. But in some other custom service and not putting that menu as the default it should work. Thanks a lot for the advice. \n. The problem is that the parent / original AdminController just execute the dynamic method delete<EntityName>Action(), and whatever happen always remove the entity. It doesn't matter what the method return. \n. I needed to deny the action of removing the 'admin' user, even for himself , so this  is how I resolved. \n1-Create a custom exception for handling the problem.\n```\nnamespace AppBundle\\Exception;\nclass CustomForbiddenActionException extends \\RuntimeException\n{\n    public function __construct($errorMessage)\n    {\n        parent::__construct($errorMessage);\n    }\n}\n```\n2-Them override the deleteAction() on AdminController for intercept the custom exception.\n```\nclass AdminController extends BaseAdminController\n{\n     //...\n     protected function deleteAction()\n     {\n        try{\n            return parent::deleteAction();\n        }catch(CustomForbiddenActionException $e){\n        $session = $this->request->getSession();\n        $session->getFlashBag()->add('error', $e->getMessage());\n        $refererUrl = $this->request->query->get('referer', '');\n\n        return  !empty($refererUrl)\n            ? $this->redirect(urldecode($refererUrl))\n            : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n}\n\n}\n```\n3-Them all that we need is throwing the exception on preRemoveUserEntity.\nclass AdminController extends BaseAdminController\n{\n    //...\n    public function preRemoveUserEntity(User $user)\n    {\n        if($user->getUsername() == 'admin'){\n            throw new CustomForbiddenActionException('You can't drop the \\'admin\\' user.');\n        }\n    }\n}\n. @javiereguiluz Thanks to you for the amazing bundle :+1: \n. ",
    "AyoubKhial": "did you find the solution ? i have the same problem :(\nadding the annotation @OrderBy provided by doctrine didn't make a change.. did you find the solution ? i have the same problem :(\nadding the annotation @OrderBy provided by doctrine didn't make a change.. ",
    "elietheocari": "Here is how I fixed it, in case it helps somebody. I am not sure whether this is the best way around or not, but it works for me :)\nMy issue\nIn my case, just to reply to @javiereguiluz 's post from Feb 16, I could not use the @OrderBy annotation because it seems to be only available for OneToMany and ManyToMany associations.\nI have an Event class with the $type field : one event is related to 1..1 type, one type to 0..N events.\nfile: src/Entity/Event.php\nclass Event\n{\n...\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"App\\Entity\\EventType\")\n     * @ORM\\JoinColumn(nullable=false)\n     * @Assert\\NotNull\n     */\n    private $type;\n...\nWhen I display the form view for the Event class, I do have a dropdown list for all EventType entities, with sorting based on the EventType ID... whereas I need sorting based on the label.\nSolution\nI had to override AdminController for my entity:\nfile: src/config/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Event:\n            controller: App\\Controller\\EasyAdmin\\EventController\nCreate a custom QueryBuilder in it :\nfile: src/Controller/EasyAdmin/EventController.php\n```\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nclass EventController extends AdminController\n{\n    public function getEventTypeQueryBuilder(EntityRepository $er)\n    {\n        return $er->createQueryBuilder('event_type')->orderBy('event_type.label', 'ASC');\n    }\n}\n```\nAnd ask for the use of the custom query builder in the config file:\nfile: src/config/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Event:\n            form:\n                fields:\n                    -\n                        property: type\n                        type_options:\n                            query_builder: [App\\Controller\\EasyAdmin\\EventController, getEventTypeQueryBuilder]\nWhat do you think?\nI was almost certain that there was some kind of class-level annotation, provided by Doctrine, which allowed to define the default \"order by\" directive applied to the related entity for all subsequent requests. I was not able to find it though. I could not make it work with anything less verbose as well.\nIf someone has an easier solution for that, please let us know!. Here is how I fixed it, in case it helps somebody. I am not sure whether this is the best way around or not, but it works for me :)\nMy issue\nIn my case, just to reply to @javiereguiluz 's post from Feb 16, I could not use the @OrderBy annotation because it seems to be only available for OneToMany and ManyToMany associations.\nI have an Event class with the $type field : one event is related to 1..1 type, one type to 0..N events.\nfile: src/Entity/Event.php\nclass Event\n{\n...\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"App\\Entity\\EventType\")\n     * @ORM\\JoinColumn(nullable=false)\n     * @Assert\\NotNull\n     */\n    private $type;\n...\nWhen I display the form view for the Event class, I do have a dropdown list for all EventType entities, with sorting based on the EventType ID... whereas I need sorting based on the label.\nSolution\nI had to override AdminController for my entity:\nfile: src/config/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Event:\n            controller: App\\Controller\\EasyAdmin\\EventController\nCreate a custom QueryBuilder in it :\nfile: src/Controller/EasyAdmin/EventController.php\n```\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController;\nclass EventController extends AdminController\n{\n    public function getEventTypeQueryBuilder(EntityRepository $er)\n    {\n        return $er->createQueryBuilder('event_type')->orderBy('event_type.label', 'ASC');\n    }\n}\n```\nAnd ask for the use of the custom query builder in the config file:\nfile: src/config/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Event:\n            form:\n                fields:\n                    -\n                        property: type\n                        type_options:\n                            query_builder: [App\\Controller\\EasyAdmin\\EventController, getEventTypeQueryBuilder]\nWhat do you think?\nI was almost certain that there was some kind of class-level annotation, provided by Doctrine, which allowed to define the default \"order by\" directive applied to the related entity for all subsequent requests. I was not able to find it though. I could not make it work with anything less verbose as well.\nIf someone has an easier solution for that, please let us know!. ",
    "ThomasLandauer": "Some improvement on the solution above: The first code block is not necessary:\nyaml\ncontroller: App\\Controller\\EasyAdmin\\EventController. @javiereguiluz: The original post is ambiguous, so I'm not sure if everybody is talking about the same question ;-)\n\nScenario 1: Use EasyAdmin's \"Edit\" form to upload a file. Am I right that this is the scenario you are talking about? And you are saying that one must use VichUploaderBundle?\n\nScenario 2: Use a normal Symfony form to upload a file. Then use EasyAdmin to just display the stored file path or allow editing it (the path). So no file upload in EasyAdmin. This is my scenario, and I'm getting the same error message as the OP. I'm also not using VichUploaderBundle. Should I provide more details or create a sample repository?. @javiereguiluz: The original post is ambiguous, so I'm not sure if everybody is talking about the same question ;-)\n\n\nScenario 1: Use EasyAdmin's \"Edit\" form to upload a file. Am I right that this is the scenario you are talking about? And you are saying that one must use VichUploaderBundle?\n\nScenario 2: Use a normal Symfony form to upload a file. Then use EasyAdmin to just display the stored file path or allow editing it (the path). So no file upload in EasyAdmin. This is my scenario, and I'm getting the same error message as the OP. I'm also not using VichUploaderBundle. Should I provide more details or create a sample repository?. @HeahDude I was thinking that @Assert\\Date() checks if the submitted data makes a valid date. NotNull only checks if there is something - what if I submit 1990-15-43 as my birthday?\n\nIn your code example the \\DateTimeInterface type hint will probably throw an exception in this case. But what will the user get - just an error 500?\nAnd if birthday is not a valid use case for @Assert\\Date() - what would then be one?. +1 for the deprecation, since it educates the users.\nSo the date validation is defined \"implicitly\" by the fact that (a) the property is private and (b) its setter has a \\DateTimeInterface type hint?. Thanks! I summed it up at https://stackoverflow.com/q/52821530/1668200. How-to for previous comment: Add this to your composer.json, on the same indentation level as require:\njson\n    \"conflict\": {\n        \"twig/twig\": \"2.6.1\"\n    },. How-to for previous comment: Add this to your `composer.json`, on the same indentation level as `require`:json\n    \"conflict\": {\n        \"twig/twig\": \"2.6.1\"\n    },. ",
    "twifty": "@javiereguiluz I will fork the project and, when I get time, apply my ideas.\n. Added a pull request\n. When I get chance, I'll update the docs.\n. I'm having one hell of a time trying to get these Tests to pass. I have 20 passed, 209 failed and 78 caused an error. This is running PHPUnit under Symfony 3.0.2.\n. I'm having one hell of a time trying to get these Tests to pass. I have 20 passed, 209 failed and 78 caused an error. This is running PHPUnit under Symfony 3.0.2.\n. @Pierstoval Thanks for pointing that out. Every project I contribute to has their own coding style, it's hard to keep track sometimes. I'll fix that and add a test as soon as I get chance.\nHowever, it may be for nothing according to @javiereguiluz response above.\n. @Pierstoval Thanks for pointing that out. Every project I contribute to has their own coding style, it's hard to keep track sometimes. I'll fix that and add a test as soon as I get chance.\nHowever, it may be for nothing according to @javiereguiluz response above.\n. @yceruto The AdminController needs to create an instance of the second controller. If that controller has a custom constructor it will be declared as a service. Not everything in Symfony revolves around the service container.\n. @yceruto Private services cannot be obtained from the container. Take for example a User controller, especially in a CRUD setting, some people like to inject the repository as a private service, that way it cannot be modified in another part of the code. Also, just because Symfony implements ContainerAwareInterface in it's default controller, it doesn't mean that all controllers must implement it.\nI agree, however, is_subclass_of should be enough. PHP 5.3.3 is hardly used these days, but, it is still out there. I added it just to cover all bases.\nQuickly looking at the code, I see the events are issued twice. Maybe the controller should be added to the event object? I think the event should be issued twice simply because there are two controllers involved. It should be up to the listener to decide how to handle that. Opinions are welcome.\nAs soon as I know that @javiereguiluz committed to adding this feature, I'll make the necessary changes. Before that, feel free to fork and apply the changes yourself.\n. @yceruto Private services cannot be obtained from the container. Take for example a User controller, especially in a CRUD setting, some people like to inject the repository as a private service, that way it cannot be modified in another part of the code. Also, just because Symfony implements ContainerAwareInterface in it's default controller, it doesn't mean that all controllers must implement it.\nI agree, however, is_subclass_of should be enough. PHP 5.3.3 is hardly used these days, but, it is still out there. I added it just to cover all bases.\nQuickly looking at the code, I see the events are issued twice. Maybe the controller should be added to the event object? I think the event should be issued twice simply because there are two controllers involved. It should be up to the listener to decide how to handle that. Opinions are welcome.\nAs soon as I know that @javiereguiluz committed to adding this feature, I'll make the necessary changes. Before that, feel free to fork and apply the changes yourself.\n. @yceruto Sounds interesting. How will you decide which controller should handle the request? IMO, having a method to directly call the custom controller, avoiding the default, is a better method. I don't have time right now, but a possible solution would be to dynamically add routes.\n. @yceruto Sounds interesting. How will you decide which controller should handle the request? IMO, having a method to directly call the custom controller, avoiding the default, is a better method. I don't have time right now, but a possible solution would be to dynamically add routes.\n. @yceruto It looks good. The only issue I have is that the event will be fired on every request, even though access to the admin backend would be rare at best. I like the event/listener approach though. Perhaps a custom event to redirect before the default controller is loaded?\n. @yceruto It looks good. The only issue I have is that the event will be fired on every request, even though access to the admin backend would be rare at best. I like the event/listener approach though. Perhaps a custom event to redirect before the default controller is loaded?\n. @Pierstoval I like your thinking there. That approach would be very easy to setup. It just requires easy admin to support them and making sure it's routes are loaded last. The only change required in the controller is to change the route declaration and change $request->query->get to $request->parameter->get. They could even be added to the parameter list. Oh why didn't I see that earlier :/\nAn after thought, the route creation would also need updating, but again, it's a simple fix.\n. This kind of configuration would take the easy out of EasyAdminBundle.\n. I have to disagree with this 'feature'. This is an admin bundle and not a country database.\n. ",
    "Gyvastis": "@rubengc an awesome snippet, thanks! Added a compiler pass to replace EasyAdminFormType with the modified one and it works like a charm.. ",
    "dfinfo": "@Gyvastis i'm really fluent with compiler passes ;-)\nCan you share your code or give a little explanation on how to do this ?\nThank you by advance. Hi,\ngreat online course about easyadmin and useful practices to customize collectypes at https://knpuniversity.com/screencast/easyadminbundle/collection-type\nhope it helps. Hi,\nyou don't need to use dependency injection to merge your menus from several bundles. The way i do that is quite simple.\nI use imports in my app's config.yml file to load easy_admin's configs in each bundle i need \nsrc app/config/config.yml\nimports:\n    - { resource: 'DfinfoGcaueFormationBundle/Resources/config/easyadmin/' }\n    - { resource: 'DfinfoGcaueCdocBundle/Resources/config/easyadmin/' }\n    - { resource: 'DfinfoGcaueBaseBundle/Resources/config/easyadmin/' }\nEach bundle has his own config directory under MyBundle/Ressources/config/easyadmin\n\n. ",
    "grachevko": "What about put this logic to custom configurator of JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\Configurator\\TypeConfiguratorInterface and don't override vendor class?. This solve this issue, but i still don't know the source of this problem.\nyml\nform:\n    fields:\n        - { property: '...', type: 'collection', type_options: { required: true } }. This solve this issue, but i still don't know the source of this problem.\nyml\nform:\n    fields:\n        - { property: '...', type: 'collection', type_options: { required: true } }. yaml\ntwig:\n    paths:\n        - '%kernel.project_dir%/templates'\n?. @hason really. As we have $backendConfig variable in this method, i guess path can be configurable. . @yceruto TemplateConfigPass.php don't use twig paths to Overriding the Default Templates By Convention. I guess here is the problem. @bhss FOSUserBundle have FOS\\UserBundle\\Doctrine\\UserListener which encrypt plain password on prePersist and preUpdate events. Maybe something wrong with it?. If there are no comments I guess PR is ready to merge.. @javiereguiluz i fix that. And i guess this https://github.com/javiereguiluz/EasyAdminBundle/commit/3d83921a2f106d23423437014b6c8349851b760e#diff-e841ec98b20aabb2a540f15a4b7c8a9aR34 can be reverted. . This is standart behavior of symfony form like here, here and here.\nBy default in symfony form translation_domain is null, so we can check it before setting from easy_admin.confg.\nThe problem is if i define custom form type for choices, i can't use translation_domain or choice_translation_domain from its form, this template always set translation_domain from easy_admin.config. \n. @javiereguiluz i have reverted some refactoring change to make changes more readable for this pr.. So, i extracted all methods: persistEntity, updateEntity and removeEntity.\nIn my opinion we need to deprecate methods: prePersistEntity, preUpdateEntity and preRemoveEntity.\nNew way to handle entities will look like:\n```php\n    protected function persistEntity($entity)\n    {\n        // do prePersistEntity\n        parent::persistEntity($entity);\n        // do postPersistEntity\n    }\nprotected function updateEntity($entity)\n{\n    // do preUpdateEntity\n    parent::updateEntity($entity);\n    // do postUpdateEntity\n}\n\nprotected function removeEntity($entity)\n{\n    // do preRemoveEntity\n    parent::removeEntity($entity);\n    // do postRemoveEntity\n}\n\n```\nI think this is more flexible and also add ability to post handle in controller without dispatcher. . So, i extracted all methods: persistEntity, updateEntity and removeEntity.\nIn my opinion we need to deprecate methods: prePersistEntity, preUpdateEntity and preRemoveEntity.\nNew way to handle entities will look like:\n```php\n    protected function persistEntity($entity)\n    {\n        // do prePersistEntity\n        parent::persistEntity($entity);\n        // do postPersistEntity\n    }\nprotected function updateEntity($entity)\n{\n    // do preUpdateEntity\n    parent::updateEntity($entity);\n    // do postUpdateEntity\n}\n\nprotected function removeEntity($entity)\n{\n    // do preRemoveEntity\n    parent::removeEntity($entity);\n    // do postRemoveEntity\n}\n\n```\nI think this is more flexible and also add ability to post handle in controller without dispatcher. . @javiereguiluz if you agree i will add deprecation notice.. @javiereguiluz if you agree i will add deprecation notice.. PR ready to merge, but maybe need to correct phpdoc of new methods. . @yceruto have you idea how to resolve ServiceCircularReferenceException?. ping @javiereguiluz . If this pr https://github.com/javiereguiluz/EasyAdminBundle/pull/1686 will be merged, you will able to write your ConfigPass and modify what you want. . I think manipulation with config around dynamic extend is a bad idea.\nBecause config after all manipulation stored in cache. \n. Why not defining something like id, to remove it by id like property -id?\n. In fast approach you can use virtual property.. I guess problem is here https://github.com/javiereguiluz/EasyAdminBundle/commit/6a365fcc13226eb52139ab0d324fc1369cc2430d. @javiereguiluz flush with $entity argument perisist only this entity without relations. . @javiereguiluz flush with $entity argument perisist only this entity without relations. . What about just extract render function (like https://github.com/javiereguiluz/EasyAdminBundle/commit/332029600cadcd7e07dde55b30a7d3c3b4ebe686) instead of dispatching?\nIn user code it will look like:\n```php\nclass AdminController extend EasyAdminController\n{\n    protected function renderList($view, array $parameters = array())\n    {\n        $parameters['something'] = 'wow';\n    return parent::renderList($view, $parameters);\n}\n\n}\n. I agree with @sc0rp10. Using `__toString` is a bad practice, especially to impose its use as the only one option.. @javiereguiluz in [autocomplition](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/doc/book/edit-new-configuration.rst#autocomplete) imposing. \n![image](https://user-images.githubusercontent.com/8628465/35920005-ab11a422-0c27-11e8-8d5d-e020fd9b8613.png)\n. Maybe?\n![image](https://user-images.githubusercontent.com/8628465/36343360-3e494668-141c-11e8-803a-24d3832db192.png)\nhttp://php.net/manual/en/class.datetimeimmutable.php.php\nprotected function createNewEntity()\n{\n    $entity = new EntityClass();\n$defaultValue = $this->em->getRepository(DefaultRelation::class)->find(1);\n$entity->setAutocompletedProperty($defaultValue);\n\nreturn $entity;\n\n}\n``. In my opinionarray_merge` bad operation. \nBesides i think it will be good to avoid using controller to save any state like request and config for current entity. . @aminebenhariz i don't know. I saw that the tests check large enough configs and just eliminated the duplication error.. @aminebenhariz ok, removed. . > Not a big fan of this\nMe too :/. > Not a big fan of this\nMe too :/. @javiereguiluz yes, sure. @javiereguiluz yes, sure. In previously you mixing responsibilities in ConfigManager. Cache and Config in one file violate single principle responsibility. Now two classes do it's own responsibility. \nself::CACHE_KEY.'.'.$propertyPath it was really bug. But this is not a solution, because cache warmer don't warm up it and in this way cache manager will build new cache on every propertyPath at runtime. \nMoreover, how you will clear every propertyPath cache? \nAbout cache warmer. CacheConfigManager know how to store and how to clear cache. If you separate it, you need share this information. . In previously you mixing responsibilities in ConfigManager. Cache and Config in one file violate single principle responsibility. Now two classes do it's own responsibility. \nself::CACHE_KEY.'.'.$propertyPath it was really bug. But this is not a solution, because cache warmer don't warm up it and in this way cache manager will build new cache on every propertyPath at runtime. \nMoreover, how you will clear every propertyPath cache? \nAbout cache warmer. CacheConfigManager know how to store and how to clear cache. If you separate it, you need share this information. . New window looks ugly. Have you considered using a modal?\nThis my hack realization through modal popup:\nOpen button\nSubstitute layout\nModal. Move, minimize and resize useless on mobile devices. In my projects ~40% requests from phone and tablets. \nNew request/response is not a problem. \nModal can be hided before opening new one, and show up after close it. I guess it will require complex js code. And i think it's worth it.. @yceruto of course, my suggestions related to feature, not to only this pr.. This produce many missing translations in profiler.\nMaybe add some BC for 1.x?. Yes, I just asked.. @javiereguiluz is there something wrong here?. @javiereguiluz is there something wrong here?. SPR is about \"easy to understand and change\" ;). SPR is about \"easy to understand and change\" ;). Why you need decorate ConfigManager? You want to modify config at runtime? \nI think it's bad idea. \nIf you want to modify config at build time you can implement EasyCorp\\Bundle\\EasyAdminBundle\\Configuration\\ConfigPassInterface. \nThis interface marked as @internal, but in my opinion this is lesser evil then decoration ConfigManager.\n. We check roles in Controller:\n```php\n    protected function isActionAllowed($actionName): bool\n    {\n        if (!parent::isActionAllowed($actionName)) {\n            return false;\n        }\n    $entity = $this->request->attributes->get('easyadmin')['item'] ?? $this->entity['name'];\n\n    return $this->isGranted($actionName, $entity);\n}\n\n``\nIn past we use roles ineasyadmin.yamlas you, but It was not convenient. So we removed roles from yaml and write voters.. Maybe we should add twig function likeaction is available, where do check is action enable, and provide an opportunity to extend logic where we can check user roles?\n. Why not inremoveEntity? . What about delete entity through form in which i can choose some deletion detail.\nLike on delete product category select category to migrate products from deletable category? ;). The best way to decorate ConfigManager **was** there https://github.com/EasyCorp/EasyAdminBundle/pull/2128, but https://github.com/EasyCorp/EasyAdminBundle/pull/2385\nYou only can use ConfigPassInterface, but it also mark as internal . @javiereguiluz what about remove@internalfromConfigPassInterfaceas it now is just one way to make custom modification to configs?. Minimum requirements for removing transchoice is 4.2. you mean in third parameter or if $parameters is string then use it as action like in twig?. If you put string as$entityyou can't use any action different fromnew(or something custom).\nSo why you need explicitly write that? \nBut i think actionshowmay be more obvious thaneditas default if$entityis object.. why?. Yeap, i know. @yceruto like that?. @yceruto yes, but how i can inject locale as expressionhasParameter('locale') ? getParameter('locale') : %kernel.default_locale%`? https://travis-ci.org/javiereguiluz/EasyAdminBundle/jobs/248014282#L311. Done.. It is legal?. Missing translation?. ",
    "TheHamler": "@grachevko suggestion works like a charm\n```\nclass EntityConfigurator implements TypeConfiguratorInterface\n{\n    private $repositoryFunction;\n    private $repositoryArguments;\npublic function configure($name, array $options, array $metadata, FormConfigInterface $parentConfig)\n{\n    if (isset($metadata[\"repository\"])) {\n        $this->repositoryFunction = $metadata[\"repository\"][\"function\"];\n        $this->repositoryArguments = $metadata[\"repository\"][\"params\"];\n        $options[\"query_builder\"] = function ($repository) {\n            return call_user_func_array(\n                [\n                    $repository,\n                    $this->repositoryFunction,\n                ],\n                $this->repositoryArguments ? $this->repositoryArguments : []\n            );\n        };\n    }\n\n    return $options;\n}\n\npublic function supports($type, array $options, array $metadata)\n{\n    return 'entity' === $type && 'association' === $metadata['type'];\n}\n\n}\n```\n//services.yml\nAppBundle\\Form\\Type\\Configurator\\EntityConfigurator:\n        tags: { name: 'easyadmin.form.type.configurator' }. @grachevko suggestion works like a charm\n```\nclass EntityConfigurator implements TypeConfiguratorInterface\n{\n    private $repositoryFunction;\n    private $repositoryArguments;\npublic function configure($name, array $options, array $metadata, FormConfigInterface $parentConfig)\n{\n    if (isset($metadata[\"repository\"])) {\n        $this->repositoryFunction = $metadata[\"repository\"][\"function\"];\n        $this->repositoryArguments = $metadata[\"repository\"][\"params\"];\n        $options[\"query_builder\"] = function ($repository) {\n            return call_user_func_array(\n                [\n                    $repository,\n                    $this->repositoryFunction,\n                ],\n                $this->repositoryArguments ? $this->repositoryArguments : []\n            );\n        };\n    }\n\n    return $options;\n}\n\npublic function supports($type, array $options, array $metadata)\n{\n    return 'entity' === $type && 'association' === $metadata['type'];\n}\n\n}\n```\n//services.yml\nAppBundle\\Form\\Type\\Configurator\\EntityConfigurator:\n        tags: { name: 'easyadmin.form.type.configurator' }. ",
    "remedge": "Hmm, sorry, didn't got why scrutinizer failed\n. ",
    "SebTM": "Why isn't this way at least the default in EasyAdminBundle? It would clear-up the urls a little bit and make it possible to secure routes by firewall with specific roles.\n. Hello again, I might found a bug - my configuration is:\nyml\neasy_admin:\n    entities:\n        Category:\n            label: \"label.galleryBundle.category\"\n            class: XYZ\\Category\n            templates:\n                label_empty: @XYZ:Admin:Category/label_empty.html.twig\n            form:\n                fields:\n                    - { property: \"name\", label: \"label.galleryBundle.category.name\" }\n                    - { property: \"sortOrder\", label: \"label.galleryBundle.category.sortOrder\" }\n            list:\n                max_results: 10\n                fields:\n                    - { property: \"id\", label: \"label.galleryBundle.category.id\" }\n                    - { property: \"name\", label: \"label.galleryBundle.category.name\" }\n                    - { property: \"galleries\", label: \"label.galleryBundle.category.galleries\" }\n                    - { property: \"sortOrder\", label: \"label.galleryBundle.category.sortOrder\" }\n            show:\n                fields:\n                    - { property: \"name\", label: \"label.galleryBundle.category.name\" }\n                    - { property: \"galleries\", label: \"label.galleryBundle.category.galleries\" }\n                    - { property: \"sortOrder\", label: \"label.galleryBundle.category.sortOrder\" }\n        Gallery:\n            label: \"label.galleryBundle.gallery\"\n            class: XYZ\\GalleryBundle\\Entity\\Gallery\n            templates:\n                new: XYZ:Admin/Gallery:new.html.twig\n                label_null: XYZ:Admin:Gallery/label_null.html.twig\n            form:\n                fields:\n                    - { property: \"name\", label: \"label.galleryBundle.gallery.name\" }\n                    - { property: \"description\", label: \"label.galleryBundle.gallery.description\", type: \"ckeditor\" }\n                    - { property: \"category\", label: \"label.galleryBundle.gallery.category\" }\n                    - { property: \"directory\", label: \"label.galleryBundle.gallery.directory\" }\n                    - { property: \"previewImage\", label: \"label.galleryBundle.gallery.previewImage\", type: \"choice\"}\n                    - { property: \"enabled\", label: \"label.galleryBundle.gallery.enabled\" }\n            list:\n                max_results: 25\n                fields:\n                    - { property: \"id\", label: \"label.galleryBundle.gallery.id\" }\n                    - { property: \"name\", label: \"label.galleryBundle.gallery.name\" }\n                    - { property: \"category\", label: \"label.galleryBundle.gallery.category\" }\n                    - { property: \"enabled\", label: \"label.galleryBundle.gallery.enabled\", type: \"boolean\" }\n            show:\n                fields:\n                    - { property: \"name\", label: \"label.galleryBundle.gallery.name\" }\n                    - { property: \"description\", label: \"label.galleryBundle.gallery.description\", type: \"raw\" }\n                    - { property: \"category\", label: \"label.galleryBundle.gallery.category\" }\n                    - { property: \"directory\", label: \"label.galleryBundle.gallery.directory\" }\n                    - { property: \"previewImage\", label: \"label.galleryBundle.gallery.previewImage\" }\n                    - { property: \"enabled\", label: \"label.galleryBundle.gallery.enabled\" }\nThe configuration for entity \"Gallery\" with \"label_null\" is working. The other configuration for entity \"Category\" with \"label_empty\" is not working. I had a look at the \"field_association.html.twig\" from EasyAdminBundle where it seems that the \"empty-part\" is rendered directly inside it and not using another template on empty.\n. ",
    "chrl": "Looks like the link for the custom menu is broken =(. Looks like the link for the custom menu is broken =(. ",
    "hrvojebrkasic": "Do I need to do something else or all I have to do is add field I would like to change under my entity\nnew:\n      fields:\n          - { property: 'status', label: 'Status', type: 'choice' }\nI got empty field but overriding functions createNewForm and createEditForm in my controller have populated that field.\nThe problem is that there is no rest of the form now in new.action, only that select field. My form fields are rendering automatically using easy admin templates and symfony logic.\n. Do I need to do something else or all I have to do is add field I would like to change under my entity\nnew:\n      fields:\n          - { property: 'status', label: 'Status', type: 'choice' }\nI got empty field but overriding functions createNewForm and createEditForm in my controller have populated that field.\nThe problem is that there is no rest of the form now in new.action, only that select field. My form fields are rendering automatically using easy admin templates and symfony logic.\n. I'm sorry for not being clear right away so I'll try to be more detailed now.\n1) Forms are creating with Symfony, that means that Symfony uses fields that are added inside entities, right?? I only used those two actions to remove and add field I needed because I couldn't get it on any other way.\n2) The choice field should contain predefined values like \"Working\" and \"Not working\" and they are added in controller like this\nphp\npublic function createEditForm($entity, array $entityProperties)\n    {\n        $editForm = parent::createEditForm($entity, $entityProperties);\n        if($entity instanceof Employee){\n            $editForm->remove('status');\n            $editForm->add('status', ChoiceType::class, array(\n                'choices' => array(\n                    'Working' => \"active\",\n                    'Not working' => 'inactive'\n                )\n            ));\n        }\n        return $editForm;\n    }\nso no Ajax should be used.\nRegarding JavaScript, I need to show or hide other div depending on value selected in this choice type. My plan was to add that JS inside template I should use to render that field (I found something like that in Symfony docs with extending template and rewriting field using eg. {% block _employee_status_widget %}).\n. I'm sorry for not being clear right away so I'll try to be more detailed now.\n1) Forms are creating with Symfony, that means that Symfony uses fields that are added inside entities, right?? I only used those two actions to remove and add field I needed because I couldn't get it on any other way.\n2) The choice field should contain predefined values like \"Working\" and \"Not working\" and they are added in controller like this\nphp\npublic function createEditForm($entity, array $entityProperties)\n    {\n        $editForm = parent::createEditForm($entity, $entityProperties);\n        if($entity instanceof Employee){\n            $editForm->remove('status');\n            $editForm->add('status', ChoiceType::class, array(\n                'choices' => array(\n                    'Working' => \"active\",\n                    'Not working' => 'inactive'\n                )\n            ));\n        }\n        return $editForm;\n    }\nso no Ajax should be used.\nRegarding JavaScript, I need to show or hide other div depending on value selected in this choice type. My plan was to add that JS inside template I should use to render that field (I found something like that in Symfony docs with extending template and rewriting field using eg. {% block _employee_status_widget %}).\n. Thank you, I surely will try, but, you are talking about customizing list or show views. Is there any difference between customizing these two and customizing edit or new views which I need? Since I don't have to customize whole theme, only one particular field I have to use those 3 steps you wrote? \nAfter that, since I don't extend neither form_div_layout nor bootstrap_3_layout themes, but extending {% extends 'EasyAdminBundle:default:new.html.twig' %} in my custom template, as you wrote, my next step should be adding 2 form themes in EasyAdmin, one custom template I use to override field and template used for rendering rest of the form:\nyaml\neasy_admin:\n    design:\n        form_theme: ['@EmployeeBundle/Form/employeestatusfield.html.twig', '@EasyAdminBundle:default:new.html.twig']'\nIf everything I said here is correct, my template should look like this:\n``` twig\n{% extends 'EasyAdminBundle:default:new.html.twig' %}\n{% form_theme form _self %}\n{% block _employee_status_widget %}\n       \nActive\nInactive\n\n\n            $(document).ready(function () { \n                $(\"#employee_status\").on('change', function() {\n                    if ($('#employee_status').val() == 1) {\n                        $(\"#employee_quitAt\").parent().parent().parent().hide();\n                    }\n                    else {\n                        $(\"#employee_quitAt\").parent().parent().parent().show();\n                    }\n                })\n            });\n        \n{% endblock  _employee_status_widget %}\n```\nand adding 2 templates in form_theme, this should work?\nDoes overriding that text field works this way, or I still need createEditForm action from few comments up and then without select in this template leaving only JavaScript?\nPS. How do you style your code to look nicely formatted? \n. Thank you, I surely will try, but, you are talking about customizing list or show views. Is there any difference between customizing these two and customizing edit or new views which I need? Since I don't have to customize whole theme, only one particular field I have to use those 3 steps you wrote? \nAfter that, since I don't extend neither form_div_layout nor bootstrap_3_layout themes, but extending {% extends 'EasyAdminBundle:default:new.html.twig' %} in my custom template, as you wrote, my next step should be adding 2 form themes in EasyAdmin, one custom template I use to override field and template used for rendering rest of the form:\nyaml\neasy_admin:\n    design:\n        form_theme: ['@EmployeeBundle/Form/employeestatusfield.html.twig', '@EasyAdminBundle:default:new.html.twig']'\nIf everything I said here is correct, my template should look like this:\n``` twig\n{% extends 'EasyAdminBundle:default:new.html.twig' %}\n{% form_theme form _self %}\n{% block _employee_status_widget %}\n       \nActive\nInactive\n\n\n            $(document).ready(function () { \n                $(\"#employee_status\").on('change', function() {\n                    if ($('#employee_status').val() == 1) {\n                        $(\"#employee_quitAt\").parent().parent().parent().hide();\n                    }\n                    else {\n                        $(\"#employee_quitAt\").parent().parent().parent().show();\n                    }\n                })\n            });\n        \n{% endblock  _employee_status_widget %}\n```\nand adding 2 templates in form_theme, this should work?\nDoes overriding that text field works this way, or I still need createEditForm action from few comments up and then without select in this template leaving only JavaScript?\nPS. How do you style your code to look nicely formatted? \n. I'm sorry for not replying faster, I have a lot of work to do. \nSo, what you're saying is that my logic for overriding existing text field is ok (logic that is in controller in actions createNewForm and createEditForm) and that only problem with my approach is where I put my JS code?\nI'm still kinda confused with such a huge difference between list and show and new and edit templates and that first two are so much easier to customize.\nWould things be easier if I, instead of using Symfonys method of creating forms, used form builder action and created everything by myself or on any other manual way?\nAnd when can I use way of overriding field that is described in my last comment and symfony docs ...{% block _employee_status_widget %}...\nSince there's no other way, at least for now?, how can I change order of these fields?? The way I'm creating them, they are rendered at the bottom of the form but they should be before/after some elements.\nAnd could you please explain to me this line of code $(\"body.easyadmin.new #employee_status\"). I know that #employee_status references to my field, but what does body.easyadmin.new reference to? That form, but why is that needed? \nThank you.\n. Thanks both of you. I have implemented (almost the same day) that way (using Symfony Forms) and instead of using ajax, I used simple page reload on changed value in select to fill form with desired data. Sorry for not providing any feedback earlier and thanks for help once again.. ",
    "robertosanval": "Hi @javiereguiluz, I've the exact same error here, but I get it every time I try to edit or create a new entity of any type. Even if I create a simple new Entity I get the error. This is frustrating :(\nI've just noticed that I only get this error if the Entity has at least one field of type string.\nSeems to be a mapping problem :(. I got stuck by this for 3 hours! Finally I've noticed that is something about vendors update. I'll check it carefully later. Sorry for the inconveniences.. Step 1) First of all, I installed ckfinder/ckfinder-symfony2-bundle to integrate CKFinder with CKEditor it's very easy.\nStep 2) After that I only need to render this template into layout.html.twig\n{% include \"CKSourceCKFinderBundle::setup.html.twig\" %}\nThe above template only renders this small piece of code:\n<script type=\"text/javascript\" src=\"/bundles/cksourceckfinder/ckfinder/ckfinder.js\"></script>\n<script>CKFinder.config( { connectorPath: '/ckfinder/connector' } );</script>\nStep 3) After that I just only need to call this Javascript method, passing the editor variable name, like this:\nCKFinder.setupCKEditor( ivory_ckeditor_[entity]_[field] );\nThat's all.\n. Sorry but I'm trying to implement this in an embedded form, I don't get any errors but the control doesn't show any row of the Pais entity:\nphp\n->add('pais', EasyAdminAutocompleteType::class, [\n    'class' => Pais::class\n])\nAny hint?. Yes, I've it defined:\nyml\neasy_admin:\n    entities:\n     Pais:\n         class: AppBundle\\Entity\\Pais\n         label: Paises\n         disabled_actions: ['show']\nThis is the result (with no errors on the log:\n. Exact same result :(. Yes, perfectly! But nothing happens with EasyAdminAutocompleteType::class. I'm rendering it in Twig with this, is correct or I need to add something different?:\ntwig\n{{ form_row(form.pais) }}. Not for this form, it's a custom page. Thanks for your help! I'll deep in this docs and I'll try to find the solution. I will post it if I found it.. I've been debugging this and I get noticed that my problem is that AdminController doesn't extend well from parent.\nThis is another example that I've tried following the custom Action demo that returns this error:\nWarning: call_user_func_array() expects parameter 1 to be a valid callback, class 'JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController' does not have a method 'restockAction'\nThis is my /src/AppBundle/Controller/AdminController.php\n```php\n<?php\nnamespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as EasyAdminController;\nuse Symfony\\Component\\HttpFoundation\\Response;\nclass AdminController extends EasyAdminController\n{\n    public function restockAction()\n    {\n        return new Response('OK');\n    }\n}\n```. Yes:\n/src/AdminBundle/AdminBundle.php\n```php\n<?php\nnamespace AdminBundle;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle;\nclass AdminBundle extends EasyAdminBundle\n{\n}\n```. Solved, it was my fault. Thanks for your help @greg0ire \nCorrect code:\n```php\n<?php\nnamespace AdminBundle;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\EasyAdminBundle;\nclass AdminBundle extends EasyAdminBundle\n{\n    public function getParent()\n    {\n        return 'EasyAdminBundle';\n    }\n}\n```. ",
    "joserobleda": "\nbut we might return json for ajax calls in the future or someone might have already added some custom actions in his backend returning json or any other format.\n\nThis change sets the request format, not the content type of the response. It works like a default value for that. I've tested this myself and you can return any other response type.\n\nSo maybe adding this config in the app is enough?\n\nYes, I think this will work and solve my problem. I don't know why I don't get to this before! Thanks!\n\nAnyway I still think it would be nice to make it work out of the box, if we don't find any other trouble it maybe useful for other users, what do you think?\n. I understand your point. Since the @javiereguiluz proposed fix works, this pull became more about a helper to new comers than a necessary change, so maybe just adding an entry in the tips&tricks and/or in the getting starter Chapter 1/2 talking about this would be enough. \nWhat do you think? \n. I think your proposed config, which is just one line, will make a huge difference to prevent this problem. \nI don't know yet if there is enough content to write about to fill a tutorial, even if it is \"mini\" ;)\nI'm starting to use this two bundles together this days, so I let you know if I found something interesting/relevant.\n. :+1: nice! thanks!\n. ",
    "achristodoulou": "Thank you very much for this valuable information. I don't know if you have an example in your doc about this, but it would be very helpful. Keep up the good work.\n. Thank you, its working great.\n. ",
    "COil": "Hi @javier , well the segfault was pretty obvious:\nin app/Resources/EasyAdminBundle/views/default/layout.html.twig\nI extends:\n{% extends 'EasyAdminBundle:default:layout.html.twig' %}\nBut Symfony includes again the custom one and not the bundle one, that's why I think there is an infinite loop.\nTried with:\n{% extends '@EasyAdmin/default/layout.html.twig' %}\nSame result. How to force sf to include the bundle one ?\n. Hi @javiereguiluz  , I was having the same error due to a custom template. I tried to extends the default layout but I am still having a segmentation fault. \n. I've got a similar error message as of 1.16.2  , however my entity  has a __toString method. If I ervert to 1.16.1 it works as expected.. We modified this because of #547. Ah ok thanks, so it's a bug.  @javiereguiluz is it a bug or configuration issue ?. @sryabov It works thanks, I have just overridden the template in  app/Resources/EasyAdminBundle/views/default/field_image.html.twig. Good catch.. OK I am closing this issue then. Thanks.. Thanks Javier! Can close the ticket.. ",
    "kesar": "fix conflicts and \ud83d\udc4d \n. ",
    "terox": "I am experimenting the same \"issue\" in 1.12 :(\n. ",
    "fadehelix": "I got the same error when I defined my custom action as\nlist:\n        actions: ['Participants']\nbut my method is participantsAction()\nI know, it's my stupid mistake, but the error message is not obvious in this case ;)\n. ",
    "davidpv": "I have exactly the same problem. I'll try to send all stack trace from debug before redirection.\n. ",
    "dopee": "I don't have much time to test, but I'll try to update and check if the problem still persists.\nWill get back to you.\n. I've run composer update and it installed version 1.12.2\nI'm sorry to report that the problem still persists.\nI do not have anything else to mention than stated in the first post.\nIn short the following will trigger it for certain in my case:\n- open /admin\n- click around some entity listings\n- go to an item's edit view\n- go back to listing\n- hit reload (not forced)\n- adjust the browser address to / and hit enter\n- CSS is served (from cache)\n. I've created my own workaround by extending the AdminController and altering app/config/router.yml\nIt seems ok now. Basically I disabled all clientside caching on easyadmin.css.\nIs it possible to check test this and incorporate in the bundle?\n`namespace AppBundle\\Controller;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as EasyAdminController;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nclass AdminController extends EasyAdminController\n{\n    /\n     * It renders the main CSS applied to the backend design. This controller\n     * allows to generate dynamic CSS files that use variables without the need\n     * to set up a CSS preprocessing toolchain.\n     \n     * @Route(\"/_css/easyadmin.css\", name=\"_easyadmin_render_css\")\n     \n     * @return Response\n     */\n    public function renderCssAction()\n    {\n        $config = $this->container->getParameter('easyadmin.config');\n```\n    $cssContent = $this->renderView('@EasyAdmin/css/easyadmin.css.twig', array(\n        'brand_color' => $config['design']['brand_color'],\n        'color_scheme' => $config['design']['color_scheme'],\n    ));\n$response = Response::create($cssContent, 200, array('Content-Type' => 'text/css'))\n    ->setPrivate()\n    ->setSharedMaxAge(0)\n    ->setMaxAge(0)\n    ;\n$response->headers->addCacheControlDirective('must-revalidate', true);\n\nreturn $response;\n\n}\n```\n}\n`\nrouter.yml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/AdminController.php\"\n    type:     annotation\n    prefix:   /admin\n. ",
    "davialexandre": "I also had a problem with easyadmin.css. I don't think it was the same one, but maybe it can give some ideas about what could be happening.\nThe problem: I've created a login page which included the easyadmin.css. After a successful login, I was being redirected to /admin/_css/easyadmin.css instead of the page I tried to access before the login. \nThe solution: My access control rules were set to block anonymous access to everything under /admin (except to /admin/login). Since the easyadmin.css is also under /admin and it is a route in the application, it was getting blocked. So, when I tried to access a protected area, the following happened:\n- Access /admin\n- /admin is protected, redirect to /admin/login and store /admin as the target_path\n- While rendering the login page, the browser made a request to /admin/_css/easyadmin.css, which redirected to /admin and stored /admin/_css/easyadmin.css as the target_url (I didn't notice any styling problem caused by this redirect because I wasn't using any of the styles of the css file. I was just including it)\nI don't think this is a bug with EasyAdmin. Just a special case that one have to keep in mind. Maybe it would be helpful to add a note about it to the documentation.\n. This is something I need for the application I'm currently developing, and I was about to implement it myself. I believe I can make a PR.\nI understand the idea of keeping things simple, but I think that having a few configuration options can be quite useful for some use cases. Right off the top of my head, I can give an example of a very common one: A select where the list of results shows different (more) information than the selected value. The Loading Remote Data example on the Select2 examples page is a perfect demonstration of that. For a scenario like this one, maybe we could have an option to set a callback to render the results list and another one for the selection.\n. I really like how https://github.com/locaweb/locawebstyle implements the sidebar toggle. For the Desktop version it is placed at the bottom of the sidedar. For the Mobile it is, as usual, placed at the top left side of the screen:\n| Desktop | Mobile |\n| --- | --- |\n|  |  |\n. I agree. I don't mind different toggles for different screen sizes, but having similar toggle is definitely better. I like the Google Adsense toggle and how the title don't move while toggling the sidebar.\nJira also uses the toggle at the bottom of the side bar in some places:\n\n. wow! A change, but a huge difference. It looks much better now\n. ",
    "xevivila": "Wow! I saw the #1000 and I didn't know if it was good or not hahaha I'm proud of it! Thanks for your and the community help, who always attend the issues/bugs/tutorials very fast.\nI was deeply searching on the issues before posting it and I found the dql filters which I think it could be a very very helpful solution for the community, specially for the ones who are noobs as I am.\nThis afternoon I'll try this solution and I'll comment it. Thank you very much!\n. ",
    "Babacooll": "This is a nice feature, but do you think the examples should use alias instead of FQCN as FQCN are supposed to be good practice ? I think this should be some kind of fallback.\n. This is a nice feature, but do you think the examples should use alias instead of FQCN as FQCN are supposed to be good practice ? I think this should be some kind of fallback.\n. It does not fix the issue. The issue seems to be related to the fact that Symfony wants to add fields for this embedded object without being able to access it's properties.\n. It does not fix the issue. The issue seems to be related to the fact that Symfony wants to add fields for this embedded object without being able to access it's properties.\n. I made some tests.\nIf I bypass the exception in Symfony\\Component\\Form\\FormConfigBuilder::validateName() I get an other issue in Symfony\\Component\\PropertyAccess::readPropertiesUntil().\nIt seems that it finds stepType inside the object Step but it's value is null (as it is a new object Step) so it tries to access name on null which causes another exception.\nThe solution seems to be to add a default StepType inside a ___construct()_ of Step. But I'm not sure this is a good solution.\n. I made some tests.\nIf I bypass the exception in Symfony\\Component\\Form\\FormConfigBuilder::validateName() I get an other issue in Symfony\\Component\\PropertyAccess::readPropertiesUntil().\nIt seems that it finds stepType inside the object Step but it's value is null (as it is a new object Step) so it tries to access name on null which causes another exception.\nThe solution seems to be to add a default StepType inside a ___construct()_ of Step. But I'm not sure this is a good solution.\n. I don't think this will fix the issue actually. The only way I see is to create a default StepType inside Step's construct but this does not seem right. But this seems more related to Symfony than this bundle.\n. I don't think this will fix the issue actually. The only way I see is to create a default StepType inside Step's construct but this does not seem right. But this seems more related to Symfony than this bundle.\n. Do you know if there is any reason for \".\" to be forbidden (but no \":\" e.g.) ?\n. ",
    "safrazik": "or, if you could support template strings as a parameter, it would be easier in many scenarios\ne.g:\nyaml\nlist:\n  - { property: 'emailAddress', templateString: '<a href=\"mailto:{{ value }}\">{{ value }}</a>' }\nthis way, you don't have to create a template file for each and every silly template needs!\n. or, if you could support template strings as a parameter, it would be easier in many scenarios\ne.g:\nyaml\nlist:\n  - { property: 'emailAddress', templateString: '<a href=\"mailto:{{ value }}\">{{ value }}</a>' }\nthis way, you don't have to create a template file for each and every silly template needs!\n. ",
    "emmanuelballery": "Could be a new type email and the corresponding template in the repository (like image, toggle and raw). Actually, phone may be usefull too with the following template :\njinja\n<a href=\"tel:{{ value }}\">{{ value }}</a>\n. Could be a new type email and the corresponding template in the repository (like image, toggle and raw). Actually, phone may be usefull too with the following template :\njinja\n<a href=\"tel:{{ value }}\">{{ value }}</a>\n. Because of this file : https://github.com/javiereguiluz/easy-admin-demo/blob/master/app/Resources/translations/messages.en.yml ? (last line)\n. Hum ... tests are failing.\n```\nJavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\CustomizedBackendTest::testListViewNewAction\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n-'New Category'\n+'New Categories'\n```\nLooking at https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Tests/Fixtures/App/config/admin/category_entity.yml seems to me that the label should actually be \"New Categories\". Is the choosen translation right in this file ? \"Categories\" is the translation for the list item no ?\nThe other test is looking for the node containing this label.\n```\nJavierEguiluz\\Bundle\\EasyAdminBundle\\Tests\\Controller\\CustomizedBackendTest::testNewViewListActionReferer\nInvalidArgumentException: The current node list is empty.\n/home/travis/build/javiereguiluz/EasyAdminBundle/vendor/symfony/symfony/src/Symfony/Component/DomCrawler/Crawler.php:703\n/home/travis/build/javiereguiluz/EasyAdminBundle/Tests/Controller/CustomizedBackendTest.php:399\nphar:///home/travis/.phpenv/versions/5.6.5/bin/phpunit/phpunit/TextUI/Command.php:152\nphar:///home/travis/.phpenv/versions/5.6.5/bin/phpunit/phpunit/TextUI/Command.php:104\n``\n. You're right! This change seems not ok. Just a question then: why is the \"trans\" filter applied to the entity name, it forces those who are not using the name (but the label) as translation to create this root translation. If not, Symfony is reporting for missing translations on every list page.\n. If you don't use thelabelconfiguration, its value will be the same asnamethanks to this line [Configuration/NormalizerConfigPass.php#L51](https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Configuration/NormalizerConfigPass.php#L51). For those who only use thename` key, this changes nothing in Resources/views/default/list.html.twig#L2. The two values are actually the same and both translations are available.\n. Duplicate --'\n. ",
    "MHaendel": "Templates(html) would be great, as they dont just limit to Images/whatever.\n. Done\n. While you are talking about MetadataConfigPass: My Service is now causing this bug: Error: Call to a member function getMetadataFactory() on null\n. Hey, yes I think this is so. I don't have dump() in my code, this only fails on multidimensional arrays.\n{ \"a\": { \"b\": { \"c\": \"d\" } } } use this as a value for json_array to reproduce.\n. ",
    "gintares": "I get the same error. If you look at name, you will find a dot in it. Most probably this is the reason. Dot can not by part of the name. In my case the error is:\nThe name \"address.line_1\" contains illegal characters. Names should start with a letter,\ndigit or underscore and only contain letters, digits, numbers, underscores (\"_\"),\nhyphens (\"-\") and colons (\":\").\nIf i use  columnPrefix=false it does not help, for some reason i get the same erro, although in Embeddable i created addr_line_1 field.  (  /* @ORM\\Embedded( class=\"Learn\\MySQLBundle\\Entity\\Embeddable\\TelEmb\", columnPrefix=false ) / )\n. I have created totally new entity wit embeddables, used    columnPrefix=false,  and  preffixed each field in the Embeddable , like this  addr_line_1. It was created a table with column names addr_line_1, etc..  but if i try to use a fo i am getting the same error :  The name \"address.line_1\" contains illegal characters.  This name does not exist anymore. But it is generated automatically if i want to create a new entity. \n. Solution is to put permission to use a dot in C:\\Bitnami\\wampstack-5.6.20-0\\apache2\\htdocs\\sym\\LearnDB\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormConfigBuilder.php.     return '' === $name || null === $name || preg_match('/^[a-zA-Z0-9_][a-zA-Z0-9_.-:]*$/D', $name);   This works, new form is generated, but i did not proceed futher yet, because i need to generate special getters and setters in the embeddable. Seems the best solution is to use trait as described here:  http://russellscottwalker.blogspot.co.uk/2013/11/entities-vs-value-objects-and-doctrine-2.html\nWith traits you can achieve the result of value object insertion, columns generation, only form field names you have to add yourself.  And it does not complain about getters and setters for an object. \n. p.s. For me it does not work in my own bundle. \n. ",
    "cve": "It looks like redirection loop isn't it?\n. Thanks for advise, it works in this way:\n``` php\n    public function editSettingAction()\n    {\n        $response = parent::editAction();\n    if ($response instanceof RedirectResponse) {\n        return $this->redirectToRoute('admin', ['entity' => 'Setting', 'action' => 'edit', 'id' => 1]);\n    }\n\n    return $response;\n}\n\n```\n. ",
    "zball": "Thank you @slmcncb, that looks like the same issue I was running into.  I greatly appreciate the link.\n. ",
    "kpicaza": "I tryed too with Symfony 3, and with demo app and it works great, the issue only occurs on older versions of SF, \nIm going to try with a clean instalation of Symfony 2.8.*, and confirm to you if the problem continues.\nAs a fix, i don't know if force form submission is the better solution for this case.\nThanks for response and best regards.\n. On a clean instalation works great with:\njaviereguiluz/easyadmin-bundle       v1.12.4\nfriendsofsymfony/user-bundle         v1.3.6\nsymfony/symfony                      v2.8.3 \nIn my project, with the same bundle versions, i have no luck, I will continue investigating, but appears not to be directly related with EasyAdmin.\n. Thanks for response, but is not related with EasyAdmin. It was a FosUserBndle configuration issue.\nRegards.\n. ",
    "las92": "The problem occurs when you use AppCache in your app.php. \nYou need to uncomment the line above if you use sf cache : \nRequest::enableHttpMethodParameterOverride();\n. ",
    "gtrias": "@kpicaza can you explain what configuration issue was causing this behavior? I'm experimenting exactly the same problem.\nThanks\n. ",
    "jabommi": "Thanks for quick reply. This works fine!\n. oh fixed it by myself. \"_toString()\" function was missing in User Entity\n. ",
    "Yunyun548": "Stacktrace and config.\nstacktrace.txt\nconfig.txt\nIt seems to work when i have nothing referencing the bundle in my config.yml.\nCould be an error in my config\n. app/console cache:clear -vvv\n[Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException]\n  You have requested a synthetic service (\"kernel\"). The DIC does not know how to construct this service.                                                                                                   \nException trace:\n () at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:866\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:896\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:896\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:1141\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->callMethod() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:940\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:896\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:896\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:984\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:981\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->resolveServices() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:896\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->createService() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:475\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Bridge/Doctrine/ManagerRegistry.php:35\n Symfony\\Bridge\\Doctrine\\ManagerRegistry->getService() at /home/yun/Documents/Projets/myartmakers/vendor/doctrine/common/lib/Doctrine/Common/Persistence/AbstractManagerRegistry.php:208\n Doctrine\\Common\\Persistence\\AbstractManagerRegistry->getManagerForClass() at /home/yun/Documents/Projets/myartmakers/vendor/javiereguiluz/easyadmin-bundle/Configuration/MetadataConfigPass.php:36\n JavierEguiluz\\Bundle\\EasyAdminBundle\\Configuration\\MetadataConfigPass->process() at /home/yun/Documents/Projets/myartmakers/vendor/javiereguiluz/easyadmin-bundle/DependencyInjection/Compiler/EasyAdminConfigurationPass.php:49\n JavierEguiluz\\Bundle\\EasyAdminBundle\\DependencyInjection\\Compiler\\EasyAdminConfigurationPass->process() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/Compiler.php:107\n Symfony\\Component\\DependencyInjection\\Compiler\\Compiler->compile() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:593\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->compile() at /home/yun/Documents/Projets/myartmakers/app/bootstrap.php.cache:2700\n Symfony\\Component\\HttpKernel\\Kernel->initializeContainer() at /home/yun/Documents/Projets/myartmakers/app/bootstrap.php.cache:2478\n Symfony\\Component\\HttpKernel\\Kernel->boot() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php:70\n Symfony\\Bundle\\FrameworkBundle\\Console\\Application->doRun() at /home/yun/Documents/Projets/myartmakers/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:123\n Symfony\\Component\\Console\\Application->run() at /home/yun/Documents/Projets/myartmakers/app/console:27\n. I do have things like this\nyaml\nmam.suggestions_manager:\n    class:  MAM\\CoreBundle\\Services\\SuggestionsManager\n    arguments: [@kernel,@doctrine.orm.entity_manager, @doctrine.dbal.default_connection]\n. I took a quick look at the mam.mailer service and indeed it required the kernel. However the kernel being required for absolutely no valid reason (checking the environement, which is a deprecated method since Symfony 2) was bad code from our end.\nThank you very much for your help\n. You could detach the entity to be deleted. Just adding a message to your flashbag wont stop the delete action from being executed. \nFrom doctrine documentation \n\nChanges made to the detached entity, if any (including removal of the entity), will not be synchronized to the database after the entity has been detached.\n\n$em->detach($entity);\nThe same goes for your second question about the ajax calls. You can override the preUpdate() method.\n. The way to stop the event would be the use of the method skipOperation(), however since the event isn't passed to the preRemoveEntity() method. I don't think there is a \"nice solution\" to avoid admin user deletion by only overriding the base AdminController atm..\nYou would have to write your own event listener, but I don't think the method skipOperation() has been added in Doctrine 2 (https://github.com/doctrine/doctrine2/issues/2347)\n. Hello ccab, you have to write your own template \nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/configuration-reference.md#templates\n. It can be solved via CSS :\nThe class ace_gutter which is the default class for the gutter has a z-index of 4. Just make sure the button's z-index is grater than that in a custom CSS file : https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/2-design-configuration.md#adding-custom-web-assets\n. I think you can choose not to render the button in a cleaner way while the events are still getting implemented.\n- You override the AdminController:listAction, adding the following condition\nif (entity['name'] == 'paypalEntityName') {\n    $countPaypalEntityName = doctrineQueryToCountRows\n    if($countPaypalEntityName < 3)\n        return $this->render($this->entity['templates']['list'], array(\n            'paginator' => $paginator,\n            'fields' => $fields,\n            'delete_form_template' => $this->createDeleteForm($this->entity['name'], '__id__')- >createView(),\n            'displayNew' => $countPaypalEntityName\n        ));\n}\n- You wrap the action new button if the list.html.twig view with the following condition : \n{% if _entity_config.name == PaypalEntityName and displayNew and displayNew == true %}\n    {# code #}\n{% elseif _entity_config.name != PaypalEntityName %}\n    {# code #}\n{% endif %}\nIt's not really clean but it's more secure than to hide it, since it just won't be rendered. And your users won't encounter an error while creating the Entity since they won't be able to create it\nLink to the documentation about inheritance if Symfony bundles : http://symfony.com/doc/current/cookbook/bundles/inheritance.html\n. I think you can use a custom template to do that\nYour template has to be app/Resources/views/easy_admin/SeatGroup/seats.html.twig\nIt can contain, minus the HTML/CSS something like this : \n{{ item.room.seats|length }}\nOf course your configuration should be adapted to tell the Bundle to use this template :\neasy_admin:\n    # ...\n    entities:\n        Invoice:\n            show:\n                fields:\n                    - { property: 'seats', template: 'seats.html.twig' }\n. I think you can use a custom template to do that\nYour template has to be app/Resources/views/easy_admin/SeatGroup/seats.html.twig\nIt can contain, minus the HTML/CSS something like this : \n{{ item.room.seats|length }}\nOf course your configuration should be adapted to tell the Bundle to use this template :\neasy_admin:\n    # ...\n    entities:\n        Invoice:\n            show:\n                fields:\n                    - { property: 'seats', template: 'seats.html.twig' }\n. Maybe I misunderstood, but isn't the purpose of the field to allow the admin to change the category ?\n. I integrated it this way :\nUser:\n    form:\n        fields:\n            - { property: 'username'}\n            - { property: 'email}\n            - { property: 'enabled'}\n            - { property: 'plainPassword', type: text }\n            - { property: 'roles', type: choice, type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN', 'ROLE_DOC': 'ROLE_DOC' } } }\n```\nadmin:\n    resource: \"@AdminBundle/Resources/config/routing.yml\"\n    prefix:   /admin\neasy_admin_bundle:\n    resource: \"@EasyAdminBundle/Controller/\"\n    type:     annotation\n    prefix:   /admin\n```\n. I created a PR : #1291\n. I created a PR : #1291\n. How is your application locale set ?\nIt should be something like this : \nparameters:\n    locale: fr\nThe button label should match your current locale\n. Hi Pablossoo,\nThe bulk action is in the TODO list iirc : #1190\nIf your application is using FOSUserBundle, you could use the same logout function. The default route is : \n<route id=\"fos_user_security_logout\" path=\"/logout\" methods=\"GET\">\n    <default key=\"_controller\">FOSUserBundle:Security:logout</default>\n</route>\nAnd add a link by editing the layout, or any other file by following the documentation\n. Hi Pablossoo,\nThe bulk action is in the TODO list iirc : #1190\nIf your application is using FOSUserBundle, you could use the same logout function. The default route is : \n<route id=\"fos_user_security_logout\" path=\"/logout\" methods=\"GET\">\n    <default key=\"_controller\">FOSUserBundle:Security:logout</default>\n</route>\nAnd add a link by editing the layout, or any other file by following the documentation\n. Do you have any code sample of your application ?\n. Customes templates should be working aswell for form view as I've done it in the past. Do you have a code sample ?\n. This has been answered in #916\n. The code you suggested in your other issue should work\n. Could you close one of the issues and create a PR ? If you don't have time i'll gladly do it (:\n. Explained here in the documentation\n. Explained here in the documentation\n. That would totally work, Activer ou d\u00e9sactiver la navigation would also work, if you want to drop the /.  If you want to keep the toggle notion without having the disable part implicit Basculer la navigation is correct but isnt' really common.\n. ",
    "adrian-chlebowski": "I add this:\n``` css\n@media (min-width: 1200px) and (max-width:1300px) {\n    #header {\n        margin-bottom: 0;\n        height: 100%;\n        top: 0;\n        bottom: 0;\n        overflow-y: auto;\n        position: fixed;\n        width: 202px;\n    }\n}\n```\nand is working.\nThanks for help :)\n. I add this:\n``` css\n@media (min-width: 1200px) and (max-width:1300px) {\n    #header {\n        margin-bottom: 0;\n        height: 100%;\n        top: 0;\n        bottom: 0;\n        overflow-y: auto;\n        position: fixed;\n        width: 202px;\n    }\n}\n```\nand is working.\nThanks for help :)\n. Yes I use EasyAdmin 1.5.x because I can not using a higher version.\n. Yes I use EasyAdmin 1.5.x because I can not using a higher version.\n. ",
    "grekpg": "yes sory - i just start this entity and dont put @ORM\\Entity sory for question.\n. Maybe this ? https://github.com/creativetimofficial/material-dashboard , it will by good if admin panel is compatible with webpack . ",
    "Grazulex": "thanks\n. ",
    "frechina": "Exception trace:\n() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:868\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->getDefinition() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:478\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->get() at /var/www/myproject/vendor/javiereguiluz/easyadmin-bundle/DependencyInjection/Compiler/EasyAdminConfigurationPass.php:43\n JavierEguiluz\\Bundle\\EasyAdminBundle\\DependencyInjection\\Compiler\\EasyAdminConfigurationPass->process() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Compiler/Compiler.php:117\n Symfony\\Component\\DependencyInjection\\Compiler\\Compiler->compile() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php:614\n Symfony\\Component\\DependencyInjection\\ContainerBuilder->compile() at /var/www/myproject/app/bootstrap.php.cache:2594\n Symfony\\Component\\HttpKernel\\Kernel->initializeContainer() at /var/www/myproject/app/bootstrap.php.cache:2373\n Symfony\\Component\\HttpKernel\\Kernel->boot() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php:70\n Symfony\\Bundle\\FrameworkBundle\\Console\\Application->doRun() at /var/www/myproject/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php:126\n Symfony\\Component\\Console\\Application->run() at /var/www/myproject/app/console:27\n. No it's not, EasyAdminBundle is at the end\n. ",
    "phiamo": "+1. ",
    "peamak": "OK so I narrowed down the issue.\nThis morning I did override the default EasyAdmin layout in order to add FOSJsRouting code and it seems that this is what is causing the issue.\nSo here is the file:\n\n{# app/Resources/EasyAdminBundle/views/default/layout.html.twig #}\n{% extends 'EasyAdminBundle:default:layout.html.twig' %}\n{% block body_javascript %}\n{{ parent() }}\n{# the scripts here #}\n{% endblock %}\n\nI tried emptying the file just to test it but the error remains. Everything works back as it should if I delete the file (or just rename app/Resources/EasyAdminBundle/).\nIs it not possible to override the layout or is it me who did something wrong?\n. Oh, I'm very sorry... I keep coming back to the doc (which is very helpful) but missed this part...\nYes, everything is working fine now. I think I need to override the block because FOSJsRouting needs a script with an src of\n{{ path('fos_js_routing_js', {\"callback\": \"fos.Router.setData\"}) }}\n(I may be wrong... I'm discovering Sf3 after a long time using sf 1.4)\nThank you very much for your help and sorry again for being such a noob...\n. ",
    "Pablossoo": "Hmm I threw exception, but if I would like,  showing flash Message instead exception?\nphp\npublic function preRemoveEntity($entity)\n{\n        if ($entity->hasRole('ROLE_ADMIN'))\n        {\n            throw $this->createNotFoundException('you can delete this user');\n        }\n}\n. Ok, it shows flash message, but user it still is removed. User is not removed only if I  throw an exception\n. is there any solution ?  and one more question yet.  is it possible  to block  ajax reuquest    enabled and locked for  own  account admin?   maybe  can hide those properties for admin role? \n. @javiereguiluz  any progress that solve this problem ?\n. Thanks, I forgot to uncomment the parameter translator\n. Thanks ;)\n. I don't need Sonata becouse it is  a very big Panel admin. Easy Admin is ok for my application. I need modal window for http://fullcalendar.io/ .\nexample; \n1 I click choosen day- open modal form new Event/edit Event\n2 I click  submit to save\nhmm maybe is a simpler solution?  I thought  about writing own form for new/edit action, avoiding solution from  EasyAdmin.  You think that is will simpler?  Or  something other ?\nexactly need something like: \nhttps://youtu.be/ghkbIGsLJRY?t=7m48s \n. OK it understand, but I don't know  how should look  my overidden createAction \nMaybe I should use ?\nprotected function prePersistEntity($entity);\n{\n   $id=$this->request('id_parent');\n   $entity->setIdParent($id)\n}\nEdit, ok aboce function working! , thanks, I close.\n. OK it understand, but I don't know  how should look  my overidden createAction \nMaybe I should use ?\nprotected function prePersistEntity($entity);\n{\n   $id=$this->request('id_parent');\n   $entity->setIdParent($id)\n}\nEdit, ok aboce function working! , thanks, I close.\n. Yes, but there are subcategories and parent categories.  The administrator should  be able choose the  parent categories at adding or edit events.\n. No i don't tried.  Can you show me simple example?\n. No i don't tried.  Can you show me simple example?\n. Great, thanks!\n. Great, thanks!\n. I have one problem..\nType error: Argument 2 passed to JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\Configurator\\AutocompleteTypeConfigurator::supports() must be of the type array, string given, called in C:\\xampp\\htdocs\\framework-standard-edition\\vendor\\javiereguiluz\\easyadmin-bundle\\Form\\Type\\EasyAdminFormType.php on line 66 \nMy YML\n```\nfields:\n                     - 'title'\n                     - {property: 'start', type: 'text'}\n                     - {property: 'end', type: 'text'}\n                     - 'allDay'\n                     - {property: 'category', type_options:  query_builder: 'FitnesBundle\\Repository\\CategoryRepository::available'}\n                     - 'user'\n                     - 'max'\nRepository\n public static function available(CategoryRepository $repository)\n    {\n        return $repository->createQueryBuilder('c')\n            ->where(\"c.enabled IS TRUE\")\n            ->orderBy('c.name');\n    }\n```\nwhere is problem ?\n. I have one problem..\nType error: Argument 2 passed to JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\Configurator\\AutocompleteTypeConfigurator::supports() must be of the type array, string given, called in C:\\xampp\\htdocs\\framework-standard-edition\\vendor\\javiereguiluz\\easyadmin-bundle\\Form\\Type\\EasyAdminFormType.php on line 66 \nMy YML\n```\nfields:\n                     - 'title'\n                     - {property: 'start', type: 'text'}\n                     - {property: 'end', type: 'text'}\n                     - 'allDay'\n                     - {property: 'category', type_options:  query_builder: 'FitnesBundle\\Repository\\CategoryRepository::available'}\n                     - 'user'\n                     - 'max'\nRepository\n public static function available(CategoryRepository $repository)\n    {\n        return $repository->createQueryBuilder('c')\n            ->where(\"c.enabled IS TRUE\")\n            ->orderBy('c.name');\n    }\n```\nwhere is problem ?\n. Thank you! but why this not described in guide?  this is very helpful.\n. ",
    "DekaBraZ": "So why there is no way to disabling actions from a controller? I think it could solve this issue. And it is quite handy, cuz right now I need to disable deletion of some entities for non-admin users and I am stucked.\n. @Yunyun548 it will throw ORMInvalidArgumentException, so it is not a nice solution.\n. @Yunyun548 I think u should not only stop deletion, but hide delete button as well to prevent this case at the beginning. It would be nice if easy admin could dynamically change disabled actions list and you could manipulate it from your Admin Controller.\n. ",
    "ipesanz": "With some of here and a bit of over there I was able to avoid deleting of ROLE_ADMIN users. Of course... overriding deleteUserAction()\n```\n// Inspired by: https://github.com/javiereguiluz/EasyAdminBundle/issues/1104\n    // But the method is not working properly, cause i was able to delete admins\n    // and the preRemoveEntity only has sense to delete \"other nested objects\" to\n    // this one before remove & flush.\n    // --\n    // Makes no possible to delete admin users via web app\n    // We strongly recommend to use console if you have to delete some ROLE_ADMIN user.\n    public function deleteUserAction()\n    {\n        $this->dispatch(EasyAdminEvents::PRE_DELETE);\n    if ('DELETE' !== $this->request->getMethod()) {\n        return $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n    $id = $this->request->query->get('id');\n    $form = $this->createDeleteForm($this->entity['name'], $id);\n    $form->handleRequest($this->request);\n\n    if ($form->isSubmitted() && $form->isValid()) {\n        $easyadmin = $this->request->attributes->get('easyadmin');\n        $entity = $easyadmin['item'];\n\n        /**\n         * OVERRIDING: No allow admin users to be deleted.\n         */\n        // we assumed that is only for users, cause the name of the method\n        if ($entity->hasRole('ROLE_ADMIN')) {\n            $this->addFlash('error', 'No es poden eliminar els usuaris que s\u00f3n administradors');\n        }\n        // END OVERRIDE\n        else{\n\n            parent::dispatch(EasyAdminEvents::PRE_REMOVE, array('entity' => $entity));\n\n            parent::executeDynamicMethod('preRemove<EntityName>Entity', array($entity));\n\n            try {\n                $this->em->remove($entity);\n                $this->em->flush();\n            } catch (ForeignKeyConstraintViolationException $e) {\n                throw new EntityRemoveException(array('entity' => $this->entity['name']));\n            }\n\n            $this->dispatch(EasyAdminEvents::POST_REMOVE, array('entity' => $entity));\n        }\n\n    $refererUrl = $this->request->query->get('referer', '');\n\n    $this->dispatch(EasyAdminEvents::POST_DELETE);\n\n    return !empty($refererUrl)\n        ? $this->redirect(urldecode($refererUrl))\n        : $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n}\n\n@javiereguiluz  Which is the reason to have `executeDynamicMethod` defined as private instead of protected?\nThey are private so it's not possible to call it in the form `parent::executeDynamicMethod` without changing your bundle or overriding (again) the method in AdminController. In file:\n@EasyAdminBundle\\Configuration\\PropertyConfigPass.php appears the option \"form_group\":\n// the name of the group where this form field is displayed (used only for complex form layouts)\n        'form_group' => null,\n```\nAlthought there is no documentation about this feature... Some checks done such as search with Google on all the available reference, without success.\nI found it while I was trying to decode the way  .yml files are parsed to try to build differents menus for different users by their ROLE_. Hi,\nFinally I did interesting things like stop deleting admin users overriding methods as seen here\nFor what you're asking, an approach can be:\n1.- Copy method of your entity: listAction() and override it. \nIf you override the previous method, and then you put:\nprotected function list<YourChildEntityNameInCamelCase>Action()\n{\n        $this->dispatch(EasyAdminEvents::PRE_LIST);\n        // Overriding\n        $user = $this->getUser();\n        if($user->hasRole('ROLE_AGRUPAMENT')){    // you can define a ROLE to trigger the filter.\n            $this->entity['list']['dql_filter'] = \"entity.owner = \".$user->getId();\n        }\n       //... the rest of method\nWhere owner is the column defining the relation between child entity and his owner (via Doctrine)\nSomething interesting I'm discovering after overriding are \"dql_filters\" that you can manage by .yml files but I didn't try it yet. Furthermore, I'm not sure if would I be able to manage filters with other entities by .yml.\n. Solved by setting option as required. One of the previous actions is set by default\n[Yes, after I saw other ways to achieve the goals as sending type_optionsto a choiceType]. Yes, it was badly configured previous release to 1.16.12\nBut unfortunately it's still not working fast. As you can see in a previous image, the DB queries are checking all the fields of the City class. I only want to find the id by cityName (and not the others that are \"internal\" of business logic)\nI'm trying to define options to this Type but I don't find how to set an option like: choice_name to tell it only to look forward in one column of the entity. Inspired by EntityType. Of course, it should be my fault. Glups!\n\n. Fixed and going as expected after changing encoding to utf-8.\nI think that EntityType can be a great option for its options to inherit instead of search... but after changing the encoding I have no problems.. ",
    "jxamorro": "thanks javier with the option 2 the show action works!\nIs there any equivalent trick for edit and new action? because now it renders the fields like text area in new action, and with edit action it throws an exception:\nAn exception has been thrown during the rendering of a template (\"Catchable Fatal Error: Object of class Doctrine\\ORM\\PersistentCollection could not be converted to string\") in form_div_layout.html.twig at line 34. \nthanks\n. ",
    "NodokaMurmevent": "facepalm i am stupid i cannot test now but i think you can close the tread <_<\n. i had the same bug today,  it was just a cache problem.\ncache:clear --env=dev --no-warmup\nand all work.. i had the same bug today,  it was just a cache problem.\ncache:clear --env=dev --no-warmup\nand all work.. @rudak Did you have try to create a personnal template :  ustom-property-options.md#using-custom-property-options-in-templates\n. if you want, you can use a dropdown, i think it's better than a checkbox, you can use \"ChoiceType\".\nFor exemple : \nyaml\n- { property: 'visibleSiteWeb', \n    label: 'Visibilit\u00e9 sur le site', \n    css_class: 'col-sm-4',\n    type: 'choice', type_options: { required: true, choices: { 'Oui': true, 'Non': false }}\n}\n. Sorry i forgot  the \"problem\" it's just you don't use the right syntax in you documentation for vich uploader \nupload-files-and-images. Sorry i forgot  the \"problem\" it's just you don't use the right syntax in you documentation for vich uploader \nupload-files-and-images. i had the same problem too in firefox and chromium on Linux, \ni adding this css for correct the problem :\n.form-actions:not(.sticky-wrapper) {\n    bottom: 0;\n    position: fixed;\n    background-color: #F5F5F5;\n    box-shadow: 0 -1px 4px #CCC;\n    height: 52px;\n    padding-top: 10px;\n    height: 85px;\n    padding-bottom: 45px;\n    z-index: 9999;\n}. I think the problem is that if the page is too heavy the js loads too early and it does not find the block, maybe replace :\n$('.form-actions').easyAdminSticky();\nwith : \n$( document ).ready(function() {\n  $('.form-actions').easyAdminSticky();\n});\ncan help.. Hello, sorry for wake up a old issue but i had previously the same error message, for correct him i needed to replace on my form this : \nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType;\nby this :\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType;\nand it's work perfectly, for at least.\n. Hello, sorry for wake up a old issue but i had previously the same error message, for correct him i needed to replace on my form this : \nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType;\nby this :\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType;\nand it's work perfectly, for at least.\n. Thank you for sharing your solution ! I tested and it's work perfectly.. Thank you for sharing your solution ! I tested and it's work perfectly.. ",
    "nnabros": "Thanks. I am looking at the original method and trying to do an override. I am however a bit confused on how to do this.\nThere is a line - $searchableFields = $this->entity['search']['fields']; which uses the fields from the Entity (in my case products and thus grabs the category_id insted of the category name). How can I add the category name to this? \n. Wow. Thanks and looking forward to hearing from you. This is an issue I believe will be beneficial to the whole community.\n. Does this look okay below?\nphp\npublic function createProductSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null)\n    {\n        /** @var DoctrineQueryBuilder */\n        $queryBuilder = $this->em->createQueryBuilder(\"p\")\n            ->select('entity')\n            ->from($entityClass)\n            ->leftJoin(\"c.categories\", \"p\", \"WITH\", \"cat_name LIKE :cat_name\") \n            ->setParameter('cat_name', '%'.$searchQuery.'%')\n            ->orderBy('entity.'.$sortField, $sortDirection ?: 'DESC');\n. ",
    "truckee": "Console reports an error on clicking on Edit (and on Add user):\nTypeError: $(...).easyAdminSticky is not a function\nUpdate:\nAbove was Firefox console.  Firebug shows \n\nTypeError: $(...).easyAdminSticky is not a function\n$('.form-actions').easyAdminSticky();\n\nThis behavior was observed in 1.12.5.  Updating to 1.12.7, only made display worse:\n\n. Chrome provides greater detail (back to 1.12.5):\n\n. Interesting.  I did composer update javiereguiluz/easyadmin-bundle to get back up to 1.12.7.  Got OK   EasyAdminBundle when assets were installed, but the display was incorrect.  Chrome reported that easyadmin-all.min.css was not found.  A manual assets:install allowed the asset to be properly available.\nRoles can now be added as expected.  Now to work on validation...\nSo, is the \"double-clutch\" on installing assets an artifact of my Windoze environment?\n. Interesting.  I did composer update javiereguiluz/easyadmin-bundle to get back up to 1.12.7.  Got OK   EasyAdminBundle when assets were installed, but the display was incorrect.  Chrome reported that easyadmin-all.min.css was not found.  A manual assets:install allowed the asset to be properly available.\nRoles can now be added as expected.  Now to work on validation...\nSo, is the \"double-clutch\" on installing assets an artifact of my Windoze environment?\n. Forgot to add: If one has added fields to one's User entity along with a replacement CreateUserCommand, it is a simple matter of replacing the fos user manager in the AdminController with the replacement's service identifier.  All new fields are available in EasyAdmin.  Sweet!\n. Forgot to add: If one has added fields to one's User entity along with a replacement CreateUserCommand, it is a simple matter of replacing the fos user manager in the AdminController with the replacement's service identifier.  All new fields are available in EasyAdmin.  Sweet!\n. My error! Now, to sort out admin controller when one already exists.  Please disregard issue above.\n. Now that the controller/routing issue is sorted out, however, doing so did not enable validation as I'd hoped.  So the question remains: does editing a user take advantage of Symfony/FOSUserBundle validation?\n. A solution exists!  You may wish to incorporate this technique in the tutorial.\nFor Doctrine ORM:\nEDIT: the following has been revised - I was not able to reproduce the use of orm.xml in tests.  Changing the User validation group to Profile, however, provides the same effect.\nUser:\n .... \n            edit:\n                fields: \n                    - 'enabled'\n                    - 'username'\n                    - {property: 'fname', label: 'First name'}\n                    - {property: 'sname', label: 'Last name'}\n                    - {property: 'email', type: 'email'}\n                    - 'roles'\n                form_options: { validation_groups: ['Profile'] }\n. Thanks for your reply.  I've got both a 3 and 2.8 version, and your suggestion gets me over the hump.  The odd thing, though, is that \n- property: 'hasAdminRole'\n                      type: 'AppBundle\\Form\\Field\\RoleType'\n                      type_options: {'mapped': false}\nyields two checkboxes!\nSo I needed to change the property to hasRoleAdmin as in the custom field type, resulting in only one instance of the checkbox.  Now on to creating the action.  And maybe a solution to the 2.8 version.\n. Thanks for your reply.  I've got both a 3 and 2.8 version, and your suggestion gets me over the hump.  The odd thing, though, is that \n- property: 'hasAdminRole'\n                      type: 'AppBundle\\Form\\Field\\RoleType'\n                      type_options: {'mapped': false}\nyields two checkboxes!\nSo I needed to change the property to hasRoleAdmin as in the custom field type, resulting in only one instance of the checkbox.  Now on to creating the action.  And maybe a solution to the 2.8 version.\n. A substantially less complex method, although it requires modifying the User entity:\nEntity additions:\n``` php\n    public function hasRoleAdmin()\n    {\n        return $this->hasRole('ROLE_ADMIN');\n    }\npublic function setHasRoleAdmin($isAdmin)\n{\n    if (true == $isAdmin && false == $this->hasRole('ROLE_ADMIN')) {\n        $this->addRole('ROLE_ADMIN');\n    }\n    if (false == $isAdmin && true == $this->hasRole('ROLE_ADMIN')) {\n        $this->removeRole('ROLE_ADMIN');\n    }\n    $this->isAdmin = $isAdmin;\n}\n\n```\neasyadmin.yml addition:\nyaml\n- {property: 'hasRoleAdmin', label: 'Is admin', type: checkbox}\n. I was mistaken about this.  The issue arises from adding edit to disabled_actions.  My bad.\n. WOW! Now that's rapid response.  Thanks.. I have learned via SO that the error is resolved by modifying the setters as below:\nfrom:\n````\n    public function setEmail(string $email): self {\n        $this->email = $email;\n    return $this;\n}\n\nto this:\n    public function setEmail(?string $email): self {\n        $this->email = $email;\n    return $this;\n}\n\n````. ",
    "vrobic": "Hello,\nsame validation error for me, with v1.12.7 and the new easyadmin_autocomplete form type.\nThanks for your help.\n. ",
    "zairankara": "Solved! Thanks Javier you're very kind.\n. ",
    "dimoniet": "What kind of arguments do you think shall be customizable? @javiereguiluz I can try to help with this issue if you want.\n. ",
    "HeahDude": "Hi @ktrzos, it's fixed with today releases of symfony 2.3.40 and 2.7.12. You still have to wait for next releases of 2.8 and 3.0.\nThis is not related to this bundle.\nCheers!\n. Hi @ktrzos, it's fixed with today releases of symfony 2.3.40 and 2.7.12. You still have to wait for next releases of 2.8 and 3.0.\nThis is not related to this bundle.\nCheers!\n. Yes https://github.com/symfony/symfony/pull/18317\n. Yes https://github.com/symfony/symfony/pull/18317\n. After another look on your code, I think your definitions of the required attribute are overridden by the Form component hierarchy mechanism.\nWhen a form/field is compound its required attribute overrides its children definitions.\nIt means a form/field not required cannot hold required field(s).\nDoes that help you?\n. After another look on your code, I think your definitions of the required attribute are overridden by the Form component hierarchy mechanism.\nWhen a form/field is compound its required attribute overrides its children definitions.\nIt means a form/field not required cannot hold required field(s).\nDoes that help you?\n. I don't think you have to rely on the required attribute for that, using validation should be enough.\nAnyway from a component POV, it's sure that a non required field cannot hold required fields.\n. I don't think you have to rely on the required attribute for that, using validation should be enough.\nAnyway from a component POV, it's sure that a non required field cannot hold required fields.\n. I did not sneak in this bundle code yet, but you could use the attr option to pass the css class you need to decorate the fields as you want.\n. I did not sneak in this bundle code yet, but you could use the attr option to pass the css class you need to decorate the fields as you want.\n. You may have missed my other post :)\n. > allmost working , still EntityTypeExtension is not aware of selected entity\n\nformFieldOptions has no way to get to the entity\n\nWhat do you mean by fetch the entity? Because actually when you define a form type buildForm has no access to the underlying data as it's not set yet. You need an event listener on POST_SET_DATA event.\nSee http://symfony.com/doc/current/cookbook/form/dynamic_form_modification.html#customizing-your-form-based-on-the-underlying-data.\n. @Mentos93 globally strict type getters work better with initialized parameters.\n. @degouville If you want to do this you have to define app.version as a container parameter (i.e in parameters.yml), the global app variable, is a global Twig variable only accessible in templates.. There is but it is an object, so it won't help you in this case IMHO.. Hello @TomasVotruba, here's what I do in such case:\nphp\n    /**\n     * @var Training|null\n     *\n     * @ORM\\ManyToOne(targetEntity=Training::class, inversedBy=\"trainingFeedbacks\")\n     * @ORM\\JoinColumn(nullable=false, onDelete=\"CASCADE\")\n     *\n     * @Assert\\NotNull\n     */\n    private $training;\nHope it helps, cheers!. Maybe you could try to rename this block easyadmin_autocomplete_row, because suffixing it with widget might mean form_row has been called before, printing the label.\nIn any case your change here looks good.\n. ",
    "martixy": "I see. It seems every time I need something it's just in the next version.\nHappened the same way with 1.12.4 -> .5\nThanks for the quick response, brb after I test.\n. I see. It seems every time I need something it's just in the next version.\nHappened the same way with 1.12.4 -> .5\nThanks for the quick response, brb after I test.\n. Can confirm, fixes the clickable URL issue.\nI guess I'll be looking for other avenues on my foreign table problem.\nThanks.\n. Can confirm, fixes the clickable URL issue.\nI guess I'll be looking for other avenues on my foreign table problem.\nThanks.\n. Yea, I'd like that feature very much right about now.\n. Yea, I'd like that feature very much right about now.\n. 1. On design: I see. I like the default styles better, but that's irrelevant to the validity of your response.\n2. More importantly it seems I may not have been clear enough with the actual problem.\n   How to reproduce the behaviour: Override the default layout with a blank file.\nConfig:\nYAML\neasy_admin:\n    design:\n    templates:\n      layout: ':easyadmin:layout.html.twig'\nLayout file:\nTWIG\n{# app/Resources/views/easyadmin/layout.html.twig #}\n{% extends '@EasyAdmin/default/layout.html.twig' %}\nUnless I am misunderstanding how parts of the system work, it seems to me that the following setup should result in no changes whatsoever, merely in an unnecessary level of indirection.\nHowever it currently breaks the menu at the very least.\n. First sorry for the late reply, didn't have time.\nThere is not an explicit error, just things not working properly.\nAll I have for you are two screenshots and the associated twig stack traces:\nBroken in this case means: No icons, no submenus, only managed entities in the menu, without the custom labels and will not respect the color setting:\n\n```\nRendering Call Graph\nmain 12.84ms/100%\n\u2514 :Form:dealer_portal_search.html.twig 12.19ms/95%\n\u2502 \u2514 EasyAdminBundle:default:layout.html.twig 12.14ms/95%\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(page_title)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(content_title)\n\u2502   \u2514 :Form:dealer_portal_search.html.twig::block(head_stylesheets)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(head_stylesheets)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(head_favicon)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(head_javascript)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(adminlte_options)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(body) 11.70ms/91%\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(body_id)\n\u2502     \u2514 :Form:dealer_portal_search.html.twig::block(body_class)\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(wrapper) 11.58ms/90%\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(header_logo)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(user_menu)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(sidebar) 2.75ms/21%\n\u2502     \u2502 \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(main_menu_wrapper) 2.74ms/21%\n\u2502     \u2502 \u2502   \u2514 @EasyAdmin/default/menu.html.twig 1.80ms/14%\n\u2502     \u2502 \u2502     \u2514 @EasyAdmin/default/menu.html.twig::block(main_menu) 1.76ms/14%\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(content) 6.99ms/54%\n\u2502     \u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(flash_messages)\n\u2502     \u2502   \u2514 :Form:dealer_portal_search.html.twig::block(content_header)\n\u2502     \u2502   \u2514 :Form:dealer_portal_search.html.twig::block(main) 6.92ms/54%\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_start)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(choice_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(choice_widget_collapsed)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(choice_widget_options)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(search_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(integer_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(integer_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_end)\n\u2502     \u2502       \u2514 form_div_layout.html.twig::block(form_rest)\n\u2502     \u2502         \u2514 form_div_layout.html.twig::block(hidden_row)\n\u2502     \u2502           \u2514 form_div_layout.html.twig::block(hidden_widget)\n\u2502     \u2502             \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502               \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(body_javascript)\n\u2514 @WebProfiler/Profiler/toolbar_js.html.twig\n  \u2514 @WebProfiler/Profiler/base_js.html.twig\n```\nVs the how it should look like:\n\n```\nRendering Call Graph\nmain 13.36ms/100%\n\u2514 :Form:dealer_portal_search.html.twig 12.77ms/96%\n\u2502 \u2514 EasyAdminBundle:default:layout.html.twig 12.71ms/95%\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(page_title)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(content_title)\n\u2502   \u2514 :Form:dealer_portal_search.html.twig::block(head_stylesheets)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(head_stylesheets)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(head_favicon)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(head_javascript)\n\u2502   \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(adminlte_options)\n\u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(body) 12.40ms/93%\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(body_id)\n\u2502     \u2514 :Form:dealer_portal_search.html.twig::block(body_class)\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(wrapper) 12.29ms/92%\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(header_logo)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(user_menu)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(sidebar) 3.91ms/29%\n\u2502     \u2502 \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(main_menu_wrapper) 3.90ms/29%\n\u2502     \u2502 \u2502   \u2514 @EasyAdmin/default/menu.html.twig 2.98ms/22%\n\u2502     \u2502 \u2502     \u2514 @EasyAdmin/default/menu.html.twig::block(main_menu) 2.95ms/22%\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2502       \u2514 @EasyAdmin/default/menu.html.twig::macro(render_menu_item)\n\u2502     \u2502 \u2514 EasyAdminBundle:default:layout.html.twig::block(content) 6.52ms/49%\n\u2502     \u2502   \u2514 EasyAdminBundle:default:layout.html.twig::block(flash_messages)\n\u2502     \u2502   \u2514 :Form:dealer_portal_search.html.twig::block(content_header)\n\u2502     \u2502   \u2514 :Form:dealer_portal_search.html.twig::block(main) 6.49ms/49%\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_start)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(choice_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(choice_widget_collapsed)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(choice_widget_options)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2502     \u2514 form_div_layout.html.twig::block(attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(search_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(integer_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_label)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_errors)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(integer_widget)\n\u2502     \u2502     \u2502 \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502     \u2502   \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2502     \u2514 form_div_layout.html.twig::block(form_end)\n\u2502     \u2502       \u2514 form_div_layout.html.twig::block(form_rest)\n\u2502     \u2502         \u2514 form_div_layout.html.twig::block(hidden_row)\n\u2502     \u2502           \u2514 form_div_layout.html.twig::block(hidden_widget)\n\u2502     \u2502             \u2514 form_div_layout.html.twig::block(form_widget_simple)\n\u2502     \u2502               \u2514 form_div_layout.html.twig::block(widget_attributes)\n\u2502     \u2514 EasyAdminBundle:default:layout.html.twig::block(body_javascript)\n\u2514 @WebProfiler/Profiler/toolbar_js.html.twig\n  \u2514 @WebProfiler/Profiler/base_js.html.twig\n```\nI don't know how much this would help diagnose the problem though. If you need any more info, let me know what it is.\n. Found out what the problem was.\nIt seems I properly embarrassed myself by overriding the design tag in the yml.\n. > - Override the templates to add your own logic to hide/show actions based on user roles.\nThis is precisely what I did. However I think you'll agree with me when I say it is a positively cringe-worthy solution.\nOn a related note, I've seen from other threads that I am far from the only person who would wish the ability to tinker with config at runtime. At one point you said you're in the process of replacing the whole system. Is there an estimate you can give on when that will see the light of day?\n. > - Override the templates to add your own logic to hide/show actions based on user roles.\nThis is precisely what I did. However I think you'll agree with me when I say it is a positively cringe-worthy solution.\nOn a related note, I've seen from other threads that I am far from the only person who would wish the ability to tinker with config at runtime. At one point you said you're in the process of replacing the whole system. Is there an estimate you can give on when that will see the light of day?\n. Preempt creation, either by using events or custom controller methods.\nSee here:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\nNote that this functionality for your current use case may be broken at the moment:\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/1104\nIn which case you are left with the option of overriding the newAction() method, say:\nPHP\nprotected function newAction() {\n    //Check if you're above limit\n    return parent::newAction();\n}\n. This is the worst solution ever, but to work around this, I created a \"virtual property\" - a method in my entity, where I import the kernel and run a manual, native SQL query to return the correct count.\n``` php\n    global $kernel;\nif ('AppCache' == get_class($kernel)) {\n    $kernel = $kernel->getKernel();\n}\n/** @var \\Doctrine\\DBAL\\Connection $conn */\n$conn = $kernel->getContainer()->get('doctrine')->getManager()->getConnection();\n\n```\nNote that this is a very silly approach and you should not use it. But it does work.\n. Hm... it might help the general case.\nBut not me specifically. Due to the amount of things I count(in the millions), I resorted to using the cached results of a single SELECT-COUNT-GROUP BY query.\n. Hm... it might help the general case.\nBut not me specifically. Due to the amount of things I count(in the millions), I resorted to using the cached results of a single SELECT-COUNT-GROUP BY query.\n. This is exactly what I'm trying to do now.\nSadly, it never works, because internally easyadmin always uses the configManager, which is private and immutable. All data you have access to are merely read-only copies. Your best bet might be to add/replace the field manually in the createEntityFormBuilder method.\nIn fact here's the solution I found:\nPHP\npublic function createYourThingEntityFormBuilder($entity, $view)\n{\n    $builder = parent::createEntityFormBuilder($entity, $view);\n    if ($builder->has('products')) {\n        $builder->remove('products');\n        $builder->add('products', ChoiceType::class, [\n            'choices' => $entity->getProducts(),\n            'choice_label' => 'rawName',\n            'attr' => ['multiple' => true, 'data-widget' => 'select2'],\n            'choice_attr' => function ($allChoices, $currentChoiceKey) {\n                return ['selected' => 'selected'];\n            },\n        ]);\n    }\n    return $builder;\n}\nThis will create a choiceType field with the fancy select2 dropbox, and populate it with whatever choices you specify via the choices option and the defaults specified in the choice_attr option.\nBear in mind that if you use EntityType, without flushed entities, it will throw, despite the error suggesting persisting them would suffice. (That's been my experience anyway. More testing might be needed.)\nOf course, this will add your new field form at the end of the form, so it may mess up the arrangement of your form. A workaround for this is just to get the succeeding fields, remove them as well and add them in order. Silly, but it'll work.\n. There is no HTML way as far as I know. Just use javascript. I.e. onclick. You can either override the list action template and the table_body block and put a custom class on there to select for or use the data-id property that's already on there.\nThis one should work as well: http://tutorialsplane.com/bootstrap-make-table-row-clickable/\nAnd you can just put <a>s on all <td>s.\n. ",
    "gui-don": "I tested with the dev-master branch and it indeed solves the issue.\nThank you very much and keep up the good work ;)\n. ",
    "gitmehubb": "Thank's!\n. Thank's!\n. ",
    "pomporov": "You can use a static call:\nyaml\nquery_builder: ['\\Your\\entity\\repository\\class','staticMethod']\nIt will work  but you will not be avare of current entity .\nPS: dont forget to declare as public static function  your staticMethod\n. Its a complemnt to https://github.com/javiereguiluz/EasyAdminBundle/issues/947 \nbut with parameters \n. this is rather dirty no ? \nI think its a very common need for the easyadmin dont you think ? \n. i was thinking make an query_builder_dynamic: ['Path\\To\\Repository\\Class','methodName']\nthen in : EasyAdminFormType hardcode a query_builder injection with options \nso it does not break back compatibility and allow the parameters with minimal footprint .\n. i mean it can be: \n1/ type_options:[query_builder: \"function(EntityRepository $r) use($options) {return $r->createQueryBuilder('c');}\"] \nor \n2/ type_options:[query_builder: ['repositoryClass','staticMethod']]\n2 will work but no way to inject any parameter to staticMethod\n1 wont work as its a string and it expect a callable \n. how about this : \nadded in \"EasyAdminFormType\"\nphp\n if (isset($formFieldOptions['query_builder_dynamic']) && is_array($formFieldOptions['query_builder_dynamic']) && count($formFieldOptions['query_builder_dynamic']) == 3) {\n$respositoryClassName = $formFieldOptions['query_builder_dynamic'][0];\n$entityClassName = $formFieldOptions['query_builder_dynamic'][1];\n$methodName = $formFieldOptions['query_builder_dynamic'][2];\n$repository = $this->em->getRepository($entityClassName);\n$formFieldOptions['query_builder'] = call_user_func_array(array($respositoryClassName, $methodName), [$repository, $options]);\nunset($formFieldOptions['query_builder_dynamic']);\n            }\nthen in the config : \nyaml\n                    - { property: 'members', type_options: { by_reference: false, query_builder_dynamic: ['My\\Corp\\Repository\\EntityRepository','My\\Corp\\Entity\\Entity', 'staticMethod'] } }\nand then \nphp\n public static function staticMethod(EntityRepository $repository, $options)\n    {\n        return $repository->createQueryBuilder('c');\n    }\n. sorry something wrong in formating\n. this allow with minimal modificaiton of the EasyAdminFormType (and injection of doctrine)\nto have dynamic querybuilder with full acces to the repository in arbitrary location\n. i dont fully understand how to get it to work as i'm a bit lost in the injections.\ni got the idea but i need a bit of help to figure it out .\nfor example it need doctrine to be injected how it works with the extension ? \n. thanks alot i understand now \n``` php\nclass EntityTypeExtension extends AbstractTypeExtension\n{\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        parent::configureOptions($resolver);\n    // Invoke the query builder closure so that we can cache choice lists\n    // for equal query builders\n    $queryBuilderNormalizer = function (Options $options, $queryBuilder) {\n\n        if (is_callable($queryBuilder)) {\n            $queryBuilder = call_user_func($queryBuilder, $options['em']->getRepository($options['class']), [$entity]); //<< how to get the entity here \n            if (null !== $queryBuilder && !$queryBuilder instanceof QueryBuilder) {\n                throw new UnexpectedTypeException($queryBuilder, 'Doctrine\\ORM\\QueryBuilder');\n            }\n        }\n\n        return $queryBuilder;\n    };\n    $resolver->setNormalizer('query_builder', $queryBuilderNormalizer);\n    $resolver->setAllowedTypes('query_builder', array('null', 'callable', 'Doctrine\\ORM\\QueryBuilder'));\n}\n\npublic function getExtendedType()\n{\n    return EntityType::class;\n}\n\n}\n```\nallmost working , still EntityTypeExtension is not aware of selected entity \nhow to make it aware without patching the main form ? \nbecause in EasyAdminForm: \n``` php\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    $entity = $options['entity'];\n    $view = $options['view'];\n    $entityConfig = $this->configurator->getEntityConfig($entity);\n    $entityProperties = $entityConfig[$view]['fields'];\n\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\nformFieldOptions has no way to get to the entity.\nThanks again, i'm learning alot with this simple task.\n. thanks alot i understand now \n``` php\nclass EntityTypeExtension extends AbstractTypeExtension\n{\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        parent::configureOptions($resolver);\n    // Invoke the query builder closure so that we can cache choice lists\n    // for equal query builders\n    $queryBuilderNormalizer = function (Options $options, $queryBuilder) {\n\n        if (is_callable($queryBuilder)) {\n            $queryBuilder = call_user_func($queryBuilder, $options['em']->getRepository($options['class']), [$entity]); //<< how to get the entity here \n            if (null !== $queryBuilder && !$queryBuilder instanceof QueryBuilder) {\n                throw new UnexpectedTypeException($queryBuilder, 'Doctrine\\ORM\\QueryBuilder');\n            }\n        }\n\n        return $queryBuilder;\n    };\n    $resolver->setNormalizer('query_builder', $queryBuilderNormalizer);\n    $resolver->setAllowedTypes('query_builder', array('null', 'callable', 'Doctrine\\ORM\\QueryBuilder'));\n}\n\npublic function getExtendedType()\n{\n    return EntityType::class;\n}\n\n}\n```\nallmost working , still EntityTypeExtension is not aware of selected entity \nhow to make it aware without patching the main form ? \nbecause in EasyAdminForm: \n``` php\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    $entity = $options['entity'];\n    $view = $options['view'];\n    $entityConfig = $this->configurator->getEntityConfig($entity);\n    $entityProperties = $entityConfig[$view]['fields'];\n\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\nformFieldOptions has no way to get to the entity.\nThanks again, i'm learning alot with this simple task.\n. Hi,\ni maid it work but i still have a minor modification to the EasyAdminForm in order to pass the options down to the extended Entity Type. I understand its dirty and want to find a clean way to do it .\n``` php\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $entity = $options['entity'];\n        $view = $options['view'];\n        $entityConfig = $this->configurator->getEntityConfig($entity);\n        $entityProperties = $entityConfig[$view]['fields'];\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        if (isset($formFieldOptions['easyadmin_config'])) {\n            $formFieldOptions['easyadmin_config'] = $options;\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\nin the config\n- { property: 'members', type_options: { by_reference: false, easyadmin_config: \"true\", query_builder: ['App\\Repository\\EntityRepository', 'staticMethod'] } }\n  the easyadmin_config trigger the custom behaviour .\n  is there maybe a way to extend somehow the EasyAdminForm ??\n. Hi,\ni maid it work but i still have a minor modification to the EasyAdminForm in order to pass the options down to the extended Entity Type. I understand its dirty and want to find a clean way to do it .\n``` php\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $entity = $options['entity'];\n        $view = $options['view'];\n        $entityConfig = $this->configurator->getEntityConfig($entity);\n        $entityProperties = $entityConfig[$view]['fields'];\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        if (isset($formFieldOptions['easyadmin_config'])) {\n            $formFieldOptions['easyadmin_config'] = $options;\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\nin the config\n- { property: 'members', type_options: { by_reference: false, easyadmin_config: \"true\", query_builder: ['App\\Repository\\EntityRepository', 'staticMethod'] } }\n  the easyadmin_config trigger the custom behaviour .\n  is there maybe a way to extend somehow the EasyAdminForm ??\n. an idea would be to use %%entity_id%% in configuration (same as for Title for example) so i can fetch the entity using the id in the extended type but i'm not sure its the way to go . i think %%entity_id%% works only in title ? \n. an idea would be to use %%entity_id%% in configuration (same as for Title for example) so i can fetch the entity using the id in the extended type but i'm not sure its the way to go . i think %%entity_id%% works only in title ? \n. I mean i want to fetch \n$entity = $options['entity'];\nor whole \"options\" from  the extended Entity Type\nso in EasyAdminForm buildForm is aware of the entity, i want to pass it down \ni'm not sure i'm clear \n. I mean i want to fetch \n$entity = $options['entity'];\nor whole \"options\" from  the extended Entity Type\nso in EasyAdminForm buildForm is aware of the entity, i want to pass it down \ni'm not sure i'm clear \n. hello\ni cannot i think because the value i need is \"$options\" , how can i feed it to the variable form the admin config ? \ni can pass any \"string\" or array , but i need options so its dynamic \nregards\n. hello\ni cannot i think because the value i need is \"$options\" , how can i feed it to the variable form the admin config ? \ni can pass any \"string\" or array , but i need options so its dynamic \nregards\n. I think a simple addition of something like this will allow alot of dynamic operations \n``` php\n\n{ property: 'members', type_options: { by_reference: false, myVariable: \"%%options%%\", query_builder: ['AppBundle\\Repository\\EntityRepository', 'staticMethod'] } }\n```\n\nthen with minimal addition to buildForm we inject $options incase of %%options%% \nin the same way it works for names.\nit allow to push a whole new level of customisation to selects and make it fully aware of context.\nI did not found any other way as it appears impossible to override the buildForm from userspace.\n. I think a simple addition of something like this will allow alot of dynamic operations \n``` php\n\n{ property: 'members', type_options: { by_reference: false, myVariable: \"%%options%%\", query_builder: ['AppBundle\\Repository\\EntityRepository', 'staticMethod'] } }\n```\n\nthen with minimal addition to buildForm we inject $options incase of %%options%% \nin the same way it works for names.\nit allow to push a whole new level of customisation to selects and make it fully aware of context.\nI did not found any other way as it appears impossible to override the buildForm from userspace.\n. it looks like this \n``` php\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $entity = $options['entity'];\n        $view = $options['view'];\n        $entityConfig = $this->configurator->getEntityConfig($entity);\n        $entityProperties = $entityConfig[$view]['fields'];\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        foreach ($formFieldOptions as $key => $value) {\n            if ($value == '%options%') {\n                $value = $options;\n            }\n            $formFieldOptions[$key] = $value;\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\n. it looks like this \n``` php\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $entity = $options['entity'];\n        $view = $options['view'];\n        $entityConfig = $this->configurator->getEntityConfig($entity);\n        $entityProperties = $entityConfig[$view]['fields'];\n    foreach ($entityProperties as $name => $metadata) {\n        $formFieldOptions = $metadata['type_options'];\n\n        // Configure options using the list of registered type configurators:\n        foreach ($this->configurators as $configurator) {\n            if ($configurator->supports($metadata['fieldType'], $formFieldOptions, $metadata)) {\n                $formFieldOptions = $configurator->configure($name, $formFieldOptions, $metadata, $builder);\n            }\n        }\n\n        foreach ($formFieldOptions as $key => $value) {\n            if ($value == '%options%') {\n                $value = $options;\n            }\n            $formFieldOptions[$key] = $value;\n        }\n\n        $formFieldType = LegacyFormHelper::getType($metadata['fieldType']);\n        $builder->add($name, $formFieldType, $formFieldOptions);\n    }\n}\n\n```\n. ",
    "appyapp": "@javiereguiluz When I disable the EasyAdminBundle, I don't hit the memory limit. I tried various test case like:\n1 - Loading the bundle without SubCategory Entity : memory limit fatal error\n2 - Loading the bundle without SubCategory and Category Entities: memory limit fatal error\n3 - Loading the bundle with the defaults entity parameters, i.e :\nentity:\n    - AppBundle\\Entity\\Race\n    - AppBundle\\Entity\\Subcategory\n    - AppBundle\\Entity\\Category\nMemory Limit Fatal Error\n4- Loading the bundle wihout defining entities : Memory Limit Fatal Error\nSo, I uninstalled and reinstalled the bundle, but without changes...\nIf I remember well, the error had the same origin, the template cache warmer.\nI hope the next stable version will improve that small issue. I guess for the moment I have to increase the memory limit.\nThanks for your quick response !\n. ",
    "yoh": "In my case, I extends \\JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController to write custom get<EntityName>EntityFunction in and I try to call executeDynamicMethod in other custom function in this controller...\nI have to copy/paste the executeDynamicMethod function :. ",
    "ziobudda": "@Glideh can you share your code ? I need to search for columns and not only for global. Thanks.\n. Hi, I have this\nVote:\n            class: AppBundle\\Entity\\Vote\n            list:\n                fields:\n                    - userBy\n                    - entityFor\n                    - entityName\n                    - date\n                actions:\n                    edit: { name: edit, type: method, label: '', class: '', icon: pencil }\n                    delete: { name: delete, type: method, label: '', class: '', icon: trash }\n            search:\n                fields:\n                      - property: 'userBy'\n                        search_label: 'votato da'\n                      - property: 'entityFor'\nbut it does not work.\n\nwhere is my error ? \n. @glideh: For the moment I want to create a search that filter for \"User By\", \"Entity For\" and \"Entity name\". Ok, for the \"entity name\", but in this moment I can not create a situation like your where there is a \"select menu\" where my \"administrator user\" can choice the field at the base of the search. \nI can not use UserBy.fullname because in my entity \"Vote\" this field is a\n* @ORM\\Column(name=\"userBy\", type=\"integer\")\nbecause I receive this data via a REST api call. EntityFor is a integer too. \nI can try to modify ORM definition (trasforming in a ManyToOne) and check if REST api has no problem with this new setting.\nHowever for the moment I want to permit to my \"administrator user\" to have a \"select me\" for choice \"UserBy\" or \"EntitiyFor\". \nThanks. \n. Found other solution (I think). ",
    "ndench": "For the second issue addressed here (searching on doctrine associtions), I had the problem of needing to search on associations for multiple entities and I didn't want to override the createSearchQueryBuilder() for every entity so I overrode the the generic createSearchQueryBuilder() so that it could search on a configured field of the associated entity:\n```\n    /\n     * {@inheritdoc}\n     \n     * @throws MissingSearchAssociationException\n     /\n    protected function createSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null, $dqlFilter = null)\n    {\n        $queryBuilder = $this->get('easyadmin.query_builder')->createSearchQueryBuilder($this->entity, $searchQuery, $sortField, $sortDirection, $dqlFilter);\n        $lowerSearchQuery = mb_strtolower($searchQuery);\n    $queryParameters = [];\n    foreach ($this->entity['search']['fields'] as $name => $metadata) {\n        if ('association' === $metadata['dataType']) {\n            if (false === array_key_exists('searchField', $metadata)) {\n                throw new MissingSearchAssociationException($this->entity['name'], $name);\n            }\n\n            // Join the associated entity and search on the given field\n            $searchField = $metadata['searchField'];\n            $queryBuilder->join(sprintf('entity.%s', $name), $name);\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) LIKE :fuzzy_query', $name, $searchField));\n            $queryParameters['fuzzy_query'] = '%'.$lowerSearchQuery.'%';\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) IN (:words_query)', $name, $searchField));\n            $queryParameters['words_query'] = explode(' ', $lowerSearchQuery);\n        }\n    }\n\n    if (0 !== count($queryParameters)) {\n        $queryBuilder->setParameters($queryParameters);\n    }\n\n    return $queryBuilder;\n}\n\n```\nNow I can add a searchField to my configuration like this:\neasy_admin:\n    entities:\n        UserRole:\n            search:\n                fields:\n                   - { property: 'user', searchField: 'username' }\n                   - { property: 'role', searchField: 'name'}\nI think something like this should be included in EasyAdminBundle, I'm happy to do a PR if you would like? :smile: . ",
    "cabsil": "Hello,\nThanks for the code above. For your information I faced a problem while using both of the pieces of code provided above. For some reasons, the filter was filtering too much. I add to change the join by a left join.\nHere is the code I used :+1: \n`\n/\n     * {@inheritdoc}\n     \n     * @throws MissingSearchAssociationException\n     /\n    protected function createSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null, $dqlFilter = null)\n    {\n        $queryBuilder = $this->get('easyadmin.query_builder')->createSearchQueryBuilder($this->entity, $searchQuery, $sortField, $sortDirection, $dqlFilter);\n        $lowerSearchQuery = mb_strtolower($searchQuery);\n    $queryParameters = [];\n    foreach ($this->entity['search']['fields'] as $name => $metadata) {\n        if ('association' === $metadata['dataType']) {\n            if (false === array_key_exists('searchField', $metadata)) {\n                throw new MissingSearchAssociationException($this->entity['name'], $name);\n            }\n\n            // Join the associated entity and search on the given field\n            $searchField = $metadata['searchField'];\n            $queryBuilder->leftJoin(sprintf('entity.%s', $name), $name);\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) LIKE :fuzzy_query', $name, $searchField));\n            $queryParameters['fuzzy_query'] = '%'.$lowerSearchQuery.'%';\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) IN (:words_query)', $name, $searchField));\n            $queryParameters['words_query'] = explode(' ', $lowerSearchQuery);\n        }\n    }\n\n    if (0 !== count($queryParameters)) {\n        $queryBuilder->setParameters($queryParameters);\n    }\n\n    return $queryBuilder;\n}`\n\nChristophe Absil. Hello,\nThanks for the code above. For your information I faced a problem while using both of the pieces of code provided above. For some reasons, the filter was filtering too much. I add to change the join by a left join.\nHere is the code I used :+1: \n`\n/\n     * {@inheritdoc}\n     \n     * @throws MissingSearchAssociationException\n     /\n    protected function createSearchQueryBuilder($entityClass, $searchQuery, array $searchableFields, $sortField = null, $sortDirection = null, $dqlFilter = null)\n    {\n        $queryBuilder = $this->get('easyadmin.query_builder')->createSearchQueryBuilder($this->entity, $searchQuery, $sortField, $sortDirection, $dqlFilter);\n        $lowerSearchQuery = mb_strtolower($searchQuery);\n    $queryParameters = [];\n    foreach ($this->entity['search']['fields'] as $name => $metadata) {\n        if ('association' === $metadata['dataType']) {\n            if (false === array_key_exists('searchField', $metadata)) {\n                throw new MissingSearchAssociationException($this->entity['name'], $name);\n            }\n\n            // Join the associated entity and search on the given field\n            $searchField = $metadata['searchField'];\n            $queryBuilder->leftJoin(sprintf('entity.%s', $name), $name);\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) LIKE :fuzzy_query', $name, $searchField));\n            $queryParameters['fuzzy_query'] = '%'.$lowerSearchQuery.'%';\n\n            $queryBuilder->orWhere(sprintf('LOWER(%s.%s) IN (:words_query)', $name, $searchField));\n            $queryParameters['words_query'] = explode(' ', $lowerSearchQuery);\n        }\n    }\n\n    if (0 !== count($queryParameters)) {\n        $queryBuilder->setParameters($queryParameters);\n    }\n\n    return $queryBuilder;\n}`\n\nChristophe Absil. I analyzed the problem further and found the reason why I got the save button. \nIn bootstrap_3_layout.html.twig, we have the following code block : \n{% block form_rest %}\n    {{- parent() -}}\n    {% if form.parent is empty %}\n        <div class=\"row\">\n            <div class=\"col-xs-12 form-actions\">\n                <div class=\"form-group\">\n                    <div id=\"form-actions-row\">\n                        {{- block('item_actions') -}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    {% endif %}\n{% endblock form_rest %}\nIt looks like the condition {% if form.parent is empty %} doesn't return the same result in case of creating a new A Entity as editing an existing A Entity with at least one B Entity.\n. That's good news. Thanks.\nWell I am quite new to symfony. Could you tell how I can update the easy admin bundle to test you fixes ?\n. I finally modified the bootstrap layout according to #1915 and it was enough to solve my problem.\nWhen do you plan to release a version ?\n. ",
    "Daishygoyal": "After using above configuration I am getting \"invalidconfigoption\", tempDirectory is not writable for CKFinder. after install web assets connector folder was missing, then I manually copied the connector to web folder but still getting this error.. After using above configuration I am getting \"invalidconfigoption\", tempDirectory is not writable for CKFinder. after install web assets connector folder was missing, then I manually copied the connector to web folder but still getting this error.. ",
    "Shine-neko": "@javiereguiluz ? . ",
    "R1sen": "My bad?\n. Yeah my bad\n. oh 4 step, is hard.\n. ",
    "deepkirk": "Hi mates,\nI'm having similar troubles with that, for some reason I'm having (on production, on local is everything ok) security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {\"exception\":\"[object] (Symfony\\\\Component\\\\Security\\\\Core\\\\Exception\\\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at ... while i try to login with in_memory provider.\nI tried updating vendors and removing cache files (with cache:clear and rm -R var/cahce/* but without luck.\nI must to say that the \"production\" eviorement is a clone of my local installation of Symfony3.\nThank you in advance\n. Hi mates,\nI'm having similar troubles with that, for some reason I'm having (on production, on local is everything ok) security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {\"exception\":\"[object] (Symfony\\\\Component\\\\Security\\\\Core\\\\Exception\\\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at ... while i try to login with in_memory provider.\nI tried updating vendors and removing cache files (with cache:clear and rm -R var/cahce/* but without luck.\nI must to say that the \"production\" eviorement is a clone of my local installation of Symfony3.\nThank you in advance\n. ",
    "OndraM": "No problem, I'm glad to help! Thank you!\n. No problem, I'm glad to help! Thank you!\n. ",
    "bretanac93": "Ok, I'll work on it...\n. Ok, I'll work on it...\n. Hmmm..., no, I'm not thinking about such thing, I'm just talking about making a button that triggers a popup, that is no hard at all, I think, maybe in the future it could be improved with all those features: Ajax, modal, dynamic creation and all of that stuffs, but for now, it could be something like this.\n\nThat is the django admin app, and my idea is based on that...\n. ok, just leaving a clear reference, is a nice feature, I'll wait until the bundle is ready to take it, thank you for accepting my idea...\n. apparently the line number indicator bar is on another \"layer\" compared with the text input, try to override the z-index in your css to the buttons container, is the only idea that I have.\n. @manuelj555 I'm gonna answer your question with another one, is that component that you are using part of the easy admin bundle?, is it a built-in component?, no is not, so, you must adapt it according to the bundle rules. only put a css rule like this  {z-index: 100; } or something like that and register the css file in the yml that you are putting the easy_admin configuration. Oh!, and I glad you can solve your problem, lol!.\n. Nice, thanks a lot....\n. ",
    "sadortun": "@javiereguiluz Do you have a solution for this ? We simply want to display the number of existing relation.\nThe actual result and output is perfect. The only issue is that it fetches the entire table ! Bellow 100k it barely noticable, but as noticed by @martixy you get in troubble when you reach a few millions !!\n\nAdding \"EXTRA_LAZY\" does not seems to help.\nThanks. ",
    "numerogeek": "Hello @javiereguiluz,\nI still have this issue using symfony 2.8 and the latest version of easyAdmin.\nWhen I try to sort trough a manyToOne attribute, it throw me an error like the one on this issue. (\"undefined index).\nMy config: \nIntervention:\n            class: AppBundle\\Entity\\Intervention\n            label: Interventions\n            list:\n                fields:\n                    - model\n                    - price\nmodel is the oneToMany attribute. this entity has a __toString method which return  $this->name.\nI also added the @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\Intervention\", mappedBy=\"model\")  in the Model Entity.\nAny idea ? \nThank you !\n. ",
    "i--storm": "Thanks )\n. ",
    "hhamon": "Hi guys! In the system I'm building most of the entities can be CRUDed with EasyAdmin but some other require more custom attributes and this is why I want to use DTOs for these forms/views. I have to handle file uploads for instance and I don't want my Entity object to know about the UploadedFile object and this is why I was considering using a temporary DTO. But I think I'm going to use a custom action for these use cases. I'll just reuse the EasyAdmin templates to automate the rendering. \n. Hi Maxime!\nI don't know about simply configuring the method name, because you don't always rely on doctrine repositories (I mean EntityRepository class) to write your custom queries.\nIn our projects, we rather use a custom repository class, in which is injected the doctrine registry or entity manager. If we only allow to configure the method name, that means I'll have to create another xRepository class only for this, which will be confusing.\nWe could also support custom services to fetch the entity:\neasy_admin:\n    entities:\n        Product:\n            edit:\n                repository_method: findComplete # will be performed on a Doctrine repository\n            show:\n                repository_method: ['app.repository.elasticsearch.product', 'findComplete']\nI'm not fan of the first option you suggest for two reasons:\n1. You still waste the original SQL query that is performed.\n2. You need to write more code and magic.\nOption 2 has the same drawbacks than option 1.\nOption 3 is a much better approach to have more control but still requires to write lots of code (the repository method + the listener + the config to register it).\nSo far, I \"fixed\" my problem by overriding the generic find() method in my repository class. It works but I still cannot choose which repository method is used for a particular action.\n. I like both of your proposed approaches.\nThe collection one for list / autocomplete / search views make sense. But what about retrieving a single object?\nWe still need to get @javiereguiluz feedbacks too!\n. Excellent! \n. Well maybe but that means EasyAdminBundle uses some code from SensioFrameworkExtraBundle that needs the ExpressionLanguage loaded. If I don\u2019t use EasyAdminBundle, my code works fine without ExpressionLanguage component in my project.. I don't think the CDATA block is necessary for this translation.\n. ",
    "petk": "Thanks. The submitted translations are double checked.\n. Thanks. The submitted translations are double checked.\n. ",
    "alekslauda": "Hello, @javiereguiluz   , how we can apply the same scenario for the edit template , because i've tried it and i cant access the _list_item_actions :/. ",
    "Ragash": "+1 for the Edit support, i'm struggling trying to edit action template and rendering\n. +1 for the Edit support, i'm struggling trying to edit action template and rendering\n. +1 for the problem, it can be reproduced even with simple custom formtype option:\nCompendiumpullrequest:\n              class: AppBundle\\Entity\\CompendiumPullRequest\n              controller: AppBundle\\Admin\\pullRequestController\n              edit:\n                    actions:\n                    - { name: '-delete' }\n                    fields:\n                      - 'state'\n                      - 'operation'\n                      - 'section'\n                      - { type: 'divider' }\n                      - { property: 'revision', type: 'AppBundle\\Form\\CompendiumRevisionType', type_options: { block_name: 'revision_form'} }\neven removing \"type_option\" will cause the same error because in my formtype i have:\n```\npublic function buildForm(FormBuilderInterface $builder, array $options)\n    {\n    $builder\n        ->add('name')\n        ->add('short_description')\n        ->add('long_description')\n        ->add('image')\n        ->add('symImage')\n        ->add('sourcebook', EntityType::class, array(\n            'label' => 'Comparsa In:',\n            'data_class' => 'AppBundle\\Entity\\Sourcebook',\n            'multiple' => true,\n        ))\n    ;\n}\n\n```\nonly way to solve the The options \"class\", \"em\", \"multiple\" do not exist\" error is to remove my embending form call, and the type_option from the config. +1 for the problem, it can be reproduced even with simple custom formtype option:\nCompendiumpullrequest:\n              class: AppBundle\\Entity\\CompendiumPullRequest\n              controller: AppBundle\\Admin\\pullRequestController\n              edit:\n                    actions:\n                    - { name: '-delete' }\n                    fields:\n                      - 'state'\n                      - 'operation'\n                      - 'section'\n                      - { type: 'divider' }\n                      - { property: 'revision', type: 'AppBundle\\Form\\CompendiumRevisionType', type_options: { block_name: 'revision_form'} }\neven removing \"type_option\" will cause the same error because in my formtype i have:\n```\npublic function buildForm(FormBuilderInterface $builder, array $options)\n    {\n    $builder\n        ->add('name')\n        ->add('short_description')\n        ->add('long_description')\n        ->add('image')\n        ->add('symImage')\n        ->add('sourcebook', EntityType::class, array(\n            'label' => 'Comparsa In:',\n            'data_class' => 'AppBundle\\Entity\\Sourcebook',\n            'multiple' => true,\n        ))\n    ;\n}\n\n```\nonly way to solve the The options \"class\", \"em\", \"multiple\" do not exist\" error is to remove my embending form call, and the type_option from the config. @alterphp i used your fix and it work just fine (cannot wait for a merge) \njust want to notice that i had to change \"data_class\" to \"class\" on my case to make it work cause it were throwing an error of \"missing class option\". @alterphp i used your fix and it work just fine (cannot wait for a merge) \njust want to notice that i had to change \"data_class\" to \"class\" on my case to make it work cause it were throwing an error of \"missing class option\". Ok i found a workaround, it's not elegant, but it works.\nI'll post here my solution, so if someone will have the same problem trying to overriding new or edit view with custom \"action-save\" wouldn't be stuck:\nthe quickest way to obtain a single entity managed without the hardcoded save-action is to copy bootstrap-3-layout.html.twig in your \"view/easy_admin\" folder and renaming it like \"custom_layout.html.twig\".\nhere you can remove the hardcoded save-action, working then with a set of custom action via the configuration as the docs, or modify the hardcoded save as it suits your needs.\nlasttly in your new/edit custom view template you need to specify the use of the custom layout via \n{% form_theme form with ':easy_admin:custom_layout.html.twig' %}\nThat's all. As stated, it's not elegant, but it do the works.\nThanks for your work and time, Javier!\n. Ok i found a workaround, it's not elegant, but it works.\nI'll post here my solution, so if someone will have the same problem trying to overriding new or edit view with custom \"action-save\" wouldn't be stuck:\nthe quickest way to obtain a single entity managed without the hardcoded save-action is to copy bootstrap-3-layout.html.twig in your \"view/easy_admin\" folder and renaming it like \"custom_layout.html.twig\".\nhere you can remove the hardcoded save-action, working then with a set of custom action via the configuration as the docs, or modify the hardcoded save as it suits your needs.\nlasttly in your new/edit custom view template you need to specify the use of the custom layout via \n{% form_theme form with ':easy_admin:custom_layout.html.twig' %}\nThat's all. As stated, it's not elegant, but it do the works.\nThanks for your work and time, Javier!\n. love, love, love, thanks for all the work!. ",
    "diriy": "I followed it. So, I've got PHP 5.6 & Windows 7 x64\n. Composer created this file in the appropriate directory and then crashed. I attached this file\n. http://www.mediafire.com/download/xxi7ead9cssxi9n/da08f50febad3abbb040881f3c2f1768\n. but it shows something strange:\n\n. I've cloned the bundle from GitHub and pasted it to /vendor as it should be after installation with composer. I have another error: Attempted to load class \"EasyAdminBundle\" from namespace \"JavierEguiluz\\Bundle\\EasyAdminBundle\".\nDid you forget a \"use\" statement for another namespace?\nSome problems with mappings, as far as I understood. But what should I do in order to let the bundle work properly?\n. yes, I did it, but they work correctly, without any errors. I installed HappyRGoogleApiBundle, DoctrineMigrationsBundle, DoctrineCacheBundle and KnpMarkdownBundle. They work great. The other strange thing is following: I installed it at another machine with another bundles (FOSUserBundle and VichUploaderBundle) for another purposes but had no errors with composer or the whole bundle. I can connect by TeamViewer or Skype and show you my project if you can help. I don't really know, how to solve this trouble...\n. when I tried to install bundle to fresh symfony3 installation, I got the following:\ncomposer require javiereguiluz/easyadmin-bundle\nUsing version ^1.15 for javiereguiluz/easyadmin-bundle\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nNothing to install or update\nGenerating autoload files\nand no folder in /vendor/ path...\n. sorry - my mistake. Tried to do \"$composer requre...\" at the inappropriate path.. bit tired cause struggled with this bundle during whole day....=)) it installed properly on fresh version...\n. Restored to previously worked version. Tried to install it again an got the first error once again. I have the strange feeling that I will hate composer during all my future life after this crazy day=))))))How can I install bundle properly without composer?...\n. I've found some issue which may be related: https://github.com/composer/composer/issues/604\nI think, it's an answer..\nUpdated:\nYes, it works fine! So the solution was to move the project to the above directory because the length of path was too big. So, thanks a million for your feedback and your help! \n. subscribed.\nAny news about this feature?. Found that got values in \"roles\" field that are not JSON. Closed issue.. ",
    "alborq": "I have see this option, but this option is not enough:\n1) if you want only use this option, you must define server information into your configuration. Result : You dont split responsability. Bad practice. \n2) You create rigidity in your app, you cant translate|modify routing without break link..\n3) you ask yourself, in your template, you use {{ asset() }} or not ;) and why ? but you cant really write path in. \nYes, i totaly agree, if you merge this PR, BC Break will be created, Wait major to merge. \n. Haha... \nYou use {{ asset() }} into layout, without requiring it. \n\n. Well  :+1: , UPGRADE file notification is a good think ! \n. Well  :+1: , UPGRADE file notification is a good think ! \n. ",
    "fibis": "+ 1\n. Mysterious now it works\n. ",
    "kricha": "@javiereguiluz ok, but maybe it will be easier to create entity listener? \n. @javiereguiluz ok, thanks!\n. @javiereguiluz ok, thanks!\n. @ddfire https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/complex-dynamic-backends.rst. ",
    "ddfire": "the links here are all broken, what are the solutions?\nthanks. The problem was the route i was not making an index with the proper route name and my bundle should came after easyadmin in the route file.. ",
    "dincho": "\n@ddfire https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/complex-dynamic-backends.rst\n\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/doc/book/complex-dynamic-backends.rst. ",
    "luigifab38": "I'm sorry to up this issue, but, even if I not tested the @fredmorgan solution, 132 lines to hash a password, it would not be a little too much?. I'm sorry to up this issue, but, even if I not tested the @fredmorgan solution, 132 lines to hash a password, it would not be a little too much?. Okay, I found a very simplest solution, with my entity setter.\n```php\n    public function setPassword(string $password): self\n    {\n        global $kernel;\n        if (method_exists($kernel, 'getKernel'))\n            $kernel = $kernel->getKernel();\n    $this->password = $kernel->getContainer()->get('security.password_encoder')->encodePassword($this, $password);\n    return $this;\n}\n\n```. Okay, I found a very simplest solution, with my entity setter.\n```php\n    public function setPassword(string $password): self\n    {\n        global $kernel;\n        if (method_exists($kernel, 'getKernel'))\n            $kernel = $kernel->getKernel();\n    $this->password = $kernel->getContainer()->get('security.password_encoder')->encodePassword($this, $password);\n    return $this;\n}\n\n```. ",
    "fredmorgan": "Also, @luigifab38 it's not 132 lines of code to hash the password; it's really only 4 in each method.  The edit and new methods are overrides to the methods in the extended controller thus require the other code to be executed in the override.  The addition to the new method for instance is simply:\n// hash the password before storing in db\n        $encodedPassword = $this->passwordEncoder->encodePassword(\n            $entity,\n            $entity->getPassword()\n        );\n        $entity->setPassword($encodedPassword);. ",
    "jolio007": "@fredmorgan I've tried your method but for some reason it doesn't work. I've modified the easy_admin.yaml too but nothing. I'm not even getting an error message, I still get the plaintext password. @fredmorgan I've tried your method but for some reason it doesn't work. I've modified the easy_admin.yaml too but nothing. I'm not even getting an error message, I still get the plaintext password. ",
    "kprokopenko": "My variant:\n```php\n<?php\nnamespace App\\Controller;\nuse App\\Entity\\User;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\EasyAdminController;\nuse Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface;\nclass UserController extends EasyAdminController\n{\n    /*\n     * @var UserPasswordEncoderInterface\n     /\n    private $passwordEncoder;\n/**\n * UserController constructor.\n *\n * @param UserPasswordEncoderInterface $passwordEncoder\n */\npublic function __construct(UserPasswordEncoderInterface $passwordEncoder)\n{\n    $this->passwordEncoder = $passwordEncoder;\n}\n\npublic function persistEntity($entity)\n{\n    $this->encodePassword($entity);\n    parent::persistEntity($entity);\n}\n\npublic function updateEntity($entity)\n{\n    $this->encodePassword($entity);\n    parent::updateEntity($entity);\n}\n\npublic function encodePassword($user)\n{\n    if (!$user instanceof User) {\n        return;\n    }\n\n    $user->setPassword(\n        $this->passwordEncoder->encodePassword($user, $user->getPassword())\n    );\n}\n\n}\n```\nand config/packages/easy_admin.yaml:\n```yaml\neasy_admin:\n    entities:\n        # List the entity class name you want to manage\n        User:\n            class: App\\Entity\\User\n            controller: App\\Controller\\UserController\n            form:\n                fields:\n                   #  Other fields ...\n                    - { property: 'password', type: 'password' }\n```. ",
    "BioHaZard88": "Thanks for your reply and sorry to didn't find this issue.\nI have not type the right sentence in google to find this issue :\\\nI close this issue \nbest regards,\nJ\u00e9r\u00f4me\n. Thanks for your reply and sorry to didn't find this issue.\nI have not type the right sentence in google to find this issue :\\\nI close this issue \nbest regards,\nJ\u00e9r\u00f4me\n. ",
    "annaos": "If I right understand, must Tests/Configuration/fixtures/EntytyName/output/config_[0..Inf].yml be adjusted by adding \neasy_admin.entities.*.edit.actions.delete.translation_domain: 'messages'\neasy_admin.entities.*.edit.actions.list.translation_domain: 'messages'\neasy_admin.entities.*.list.actions.edit.translation_domain: 'messages'\neasy_admin.entities.*.list.actions.delete.translation_domain: 'messages'\neasy_admin.entities.*.list.actions.new.translation_domain: 'messages'\neasy_admin.entities.*.list.actions.search.translation_domain: 'messages'\neasy_admin.entities.*.new.actions.list.translation_domain: 'messages'\neasy_admin.entities.*.show.actions.edit.translation_domain: 'messages'\neasy_admin.entities.*.show.actions.delete.translation_domain: 'messages'\neasy_admin.entities.*.show.actions.list.translation_domain: 'messages'\nIs it correct? Have you a script to insert this automatically?\n. I make this later with another branch.\n. I make this later with another branch.\n. ",
    "rudak": "Me too, I think this configuration example must be added in the doc in the 'Creating New Users' part but you need to set this field optional on editing, otherwise you have to know all users passwords ^^\n. ok thank you\n. ",
    "Xavier-IV": "My parameters for the application is English respectively.\nconfig.yml\nparameters:\n    locale: en\nEdit - I notice parameters is not available in \n1. config_dev.yml\n2. config_prod.yml\n3. config_test.yml\nAnd I entered the parameters locale, but to no avail.\n. Thanks Juan, that works out well, didn't notice that one because of the intimidating %locale%,\nJust for future records. I did composer update also, even though it might not relate.\n. ",
    "juanmiguelbesada": "Did you enabled translator in config.yml?\nIf is a fresh install, you have to remove the comment (#) in translator key\n``` yml\napp/config/config.yml\nframework:\n    #esi:             ~\n    translator:      { fallbacks: \"%locale%\" }\n```\n. I'm glad to know I helped you. I think we can close this issue now.\n. I think that with this it's sufficient.\nWe can close this\n. As said in documentation (https://symfony.com/doc/master/bundles/EasyAdminBundle/integration/vichuploaderbundle.html#uploading-the-images-in-the-edit-and-new-views)\nYou should use vich_image type in \"form\" views (form/edit/new) \n```yaml\nconfig/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Product:\n            # ...\n            form:\n                fields:\n                    - { property: 'imageFile', type: 'vich_image' }\n            # ...\n```\nand \"image\" type in show views (list/show)\n```yaml\nconfig/packages/easy_admin.yaml\neasy_admin:\n    entities:\n        Product:\n            # ...\n            list:\n                fields:\n                    - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }\n            # ...\n            show:\n                fields:\n                    - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }\n```\n. Why use inline styles instead of a new css rule?. Is this condition correct? I dont know, it looks weird to me. ",
    "HKandulla": "I solved this by using my own DoctrineFilter and enabling it using the method described here:\ndont-apply-global-doctrine-filters-in-the-backend\n. I solved this by using my own DoctrineFilter and enabling it using the method described here:\ndont-apply-global-doctrine-filters-in-the-backend\n. Hi @javiereguiluz , I absolutely understand your point an appreciate your thoughts and help. Maybe next time then:-) Thanks for sharing such a great bundle.. @ogizanagi great! Is that an official \"go\", And I can start creating the PR?. @javiereguiluz great. Than I leave the implementation to you. Thanks.. ",
    "ikvasnica": "It's expected behavior. Since you cannot be sure that the method will return int, you cannot use it. As @ogizanagi mentions, you should wait for nullable types instead.\n. It's expected behavior. Since you cannot be sure that the method will return int, you cannot use it. As @ogizanagi mentions, you should wait for nullable types instead.\n. So, the solution was actually pretty simple, even though not obvious.\nJust adddefault: trueto the menu configuration according to this tutorial.\n. So, the solution was actually pretty simple, even though not obvious.\nJust adddefault: trueto the menu configuration according to this tutorial.\n. I even tried to disable the show view which is supposed to do the problem:\nUser:\n            class: AppBundle\\Entity\\User\n            disabled_actions: ['show']\nAnd this is in the list section for the User entity:\nlist:\n                fields: ['id', 'username', 'email', 'lastLogin', 'enabled']\n                actions:\n                  - { name: 'edit', icon: 'pencil', label: '' }\n                  - { name: 'delete', icon: 'close', label: '' }. Thank you for the fix, @javiereguiluz :). Thank you for the fix, @javiereguiluz :). ",
    "Potherca": "It would be good to know if a PR for this would be accepted...\n. ",
    "araines": "Also experiencing the same problem.  I'm running with Symfony v2.7.19\nI've tried multiple different versions of EasyAdminBundle:\n- v1.14.0\n- v1.15.0\n- v1.15.1\n- v1.15.2\nI've debugged this using v1.15.2 and I'm finding the same issue as reported earlier about the method coming in as POST rather than DELETE.  If I force the request to be a DELETE then the form validates (it won't validate a POST request - which I suspect is where @Raeghal was going wrong).\nHere is a hack for clarity about what I did to make it work:\n```\n        $this->dispatch(EasyAdminEvents::PRE_DELETE);\n    if ('DELETE' !== $this->request->getMethod()) {\n        $this->request->setMethod('DELETE');\n        //return $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n```\nSo that means I need to find out why the DELETE method isn't working properly.  The http_method_override appears to not be working correctly in my case - I can see in the request sent in that _method: DELETE is set - suggesting this is a problem elsewhere in my Symfony set up.\nI found the problem in my case was that I'm using the AppCache, and I didn't have the Request::enableHttpMethodParameterOverride() set properly on all my apps.  Here is the link to the docs:  http://symfony.com/doc/current/reference/configuration/framework.html#http-method-override\nSo in my case this wasn't a problem with the bundle!  Hopefully this line of debugging can help others.\n. Also experiencing the same problem.  I'm running with Symfony v2.7.19\nI've tried multiple different versions of EasyAdminBundle:\n- v1.14.0\n- v1.15.0\n- v1.15.1\n- v1.15.2\nI've debugged this using v1.15.2 and I'm finding the same issue as reported earlier about the method coming in as POST rather than DELETE.  If I force the request to be a DELETE then the form validates (it won't validate a POST request - which I suspect is where @Raeghal was going wrong).\nHere is a hack for clarity about what I did to make it work:\n```\n        $this->dispatch(EasyAdminEvents::PRE_DELETE);\n    if ('DELETE' !== $this->request->getMethod()) {\n        $this->request->setMethod('DELETE');\n        //return $this->redirect($this->generateUrl('easyadmin', array('action' => 'list', 'entity' => $this->entity['name'])));\n    }\n\n```\nSo that means I need to find out why the DELETE method isn't working properly.  The http_method_override appears to not be working correctly in my case - I can see in the request sent in that _method: DELETE is set - suggesting this is a problem elsewhere in my Symfony set up.\nI found the problem in my case was that I'm using the AppCache, and I didn't have the Request::enableHttpMethodParameterOverride() set properly on all my apps.  Here is the link to the docs:  http://symfony.com/doc/current/reference/configuration/framework.html#http-method-override\nSo in my case this wasn't a problem with the bundle!  Hopefully this line of debugging can help others.\n. @xabbuh as I mention in my comment, I actually don't suffer from this problem.  Deletes are working fine for me, my issue was with my configuration of Symfony itself when it comes to the http_method_override where I simply hadn't followed the documentation.\nI cannot reproduce this problem on v1.15.1 or v1.15.2 myself, apologies.\n. Apologies for not getting back on this sooner, and thank for the info.  After some more debugging, its definitely introduced in 1.17.1 - so I'd agree that #1780 is most likely candidate.  However I can't for the life of me work out why this problem occurs at the moment!\nMy suspicion is that the metadata is being read from the ORM and then attempting to be accessed somewhere via the ODM.  I'd expect this must be happening in the Controller, but I'm currently unable to track down where.\nObviously my use of the EasyAdminBundle is a bit of an abuse of the bundle in this case and a rather odd thing to do as well (an Entity in the ORM being the same object as a Document in the ODM), so I understand it isn't really a problem with the bundle itself.\nI have, however, managed to figure out a workaround in case anyone else has a similar problem.  By marking all properties of a class which are annotated with the ORM with the ODM \"NotSaved\" annotation, that seems to sort it out.  For example:\n/**\n * @ORM\\Column(type=\"string\")\n * @MongoDB\\NotSaved\n */\nprivate $someProperty;\nThanks again for the help and also this great bundle!. ",
    "zubus": "Thank you very much, I could not find it.\nYou can close this\n. ",
    "Ealenn": "I have successful custom the dashboard.\nFor those who want help \n``` php\n// Override Controller\nclass AdminController extends BaseAdminController\n{\n    /*\n     * @Route(\"/\", name=\"easyadmin\")\n     * @Route(\"/\", name=\"admin\")\n     * @param Request $request\n     * @return \\Symfony\\Component\\HttpFoundation\\Response\n     /\n    public function indexAction(Request $request)\n    {\n        $this->initialize($request);\n    if (null === $request->query->get('entity')) {\n        return $this->render('AdminBundle:Default:dashboard.html.twig');\n    }\n\n    return parent::indexAction($request);\n}\n\n```\n``` yaml\nrouting.yml\neasy_admin_bundle:\n    resource: \"@AdminBundle/Controller/AdminController.php\"\n    type:     annotation\n    prefix:   /admin/\n```\nand view : \ntwig\n{# dashboard.html.twig #}\n{% extends '@EasyAdmin/Default/layout.html.twig' %}\n. ",
    "fabpot": "Not sure what your intentions are, but re-reading the template:\n{% if app.user %}\n    {{ app.user.username|default('user.unnamed'|trans(domain = 'EasyAdminBundle')) }}\n{% else %}\n    {{ 'user.anonymous'|trans(domain = 'EasyAdminBundle') }}\n{% endif %}\nIt looks like you want to support anonymous users. So, not sure if making security bundle a requirement is the right path.\n. This safeguard does not work as app.user throws an exception if security bundle is not enabled.\n. I don't think it's related to this bundle as there is no call to getParser()AFAICS. Do you have Assetic?\n. I think this is due to TranslationDefaultDomainNodeVisitor in Twig Bridge.. This has been fixed already and will be part of the next Symfony patch releases.. I'd like to also add symfony/validator as a dependency even if this is not strictly needed. WDYT?. Validator added as a required dependency.. too many dots. ",
    "benr77": "I have got this to work, for me at least. As @Glideh has suggested I overrode the QueryBuilder method to add a join to my Event entity, and then modified the addition of the sort to permit the case of sorting on the joined entity.\nFor reference, here is my method:\n```\n/\n     * @param string $entityClass\n     * @param string $sortDirection\n     * @param string $sortField\n     \n     * @return QueryBuilder\n     /\n    public function createEventCommentListQueryBuilder($entityClass, $sortDirection, $sortField = null)\n    {\n        / @var QueryBuilder $queryBuilder */\n        $queryBuilder = $this->getDoctrine()->getManager()->createQueryBuilder()\n            ->select('ec')\n            ->from('AppBundle\\Entity\\EventComment', 'ec')\n            ->join('ec.event', 'e');\n    if (null !== $sortField && $sortField != 'event')\n    {\n        $queryBuilder->orderBy('ec.'.$sortField, $sortDirection);\n    }\n    elseif (null !== $sortField && $sortField == 'event')\n    {\n        $queryBuilder->orderBy('e.name', $sortDirection);\n    }\n\n    return $queryBuilder;\n}\n\n```\n. ",
    "emr": "@bertinl0609 \n```\nyour code\n```\n\n(between ``` , ```)\nor\n```\nyour code\n\n```\nor\n```twig\n{# your code #}\n```. @bertinl0609\n\n```\nyour code\n```\n\n(between ``` , ```)\nor\n```\nyour code\n\n```\nor\n```twig\n{# your code #}\n```.\n",
    "aiglesias": "thanks a lot.\n. thanks a lot.\n. ",
    "rouflak": "Hi,\n@vrobic, I'd firstly recommand you to change your prototype name in your form. Even with a tricky update of that part of JS code, there will remain some conflict.\nPlease try this and tell us if it's getting better. \nI've updated this part of JS code to avoid to have the same key at the same level. I'll try to find a solution, but if this is not a recursive form, you will mostly find the solution by changing the prototype name in your form.. ",
    "dayofr": "order_by feels a lot like SQL.\nsort feels more natural.\n. order_by feels a lot like SQL.\nsort feels more natural.\n. ",
    "kbardi": "@javiereguiluz I have an entity for the Excel, so first I upload the file with some relationships and fields I have to use on import action. So first I use edit/new views to upload the file. After that I have on the list view an action called import products (The method imports thousands of products with many relationships). The import is a completely custom action, and there is where I need the loading action. Thanks!!\n. Thanks, I've resolved creating a new form. It's a great Bundle. Thanks for your help @javiereguiluz .. ",
    "michau85": "Thank you for responses. \nIn 'book' entity I wrote:\npublic function __toString() {\n                return $this->getCategory();\n      }\nIn 'category' I wrote: \npublic function __toString() {\n                return $this->getBooks();\n      }\nUnfortunately it is not working. Can you help me with correct notation?\nCurrent error message is: 'Catchable Fatal Error: Method SklepBundle\\Entity\\Kategoria::__toString() must return a string value '\n. It's working! Thank you very much for help. :)\n. ",
    "nnmer": "the idea was to merge at least root levels of menu. The need of that is when i split the configuration into different files (bundles) so later can easily enable/disable bundles without each time changing the easyadmin configuration. yes, but, what if i load the bundles dynamically?  The app for one instance can have X Y Z menus, another instance just Y Z. How i get rid of the X then ?. ",
    "andrewrutter": "Thanks, this helped to steer me in the right direction\n. ",
    "csu6": "I read thse issues, but i have all getters, setters.\nMy code is:\n`    /\n     * @var Collection\n     * @ORM\\OneToMany(targetEntity=\"Options\", mappedBy=\"provider\")\n     * @ORM\\OrderBy({\"title\" = \"DESC\"})\n     /\n    protected $options; // Un prestaire a plusieurs options\n    /\n     * Add a new option to the provider.\n     \n     * @param Options $option\n     \n     * @return Providers\n     /\n    public function addOption(Options $option)\n    {\n        $this->options[] = $option;\n        $option->setProvider($this);\nreturn $this;\n}\n`\nAnd\n`    /*\n     * @ORM\\ManyToOne(targetEntity=\"Providers\", inversedBy=\"options\")\n     * @ORM\\JoinColumn(name=\"provider_id\", referencedColumnName=\"id\", nullable=true)\n     /\n    protected $provider; // One option has only one provider\n```\n/\n * Set provider.\n \n * @param Providers $provider\n \n * @return Options\n */\npublic function setProvider(Providers $provider = null)\n{\n    $this->provider = $provider;\nreturn $this;\n\n}`\n```\nAnd config file:\n`        Options:\n            label: Options\n            class: MyTotoBundle\\Entity\\Options\n            list:\n                fields: ['id', 'title','type', 'provider']\nProviders:\n        label: Providers\n        class: MyTotoBundle\\Entity\\Providers\n        list:\n            fields: ['id', 'name', 'providerType']\n        form:\n            fields:\n                - { type: 'group', css_class: 'col-sm-12', label: 'Add many options' }\n                - { property: 'options' }\n`\nSo, when i am on Options page, i can set the unique provider for the option. But when i am on a provider page, (i see options added by Options page) i can not add or delete these options.It always appears....\n. I read thse issues, but i have all getters, setters.\nMy code is:\n`    /\n     * @var Collection\n     * @ORM\\OneToMany(targetEntity=\"Options\", mappedBy=\"provider\")\n     * @ORM\\OrderBy({\"title\" = \"DESC\"})\n     /\n    protected $options; // Un prestaire a plusieurs options\n    /\n     * Add a new option to the provider.\n     \n     * @param Options $option\n     \n     * @return Providers\n     /\n    public function addOption(Options $option)\n    {\n        $this->options[] = $option;\n        $option->setProvider($this);\nreturn $this;\n}\n`\nAnd\n`    /*\n     * @ORM\\ManyToOne(targetEntity=\"Providers\", inversedBy=\"options\")\n     * @ORM\\JoinColumn(name=\"provider_id\", referencedColumnName=\"id\", nullable=true)\n     /\n    protected $provider; // One option has only one provider\n```\n/\n * Set provider.\n \n * @param Providers $provider\n \n * @return Options\n */\npublic function setProvider(Providers $provider = null)\n{\n    $this->provider = $provider;\nreturn $this;\n\n}`\n```\nAnd config file:\n`        Options:\n            label: Options\n            class: MyTotoBundle\\Entity\\Options\n            list:\n                fields: ['id', 'title','type', 'provider']\nProviders:\n        label: Providers\n        class: MyTotoBundle\\Entity\\Providers\n        list:\n            fields: ['id', 'name', 'providerType']\n        form:\n            fields:\n                - { type: 'group', css_class: 'col-sm-12', label: 'Add many options' }\n                - { property: 'options' }\n`\nSo, when i am on Options page, i can set the unique provider for the option. But when i am on a provider page, (i see options added by Options page) i can not add or delete these options.It always appears....\n. Oh \ud83d\udc4d  great!! It's that, so for me i do like this to have the options list in provider page \nProviders:\n    form:\n        fields:\n            - { property: 'options', type_options: { by_reference: false } }\nThanks you very much :)\n. Oh \ud83d\udc4d  great!! It's that, so for me i do like this to have the options list in provider page \nProviders:\n    form:\n        fields:\n            - { property: 'options', type_options: { by_reference: false } }\nThanks you very much :)\n. ",
    "taofather": "Hello,\nSorry for the slow feedback, I had to leave this. Thanks for the answers and the #1376 research.\nI solved the stuff removing the line in my custom template:\n{% form_theme form with easyadmin_config('design.form_theme') %}\nThe point was just to keep EasyAdmin form styles when using a custom form set up from a Controller. The strange thing is that the entity (User) is mapped in the easyadmin.yml. So I guess the only thing to discuss here is if there's any way to \"hack\" the EasyAdmin vars container in some way, in order to set missing easyadmin config dimensions, or a more acceptable way to use EasyAdmin form styles.\n. ",
    "Rickobotics": "Same error:\nVariable \"easyadmin\" does not exist.\nin vendor\\easycorp\\easyadmin-bundle\\src\\Resources\\views\\form\\bootstrap_3_layout.html.twig (line 255) \nWith easyAdminBundle v1.17.13\nWhen add a ChoiceType only with:\n'expanded' => true,\n'multiple' => false,\nin a formType\n'expanded' => false,\n'multiple' => false,\n[OK]\n. same error when I try to add an Entity with created_at:\nyml\n    entities:\n        QPre:\n            class: AppBundle\\Entity\\QPre\n            list:\n                fields:\n                  - id\n                  - created_at\nbut ... it's working with created_at -> createdAt:\nyml\n    entities:\n        QPre:\n            class: AppBundle\\Entity\\QPre\n            list:\n                fields:\n                  - id\n                  - createdAt\nMaybe this can help .... same error when I try to add an Entity with created_at:\nyml\n    entities:\n        QPre:\n            class: AppBundle\\Entity\\QPre\n            list:\n                fields:\n                  - id\n                  - created_at\nbut ... it's working with created_at -> createdAt:\nyml\n    entities:\n        QPre:\n            class: AppBundle\\Entity\\QPre\n            list:\n                fields:\n                  - id\n                  - createdAt\nMaybe this can help .... badly referenced in priority #3 ...\nhttps://github.com/EasyCorp/EasyAdminBundle/projects/1\nIt is today the main limitation of the EasyAdminBundle, so much roles are used !!\nCould not we move in priority #1 even simplifying at first?. see #2323, #2229 and mainly #807\nMayby this too: https://leanpub.com/practicalsymfony3/read#leanpub-auto-adding-simple-access-control-to-easyadminbundle. Some news and details ...\nI was with SF 3.4, PHP 5.5.12 and easy_admin 1.17.13\nBut ... It's working on easy_admin 1.17.12 !\nit seems that the problem comes from the whole template Overriding !\nSame pb with the menu.html.twig Overriding in 1.17.13 and working on 1.17.12 !. hum ... it seems to work on Linux systems but not on Windows for 1.17.13 .... I find it !\nThe pb comes from commit [1d58963] !\nDoesn't work on Windows 7 with php 5.5.12 with Wamp server.. ok, already done in #2262, sorry !. Priority 2:\nhttps://github.com/EasyCorp/EasyAdminBundle/projects/1. Can we take this opportunity to ask where is the progress of this bundle? Do you (javier & co.) continue to develop it? When will the next features arrive? What about a v2 and the compatibility with symfony 3 and php 5? Sorry for the questions but some features are pending for 2 years now ...\nThe solutions exist and are easy to implement but currently require a lot of code overhead whereas a native implementation would not take much time.\nThx ;). Why for example do not merge the EA extension bundle?.     entities:\n        User:\n            form:\n                fields:\n                  - { property: info, label: 'Comment' , type_options: { attr: {'placeholder': 'my comment placeholder' } } }. I confirm it's working for me on input text with v.1.17.13.. ",
    "rmatil": "Hey @javiereguiluz \nSince you added the feature label, I assume there is no possibility to do it as of now. Is that correct? \nIs there any interest for a PR which would implement this feature? . Yep, thanks. However, this approach raised an exception: See #1405\nBut maybe, there could be a more straightforward way in order to modify such properties?. Yep, thanks. However, this approach raised an exception: See #1405\nBut maybe, there could be a more straightforward way in order to modify such properties?. @yceruto  Thanks for your reply. Now I tried as you proposed using\nyaml\n- { property: 'purposes', type_options: { query_builder: ['Bundle\\Repository\\EasyAdmin\\SomeRepo', 'getAccessible'] } }\nUnfortunately, the error stays the same:\nExpected argument of type \"Doctrine\\ORM\\QueryBuilder or \\Closure\", \"array\" given\nIn the mean time, I got the approach working by using a Form Type Extension on the EntityType:\n```php\nuse Doctrine\\ORM\\EntityRepository;\nuse Symfony\\Component\\Form\\AbstractTypeExtension;\nuse Symfony\\Component\\OptionsResolver\\Options;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\nclass EntityTypeExtension extends AbstractTypeExtension {\npublic function setDefaultOptions(OptionsResolverInterface $resolver) {\n\n    // Get some information you want to filter\n\n    $resolver->setNormalizers(array(\n        'query_builder' => function (Options $options, $configs) {\n            // class which is currently affected by the form\n            $class = $options->get('class');\n\n            return function (EntityRepository $er) use ($class) {\n                // return modified query builder\n                return $er\n                    ->createQueryBuilder('e')\n                    // ->... \n                ;\n            };\n        }\n    ));\n}\n\n/**\n * Returns the name of the type being extended.\n *\n * @return string The name of the type being extended\n */\npublic function getExtendedType() {\n    return 'entity';\n}\n\n}\n```\nAnd then registering this class as a form type extension in services.xml:\n```xml\n\n\n\n```\nStill, I would be happy for any further indicators what I'm doing wrong with the initially stated approach. @yceruto  Thanks for your reply. Now I tried as you proposed using\nyaml\n- { property: 'purposes', type_options: { query_builder: ['Bundle\\Repository\\EasyAdmin\\SomeRepo', 'getAccessible'] } }\nUnfortunately, the error stays the same:\nExpected argument of type \"Doctrine\\ORM\\QueryBuilder or \\Closure\", \"array\" given\nIn the mean time, I got the approach working by using a Form Type Extension on the EntityType:\n```php\nuse Doctrine\\ORM\\EntityRepository;\nuse Symfony\\Component\\Form\\AbstractTypeExtension;\nuse Symfony\\Component\\OptionsResolver\\Options;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolverInterface;\nclass EntityTypeExtension extends AbstractTypeExtension {\npublic function setDefaultOptions(OptionsResolverInterface $resolver) {\n\n    // Get some information you want to filter\n\n    $resolver->setNormalizers(array(\n        'query_builder' => function (Options $options, $configs) {\n            // class which is currently affected by the form\n            $class = $options->get('class');\n\n            return function (EntityRepository $er) use ($class) {\n                // return modified query builder\n                return $er\n                    ->createQueryBuilder('e')\n                    // ->... \n                ;\n            };\n        }\n    ));\n}\n\n/**\n * Returns the name of the type being extended.\n *\n * @return string The name of the type being extended\n */\npublic function getExtendedType() {\n    return 'entity';\n}\n\n}\n```\nAnd then registering this class as a form type extension in services.xml:\n```xml\n\n\n\n```\nStill, I would be happy for any further indicators what I'm doing wrong with the initially stated approach. ",
    "haithem-rihane": "It Work ;) i added indexAction and i correct route Annotation to /backend\nThx A lot\n. It Work ;) i added indexAction and i correct route Annotation to /backend\nThx A lot\n. It Work ;) i added indexAction and i correct route Annotation to /backend\nThx A lot\n. It didn't work when i just added the indexAction so i changed the route annotation : \nphp\n     /**\n     * @Route(\"/backend\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request) {\n        return parent::indexAction($request);\n    }\n. It didn't work when i just added the indexAction so i changed the route annotation : \nphp\n     /**\n     * @Route(\"/backend\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request) {\n        return parent::indexAction($request);\n    }\n. It didn't work when i just added the indexAction so i changed the route annotation : \nphp\n     /**\n     * @Route(\"/backend\", name=\"easyadmin\")\n     */\n    public function indexAction(Request $request) {\n        return parent::indexAction($request);\n    }\n. I cant't get it ?! Is there a way to override form ?. I cant't get it ?! Is there a way to override form ?. @javiereguiluz thx for the replay. ",
    "yonedev": "Wonderful! disabled_actions works.\nThank you!\n. Wonderful! disabled_actions works.\nThank you!\n. Hi, I import bootstrap-grid.css on easy_admin.yml for I use grid responsive :). ",
    "zsimaiof": "I am sorry . \nI just saw that : \nEntities with composite keys or using inheritance are not supported\nBUT will there be any support for composite keys?\nFor the time being i think i will be able to manage data integrity with UniqueConstraints in my Entity but composite keys will be an important issue for the future.. \n. I am sorry . \nI just saw that : \nEntities with composite keys or using inheritance are not supported\nBUT will there be any support for composite keys?\nFor the time being i think i will be able to manage data integrity with UniqueConstraints in my Entity but composite keys will be an important issue for the future.. \n. Thanks Javier. \nI have two questions : \n1) How should i call the overriden createListQueryBuilder function from inside my customeditAction() function (see above for how the function is written).\n2) Is there another way to just pass the entities from the DQL result to my custom list.html.twig, override some blocks but still use pagination and sorting? \nFor example : \n```php\n$articles= $this->em->getRepository('MyRecordsBundle:Article')->getArticlesWithTitle();\nreturn $this->render('MyRecordsBundle:Default:list.html.twig', array(\n'id' => $id,\n'fields'=>   $fields ,\n\n'articles' => $articles,\n));\n\n```\nbut modify the paginator inside the list.html.twig to use the $articles.\nI think it's more transparent and configurable this way.\nThanks again\n. Thanks Javier. \nI have two questions : \n1) How should i call the overriden createListQueryBuilder function from inside my customeditAction() function (see above for how the function is written).\n2) Is there another way to just pass the entities from the DQL result to my custom list.html.twig, override some blocks but still use pagination and sorting? \nFor example : \n```php\n$articles= $this->em->getRepository('MyRecordsBundle:Article')->getArticlesWithTitle();\nreturn $this->render('MyRecordsBundle:Default:list.html.twig', array(\n'id' => $id,\n'fields'=>   $fields ,\n\n'articles' => $articles,\n));\n\n```\nbut modify the paginator inside the list.html.twig to use the $articles.\nI think it's more transparent and configurable this way.\nThanks again\n. I undestood this, but suppose that in the future i want a very custom view.\nLet's say that i want  to customize the list view  extensively . \nI must override the  $paginator = $this->findAll($this->entity['class'], $this->request->query->get('page', 1) ?\nIs this the only way? \n. Also please tell me how to call the overriden function from inside my new customeditAction() function and end up in the list view.  . ",
    "maldoinc": "I did try that but I'm not sure that we can use the OrderBy annotation in that way. Let me give you an example.\nSay we have Customers, Product and Sales which has relationships with both other entities, on the Sales list view we would like to sort by customer name or product name for instance. Is that doable with OrderBy because i've tried with no success.\n. I did try that but I'm not sure that we can use the OrderBy annotation in that way. Let me give you an example.\nSay we have Customers, Product and Sales which has relationships with both other entities, on the Sales list view we would like to sort by customer name or product name for instance. Is that doable with OrderBy because i've tried with no success.\n. Resolved by author on #1392. Besides me not getting this to work I think the join should be left to allow for nullable relationships.\nAlso this should be on per-column basis as an entity might have multiple relationships to be sorted. All in all I think the configuration at #1387 is fine (but I might be biased) and the issue at hand is whether to have the user type the related entity or use Doctrine Annotation Reader to do the job instead.\n. So I went ahead and tested this and sure enough it worked. However if an entity has multiple relationships how would we sort these?\nSay a sale has a customer and a sales agent just for the sake of it. How would we tell easyadmin that when a sort by customer is requested to sort by customer.name and when a sort by agent is requested to sort by agent.name?\nAlso I cannot get the header column to sort alphabetically still, after the form is initially opened and correctly sorted from the menu, clicking the header removes the alphabetical sort and reverts it sort by Id.\nAm I doing something wrong or is this intended behaviour?. ",
    "TheGuy68": "as you can see from this log the token is null for some reason in the Resolved options: \n```\nErrors\nMessage Origin  Cause\nThe CSRF token is invalid. Please try to resubmit the form. category    Unknown.\nDefault Data\nProperty    Value\nModel Format    same as normalized format\nNormalized Format   Object(AppBundle\\Entity\\Category)\nView Format same as normalized format\nSubmitted Data\nProperty    Value\nView Format same as normalized format\nNormalized Format   Object(AppBundle\\Entity\\Category)\nModel Format    same as normalized format\nPassed Options\nOption  Passed Value    Resolved Value\ndata    Object(AppBundle\\Entity\\Category)   same as passed value\nentity  Category    same as passed value\nview    new same as passed value\nResolved Options\nOption  Value\naction\nallow_extra_fields  true\nattr    [id => new-category-form]\nauto_initialize true\nblock_name  null\nby_reference    true\ncompound    true\nconstraints []\ncsrf_field_name _token\ncsrf_message    The CSRF token is invalid. Please try to resubmit the form.\ncsrf_protection true\ncsrf_token_id   null\ncsrf_token_manager  Object(Symfony\\Component\\Security\\Csrf\\CsrfTokenManager)\ndata    Object(AppBundle\\Entity\\Category)\ndata_class  AppBundle\\Entity\\Category\ndisabled    false\nempty_data  Object(Closure)\nentity  Category\nerror_bubbling  true\nerror_mapping   []\n```\n. as you can see from this log the token is null for some reason in the Resolved options: \n```\nErrors\nMessage Origin  Cause\nThe CSRF token is invalid. Please try to resubmit the form. category    Unknown.\nDefault Data\nProperty    Value\nModel Format    same as normalized format\nNormalized Format   Object(AppBundle\\Entity\\Category)\nView Format same as normalized format\nSubmitted Data\nProperty    Value\nView Format same as normalized format\nNormalized Format   Object(AppBundle\\Entity\\Category)\nModel Format    same as normalized format\nPassed Options\nOption  Passed Value    Resolved Value\ndata    Object(AppBundle\\Entity\\Category)   same as passed value\nentity  Category    same as passed value\nview    new same as passed value\nResolved Options\nOption  Value\naction\nallow_extra_fields  true\nattr    [id => new-category-form]\nauto_initialize true\nblock_name  null\nby_reference    true\ncompound    true\nconstraints []\ncsrf_field_name _token\ncsrf_message    The CSRF token is invalid. Please try to resubmit the form.\ncsrf_protection true\ncsrf_token_id   null\ncsrf_token_manager  Object(Symfony\\Component\\Security\\Csrf\\CsrfTokenManager)\ndata    Object(AppBundle\\Entity\\Category)\ndata_class  AppBundle\\Entity\\Category\ndisabled    false\nempty_data  Object(Closure)\nentity  Category\nerror_bubbling  true\nerror_mapping   []\n```\n. @javiereguiluz: Thanks for your reply. Yes everything is totally out of the box. \nUsing \"symfony new project_name\" and then just installing the dependencies as instructed by your git hub and then i use some Entities generated with the relative symfony commands etc and then navigate to app_dev.php/admin and i get the error above. but as soon as i change to app.php/admin/?whatever-args then it works like a charm. Ill try and get a copy of the sample project uploaded to a public link on my dropbox then post it to you.\n. @xabbuh: I'm really not too sure. I'm very new to symfony. Everything is stock and out of the box as I described in the comments above. \nI'm running this symfony on Ubuntu Desktop 16.04 if that has any significance.\n. blog.zip\n. ",
    "ThomasBerends": "I'm closing this issue as I've found that this was within my own code and not EasyAdminBundle's code.. ",
    "robfrawley": "@fabpot Wonderful; thanks!. @fabpot I switched my composer to \"symfony/twig-bridge\": \"dev-master\" and the problem seems to persist. Is the fix not yet live?. ",
    "adidoes": "Hey, have you found a solution for this?. ",
    "srosset81": "@CruzyCruz Unfortunately using the $formBuilder->add() method resets the whole field and you lose all easyadmin attributes (the field gets displayed at the bottom as a simple dropdown menu instead of the select2 field). I tried to edit the field options instead of overwriting them, but it doesn't work either...\n```php\n    public function createEntityFormBuilder($entity, $view)\n    {\n        $formBuilder = parent::createEntityFormBuilder($entity, $view);\n    $projectID = (null !== $entity->getId()) ? $entity->getId() : 0;\n\n    $options = $formBuilder->get(\"impacts\")->getOptions();\n    $options['query_builder'] = function (EntityRepository $repo) use ($projectID) {\n        return $repo->createQueryBuilder('entity')\n            ->where('entity.project = :projectID')\n            ->setParameter('projectID', $projectID);\n    };\n    $formBuilder->add('impacts', EntityType::class, $options);\n\n    return $formBuilder;\n}\n\n```\nIf anyone managed to have this working correctly, let us know!. Thanks @CruzyCruz\nActually the \"select2\" data-widget is being passed down by my code and it is working, I don't know why I had issues with that.\nAs for the field being at the bottom (below the save button), I suspect this is because I use EasyAdmin's \"group\" option. By removing and adding back the field, it messes up with the groups organization. Unfortunately, there is no way in Symfony to directly edit the options of the FormBuilder (there is no setOptions() function). So I'm kind of stuck.... @CruzyCruz \n\nI am surprised because it was not the case for me. But I will try to remove this from my code to see if it work.\n\nIt works for me because I first copy all the options, and this includes the attr field ($options = $formBuilder->get(\"impacts\")->getOptions();)\n\nFor the field displaying at the bottom of the page, let us know if you find a solution. Strange because it works correctly for me. Can you show your entity configuration ?\n\nHere's the form configuration for this entity:\nyml\neasy_admin:\n    entities:\n        Project:\n            class: AppBundle\\Entity\\Project\\Project\n            controller: AppBundle\\Entity\\Project\\ProjectAdmin\n            label: 'Projets'\n            list:\n                fields:\n                    ...\n            show:\n                fields:\n                    ...\n            form: \n                fields:\n                    - { type: 'group', css_class: 'col-sm-8', label: 'Projet', icon: 'bullhorn' }\n                    - name\n                    - { property: 'backgroundFile', type: 'vich_image' }\n                    - { property: 'currentFunding', type: 'money', type_options: {scale: 0} }\n                    - { property: 'targetFunding', type: 'money', type_options: {scale: 0} }\n                    - impacts   # <-- this is the field displayed at the bottom\n                    - { property: 'story', type: 'ckeditor' }\n                    - { type: 'group', css_class: 'col-sm-4', label: 'Relations', icon: 'link' }\n                    - organization\n                    - { property: 'causes', type_options: { by_reference: false } }\n                    - { type: 'group', css_class: 'col-sm-4', label: 'G\u00e9n\u00e9ral', icon: 'folder-o' }\n                    - createdAt\n                    - visible. List filtering is also not working for me\nyml\neasy_admin:\n    entities:\n        Cause:\n            class: AppBundle\\Entity\\Cause\\Cause\n            label: 'Causes'\n            list:\n                dql_filter: \"entity.visible = 0\"\n                ...\n```php\nclass Cause\n{\n    ...\n/**\n * @ORM\\Column(type=\"boolean\")\n */\nprotected $visible = true;\n\n```\nLooking at the Doctrine query in the Symfony profiler, I see it does not take into account the filtering:\nsql\nSELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM cause c0_ ORDER BY c0_.id DESC LIMIT 30 OFFSET 0. Actually this is because I used v1.15.3 and the dql_filter parameter was introduced in v1.16 \nBy updating to the latest version, it works fine! Maybe it was the same problem for @bertinl0609 ?\nThanks for this great package, I really love easy-admin!. ",
    "frazelli": "@anybug how can I pass the logged user to the static method?. ",
    "thlbaut": "Thanks @yceruto and @anybug, you save my day \ud83d\ude00 . Thanks @yceruto and @anybug, you save my day \ud83d\ude00 . Thank you \ud83d\udc4d . ",
    "bertinl0609": ".thanks srosset81, effectively i was using the 1.15.3...\nI am updating now... ",
    "sergiu-popa": "\n. \n. Any ideas?. Any ideas?. Select2 has a feature called tagging which allows creating new tags even if they are not in the suggestion list. However, Symfony throws an error because they are invalid: ConstraintViolation (This value is not valid). Is there any way to catch it and persist the new tag entities?. For anyone interested in doing the same, here's my solution:\n1) Create in your AdminController (extending from EasyAdminBundle Controller) the method which overrides the FormBuilder creation for the specific Entity:\n```php\npublic function createArticleEntityFormBuilder(Article $entity, $view)\n{\n    $em = $this->getDoctrine()->getManager();\n$formBuilder = parent::createEntityFormBuilder($entity, $view);\n$formBuilder->AddEventSubscriber(new TagsFieldListener($em));\n\nreturn $formBuilder;\n\n}\n```\nThe point of this is to add your own EventSubscriber (in my case, TagsFieldListener).\n2) Create the subscriber which will actually add the news tags in the database. This subscriber will listen to the Form Event::PRE_SUBMIT.\n```php\n<?php\nnamespace Respiro\\AppBundle\\EventListener;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Respiro\\AppBundle\\Entity\\Tag;\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\nuse Symfony\\Component\\Form\\FormEvent;\nuse Symfony\\Component\\Form\\FormEvents;\nclass TagsFieldListener implements EventSubscriberInterface\n{\n    /*\n     * @var EntityManagerInterface\n     /\n    private $em;\npublic function __construct(EntityManagerInterface $em)\n{\n\n    $this->em = $em;\n}\n\npublic static function getSubscribedEvents()\n{\n    return array(\n        FormEvents::PRE_SUBMIT   => 'onPreSubmit',\n    );\n}\n\npublic function onPreSubmit(FormEvent $event)\n{\n    $data = $event->getData();\n\n    foreach($data['tags'] as $key => $tag) {\n        if(!is_numeric($tag)) {\n            $newTag = new Tag();\n            $newTag->setName($tag);\n\n            $this->em->persist($newTag);\n            $this->em->flush();\n\n            $data['tags'][$key] = $newTag->getId();\n        }\n    }\n\n    $event->setData($data);\n}\n\n}\nThis is how the the data for the tags field looks before:php\n$data['tags'] = [\n    0 => \"3\" // this means it has a tag with ID #3 (already transformed from name to Tag Entity)\n    1 => \"new tag\" // this means the transformer failed and it will trigger a ConstraintException\n];\nAfter the subscriber is called:php\n$data['tags'] = [\n    0 => \"3\" \n    1 => 266 // the new tag has been added to the database and its corresponding #ID has been set\n];\n3) In your Easy Admin configuration, set a new JS file:yml\neasy_admin:\n    design:\n        assets:\n            js:\n                 - 'js/custom_backend.js'\nAnd inside web/js/custom_backend.js:js\njQuery(function($) {\n    $('#article_tags').select2({\n        theme: 'bootstrap',\n        tags: true\n    });\n});\n```\nThis will tell select2 to enable the tagging feature for the #article_tags field and let the users create new tags.\nCheers!\n. ",
    "ddereszewski": "To resolve this problem you need to submit the form in the controller, as it's not really submitted via Request. I did it by overwriting EasyAdmin Controller and changing deleteAction as below\nin deleteAction change \n```php\n        $form->handleRequest($this->request);\n    if ($form->isValid()) {\n\n`\ntophp\n        $form->submit($this->request->get($form->getName()));\n    if ($form->isValid()) {\n\n```. I see similar behavior on PostgreSQL with version v1.17.18\nyml\nsearch:\n    fields: ['user.id']\nResults in PDO Exception error as it tries to applied function LOWER() on integer field\n```\nAn exception has been thrown during the rendering of a template (\"An exception occurred while executing 'SELECT count(DISTINCT p0_.id) AS sclr_0 FROM push_token p0_ LEFT JOIN fos_user f1_ ON p0_.user_id = f1_.id WHERE LOWER(f1_.id) LIKE ? OR LOWER(f1_.id) IN (?)' with params [\"%2%\", \"2\"]:\nSQLSTATE[42883]: Undefined function: 7 ERROR: function lower(integer) does not exist\nLINE 1: ...T JOIN fos_user f1_ ON p0_.user_id = f1_.id WHERE LOWER(f1_....\n^\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.\").\n```. ",
    "voronkovich": "@alexcandy91, You shouldn't use the JoinColumn annotation in the inverse side (Country#site).. @alexcandy91, You shouldn't use the JoinColumn annotation in the inverse side (Country#site).. ",
    "TheLuckyOne": "Same question. I had tried to use cascade={\"persist\"} with arrayCollection and add/remove methods. ",
    "dannyvw": "See the original file, _translation_domain is passed as parameter . ",
    "ofeugret": "OK, the solution is:\ntype: 'birthday'. ",
    "B-GH": "@javiereguiluz  Yes, you're right, i have already added the option to enable / disable RTL\nBy default, RTL direction is disabled to activate just turn rtl to true in config.yml:\n```\neasy_admin:\n    design:\n        rtl: true\n```. @javiereguiluz  Yes, you're right, i have already added the option to enable / disable RTL\nBy default, RTL direction is disabled to activate just turn rtl to true in config.yml:\n```\neasy_admin:\n    design:\n        rtl: true\n```. Okay (y). Okay (y). ",
    "arendvw": "Hi Javier,\nAh, I completely forgot about this. Interesting how google singles this out.\nI've removed the documentation and created a link to the main symfony page, so the google crowd will still gets redirected in the right direction in the coming days, and google should also start pointing to the correct documentation (I hope). \nI thought this is a bit friendlier solution - but I can still stonewall all traffic alltogether if needed.. Hi Javier,\nAh, I completely forgot about this. Interesting how google singles this out.\nI've removed the documentation and created a link to the main symfony page, so the google crowd will still gets redirected in the right direction in the coming days, and google should also start pointing to the correct documentation (I hope). \nI thought this is a bit friendlier solution - but I can still stonewall all traffic alltogether if needed.. ",
    "7system7": "@maxenceboucas Same here. Impossible to solve this problem in this Bundle... The problem is that in the \"add..\" method the parameter's type is not the expected type.\nUPDATE\nI found the solution... It was trivial but I did not see that; in the Type class use configureOptions method instead of setDefaultOptions.. @maxenceboucas Same here. Impossible to solve this problem in this Bundle... The problem is that in the \"add..\" method the parameter's type is not the expected type.\nUPDATE\nI found the solution... It was trivial but I did not see that; in the Type class use configureOptions method instead of setDefaultOptions.. ",
    "egraumann": "was an issue on our project's side. Hi Javier,\nan outputwalker is a tree walker and you can find some information about it here: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/cookbook/dql-custom-walkers.html:\n\nThere are two types of custom tree walkers that you can hook into the DQL parser:\n\nAn output walker. This one actually generates the SQL, and there is only ever one of them. We implemented the default SqlWalker implementation for it.\nA tree walker. There can be many tree walkers, they cannot generate the sql, however they can modify the AST before its rendered to sql.\n\n\nSince I don't have large enough data sets to investigate performance and never spent time to look at the actual queries so far (would be good to do it maybe ;)), I was brave enough and asked the guys from pagerfanta about this option:\nhttps://github.com/whiteoctober/Pagerfanta/issues/220 and this is what they replied:\n\nSome cases simply cannot return the right result when forbidding Doctrine to use output walkers. And GROUP BY is such a case as putting the COUNT directly in the select would return the count in each group, not the number of groups.\nIf you don't understand how the Doctrine ORM Paginator class works, the best is to avoid configuring it explicitly. The default value for useOutPutWalkers is null, which lets Doctrine guess the strategy it will use.\nAnd while the selected strategy may not be the most efficient for all queries as it will tend to use the output walker more often than strictly necessary, it is meant to give you the right result.\n\nAnd now here is the big story behind all that. Apparently in the past, the outputwalker option was set to true by default in doctrine pagination, and people started to experience performance issues with very large data sets. One example is here: https://github.com/doctrine/doctrine2/issues/4073. I assume this is the reason why an option to use or not to use it was provided. And for me personally I want to highlight: I have no experience with large datasets and the option null, if you think it is too risky, then leave it set to false. It's just then people that want to use group by or composite keys need to create their own paginator. I leave it up to you to decide, I was just curious if you set it to false by intension. \n. ",
    "Alex-Design": "@javiereguiluz - Hi, thanks for responding, and apologies for the delay in my own response.\nI've just checked the roles - they're the same on local and live. The access_control in the security.yml is also exactly the same. The routing is also the same. Is there some way I can trace the exact path in the code that is taken when the url I desire is requested, so I can find out where the issue could possibly be, maybe via a backtrace?\nThanks again.. @javiereguiluz - Hi, thanks for responding, and apologies for the delay in my own response.\nI've just checked the roles - they're the same on local and live. The access_control in the security.yml is also exactly the same. The routing is also the same. Is there some way I can trace the exact path in the code that is taken when the url I desire is requested, so I can find out where the issue could possibly be, maybe via a backtrace?\nThanks again.. Unfortunately, I was never able to find the cause. In the end, I changed the site structure anyway so I did a full reinstall (git clone, etc) on a new server and that fixed the issue itself. . ",
    "JulienWszolek": "We just move the folder web/bundles/easyadmin to web/easyadmin and it works!\nWe don't know why this problem appears, I check in other forum and the problem maybe coming from my host (OVH).. ",
    "Francesco-Rizzi": "I had the same issue using this bundle on:\nmac os sierra + ubuntu 14.04 on vagrant + symfony 3\nI resolved using:\nphp bin/console assets:install\ninstead\nphp bin/console assets:install --symlink\nI thinks it's a problem about following symlinks, maybe is disable in same config. ",
    "thenetexperts": "Thank you for fixing it so quickly! I should have stumbled over a duplicate  node of course ;-)\nJust checked out 1.16.5 and i confirm it is fixed!. ",
    "Uplink03": "I'm thinking @ziobudda wants the following, which I also want: an ability to have non-entity Admins.\nThis could work if one could define an \"entity\" without the class parameter. To not confuse matters too much, maybe such an entity shouldn't have the usual actions (list, edit, delete, ...), but instead have a block action and its sole purpose would be to embed a twig template or a controller in the admin layout.\nHow such a configuration might look like:\n\nconfig.yml\neasy_admin:\n    entities:\n        BlockEntity1:\n            block:\n                controller: 'AppBundle:Block:index'\n                params: { param_name: 'param_value' }\n        BlockEntity2:\n            block:\n                template: '@AppBundle/Block/index.html.twig'\n                params: { param_name: 'param_value' }\n\nAlternatively, you could have a new blocks key to keep this feature apart from entities.\n\nEasyAdmin Twig template would contain this sort of code:\n{{ render(controller(block_controller, block_parameters)) }}\n{{ include block_template with block_parameters }}\n. I'm thinking @ziobudda wants the following, which I also want: an ability to have non-entity Admins.\n\nThis could work if one could define an \"entity\" without the class parameter. To not confuse matters too much, maybe such an entity shouldn't have the usual actions (list, edit, delete, ...), but instead have a block action and its sole purpose would be to embed a twig template or a controller in the admin layout.\nHow such a configuration might look like:\n\nconfig.yml\neasy_admin:\n    entities:\n        BlockEntity1:\n            block:\n                controller: 'AppBundle:Block:index'\n                params: { param_name: 'param_value' }\n        BlockEntity2:\n            block:\n                template: '@AppBundle/Block/index.html.twig'\n                params: { param_name: 'param_value' }\n\nAlternatively, you could have a new blocks key to keep this feature apart from entities.\n\nEasyAdmin Twig template would contain this sort of code:\n{{ render(controller(block_controller, block_parameters)) }}\n{{ include block_template with block_parameters }}\n. A solution that doesn't require any changes to EasyAdminBundle:\n\nMake your Twig template like this:\n```twig\n{% extends \"@EasyAdmin/default/layout.html.twig\" %}\n{% block main %}\nYour custom content that you want to see in EasyAdminBundle context.\n{% endblock %}\n```. A solution that doesn't require any changes to EasyAdminBundle:\nMake your Twig template like this:\n```twig\n{% extends \"@EasyAdmin/default/layout.html.twig\" %}\n{% block main %}\nYour custom content that you want to see in EasyAdminBundle context.\n{% endblock %}\n```. I just triggered this bug like this:\neasy_admin:\n    entities:\n        myEntity:\n            list:\n                - { property: image.path, type: image, base_path: '%some_base_path%' }\nNotice the property name. It refers to a related entity's property, not myEntity's.\nI was using the workaround suggested by @sryabov and was debugging to see why the base_path parameter wasn't being used. I noticed that EasyAdminTwigExtension::renderImageField wasn't called at all. On a hunch I looked at EasyAdminTwigExtension::renderVirtualField and guess what: that one is called when the property is defined like that (i.e. property of related entity) and it doesn't set uuid.\nAny ideas on how to get renderImageField to be called in this case?. I just triggered this bug like this:\neasy_admin:\n    entities:\n        myEntity:\n            list:\n                - { property: image.path, type: image, base_path: '%some_base_path%' }\nNotice the property name. It refers to a related entity's property, not myEntity's.\nI was using the workaround suggested by @sryabov and was debugging to see why the base_path parameter wasn't being used. I noticed that EasyAdminTwigExtension::renderImageField wasn't called at all. On a hunch I looked at EasyAdminTwigExtension::renderVirtualField and guess what: that one is called when the property is defined like that (i.e. property of related entity) and it doesn't set uuid.\nAny ideas on how to get renderImageField to be called in this case?. Looks like the bug, as I experience it, is fixed in master: 658d23fadbe19cbbf1226f0811d1043ea0962bf5 after being reported in #1496 . Looks like the bug, as I experience it, is fixed in master: 658d23fadbe19cbbf1226f0811d1043ea0962bf5 after being reported in #1496 . ",
    "degouville": "@javiereguiluz Got the same with $ ./bin/console debug:container --parameter=app.version\n\n\nI also tried $ ./bin/console debug:container --parameter=app and got\n\n. @HeahDude there is no way to grab app global variable outside of Twig ?? \ud83e\udd14. all right @HeahDude & @javiereguiluz  thank's for your help. \ud83e\udd1d\nBasicaly i want to use %app.user.username% as a filter in my EasyAdminBundle's menu.yml (not in templates)... How can I do ? Any idea ? \ud83e\udd14. Ok, that makes sens.\nLet's forget Twig global variables...\nIn EAB doc #6 I have this action - { entity: 'Category', params: { action: 'edit', id: 341 } }.\nIs it possible to deal with id: 341 dynamically ? I mean, change the ID with some magical parameter ?. Ok guys, I get my stuff working by cheating with <body ... class=\"easyadmin sidebar-mini {{ app.user.roles|default([])|join(' ')|lower }} {{ app.user.username }} ...\"> I found here (thank's @javiereguiluz) and some JavaScript... \ud83d\udc40\nBut I am far from doing it the right way. If a better solution exist, please share \ud83d\ude09\ud83d\udc4d. ",
    "alberto-coolshop": "Our focus is to keep the config as much as friendly as possible with the possibility to override the templates if needed.\nAn example of the configuration will be as follows. Comments on our additions:\n```yaml\neasy_admin:\n  site_name: 'Easy Admin'\n  design:\n    templates:\n      batch_checkbox: '@EasyAdmin:default:batch_checkbox.html.twig' # Template of the checkboxes onto the table \n      batch_actions: '@EasyAdmin:default:batch_actions.html.twig' # Template of the batch actions select, execute button and modal to confirm execution    \nlist:\n    batch_actions: ['delete', 'customAction'] # global batchable action for every entity\n  entities:\n    Vehicle:\n      class: AppBundle\\Entity\\Vehicle\n      disabled_actions: [\"new\", \"delete\"]\n      list:\n        action: [\"customAction\"]\n        batch_actions: [\"customAction2\"] # additional batchable action for vehicle entity\n    User:\n      class: AppBundle\\Entity\\User\n      list:\n          fields: ['id', 'firstName', 'lastName', 'email']\n          batch_actions: ['-delete'] # disable delete from batchable action for user entity\n```\nUser Experience will be like \"Delete\" action. \nFirst batch action select will remain disabled until a row is selected:\n\nAfter a action is selected as follows_\n\nuser can click on the execute button (the blu one):\n\nAnd a modal will ask for confirmation:\n\nWhat do you think?\n. Hi all, \nanyone would add something to this?\nI'm almost ready for merge-request, just the time to refine and translate some message.... Hi all, \nanyone would add something to this?\nI'm almost ready for merge-request, just the time to refine and translate some message.... @timonf, I tried! \nI got a very strange message.\n```\nvendor/bin/phpunit -c phpunit.xml.dist \n[Symfony\\Component\\DependencyInjection\\Exception\\LogicException]                  \n  Templating support cannot be enabled as the Templating component is not installed.  \nPHPUnit 4.8.34 by Sebastian Bergmann and contributors.\ncopy(/Applications/XAMPP/xamppfiles/htdocs/iveco-iris/vendor/javiereguiluz/easyadmin-bundle/Tests/../build/test.db): failed to open stream: No such file or directory\n```\nAlberto. @timonf, I tried! \nI got a very strange message.\n```\nvendor/bin/phpunit -c phpunit.xml.dist \n[Symfony\\Component\\DependencyInjection\\Exception\\LogicException]                  \n  Templating support cannot be enabled as the Templating component is not installed.  \nPHPUnit 4.8.34 by Sebastian Bergmann and contributors.\ncopy(/Applications/XAMPP/xamppfiles/htdocs/iveco-iris/vendor/javiereguiluz/easyadmin-bundle/Tests/../build/test.db): failed to open stream: No such file or directory\n```\nAlberto. Hi all,\nany news from this?\n. Hi all,\nany news from this?\n. ",
    "ivanbogomoloff": "This is important feature!\nplease implement it !. This is important feature!\nplease implement it !. > Thanks for reporting this issue. I think I know the cause:\n\n\nthe help message is translated here:  [EasyAdminBundle/src/Resources/views/default/layout.html.twig](https://github.com/EasyCorp/EasyAdminBundle/blob/3ef8629567b123f19370086d2528c5a6ae03fa64/src/Resources/views/default/layout.html.twig#L145)\n\n    Line 145\n in\n [3ef8629](/EasyCorp/EasyAdminBundle/commit/3ef8629567b123f19370086d2528c5a6ae03fa64)\n\n      {{ _entity_config[app.request.query.get('action')]['help']|trans|nl2br|raw }}\n\n\nIt's OK to use |trans without specifying the translation domain...\n\n... because in most templates we define the trans_default_domain (for example, here: \nEasyAdminBundle/src/Resources/views/default/list.html.twig\nLine 2\n\nin\n 3ef8629\n  {% trans_default_domain _entity_config.translation_domain %}\n\n\n\n\n\n)\nSo, I guess the solution is to add this at the top of the layout.html.twig template:\n{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %}\n{% trans_default_domain _entity_config.translation_domain %}\nCould you please do this change in your local machine and see if the error is fixed? And if it's fixed, could you please create a pull request against 1.x branch with the change? Thanks!\n\nYes this works. \nI did override layout.html.twig like this\ndesign:\n        templates:\n            layout: 'my_layout.html.twig'\nthen i copy all html from vendor/easycorp/easyadmin-bundle/src/Resources/views/default/layout.html.twig to my_layout.html.twig and before DOCTYPE add your code \n```\n{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %}\n{% trans_default_domain _entity_config.translation_domain %}\nhtml....\n```\nand it works.\nThank you.. > Thanks for reporting this issue. I think I know the cause:\n> \n> 1. the help message is translated here: \n>      \n>        \n>          [EasyAdminBundle/src/Resources/views/default/layout.html.twig](https://github.com/EasyCorp/EasyAdminBundle/blob/3ef8629567b123f19370086d2528c5a6ae03fa64/src/Resources/views/default/layout.html.twig#L145)\n>        \n>        \n>             Line 145\n>          in\n>          [3ef8629](/EasyCorp/EasyAdminBundle/commit/3ef8629567b123f19370086d2528c5a6ae03fa64)\n>        \n>        \n>        \n>        \n>    \n>            \n>              \n>               {{ _entity_config[app.request.query.get('action')]['help']|trans|nl2br|raw }}\n> 2. It's OK to use `|trans` without specifying the translation domain...\n> 3. ... because in most templates we define the `trans_default_domain` (for example, here: \n>      \n>        \n>          [EasyAdminBundle/src/Resources/views/default/list.html.twig](https://github.com/EasyCorp/EasyAdminBundle/blob/3ef8629567b123f19370086d2528c5a6ae03fa64/src/Resources/views/default/list.html.twig#L2)\n>        \n>        \n>             Line 2\n>          in\n>          [3ef8629](/EasyCorp/EasyAdminBundle/commit/3ef8629567b123f19370086d2528c5a6ae03fa64)\n>        \n>        \n>        \n>        \n>    \n>            \n>              \n>               {% trans_default_domain _entity_config.translation_domain %} \n>            \n>        \n>      \n>    \n>    )\n> \n> So, I guess the solution is to add this at the top of the `layout.html.twig` template:\n> \n> ```\n> {% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %}\n> {% trans_default_domain _entity_config.translation_domain %}\n> ```\n> \n> Could you please do this change in your local machine and see if the error is fixed? And if it's fixed, could you please create a pull request against 1.x branch with the change? Thanks!\n\nYes this works. \nI did override layout.html.twig like this\ndesign:\n        templates:\n            layout: 'my_layout.html.twig'\nthen i copy all html from vendor/easycorp/easyadmin-bundle/src/Resources/views/default/layout.html.twig to my_layout.html.twig and before DOCTYPE add your code \n```\n{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %}\n{% trans_default_domain _entity_config.translation_domain %}\nhtml....\n```\nand it works.\nThank you..",
    "gigib82": "Furthermore, that option must be set to true (never tried with null) in order to allow pagination of lists of entity with composite primary keys. Actually an exception is thrown while listing such entities.. ",
    "Benjamin-Porquet": "thank you very much for your great work. thank you very much for your great work. symfony 3.2.3 // easyadmin 1.16.5. symfony 3.2.3 // easyadmin 1.16.5. I didn't change lot of things, I just overwrite public function editAction()  to add symfony security check with security.authorization_checker : isgranted)\nmy controller extends JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController. So my controller cant use \"$this->updateEntityProperty\" which is defined in AdminController but is private, not protected.\n. I didn't change lot of things, I just overwrite public function editAction()  to add symfony security check with security.authorization_checker : isgranted)\nmy controller extends JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController. So my controller cant use \"$this->updateEntityProperty\" which is defined in AdminController but is private, not protected.\n. @unexge thank you for your help, but I tried this : \n\nMy usercontroller extends this : \n`use JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Event\\EasyAdminEvents;\nclass UserController extends BaseAdminController`. @unexge thank you for your help, but I tried this : \n\nMy usercontroller extends this : \n`use JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Event\\EasyAdminEvents;\nclass UserController extends BaseAdminController`. I think we should modify methode updateEntityProperty into \"protected\" function, don't you think so?. I think we should modify methode updateEntityProperty into \"protected\" function, don't you think so?. symfony 3.2.3 // easyadmin 1.16.5. symfony 3.2.3 // easyadmin 1.16.5. I dont reproduce this on google chrome. \nOnly on FireFox, and only in the EDIT action when there are data in the collection.. Hum sorry but I don't think this is the expected behaviour when we are on the bottom of the page, we have : \n\nIt should be : \n\n. @javiereguiluz thank you  \ud83d\udc4d . Hi Javier,\nThis is OK without that change. Want me to create a PR or you do ?. Done. Thank you Javier. This is for https://github.com/javiereguiluz/EasyAdminBundle/issues/1522. Ok then I'll try to explain :) \nI have an entity User.\nI have to override the editAction into a UserController.php file (that extends JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController), to add this : \n\nBut doing this, if we call to this method in the editAction : \n\nWe have an error because the updateEntityProperty method is private !\nCall to private method JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController::updateEntityProperty() from context 'AppBundle\\Controller\\EasyAdmin\\UserController'\nThat's why on top of that we need to override this method in this new controller :( \ndo you understand ?\n. @javiereguiluz what do you think of this? . @javiereguiluz I don't really understand in which case this exception will be thrown. . Oh well ok I understand the problem now, thank you!. To prevent this kind of problem when we update methods, can't we use interfaces? \nclass AdminController extends Controller implements EasyAdminControllerInterface , or something like that, in which we declare all methods that we use ?\n. Hi\nhere is my code: \n- { property: 'absences', type: 'collection', type_options: {'entry_type': 'AppBundle\\Form\\Type\\AbsenceType', error_bubbling: false, by_reference: false, allow_add: true, allow_delete: true, delete_empty: true, entry_options: {'label': false}} } \n. No, no, it's ok for me :) just an answer for @matudelatower  with a full example\nas you said, the problem is with his \"type\" \ud83d\udc4d . Oh well sorry, you're right : http://symfony.com/doc/2.7/reference/forms/types/collection.html\nI'm affraid I don't know, sorry, is it possible with easy admin bundle ?\n\nIf you want to embed a collection of some other form, create a new instance of your form type and pass it as this option.\n\nping @javiereguiluz . I do not reproduce that on Symfony version : 3.2.6. Hello,\nSeems to be corrected in https://github.com/EasyCorp/EasyAdminBundle/releases/tag/v1.17.13, it works for me.. Hello,\nSeems to be corrected in https://github.com/EasyCorp/EasyAdminBundle/releases/tag/v1.17.13, it works for me.. Thanks @moynzzz !. Thanks @moynzzz !. Oh shame on me, my fault there are already one \"disabled_action\" for my entity :') . @javiereguiluz : no |trans ? \"Sign Out\" is hard coded ?. ",
    "rmacew": "Let's say I have Manager and Product entities.\nManager\n- id\n- name\nProduct\n- id\n- name\n- price\n- manager_id\nIn Manager's show view except details I also want to show list of all Manager's Products. Something like (product=luxury): \n\n. Let's say I have Manager and Product entities.\nManager\n- id\n- name\nProduct\n- id\n- name\n- price\n- manager_id\nIn Manager's show view except details I also want to show list of all Manager's Products. Something like (product=luxury): \n\n. Master-slave? First time hearing something like that :D It's simple 1:n (one-to-many) relation. My writing skills need some update if tech guys can't understand me.\nSince there is no way to search through objects related in the list, it's not covered at all by bundle. Today I'm just implementing ajax loaded list which I wanted to avoid :(. Master-slave? First time hearing something like that :D It's simple 1:n (one-to-many) relation. My writing skills need some update if tech guys can't understand me.\nSince there is no way to search through objects related in the list, it's not covered at all by bundle. Today I'm just implementing ajax loaded list which I wanted to avoid :(. ",
    "cvele": "Turns out this has nothing to do with EasyAdmin bundle.\nI've solved this by creating custom form type for Money field and defining new createEntityNewForm.. ",
    "sryabov": "After update i'm use this hotfix\nin config:\nyaml\neasy_admin:\n    templates:\n        field_image: ':easy_admin:field_image.html.twig'\ncreate file app/Resources/views/easy_admin/field_image.html.twig:\ntwig\n{{ include('@EasyAdmin/default/field_image.html.twig', { uuid: field_options.fieldName ~ '-' ~ item.id }) }}\n. ",
    "mikeelltt": "Used versions:\nEasyAdmin: 1.16.5\nSymfony: 3.1.10. Used versions:\nEasyAdmin: 1.16.5\nSymfony: 3.1.10. Hi @yceruto, I used this code:\n```js\n$('.field-collection').on('easyadmin.collection.item-added', function() {\n    var $parent = $(this);\n    var $field = $parent.find('.field-easyadmin_autocomplete');\nif (!$field.length) {\n    return;\n}\n\nvar $input = $field.find('select').select2({\n    theme: 'bootstrap'\n});\n\n});\n```. Thanks @yceruto, works correctly.. @yceruto, sounds good! Thank you \ud83d\ude00. ",
    "shinework": "Same issue \ud83e\udd13. @yceruto Thanks it works \u2705. ",
    "mapeveri": "Solution:\n             actions:\n                - { name: 'show', label: '', icon: 'search' }\n                - { name: 'edit', label: '', icon: 'edit' }\n                - { name: 'delete', label: '', icon: 'trash' }\n                - { name: 'new', label: 'My text', icon: 'plus-circle' }.\n",
    "phpdave11": "I think you have to create a complex/dynamic backend, customizing the AdminController and the twig templates.\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\n. I think you have to create a complex/dynamic backend, customizing the AdminController and the twig templates.\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/doc/book/7-complex-dynamic-backends.md\n. ",
    "jplammie": "I tried all of that, didn't work. Finally got it working, though it was by accident. \nI was reading that you could create a custom form type and then in the EasyAdmin config, specify the type param for the field as the fully qualified name of the custom FormType. This would not work -- the Symfony FormRegistry would also throw an exception saying FormType now found. \nHowever, I got it working by creating a UserAddressType that contained all of the address fields, then created a service for it with tag of form.type and alias 'user_addrsss'. From there, I specified the EasyAdmin type Parma as 'user_address' and it worked perfectly.\nTL;DR: Using FQCN for custom form type does not work. It only worked when registering custom form type as a service and then referencing that alias in YAML config.. I tried all of that, didn't work. Finally got it working, though it was by accident. \nI was reading that you could create a custom form type and then in the EasyAdmin config, specify the type param for the field as the fully qualified name of the custom FormType. This would not work -- the Symfony FormRegistry would also throw an exception saying FormType now found. \nHowever, I got it working by creating a UserAddressType that contained all of the address fields, then created a service for it with tag of form.type and alias 'user_addrsss'. From there, I specified the EasyAdmin type Parma as 'user_address' and it worked perfectly.\nTL;DR: Using FQCN for custom form type does not work. It only worked when registering custom form type as a service and then referencing that alias in YAML config.. @CruzyCruz - Yes, that's exactly what I tried. I cannot load a custom form type if I specify the fully qualified class name. It only works if I setup the form type as a service and call it by it's named alias. \nThis works:\n[in services.yml]\nform.type.address_type:\n        class: XXX\\Form\\AddressType\n        tags:\n            - { name: form.type, alias: address_type_service }\n[in easy_admin_config.yml]\n- { property: 'address', type: 'address_type_service', type_options: { required: true } }\nBut this does not:\n[in easy_admin_config.yml]\n- { property: 'address', type: 'XXX\\Form\\AddressType', type_options: { required: true } }\nI triple-checked my class names, namespaces, had other developers check it. Everything checked out and looked correct, but it still wouldn't load custom form types when using the FQCN. \nFYI I'm using EasyAdmin v1.16.5.. @CruzyCruz - Yes, that's exactly what I tried. I cannot load a custom form type if I specify the fully qualified class name. It only works if I setup the form type as a service and call it by it's named alias. \nThis works:\n[in services.yml]\nform.type.address_type:\n        class: XXX\\Form\\AddressType\n        tags:\n            - { name: form.type, alias: address_type_service }\n[in easy_admin_config.yml]\n- { property: 'address', type: 'address_type_service', type_options: { required: true } }\nBut this does not:\n[in easy_admin_config.yml]\n- { property: 'address', type: 'XXX\\Form\\AddressType', type_options: { required: true } }\nI triple-checked my class names, namespaces, had other developers check it. Everything checked out and looked correct, but it still wouldn't load custom form types when using the FQCN. \nFYI I'm using EasyAdmin v1.16.5.. @CruzyCruz - No, all of my custom form types in EasyAdmin have to be declared as services before they can be used. Elsewhere, in regular Symfony forms, I can instantiate my custom form types directly without invoking a service. It's only in EA where I have to setup services for the form types. Definitely strange behavior that I can't readily explain.. ",
    "longnd": "@javiereguiluz\nThe latest release still includes the glyphicons:\nhttps://github.com/EasyCorp/EasyAdminBundle/blob/v1.17.14/src/Resources/public/stylesheet/bootstrap.min.css\nbut the master branch removed it already.\nWhen will the new release available?\nThanks. @javiereguiluz when will the new version of the bundle be released that contains this fix?. ",
    "tautrimas": "You probably missed encoder setup where actual algorithm for hashing is configured.. You probably missed encoder setup where actual algorithm for hashing is configured.. ",
    "Unyxos": "After a quick look at my security.yml, there is already \nFOS\\UserBundle\\Model\\UserInterface: bcrypt\nin encoders. After a quick look at my security.yml, there is already \nFOS\\UserBundle\\Model\\UserInterface: bcrypt\nin encoders. Finally fixed !\nCame on https://github.com/javiereguiluz/EasyAdminBundle/blob/1c6751b154eb726426251efdc81df5af013cf849/Resources/doc/tutorials/custom-property-options.md\nand saw this (I added just under the Entity's name in my config.yml\nexport_path: '%kernel.root_dir/../var/export/user'\n            password_encoding: { algorithm: 'bcrypt', cost: 12 }\nNow it works fine.. ",
    "humbertolagoa": "Hi,\nI did it this way:\non app\\Resources\\views\\easy_admin\\MyEntity\\list.html.twig\ntwig\n{% block export_csv %}\n      {% set referer = app.request.server.get('http-referer')|default('/') %}\n    <div class=\"btn-group pull-right\">\n        <a class=\"btn btn-primary\" href=\"{{ path('easyadmin', app.request.query|merge({ action: \"export\" })) }}\" target=\"_blank\">\n          <i class=\"fa fa-file-excel-o\"></i>\n          {{ 'app.export_csv'|trans }}\n        </a>\n    </div>\n    {% endblock export_csv %}\nAnd on \\src\\AppBundle\\Controller\\Admin\\MyEntityController.php\n```php\nclass MyEntityController extends BaseAdminController\n{\n    public function exportAction()\n    {\n        $this->dispatch(EasyAdminEvents::PRE_SEARCH);\n        $searchableFields = $this->entity['search']['fields'];\n        $paginator = $this->findBy($this->entity['class'],\n            $this->request->query->get('query'), $searchableFields, 1, 10000000000,\n            $this->request->query->get('sortField'),\n            $this->request->query->get('sortDirection'),\n            $this->entity['search']['dql_filter']);\n        $fields = $this->entity['list']['fields'];\n        $this->dispatch(EasyAdminEvents::POST_SEARCH,\n            array(\n            'fields' => $fields,\n            'paginator' => $paginator,\n        ));\n        return $this->getExportFile($paginator, $fields);\n    }\npublic function getExportFile($paginator, $fields)\n   {\n       // your code to create the response with the csv file\n   }\n```\nHope it helps\n. ",
    "rimi-itk": "We've had the use for this as well. Our current (quick and (maybe) dirty) solution goes like this:\n\n\nAdd \"params\" to your Easy Admin entity configuration, e.g.\neasy_admin:\n    \u2026\n    entities:\n        Event:\n            \u2026\n            list:\n                \u2026\n                params:\n                    # name: default value\n                    _event_list_filter: my\n                \u2026\n    \u2026\n(cf. https://github.com/itk-event-database/event-database-api/blob/dfad5bb838c5223b6e8a5667f8668488f1a7283c/app/config/easyadmin.yml#L73-L75)\n2. Add a POST_INITIALIZE event to add the specified parameters to the request if they're not already set: https://github.com/itk-event-database/event-database-api/blob/develop/src/AdminBundle/EventSubscriber/EasyAdminSubscriber.php#L33-L46\n\n\nNote: This is our first stab at this and there may be \u2013\u00a0and probably are \u2013 better ways to do this. Fell free to use or comment on our current solution.\nBest regards,\nMikkel. ",
    "meyervp": "Hello @yceruto ! \nWhy this fix is not added to 1.X version of easyAdmin? Thanks. ",
    "wtfred": "Ok thanks for anwsers guys, and thanks for your work @javiereguiluz !. Ok thanks for anwsers guys, and thanks for your work @javiereguiluz !. ",
    "JuanWilde": "Hi. Finally I created a new service with the edited code and chaged it in my AdminController and it works...\nBut I still having the problem with the easyadmin.css.twig file. I created the same structure in my app folder...\n\nBut styles looks like ever..\nAny idea for this issue?\nThank a lot. Nothing happens. The fact is that I have my overriden view fiels in app/Resources/views/... and they work, but if I move them to app/Resources/EasyAdminBundle/... they don't work :/ . Yes, even after clearing cache (dev and prod). I tried to place the easyadmin.css.twig (my version) with no success in:\napp/Resources/views/css\napp/Resources/EasyAdminBundle/views/css and\napp/Resources/views/easy-admin/css\nIn my easy-admin folder are my custom templates as you can see in the image\n\nBut I can fix the issue :( . ",
    "mnuhell": "Hi @javiereguiluz, \nthanks for your answer, in the end instead of taking the thumbnail I added the player, I leave as the code in case anyone needs it.\nI have a short time working with symfony\n{% set v = value|slice(-11, 11) %}\n<iframe width=\"350\" height=\"197\" src=\"https://www.youtube.com/embed/{{ v }}\" frameborder=\"0\" allowfullscreen></iframe>. Thanks, Javier!!. ",
    "bnd170": "Hi Javier,\n\nWe are trying to relate two entities, for example the Article entity and the Image entity.\nThe intention is that when we create an article, the user can add an image using the form of the entity Image or select one of the already saved.. Hi Javier,\n\nWe are trying to relate two entities, for example the Article entity and the Image entity.\nThe intention is that when we create an article, the user can add an image using the form of the entity Image or select one of the already saved.. Thanks javier.\nCan you tell us where can find the roadmap of this project? If it's public.. Thanks javier.\nCan you tell us where can find the roadmap of this project? If it's public.. ",
    "ifdattic": "@javiereguiluz @xabbuh added both of you as collaborators to the repository, use finished-v3 for latest code.\nJust tested and it appears that it's recognizing that the property is date correctly, but it still does not pay attention to global format config if fields option is not set.\nIf I have this:\nyaml\neasy_admin:\n    formats:\n        date: 'd/m/Y H:i'\n        datetime: 'd-m-Y H:i'\nin configuration, and list.fields for Genus entity commented out, it just uses the default format (e.g., December 18, 1859 00:00). If I uncomment list.fields options when it outputs using formats.date option (e.g., 18/12/1859 00:00).. Cool, glad to help. Thanks @javiereguiluz . ",
    "kareemashraf": "i also have the same problem\nformats:\n            date:     'd.m.Y'\n            time:     'H:i:s'\n            datetime: 'd.m. Y H:i:s'\nand in the yml file - { property: 'duration' , format: 'i:s' } but still appears as H:i  it still does not pay attention to global format config\n. ",
    "matudelatower": "@laurent-bientz @Benjamin-Porquet \nyml\neasy_admin:\n    entities:\n        Encuesta:\n            class: CRMBundle\\Entity\\Encuesta\n            form:\n                fields:\n                    - { property: 'nombre' }\n                    - { property: 'descripcion' }\n                    - { property: 'preguntas',type: 'collection', type_options: { by_reference: true, entry_type: CRMBundle\\Form\\EncuestaOpcionRespuestaType } }\n                    - { property: 'activo' }\n            edit:\n                title:  'Editar Encuesta'\n            new:\n                title:  'Alta Encuesta'\n            list:\n                title:  'Encuesta'\n\ni insist, Symfony: 2.7.18 does not know entry_type option. @yceruto yes, but the problem is the option name, not the type name.... @yceruto \ntype: doesnt work\nthe option entry_type:\nthe { by_reference: true, type: 'encuesta_opcion_respuesta' } It does not work\n. @yceruto\n```yml\neasy_admin:\n    entities:\n        Encuesta:\n            class: CRMBundle\\Entity\\Encuesta\n            form:\n                fields:\n                    - { property: 'nombre' }\n                    - { property: 'descripcion' }\n- { property: 'preguntas', type: 'collection' }\n                - { property: 'preguntas',type: 'collection', type_options: { by_reference: true, type: 'crmbundle_encuestaopcionrespuesta' } }\n\n- { property: 'preguntas',type: 'collection', type_options: { by_reference: true, type: CRMBundle\\Form\\EncuestaOpcionRespuestaType } }\n- { property: 'preguntas',type: 'collection', type_options: { 'entry_type': CRMBundle\\Form\\EncuestaOpcionRespuestaType, by_reference: false } }\n                - { property: 'activo' }\n        edit:\n            title:  'Editar Encuesta'\n        new:\n            title:  'Alta Encuesta'\n        list:\n            title:  'Encuesta'\n\n```\n\n. @yceruto \n\n. @yceruto No, but I do not think it's necessary, in 2.8 it works without problems. When type is collection and by_reference is true doesnt work.\nyml\n- { property: 'domicilioPersona' , type: 'collection' , type_options: { by_reference: false, entry_type: AppBundle\\Form\\DomicilioPersonaType } }\n\n. @Pierstoval yes but without by_reference the depence is orphan.\n\n. ",
    "AntonSmatanik": "Perfect, thanks!. But now there is a problem with default actions. Like after login:\nKey \"menuIndex\" for array with keys \"action, entity, sortField, sortDirection, page, referer\" does not exist.. And for the delete form I did this:\ntwig\n{% if app.request.get('language') is defined and app.request.get('language') is not empty %}\n            {{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {\n                view: 'list',\n                language: app.request.get('language'),\n                referer: referer|url_encode,\n                delete_form: delete_form_template,\n                _translation_domain: _entity_config.translation_domain,\n                _trans_parameters: _trans_parameters,\n                _entity_config: _entity_config,\n            }, with_context = false) }}\n        {% else %}    \n            {{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {\n                view: 'list',\n                referer: referer|url_encode,\n                delete_form: delete_form_template,\n                _translation_domain: _entity_config.translation_domain,\n                _trans_parameters: _trans_parameters,\n                _entity_config: _entity_config,\n            }, with_context = false) }}\n        {% endif %}. still not working:\n{% set _request_parameters = app.request.query.all %}\n{% set _request_parameters = _request_parameters|merge({\n    entity: _entity_config.name,\n    menuIndex: app.request.get('menuIndex'),\n    submenuIndex: app.request.get('submenuIndex'),\n    sortField: app.request.get('sortField', ''),\n    sortDirection: app.request.get('sortDirection', 'DESC'),\n    page: app.request.get('page', 1)\n}) %}. Yeah parameter is not passed. It really can't be so hard to pass custom parameters.... ",
    "blackatze93": "Hi you can see this and try overriding templates:\nhttp://symfony.com/doc/current/bundles/EasyAdminBundle/tutorials/tips-and-tricks.html#defining-dynamic-actions-per-item. Can you publish your code? . @AntonSmatanik Thanks, I'll try this later.. Yeah I've done this by passing an additional argument to autocompleteAction, so my controller:\n```\n protected function autocompleteAction() \n   {\n        $results = $this->get('easyadmin.autocomplete')->find(\n            $this->request->query->get('entity'),\n            $this->request->query->get('query'),\n            $this->request->query->get('page', 1),\n            'entity.activo = true'\n        );\n    return new JsonResponse($results);\n}\n\nAnd overriding the default search action:\n// javiereguiluz/easyadmin-bundle/Search/Autocomplete.php\npublic function find($entity, $query, $page = 1, $dqlFilter = null)\n    {\n        if (empty($entity) || empty($query)) {\n            return array('results' => array());\n        }\n    $backendConfig = $this->configManager->getBackendConfig();\n    if (!isset($backendConfig['entities'][$entity])) {\n        throw new \\InvalidArgumentException(sprintf('The \"entity\" argument must contain the name of an entity managed by EasyAdmin (\"%s\" given).', $entity));\n    }\n\n    $paginator = $this->finder->findByAllProperties($backendConfig['entities'][$entity], $query, $page, $backendConfig['show']['max_results'], null, null,  $dqlFilter);\n\n    return array('results' => $this->processResults($paginator->getCurrentPageResults(), $backendConfig['entities'][$entity]));\n}\n\n```\n```\n// javiereguiluz/easyadmin-bundle/Search/Finder.php\npublic function findByAllProperties(array $entityConfig, $searchQuery, $page = 1, $maxResults = self::MAX_RESULTS, $sortField = null, $sortDirection = null, $dqlFilter = null)\n    {\n        $queryBuilder = $this->queryBuilder->createSearchQueryBuilder($entityConfig, $searchQuery, $sortField, $sortDirection, $dqlFilter);\n    return $this->paginator->createOrmPaginator($queryBuilder, $page, $maxResults);\n}\n\n```\nIs a little long, but it works\n. @yceruto This would be awesome!. In the config of article check by_reference option is set to false.. In the config of article check by_reference option is set to false.. Entities are managed by Doctrine and Symfony, you can view the docs here: https://symfony.com/doc/current/doctrine.html. Entities are managed by Doctrine and Symfony, you can view the docs here: https://symfony.com/doc/current/doctrine.html. ",
    "greg0ire": "Does your bundle extend the EasyAdminBundle? See https://symfony.com/doc/current/bundles/inheritance.html. This is not how bundle inheritance work I think. Please read the docs I linked to in the post above, it uses a getParent method instead.. Great! You should probably close this.. > I'd prefer to stick on easier and simpler things, to avoid making EasyAdmin become ComplexAdmin (or SonataAdmin rofl ).\n\u0ca0_\u0ca0. suggestion\nDTOs (Data Transfer Object) are considered a good practice by many developers as a way to. suggestion\nAs Doctrine does not use any getter nor setter to hydrate our objects, we do not. suggestion\nboth using an object called a DTO.. suggestion\nAnd *voil\u00e0*! Nothing more to do, EasyAdmin will use your configuration to create. ",
    "FireFoxIXI": "While preparing to upgrade to SF4 and Flex I had a go at this:\nIntegrating KnpLabs/DoctrineBehaviors and A2lixTranslationFormBundle\nInstall the 2 Bundles as per their documentation:\nKnpLabs/DoctrineBehaviors\nA2lixTranslationFormBundle\nTranslatable entity\nAdd a __get function to your translatable entities:\n```php\n/*\n * @ORM\\Entity()\n /\nclass Article\n{\nuse ORMBehaviors\\Translatable\\Translatable;\n\npublic function __call($method, $arguments)\n{\n    $method = ('get' === substr($method, 0, 3) || 'set' === substr($method, 0, 3)) ? $method : 'get'. ucfirst($method);\n\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\npublic function __get($name)\n{\n    $method = 'get'. ucfirst($name);\n    $arguments = [];\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\n```\nThe __get function will be called by EasyAdmin and so you can reference the fields in the show and list views.\nAdjusting your EasyAdmin configuration\nNothing daunting here:\nyaml\neasy_admin:\n    entities:\n        Article:\n            class: App\\Entity\\Article\n            label: 'Artikel'\n            list:\n                fields:\n                    - { property: 'title' } #A Translatable field\n                    - { property: 'public' }\n            form:\n                fields:\n                    - { property: 'translations', label: false, type: A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsType ,\n                        type_options: {\n                            default_locale: '%locale%',\n                            fields: {\n                                title: {field_type: 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType' },\n                                description: {field_type: 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n                                }\n                        }\n                      }\n                    - { property: 'public' }\nThat's it, you now have fully translatable entities integrated into EasyAdmin.\nThe type_options are optional, and only needed if you want to adjust to your needs, like in this example integrating a Wysiwig editor.\nFor SF4 I had to use a fork fsi-open/IvoryCKEditorBundle. Resources/public is empty in that fork, so I got that from the original.\n. While preparing to upgrade to SF4 and Flex I had a go at this:\nIntegrating KnpLabs/DoctrineBehaviors and A2lixTranslationFormBundle\nInstall the 2 Bundles as per their documentation:\nKnpLabs/DoctrineBehaviors\nA2lixTranslationFormBundle\nTranslatable entity\nAdd a __get function to your translatable entities:\n```php\n/*\n * @ORM\\Entity()\n /\nclass Article\n{\nuse ORMBehaviors\\Translatable\\Translatable;\n\npublic function __call($method, $arguments)\n{\n    $method = ('get' === substr($method, 0, 3) || 'set' === substr($method, 0, 3)) ? $method : 'get'. ucfirst($method);\n\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\npublic function __get($name)\n{\n    $method = 'get'. ucfirst($name);\n    $arguments = [];\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\n```\nThe __get function will be called by EasyAdmin and so you can reference the fields in the show and list views.\nAdjusting your EasyAdmin configuration\nNothing daunting here:\nyaml\neasy_admin:\n    entities:\n        Article:\n            class: App\\Entity\\Article\n            label: 'Artikel'\n            list:\n                fields:\n                    - { property: 'title' } #A Translatable field\n                    - { property: 'public' }\n            form:\n                fields:\n                    - { property: 'translations', label: false, type: A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsType ,\n                        type_options: {\n                            default_locale: '%locale%',\n                            fields: {\n                                title: {field_type: 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType' },\n                                description: {field_type: 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n                                }\n                        }\n                      }\n                    - { property: 'public' }\nThat's it, you now have fully translatable entities integrated into EasyAdmin.\nThe type_options are optional, and only needed if you want to adjust to your needs, like in this example integrating a Wysiwig editor.\nFor SF4 I had to use a fork fsi-open/IvoryCKEditorBundle. Resources/public is empty in that fork, so I got that from the original.\n. ",
    "elvismdev": "On SF4 I experienced some CSS small inconsistencies using this approach. For a better matching with the default EasyAdminBundle stylesheet I'd recommend to override the default template file from A2lixTranslationFormBundle into templates/bundles/A2lixTranslationFormBundle/bootstrap_4_layout.html.twig and use this markup which have already the small adjustments needed:\n```twig\n{% block a2lix_translations_widget %}\n    {{ form_errors(form) }}\n<div class=\"a2lix_translations\">\n    <ul class=\"a2lix_translationsLocales nav nav-tabs\" role=\"tablist\">\n    {% for translationsFields in form %}\n        {% set locale = translationsFields.vars.name %}\n\n        <li class=\"nav-item {% if app.request.locale == locale %}active{% endif %}\">\n            <a href=\"#\" class=\"nav-link\" data-toggle=\"tab\" data-target=\".{{ translationsFields.vars.id }}_a2lix_translationsFields-{{ locale }}\" role=\"tab\">\n                {{ translationsFields.vars.label|default(locale|humanize)|trans }}\n                {% if form.vars.default_locale == locale %}{{ '[Default]'|trans }}{% endif %}\n                {% if translationsFields.vars.required %}*{% endif %}\n            </a>\n        </li>\n    {% endfor %}\n    </ul>\n\n    <div class=\"a2lix_translationsFields tab-content\">\n    {% for translationsFields in form %}\n        {% set locale = translationsFields.vars.name %}\n\n        <div class=\"{{ translationsFields.vars.id }}_a2lix_translationsFields-{{ locale }} tab-pane {% if app.request.locale == locale %}active{% endif %} {% if not form.vars.valid %}sonata-ba-field-error{% endif %}\" role=\"tabpanel\">\n            {{ form_errors(translationsFields) }}\n            {{ form_widget(translationsFields) }}\n        </div>\n    {% endfor %}\n    </div>\n</div>\n\n{% endblock %}\n{% block a2lix_translationsForms_widget %}\n    {{ block('a2lix_translations_widget') }}\n{% endblock %}\n```\n(Do a diff between original and overrided file to see difference/changes). @hirenaspl About translatable I was just looking for the same and the best I could find working is the solution commented here: https://github.com/EasyCorp/EasyAdminBundle/issues/1621#issuecomment-364373661\n\n. ",
    "picks44": "@FireFoxIXI thanks for your input, i'm using SF3.4 and have implemented yur solution, but I get the following error now : The \"name\" field cannot be used in the \"sort\" option of the \"list\" view of the \"Project\" entity because it's a virtual property that is not persisted in the database.\nname being a translatable property. Can you help?\nHere is my entity \n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Knp\\DoctrineBehaviors\\Model as ORMBehaviors;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n/\n * Project\n \n * @ORM\\Table(name=\"project\")\n * @ORM\\Entity(repositoryClass=\"AppBundle\\Repository\\ProjectRepository\")\n * @Vich\\Uploadable\n /\nclass Project\n{\n    use ORMBehaviors\\Translatable\\Translatable;\n/**\n * @var int\n *\n * @ORM\\Column(name=\"id\", type=\"integer\")\n * @ORM\\Id\n * @ORM\\GeneratedValue(strategy=\"AUTO\")\n */\nprivate $id;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"city\", type=\"string\", length=255)\n * @Assert\\NotBlank()\n */\nprivate $city;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"region\", type=\"string\", length=255, nullable=true)\n */\nprivate $region;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"country\", type=\"string\", length=255)\n * @Assert\\Country()\n */\nprivate $country;\n\n/**\n * @var boolean\n *\n * @ORM\\Column(name=\"isPublished\", type=\"boolean\")\n */\nprivate $isPublished = 0;\n\n/**\n * @var boolean\n *\n * @ORM\\Column(name=\"isFocused\", type=\"boolean\")\n */\nprivate $isFocused = 0;\n\n/**\n * @var string\n *\n * @ORM\\Column(type=\"string\", length=255)\n */\nprivate $cover;\n\n/**\n * @var File\n *\n * @Vich\\UploadableField(mapping=\"project_covers\", fileNameProperty=\"cover\")\n * @Assert\\Image(\n *     maxSize=\"1024k\",\n *     mimeTypes={\"image/jpeg\", \"image/gif\",\"image/png\"},\n *     minWidth = 250,\n *     minHeight = 250\n * )\n */\nprivate $coverFile;\n\n/**\n * @var \\DateTime\n *\n * @ORM\\Column(type=\"datetime\")\n */\nprivate $updatedAt;\n\n/**\n * @ORM\\OneToMany(targetEntity=\"AppBundle\\Entity\\ProjectMedia\", mappedBy=\"project\", cascade={\"persist\",\"remove\"}, orphanRemoval=true)\n */\nprivate $medias;\n\n/**\n * @ORM\\ManyToMany(targetEntity=\"AppBundle\\Entity\\Tag\", inversedBy=\"projects\")\n */\nprivate $tags;\n\n\n/**\n * Project constructor.\n */\npublic function __construct()\n{\n    $this->medias = new ArrayCollection();\n    $this->tags = new ArrayCollection();\n}\n\n/**\n * @param $method\n * @param $arguments\n * @return mixed\n */\npublic function __call($method, $arguments)\n{\n    $method = ('get' === substr($method, 0, 3) || 'set' === substr($method, 0, 3)) ? $method : 'get'. ucfirst($method);\n\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\n/**\n * @param $name\n * @return mixed\n */\npublic function __get($name)\n{\n    $method = 'get'. ucfirst($name);\n    $arguments = [];\n    return $this->proxyCurrentLocaleTranslation($method, $arguments);\n}\n\n/**\n * Get id\n *\n * @return int\n */\npublic function getId()\n{\n    return $this->id;\n}\n\n/**\n * Set city\n *\n * @param string $city\n *\n * @return Project\n */\npublic function setCity($city)\n{\n    $this->city = $city;\n\n    return $this;\n}\n\n/**\n * Get city\n *\n * @return string\n */\npublic function getCity()\n{\n    return $this->city;\n}\n\n/**\n * Set region\n *\n * @param string $region\n *\n * @return Project\n */\npublic function setRegion($region)\n{\n    $this->region = $region;\n\n    return $this;\n}\n\n/**\n * Get region\n *\n * @return string\n */\npublic function getRegion()\n{\n    return $this->region;\n}\n\n/**\n * Set country\n *\n * @param string $country\n *\n * @return Project\n */\npublic function setCountry($country)\n{\n    $this->country = $country;\n\n    return $this;\n}\n\n/**\n * Get country\n *\n * @return string\n */\npublic function getCountry()\n{\n    return $this->country;\n}\n\n/**\n * Set isPublished\n *\n * @param boolean $isPublished\n *\n * @return Project\n */\npublic function setIsPublished($isPublished)\n{\n    $this->isPublished = $isPublished;\n\n    return $this;\n}\n\n/**\n * Get isPublished\n *\n * @return boolean\n */\npublic function getIsPublished()\n{\n    return $this->isPublished;\n}\n\n/**\n * Set isFocused\n *\n * @param boolean $isFocused\n *\n * @return Project\n */\npublic function setIsFocused($isFocused)\n{\n    $this->isFocused = $isFocused;\n\n    return $this;\n}\n\n/**\n * Get isFocused\n *\n * @return boolean\n */\npublic function getIsFocused()\n{\n    return $this->isFocused;\n}\n\n/**\n * Set coverFile\n *\n * @param File|null $cover\n */\npublic function setCoverFile(File $cover = null)\n{\n    $this->coverFile = $cover;\n    if ($cover) {\n        $this->updatedAt = new \\DateTime('now');\n    }\n}\n\n/**\n * Get coverFile\n *\n * @return File\n */\npublic function getCoverFile()\n{\n    return $this->coverFile;\n}\n\n/**\n * Set cover\n *\n * @param $cover\n */\npublic function setCover($cover)\n{\n    $this->cover = $cover;\n}\n\n/**\n * Get cover\n *\n * @return mixed\n */\npublic function getCover()\n{\n    return $this->cover;\n}\n\n/**\n * Get updatedAt\n *\n * @return \\DateTime\n */\npublic function getUpdatedAt()\n{\n    return $this->updatedAt;\n}\n\n/**\n * Set updatedAt\n *\n * @param \\DateTime $updatedAt\n */\npublic function setUpdatedAt($updatedAt)\n{\n    $this->updatedAt = $updatedAt;\n}\n\n/**\n * Add media\n *\n * @param ProjectMedia $media\n *\n * @return Project\n */\npublic function addMedia(ProjectMedia $media)\n{\n    $this->medias[] = $media;\n    $media->setProject($this);\n\n    return $this;\n}\n\n/**\n * Remove media\n *\n * @param ProjectMedia $media\n */\npublic function removeMedia(ProjectMedia $media)\n{\n    $this->medias->removeElement($media);\n}\n\n/**\n * Get medias\n *\n * @return ArrayCollection\n */\npublic function getMedias()\n{\n    return $this->medias;\n}\n\n/**\n * Add tag\n *\n * @param Tag $tag\n *\n * @return Project\n */\npublic function addTag(Tag $tag)\n{\n    $this->tags[] = $tag;\n    $tag->addProject($this);\n\n    return $this;\n}\n\n/**\n * Remove tag\n *\n * @param Tag $tag\n */\npublic function removeTag(Tag $tag)\n{\n    $this->tags->removeElement($tag);\n}\n\n/**\n * Get tags\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getTags()\n{\n    return $this->tags;\n}\n\n}\n```\nIt's Translatable counterpart\n```\n<?php\nnamespace AppBundle\\Entity;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Gedmo\\Mapping\\Annotation as Gedmo;\nuse Knp\\DoctrineBehaviors\\Model as ORMBehaviors;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n/\n * ProjectTranslation\n \n * @ORM\\Table(name=\"project_translation\")\n * @ORM\\Entity()\n /\nclass ProjectTranslation\n{\n    use ORMBehaviors\\Translatable\\Translation;\n/**\n * @var string\n *\n * @ORM\\Column(name=\"name\", type=\"string\", length=255)\n * @Assert\\NotBlank()\n */\nprivate $name;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"tech\", type=\"text\")\n * @Assert\\NotBlank()\n */\nprivate $tech;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"description\", type=\"text\")\n * @Assert\\NotBlank()\n */\nprivate $description;\n\n/**\n * @var string\n *\n * @ORM\\Column(name=\"slug\", type=\"string\", length=128, unique=true)\n * @Gedmo\\Slug(fields={\"name\"})\n */\nprivate $slug;\n\n\n/**\n * Set name\n *\n * @param string $name\n *\n * @return ProjectTranslation\n */\npublic function setName($name)\n{\n    $this->name = $name;\n\n    return $this;\n}\n\n/**\n * Get name\n *\n * @return string\n */\npublic function getName()\n{\n    return $this->name;\n}\n\n/**\n * Set tech\n *\n * @param string $tech\n *\n * @return ProjectTranslation\n */\npublic function setTech($tech)\n{\n    $this->tech = $tech;\n\n    return $this;\n}\n\n/**\n * Get tech\n *\n * @return string\n */\npublic function getTech()\n{\n    return $this->tech;\n}\n\n/**\n * Set description\n *\n * @param string $description\n *\n * @return ProjectTranslation\n */\npublic function setDescription($description)\n{\n    $this->description = $description;\n\n    return $this;\n}\n\n/**\n * Get description\n *\n * @return string\n */\npublic function getDescription()\n{\n    return $this->description;\n}\n\n\n/**\n * Set slug\n *\n * @param string $slug\n *\n * @return ProjectTranslation\n */\npublic function setSlug($slug)\n{\n    $this->slug = $slug;\n\n    return $this;\n}\n\n/**\n * Get slug\n *\n * @return string\n */\npublic function getSlug()\n{\n    return $this->slug;\n}\n\n}\n```\nand my config\na2lix_translation_form:\n    locale_provider: default\n    locales: [en, fr]\n    default_locale: fr\n    required_locales: [en]\n    templating: \"@A2lixTranslationForm/bootstrap_4_layout.html.twig\"\nAnd for EasyAdmin\nProject:\n            class: AppBundle\\Entity\\Project\n            list:\n                title: 'Projets'\n                fields:\n                    - { property: 'cover', type: 'image', base_path: '%app.path.project_covers%' }\n                    - { property: 'name', label: 'Nom' }\n                    - { property: 'city', label: 'Ville' }\n                    - { property: 'country', label: 'Pays' }\n                    - { property: 'isFocused', label: 'Focus' }\n                    - { property: 'isPublished', label: 'Publication' }\n                    - { property: 'tags', label: 'Tags' }\n                sort: ['name', 'ASC']\n            form:\n                fields:\n                    - { property: 'translations', label: false, type: A2lix\\TranslationFormBundle\\Form\\Type\\TranslationsType }\n                    - { property: 'coverFile', label: 'Vignette', type: 'vich_image' }\n                    - { property: 'name', label: 'Nom du projet' }\n                    - { property: 'tags', label: 'Tags', type: 'easyadmin_autocomplete' }\n                    - { property: 'city', label: 'Ville' }\n                    - { property: 'region', label: 'R\u00e9gion' }\n                    - { property: 'country', label: 'Pays', type: 'country' }\n                    - { property: 'tech', label: 'Carat\u00e9ristiques techniques', type: 'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType', type_options: { config_name: 'tech_config' } }\n                    - { property: 'description', label: 'Description', type: 'FOS\\CKEditorBundle\\Form\\Type\\CKEditorType' }\n                    - { property: 'medias', label: 'Slider', type: 'collection', type_options: { entry_type: 'AppBundle\\Form\\ProjectMediaType', by_reference: false } }\n. ",
    "kix": "@reypm, did you try overriding the templates via configuration? I think this should work:\neasy_admin:\n    design:\n        templates:\n            # Used to decorate the main templates (list, edit, new and show)\n            layout:               your_layout.html.twig. ",
    "erichard": "Would it be possible to filter the autocomplete depending on the entity you are editing ? . Would it be possible to filter the autocomplete depending on the entity you are editing ? . ",
    "binarious": "@erichard No that isn't possible directly. Since you only get the following details from the request object:\n?action=autocomplete&entity=YOUR_ENTITY_CLASS&query=YOUR_QUERY\nAdditionally it's not possible to join before filtering. You can only filter on already joined associations with $dqlFilter.. ",
    "dragosprotung": "How about just a simple controller method get<EntityName><Action>TemplateParameters ?. I had dificulties running the tests locally. I got \n\nSymfony\\Component\\Config\\Definition\\Exception\\InvalidConfigurationException: Unrecognized option \"0\" under \"easy_admin\"\n\nfor every test where the admin config was loaded.\nI tried to fix them, but no luck.\nIn the end I ran them on Travis only but it made it very difficult. Thanks! . ",
    "scaytrase": "@yceruto Yes, we did a workaround in a style like this. ",
    "ricard-apr": "I'm using the 1.17 version and I get this problem also. All theses next translations I had to put inside also in messages.yml. I think it only happens in the createing/editing mode. Apparently in the listing mode it's taking correctly from easyadmin.yml, so, these tags I had to declare it aswell in the easyadmin.yml file, being finally duplicated.\n```yaml\nmessages.es.yml\nMenuOption: 'Opci\u00f3n de Men\u00fa'\nMenuOptionEntity:\n label: 'Opci\u00f3n de Men\u00fa'\n list:\n  help: \"Las urls y los roles deben existir y coincidir en el valor con el que aparece en el c\u00f3digo (en las 'annotations')\"\nParametersEntity:\n label: 'Par\u00e1metros'\nParameters: 'Par\u00e1metros'\nUser: 'Usuario'\nUserEntity:\n label: 'Usuario'\n```\n```yaml\nconfig.yml\neasy_admin:\n site_name: Admin\n translation_domain: 'easyadmin'\n design:\n  brand_color: '#006699'\n  form_theme: 'vertical'\n list:\n  actions:\n   - { name: edit, icon: pencil}\n   - { name: delete, icon: trash}\n  max_results: 30\n entities:\n  MenuOption:\n   class: AppBundle\\Entity\\MenuOption\n   label: MenuOptionEntity.label\n   list:\n    help: MenuOptionEntity.list.help\n  Parameters:\n   class: AppBundle\\Entity\\Parameters\n   label: ParametersEntity.label\n  User:\n   class: AppBundle\\Entity\\User\n   label: UserEntity.label\n```\n\n. Thank you very much! It happens to me also and with your solution it was solved the problem.. Thank you very much! It happens to me also and with your solution it was solved the problem.. ",
    "phpPhil": "Hi,\nyes, I did - I have updated my original post to reflect this.. Thanks for helping me with this.\n\nI have removed getName() - as you said, this didn't affect anything.\nThis is the output of the inspection of the DOM behind the Url part of the form - as you can see it is detecting the collection, but does not insert a form to create a new entity:\n\n\nAny more ideas?. Hi Laurent,\nI have tried this and you are completely right... Renaming the type to for example \"UrlEntityType\" will fix the issue.\nform:\n        fields:\n            [...]\n            - { property: 'urls', type: 'collection', type_options: { entry_type: 'MyVendor\\MyBundle\\Form\\UrlEntityType', by_reference: false }  }\nAs you said, this is a problem (bug) and should not happen as I'm using the fully qualified namespace in the admin yaml config.\nThank you so much for your help!\nThis was driving me nuts :). Hi Anton,\nThis extension could possibly help you to achieve this. However, I have not tried it out myself.\n. Hi @laurent-bientz,\nJust had some time to revisit this broken code.\n\n\nYes, I do have those methods on the article entity and I do initialise the ArrayCollections:\n```\npublic function __construct()\n{\n    $this->urls = new ArrayCollection();\n   [...]\n}\n\n\n[...]\n/**\n * Add url\n *\n * @param Url $url\n *\n * @return Article\n */\npublic function addUrl(Url $url)\n{\n    $url->setArticle($this);\n\n    $this->urls[] = $url;\n\n    return $this;\n}\n\n/**\n * Remove url\n *\n * @param Url $url\n */\npublic function removeUrl(Url $url)\n{\n    $this->urls->removeElement($url);\n}\n\n/**\n * Get url\n *\n * @return \\Doctrine\\Common\\Collections\\Collection\n */\npublic function getUrls()\n{\n    return $this->urls;\n}\n\n```\n2. I tried orphanRemoval=true, but it does not solve the problem. Reading on the Doctrine documentation, it explains that it would only delete the Url record if I would delete the article. This is not the behaviour I'm looking for. I want to remove a URL on the Article form without removing the entire article entity.\nAny other ideas?. @blackatze93 : Yes, it is set to false.\n@laurent-bientz : Thanks, I just tried this and it solves the problem. I did try this previously but with a different result, at least that's what I remember.\nHowever, it works now and I can't reproduce a failure - so I'm blaming myself, I must have done something wrong :D\nThanks again for your help!. ",
    "nullziu": "@javiereguiluz, sorry to bother you, but I really need these translations. Any chance of getting this merged soon?. ",
    "hason": "@grachevko This doesn't work. The path is hard coded: https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Configuration/ConfigManager.php#L200. Fixed in https://github.com/javiereguiluz/EasyAdminBundle/commit/3d83921a2f106d23423437014b6c8349851b760e.. @javiereguiluz The problem is with workflow of twig_get_attribute function. We have a form view, which is represented by class FormView. This class implements the ArrayAccess and IteratorAggregate inteface. This class has the public property FormView::$children. If I add in a builder form field with the same name:\nphp\n$builder->add('children', ...);\ngenerated form view has structure:\nphp\nobject(FormView) implements ArrayAccess {\n    public $children = [\n        'children' => object(FormView),\n        // ...\n    ];\n}\nTwig expression {% for field in form.children %} is compiled to\nphp\nforeach ($form['children'] as $field) {}\nIn this case is executed method FormView::offsetGet('children') ($form->children['children']).\nBut we want to execute FormView->getIterator() ($form->children):\nphp\nforeach ($form as $field) {}\n\nThe correct lines in the same template:\n- 172\n- 181\n. @javiereguiluz The problem is with workflow of twig_get_attribute function. We have a form view, which is represented by class FormView. This class implements the ArrayAccess and IteratorAggregate inteface. This class has the public property FormView::$children. If I add in a builder form field with the same name:\nphp\n$builder->add('children', ...);\ngenerated form view has structure:\nphp\nobject(FormView) implements ArrayAccess {\n    public $children = [\n        'children' => object(FormView),\n        // ...\n    ];\n}\nTwig expression {% for field in form.children %} is compiled to\nphp\nforeach ($form['children'] as $field) {}\nIn this case is executed method FormView::offsetGet('children') ($form->children['children']).\nBut we want to execute FormView->getIterator() ($form->children):\nphp\nforeach ($form as $field) {}\n\nThe correct lines in the same template:\n- 172\n- 181\n. @grachevko Please, add support for priority: use Symfony\\Component\\DependencyInjection\\Compiler\\PriorityTaggedServiceTrait;.. @grachevko Can you please add priority values for all config passes? I want to register my config pass between PropertyConfigPass and ViewConfigPass.. @javiereguiluz This works only for templates from main namespace. This is BC.. ",
    "plamenh": "Attached Users & Jobs entities and symfony config.yml.\nBoth entities exhibit the same issue as described.\nJobs.php.txt\nUsers.php.txt\nconfig.yml.txt\n. I seem to have pinpointed the issue. It's got to do with some Users.php and Jobs.php methods relating to picture upload. The previous developer appparently used some logic of his own to deal with multiple file uploads, so this seems to have botched things. Now we will try to migrate to VichUploaderBundle, but the issue is definitely with us, not the bundle.. I seem to have pinpointed the issue. It's got to do with some Users.php and Jobs.php methods relating to picture upload. The previous developer appparently used some logic of his own to deal with multiple file uploads, so this seems to have botched things. Now we will try to migrate to VichUploaderBundle, but the issue is definitely with us, not the bundle.. Ok, my bad. Looks like everything I requested above is already implemented:\njust had to add the search field to the entity:\nPostcode:\n            class: App\\Entity\\Postcode\n            search:\n                fields: ['name']\n            list:\n                title: 'Postcode'\n                fields:\n                - id\n                - name\n            form:\n                title: 'Postcode'\nThis fixed both my gripes (search is very fast AND exact match returns proper result).\nThanks.. ",
    "vkhramtsov": "I would like to configure for example disabled actions. Currently I can disable action for all users in configuration, but I need to disable/enable actions for particular roles. Currently I can get configuration as array in EventListener/EventSubscriber, but cannot change this settings because bundle uses arrays internally. In case of using objects, we can change configuration object and (because php using objects by reference) we can easily adjust settings using ElentListeners/EventSubscribers. I'm not sure that I can currently do this trick without overriding parts of bundle.\nFor example, I have two roles:\n- ROLE_ADMIN\n- ROLE_USER\nI would like allow all actions on Entity for users with ROLE_ADMIN role, but at the same time I don't want to allow Delete action for users with ROLE_USER role. Currently I can disable action Delete for all users using configuration. I cannot change disabled actions settings using events. In case of objects, I can easily change settings in runtime by assigning/removing values in config object for example on PRE_INITIALIZE/POST_INITIALIZE events. What do you think about it?\nIn case I missed something, please correct me or propose other solution here. \nThank you.. @laurent-bientz Thank you very much. I will read it carefully later. After quick overview it looks like we need to overwrite parts of bundle (templates, controllers and so on) instead of just apply some small configuration adjustments during processing request. I prefer to write as less code as I can, so it is better to adjust configuration and use already tested bundle functionality\n@grachevko When configuration stored in cache? After finishing request or earlier? As an option bundle can save to cache configuration parsed from configuration files and not after processing request. So we can use configuration from cache as basis for adjustment in every request. So we can get the same workflow as current when we don't have configuration adjustments and a small overhead when we have adjustments.. @laurent-bientz I am not asking about any implementation of ACL in easyadmin. I'm just wondering about possibility to move configuration from array to objects. This will allow client programmer to change configuration in runtime using for example event handlers. Currently I cannot do this due to arrays, which is not changeable in runtime. \nI can create code for it, but according to policy I have to ask a question first.\nThank you. ",
    "allfreelancers": "Me help \norphanRemoval=true . Me help \norphanRemoval=true . @javiereguiluz Can you deploy the project at home?\nhttps://github.com/fre5h/DoctrineEnumBundle/issues/102\n@fre5h did a test repository and you can add easyadmin and test stack trace?. php\n    /**\n     * \u0421\u0442\u0430\u0442\u0443\u0441\n     * @ORM\\Column(name=\"status\", type=\"ProjectStatusType\", nullable=false)\n     * @DoctrineAssert\\Enum(entity=\"AF\\Bundle\\ProjectBundle\\DBAL\\Types\\ProjectStatusType\")\n     */\n    private $status = ProjectStatusType::DRAFT;\nand\n``` php \nnamespace AF\\Bundle\\ProjectBundle\\DBAL\\Types;\nuse Fresh\\DoctrineEnumBundle\\DBAL\\Types\\AbstractEnumType;\nclass ProjectStatusType extends AbstractEnumType\n{\n    const DRAFT = 'draft';\nprotected static $choices = [\n    self::DRAFT => 'Draft'\n];\n\n}\n```. ",
    "josamanun": "It is JSP (sorry for no specificate it) when i use path the html receive name. I cant use name in a form:input.\nHere is another example of form:input without use dateTimePicker:\n<form:input path=\"phone\" type=\"text\" class=\"form-control\" placeholder=\"${ph_Phone }\" />\nAnd that works fine. But using dateTimePicker dont.\n\n\n\nEven using an input tag the error persist.\n<input name=\"birthdate\" data-field=\"date\" type=\"text\" class=\"form-control\" placeholder=\"${ph_Birthdate }\"/>\n. I solved this problem.\nI had two different kind of DateTimePicker, one for large-screen and one for mobile-screen so i had two input for the same path/name and that was the problem. I have commented one of them and the submit works fine.. ",
    "int99h": "fix text messages\napp/config/config.yml:\nparameters:\n    locale: en\nfix view\nterminal in project dir\nphp bin/console assets:install --symlink. fix text messages\napp/config/config.yml:\nparameters:\n    locale: en\nfix view\nterminal in project dir\nphp bin/console assets:install --symlink. @CAPrefeito what about nginx/apache config?. ",
    "tantanito": "Thanks for the reply, but still no success. What could I add here to further debug the problem.. Thanks for the reply, but still no success. What could I add here to further debug the problem.. @laurent-bientz Thanks. The ids' fixed but the easy admin layout is still messy, the sidebar is still not in place.. @laurent-bientz, I re-created my project to trace where I went wrong, still still not fixing itself.\nI followed all the instructions:\n * enabled the bundle in the Kernel\n adding the easy admin route\n double checked, \n@int99h , app/config/config.yml:\nparameters:\n    locale: en\n\n\nadded, \n@laurent-bientz , \nframework:\n    translator: { fallbacks: ['%locale%'] }\n\n\ncompiled assets with, php bin/console assets:install --symlink\n\ncleared the cache, php bin/console c:c && php bin/console c:c --env=prod\n\nAnd I still got this result.\n\n. @laurent-bientz, i'm on windows, localhost and the /web/bundles/easyadmin/ exists too. \nI also followed your sugggestion with @javiereguiluz to check the profiler.\nAnd I got this:\n* error 404\n. @int99h , @laurent-bientz, @javiereguiluz,\nHello, I resolved the issue after watching some easyadmin tutorials on youtube it was in FR and I didnt understand, but then I observed his url \"web/app_dev.php/\" so I remove the Virtual Host and the Host file configs thingy and it worked.\nClarifications:\n* When do we use Virtual Host and Host files? As I observed some tutorials always starts with configuring those files.\nThanks.. ",
    "CAPrefeito": "Hello all,\nI'm very begginer in symfony and easyadminbundle, I've created many tests examples and everything worked very well.\nBut now, I'm facing with the same issue, my template layout is messy and I got the error 404 for css files too. I've followed all instructions above but no luck.\nCould you please give me more details how was solved this issue? \nI've re-created my projects a lot of times, but I get the same issue always.\nI'm using the following tools:\nPHP 7.2.4\nSymfony 4.1.2\nThank you so much.. Hello all,\nI'm very begginer in symfony and easyadminbundle, I've created many tests examples and everything worked very well.\nBut now, I'm facing with the same issue, my template layout is messy and I got the error 404 for css files too. I've followed all instructions above but no luck.\nCould you please give me more details how was solved this issue? \nI've re-created my projects a lot of times, but I get the same issue always.\nI'm using the following tools:\nPHP 7.2.4\nSymfony 4.1.2\nThank you so much.. ",
    "tacman": "@sagarlimaye did you find a solution to this?. Closing this, because the problem was related to an incorrect doctrine annotation.. I created a pull request for this.. I loved the collapsible menu.  I understand about not making it full\nresponsive, but the lists benefit tremendously from being able to hide the\nsidebar.  The app is basically list, edit, show, and in all those cases,\nreal estate on small screen is precious, and simply hiding the sidebar is\nan easy way to get some of that space.\nIs it possible to use the old theme in version 2?\nOn Fri, Nov 23, 2018 at 2:10 PM Javier Eguiluz notifications@github.com\nwrote:\n\n@tacman https://github.com/tacman this is one of those cases where \"it's\nnot a bug, but a feature\". Not making the menu collapsible (and not\nmaking the design responsive) was a deliberate decision.\nI'm not planning to change this for now, but I'll keep listening to the\nfeedback from users, so I appreciate your issue.\n(Somewhat related to this, there are some CSS variables to control the\nlayout design: you can very quickly redefine the width of the menu and the\nmax-width of the main content. See\nhttps://symfony.com/doc/master/bundles/EasyAdminBundle/book/design-configuration.html#customizing-the-backend-design\n).\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/EasyCorp/EasyAdminBundle/issues/2431#issuecomment-441305252,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAl0QeSuvXUELx6uJxbiIkqFbemgj9DCks5uyEgKgaJpZM4Ywv-n\n.\n. Yeah, the old form was similar to Google Sheets -- a wide table with lots\nof data.  The new version has less data and lots more whitespace, and is\nmuch less useful.\n\nOn Mon, Dec 3, 2018 at 7:48 AM Vasja Laharnar notifications@github.com\nwrote:\n\nI also miss the responsive design. And I liked the full width of the\nfields. Now the form part of the content column is so narrow, it's almost\nimpossible to fit a table in there.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/EasyCorp/EasyAdminBundle/issues/2431#issuecomment-443698553,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAl0QeznWLK7VVOUmmlCIz1wfzHGKkljks5u1R2FgaJpZM4Ywv-n\n.\n. Yep, that works for me in version 2, thanks!\n\nOn Tue, Dec 4, 2018 at 9:08 AM Javier Eguiluz notifications@github.com\nwrote:\n\n@tacman https://github.com/tacman I can't reproduce this error. The\ngiven config doesn't work for me in 1.x. However, the following config\nworked for me both in 1.x and 2.x:\n\n{ property: 'site', type_options: { disabled: true } }\n\nI'm closing as \"solved\" but please, tell me if the error persists with the\nnew config. Thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/EasyCorp/EasyAdminBundle/issues/2437#issuecomment-444111781,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAl0QYPhDKxyAWAgtUlhdNd-mCZJo8oKks5u1oHSgaJpZM4YxkN7\n.\n. \n",
    "chrisyue": "I think it's because easy admin guess the date/time/datetime type by the property name.\nthere's another date field publishedOn, which suffix with an 'On', it's value is correctly displayed as yyyy-mm-dd. ",
    "MedUnes": "OK, I'm finding some clues..\nNow stuck with the point on how to render a form field in both the new and edit actions, including the  wrapping (field groups)\nI tried a simple form_widget(form.field_name) but it rendered the field without the surrounding box styling. Thanks for the link\nIt is very loose and general purpose, doesn't really answer MY QUESTION.. ",
    "san-developer": "I did it with overriding form theme, then blocks I needed. . But Javier, problem is inside EasyAdminBundle, not in my custom code.\n\nin vendor/javiereguiluz/easyadmin-bundle/Resources/views/default/list.html.twig (line 5)\n\nAnd on line 5 is:\n{% extends _entity_config.templates.layout %}\nThat's why I opened new issue. Should we  change or override bundle content when we get such error? \nI thought, you will update bundle to be compatible with latest twig. \n. ",
    "alkemist": "Sorry, I didn't find the PR\n1.16.10 version date of 29 May\nAnd #1657 date of 31 May and was merged on Jul 7\nOk, so, it's fixed but I'll have to wait the next version :/\nThanks (and sorry for my english ^^\"). ",
    "Cethy": "I have the same problem, here is my config :\nphp 7.1.7\nsymfony v3.3.4\neasyadmin-bundle v1.16.10\neasy_admin:\n    list:\n        actions: ['show', 'search', '-new', '-edit', '-delete']\n    entities:\n        Category:\n            list:\n                actions: ['new']\nAs per the doc, New Category should be displayed on Category list, but it's not.. It does fix my issue. Thanks !. It does fix my issue. Thanks !. Oh, right. I didn't think about it the right way, I just implemented it and it's working nicely. Thanks !. ",
    "takali": "thanks you both !. ",
    "CyberBLN": "You can implement the createNewForm() method in AdminController or create a custom controller for your entity, see http://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html for details how to do it.. ",
    "drgomesp": "```yaml\neasy_admin:\n  entities:\n    Category:\n      class: 'Category'\n      label: 'Categories'\n      list:\n        title: '%%entity_label%%'\n        actions:\n          - { name: 'show', label: '', icon: 'search' }\n          - { name: 'edit', label: '', icon: 'edit' }\n          - { name: 'delete', label: '', icon: 'trash' }\n        fields:\n          - 'id'\n          - { property: 'name', label: 'Label' }\n          - { property: 'parent', label: 'Parent category' }\n          - 'children'\n      show:\n        fields:\n          - 'id'\n          - { property: 'name', label: 'Label', css_class: 'large' }\n          - { property: 'parent', label: 'Parent category' }\n          - 'children'\n      form:\n        fields:\n          - { type: 'group', css_class: 'col-sm-4' }\n          - { property: 'name', label: 'Label', css_class: 'large', help: 'As displayed on the website (the slug is auto-generated)' }\n          - { property: 'parent', type: 'easyadmin_autocomplete', label: 'Parent category', type_options: {required: false} }\n```. Any ideas?. ",
    "arcovoltaico": "So as you suggest, adding this to the entity:\n   public function __construct() {\n        if (!$this->start) {\n            $this->start= new  \\DateTime();\n        }\n    }\nthe form now is rendering the field with the current date. I thought that the construct would be applied only during persisting,  that's why I missed this nice option. Thanks a lot!\n. ",
    "fre5h": "@allfreelancers Check this temporary solution for you https://github.com/fre5h/DoctrineEnumBundle/issues/102#issuecomment-319901012. ",
    "JulienMarliac": "Hi,\nI was wondering too if referer can be disabled. (looks like no) . \nThe main reason I want to disable it is for security matter : the referer redirect without checking. So users can be vulnerable to some phishing with a malicious redirect set. \nSo It could be nice to be able to disable the referer or to set some kind of domains whitelist for the referer. . @grachevko  Yeah but I will be ok with your idea \" Ability to force enable/disable adding referer by set {referer: true/false} \" :) . ",
    "Comtoo": "Thank you @ipesanz it works like a charm !!!. @iluuu1994 Oops, its works sorry, CKEditor generates a  tag !\nThanks a lot :). ",
    "carlotodeschini": "Got it!\nI forgot to include \nuse Symfony\\Component\\HttpFoundation\\Request;\nat the beginning of my \"AdminController.php\" file. I'm learning Symfony too... ;-)\nThanks,\nCarlo. Thanks to you!\nDidn't know PHPStorm (I'm using sublime), I will take a look,\nCarlo. @yceruto Yes, tested and it works like a charm, thanks\ntode. ",
    "enrique-esteban": "It was my error, sorry, I did it and I had a custom theme to twig in my config file, noob fail hehe. And sorry, I could have said something here.\nI have another problem now with collection type and a one-to-many relation following this Issue (#851). I'm trying to solve it, if I do not get it I'll ask about it here.\nTy for you help.. Tyvm @javiereguiluz  and @crowdbytes  . ",
    "tristanbes": "is there anything preventing this PR to be merged @javiereguiluz ?. is there anything preventing this PR to be merged @javiereguiluz ?. Enjoy ! . Enjoy ! . my pleasure. was no big deal to wait, I just used my fork. Hope you like your \ud83c\udfd6 . but will it work knowing that no tag exist yet for 4.x ? Also, using the minimum stability settings may impact a lot of user packages, or maybe i'm wrong ?. ",
    "iluuu1994": "I think this is because CKEditor uses p-Tags instead of br-Tags for line breaks by default. This means that if you leave this field empty there is an opening and closing p-Tag (<p></p>). So it's technically not empty. You can change this configuration like so:\njavascript\nconfig.enterMode = CKEDITOR.ENTER_BR;\nLet me know if this works.. I think this is because CKEditor uses p-Tags instead of br-Tags for line breaks by default. This means that if you leave this field empty there is an opening and closing p-Tag (<p></p>). So it's technically not empty. You can change this configuration like so:\njavascript\nconfig.enterMode = CKEDITOR.ENTER_BR;\nLet me know if this works.. @Comtoo Have you verified in your source code that the CKEdtitor generates <br> tags and not <p> Tags?. Ah, just noticed that if you open the Symfony docs using HTTPS the image is displayed correctly. So I'm guessing Symfony's fault.\nhttps://symfony.com/doc/current/bundles/EasyAdminBundle/book/your-first-backend.html. Ah, just noticed that if you open the Symfony docs using HTTPS the image is displayed correctly. So I'm guessing Symfony's fault.\nhttps://symfony.com/doc/current/bundles/EasyAdminBundle/book/your-first-backend.html. Ok no that was probably cache. Now both are working correctly \ud83d\ude05. Ok no that was probably cache. Now both are working correctly \ud83d\ude05. @ktrzos No, I don't have anything working. Doing it manually probably works. It's just not very convenient.\n@javiereguiluz Yeah I'm not super happy with Gedmo translatable either. The thing that makes it stand out from the others is the TranslatableWalker, allowing you to forget about translations and making existing entities translatable without having to rewrite all the queries in your code base.\nI'd prefer a library that stores all the translation values of an entity in the same tuple. \nThis would allow you to:\n\nKeep the types (Gedmo uses nvarchar for everything)\nKeep any constraints\nTranslate relations, not just primitive values\nDramatically reduce the number of required JOINs\n\nI'm experimenting a little. Seems like a lot of work though... \ud83d\ude15. @javiereguiluz Ok \ud83d\udc4c. Sounds great! Thanks!. Sounds great! Thanks!. From the README file:\n\nDoctrine ORM entities (Doctrine ODM and Propel not supported).\n\nSo, no.. I tried it quickly yesterday and it seemed to work. It wasn't more than 10 lines of code. \nAlso, I need to look into the implementation of deviders and sections to make sure those cases keep working as expected. Also, I guess this is a breaking change because Symfony type guessers might guess types differently than they have been before.. Sure. I'll create a pull request and then we can decide what to do with it.. Here is it:\nhttps://github.com/javiereguiluz/EasyAdminBundle/compare/master...iluuu1994:feature/symfony-type-guesser\nMore code was required than expected, especially to minimize any backward compatibility issues. Also, turns out you were using the type guesser already in the EntityTypeConfigurator but only for entity form types.\nThe main difference now is that type guessing is done for all fields now and that it is done in the warmup phase. So this could result in a small performance boost but probably very minimal. I haven't tested this though.\nI'm not sure the additional complexity is worth it. I'll let you decide if you want to merge it or not.. @javiereguiluz Have you decided on whether you want to merge this? \ud83d\ude05. @javiereguiluz Have you decided on whether you want to merge this? \ud83d\ude05. Yes, I will do that!. Yes, I will do that!. The pull request was merged \ud83d\ude04 . The pull request was merged \ud83d\ude04 . @javiereguiluz Any idea why the build isn't finishing?. @javiereguiluz Any idea why the build isn't finishing?. @javiereguiluz That's weird. It's also not the only one that never finishes.. Finally \ud83d\ude05. @javiereguiluz Are you still interested in this PR? Is so I'll have to rebase it to solve the conflicts.. Np, I'll wait until #1787 is merged then?. @javiereguiluz I do not need to add new files to the legacy folder, right? Since people referencing it should use the new namespace right away.. @stepotronic The JavierEguiluz\\ is deprecated. Did the example not work for you as expected?. @stepotronic The JavierEguiluz\\ is deprecated. Did the example not work for you as expected?. @alterphp I'll have a look at this tonight.. @alterphp I'll have a look at this tonight.. The ConfigManagerTest compares the generated config files using assertArraySubset:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/a136ff504af85acf2e486509863cadcbd0627b18/tests/Configuration/ConfigManagerTest.php#L38\nThis is suboptimal because it only checks if certain chunks are missing from the config but not if they are superfluous, as in this case.\n@javiereguiluz Would it be worth it to adjust the generated output so that we can avoid bugs like these in the future? It's quite a lot of tests, I'd imagine that to be a painful process.. The ConfigManagerTest compares the generated config files using assertArraySubset:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/a136ff504af85acf2e486509863cadcbd0627b18/tests/Configuration/ConfigManagerTest.php#L38\nThis is suboptimal because it only checks if certain chunks are missing from the config but not if they are superfluous, as in this case.\n@javiereguiluz Would it be worth it to adjust the generated output so that we can avoid bugs like these in the future? It's quite a lot of tests, I'd imagine that to be a painful process.. @javiereguiluz I see, that makes sense. I can of course write separate tests to fix this edge case.. @javiereguiluz I see, that makes sense. I can of course write separate tests to fix this edge case.. I wasn't able to fix this today. I'll have another look tomorrow.. I wasn't able to fix this today. I'll have another look tomorrow.. @alterphp Thank you for this fix!. I investigated this.\nTurns out this is because form fields are required by default and the RequiredOptionConfigurator was removed.\nThis could be solved by adding 'required' => false to the default config.. I'm running the tests and I'll create a pull request. Afterwards I'll think about a way to test this to avoid the same bug in the future.. @JoeKre @COil Can you check if this patch solves your issue?. @alterphp Yes. The default value from the $defaultEntityFieldConfig is overwritten by the guessed property form type here unless the property doesn't exist (as in virtual properties).\nMaybe it would be better to add it to the $defaultVirtualFieldMetadata array? That would probably cause less confusion.. @COil I don't have merge privileges. \n@javiereguiluz Would you prefer the required => false default value to be in $defaultVirtualFieldMetadata? I don't have time until later tonight to make this change.. @javiereguiluz Voil\u00e0. Can you merge and tag?. @naitsirch That and you should always jump to the first tab that containing a validation error. This way you'll never see a tab containing no error, looking like the submission was successful.. It works fine in Safari, Firefox and Chrome. I have not tested IE and Edge though.. @javiereguiluz Good catch! Should be fixed now.. Cool, thank you \ud83d\udc4d . I think it's quite rare to not modify the default configuration EasyAdmin creates for you. Unfortunately, as soon as you tweak the configuration the usefulness of this annotation goes out the window.\nThat is unless you allow passing arbitrary entity configuration into the annotation:\nphp\n/**\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\ProductRepository\")\n * @AdminResource({\n *     \"list\"={\n *         \"fields\"={\n *             \"title\",\n *             ...\n *         }\n *     }\n * })\n */\nclass Product\n{\n}. @grachevko Yeah sure. However I think this makes things overly complicated. For example: \n\nHow would you adjust the order of the fields?\nWhat about all of the non-property configuration?\nWhat about virtual properties?\nWhat about different property configs per action?\n\nI'm sure these issues could be solved in some way or another. However keeping the entire config in the class annotation would allow us to just merge it just like every other config in EasyAdmin. This would cause the least confusion and require very little work.. @forsetius Sure, I'm pretty positive that the Doctrine annotation parser allows adding the same annotation twice to a class (haven't tested it though).. @forsetius Yeah, sorry. I didn't get that. You'd need an optional annotation property for configuring the alias of the configured entity.\n\nI'm worrying that resulting annotations for each field would be too convoluted if we'd have to define them separately for each EA entry :(\n\nNot sure what you mean by that. That's what you have to do right now in YAML as well, don't you? Also, EasyAdmin still infers a whole lot of things for you.. @grachevko \nA few examples why this isn't a good idea:\n\nHow do I display virtualField before id? (Please don't say change the order of the properties \ud83d\ude02)\nHow can I add an additional action?\nWhy is the @EA\\Property annotation on the getter and not the setter?\n\nIMHO this just feels very inconsistent and overly complicated. Additionally there's just a lot of things that couldn't be configured this way.. > I'm not sure it's worth it.\nMe neither. Not only does the complexity increase quite a bit it is also inconsistent with the YAML configuration. Especially the mixing of different entities and actions makes it very unreadable IMHO.\n\nThe only annotation's advantage I can see is that it comes in one place with model's and Doctrine entity's definition.\n\nBut then again, we could always allow the user to pass the entity config in one piece into the @EA\\Entity annotation. This way it's still in the same file.. There's an entry in the documentation on how to integrate FOSUserBundle. Basically, you need to call the updateUser function of the fos_user.user_manager every time your entity changes:\n```php\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    public function createNewUserEntity()\n    {\n        return $this->get('fos_user.user_manager')->createUser();\n    }\npublic function prePersistUserEntity($user)\n{\n    $this->get('fos_user.user_manager')->updateUser($user, false);\n}\n\n}\n```\nThe user manager takes care of encrypting the password.. There's an entry in the documentation on how to integrate FOSUserBundle. Basically, you need to call the updateUser function of the fos_user.user_manager every time your entity changes:\n```php\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    public function createNewUserEntity()\n    {\n        return $this->get('fos_user.user_manager')->createUser();\n    }\npublic function prePersistUserEntity($user)\n{\n    $this->get('fos_user.user_manager')->updateUser($user, false);\n}\n\n}\n```\nThe user manager takes care of encrypting the password.. @kamalkech The current release of FOSUserBundle is not yet compatible with Symfony 4, nothing you can do about it. Master seems to be compatible though so there may be a release coming soon.. I'm not sure exactly what problem you're having. You shouldn't even be able to install FOSUserBundle via Composer if you're using Symfony 4.0. Check if your AdminController is actually called.. > I intend to continue doing that regularly. But if want to do it yourself, go ahead.\nNice! Let's try to use level 0 and work our way up from there.\n\nHowever, we won't do changes that make the code worse just to make a static analyzer happy.\n\nThat makes sense.\nphp\nif ($form->get('saveAndCreateNew')->isClicked()) {\n    ...\n}\nI like to do an assert over PHPDoc blocks for type hinting because it adds an actual type check and not just a hint:\n```php\n$saveAndCreateNewButton = $form->get('saveAndCreateNew');\nassert($saveAndCreateNewButton instanceof SubmitButton);\nif ($saveAndCreateNewButton->isClicked()) {\n    ...\n}\n```\nassert calls are also omitted in the generated opcodes in production environments.\nPHPStan is right here after all, we have no guarantee that $form->get('saveAndCreateNew') will actually return a SubmitButton. I know that's nitpicking, it probably comes down to personal preference.\nYou can also write your own reflection extensions in PHPStan which means we could try to infer the correct type automatically in calls like $form->get('saveAndCreateNew'). I'm not sure how easy that would be though.. > I intend to continue doing that regularly. But if want to do it yourself, go ahead.\nNice! Let's try to use level 0 and work our way up from there.\n\nHowever, we won't do changes that make the code worse just to make a static analyzer happy.\n\nThat makes sense.\nphp\nif ($form->get('saveAndCreateNew')->isClicked()) {\n    ...\n}\nI like to do an assert over PHPDoc blocks for type hinting because it adds an actual type check and not just a hint:\n```php\n$saveAndCreateNewButton = $form->get('saveAndCreateNew');\nassert($saveAndCreateNewButton instanceof SubmitButton);\nif ($saveAndCreateNewButton->isClicked()) {\n    ...\n}\n```\nassert calls are also omitted in the generated opcodes in production environments.\nPHPStan is right here after all, we have no guarantee that $form->get('saveAndCreateNew') will actually return a SubmitButton. I know that's nitpicking, it probably comes down to personal preference.\nYou can also write your own reflection extensions in PHPStan which means we could try to infer the correct type automatically in calls like $form->get('saveAndCreateNew'). I'm not sure how easy that would be though.. @javiereguiluz Totally understandable. It actually also looks like I wouldn't have time for it anytime soon anyway.. @javiereguiluz Totally understandable. It actually also looks like I wouldn't have time for it anytime soon anyway.. Shouldn't the type_options be completely overwritten even when the type was not provided? Or should it merely be overwritten if the type is provided?. ",
    "r0kan": "+1. ",
    "evolutasrl": "+1. ",
    "maccer83": "I agree that the technical details should remain in the log message, but I still believe that even the error shown to the end-user could be improved to be more helpful without making it overly complex. Also, EasyAdmin is about admin pages, and admins are not \"ordinary\" end-users. \nThe end-user message could include the entity name (or whatever name is set up in EasyAdmin preferences) that the foreign key refers to. For example, if I have a User is connected to one or more Posts, the message could read: This User item can't be deleted because there are Post items that depend on it... I agree that the technical details should remain in the log message, but I still believe that even the error shown to the end-user could be improved to be more helpful without making it overly complex. Also, EasyAdmin is about admin pages, and admins are not \"ordinary\" end-users. \nThe end-user message could include the entity name (or whatever name is set up in EasyAdmin preferences) that the foreign key refers to. For example, if I have a User is connected to one or more Posts, the message could read: This User item can't be deleted because there are Post items that depend on it... ",
    "Zausenec": "Not only this place, still:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/bfe5f7c293e53d021c67cde60334eef45544b1ac/Configuration/TemplateConfigPass.php#L47\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/bfe5f7c293e53d021c67cde60334eef45544b1ac/Configuration/ViewConfigPass.php#L245-L247\nAnd there is no template like https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/default/field_json_array.html.twig but can be reused existing.. Not only this place, still:\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/bfe5f7c293e53d021c67cde60334eef45544b1ac/Configuration/TemplateConfigPass.php#L47\nhttps://github.com/javiereguiluz/EasyAdminBundle/blob/bfe5f7c293e53d021c67cde60334eef45544b1ac/Configuration/ViewConfigPass.php#L245-L247\nAnd there is no template like https://github.com/javiereguiluz/EasyAdminBundle/blob/master/Resources/views/default/field_json_array.html.twig but can be reused existing.. ",
    "crowdbytes": "Hi enrique,\ndealing with same problem here. After hours of research I have found this ticket:\nhttps://github.com/javiereguiluz/EasyAdminBundle/issues/1278#issuecomment-242334673\nThe problem is the bidirectionnal setup of your relationship. You need to adapt a setter to the correct entity. I'm quoting from the link:\n```php\n   /\n     * Add evtdate\n     \n     * @param \\AppBundle\\Entity\\Evtdateate $evtdate\n     \n     * @return Evenement\n     */\n    public function addEvtdate(\\AppBundle\\Entity\\Evtdate $evtdate)\n    {\n        $this->evtdates[] = $evtdate;\n        $evtdate->setEvenement($this); // Add this line\n    return $this;\n}\n\n```\nThis resolved the exact same issue for me. Hope I could help.. ",
    "JoeKre": "@dfinfo \nDo you have this performance issue only within the EasyAdmin itself? I'm also experiencing a massive performance drop after updating to 1.16.13 but it is not limited to the admin. \nFor example my homepage in dev environment takes about 550ms according to the debug toolbar with 1.16.12. \nWith 1.16.13 the same page takes 3.5 seconds to load. \nAccording to the built-in profiler the time is spent in Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener\nBut this seems to happen only once per request. For example my homepage has 2 sub-requests. Only the first sub-request has this long runtime for the Listener, while the master request and second sub request look fine. \nIf there are no sub requests on the page the ProfilerListener of the master request takes the time. \nI didn't have the time to investigate this any further for now so i rolled back to 1.16.12 like you but you are definitely not alone with this issue.  \nEdit: \nLooking further into it you are right @dfinfo . It all comes down to the changes in TemplateConfigPass. I'm also trying to pinpoint it further within my app.. @dfinfo \nMay i know how many entities are managed by easyadmin in your app? \nI've got 16 in mine. Even though everything slows down with 1.16.13 it still works here on my end. \nI think you won't be able to isolate the cause by looking at each entity seperately because the number of managed entities and the lookup change itself are the problem. \n. @javiereguiluz \nDev Environment with xdebug enabled:\nhttps://blackfire.io/profiles/faaf57d1-0ff0-4f31-aa68-aa8e5f42aead/graph\nDev Environment without xdebug enabled:\nhttps://blackfire.io/profiles/6cccbd75-85bc-442a-8e5b-4114465fa703/graph\nFirst time using blackfire so i don't fully know what i'm seeing here but maybe you can identify something. . @javiereguiluz \nDev Environment with xdebug enabled:\nhttps://blackfire.io/profiles/faaf57d1-0ff0-4f31-aa68-aa8e5f42aead/graph\nDev Environment without xdebug enabled:\nhttps://blackfire.io/profiles/6cccbd75-85bc-442a-8e5b-4114465fa703/graph\nFirst time using blackfire so i don't fully know what i'm seeing here but maybe you can identify something. . No Xdebug here but dev environment:\nhttps://blackfire.io/profiles/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c/graph (1.16.12)\nhttps://blackfire.io/profiles/717c7a6b-c082-4f77-9b6e-e702cdc6aa4f/graph (1.16.13)\nand the comparison (if the link works):\nhttps://blackfire.io/profiles/compare/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c...717c7a6b-c082-4f77-9b6e-e702cdc6aa4f/graph. No Xdebug here but dev environment:\nhttps://blackfire.io/profiles/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c/graph (1.16.12)\nhttps://blackfire.io/profiles/717c7a6b-c082-4f77-9b6e-e702cdc6aa4f/graph (1.16.13)\nand the comparison (if the link works):\nhttps://blackfire.io/profiles/compare/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c...717c7a6b-c082-4f77-9b6e-e702cdc6aa4f/graph. @javiereguiluz \nNo Problem, rather i have to thank you for your work on this awesome bundle :). @javiereguiluz \nNo Problem, rather i have to thank you for your work on this awesome bundle :). @javiereguiluz \nSure. I'll add the fix first thing tomorrow morning once i'm back in the office and provide a new profile. . @javiereguiluz \nSure. I'll add the fix first thing tomorrow morning once i'm back in the office and provide a new profile. . @javiereguiluz \nHere's the profile for the patched version:\nhttps://blackfire.io/profiles/39fbd7be-9e8f-4b3d-a8fe-d496426b4a38/graph\n1.16.13 unpatched  compared to patched:\nhttps://blackfire.io/profiles/compare/717c7a6b-c082-4f77-9b6e-e702cdc6aa4f...39fbd7be-9e8f-4b3d-a8fe-d496426b4a38/graph\n1.16.12 to 1.16.13 patched:\nhttps://blackfire.io/profiles/compare/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c...39fbd7be-9e8f-4b3d-a8fe-d496426b4a38/graph\nIt's an improvement for sure but still noticeable worse then 1.16.12. \nMaybe something around this idea may be an option:\n// 3rd level priority: app/Resources/views/easy_admin/<entityName>/<templateName>.html.twig\n// 4th level priority: app/Resources/views/easy_admin/<templateName>.html.twig\n// 5th level priority: @EasyAdmin/default/<templateName>.html.twig\nFor lookups of 4th and 5th level would it be possible to do a glob of the directory contents and just do the existence lookup against the result instead of going through the TemplateLoader? \nThis way the lookups would only require a hash lookup in the array. \nFor 3rd level it would be possible to look for existence of the directory before looking up the template, while the directory lookup could also be cached in some way and if necessary even following with the same glob method for the contents as before. \nThis may not be the best solution but maybe a start in the right direction. What do you think?\nEDIT: \nFor 1st and 2nd level some caching for already searched templates may be helpful in real world applications, because some templates might be reused. Nevermind... of course the loader already does implement caching\nGreetings Joe. I'll give it a try tomorrow and deliver the results. \nThe thing is: I get devwill always be slower than prod but it effects all pages (i guess because of the debug toolbar integration).\n The homepage of my project, which has nothing to do with the easyadmin, at least triples the execution time (with the usual developer setup like xdebug active and die dev environment). That has quite a negative effect on dev experience sadly. \nDo you think there's a way to avoid that by skipping the lookups when not actually in the easyadmin part or an option to disable the toolbar integration? \nThat would probably be a viable solution for a lot of people including me. \nIn @dfinfo s' case where the whole appliaction is built on EasyAdmin that won't help at all :(. Hi Javier. \nHere's the new profile for 1.16.13 with both patches applied:\nhttps://blackfire.io/profiles/a583a606-da05-4b9e-81f8-d654e7b381b9/graph\nAnd the comparison with 1.16.12:\nhttps://blackfire.io/profiles/compare/19d68cd6-aa50-4ed7-a53f-50dfbbe2dd2c...a583a606-da05-4b9e-81f8-d654e7b381b9/graph\nNow for the production env profiles:\n1.16.13 (patch 1 & 2):\nhttps://blackfire.io/profiles/7ca9e156-25b9-4922-80e6-8fa4b01a79c5/graph\n1.16.12:\nhttps://blackfire.io/profiles/63c43ac0-1c76-485b-a463-315609bfb72c/graph\nAnd compare 1.16.12 to 1.16.13 in prod:\nhttps://blackfire.io/profiles/compare/63c43ac0-1c76-485b-a463-315609bfb72c...7ca9e156-25b9-4922-80e6-8fa4b01a79c5/graph\nIn production there are no concerning issues for sure. \nRegarding my homepage performance issue i'm sorry to say the increase in execution time is a result of the easyadmin changes. All dev environment profiles i provided you until now actually were done using the homepage and not within an easyadmin controller. \nThe TemplateConfigPass is in my case always executed within the dev environment, which makes it especially hard because of the missing cache. Isn't the execution of the configpass a result of the integration into the web debug toolbar? . @javiereguiluz \nI looked a bit further into the reason why processEntityTemplates is always executed while using dev environment regardless what part of an application gets executed. \nLike suspected the reason is found in EasyAdminDataCollector:\npublic function collect(Request $request, Response $response, \\Exception $exception = null)\n{\n    $backendConfig = $this->configManager->getBackendConfig();\n    ....\nThis leads to all ConfigPasses being processed and executes the template location even when not needed. \nDo you think there might be a way to prevent the TemplateConfigPass execution for the DataCollector? . @javiereguiluz \nAwesome! Thanks. :)\nI applied the changes and gave it a short run on my front page:\nhttps://blackfire.io/profiles/compare/a583a606-da05-4b9e-81f8-d654e7b381b9...d52ab2c9-d5be-4d5e-a1ea-a6f9177cc551/graph\nWorks just fine. . @alterphp \ni hope that's what you mean: \n```\narray:21 [\u25bc\n  \"css_class\" => \"\"\n  \"format\" => null\n  \"help\" => null\n  \"label\" => null\n  \"type\" => \"text\"\n  \"fieldType\" => \"textarea\"\n  \"dataType\" => null\n  \"virtual\" => true\n  \"sortable\" => false\n  \"template\" => null\n  \"type_options\" => []\n  \"form_group\" => null\n  \"columnName\" => \"field\"\n  \"fieldName\" => \"field\"\n  \"id\" => false\n  \"length\" => null\n  \"nullable\" => false\n  \"precision\" => 0\n  \"scale\" => 0\n  \"unique\" => false\n  \"property\" => \"field\"\n]\narray:11 [\u25bc\n  \"columnName\" => \"field\"\n  \"fieldName\" => \"field\"\n  \"id\" => false\n  \"length\" => null\n  \"nullable\" => false\n  \"precision\" => 0\n  \"scale\" => 0\n  \"sortable\" => false\n  \"type\" => \"text\"\n  \"unique\" => false\n  \"virtual\" => true\n]\narray:1 [\u25bc\n  \"property\" => \"field\"\n]\n```\nThat's for a simple property added to an entity \nprotected $field;\nwith it added to the entity configuration\nform:\n    fields:\n        - field. @alterphp \nSure: \n[]\nit's empty. \nLooking at the conditions in getFormTypeOptionsOfProperty that's to be expected. \n$userDefinedConfig['type'] isn't set and $userDefinedConfig['type_options'] is also undefined. So neither the if nor else if part are matched. And since the initial type_options were empty there's not much happening. . It looks like the required appears when the form is generated in editAction. \n$editForm = $this->executeDynamicMethod('create<EntityName>EditForm', array($entity, $fields));\nwith this configuration for a virtual field:\n\"field\" => array:21 [\u25bc\n    \"css_class\" => \"\"\n    \"format\" => null\n    \"help\" => null\n    \"label\" => null\n    \"type\" => \"text\"\n    \"fieldType\" => \"textarea\"\n    \"dataType\" => null\n    \"virtual\" => true\n    \"sortable\" => false\n    \"template\" => null\n    \"type_options\" => []\n    \"form_group\" => null\n    \"columnName\" => \"field\"\n    \"fieldName\" => \"field\"\n    \"id\" => false\n    \"length\" => null\n    \"nullable\" => false\n    \"precision\" => 0\n    \"scale\" => 0\n    \"unique\" => false\n    \"property\" => \"field\"\n  ]\nLooks like the FormBuilder defaults it to required. But i have not the slightest why the behavior changed. \n@javiereguiluz Do any other changes between 1.16.13 and 1.17.3 come to mind that may have affected this? Just downgraded again to confirm the difference once again to make sure i'm not going crazy. \n@alterphp I didn't check the vich bundle directly that was just an example where in  my case the virtual fields were used. But it also accurs when you just add a property to your doctrine entity without making it a doctrine managed field and add the property into the edit form through easyadmin.yml. Ok i identified the culprit. \nThe reason is this change https://github.com/javiereguiluz/EasyAdminBundle/commit/56809b2dce92fcee69399cf56b7f933c85e40521 in PropertyConfigPass\n$requiredGuess = $this->getFormRequiredGuessOfProperty($entityConfig['class'], $propertyName);\nis only executed in processMetaDataConfig. \nBut the virtual Fields are not part of the metaData from doctrine and are not handled at all. \nAs a short proof i added the following in the processFieldConfig method (line 194):\nif(array_key_exists('type_options', $normalizedConfig) \n    && !array_key_exists('required', $normalizedConfig['type_options'])) {\n    $normalizedConfig['type_options']['required'] = $this->getFormRequiredGuessOfProperty($entityConfig['class'], $fieldName)->getValue();\n}\nright before the call of\n$normalizedConfig['type_options'] = $this->getFormTypeOptionsOfProperty(\n    $normalizedConfig, $fieldMetadata, $originalFieldConfig\n);\nEdit: probably adding\nif(!array_key_exists('required', $normalizedConfig['type_options'])) {\n    $normalizedConfig['type_options']['required'] = $this->getFormRequiredGuessOfProperty($entityConfig['class'], $fieldName)->getValue();\n}\nafter the getFormTypeOptionsOfProperty-Call would be a good solution? . @iluuu1994 \nConfirmed. This solves the problem with virtual fields.\nThx. . @xabbuh \nJust stumbled across this problem in my app too. \nTested your fix and can confirm it's working. \nThanks for your work. . ",
    "vonalbert": "Usually this happens when the form uses a CollectionType which by default overrides the collection using the Reflection API.\nI have to check again to be sure (and ATM I can't), but you could try to change the option 'by_reference' for the cities child of the CountryType as described here https://symfony.com/doc/current/reference/forms/types/collection.html#by-reference .\nAdding it to the yaml configuration should do the trick :). Usually this happens when the form uses a CollectionType which by default overrides the collection using the Reflection API.\nI have to check again to be sure (and ATM I can't), but you could try to change the option 'by_reference' for the cities child of the CountryType as described here https://symfony.com/doc/current/reference/forms/types/collection.html#by-reference .\nAdding it to the yaml configuration should do the trick :). No problem! You're welcome \ud83d\udc4d . Searching through the issues I found #1679 that propose the exact thing I described here. From my perspective it's \"just\" a matter of:\n- providing a way to change the form data given the view name, probably something like the getFormData() method described in the issue's description\n- setting the DTO data back to the entity after the form submission. Here i would add a new method that should be called right before persisting the data in the new and edit actions\n- the form option data_class should reflect the actual class provided at the first point. Here the option is set to the default class value from the entity configuration\n- Another problem I encountered trying to implement the feature at application level was in the bootstrap_3_layout.html.twig: calling attribute(value, easyadmin.entity.primary_key_field_name) we're assuming the form value is actually the entity. To solve this problem one could just add to the DTO a property with the same name of the entity's PK, but I find this a not so elegant solution. I'd propose to pass to the form a new option containing the actual entity, let's say an entity property, and modify the previous line to something like attribute(form.vars.entity, easyadmin.entity.primary_key_field_name).\nNot sure if I'm missing something here, anyway could be a starting point. From my perspective it's \"just\" a matter of:\n- providing a way to change the form data given the view name, probably something like the getFormData() method described in the issue's description\n- setting the DTO data back to the entity after the form submission. Here i would add a new method that should be called right before persisting the data in the new and edit actions\n- the form option data_class should reflect the actual class provided at the first point. Here the option is set to the default class value from the entity configuration\n- Another problem I encountered trying to implement the feature at application level was in the bootstrap_3_layout.html.twig: calling attribute(value, easyadmin.entity.primary_key_field_name) we're assuming the form value is actually the entity. To solve this problem one could just add to the DTO a property with the same name of the entity's PK, but I find this a not so elegant solution. I'd propose to pass to the form a new option containing the actual entity, let's say an entity property, and modify the previous line to something like attribute(form.vars.entity, easyadmin.entity.primary_key_field_name).\nNot sure if I'm missing something here, anyway could be a starting point. I'd say a generic 400 - Bad Request or a 409 - Conflict as proposed by @ogizanagi . I'd say a generic 400 - Bad Request or a 409 - Conflict as proposed by @ogizanagi . ",
    "nitrique": "Hell yeah !\nI've found the answer, it's a doctrine or console related bug (I think).\nIt's works with by_reference option and one other thing, here is the original code, generated by console : \n```php\n    public function addVille(\\Ab6net\\SituationBundle\\Entity\\Villes $ville)\n    {\n        $this->villes[] = $ville;\n    return $this;\n}\n\n```\nwas replaced by this : \nphp\n    public function addVille(\\Ab6net\\SituationBundle\\Entity\\Villes $ville)\n    {\n        $ville->setZones($this);\n    }\nIn fact, I have to call the inverse side setter to set the \"ville\" (city).\nThis is because this side's database table doesn't contain the city array.\nIf it's clear, can you add it to the docs in a section like tips & tricks ?\n@javiereguiluz thanks again for you work ;)\n@vonalbert your answer helped me so much ! Thanks !\n. ",
    "inmarelibero": "Hi yes, cache was cleared right after the error was displayed\nthe only custom thing I'm doing is this:\n```\n<?php\nnamespace BOBundle\\Controller;\nuse BOBundle\\Form\\Transformer\\EventHasUserToUserTransformer;\nuse BOBundle\\Form\\Transformer\\EventPaperHasUserToUserTransformer;\nuse BOBundle\\Form\\Transformer\\EventSessionHasUserToUserTransformer;\nuse JavierEguiluz\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    /\n     * Override parent::createEventSessionEntityFormBuilder()\n     \n     * @param $entity\n     * @param $view\n     * @return \\Symfony\\Component\\Form\\FormBuilder\n     /\n    protected function createEventSessionEntityFormBuilder($entity, $view)\n    {\n        $builder = parent::createEntityFormBuilder($entity, $view);\n    /**\n     * add eventHasUsers transformer\n     */\n    $builder->get('eventSessionHasUsers')\n        ->addModelTransformer(new EventSessionHasUserToUserTransformer(\n            $builder->getForm()->getData()\n        ));\n\n    return $builder;\n}\n\n}\n```. sure\n```\neasy_admin:\n    site_name: 'MyPneumomeeting Admin'\n    entities:\n        Event:\n            class: BOBundle\\Entity\\Event\n            form:\n                fields:\n                    - name\n                    - startDate\n                    - endDate\n                    - visible\n                    - location\n                    - eventDays\n                    -\n                        property: 'eventHasUsers'\n                        type: 'collection'\n                        type_options:\n                            entry_type: '\\BOBundle\\Form\\EventHasUserForEventType'\n                            by_reference: false\n                            delete_empty: true\n        EventDay:\n            class: BOBundle\\Entity\\EventDay\n            form:\n                fields:\n                    - event\n                    - date\n        EventPaper:\n            class: BOBundle\\Entity\\EventPaper\n            form:\n                fields:\n                    - name\n                    - duration\n                    - startDate\n                    - endDate\n                    - room\n                    -\n                        property: 'eventPaperHasUsers'\n                        type: 'collection'\n                        type_options:\n                            entry_type: '\\BOBundle\\Form\\EventPaperHasUserForEventPaperType'\n                            by_reference: false\n                            delete_empty: true\n        EventSession:\n            class: BOBundle\\Entity\\EventSession\n            form:\n                fields:\n                    - eventDay\n                    - name\n                    - position\n                    - isActive\n                    -\n                        property: 'eventSessionHasUsers'\n                        type: 'collection'\n                        type_options:\n                            entry_type: '\\BOBundle\\Form\\EventSessionHasUserForEventSessionType'\n                            by_reference: false\n                            delete_empty: true\n            list:\n                fields:\n                    - eventDay\n                    - name\n                    - position\n                    - isActive\n        EventImage:\n            class: BOBundle\\Entity\\EventImage\n            form:\n                fields:\n                    -\n                        property: 'event'\n                        type: 'easyadmin_autocomplete'\n                    -\n                        property: 'title'\n                        type: 'text'\n                -\n                    property: 'description'\n                    type: 'text'\n\n                -\n                    property: 'imageFile'\n                    type: 'file'\n        list:\n            fields:\n                - event\n                -\n                    property: 'image'\n                    type: 'image'\n                    base_path: '/uploads/images'\n    User:\n        class: BOBundle\\Entity\\User\n        form:\n            fields:\n                - email\n                - firstName\n                - lastName\n                - city\n                - province\n                - phone\n        list:\n            fields: ['email', 'firstName', 'lastName', 'city', 'province', 'phone']\n\n. **bin/console about**\n\nSymfony                                               \n\nVersion              3.3.9                          \n  End of maintenance   01/2018                        \n  End of life          07/2018                          \n\nKernel                                                \n\nType                 AppKernel                      \n  Name                 app                            \n  Environment          dev                            \n  Debug                true                           \n  Charset              UTF-8                          \n  Root directory       ./app                          \n  Cache directory      ./var/cache/dev (156.9 MiB)    \n  Log directory        ./var/logs (13.9 MiB)            \n\nPHP                                                   \n\nVersion              7.1.8                          \n  Architecture         64 bits                        \n  Intl locale          it_IT                          \n  Timezone             UTC (2017-10-06T16:29:32+00:00)\n  OPcache              false                          \n  APCu                 false                          \n  Xdebug               false                            \n\n```\nbin/console debug:container --tag=form.type\n```\nSymfony Container Public Services Tagged with \"form.type\" Tag\n=============================================================\n\nService ID                             alias                        Class name                                                                \n\neasyadmin.form.type                                                 JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminFormType        \n  easyadmin.form.type.autocomplete       easyadmin_autocomplete       JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminAutocompleteType\n  easyadmin.form.type.divider            easyadmin_divider            JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminDividerType     \n  easyadmin.form.type.group              easyadmin_group              JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminGroupType       \n  easyadmin.form.type.section            easyadmin_section            JavierEguiluz\\Bundle\\EasyAdminBundle\\Form\\Type\\EasyAdminSectionType     \n  form.type.entity                       entity                       Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType                            \n  fos_oauth_server.authorize.form.type   fos_oauth_server_authorize   FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType                       \n  fos_user.change_password.form.type     fos_user_change_password     FOS\\UserBundle\\Form\\Type\\ChangePasswordFormType                         \n  fos_user.profile.form.type             fos_user_profile             FOS\\UserBundle\\Form\\Type\\ProfileFormType                                \n  fos_user.registration.form.type        fos_user_registration        FOS\\UserBundle\\Form\\Type\\RegistrationFormType                           \n  fos_user.resetting.form.type           fos_user_resetting           FOS\\UserBundle\\Form\\Type\\ResettingFormType                              \n  fos_user.username_form_type            fos_user_username            FOS\\UserBundle\\Form\\Type\\UsernameFormType                               \n  liip_imagine.form.type.image           liip_imagine_image           Liip\\ImagineBundle\\Form\\Type\\ImageType                                  \n  vich_uploader.form.type.file           vich_file                    Vich\\UploaderBundle\\Form\\Type\\VichFileType                              \n  vich_uploader.form.type.image          vich_image                   Vich\\UploaderBundle\\Form\\Type\\VichImageType                               \n\n```. so problem si mine, but var/cache/ was cleared\nwhat could I try?. ",
    "acogent": "Yes,  @yceruto, it solves my problem.\nArmelle. ",
    "soullivaneuh": "\nThe problem is that the interface translation is disabled too, so you'll see action.edit instead of Edit, etc.\nLet's close this as \"fixed\" because translation can be disabled per entity.\n\nIt does not disable the translation, but tries instead to translate on the false translation domain:\nTranslation not found.\n[\u25bc\n  \"id\" => \"Repository\"\n  \"domain\" => false\n  \"locale\" => \"en\"\n]\nTested on the last version.\nCould you please re-open the issue?\nPlus, disabling per entity may indeed works, but this is quite overkill if we don't want translation at all except the interface itself.\nMaybe add a entities_translation_domain global option?. Plus, with this configuration for entity:\nRepository:\n      class: AppBundle\\Entity\\Repository\n      translation_domain: false\nSome interface translation are not translated anymore:\n\nBut this is maybe the place for another issue.\n. > I don't like adding more config options ...\nWell, the fact is the end user has to add this option on each entity to avoid translation. So this is not better IMHO.\n\nAbout the interface ... the problem is that we translate actions with messages instead of EasyAdmin domain, so you can customize them.\n\nWhat do you mean by \"you can customize them\"? What is the goal? Customize globally or per entity? If it's globally, well we can still override the EasyAdmin domain.\nIf it's per domain, I really don't see why we should change the \"Search\" words on entity level. :thinking: \nBTW, it's the same thing about action.show and action.edit thing.\nSo event if symfony/symfony#21726 is accepted, the issue will remain the same... or will be moved. :smile: \nPossible options to avoid even more configuration about message domain choice would be to change action.* translation ID by the english message itself (Search, Show, Edit, etc...).. About Symfony v4, I'm nearly sure you can also support SF 3.4 without any issue. See also #2135 . About Symfony v4, I'm nearly sure you can also support SF 3.4 without any issue. See also #2135 . ",
    "Skindustries": "I don't think that's what @TonyGao meant. I'm running into the same problem:\nI want to use the human readable version of the property in the list, by using:\n- { property: 'sendstyle', label: 'product.sendStyle', type: 'choice', type_options: {choices: {'text1': 1, 'text2': 2, 'text3': 3}} }\nIf I use the above, the list either shows an empty field or nothing at all, not \"text1\" for example.\nIf I just use the following:\n- { property: 'sendstyle', label: 'product.sendStyle'}\nI just get \"1\" in my list, I want it to say \"text1\". You can create a template for this:\n{% set hasValue = false %}\n{% spaceless %}\n{% if value is iterable %}\n    {% for val in value %}\n        {% for key,choice in field_options.type_options.choices %}\n            {% if choice == val %}\n                {% if not hasValue %}\n                    <ul>\n                    {% set hasValue = true %}\n                {% endif %}\n                <li>{{ key }}</li>\n            {% endif %}\n        {% endfor %}\n    {% endfor %}\n    {% if hasValue %}\n        </ul>\n    {% endif %}\n{% else %}\n    {% for key,choice in field_options.type_options.choices %}\n        {% if choice == value %}\n            {% set hasValue = true %}\n            {{ key }}\n        {% endif %}\n    {% endfor %}\n{% endif %}\n{% if not hasValue %}\n    {{ include(entity_config.templates.label_null) }}\n{% endif %}\n{% endspaceless %}. ",
    "dariuszp": "Same here, I just get database value instead of label, anyone found a solution?. Same here, I just get database value instead of label, anyone found a solution?. ",
    "RodolVelasco": "I need this functionality too.. ",
    "iamromeo": "@javiereguiluz  is there anything more I can provide to help out? It's interesting because it works OK on my Local but not on my production server. . I can confirm that my live server used mysql 5.7 \n```\nii  libapache2-mod-php               1:7.1+52+deb.sury.org~xenial+1             all          server-side, HTML-embedded scripting language (Apache 2 module) (default)\nii  libapache2-mod-php7.1            7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        server-side, HTML-embedded scripting language (Apache 2 module)\nii  mysql-client-5.7                 5.7.19-0ubuntu0.16.04.1                    amd64        MySQL database client binaries\nii  mysql-client-core-5.7            5.7.19-0ubuntu0.16.04.1                    amd64        MySQL database core client binaries\nii  mysql-common                     5.7.19-0ubuntu0.16.04.1                    all          MySQL database common files, e.g. /etc/mysql/my.cnf\nii  mysql-server                     5.7.19-0ubuntu0.16.04.1                    all          MySQL database server (metapackage depending on the latest version)\nii  mysql-server-5.7                 5.7.19-0ubuntu0.16.04.1                    amd64        MySQL database server binaries and system database setup\nii  mysql-server-core-5.7            5.7.19-0ubuntu0.16.04.1                    amd64        MySQL database server binaries\nii  php                              1:7.1+52+deb.sury.org~xenial+1             all          server-side, HTML-embedded scripting language (default)\nii  php-apcu                         5.1.8+4.0.11-1+deb.sury.org~xenial+1       amd64        APC User Cache for PHP\nii  php-common                       1:35ubuntu6                                all          Common files for PHP packages\nii  php-gd                           1:7.1+52+deb.sury.org~xenial+1             all          GD module for PHP [default]\nii  php-mysql                        1:7.1+52+deb.sury.org~xenial+1             all          MySQL module for PHP [default]\nii  php7.1                           7.1.6-1~ubuntu16.04.1+deb.sury.org+1       all          server-side, HTML-embedded scripting language (metapackage)\nii  php7.1-cli                       7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        command-line interpreter for the PHP scripting language\nii  php7.1-common                    7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        documentation, examples and common module for PHP\nii  php7.1-curl                      7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        CURL module for PHP\nii  php7.1-gd                        7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        GD module for PHP\nii  php7.1-json                      7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        JSON module for PHP\nii  php7.1-mbstring                  7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        MBSTRING module for PHP\nii  php7.1-mysql                     7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        MySQL module for PHP\nii  php7.1-opcache                   7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        Zend OpCache module for PHP\nii  php7.1-readline                  7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        readline module for PHP\nii  php7.1-xml                       7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        DOM, SimpleXML, WDDX, XML, and XSL module for PHP\nii  php7.1-zip                       7.1.6-1~ubuntu16.04.1+deb.sury.org+1       amd64        Zip module for PHP\n```. @artgris  how can I disable ONLY_FULL_GROUP_BY ? . @javiereguiluz  yes command worked great - no issue at this point. Have you by any chance found why this might was an issue?. @javiereguiluz  yes command worked great - no issue at this point. Have you by any chance found why this might was an issue?. ",
    "artgris": "@iamromeo , @javiereguiluz command works perfectly :+1: . ",
    "sylvaindeloux": "Same here : happened when I add sort on a DATETIME field. Same here : happened when I add sort on a DATETIME field. @javiereguiluz With EasyAdminBundle 1.17.4, Doctrine ORM 2.5.11 and your patch, it works :). ",
    "Julien-Marcou": "I actually have doctrine/orm 2.5.11 with mysql 5.7.19, I updated EasyAdminBundle from 1.17.3 to 1.17.4 (nothing else) and since that, I have the same fatal error when I'm trying to sort a list of entities :\n[...]\n        Question:\n          class: AppBundle\\Entity\\Question\n          templates:\n              list: '::easy_admin/custom/list-sortable.html.twig'\n          list:\n            sortable: {entity: 'question', property: 'questionnaire'}\n            sort: ['position', 'ASC']\n[...]\n```\nAn exception has been thrown during the rendering of a template (\"An exception occurred while executing 'SELECT DISTINCT id_0 FROM (SELECT q0_.id AS id_0, q0_.obligatoire AS obligatoire_1, q0_.nb_reponse AS nb_reponse_2, q0_.visible AS visible_3, q0_.libelle AS libelle_4, q0_.affiche_separateur AS affiche_separateur_5, q0_.cle_unique AS cle_unique_6, q0_.groupe_question AS groupe_question_7, q0_.position AS position_8 FROM question q0_ WHERE q0_.questionnaire_id = 7) dctrn_result ORDER BY position_8 ASC LIMIT 15 OFFSET 0':\nSQLSTATE[HY000]: General error: 3065 Expression #1 of ORDER BY clause is not in SELECT list, references column 'dctrn_result.position_8' which is not in SELECT list; this is incompatible with DISTINCT\").\n```\nReverting EasyAdminBundle  to 1.17.3 fixed the problem.. I actually have doctrine/orm 2.5.11 with mysql 5.7.19, I updated EasyAdminBundle from 1.17.3 to 1.17.4 (nothing else) and since that, I have the same fatal error when I'm trying to sort a list of entities :\n[...]\n        Question:\n          class: AppBundle\\Entity\\Question\n          templates:\n              list: '::easy_admin/custom/list-sortable.html.twig'\n          list:\n            sortable: {entity: 'question', property: 'questionnaire'}\n            sort: ['position', 'ASC']\n[...]\n```\nAn exception has been thrown during the rendering of a template (\"An exception occurred while executing 'SELECT DISTINCT id_0 FROM (SELECT q0_.id AS id_0, q0_.obligatoire AS obligatoire_1, q0_.nb_reponse AS nb_reponse_2, q0_.visible AS visible_3, q0_.libelle AS libelle_4, q0_.affiche_separateur AS affiche_separateur_5, q0_.cle_unique AS cle_unique_6, q0_.groupe_question AS groupe_question_7, q0_.position AS position_8 FROM question q0_ WHERE q0_.questionnaire_id = 7) dctrn_result ORDER BY position_8 ASC LIMIT 15 OFFSET 0':\nSQLSTATE[HY000]: General error: 3065 Expression #1 of ORDER BY clause is not in SELECT list, references column 'dctrn_result.position_8' which is not in SELECT list; this is incompatible with DISTINCT\").\n```\nReverting EasyAdminBundle  to 1.17.3 fixed the problem.. ",
    "mariam-japaridze": "I have the same bug. I have the same bug. ",
    "Arthur-min": "Thank you for answering me !\nI updated the bundle and see no differences. If I override {% block entity_form %}, I loose all buttons.\nAdding {% form_theme form with easyadmin_config('design.form_theme') %} doesn't change anything. \n{% block easyadmin_widget %} is called only when you use {{ form(form) }}. \n{{ form_start(form) }} never call it.. Hello,\nI used this bootstrap_3_layout.html.twig and have an issue, each related entities with specific FormType have their own set of buttons :/\nyaml\neasy_admin:\n    entities:\n        Entity:\n            edit:\n                fields:\n                    -\n                        property: 'address'\n                        type: AppBundle\\Form\\Type\\AddressType\n. Good job thank you!. Hello Javier,\nI used the GitHub editor to make this, didn't pay attention to the spaces sorry!\nFixed :). ",
    "diedna": "Thank you for your quick answer!\nAny workaround solution, please \ud83d\ude29, to GroupBy COALESCE to replace the null value of \"entity.contrats\" by \"entity.id\" in \"list\" view ?\nThank you. It doesn't work, maybe i will try to create a MySQL view to do that!\nThank you for your help!. Hi Fadoe,\nCan you please send a preview of your code, it will save my day.\nThank you!. ",
    "naitsirch": "I thought about the validation issue. One could add a special icon to a tab, which contains violations or a label to signalize violations.. I have extended the tab functionality to address the notes made by @grachevko and @iluuu1994.\nHere's a screenshot:\n\nIf there's a tab with form violations, this tab is activated.\nAny other objections?. Sorry for adding another coding style fixing commit, but I couldn't get phpunit and php-cs working for this project. Executing vendor/bin/phpunit -c phpunit.xml.dist locally gave me\n\nFAILURES!\nTests: 409, Assertions: 248, Errors: 196, Skipped: 7.. @fabpot Thanks for the catch. I've removed the superfluous trailing dots.. @fabpot Thanks for the catch. I've removed the superfluous trailing dots.. Done ;-). \n",
    "victorbstan": "I would like to use form tabs, can I merge this pull request into my own EasyAdmin branch? Or will this be merged sometime soon in the main EasyAdmin repo?. Thanks!. Thanks!. ",
    "sldgs": "It seems that it was my fault that autocomplete option was getting overridden into entity - in my custom hook for POST_NEW event (that I sort of forgot about) I end up changing a parameters for that field, essentially reverting it to always use entity type field.. ",
    "maximecolin": "Just what i need. Tested and it works perfectly. Would be nice to have this feature.\n  . @ktrzos Can you propose a Pull Request for this change ?. @ktrzos I just run into a bug with your code. When you add two fields of the same related entity, the query builder will join two time with the same alias.\nyaml\neasy_admin:\n    entities:\n        Campaign:\n            search:\n                fields:\n                    - domain.name  # <--- first join\n                    - domain.foobar  # <--- second join\nSame thing if you set a sort on a related entity field.\nyaml\neasy_admin:\n    entities:\n        Campaign:\n            search:\n                sort: ['domain.name', 'ASC'] # <--- first join\n                fields:\n                    - domain.name  # <--- second join\nFixed with the following changes : https://github.com/ktrzos/EasyAdminBundle/pull/1\n. Why leftJoin ? If you search on a related entity field, the related entity has to be not null to match the search. A join sound totally appropriate as it will get only the lines where the relation is available and avoid searching against null values in the where clause.. @yceruto Indeed, I didn't think about this use case.. ",
    "Venar": "I think adding striptags to everything text would work for me. When/If I need the html I already use the raw tag, so for menus where I don't want to see that, it would work.. ",
    "arnocertic": "Hi all,\nI have been affected by the exactly same bug this morning.\nautocomplete field with property name parent make the bottom form buttons disappear\nThis bug appears with the commit #1885 (see this page)\nLine 451 of src/Resources/views/form/bootstrap_3_layout.html.twig form.parent is not empty so there's no buttons displayed at the end of the form.\nif you change this line by {% if form.parent is not empty %} the buttons reappear... but it's not correct of course to do that.\nSo the only simple solution I found is to change my field property name ! And wait for another ggod solution ;). Yes of course @yceruto ! \nYou removed the test so the bottom buttons always displayed !\nBut I'm afraid that another part of this layout could be affected, each time there's a form.parent used.\nFor example on lines 23-25\n\n{% if form.parent is empty %}\n<input type=\"hidden\" name=\"referer\" value=\"{{ app.request.query.get('referer', '') }}\"/>\n{% endif %}\n\nSame issue here, isn't it ?. Thanks @yceruto \nThere's another form.parent.vars used lines 31, 144 and 544.\nAnd there's also some form.parent used by parent() calls (see them in file symfony/src/Symfony/Bridge/Twig/Resources/views/Form/form_div_layout.html.twig)\nSo maybe the solution is somewhere else : the way the fields are build and stocked into the form object ?\nif form's fields could be stocked into a form.fields array, it could be more simple to named our fields without any risk of cross-naming collision ?\n. ",
    "j1top": "thanks @yceruto it's work\n\n. @javiereguiluz \n@shakaran \n@fabpot \n@tiraeth \nmight be able to provide a solution. ",
    "nickicool": "@Thanks javiereguiluz for your answer and work! Yes, it works! But had to add this line (maybe is useful to someone):\nyaml\neasy_admin:\n    entities:\n        Tag:\n            form:\n                fields:\n                    - { property: 'articles', type_options: { by_reference: false } }. ",
    "tameroski": "Nevermind, this is a storage issue, not linked to this great bundle ;). Seams like it can be fixed by importing the whole macro in my own menu.html.twig, but that seams a bit redondant to me and not very upgrade-proof : \n```twig\n{# templates/bundles/EasyAdminBundle/default/menu.html.twig #}\n{% extends '@!EasyAdmin/default/menu.html.twig' %}\n{% macro render_menu_item(item, translation_domain) %}\n    {% if item.type == 'divider' %}\n        {{ item.label|trans(domain = translation_domain) }}\n    {% else %}\n        {% set menu_params = { menuIndex: item.menu_index, submenuIndex: item.submenu_index } %}\n        {% set path =\n            item.type == 'link' ? item.url :\n            item.type == 'route' ? path(item.route, item.params) :\n            item.type == 'entity' ? path('easyadmin', { entity: item.entity, action: 'list' }|merge(menu_params)|merge(item.params)) :\n            item.type == 'empty' ? '#' : ''\n        %}\n    {# if the URL generated for the route belongs to the backend, regenerate\n       the URL to include the menu_params to display the selected menu item\n       (this is checked comparing the beginning of the route URL with the backend homepage URL)\n    #}\n    {% if item.type == 'route' and (path starts with path('easyadmin')) %}\n        {% set path = path(item.route, menu_params|merge(item.params)) %}\n    {% endif %}\n\n    <a href=\"{{ path }}\" {% if item.target|default(false) %}target=\"{{ item.target }}\"{% endif %}>\n        {% if item.icon is not empty %}<i class=\"fa {{ item.icon }}\"></i>{% endif %}\n        <span>{{ item.label|trans(domain = translation_domain) }}</span>\n        {% if item.children|default([]) is not empty %}<i class=\"fa fa-angle-left pull-right\"></i>{% endif %}\n    </a>\n{% endif %}\n\n{% endmacro %}\n{% import _self as helper %}\n{% block menu_item %}\n    BLABLABLA\n{% endblock menu_item %}\n```\nIs there any other way this could be fixed ?. Seams like it can be fixed by importing the whole macro in my own menu.html.twig, but that seams a bit redondant to me and not very upgrade-proof : \n```twig\n{# templates/bundles/EasyAdminBundle/default/menu.html.twig #}\n{% extends '@!EasyAdmin/default/menu.html.twig' %}\n{% macro render_menu_item(item, translation_domain) %}\n    {% if item.type == 'divider' %}\n        {{ item.label|trans(domain = translation_domain) }}\n    {% else %}\n        {% set menu_params = { menuIndex: item.menu_index, submenuIndex: item.submenu_index } %}\n        {% set path =\n            item.type == 'link' ? item.url :\n            item.type == 'route' ? path(item.route, item.params) :\n            item.type == 'entity' ? path('easyadmin', { entity: item.entity, action: 'list' }|merge(menu_params)|merge(item.params)) :\n            item.type == 'empty' ? '#' : ''\n        %}\n    {# if the URL generated for the route belongs to the backend, regenerate\n       the URL to include the menu_params to display the selected menu item\n       (this is checked comparing the beginning of the route URL with the backend homepage URL)\n    #}\n    {% if item.type == 'route' and (path starts with path('easyadmin')) %}\n        {% set path = path(item.route, menu_params|merge(item.params)) %}\n    {% endif %}\n\n    <a href=\"{{ path }}\" {% if item.target|default(false) %}target=\"{{ item.target }}\"{% endif %}>\n        {% if item.icon is not empty %}<i class=\"fa {{ item.icon }}\"></i>{% endif %}\n        <span>{{ item.label|trans(domain = translation_domain) }}</span>\n        {% if item.children|default([]) is not empty %}<i class=\"fa fa-angle-left pull-right\"></i>{% endif %}\n    </a>\n{% endif %}\n\n{% endmacro %}\n{% import _self as helper %}\n{% block menu_item %}\n    BLABLABLA\n{% endblock menu_item %}\n```\nIs there any other way this could be fixed ?. ",
    "lemonlab": "Since this commit, empty relations (ManyToOne) show the class name instead of \"null\"\n\nThis is because the value $parameters['value'] (which should be null) , is overridden by the class name here : https://github.com/javiereguiluz/EasyAdminBundle/blob/fb0ac3e5e05b4b525bb9ea389b822fa57d2db3f4/src/Twig/EasyAdminTwigExtension.php#L200-L202\n. because of this line : https://github.com/javiereguiluz/EasyAdminBundle/blob/fb0ac3e5e05b4b525bb9ea389b822fa57d2db3f4/src/Twig/EasyAdminTwigExtension.php#L267. because of this line : https://github.com/javiereguiluz/EasyAdminBundle/blob/fb0ac3e5e05b4b525bb9ea389b822fa57d2db3f4/src/Twig/EasyAdminTwigExtension.php#L267. Oh OK ! I wonder the same.. Oh OK ! I wonder the same.. Perfect, thank you \ud83d\udc4d . Perfect, thank you \ud83d\udc4d . ",
    "jdecool": "@shakaran shame on me ! Thanks for the typo.\n@javiereguiluz You're right, immutable dates should not be different from regular dates. We should create a new immutable date but not modify it.. ",
    "delirehberi": "You can override admin controller like i made. You can use this snippet:\nphp\nclass ContentCategoryController extends BaseAdminController\n{\n    protected function createListQueryBuilder($entityClass, $sortDirection, $sortField = null, $dqlFilter = null)\n    {\n        $request = $this->get('request_stack')->getCurrentRequest();\n        $query = $request->get('_data');\n        if ($query) {\n            $dqlFilter = \"entity.parent=$query\";\n        } else {\n            $dqlFilter = \"entity.parent is null\";\n        }\n        return parent::createListQueryBuilder($entityClass, $sortDirection, $sortField, $dqlFilter);\n    }\n}. You can override admin controller like i made. You can use this snippet:\nphp\nclass ContentCategoryController extends BaseAdminController\n{\n    protected function createListQueryBuilder($entityClass, $sortDirection, $sortField = null, $dqlFilter = null)\n    {\n        $request = $this->get('request_stack')->getCurrentRequest();\n        $query = $request->get('_data');\n        if ($query) {\n            $dqlFilter = \"entity.parent=$query\";\n        } else {\n            $dqlFilter = \"entity.parent is null\";\n        }\n        return parent::createListQueryBuilder($entityClass, $sortDirection, $sortField, $dqlFilter);\n    }\n}. ",
    "rchris03": "Got it, Thank you so much @delirehberi!. Got it! Thanks!. ",
    "fabienlem": "Hello,\nI upgraded Easy Admin to the latest version, I confirm the problem is solved.\nThank you for your help, you can close this issue!\nBest regards,\nFabien. ",
    "tiagobrito": "Closing I think its related to this: https://stackoverflow.com/questions/22256124/cannot-create-a-database-table-named-user-in-postgresql. Closing I think its related to this: https://stackoverflow.com/questions/22256124/cannot-create-a-database-table-named-user-in-postgresql. ",
    "numediaweb": "I also posted a question about this in Stackoverflow. I also posted a question about this in Stackoverflow. @xabbuh \nI think they are related: any release date for the changes?\nThanks. @xabbuh \nI think they are related: any release date for the changes?\nThanks. ",
    "barbieswimcrew": "Sounds like a good approach! Thanks for that, I will check that!. Sounds like a good approach! Thanks for that, I will check that!. Okay, found it. It has already been a matter of the htaccess RewriteRule definition. Please pardon the inconvenience. . Okay, found it. It has already been a matter of the htaccess RewriteRule definition. Please pardon the inconvenience. . ",
    "rampmaster": "@javiereguiluz i can replicated the error. The problem is in vendor/symfony/property-access/PropertyAccessor.php (line 543) not in library. @ibasaw the solution is change trait with inheritance.\nRegards. ",
    "ssmusoke": "@rampmaster I am facing the same issue, what does \"change trait with inheritance\" mean? . @rampmaster I am facing the same issue, what does \"change trait with inheritance\" mean? . ",
    "pdugas": "The use of Doctrine's FileCache appears to be the issue I'm having. The is_writeable() test in the constructor is failing as I'd expect. Looking at what was deployed, the existing CacheWarmer appears to be working - var/cache/prod/easy_admin/dc/xxxxx.doctrinecache.data exists. If I patch FileCache.php to comment out that test, things get a little further on GAE production - now chasing a Twig issue.\nRelated, I suggested (https://github.com/doctrine/cache/issues/240) that the test be moved and was quickly shot down.. The use of Doctrine's FileCache appears to be the issue I'm having. The is_writeable() test in the constructor is failing as I'd expect. Looking at what was deployed, the existing CacheWarmer appears to be working - var/cache/prod/easy_admin/dc/xxxxx.doctrinecache.data exists. If I patch FileCache.php to comment out that test, things get a little further on GAE production - now chasing a Twig issue.\nRelated, I suggested (https://github.com/doctrine/cache/issues/240) that the test be moved and was quickly shot down.. In this case, the cache file created by the CacheWarmer is working with the patch. Seems to me it'd be nice to be able to use the pre-cached file and not resort to using an array.  \nSee GoogleCloudPlatform/appengine-symfony-starter-project for some of the other issues with running on GAE-Standard.  The Twig adjustments seem to work for basic stuff but I'm having trouble as soon as I try using things like csrf_token() and the app variable in templates. Getting this error when I try and load the EasyAdmin route.\nrequest.CRITICAL: Uncaught PHP Exception Twig_Error_Runtime: \"An exception has been thrown during the rendering of a template (\"Could not parse property path \"[entities][]\". Unexpected token \"[\" at position 10\").\" at /base/data/home/apps/p~xxx/staging.xxx/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig line 1 {\"exception\":\"[object] (Twig_Error_Runtime(code: 0): An exception has been thrown during the rendering of a template (\\\"Could not parse property path \\\"[entities][]\\\". Unexpected token \\\"[\\\" at position 10\\\"). at /base/data/home/apps/p~xxx/staging.xxx/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig:1, Symfony\\\\Component\\\\PropertyAccess\\\\Exception\\\\InvalidPropertyPathException(code: 0): Could not parse property path \\\"[entities][]\\\". Unexpected token \\\"[\\\" at position 10 at /base/data/home/apps/p~xxx/staging.xxx/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyPath.php:116)\"} []. In this case, the cache file created by the CacheWarmer is working with the patch. Seems to me it'd be nice to be able to use the pre-cached file and not resort to using an array.  \nSee GoogleCloudPlatform/appengine-symfony-starter-project for some of the other issues with running on GAE-Standard.  The Twig adjustments seem to work for basic stuff but I'm having trouble as soon as I try using things like csrf_token() and the app variable in templates. Getting this error when I try and load the EasyAdmin route.\nrequest.CRITICAL: Uncaught PHP Exception Twig_Error_Runtime: \"An exception has been thrown during the rendering of a template (\"Could not parse property path \"[entities][]\". Unexpected token \"[\" at position 10\").\" at /base/data/home/apps/p~xxx/staging.xxx/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig line 1 {\"exception\":\"[object] (Twig_Error_Runtime(code: 0): An exception has been thrown during the rendering of a template (\\\"Could not parse property path \\\"[entities][]\\\". Unexpected token \\\"[\\\" at position 10\\\"). at /base/data/home/apps/p~xxx/staging.xxx/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig:1, Symfony\\\\Component\\\\PropertyAccess\\\\Exception\\\\InvalidPropertyPathException(code: 0): Could not parse property path \\\"[entities][]\\\". Unexpected token \\\"[\\\" at position 10 at /base/data/home/apps/p~xxx/staging.xxx/vendor/symfony/symfony/src/Symfony/Component/PropertyAccess/PropertyPath.php:116)\"} []. My notes so far are at https://paul.dugas.cc/2017/11/02/symfony-on-google-app-engine/.  Where do you suggest I look for help on the Twig issue?  I've added an issue in the starter-project (https://github.com/GoogleCloudPlatform/appengine-symfony-starter-project/issues/25) but don't see any activity there.  . My notes so far are at https://paul.dugas.cc/2017/11/02/symfony-on-google-app-engine/.  Where do you suggest I look for help on the Twig issue?  I've added an issue in the starter-project (https://github.com/GoogleCloudPlatform/appengine-symfony-starter-project/issues/25) but don't see any activity there.  . I went ahead and submitted it here, https://github.com/symfony/symfony/issues/25368. I went ahead and submitted it here, https://github.com/symfony/symfony/issues/25368. ",
    "kamalkech": "@iluuu1994: but how we can implement that with symfony 4, mainly not yet compatible with FOSUserBundle ??. @iluuu1994 : voila !, so have you another way to hash a password when you try to create a new user on page manager Users (UI easyadmin) ??. With Symfony 4 i not use FOSUserBundle, plz check this : https://github.com/javiereguiluz/EasyAdminBundle/issues/1996. @iluuu1994 : i follow some documentation, yes i am agree with you app_bundle has no effect.. ",
    "xpersonas": "Using \"KMS\\FroalaEditorBundle\\Form\\Type\\FroalaEditorType\" works. . ",
    "twisty01": "Hi, for me worked layout: 'admin/layout.html.twig'  in symfony 3.4, the file is in templates/admin/layout.htm.twig and extends '@EasyAdmin/default/layout.html.twig'\n. Hi, for me worked layout: 'admin/layout.html.twig'  in symfony 3.4, the file is in templates/admin/layout.htm.twig and extends '@EasyAdmin/default/layout.html.twig'\n. ",
    "just-tom": "Perfect, thanks @yceruto \ud83d\udc4d  - closing . Perfect, thanks @yceruto \ud83d\udc4d  - closing . ",
    "baris1892": "Same issue happens using a custom AdminController.\nOld (see here):\n```\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    // ...\n}\n```\n```\napp/config/routing.yml\neasy_admin_bundle:\n    resource: \"@AppBundle/Controller/AdminController.php\"\n    type:     annotation\n    prefix:   /admin\n```\nNew\n```\nnamespace App\\Controller;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    // ...\n}\n```\neasy_admin_bundle:\n    resource: \"Controller/AdminController.php\"\n    prefix: /admin\n    type: annotation. Usually you just have to setup your entities properly. For example using annotations:\n```php\n/*\n * User\n * @UniqueEntity(\"username\")\n * @UniqueEntity(\"email\")\n /\nclass User implements UserInterface, Serializable {\n/** @ORM\\Column(name=\"username\", type=\"string\", length=255)*/\nprivate $username;\n\n/** @ORM\\Column(name=\"email\", type=\"string\", length=255) */\nprivate $email;\n\n/**\n * @Assert\\NotBlank(message=\"user.password.empty\")\n * @Assert\\Length(max=4096)\n */\nprivate $password;\n...\n\n}\n```\nThen no other configuration is needed. If you enter an already existing username or email, the form will fail. It will also fail, if the password is empty or too long.. ",
    "aequasi": "I would be willing to test this if it were re-opened. Would love to see money values on list/show. Can we re-open this?. ",
    "thibaut-st": "P.S. I hacked it temporarily with that: \npublic function __construct($cacheDir)\n    {\n        if (($_SERVER['APP_ENV'] ?? 'dev')==='dev') {\n            parent::__construct($cacheDir, self::EXTENSION,0000);\n        }else{\n            parent::__construct($cacheDir);\n        }\n    }. P.S. I hacked it temporarily with that: \npublic function __construct($cacheDir)\n    {\n        if (($_SERVER['APP_ENV'] ?? 'dev')==='dev') {\n            parent::__construct($cacheDir, self::EXTENSION,0000);\n        }else{\n            parent::__construct($cacheDir);\n        }\n    }. My configuration: \n\nVirtualBox on Windows 10\nElementaryOs on VirtualBox\nApache: Server version: Apache/2.4.29 (Ubuntu) - Server built:   2017-12-13T08:13:20\nPHP: PHP 7.2.0-2+ubuntu16.04.1+deb.sury.org+2 (cli) (built: Dec  7 2017 20:14:31) ( NTS )\n\nWhat are other useful informations I could provide? \nSome screenshoot: \n\n\nEDIT: \nI tested on Windows and no problems (as to be expected with Windows right management). My configuration: \n\nVirtualBox on Windows 10\nElementaryOs on VirtualBox\nApache: Server version: Apache/2.4.29 (Ubuntu) - Server built:   2017-12-13T08:13:20\nPHP: PHP 7.2.0-2+ubuntu16.04.1+deb.sury.org+2 (cli) (built: Dec  7 2017 20:14:31) ( NTS )\n\nWhat are other useful informations I could provide? \nSome screenshoot: \n\n\nEDIT: \nI tested on Windows and no problems (as to be expected with Windows right management). Any news about this issue? . What informations would be useful? \nI just installed it from composer, add my entity to the config file, and that's it. . Good point, I forgot it in my entity, but even after adding it, it doesn't save. \nIt behave exactly the same as explained in the original post even with the  cascade={\"persist\"} in the annotation. \nEDIT: and I read in the doctrine documentation that line \nNew entities in a collection not marked as cascade: persist will produce an Exception and rollback the flush() operation.\nSo, shouldn't EasyAdmin throw an exception too? Or at least a warning message? . Thanks, it work. \nBut I have two main issue related to this: \n\nFirst, I couldn't find the solution in the official documentation on the symfony website about EasyAdmin. \nSecond, by default the field exist, but doesn't do anything when saving. I guess it shouldn't be present by default, or at least show some error/warning message like \"config missing to save\". . \n",
    "Rzial": "Having same issue here\n\nVMware Workstation on Windows 10\nDebian 9 on VMware Workstation\nNginx: Server version: 1.12.2-1~stretch\n\nPHP-FPM: 7.2.0-1+0~ 20171201111333.14+stretch~1.gbp47ee8a. Having same issue here\n\n\nVMware Workstation on Windows 10\n\nDebian 9 on VMware Workstation\nNginx: Server version: 1.12.2-1~stretch\nPHP-FPM: 7.2.0-1+0~ 20171201111333.14+stretch~1.gbp47ee8a. If you use return types you should declare PHP default values for your class, (e.g. protected my_string = \"\"). If your property is nullable then the return type should be declared as nullable like public function my_function() : ?string. If you use return types you should declare PHP default values for your class, (e.g. protected my_string = \"\"). If your property is nullable then the return type should be declared as nullable like public function my_function() : ?string. \n",
    "lambertbeekhuis": "Having the same issue, php7.1 on mac locally, apache installed. Solve it with a 'sudo chmod -R 777 var/cache/' after each cache:clear, but annoying. ",
    "Gwynei": "Having the issue as well.\nThing I notice is that the easy_admin folder is the ONLY folder without a write permission for everyone. See screenshot below. This is the result just after a cache:clear --env=dev command.\nSpecs:\nUbuntu 16.04.3 LTS\nsetfacl commands executed as documented\neasy_admin installed using flex\n\nIf you need more info let me know.\n. ",
    "raresserban": "I also have the same problem, on both Linux and Windows.. I also have the same problem, on both Linux and Windows.. ",
    "ebuildy": "From Symfony 4, all plugins/bundles should rely on cache warmup to write on cache (see https://symfony.com/doc/current/setup/file_permissions.html).. ",
    "tgalopin": "Hey @javiereguiluz !\nI have the same problem and I'm pretty sure it comes from virtualized environments (or similar environments) as the user of the webserver does not have the permissions to write the cache cleared by the console/user manually.\nHowever as @ebuildy said, we should rely on Symfony caching features handling this for us. Let's discuss this :) (here or on Slack if you want).. I'll have a look :) .. ",
    "ebougerolle": "Sorry...\nMy probl\u00e8me was not in my entities but the entity MDPH\\CoreBundle\\Entity\\Beneficiaire was nor declared in config.yml easyadminsection as entity.\n. ",
    "AndyCamicci": "Sorry, found a solution, it's in the easy_admin.yaml configuration with the by_reference option\neasy_admin:\n  entities:\n    Category:\n      class: App\\Entity\\Category\n      form:\n        fields:\n          - { property: 'name' }\n          - { property: 'products', type_options: { by_reference: false } }\n    Product:\n      class: App\\Entity\\Product. Sorry, found a solution, it's in the easy_admin.yaml configuration with the by_reference option\neasy_admin:\n  entities:\n    Category:\n      class: App\\Entity\\Category\n      form:\n        fields:\n          - { property: 'name' }\n          - { property: 'products', type_options: { by_reference: false } }\n    Product:\n      class: App\\Entity\\Product. ",
    "CaptainJojo": "Sorry but I have the same problem and same with \n- { property: 'products', type_options: { by_reference: false } }\nDoes'nt work. \nAny idea ? . Sorry but I have the same problem and same with \n- { property: 'products', type_options: { by_reference: false } }\nDoes'nt work. \nAny idea ? . For fix I need to overload EntityController and function preUpdateEntity and use my function addArticle for all getArticles. \nIt's possible without this trick ?. For fix I need to overload EntityController and function preUpdateEntity and use my function addArticle for all getArticles. \nIt's possible without this trick ?. It's ok with the master branch thank @grachevko I wait the new release :). It's ok with the master branch thank @grachevko I wait the new release :). ",
    "colonelclick": "This helped me. Thanks.\n@CaptainJojo What is the name of your field? Is it really products?. This helped me. Thanks.\n@CaptainJojo What is the name of your field? Is it really products?. ",
    "bocharsky-bw": "Probably I'm implementing this in a wrong way? I think I need to extend a core form type to get those buttons. Does anybody have an example or idea how it could be implemented in a better way? Cannot find any information about it in docs.\nOnce again, the main idea is that I need to use my custom form type for an entire entity, not only for specific properties of the entity.. Hey @yceruto,\nThanks for these tips! I tried your solution and can notice If you override getParent() like:\nphp\npublic function getParent()\n{\n    return EasyAdminFormType::class;\n}\nseems you also need to override prefix:\nphp\n    public function getBlockPrefix()\n    {\n        return 'easyadmin';\n    }\nOtherwise your styles a bit different than defaults EasyAdmin's. But still, it does not give you the buttons.\nBut you're right, the trick was related to EasyAdminFormType. Finally, I just extended EasyAdminFormType and in buildForm() and configureOptions() I called parent:: methods in the beginning. And now I have those buttons. Also, I was able to reuse some dynamic values in the controller:\nphp\nclass ProjectController extends AdminController\n{\n    protected function createProjectEntityForm($entity, array $entityProperties, $view)\n    {\n        return $this->createForm(ProjectType::class, $entity, [\n            'entity' => $this->entity['name'],\n            'view' => $view,\n        ]);\n    }\n}\nLooks like it was the best solution I found with your help, so I think we can close this now. If anyone has a better solution - I'd be glad to hear. Also, probably it should be mention somewhere in docs?. ",
    "symfonysos": "Coming from a real-world db dev background I would like to add that this feature is not something that should be missing in any serious app.  It is a very basic requirement that you look for when checking frameworks for \"real world enterprise features\". It is quite disturbing to read that statement from a symfony core developer - I expected something like this comes oob, instead I see that you do not want to integrate it... why? \nPlease do not misunderstand me, I am not trying to attack you here, but I want to understand why such a basic and important functionality is considered not important in the symfony community. Thanks!\nAlso: How would you suggest people add this feature to their code? Just falling back to the doctrine \"version\" tag and handling the resulting exception manually everywhere? Really?\n. Coming from a real-world db dev background I would like to add that this feature is not something that should be missing in any serious app.  It is a very basic requirement that you look for when checking frameworks for \"real world enterprise features\". It is quite disturbing to read that statement from a symfony core developer - I expected something like this comes oob, instead I see that you do not want to integrate it... why? \nPlease do not misunderstand me, I am not trying to attack you here, but I want to understand why such a basic and important functionality is considered not important in the symfony community. Thanks!\nAlso: How would you suggest people add this feature to their code? Just falling back to the doctrine \"version\" tag and handling the resulting exception manually everywhere? Really?\n. What is the status on this issue? Missing permission handling is the elephant in the room - easyadmin is a great tool, but of course permission handling is a very basic requirement for anything real-life that is urgently needed. \nI understand how to do that on an entity-level with the symfony low-level security component, but of course it would be much better to have that abstracted away in a generic tool like easy_admin. \nAlso I was wondering that everybody seems to implement permission handling from zero on its own - not having to implement security on my own is one of the best reasons to use open source. DI, Templates, Routing, CRUD - yes, this is all fine and really good to have, but the most important part where I want to have as many eyes on as possible is security! And that, unfortunately, is mostly DIY in the Symfony world, based on some primitives, but still lot of room to make it wrong. So having a best practice permission handling implementation is really important. \n@luxferoo - it would be great to see how you solved that - maybe I missed the details, is it possible to study your code somewhere? Thank you  very much!\n. What is the status on this issue? Missing permission handling is the elephant in the room - easyadmin is a great tool, but of course permission handling is a very basic requirement for anything real-life that is urgently needed. \nI understand how to do that on an entity-level with the symfony low-level security component, but of course it would be much better to have that abstracted away in a generic tool like easy_admin. \nAlso I was wondering that everybody seems to implement permission handling from zero on its own - not having to implement security on my own is one of the best reasons to use open source. DI, Templates, Routing, CRUD - yes, this is all fine and really good to have, but the most important part where I want to have as many eyes on as possible is security! And that, unfortunately, is mostly DIY in the Symfony world, based on some primitives, but still lot of room to make it wrong. So having a best practice permission handling implementation is really important. \n@luxferoo - it would be great to see how you solved that - maybe I missed the details, is it possible to study your code somewhere? Thank you  very much!\n. Great, great, great, thank you so much! It feels like christmas :) \nLooks like my next project will be done with symfony, finally since V4 I see lot of good things happen!\n. Great, great, great, thank you so much! It feels like christmas :) \nLooks like my next project will be done with symfony, finally since V4 I see lot of good things happen!\n. Its this one I guess? \nGood to see the alterphp implementation grow into this project - it is very nice to see open-minded developers doing the right thing! \n\nA mind is like a parachute. It doesn't work if it is not open.\nFrank Zappa. Its this one I guess? \n\nGood to see the alterphp implementation grow into this project - it is very nice to see open-minded developers doing the right thing! \n\nA mind is like a parachute. It doesn't work if it is not open.\nFrank Zappa. \n",
    "lucassaraiva5": "I need this too, please! @javiereguiluz . I need this too, please! @javiereguiluz . @javiereguiluz Please, you know how i can made it?. I was trying using a default easyAdminAutocomplete.\nI solved the problem. It is not a bug, just I forget to add {{ parent() }} in javascript block to add select2 script.\nThanks anyway! :+1: . I was trying using a default easyAdminAutocomplete.\nI solved the problem. It is not a bug, just I forget to add {{ parent() }} in javascript block to add select2 script.\nThanks anyway! :+1: . The form already 'by_reference' => false,\nSplitterForm:\nphp\n->add('splitterSaida', CollectionType::class,[\n                'entry_type' => SplitterSaidaForm::class,\n                'allow_delete' => true,\n                'allow_add' => true,\n                'by_reference' => false,\n            ])\nI found the problem:\nThe method setSplitterSaida is setting a arrayCollection, because of this, i need through the elements setting the relationship;\n```php\n/*\n     * @param mixed $splitterSaida\n     /\n    public function setSplitterSaida($splittersSaida)\n    {\n        if (gettype($splittersSaida) == \"array\") {\n            $splittersSaida = new ArrayCollection($splittersSaida);\n        }\n    foreach($splittersSaida as $splitterSaida)\n    {\n        $splitterSaida->setSplitter($this);\n    }\n\n    $this->splitterSaida = $splittersSaida;\n}\n\n```\nBut this is a alternative solution, i don't understanding why method addSplitterSaida was never called.\nAnyway, if i discovery that i comment here.\nThanks a lot @javiereguiluz, because of your comment i have an idea to this solution.\nCheers. ",
    "riteshkhatri": ":(  I has also the same problem is there any solution for that? \nrecent days i had searched lot for this but did not find anything.\nCan you please help??\nHow can i add child entity form into parent entity form as a sub form.\nSorry for commenting over here cos, There is no requirement about opening same issue another time.. ",
    "MatthewBooth": "I will grab those requested logs when I get home.\nI also, at first, figured it was something on my setup. I was tempted to roll back to SF3.4 and go from there because I've a lot of experience with that, but zero with SF4. However, as I mentioned, the Doctrine create database, drop database, update schema commands all work fine (I can see the database bring dropped, created and tables created with each command) so I know the DATABASE_URL env variable is being picked up, at the least, by Doctrine.\nI will describe my setup here briefly before I go\n\nFresh SF4 installation\nFlex installation of doctrine, form, security, twig and admin\nConfigured a basic \"Hello World\" page in the routes (after the twig install)\nCreated an Entity called \"User\" and one called \"BlogPost\" using the maker command, and added some fields\nGenerated the database schema\nUsed the easy_admin entities configs to expose the User entity to\nGet this error when accessing /admin (no other error in the console or on the / route)\n\nEDIT:\nThere are no forms setup at the moment. Does this matter? I didn't see a way of telling easy_admin about the forms and where they are. I'm perhaps missing a step? \nI've written a basic admin interface myself before on SF3.4 along with CRUD, etc, but this looked easier to use than my own implementation and less work in the long run.. @xabbuh \nI use a dedicated service, Nginx. This is through Vagrant, on the Canonical Ubuntu 16.04 Box. I use this dev environment for most of my projects.\nEDIT:\nso, the console commands I'm referring to were run via a vagrant ssh connection.. Here is, apologies for the delay\n```\nserver {\n    listen 80;\nserver_name mattboothdev.local;\nclient_max_body_size 20m;\n\nroot /var/www/mattboothdev.local/public;\nindex index.php;\n\naccess_log /var/log/nginx/mattboothdev.local.access.log;\nerror_log /var/log/nginx/mattboothdev.local.error.log;\n\nlocation ~ \\.php$ {\n    set $path_info $fastcgi_path_info;\n    fastcgi_index index.php;\n    fastcgi_split_path_info ^(.+\\.php)(/.*)$;\n    try_files $uri $uri/ index.php$is_args$args;\n    include /etc/nginx/fastcgi_params;\n    fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;\n\n    fastcgi_param SCRIPT_FILENAME $request_filename;\n    fastcgi_param APP_ENV dev;\n}\n\nlocation / {\n    root /var/www/mattboothdev.local/public;\n    try_files $uri $uri/ /index.php$is_args$args;\n    autoindex off;\n    index index.php;\n}\n\nsendfile off;\n\n}\n```\nPretty standard stuff\nGetting those stack traces now\n. [2018-01-02 20:25:18] request.CRITICAL: Uncaught PHP Exception Twig_Error_Runtime: \"An exception has been thrown during the rendering of a template (\"An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'root'@'localhost' (using password: NO)\").\" at /mnt/Development/PHP/mattboothdev.me/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig line 135 {\"exception\":\"[object] (Twig_Error_Runtime(code: 0): An exception has been thrown during the rendering of a template (\\\"An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'root'@'localhost' (using password: NO)\\\"). at /mnt/Development/PHP/mattboothdev.me/vendor/javiereguiluz/easyadmin-bundle/src/Resources/views/default/list.html.twig:135, Doctrine\\\\DBAL\\\\Exception\\\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'root'@'localhost' (using password: NO) at /var/www/mattboothdev.local/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:108, Doctrine\\\\DBAL\\\\Driver\\\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'root'@'localhost' (using password: NO) at /var/www/mattboothdev.local/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:47, PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'root'@'localhost' (using password: NO) at /var/www/mattboothdev.local/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:43)\"} []. Thanks @xabbuh I can confirm that was the issue. \nKicking myself for missing that. Makes sense since the CLI doesn't use the FPM and therefore was picking up the .env file no probs.\nI'll probably move the env vars to the nginx config for production.. ",
    "eved42": "Thanks @javiereguiluz !\nI had the same problem with a OneToMany relation. I had just the getXXX() and addXXX() functions and not removeXXX() because I didn't need it, and that was what was wrong.\nI added the removeXXX() function in my owner entity and it worked !. ",
    "danielantelo": "http://localhost:8888/index.php still gives symfony exception No route found for \"GET /\" instead of the welcome\nhttp://localhost:8888/index.php/admin now also gives symfony exception The backend is empty because you haven't configured any Doctrine entity to manage. Solution: edit your configuration file (e.g. \"app/config/config.yml\") and configure the backend under the \"easy_admin\" key. which is what i was expecting.\nTake it is a flex bug? its breaking routing without index.php being in the url and losing the welcome route... or what do you reckon?\nThanks for the reply btw. Much appreciated. . thanks @xabbuh  that got the /admin route working without the need of doing index.php/admin but the / and /index.php routes are still broken instead of showing the Welcome page. is this expected? Perhaps it is, and i just need to setup my own?\nOkay will close this issue, as it is probably not the right place for it. Thanks for the help guys.. ",
    "uncle-scrooge": "Hello tomde,\nLooking at the demo, it seems that your third solution is the right way.\nhttps://github.com/javiereguiluz/easy-admin-demo/blob/master/config/routes.yaml\n. Hello @Czacha \nThank you for your sharing.\n@tomde  please can you try Czacha  solution ?. Hello @kamalkech \nDid you implement your own authentication system ?\nIf so, you need to create your own user manager.\nThen depending the controller you are working with, you need to override the methods below and use \nyour own user manager.\nAdminController :\n - createNewUserEntity\n - prePersistUserEntity \nCustomController \n - createNewEntity \n - persistEntity\n. Hello @harikumar99 \nCan you try this please ? \nphp /**\n     * Add projectMember\n     *\n     * @param \\App\\Entity\\ProjectMember $projectMember\n     *\n     * @return Project\n     */\n    public function addProjectMember(\\App\\Entity\\ProjectMember $projectMember)\n    {\n        $this->projectMembers[] = $projectMember;\n        $projectMember->setProject($this);\n        return $this;\n    }\nPlease take a look at : https://symfony.com/doc/current/doctrine/associations.html#setting-information-from-the-inverse-side. Hello @harikumar99 \nCan you try this please ? \nphp /**\n     * Add projectMember\n     *\n     * @param \\App\\Entity\\ProjectMember $projectMember\n     *\n     * @return Project\n     */\n    public function addProjectMember(\\App\\Entity\\ProjectMember $projectMember)\n    {\n        $this->projectMembers[] = $projectMember;\n        $projectMember->setProject($this);\n        return $this;\n    }\nPlease take a look at : https://symfony.com/doc/current/doctrine/associations.html#setting-information-from-the-inverse-side. Ok, @harikumar99 \nSorry to asks you this question, but did you clear your cache ?\n. Ok, @harikumar99 \nSorry to asks you this question, but did you clear your cache ?\n. @harikumar99 \nIs the issue resolved ?. @harikumar99 \nIs the issue resolved ?. @harikumar99 \nI will try to reproduce the issue when i have a little bit of time.\nSorry for not being able to help you resolve the issue now :) . @harikumar99 \nI will try to reproduce the issue when i have a little bit of time.\nSorry for not being able to help you resolve the issue now :) . @tseho Thank you :). Hello @harikumar99 \nSorry for the late response. I was very busy lately.\nDid you resolve your issue ?\nIf not can we take a little bit of time to exchange on it ?\nPlease can you post the configuration of your form ?\nMay your issue be related to this one ? #2189 \nBest regards. Hello @harikumar99 \nSorry for the late response. I was very busy lately.\nDid you resolve your issue ?\nIf not can we take a little bit of time to exchange on it ?\nPlease can you post the configuration of your form ?\nMay your issue be related to this one ? #2189 \nBest regards. Hello @harikumar99 \nProjectMembers is a collection so it must be treated as so.\nPlease take a look at this example : \nhttps://knpuniversity.com/screencast/easyadminbundle/collection-type\nBest Regards. Hello @harikumar99 \nProjectMembers is a collection so it must be treated as so.\nPlease take a look at this example : \nhttps://knpuniversity.com/screencast/easyadminbundle/collection-type\nBest Regards. Hello @harikumar99 \nPlease take a look at the documentation below : \nhttps://symfony.com/doc/master/bundles/EasyAdminBundle/book/complex-dynamic-backends.html\nThe \"createNewEntity\" may help you bind your current project and project members.\nBest Regards\n\nCan we remove the bug label?. Hello @Farshadi73 \nIs the logic of your newAction method very different from the one provided by easyAdmin ?\nIf not you may consider using events to perform your operations.\nFor exemple you may listen to the pre-persist event of your entity to get it's data.\nPlease take a look at the link below \nhttps://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html#customization-based-on-symfony-events\nEnglish is not my native langage so i may misundertood your problem so do not hesitate to correct me.. Hello @Farshadi73 \nIs the logic of your newAction method very different from the one provided by easyAdmin ?\nIf not you may consider using events to perform your operations.\nFor exemple you may listen to the pre-persist event of your entity to get it's data.\nPlease take a look at the link below \nhttps://symfony.com/doc/current/bundles/EasyAdminBundle/book/complex-dynamic-backends.html#customization-based-on-symfony-events\nEnglish is not my native langage so i may misundertood your problem so do not hesitate to correct me.. @Farshadi73 \nLooking at https://github.com/EasyCorp/EasyAdminBundle/blob/1.x/src/Controller/AdminController.php\nThere is a method called \"renderTemplate\" thay may be helpful to you.\nI think that looking at the \"newAction\" method may be helpful to.\n. @Farshadi73 \nLooking at https://github.com/EasyCorp/EasyAdminBundle/blob/1.x/src/Controller/AdminController.php\nThere is a method called \"renderTemplate\" thay may be helpful to you.\nI think that looking at the \"newAction\" method may be helpful to.\n. Hello @thibaut-st \nAre you still facing the same issue ?\nPlease take a look at the documentation below : \nhttp://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/working-with-associations.html#transitive-persistence-cascade-operations\nYou may have missed the cascade persist operation.\nDo not hesitate to correct me if i'm wrong.\nBest Regards. Hello @thibaut-st \nSorry for the late response. I was busy lately.\nAs @samuel-cariat-pro  stated, your issue is related with the way symfony handle form collection.\nEasyAdmin is built upon symfony so i don't know if it's really pertinent to have this information on EasyAdmin side. \nPlease find below resources that may helps you : \nhttps://symfony.com/doc/current/form/form_collections.html\nhttps://knpuniversity.com/screencast/easyadminbundle/fake-custom-field\nDo not hesitate to make PRs to enhance the documentation.\nI remain at your disposal,\nBest regards. I had some issues with this line on Windows using wamp. The yaml was perceived as invalid\nFound unknown escape character \"\\C\" at line 7 (near \"resource: \"App\\Controller\\AdminController\"\")\nI solved the problem with the syntaxes below : \nresource: 'App\\Controller\\AdminController'\nresource: App\\Controller\\AdminController\nresource: \"App\\\\Controller\\\\AdminController\"\n. Ok, perfect. Thanks you. ",
    "Czacha": "i have it like this\nyaml\neasy_admin_bundle:\n    resource: 'App\\Controller\\BaseController'\n    prefix: /admin\n    type: annotation. ",
    "matesko": "Classic overriding works, but it is not convenient always. It doesnt work with php 7.1.9, both s4 app, and s3.3 easyadmin demo. The config is read, if I intentionally misspell something e.g. lazout, I get error. Whatever I put in layout key is ignored..... my config (Symfony 4), which does not work:\n```\n{# templates/partials/backendbase.html.twig #}\n{% extends \"@EasyAdmin/default/layout.html.twig\" %}\n{# tried with \"bundles/EasyAdminBundle/default/layout.html.twig\" also, or extends \"zzz\", totally ignored #}\n{% block wrapper %}\nbackendbase.html.twig  is running!\n{% endblock %}\n```\neasy_admin:\n    site_name: 'Test site'\n    design:\n        templates:\n            layout: '@App/partials/backendbase.html.twig'  # here I can also put anything and it is ignored. It does not. It totally ignores that key. The error is thrown if I put for example layoout. So the key is read, but the content is ignored. \n. I dont understand this, all I did now was some injection of dumps (EasyAdminConfigPass.php, and stuff) to try and see where the problem is, and now it started working!? . ",
    "olaviivask": "Anyone has insight? Or is there another way to resolve this. ",
    "jakobeissler": "@javiereguiluz thank you for answering. I tried your solution but it still is triggered twice. I've injected RequestStack and checked isXmlHttpRequest(), and in both cases it is not an ajax call. It happens every time i update a form (no ajax).. @javiereguiluz thank you for answering. I tried your solution but it still is triggered twice. I've injected RequestStack and checked isXmlHttpRequest(), and in both cases it is not an ajax call. It happens every time i update a form (no ajax).. ",
    "mrbase": "You are welcome - and thank you for an awesome bundle \ud83d\udc4d . You are welcome - and thank you for an awesome bundle \ud83d\udc4d . ",
    "aminebenhariz": "@javiereguiluz Why the class name is displayed when the association is empty ?. @lemonlab, yes, in my PR #2020, I replaced it with 'null' to fix this bug.\nWhat I'm asking, is the reason behind it: Why it was made like this in the first place ?. Hi @EloneSampaio,\nDid you update the routing (config/routes/easy_admin.yaml) to use your custom AdminController ?. For example : \nyaml\neasy_admin_bundle:\n    #resource: '@EasyAdminBundle/Controller/AdminController.php'\n    resource: 'App\\Controller\\AdminController'\n    prefix: /admin\n    type: annotation. @EloneSampaio have you made any progress ?. Why not adding one line before the link to introduce the next chapter ?\n\nNext, we're going to play with YAML configuration and learn how to override templates.\nNext chapter\n. \n",
    "geekovski": "I have the same problem. In issue #1918 says that it works, but not for me.. I found a solution to remove, but nor for update \nChange:\n/**\n* @ORM\\OneToMany(targetEntity=\"App\\Entity\\Article\", mappedBy=\"dossier\", cascade=\"persist\",\"remove\"})\n*/\nin Dossier.php to:\n/**\n* @ORM\\OneToMany(targetEntity=\"App\\Entity\\Article\", mappedBy=\"dossier\", cascade={\"persist\",\"remove\"}, orphanRemoval=true)\n*/\nAnd change: \n/**\n* @ORM\\ManyToOne(targetEntity=\"App\\Entity\\Dossier\", inversedBy=\"articles\", cascade={\"persist\",\"remove\"})\n*/\nin Article.php to\n/**\n* @ORM\\ManyToOne(targetEntity=\"App\\Entity\\Dossier\", inversedBy=\"articles\")\n*/\nThis is a special kind of magic.... ",
    "nikophil": "hi,\ni was exactly working on something similar\nthis feature is really needed !\nthanks\n\ud83d\udc4d . couldn't we at least provide a parameter for the \"list\" view, that gives us the possibility to chose wether or not using outputWalker ?\nAnd probably disable sorting on foreign keys in that case.\nI need to make different lists, based on a groupBy and a count() which could not be handled via dql_filters, and i had to override AdminController::createOrmPaginator to perform this...\n. Hello Javier,\ndo you want that i provide my implementation with a PR ?\n. ok, actually i was forgetting to add boostrap js to webpack... \nclosed.... ",
    "EloneSampaio": "how do I do that? Do you have any examples for me to see?. Thanks, I was having this problem and could not solve. ",
    "pavbis": "@aminebenhariz you saved my day. It works after updating the routing. Thanks \ud83d\udc4d . ",
    "jenyak": "@javiereguiluz I have a class like this\n```\n// src/AppBundle/Controller/AdminController.php\nnamespace AppBundle\\Controller;\nuse AppBundle\\Entity\\User;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController as BaseAdminController;\nclass AdminController extends BaseAdminController\n{\n    public function persistUserEntity($user)\n    {\n        //...\n        parent::persistUserEntity($user);\n    }\n    //...\n}\n``\nwhen I tried create new user I got an errorAttempted to call an undefined method named \"persistUserEntity\" of class \"EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController\".`\nSo \"dynamically named methods\" work for my class but not work for parent class. @javiereguiluz Please check again this PR. It seems to me that this PR is correct and you misunderstood it.. @javiereguiluz Please check again this PR. It seems to me that this PR is correct and you misunderstood it.. ",
    "michalkurzeja": "Thanks!. ",
    "sebastianblum": "Thank you very much @ad3n, we have the same issue :)\nWhen is the next minor release planned?. ",
    "R2c": ":+1: Thanks. ",
    "harikumar99": "@uncle-scrooge I tried this earlier and now also tried this but couldn't get the result as expected  . @uncle-scrooge I tried this earlier and now also tried this but couldn't get the result as expected  . OK @uncle-scrooge\nBut it doesn't work too.. OK @uncle-scrooge\nBut it doesn't work too.. @uncle-scrooge  \nNo . @uncle-scrooge  \nNo . @uncle-scrooge \nI think this issue can't be fixed. So that i had closed the issue. @uncle-scrooge \nI think this issue can't be fixed. So that i had closed the issue. @uncle-scrooge  \nThank you for your valuable time :). @uncle-scrooge  \nThank you for your valuable time :). Can't fix with this yet ! \nBy removing entity from flush call\nPlease any one help!\nI override easy admin controller in MyAdminController.php\nprotected function persistEntity($entity)\n    {\n        $this->em->persist($entity);\n        $this->em->flush();\n    }\nprotected function updateEntity($entity)\n{\n    $this->em->flush();\n}\n\nprotected function removeEntity($entity)\n{\n    $this->em->remove($entity);\n    $this->em->flush();\n}\n\n. @uncle-scrooge  @fralazar \nI didn't resolve this issue. I didn't get exact result yet.\nBy setting \"by_reference:flase\" to Project member field and  check in browser shows exception\nAn exception has been thrown during the rendering of a template (\"Catchable Fatal Error: Object of class Doctrine\\ORM\\PersistentCollection could not be converted to string\").\neasyadmin.yaml\n Project:\n            class: App\\Entity\\Project\n            list:\n                  title: \"Projects\"\n            form:\n                fields: \n                    - 'name'\n                    - {property: 'ProjectMembers', type_options: { by_reference: false }}\n. @uncle-scrooge  @fralazar \nI didn't resolve this issue. I didn't get exact result yet.\nBy setting \"by_reference:flase\" to Project member field and  check in browser shows exception\nAn exception has been thrown during the rendering of a template (\"Catchable Fatal Error: Object of class Doctrine\\ORM\\PersistentCollection could not be converted to string\").\neasyadmin.yaml\n Project:\n            class: App\\Entity\\Project\n            list:\n                  title: \"Projects\"\n            form:\n                fields: \n                    - 'name'\n                    - {property: 'ProjectMembers', type_options: { by_reference: false }}\n. Hello @uncle-scrooge \nThanks a lot. It perfectly works.. Hello @uncle-scrooge \nHow to load current form data inside the collection field?\nIs that possible?\nIn my project, User can create project and add projectMembers to the project.  I set projectMembers as collection type and its now loaded with Users and Projects. For edit and remove works good. But, if i want to add new project : Projectmember field loaded with user and project (user can be added and project field up with previous project, i want to set current project)\nThanks.\nAttached a screenshot for reference and i want to load current project name in the Project field\n\n. Hello @uncle-scrooge \nYeah. Please remove the bug tag. Hello @uncle-scrooge \nI want to set current project id to Project member ( project _id). \nIs that possible? I tired but didn't get expected result\nThanks. Hi all,\nFound solution. \nThanks a lot.. ",
    "fralazar": "@harikumar99 looks like addProjectMember() is never called, did you set by_reference: false on your easy_admin.yml ?. @harikumar99 looks like addProjectMember() is never called, did you set by_reference: false on your easy_admin.yml ?. Ok the problem was that i was missing the removeMedia method on Producto entity, as Symfony validates this even if by_reference is set to false.\n. Ok the problem was that i was missing the removeMedia method on Producto entity, as Symfony validates this even if by_reference is set to false.\n. ",
    "gonzalovilaseca": "@javiereguiluz I'd like to contribute to this repo, please let me know if there is any specific thing I can help with.. @javiereguiluz I've started working on this one, when you say Delete all the contents that are in the default form themes and keep only our own widget blocks., do you mean keep just the ones that are not in symfony's bootstrap templates, or also keep the ones that are in both files but are different?\nFor example {% block button_row -%} is in Resources/views/form/layout.html.twig and in symfony/twig-bridge/Resources/views/Form/bootstrap_3_layout.html.twig, but the block contents is not identical.. ",
    "MConrotte": "I have this issue too with symfony 2.8.... ",
    "tolbon": "I have the same problem like you make a \nbash\ncomposer update\nto pass your easyadminbundle to  1.17.11 -> 1.17.12\nthat's solve, for me, the problem with tabs. ",
    "glaubinix": "Hey @laytoneverson, I have been using the enum type with the EasyAdmin bundle for a while without any issues.\nAll you need to do is what is described in this markdown file: https://github.com/fre5h/DoctrineEnumBundle/blob/master/Resources/docs/example_of_using.md\nYou might also want to have a look at this: https://github.com/fre5h/DoctrineEnumBundle/issues/102#issuecomment-319901012\nHappy to help you out. Any chance you could post your custom enum type and the entity property where you use it?. @laytoneverson I was able to have a look at it and created a pull request in the EnumType repository. The issue is not related to the EasyAdminBundle. Therefore I think this issue can be closed.\nPR can be found here: https://github.com/fre5h/DoctrineEnumBundle/pull/125. @ktrzos I just build the same feature with more or less the same code (only saw your PR when I was done).\nThis should be a leftJoin same as line 94/95. Happy to contribute tests or whatever is necessary to get this merged.. ",
    "laytoneverson": "Sure thing!\nhttps://gist.github.com/laytoneverson/6a0b2fdb77d8c520385bce9e53e65c59\nIf you want to run the project there is a docker config and a pretty easy setup: https://github.com/laytoneverson/yourweb.agency\nbin\\build.ps1 dev\ndocker-compose up -d\ndocker-compose exec php bash\nbin/console doctrine:migrations:migrate\n\n... etc etc etc\nYou will have to encode a password and set it in the env and you can access the admin at /_edit_site_data\n. Sure thing!\nhttps://gist.github.com/laytoneverson/6a0b2fdb77d8c520385bce9e53e65c59\nIf you want to run the project there is a docker config and a pretty easy setup: https://github.com/laytoneverson/yourweb.agency\nbin\\build.ps1 dev\ndocker-compose up -d\ndocker-compose exec php bash\nbin/console doctrine:migrations:migrate\n\n... etc etc etc\nYou will have to encode a password and set it in the env and you can access the admin at /_edit_site_data\n. ",
    "albemumo": "You can create one-level menu like this:\n\nUsers\nList of Users\nCreate New User\nVisitor\nList of Visitor\nCreate New Visitor\nCredit\nList of Credit\nCreate New Credit\nCreate For User\nCreate For Visitor\n\nBut not with more level childrens with yaml configuration.. ",
    "Farshadi73": "Finally find answer , sorry , \n- { property: 'fields', type: 'collection', type_options: {'entry_type': 'AppBundle\\Form\\Common\\FieldType', error_bubbling: false, by_reference: false, allow_add: true, allow_delete: true, delete_empty: true, entry_options: {'label': false}} }. Does any body have any idea about this problem??\nJust need form and ability to back easyadmin default form (defined in yml file). @javiereguiluz Thanks for your answer :+1: \n1- I'm not very express and new this around ... but before use easyadminbundle, handle this problem with this condition :\n```\n{% for field in model.tableFields %}\n                            \n    {{ attribute(item, field) }}\n  \n{% endfor %}\n```\n2- thanks about this .. find the solution , I define type in fields and that's my mistake ... \nUpdate :\n- { property: 'segment.%locale%Title', label: 'narmafzam.assessment.element.fields.segment' }\nI need show title of entity ... but doesn't work when define like above ... \n- { property: 'segment', label: 'narmafzam.assessment.element.fields.segment' }\nwhen I use above everything is fine but not show name of segment (Segment is Entity)\n3- can you show me example ?? or some link to example ... \nThank you very much .... . @javiereguiluz Thanks for your answer :+1: \n1- I'm not very express and new this around ... but before use easyadminbundle, handle this problem with this condition :\n```\n{% for field in model.tableFields %}\n                            \n    {{ attribute(item, field) }}\n  \n{% endfor %}\n```\n2- thanks about this .. find the solution , I define type in fields and that's my mistake ... \nUpdate :\n- { property: 'segment.%locale%Title', label: 'narmafzam.assessment.element.fields.segment' }\nI need show title of entity ... but doesn't work when define like above ... \n- { property: 'segment', label: 'narmafzam.assessment.element.fields.segment' }\nwhen I use above everything is fine but not show name of segment (Segment is Entity)\n3- can you show me example ?? or some link to example ... \nThank you very much .... . ",
    "Nyholm": "Thank you for merging. . ",
    "samuel-girard": "I agree with the noreferer by default option for external URLs.\nI updated my branch with your remarks and tested (it is working fine).\nWhat is the policy on the bundle regarding new features? I saw that it is frozen until the 2.x release, right?. I agree with the noreferer by default option for external URLs.\nI updated my branch with your remarks and tested (it is working fine).\nWhat is the policy on the bundle regarding new features? I saw that it is frozen until the 2.x release, right?. ",
    "lex111": "I do not understand why Travis falls, because looks I did everything correct :(. I do not understand why Travis falls, because looks I did everything correct :(. @javiereguiluz sorry, I am pretty confused, thanks for the explanations, I fixed the tests,  Travis build was completed without errors.. @javiereguiluz sorry, I am pretty confused, thanks for the explanations, I fixed the tests,  Travis build was completed without errors.. ",
    "kkreft": ":+1: for the first, the most classic one IMO.. @javiereguiluz I can do this.. ",
    "MKyser": "Great!\nThank you very much for your answer, but also the rapidity.\nI'll try this right now.. Here is the solution:\nFile config.yml:\n- { property: 'url_amz', label: ' ', type: 'url', template: 'easy_admin/fields/_url1.html.twig' }\nFile _url.html.twig\n<a href=\"{{ value }}\">\n<img src=\"{{ asset('Img/Amz.svg') }}\" alt=\"Amazon logo\" style=\"height: 30px;\"/>\n</a>. ",
    "Plopix": "I am working on master with sf4, I run into that bug, and I think this PR fixes it. Let me know @javiereguiluz ( would love to have that merge asap to have my preprod env stable :) )\nThanks!. Ok nevermind I was too fast, I am only reading the #2148 and my fix is not new at all... \nI am closing that right away, and going to go back on 1.x. Thx anyway!. Sorry did not read #2148 before to submit that.. ",
    "mihai3n3": "Any updates? It is a big feature that i wana use in prod :). ",
    "TomasNyvlt": "Thanks! :-) . ",
    "Padam87": "This would be very useful for custom themes as well. When I used a BS4 theme for easyadmin It was a bit of a chore to deal with.. This would be very useful for custom themes as well. When I used a BS4 theme for easyadmin It was a bit of a chore to deal with.. ",
    "11someone": "my mistake I don't see I put at the end again\n- { property: 'funFact', type: 'textarea' }\n and that replace the property heheh . ",
    "ro0NL": "HI @CheapHasz it seems the same is happening from the list template at {% for item in paginator.currentPageResults %}. HI @CheapHasz it seems the same is happening from the list template at {% for item in paginator.currentPageResults %}. If i sort the list overview using an embedded field the pagination also makes the query builder crash:\nEn exception has been thrown during the rendering of a template (\"[Semantical Error] line 0, col 75 near 'embedded ORDER': Error: Class App\\Entity has no association named embedded\").\nEven after applying this fix.. If i sort the list overview using an embedded field the pagination also makes the query builder crash:\nEn exception has been thrown during the rendering of a template (\"[Semantical Error] line 0, col 75 near 'embedded ORDER': Error: Class App\\Entity has no association named embedded\").\nEven after applying this fix.. Ah i see there's some work in progress :) #2209. Ah i see there's some work in progress :) #2209. ",
    "CheapHasz": "Hi.\nI don't understand your concern, would you care to elaborate ?. Hi.\nI don't understand your concern, would you care to elaborate ?.  Would you happen to sort directly on the embedded field, and not on one of its attributes ?\nIt would make sense that the querybuilder don't know what to do with it, as embedded objects don't have an intrinsic fields on which to sort, and sorting on the object property wouldn't mean anything.\nHowever, if i use an embedded.name as my listing field, the sorting works and don't make the listing crash..  Would you happen to sort directly on the embedded field, and not on one of its attributes ?\nIt would make sense that the querybuilder don't know what to do with it, as embedded objects don't have an intrinsic fields on which to sort, and sorting on the object property wouldn't mean anything.\nHowever, if i use an embedded.name as my listing field, the sorting works and don't make the listing crash.. ",
    "kristoftorfs": "Is there any change this could get merged pretty soon? I just had to downgrade to 1.17.10 because of this issue.. ",
    "EtchAkhtar": "same .... would be very helpful to get this merged.  thx. same .... would be very helpful to get this merged.  thx. @javiereguiluz thx for that.  actually upon updating the package I realized this commit from August has been reverted since (allowing pagerfanta ~2.0) ... was it by mistake?\nhttps://github.com/EasyCorp/EasyAdminBundle/commit/8a6e2872e312dd2cf9cb97748f79ae876cd3ced3#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780. ",
    "erelke": "override easyadmin_widget block, modify line:\n{{ tab_config['label'] }}\nto\n{{ tab_config['label']|trans({}, _translation_domain) }}\n;). override easyadmin_widget block, modify line:\n{{ tab_config['label'] }}\nto\n{{ tab_config['label']|trans({}, _translation_domain) }}\n;). I use this bundle for this scope: [https://packagist.org/packages/tetranz/select2entity-bundle]\n. ",
    "artem328": "@erelke I'll check it out tonight and will create a PR. @erelke I'll check it out tonight and will create a PR. ",
    "lmlsna": "Probably whatever value is in {{ item }} is an Entity or some other object.\nSince Twig 2.3 you can add the method __toString() into any unprintable class (including entities) and it will magically print the output of that function.\nAdd this to whatever object is causing the problem (ideally, you should add it to all your entities).\npublic function __toString() { return $this->getId(); /* or whatever you want */ }\n   . Actually nevermind, this will bork editing unless you do the same thing in reverse before saving. I'll reopen this if I figure that out.. ",
    "moynzzz": "This problem is not only for autocomplete fields. This problem is for every javascript field that we initialize with easyadmins javascript ie. select2 widgets and nullable controls.\nWhen I was testing if this bug still exists I found another bug. The autocomplete select2 is not translated because it is initialized from the included javascript where we are missing language: '{{ _select2_locale }}' \n that is why the select2's are initialized in this file src/Resources/views/default/includes/_select2_widget.html.twig and not in src/Resources/public/bundles/easyadmin/javascript/easyadmin.js \nThe solution I propose is as follows:\nIn view src/Resources/views/default/includes/_select2_widget.html.twig I added the following code:\njs\n$('#main').on('easyadmin.collection.item-added', '[data-prototype]', function () {\n    // Find last children of the collection div (ie. the newly added item) and initialize\n   //  select2 on elements that have the data widget attribute\n    $(this).children().last().find('form select[data-widget=\"select2\"]').select2({\n        theme: 'bootstrap',\n        language: '{{ _select2_locale }}'\n    });\n});\nI think that the autocomplete functionality should be moved here and implemented with the same on new item handler because language: '{{ _select2_locale }}' isn't set on the select2 that is initialized with that functionality.\nFor the autocomplete functionality something like this:\n```js\n$('#main').find('form select[data-easyadmin-autocomplete-url]').each(function () {\n    var $this = $(this),\n        url = $this.data('easyadmin-autocomplete-url');\n// This will be replaced with some common function\n// it is like this only for showing purposes\n$this.select2({\n    theme: 'bootstrap',\n    ajax: {\n        url: url,\n        dataType: 'json',\n        delay: 250,\n        data: function (params) {\n            return { 'query': params.term, 'page': params.page };\n        },\n        // to indicate that infinite scrolling can be used\n        processResults: function (data, params) {\n            return {\n                results: data.results,\n                pagination: {\n                    more: data.has_next_page\n                }\n            };\n        },\n        cache: true\n    },\n    placeholder: '',\n    allowClear: true,\n    minimumInputLength: 1,\n    language: '{{ _select2_locale }}'\n});\n\n});\n$('#main').on('easyadmin.collection.item-added', '[data-prototype]', function () {\n    $(this).children().last().find('select[data-easyadmin-autocomplete-url]').each(function () {\n        var $this = $(this),\n            url = $this.data('easyadmin-autocomplete-url');\n    // This will be replaced with some common function\n    // it is like this only for showing purposes\n    $this.select2({\n        theme: 'bootstrap',\n        ajax: {\n            url: url,\n            dataType: 'json',\n            delay: 250,\n            data: function (params) {\n                return { 'query': params.term, 'page': params.page };\n            },\n            // to indicate that infinite scrolling can be used\n            processResults: function (data, params) {\n                return {\n                    results: data.results,\n                    pagination: {\n                        more: data.has_next_page\n                    }\n                };\n            },\n            cache: true\n        },\n        placeholder: '',\n        allowClear: true,\n        minimumInputLength: 1,\n        language: '{{ _select2_locale }}'\n    });\n});\n\n});\n```\nMaybe the place will not be right but I think it will be bad to copy the logic for setting the _select2_locale if we craete another file for that javascript.\nFor the nullable fields we can do the following:\njs\n$('#main').on('easyadmin.collection.item-added', '[data-prototype]', function () {\n    $(this).children().last().find('.nullable-control :checkbox').on('change', fnNullDates).each(fnNullDates);\n});\nand the fnNullDates function can be moved from src/Resources/public/bundles/easyadmin/javascript/easyadmin.js to the file where it is needed.\nAlso I think for the autocomplete and nullable controls the file src/Resources/public/bundles/easyadmin/javascript/easyadmin.js is not right because this code is executed on every page but we have forms only on new and edit. Thats why we include the select2 file src/Resources/views/default/includes/_select2_widget.html.twig only in new and edit views.\nSo another option IMO is to create one new file easyadmin_form.js and add logic for new and edit forms there and before requiring that file in the html we can set a variable for the _select2_locale property.\n@javiereguiluz WDYT?\nIf we are okay with this changes I will work on a PR.\nAlso the issue can be edited as follows:\nJavascript dependent fields aren't initialized on collection add item action.. I am not sure how to tackle the problems:\nSummarizing my long post problems are:\n\n\nThe autocomplete select2 is not translated because it is initialized from the included javascript where we are missing language: {{ _select2_locale }}. Also this autocomplete functionality cannot be used if we do not include select2.\nIs it ok to move the autocomplete functionality to this file src/Resources/views/default/includes/_select2_widget.html.twig?\n\n\nAnd for solution for initializing fields is it ok to add a listener on [data-prototype] types like this:\njs\n$('#main').on('easyadmin.collection.item-added', '[data-prototype]', function () {\n    /* Initialize autocomplete widgets, select2 widgets and nullable fields widget */\n});\nThe listener will be added in the same file src/Resources/views/default/includes/_select2_widget.html.twig.\n\n\n@javiereguiluz WDYT?. This is a very edge case problem and it is on the Symfony side. The problem resides in Symfony\\Component\\Form\\FormView and its public properties, for good measures I think their names should not be used for form names.\nThe specific problem here is that the FormView class has a public property parent which is used to retrieve the parent form. But when you add a child to this form with the name parent on the twig side it calls the ArrayAccess methods that retrieve the child at that offset.\nThe check that we have at src/Resources/views/form/bootstrap_3_layout.html.twig is as follows\ntwig\n{% if form.parent.vars.allow_delete|default(false) %}\nHere it is trying to access the parent form but instead it access the child which doesn't have the property allow_delete and that is why the remove item link doesn't exist.\nI don't know a way in twig to tell to access the specific property only so I think this can't be fixed.\nI will create an issue on the symfony board about this, hope they will come up with a solution or forbid the use of FormView's variables (children, vars, parent).. Hello @ElGecko76,\nThe best way to create a form error is to create a validator for the form.\nI suggest to create a custom validator constraint?\nSee https://symfony.com/doc/current/validation/custom_constraint.html\nYou can create a class validator constraint and then you can assign an error on the whole form or on the specified field that is wrong.\nTo validate the whole class you can use class constriants see https://symfony.com/doc/current/validation/custom_constraint.html#class-constraint-validator.\nTo set an error to the whole form you just add a violation:\n$this->context->buildViolation($constraint->message)->addViolation();\nTo set an error for specific field:\n$this->context->buildViolation($constraint->message)->atPath('pathToField')->addViolation();\nIf you need other dependencies in the validator see https://symfony.com/doc/current/validation/custom_constraint.html#constraint-validators-with-dependencies.\nIf you aren't using the last symfony version switch the documentation to your version in order to understand custom validation constraints.\n. I think a better solution to this problem is to fix it only for the help message because a lot of people may extend the layout template for custom routes where there is no entity managed and we may have to duplicate the check if there exist an entity configuration.  WDYT? I have prepared a pull request.. I think a better solution to this problem is to fix it only for the help message because a lot of people may extend the layout template for custom routes where there is no entity managed and we may have to duplicate the check if there exist an entity configuration.  WDYT? I have prepared a pull request.. I can do it myself but I will be really grateful if you can help me because it will be my first PR.. Can you create a sample repository to reproduce the issue?. Can you create a sample repository to reproduce the issue?. Hello @treetop1500 and thank you for reporting this issue.\nThe problem with the missing help texts is a misunderstanding. The help option that you pass to your form type is not the same as the help option that is passed to EasyAdmin confgiuration.\nIn your custom form you are sending a form option. In the configuration of EasyAdmin it will look like this:\n- { property: 'example', type: 'text', type_options: { help: 'Help text' } }\nEasyAdmin doesn't support this as it does not look in type options.\nIt is unable at the current state of the bundle to set a help text in a subform.\nHelp texts are set only on entity configuration and they don't depend on the form type nor its options.\nYour other issue with the doubling of the help text is a bug in EasyAdmin and I will work on a fix.\n. Hello @treetop1500 and thank you for reporting this issue.\nThe problem with the missing help texts is a misunderstanding. The help option that you pass to your form type is not the same as the help option that is passed to EasyAdmin confgiuration.\nIn your custom form you are sending a form option. In the configuration of EasyAdmin it will look like this:\n- { property: 'example', type: 'text', type_options: { help: 'Help text' } }\nEasyAdmin doesn't support this as it does not look in type options.\nIt is unable at the current state of the bundle to set a help text in a subform.\nHelp texts are set only on entity configuration and they don't depend on the form type nor its options.\nYour other issue with the doubling of the help text is a bug in EasyAdmin and I will work on a fix.\n. Okay the default format is as I wrote %y Year(s) %m Month(s) %d Day(s) so the PR is ready to be merged.. Can you provide where do you get this error and what is the stack trace?. ",
    "luxferoo": "Thanks @javiereguiluz ! Meanwhile I overridden ActionConfigPass and MenuConfigPass and know I can restrict access to entities with easy_admin.yml \ud83d\udc4d . ",
    "birkof": "@matudelatower would be fixed by https://github.com/EasyCorp/EasyAdminBundle/issues/2238 (cc @alterphp) . @matudelatower would be fixed by https://github.com/EasyCorp/EasyAdminBundle/issues/2238 (cc @alterphp) . ",
    "pyrech": "I got the same issue with 1.17.14. With the following config, the delete and edit action are still displayed:\nyaml\neasy_admin:\n    list:\n        actions:\n            - { name: 'show', icon: 'search' }\n            - { name: 'edit', icon: 'pencil' }\n            - { name: 'delete', icon: 'trash-o' }\n    entities:\n        Url:\n            class: App\\Entity\\Url\n            list:\n                actions: ['show', '-delete', '-edit']. ",
    "flim": "Yes it works, but I expected a fix using the yml routing.. Yes it works, but I expected a fix using the yml routing.. ",
    "kiler129": "While the idea is good I don't think it would be easy to convert whole EAB to use DTOs.\nEdit: see https://github.com/EasyCorp/EasyAdminBundle/issues/1819. ",
    "dhaaker": "Sorry, PR from the wrong branch. I'll create a new one.. Or maybe a dual approach as in #2040. ",
    "monsieurchico": "where are we on the issue ?. I had to rollback to 1.17.2 because easyadmin was not able to load my template.... ",
    "mankej": "Before 1.17.13 easyadmin was able to find templates in this format @AppBundle/Resources/views/test/test.html.twig\nnow (after applying #2262) only working format is \n@App/test/test.html.twig\ni don't know if this is feature or bug but will be good to mention about this in docs or fix\n. @xabbuh After quick check i think the problem lies in  TemplateConfigPass::findFirstExistingTemplate and lacking template path normalization. Before 1.17.13  $this->tiwgLoader->exists() provided normalization.. Nope \\Twig_Loader_Filesystem::normalizeName() normalizes only path for file system you need to normalize @App/Resources/views/easy_admin/show.html.twig to @App/easy_admin/show.html.twig or sth, this allow you  to compare them in right way. \nRevealing the problem\nYou fill existingTemplates in this way:\nif (\\Twig_Loader_Filesystem::MAIN_NAMESPACE !== $namespace) {\n    $template = sprintf('@%s/%s', $namespace, $template);\n}\n$this->existingTemplates[$namespace][$template] = true;\nand check if actual template exists in this way\nif (null !== $templatePath && isset($this->existingTemplates[$namespace][$templatePath])) {\nreturn $templatePath;\n}\nwhere values are:\n$template - @App/easy_admin/show.html.twig\n$templatePath - @App/Resources/views/easy_admin/show.html.twig\nTo understand how this worked before 1.17.13 look into Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader::findTemplate() there is fallback to TemplateNameParser which parse paths like Namespace:Entity:filename.html.twig and FileLocator which uses Kernel::locateResource() to load paths like @App/Resources/views/easy_admin/show.html.twig.. I never wrote it's normalized to this form. I wrote there is lacking normalization in TemplateConfigPass::findFirstExisting. '@App/Resources/' is for resources loading propuse with Kernel::locateResource() which is used as fallback in symfony TwigBundle. My point is that $this->tiwgLoader->exists() performs checking in completely other way then findFirstExisting() now.. ",
    "Wait4Code": "Thanks you ! I totally forgot that i've override the template. I just did the update and... Yes, this bug still exists. Issue #2289 is resolved but it's about database query build. This current issue is about creating right links in templates.. ",
    "g-trinh": "I have a custom user rights system that has to disable actions, menu items, views... I cannot check at build time whether some parts of my admin should be disabled or not.\nSo I overrode the ConfigManager::isActionEnabled() to add a custom check on a custom admin config field.\nFor example :\n#config/packages/easy_admin.yaml\neasy_admin:\n    ...\n    MyEntity:\n        ...\n        show:\n            title: 'Commande n\u00b0 %%entity_id%%'\n            role: 'my_custom_role'\n\nI also implemented a custom Voter to check for that role whenever i need to.\nThen let's say i need to check if i should display the \"show\" item action in the list view.\nI need to retrieve that role from the action, and send it to the Symfony's AccessDecisionManager, which would look like this :\npublic function isActionEnabled($entityName, $view, $action)\n{\n    $entityConfig = $this->parentConfigManager->getEntityConfig($entityName);\n\n    return $this->parentConfigManager->isActionEnabled($entityName, $view, $action) &&\n        $this->userRoleChecker->isGranted($entityConfig[$action]['role'] ?? '')\n    ;\n}\n\nI don't understand how can ConfigPasses help me there as everything can only be checked at runtime.. This method would be great to check rights when i need to access a view. But it would not be relevent when i'll check something inside a twig template for example.\nIf I want to hide the \"new\" action button in the list view based on the custom role, i have to use this :\n{% if easyadmin_action_is_enabled_for_list_view('new', _entity_config.name) %}\n\nwhich does not use the AdminController::isActionAllowed() method.. I think the easyadmin_action_is_enabled and the easyadmin_action_is_enabled_for_*_view twig functions and the AdminController::isActionAllowed() and AdminController::isGranted() are good enough.\nHowever, I think the problem comes from the lack of a central security system.\nI think a kind of EasyAdminItemAccessManager should do the trick. It would bear all of the security logic, based on the entity configuration (for actions' management at build time) and the Symfony's Security component (for actions' management at runtime).\nBased on my configuration :\n#config/packages/easy_admin.yaml\neasy_admin:\n...\nMyEntity:\n    ...\n    show:\n        title: 'Commande n\u00b0 %%entity_id%%'\n        role: 'my_custom_role'\n\nThis is what i am thinking of :\n#EasyAdmin/Security/ItemAccessChecker:\nclass ItemAccessChecker implements ItemAccessCheckerInterface {\n    /** @var ConfigManager */\n    private $configManager;\n\n    ...\n\n    public function vote($entityName, $actionName) {\n        $entity = $this->configManager->getEntityConfig($entityName);\n\n        if (false === in_array($actionName, $entity['disabled_actions'], true)) {\n            return false;\n        }\n\n        /**\n         * $entity['action']['role'] could either be a string or an array\n         * for multiple roles whitelist\n         *\n         * Maybe dispatch an event or collect deciders\n         * from a tag and call them all\n         * instead of injecting the access decision manager ?\n         * This would let us plug our own security system\n         **/\n        $attribute = [$entity[$actionName]['role']] ?? '';\n        if (false === $this->accessDecisionManager->decide($attribute)) {\n             return false;\n        }\n\n        return true;\n    }\n}\n\n. ",
    "wlalele": "+1 . ",
    "netproject0": "Hello,\nI would appreciate any help.\nBest.. Ouf. I just finish to migrate to Sf4 :p\nI'll try your extension asap and i give you my feedbacks.\nThank you so much. @sebheitzmann \nHi,\nDummy question :D\n=> To install your Extension, is it :\n1 / \"composer require lle/easyadmin-plus-bundle\" => From the doc on https://github.com/2lenet/EasyAdminPlusBundle \nWith this i've an console error =>                                                          \n\n[InvalidArgumentException]  Could not find a matching version of package lle/easyadmin-plus-bundle. Check the package spelling, your version constraint and that the package is available in a stability which matches your minimum-stability (stable). \n\nOr \n2 \"composer require 2lenet/easyadmin-plus-bundle\" =>   From the firstline on https://packagist.org/packages/2lenet/easyadmin-plus-bundle ?\nWith this, i can install Extension, i follow your guidelines and when i load my administration i've this error :\n\nUncaught PHP Exception Twig_Error_Loader: \"Unable to find template \"LleEasyAdminPlusBundle:form:widget.html.twig\" (looked into: /Applications/MAMP/htdocs/Test/Symfony/templates, /Applications/MAMP/htdocs/Test/Symfony/templates, /Applications/MAMP/htdocs/Test/Symfony/vendor/symfony/twig-bridge/Resources/views/Form).\" at /Applications/MAMP/htdocs/Test/Symfony/vendor/easycorp/easyadmin-bundle/src/Resources/views/default/includes/_delete_form.html.twig line 2\n\nWhat i've miss ?\n---------EDIT -------------\nI continue debugging on this new issue : https://github.com/2lenet/EasyAdminPlusBundle/issues/7\nThank for you support.\nBest.. ",
    "sebheitzmann": "I have implemented a first version of an EasyAdmin Extension that support nested set. No dependency on gedmo. You just need a lft, rgt an id field.\nMore info on https://github.com/2lenet/EasyAdminPlusBundle\nand https://github.com/2lenet/EasyAdminPlusBundle/blob/master/doc/chapter-8.md\nThanks for any comment.. Does someone work on this ?. Does someone work on this ?. Can I make a PR for this future. I think's it's not so hard and would not be so intrusive. I will try and we will see if it's ok for you after i've made the code.\nThanks. ",
    "uirapuru": "I had the same problem here with entity.templates.show option, probably some paths are skipped in TemplateConfigPass as I checked this with xdebug. ",
    "damaya": "Another way should be using packages https://symfony.com/doc/current/reference/configuration/framework.html#packages from your app config, and from there you use your custom cdn, update your templates to use this package, and use the default behavior with local resources for easy admin.\n``` yaml\nconfig/packages/framework.yaml\nframework:\n     assets:\n         # this strategy is applied to every asset (including packages)\n         version_strategy: 'app.asset.my_versioning_strategy'\n         packages:\n             foo_package:\n                 # this package removes any versioning (its assets won't be versioned)\n                 version: ~\n             bar_package:\n                 # this package uses its own strategy (the default strategy is ignored)\n                 version_strategy: 'app.asset.another_version_strategy'\n             baz_package:\n                 # this package inherits the default strategy\n                 base_path: '/images'\n```\nAnother way also could be copy the minified easyadmin js/css resources and using them from your local cdn.\n@javiereguiluz it would be nice to have the easyadmin assets called in an assets package to avoid this to interfere with the default symfony assets, there is another workaround for issues like this https://github.com/EasyCorp/EasyAdminBundle/issues/931 but keeping in mind that the main goal is to use custom CDNS and avoid using local files.. ",
    "c33s": "@xabbuh of course it was not intentional, i tried to express that i know that with: \n\nof course errors happen...\n\njust wanted to say we should be more careful and that so many changes. also performance optimizations should not be part of a patch release (only if there was a bug which make the bundle so slow, that it is unuseable). as far as i understand it, the PR #2249 would have made it in the patch release if it wouldn't have been a BC break (the merge of the bc break was an accident), where it should be a minor release because not only bug fixes are in it.\nmaybe i used the wrong vocabulary, with withdraw i mean not completly withdraw, just a part withdraw. in the new organization i only see contributors and no members, before it was javiers project and he was the main contact person. i only read that he has not so much time now, which i can fully understand, and theirfor easyadmin was transfered to this organisation. \ni struggle myself to be a good opensource contributor and still be able to getting my work done. . ",
    "ryshu": "Fixed by Issue #2262 . Fixed by Issue #2262 . ",
    "juuuuuu": "If it becomes by configuration, then it's not EasyAdmin anymore, I guess :smiley: . ",
    "B-Galati": "Best article on the subject https://blog.ircmaxell.com/2015/11/simple-easy-risk-and-change.html. Best article on the subject https://blog.ircmaxell.com/2015/11/simple-easy-risk-and-change.html. ",
    "Tomsgu": "Bootstrap 4 update depends pretty much on AdminLTE theme(no stable bootstrap 4 release yet). But I don't think adding support for other theme make sense here. You can customize it easily by yourself.. ",
    "paolo75015": "Hi @xabbuh , perfect : issue is fixed with #2262  . Hi @xabbuh , perfect : issue is fixed with #2262  . ",
    "petforsberg": "Well I'm not sure what is the issue actually, but after \"pleasing\" the Easy Admin by all that extra settings, at the end, when creating an Article entity and setting the \"CreatedAt\" date manually (!) I get the following error:\n\"Expected argument of type \"DateTime\", \"string\" given\"\nHere's what I got in Symfony 3.4:\n'PropertyAccessor::throwInvalidArgumentException('Argument 1 passed to HQCreatives\\ArticleBundle\\Model\\CategoryContainer::setCreatedAt() must be an instance of DateTime, string given, called in C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php on line 623', array(array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php', 'line' => 623, 'function' => 'setCreatedAt', 'class' => 'HQCreatives\\ArticleBundle\\Model\\CategoryContainer', 'type' => '->', 'args' => array('2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php', 'line' => 217, 'function' => 'writeProperty', 'class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor', 'type' => '->', 'args' => array(array(object(CategoryContainer), object(CategoryContainer)), 'createdAt', '2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper.php', 'line' => 85, 'function' => 'setValue', 'class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor', 'type' => '->', 'args' => array(object(CategoryContainer), object(PropertyPath), '2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php', 'line' => 628, 'function' => 'mapFormsToData', 'class' => 'Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper', 'type' => '->', 'args' => array(object(RecursiveIteratorIterator), object(CategoryContainer))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler.php', 'line' => 108, 'function' => 'submit', 'class' => 'Symfony\\Component\\Form\\Form', 'type' => '->', 'args' => array(array(), true)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php', 'line' => 498, 'function' => 'handleRequest', 'class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler', 'type' => '->', 'args' => array(object(Form), object(Request))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 288, 'function' => 'handleRequest', 'class' => 'Symfony\\Component\\Form\\Form', 'type' => '->', 'args' => array(object(Request))), array('function' => 'newAction', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array()), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 790, 'function' => 'call_user_func_array', 'args' => array(array(object(AdminController), 'newAction'), array())), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 80, 'function' => 'executeDynamicMethod', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array('newAction')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php', 'line' => 151, 'function' => 'indexAction', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array(object(Request))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php', 'line' => 68, 'function' => 'handleRaw', 'class' => 'Symfony\\Component\\HttpKernel\\HttpKernel', 'type' => '->', 'args' => array(object(Request), 1)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\Kernel.php', 'line' => 200, 'function' => 'handle', 'class' => 'Symfony\\Component\\HttpKernel\\HttpKernel', 'type' => '->', 'args' => array(object(Request), 1, true)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\web\\app_dev.php', 'line' => 29, 'function' => 'handle', 'class' => 'Symfony\\Component\\HttpKernel\\Kernel', 'type' => '->', 'args' => array(object(Request)))), 0)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php (line 233)\nPropertyAccessor->setValue(object(CategoryContainer), object(PropertyPath), '2018-12-02 00:00:00')\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper.php (line 85)\nPropertyPathMapper->mapFormsToData(object(RecursiveIteratorIterator), object(CategoryContainer))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php (line 628)\nForm->submit(array(), true)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler.php (line 108)\nHttpFoundationRequestHandler->handleRequest(object(Form), object(Request))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php (line 498)\nForm->handleRequest(object(Request))\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 288)\nAdminController->newAction()\ncall_user_func_array(array(object(AdminController), 'newAction'), array())\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 790)\nAdminController->executeDynamicMethod('newAction')\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 80)\nAdminController->indexAction(object(Request))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php (line 151)\nHttpKernel->handleRaw(object(Request), 1)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php (line 68)\nHttpKernel->handle(object(Request), 1, true)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\Kernel.php (line 200)\nKernel->handle(object(Request))\nin web\\app_dev.php (line 29)'. Well I'm not sure what is the issue actually, but after \"pleasing\" the Easy Admin by all that extra settings, at the end, when creating an Article entity and setting the \"CreatedAt\" date manually (!) I get the following error:\n\"Expected argument of type \"DateTime\", \"string\" given\"\nHere's what I got in Symfony 3.4:\n'PropertyAccessor::throwInvalidArgumentException('Argument 1 passed to HQCreatives\\ArticleBundle\\Model\\CategoryContainer::setCreatedAt() must be an instance of DateTime, string given, called in C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php on line 623', array(array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php', 'line' => 623, 'function' => 'setCreatedAt', 'class' => 'HQCreatives\\ArticleBundle\\Model\\CategoryContainer', 'type' => '->', 'args' => array('2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php', 'line' => 217, 'function' => 'writeProperty', 'class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor', 'type' => '->', 'args' => array(array(object(CategoryContainer), object(CategoryContainer)), 'createdAt', '2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper.php', 'line' => 85, 'function' => 'setValue', 'class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor', 'type' => '->', 'args' => array(object(CategoryContainer), object(PropertyPath), '2018-12-02 00:00:00')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php', 'line' => 628, 'function' => 'mapFormsToData', 'class' => 'Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper', 'type' => '->', 'args' => array(object(RecursiveIteratorIterator), object(CategoryContainer))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler.php', 'line' => 108, 'function' => 'submit', 'class' => 'Symfony\\Component\\Form\\Form', 'type' => '->', 'args' => array(array(), true)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php', 'line' => 498, 'function' => 'handleRequest', 'class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler', 'type' => '->', 'args' => array(object(Form), object(Request))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 288, 'function' => 'handleRequest', 'class' => 'Symfony\\Component\\Form\\Form', 'type' => '->', 'args' => array(object(Request))), array('function' => 'newAction', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array()), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 790, 'function' => 'call_user_func_array', 'args' => array(array(object(AdminController), 'newAction'), array())), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php', 'line' => 80, 'function' => 'executeDynamicMethod', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array('newAction')), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php', 'line' => 151, 'function' => 'indexAction', 'class' => 'EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AdminController', 'type' => '->', 'args' => array(object(Request))), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php', 'line' => 68, 'function' => 'handleRaw', 'class' => 'Symfony\\Component\\HttpKernel\\HttpKernel', 'type' => '->', 'args' => array(object(Request), 1)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\Kernel.php', 'line' => 200, 'function' => 'handle', 'class' => 'Symfony\\Component\\HttpKernel\\HttpKernel', 'type' => '->', 'args' => array(object(Request), 1, true)), array('file' => 'C:\\xampp\\htdocs\\Start-Symfony3_4\\web\\app_dev.php', 'line' => 29, 'function' => 'handle', 'class' => 'Symfony\\Component\\HttpKernel\\Kernel', 'type' => '->', 'args' => array(object(Request)))), 0)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\PropertyAccess\\PropertyAccessor.php (line 233)\nPropertyAccessor->setValue(object(CategoryContainer), object(PropertyPath), '2018-12-02 00:00:00')\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\Core\\DataMapper\\PropertyPathMapper.php (line 85)\nPropertyPathMapper->mapFormsToData(object(RecursiveIteratorIterator), object(CategoryContainer))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php (line 628)\nForm->submit(array(), true)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler.php (line 108)\nHttpFoundationRequestHandler->handleRequest(object(Form), object(Request))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php (line 498)\nForm->handleRequest(object(Request))\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 288)\nAdminController->newAction()\ncall_user_func_array(array(object(AdminController), 'newAction'), array())\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 790)\nAdminController->executeDynamicMethod('newAction')\nin vendor\\easycorp\\easyadmin-bundle\\src\\Controller\\AdminController.php (line 80)\nAdminController->indexAction(object(Request))\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php (line 151)\nHttpKernel->handleRaw(object(Request), 1)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\HttpKernel.php (line 68)\nHttpKernel->handle(object(Request), 1, true)\nin vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\Kernel.php (line 200)\nKernel->handle(object(Request))\nin web\\app_dev.php (line 29)'. I already had the 'createdAt' field, so it does not work for me.... I already had the 'createdAt' field, so it does not work for me.... ",
    "emulienfou": "I there, I just had to do exactly what your asking for in my project.\nLike I know it seems people asking for this feature for a long time ago, I'm sharing my custom code to:\n- Display menu entries based on role permissions\n- Display some columns from list action based on role permissions\n- Display some actions from list action based on role permissions\n- Restrict access to some entities\nhttps://gist.github.com/emulienfou/002317d8015fea34ef7fd0c49b8e59ac. ",
    "PierreJoube": "Hi,\nYou should look at https://github.com/alterphp/EasyAdminExtensionBundle\nIt seems ACL management is possible with this extension bundle. I am front of the same problem as you and I'm going to implement this bundle.\nGood luck. Hello,\nThis is what I use for this purpose : https://github.com/alterphp/EasyAdminExtensionBundle. ",
    "ElGecko76": "Thanks, but your code is not correct for \"Display some actions from list action based on role permissions\" @emulienfou . If the user has the VIP role I don't want to display \"delete\" and \"edit\" in list and don't have access to these routes either. It's really a shame.. I think I'll use the old version because it's very important for me to be responsive. The theme based on AdminLTE was really good it's a pity .. \nPerhaps you can suggest users to choose the theme they want via easy_admin.yaml in a future release?. Would not it be easier to redo the entire template via Bootstrap 4? Or choose the model of the v1 or the model of the v2 via the file easy_admin.yaml? I think it's very important that it's responsive because customers want to use the mobile phone admin interface.\n@alterphp I can try in 1 hours. Would not it be easier to redo the entire template via Bootstrap 4? Or choose the model of the v1 or the model of the v2 via the file easy_admin.yaml? I think it's very important that it's responsive because customers want to use the mobile phone admin interface.\n@alterphp I can try in 1 hours. ",
    "Lobosque": "@pmdcosta you should inject services in your custom controller constructor:\nExample:\npublic function __construct(LoggerInterface $logger)\n    {\n        $this->logger = $logger;\n    }. ",
    "KhairiAbidi": "Hi,\ntry php -d memory_limit=-1 composer.phar require easycorp/easyadmin-bundle, or set your memory_limit = -1 in php.ini\nhttps://getcomposer.org/doc/articles/troubleshooting.md#memory-limit-errors. ",
    "rjcalifornia": "@pakolkf Ok, so I was facing the same issue, it is not your memory limit and it is not composer. It has something to do with Symfony, specifically with version 3.4.15\nI am starting a new project, and downloaded version in 3.4.15 nothing worked. Set memory to -1, then to 3G, updated composer, PHP, nothing. Then today I have another project that is due tomorrow, in another computer, and I needed the easyadmin for user creation. I am using version 3.4.6 for this project, and installed without issues.\nI went back to the other computer with the memory issue, installed a new project with 3.4.6, then tried to install easyAdmin and worked as expected. So in esence, it might be related to Symfony and some of its dependencies?????. ",
    "vince83110": "I am not sure to understand, you want to use EasyAdmin to create a back-office using data from API ? \nEasyAdmin uses Symfony Entities to work, do you use Symfony ? If not, juste use something else.\nYou can find some ReactJS front based on REST Api.. ",
    "jaisato": "That's just it! I have 2 Symfony projects completely independent (front-end and back-end side). I would like to try the bundle EasyAdmin in the front-end project. \nSo is that possible? Anyways any suggestion is welcome.\nThanks!. ",
    "Omar-BEKHELOUF": "@Benjamin-Porquet  I love the argument that you used \"ZOBBY\" \ud83d\ude3a . ",
    "Wojciechem": "Thanks for replying, I'll keep that in mind.. ",
    "mpiot": "You're welcome Javier.. ",
    "treetop1500": "Visual example of what I'm seeing on screen with this issue:\n\n. ",
    "beknownst": "Addition\nIt was possible to emulate the described behaviour in the past by adding sections or dividers to the show configuration. This would result in displaying the label, accompanied by an error message (i.e. Getter method does not exist for this field or the property is not public). The error message could then be hidden with CSS, to achieve a sectioning functionality on a less preferable way.\nSince the latest release (1.17.14) this no longer works, as an exception is thrown:\n\nIt is unclear to me if I should create a bug report for this exception, as it is caused by using faulty configuration. Although this workaround did work with release (1.17.13).\n. Addition\nIt was possible to emulate the described behaviour in the past by adding sections or dividers to the show configuration. This would result in displaying the label, accompanied by an error message (i.e. Getter method does not exist for this field or the property is not public). The error message could then be hidden with CSS, to achieve a sectioning functionality on a less preferable way.\nSince the latest release (1.17.14) this no longer works, as an exception is thrown:\n\nIt is unclear to me if I should create a bug report for this exception, as it is caused by using faulty configuration. Although this workaround did work with release (1.17.13).\n. ",
    "KaiCMueller": "There are two things you need to take care of when dealing with collections:\nFirst assure that you have set the \"by_reference\" type option to \"false\" in your entity configruation.\nyaml\neasy_admin:\n    entities:\n        TvSeries:\n            form:\n                fields:\n                    - { property: 'seasons', type_options: { by_reference: false } }\nIf this is not done, the setters may not be called correctly.\nSee https://symfony.com/doc/current/reference/forms/types/collection.html#by-reference for further info on this.\nSecond you have to define the \"add\" and \"remove\" methods in your entity as doctrine requires it. Here is an example:\n```php\n/*\n * @ORM\\Entity\n * @ORM\\Table(name=\"tv_series\")\n /\nclass TvSeries\n{\n/**\n * @var \\App\\Entity\\Season[]|\\Doctrine\\Common\\Collections\\Collection\n * @ORM\\OneToMany(targetEntity=\"App\\Entity\\Season\", mappedBy=\"tvSeries\")\n */\nprotected $seasons;\n\npublic function __construct()\n{\n    $this->seasons = new ArrayCollection();\n}\n\n/**\n * @param \\App\\Entity\\Season $season\n *\n * @return $this\n */\npublic function addSeason(Season $season): self\n{\n    if (!$this->seasons->contains($season)) {\n        $this->seasons[] = $season;\n    }\n\n    $season->setTvSeries($this);\n\n    return $this;\n}\n\n/**\n * @param \\App\\Entity\\Season $season\n *\n * @return $this\n */\npublic function removeSeason(Season $season): self\n{\n    if ($this->seasons->contains($season)) {\n        $this->seasons->removeElement($season);\n    }\n\n    $season->setTvSeries(null);\n\n    return $this;\n}\n\n}\n```\nWhy do you need this? From database side, the TV Series doesn't know about its seasons. Only the seasons know about the parent TV Series because they have a foreign key connection. When the TV Series is saved, the \"addSeason\" method is called for every season, and it has to take care about that the foreign key of the TV Series is set in the season entity. The same is for the \"remove\" method where the foreign key has to be set to NULL again to remove the connection.. There are two things you need to take care of when dealing with collections:\nFirst assure that you have set the \"by_reference\" type option to \"false\" in your entity configruation.\nyaml\neasy_admin:\n    entities:\n        TvSeries:\n            form:\n                fields:\n                    - { property: 'seasons', type_options: { by_reference: false } }\nIf this is not done, the setters may not be called correctly.\nSee https://symfony.com/doc/current/reference/forms/types/collection.html#by-reference for further info on this.\nSecond you have to define the \"add\" and \"remove\" methods in your entity as doctrine requires it. Here is an example:\n```php\n/*\n * @ORM\\Entity\n * @ORM\\Table(name=\"tv_series\")\n /\nclass TvSeries\n{\n/**\n * @var \\App\\Entity\\Season[]|\\Doctrine\\Common\\Collections\\Collection\n * @ORM\\OneToMany(targetEntity=\"App\\Entity\\Season\", mappedBy=\"tvSeries\")\n */\nprotected $seasons;\n\npublic function __construct()\n{\n    $this->seasons = new ArrayCollection();\n}\n\n/**\n * @param \\App\\Entity\\Season $season\n *\n * @return $this\n */\npublic function addSeason(Season $season): self\n{\n    if (!$this->seasons->contains($season)) {\n        $this->seasons[] = $season;\n    }\n\n    $season->setTvSeries($this);\n\n    return $this;\n}\n\n/**\n * @param \\App\\Entity\\Season $season\n *\n * @return $this\n */\npublic function removeSeason(Season $season): self\n{\n    if ($this->seasons->contains($season)) {\n        $this->seasons->removeElement($season);\n    }\n\n    $season->setTvSeries(null);\n\n    return $this;\n}\n\n}\n```\nWhy do you need this? From database side, the TV Series doesn't know about its seasons. Only the seasons know about the parent TV Series because they have a foreign key connection. When the TV Series is saved, the \"addSeason\" method is called for every season, and it has to take care about that the foreign key of the TV Series is set in the season entity. The same is for the \"remove\" method where the foreign key has to be set to NULL again to remove the connection.. ",
    "kortwotze": "Thanks for the reply - I did not know about the by_reference option and will check this as soon as I can. :). ",
    "INHack20": "I modified the form at run time, which caused the error because the attributes were empty.\n  protected function createRoomQuotaEntityFormBuilder($entity, $view) {\n    $rate = $entity->getRate();\n    $formBuilder = $this->createEntityFormBuilder($entity, $view);\n    if ($rate !== null) {\n\n        $hotel = $rate->getHotel();\n        $options = $formBuilder->get(\"rooms\")->getOptions();\n        $attributes = $formBuilder->get(\"rooms\")->getAttributes();\n\n        unset($options[\"choice_loader\"]);\n        $options[\"query_builder\"] = function(\\AppBundle\\Entity\\Master\\Hotel\\RoomRepository $repository)use ($hotel) {\n            return $repository->getQueryByHotel($hotel);\n        };\n        $formBuilder->add(\"rooms\", \\Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType::class, $options);\n       //This fix error\n        $formBuilder->get(\"rooms\")->setAttributes($attributes);\n    }\n    return $formBuilder;\n}.\n",
    "gonzakpo": "If the problem is that you incorrectly order the fields when you use for example col-md-6. better to add 2 files, example:\nselect2-bootstrap.min.css\nselect2-bootstrap-theme.min.css\n. ",
    "pscheit": "Lovely! Sorry, that I did not see the projects board.. ",
    "kubaceg": "When I removed\nform_theme: 'bootstrap_3_horizontal_layout.html.twig'\nfrom settings save button works, I don't know it's an bug or it's my fault (wrong configuration). @rernesto did You solve it?. @rernesto did You solve it?. ",
    "Kaysof": "In easyadmin config you can set your entity templates for every action individually, for example:\neasy_admin:\n    entities:\n        EntityName1:\n            templates:\n                list: '@EgAdmin/easy_admin/list_en1.html.twig'\n                new: '@EgAdmin/easy_admin/new_en1.html.twig'\n        EntityName2:\n            templates:\n                list: '@Admin/easy_admin/list_en2.html.twig'\n                new: '@Admin/easy_admin/new_en2.html.twig'\nAs you probably know in twig layout you can override only choosen blocks.. Yes, It should works with that way. You need to check what is problem, wrong pathes to templates, incorrect  name in config etc.. ",
    "Arkounay": "Yes, but my issue is the documentation suggests that we can do something like that:\neasy_admin:\n    entities:\n        EntityName:\n            templates:\n                form: 'template.html.twig'\nto modify only the form for both edit and new actions, which would be handy. But it doesn't work.\nOverriding both new and edit is a solution, but it could be better if it worked like the documentation suggests\n. Yes it should work that way according to the doc, but it doesn't and I'm pretty sure it doesn't come from \n my config.\nIf you check edit.html.twig and new.html.twig, even in the new beta 2 release, you'll see that the form is called this way:\ntwig\n{% block main %}\n    {% block entity_form %}\n        {{ form(form) }}\n    {% endblock entity_form %}\n{% endblock %}\nhence it can't be overriden through a separated form twig, it's required to override both new and list and override the entity_form block for both files at the moment.\n. Thanks @yceruto, I didn't know a form theme could override a whole entity. That'll work for me :). ",
    "welcoMattic": "AdminLTE 3 is based on Bootstrap 4 https://github.com/almasaeed2010/AdminLTE/tree/v3-dev\nHowever, I don't know if it's ready to use. suggestion\n  margin-left: 10px;. The indentation is greater than anywhere else in the file.. suggestion\n  border-top: var(--border-width) var(--border-style) var(--border-color);. suggestion\n  padding-top: 12px;. suggestion\n  display: block;. suggestion\n  font-size: 13px;. ",
    "reminec": "Why this issue has been closed ? \nI can confirm that legacy template syntax doesn't work anymore.\n@englenshan You should use Namespaced Twig Paths like described here :   \n(>4.x)  https://symfony.com/doc/current/templating/namespaced_paths.html   \n(3.x)  https://symfony.com/doc/3.4/templating/namespaced_paths.html     \nIt take me some hours of headaches to understand why my templates has been striked :(\nAnyway, thanks for this awesome projects !\n. Yeah I understand that a clonable use case is the best.\nAnyway, I can confirm a thing : \n```yaml\neasy_admin:\n    design:\n        templates:\n            list: 'AcmeBundle:default:list.html.twig' # <-- Ignored and fallback to default EasyAdmin configuration\n            list: '@Acme/default/list.html.twig' #<-- Works well after registering namespace in twig config\n```. @yceruto I think you right.\n(Reading your blogpost at https://phpnews.io/feeditem/new-in-symfony-3-4-improved-the-overriding-of-templates and learning about thoses changes in Symfony 3.4)\nI'm little confused now.  \nI started my project with api-platform 2.1. From my memory, it was shipped with Symfony 3.3.\nMaybe they changes something about templating config but twig section in config.yml seems to be very similar from a clean install of Symfony 3.3.\nAnd I'm 99% sure about my previous easy_admin config works well before upgrading to Symfony 3.4 and rebranding to EasyCorp.\nAnyway, my little project is fixed by using twig namespace.\nSo forgot my comments if you think it's not related ;)\n. @javiereguiluz \nLike mentioned here https://github.com/EasyCorp/EasyAdminBundle/issues/2420#issuecomment-447861955, legacy twig syntax doesn't work anymore on EasyAdmin.\nIt's a silent BC which need to be mentioned or fix somewhere I think.\nThanks for your work \n(English is not my primary lang, sorry if something disturb you). Fast input thanks to you @javiereguiluz \nI don't remember the closed issue/PR which made me on the right way so I tried to put comment on issues I found when I investigate on.. ",
    "pinoniq": "anything i can do to help out here?. ",
    "Gemorroj": "https://github.com/EasyCorp/EasyAdminBundle/pull/2429. ",
    "Roman9961": "\nI've received a similar reported from another user via email. @Roman9961 could you please change the following line:\nEasyAdminBundle/src/DependencyInjection/Configuration.php\nLine 199 in b335e5d\n                         ->defaultValue('%y Year(s) %m Month(s) %d Day(s)')\n\nto this:\n->defaultValue('%%y Year(s) %%m Month(s) %%d Day(s)')\nand please tell me if it works. thanks!\n\nthank you! this solve the problem. ",
    "odolbeau": "Adding the container.service_subscriber tag should be enough to get rid of this error. See service subscribers documentation.. Even is it's \"only\" a deprecated notice, it looks like the correction will result in a BC break anyway. As there is one planned in a few days, I think making the controller as service right now is a good idea.. Do you consider injecting services per method instead of by the constructor?\nMaybe it will ease the overriding of the default controller when you need to use a custom service?\nNot sure if I'm clear or if it's a good idea.. Tests corrected.. I checked! I I swear I checked!\nBut not enough carefully...\nIf this commit is available in 4.1:\n\n4c1a65d2a8 -Replace %count% with a given number out of the box (Victor Bocharsky 2 years, 3 months ago)\n\nThat's not the cause of the commit I was looking for:\n\ndc5f3bfff7 -Make trans + %count% parameter resolve plurals (Nicolas Grekas 10 weeks ago)\n\nSorry for the noise.... @ddereszewski I'm afraid it's a different bug: it's not on the root entity, it's not an UUID, the specified field is correctly added in the search, ... I think you should open another PR.. Yes, that's the hack I put, thanks.\nI took a look at your article very quickly, I guess I'll live with this hack for a long time... :/\nDo you plan to remove bootstrap at some point?\n. ok.\nI'll keep this hack waiting for something better.\nThanks. ok.\nI'll keep this hack waiting for something better.\nThanks. I didn't propose this fix on the 1.x branch cause fix #2602 have been merged on master branch only.\n\nShould I propose only this change:\nphp\n$isGuidField = \\in_array($metadata['dataType'], array('guid', 'uuid'));\nOr should I add this:\nphp\n// 'citext' is a PostgreSQL extension (https://github.com/EasyCorp/EasyAdminBundle/issues/2556)\n$isTextField = \\in_array($metadata['dataType'], array('string', 'text', 'citext'));\n$isGuidField = \\in_array($metadata['dataType'], array('guid', 'uuid'));. I can. That's how I understood why the $isGuidField was false in my case. Do you really need a full dump?. ",
    "MustafaPamuk": "I have solved this problem by adding another form for person entity. Now it's working without any bug. ",
    "LeanderFS": "I will attempt to replicate the bug later today, I haven't had the time yet to do so. \n@alterphp No errors/warnings in the console, it doesn't seem to come from the javascript layer as the javascript files aren't being included on the easyadmin pages.. ",
    "davidnegreira": "Same problem here, I'm using webpack encore but i can't integrate easily the assets from easyadmin with my assets.\nThe best option in my opinion is to put a new entry  in my webpack.config.js like: \n.addEntry('admin', './assets/js/admin.js');\nSo when i do yarn encore this deploy ALL assets in the site.\nOr ask @weaverryan to include a .addEasyAdmin() function in encore :D\n. ",
    "mchojrin": "Thanks @javiereguiluz and @yceruto for your comments.\nI see your point @yceruto... perhaps a JsonResponse is too specific to my own use case, we could argue about that but your approach seems a little too complicated for my taste.\nAnother possibility I thought of was to create a new template method like return $this->executeDynamicMethod('create<EntityName><action>Response'); or something.\nIn my case for instance, all I needed to change was this line (the response to be returned)... as a temporary workaround I copied & pasted the code from the bundle into my own and changed the response object.... @yceruto ok, that sounds interesting but won't that affect every action? This behavior I'm looking for is very local to a particular entity... perhaps I should build a separate controller for it... seems a little hacky (since I'd be coding something that doesn't match the method's name) but it's certainly better that copying&pasting everything...\nThanks!. ",
    "Amunak": "I concur, this would be a great feature.. ",
    "nikkii94": "I didn't notice I override some templates in templates/bundles/EasyAdminBundle, so I deleted them and now it works as expected.. ",
    "OwlyCode": "Thank you !. ",
    "kelerq": "@javiereguiluz Any news here?. @javiereguiluz Any news here?. .input-file-container [type=\"file\"]{\n    filter: opacity(0);\n}\nthat was a problem. .input-file-container [type=\"file\"]{\n    filter: opacity(0);\n}\nthat was a problem. ",
    "Bloodysunset": "Hello, same problem here.\nFixed by adding a CSS rule filter: none;.\nWhat's the point of filter: opacity(0); to begin with? I can't figure out it's purpose. Disabling it doesn't break Chrome btw.\nI hope you'll find a convenient way to fix it :+1: \nedit:\nThe best way to fix it if you're waiting on a more official fix is to add a new css file with that : \ncss\n@-moz-document url-prefix() {\n  .input-file-container [type=\"file\"] {\n    filter: none;\n    font-size: unset;\n  }\n}\nThen you can add those lines to your easy_admin.yaml : \nyaml\neasy_admin:\n    design:\n        assets:\n            css:\n                - 'assets/select_file_fix.css' # path to your css file\nThese provide an efficient fix just for Firefox so you know you're not breaking anything else.. Hello, same problem here.\nFixed by adding a CSS rule filter: none;.\nWhat's the point of filter: opacity(0); to begin with? I can't figure out it's purpose. Disabling it doesn't break Chrome btw.\nI hope you'll find a convenient way to fix it :+1: \nedit:\nThe best way to fix it if you're waiting on a more official fix is to add a new css file with that : \ncss\n@-moz-document url-prefix() {\n  .input-file-container [type=\"file\"] {\n    filter: none;\n    font-size: unset;\n  }\n}\nThen you can add those lines to your easy_admin.yaml : \nyaml\neasy_admin:\n    design:\n        assets:\n            css:\n                - 'assets/select_file_fix.css' # path to your css file\nThese provide an efficient fix just for Firefox so you know you're not breaking anything else.. Hello :wave: \nIs there an easy way to disable the new resizer-handles? A yaml parameter maybe?\nThey are pretty useful, but when they were not expected from a design point of view, it's just better to be able to hide them.\nHave a nice day/night!. @javiereguiluz Well, thank you. At least I know that I didn't miss a configuration or something :)\nWill update my stylesheets :+1: . ",
    "plewin": "Hi @alterphp, have you found a workaround for this issue ?\n. Hi @alterphp, have you found a workaround for this issue ?\n. ",
    "scruwi": "My solution is create clone of bootstrap_4.html.twig form theme and tweak it a little. \nAt least, I remove code, corresponding to entity properties and hardcoded view actions:\n```diff\n{# line 9 #}\n-     'data-entity-id': attribute(value, easyadmin.entity.primary_key_field_name),\n{# lines 347-363 #}\n-    {% set _entity_actions = (easyadmin.view == 'new')\n-        ? easyadmin_get_actions_for_new_item(easyadmin.entity.name)\n-        : easyadmin_get_actions_for_edit_item(easyadmin.entity.name) %}\n-\n-    {% set _entity_id = (easyadmin.view == 'new')\n-        ? null\n-        : attribute(easyadmin.item, easyadmin.entity.primary_key_field_name) %}\n-\n-    {% set _request_parameters = { entity: easyadmin.entity.name, referer: app.request.query.get('referer') } %}\n-\n-    {{ include('@EasyAdmin/default/includes/_actions.html.twig', {\n-        actions: _entity_actions,\n-        request_parameters: _request_parameters,\n-        translation_domain: _translation_domain,\n-        trans_parameters: _trans_parameters,\n-        item_id: _entity_id\n-    }, with_context = false) }}\n```\nAfter that, in controller action:\n```\n$form = $this->createForm(EasyAdminFormType::class, null, ['entity' => 'Parameter', 'view' => 'import'])\n    ->add('sometextfield', TextType::class)\n    ->add('somefilefield', FileType::class);\n$form->handleRequest($this->request);\nreturn $this->render('parameter/import.html.twig', [\n    'form' => $form->createView(),\n]);\n```\nIn views:\n{% extends '@EasyAdmin/default/layout.html.twig' %}\n{% form_theme form 'bootstrap_4_cloned.html.twig' %}. ",
    "flopp26": "also interested because the template 2.0 is no longer responsive. ",
    "gisostallenberg": "I really like this minimum responsive behavior and collapsible sidebar. I agree @javiereguiluz that \n\nThe main reason is that real backends are very complex ... so they never look great on a smartphone.\n\nbut EasyAdmin can look slightly better and have easier navigation, provided with this PR. Thanks @alterphp, I hope this will get merged.. ",
    "jggerrits": "Same for NL. The paginator.results entry is missing.\nPlease replace \"results\" with \"resultaten\", both in the paginator.counter and paginator.results. ",
    "IonBazan": "@dominikhajduk What about 32-34, 42-44, etc?. ",
    "dominikhajduk": "@IonBazan good point. As we can't handle all of them my proposal reverse sentence for numbers greater than 22. And then declination is not needed. We can only consider colon (Znaleziono wynik\u00f3w: %count% or Znalezionych wynik\u00f3w: %count%). . @ktrzos What about Znalezionych wynik\u00f3w 22? Or maybe Liczba wynik\u00f3w 22 or Liczba znalezionych wynik\u00f3w 22.. @ktrzos What about Znalezionych wynik\u00f3w 22? Or maybe Liczba wynik\u00f3w 22 or Liczba znalezionych wynik\u00f3w 22.. @mateuszmaslanka thanks for tip! Also @IonBazan and @ktrzos thanks for comment. Updated translation for search and for paginator.result to be consistent (improvement for https://github.com/EasyCorp/EasyAdminBundle/pull/2564). Paginator result is reusable across list and search results. Please confirm that it's ok right now.\n. @mateuszmaslanka thanks for tip! Also @IonBazan and @ktrzos thanks for comment. Updated translation for search and for paginator.result to be consistent (improvement for https://github.com/EasyCorp/EasyAdminBundle/pull/2564). Paginator result is reusable across list and search results. Please confirm that it's ok right now.\n. Thanks @partikus @ktrzos. Added screenshot. And you will be able to \"vote\" soon :). Thanks @partikus @ktrzos. Added screenshot. And you will be able to \"vote\" soon :). Wyloguj prze\u0142\u0105czonego u\u017cytkownika. Wyloguj prze\u0142\u0105czonego u\u017cytkownika. Wyjd\u017a z trybu podszywania. Wyjd\u017a z trybu podszywania. Prze\u0142\u0105cz u\u017cytkownika. Prze\u0142\u0105cz u\u017cytkownika. Prze\u0142\u0105cz u\u017cytkownika z powrotem. Prze\u0142\u0105cz u\u017cytkownika z powrotem. Opened PR with Opu\u015b\u0107 tryb maskowania @partikus @mateuszmaslanka @ktrzos  @mpiot @wgorczyca @prk3 thanks for help.. Opened PR with Opu\u015b\u0107 tryb maskowania @partikus @mateuszmaslanka @ktrzos  @mpiot @wgorczyca @prk3 thanks for help.. ",
    "mateuszmaslanka": "@dominikhajduk there are already provided default pluralization rules for polish language https://github.com/symfony/translation/blob/master/PluralizationRules.php#L181\nSo what about this: <![CDATA[Znaleziono <strong>%count%</strong> wynik|Znaleziono <strong>%count%</strong> wyniki|Znaleziono <strong>%count%</strong> wynik\u00f3w]]> ?. @dominikhajduk there are already provided default pluralization rules for polish language https://github.com/symfony/translation/blob/master/PluralizationRules.php#L181\nSo what about this: <![CDATA[Znaleziono <strong>%count%</strong> wynik|Znaleziono <strong>%count%</strong> wyniki|Znaleziono <strong>%count%</strong> wynik\u00f3w]]> ?. Opu\u015b\u0107 prze\u0142\u0105czonego u\u017cytkownika. Opu\u015b\u0107 prze\u0142\u0105czonego u\u017cytkownika. ",
    "partikus": "@dominikhajduk please put your suggestions as a single comments to let us vote for the best one ;-) . Opu\u015b\u0107 tryb maskowania. Wyjd\u017a z trybu maskowania u\u017cytkownika. Wy\u0142\u0105cz maskowanie or Wy\u0142\u0105cz maskowanie u\u017cytkownika . @dominikhajduk could you show us screenshots for \"impersonation\" block (e.g. navigation part) to understand the context better, please?. @dominikhajduk could you show us screenshots for \"impersonation\" block (e.g. navigation part) to understand the context better, please?. ",
    "Destroy666x": "What would be also nice as batch features - mass edition and addition. The first could be based on the list view with quick edit based on some JS (and a possibility of custom view if needed), similar to the toggle field, the second would require a custom view because there's an unknown number of required fields.. Either what's above or just add the same parameters to type_options. ",
    "bnbc": "Oh my bad i have to override my easyadmin layout.html.twig with the changes for 2.0.. Oh my bad i have to override my easyadmin layout.html.twig with the changes for 2.0.. ",
    "qporion": "It's a good approach, with this option the custom entity becomes useless right ? Because we can override all parameters (dql_filter, etc..)  . It's a nice idea ! I will add this.. I like this way to configure sort_field and sort_direction, we can improve the flexibility of the autocomplete field.. You mean to configure two separate entities like this : \n```\nentities:\n    Category:\n        class: 'App\\Infrastructure\\Entity\\Category'\n        list:\n            ...\n    AutocompleteCategory:\n        class: 'App\\Infrastructure\\Entity\\Category'\n        list:\n            dql_filter: 'entity.publishedAt IS NOT NULL'\nAnd set the class option with `AutocompleteCategory` like this ?\n- { property: 'category', type: 'easyadmin_autocomplete', type_options: { class: 'AutocompleteCategory' }}\n```\nIt can be a good practice to get an autocomplete entity independant of the normal entity. And this autocomplete entity can be reusable.. ",
    "Nogrod": "Working fine with that change.. ",
    "emonin-web": "Hi !\nI wrote this article in a concern of performance for the loading of the page. It's always nice to have a responsive backoffice, especially when you have a lot of data to process. :)\nFor example, in the case where the backoffice is very busy for a short period during a fund campaign for example and the number of data to display is important.\nBut actually, it would be best to automate joins only for properties listed in the entity's EasyAdmin configuration.\nI will try to improve this feature in this direction and see if it is not a problem.. Hi !\nI wrote this article in a concern of performance for the loading of the page. It's always nice to have a responsive backoffice, especially when you have a lot of data to process. :)\nFor example, in the case where the backoffice is very busy for a short period during a fund campaign for example and the number of data to display is important.\nBut actually, it would be best to automate joins only for properties listed in the entity's EasyAdmin configuration.\nI will try to improve this feature in this direction and see if it is not a problem.. @javiereguiluz Yes I agree, in the context of the backoffice, it remains very negligible. :). @javiereguiluz Yes I agree, in the context of the backoffice, it remains very negligible. :). ",
    "IgorTimoshenko": "@javiereguiluz I understand, I see you have created 2.1.1 tag, may you create another one for 1.x-dev branch too?. ",
    "zskiredj": "my bad. thanks for the answer !. thanks it works !. ",
    "glenouvel": "I think you should use {% extends \"@EasyAdmin/default/layout.html.twig\" %}. ",
    "hks": "@javiereguiluz Thank you for letting me know. Note that for \"user.exit_impersonation\" I couldn't come up with short translation in Turkish. Therefore, I put something which can be related with the meaning and short at the same time :). ",
    "mmondino": "reported before at #2551. reported before at #2551. ",
    "bahadirarslan": "I agree with you, the documents don't tell enough for using webpack or assets.\nlike you i stuck with react and i couldn't continue. i checked every issue about asset or webpack but non of them contains usable information.\n\nbut doesn't give a clear instruction on how to do that. \n",
    "youssefabm2": "kinda same problem:\n+using tech:\n   -FOSuserbundle\n   -easyadminbundle\nrelation: OneToOne (one user have one detail)\nissue: the detail entity related to the user as object // detail in the database = (foreign key as  detail_id in user table )\nproblem: when i try to edit the user from easyadmin the bundle cant generate the form to edit because the relation done as object and form cannot convert an object to String (as a field to edit)\nthanks for the great work !!!\nhope got an answer :sweat_smile: . kinda same problem:\n+using tech:\n   -FOSuserbundle\n   -easyadminbundle\nrelation: OneToOne (one user have one detail)\nissue: the detail entity related to the user as object // detail in the database = (foreign key as  detail_id in user table )\nproblem: when i try to edit the user from easyadmin the bundle cant generate the form to edit because the relation done as object and form cannot convert an object to String (as a field to edit)\nthanks for the great work !!!\nhope got an answer :sweat_smile: . ",
    "e-aleixandre": "I've been following this thread since you created it because I'm in the exact same situation. What I did was to handle the newAction myself from a controller, rendering the form, asking for inputs for both entities and then saving it to the database. Problem is (I'm pretty new to Symfony) I have to handle validations and stuff, but at least it's working... Let's see if someone can give us a proper answer and, if not, you can try doing it the way I did.. ",
    "davidmaraba": "Facing a similar challenge. Did you get a working solution?. Facing a similar challenge. Did you get a working solution?. ",
    "luigimassa": "ok, changed\nthanks\n. ok, \n. ",
    "lucaferri": "Sorry, wrong copy/paste.\n. ",
    "ShatteredMotion": "The file was named admin.yml above. The names should probably match to prevent confusion :)\n. ... will take care of ...\n. ",
    "Koc": "Let's wait until related PRs in Symfony will be merged for using \\Twig\\Twig here,. Why not? Twig is easily updatable.. ",
    "susanasanz9": "The Constructor must send an ExceptionContext Object.\nTo prevent:\n\nCatchable Fatal Error: Argument 1 passed to JavierEguiluz\\Bundle\\EasyAdminBundle\\Exception\\BaseException::__construct() must be an instance of JavierEguiluz\\Bundle\\EasyAdminBundle\\Exception\\ExceptionContext, string given, called in /Applications/XAMPP/xamppfiles/htdocs/Symfony/symfony_web/vendor/javiereguiluz/easyadmin-bundle/Exception/EntityRemoveException.php on line 27 and defined\n\nChange the constructor for:\n$errorMessage = sprintf('You can\\'t delete this \"%s\" item because other items depend on it in the database.', $parameters['entity']);\n        $proposedSolution = \"Don't delete this item or change the database configuration to allow deleting it.\";\n        $exceptionContext = new ExceptionContext($errorMessage, $proposedSolution, $parameters, 404);\n        parent::__construct($exceptionContext);\n747 .",
    "nykopol": "yes i've seen it after. It should be correct now. ",
    "GuilhemN": "To avoid unreliable behavior (support of @Method not consistent for instance), I think this should be done in a compiler pass to be certain it's registered only if sensio's loader is not. Otherwise annotations support will be different based on the order bundles are registered.. Priorities didn't exist prior 3.4 :). We could also return earlier if sensio's annotation loader is registered (not strictly required but I think it'd be cleaner). ",
    "sanis": "Wouldn't it be much fun to use Sass and nest inside?\n```\n.easyadmin-thumbnail img:hover {\n  cursor: zoom-in;\n}\n.easyadmin-lightbox {\n  display: none;\nimg {\n    max-width: 100%;\n  }\n}\n.easyadmin-lightbox \n .featherlight {\n   .easyadmin-lightbox {\n     display: block;\n &:hover {\n   cursor: zoom-out;\n }\n\n}\n }\n```. Well, talking about the debugging I'm using css maps for that which automatically resolves parts in the .scss file from css files. \nIf we are using scss files as css storage I don't really see why we need to pass it trough sass compiler afterwards (I'm not talking about variables in this case). ;) . ",
    "Jibbarth": "suggestion\n  padding: 10px 7px;. suggestion\n  height: 30px !important;. suggestion\n  height: 30px;. ",
    "noniagriconomie": "do not forget to update the readme picture :). ",
    "dev-sl": "Ok, i will check it and if array type is string type for database, will add it tomorrow. ",
    "hyperclock": "I did not get this to work for me. But what did work for me was to put the contents of config/routes/easy_admin.yaml to config/routes/annotations.yaml. I then commented everything in config/routes/easy_admin.yaml, ca:cl updated the symlinks and it worked with a lot less trouble.. "
}