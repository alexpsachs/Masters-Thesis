{
    "vjeux": "cc @nicklockwood \n. This is totally the right place, please keep the issues coming :)\nWe haven't had the need for changing UIStatusBarStyleLightContent yet so we haven't figured out a solution for it (you'll keep this same statement a lot :p). I would love to get your opinion in what would be the best way to expose it to React / JS.\n. @amccloud: the status bar is not tied to the navigator. If you have an empty view, you still have the status bar.\nMaybe we can have a module\n``` javascript\nvar { StatusBarIOS } = require('react-native');\nStatusBarIOS.setStyle(StatusBarIOS.style.lightContent);\n```\nAnd, the way you would do it is in the root react component\njavascript\ncomponentDidMount: function() {\n  StatusBarIOS.setStyle(StatusBarIOS.style.lightContent);\n},\nWhat do you think about this API?\n. Then, if you have this API, you can create the <Application> component that you suggested @nick\njavascript\nvar Application = React.createClass({\n  componentWillReceiveProps(nextProps) {\n    if (this.props.statusBarStyle !== nextProps.statusBarStyle) {\n      StatusBarIOS.setStyle(nextProps.statusBarStyle); \n    }\n  },\n  render() {\n    var {statusBarStyle, children, ...props} = this.props;\n    return <View {...props}>{children}</View>\n  }\n});\n. @nick: want to give a shot at implementing it?\n. @nick: gotta start somewhere? :p\n. Oh, that's pretty cool already!\n. Wow, so fast! Looking\n. @amccloud do you mind doing a pull request on this repo?\n. @a2 @nicklockwood do you know what's going on with the BOOL value?\n. @nick: yeah, integrations with the native apis will follow a similar pattern.\nIt turns out that we already have the location api implemented internally but haven't yet had the time to put it on the open source version. Give us some time on this (you can expose it for yourself in the meantime, shouldn't be super hard)\n. Was added https://github.com/facebook/react-native/commit/9674c99a33b33ad6de6c742a514e2602a521dbfb :)\n. Yes. We need to port that over. Expect it in a few days/weeks.\n. cc @amasad \n. The way we currently communicate for Obj-C to JavaScript is by doing eval('require(\"ModuleName\").methodName(arguments)');. Fortunately, most of it is abstracted away in only 7 methods. What we need to do is to change the call to eval('ReactNativeJSExposedMethods.call('ModuleName', 'MethodName', arguments)') and have all those methods register themselves before being called.\nRCTEventEmitter.receiveTouches\nRCTNativeAppEventEmitter.emit\nRCTEventEmitter.receiveEvent\nReactIOS.unmountComponentAtNodeAndRemoveContainer\nAppRegistry.runApplication\nRCTJSTimers.callTimers\nRCTDeviceEventEmitter.emit\nThis is on my todo list but I'm unlikely going to be able to get to it this week if someone wants to pick it up\n. Thanks! (We're still figuring out how to take in pull requests, as soon as we're done we'll take this in!)\n. Thanks for the way, it's now in :) https://github.com/facebook/react-native/commit/39f475ea9b6d97eff6b4f61ebf8bcb9fab9a7d46\n. > I'm sorry if this is premature talk but I'd love to get some sense of the direction of this project.\nIt's the best time to talk about the hard questions :)\nBridging APIs one-to-one is not trivial in React native for three big reasons:\n- iOS/Android APIs are imperative but React is declarative\n- iOS/Android APIs are synchronous but React native has an asynchronous bridge\n- iOS/Android APIs are written in Obj-c and Java but React native is in JavaScript\nSo, it's actually non trivial to map 1 to 1 native apis.\nSo far, the process was to start with a use case that one of the app we are building needs to support. At this point, we look at all the possible ways to expose the API and try to find the best one. One really important point is that we start from a use case, and not take an existing API and just rush to expose it all.\nThe stance that we've taken so far is to try to make them as web/React friendly as possible. \n\nHow fast are we willing to make breaking changes to them? (Unlike React, we have a lot of public API here.)\n\nThis is why we want to do this private phase for now. We have never open sourced a project with such a crazy large API surface. \nMy 5min thoughts on this is that what's in this github repo is going to lag in the APIs that it supports, but we have great extensibility tools that other people can fill the gap for APIs that we don't support yet.\n. @glenjamin: this is a good idea. So far we worked close with our few users so we've been able to build high quality custom apis for their use case, but that's unlikely to scale.\nRight now my thinking was to allow people to write their own bindings via plugins. So if a feature is not yet supported, they can bridge it themselves. But something automatic may be a useful escape hatch as well.\nThe best way to know is to try it and see if it solves real use cases\n. Closing as this is a discussion and not super actionable :) Feel free to keep talking here\n. Closing this for now as we're probably not going to support webpack-dev-server, but I really want to get hot loader working. Please re-open if you need help on react hot loader :)\n. cc @amasad \n. We're still unclear about this. We're trying to be very deliberate in the dependencies that we add inside of core.\nYou can use fetch, the new w3c api in order to do data fetching. We also have xhr implemented.\nFor node modules like events, this is unclear. I wish that we could push events to npm instead of having it inside of react native directly.\n. Would love to get your point of view on this subject\n. This is bad, need to look into it. cc @frantic \n. @a2 is there any plan to streamline the process?\n. Now possible\n. Looks good to me. @a2 can you review and add the \"Accepted\" tag if you are good with it?\n. Was merged here https://github.com/facebook/react-native/commit/31bcafb21c4056308632c23c283b52995b6feb52\n. Do you want to make the stub a bit less bad? :)\n. Closing as you made a pull request\n. Oh wow, you already did the pull request! Thanks!\nIt's accepted, we'll bring it in as soon as we figure how to patch this internally :p\n. Thanks for the way, it's now in :) https://github.com/facebook/react-native/commit/39f475ea9b6d97eff6b4f61ebf8bcb9fab9a7d46\n. Haha you beat me to it, I have done the same thing and would setup a pr when I get a chance :)\n. Closing as there's a pull request\n. We have never tried. In theory there's nothing preventing us from it\n. Actually, I think that this is a common enough file that it's a good idea to put it inside of gitignore. It is also there in the react repo\nhttps://github.com/facebook/react/blob/master/.gitignore#L1\n. Thanks for the way, it's now in :) https://github.com/facebook/react-native/commit/39f475ea9b6d97eff6b4f61ebf8bcb9fab9a7d46\n. cc @amasad\n. Is there any way we can add a warning so that other people don't fall into the same trap?\n. Lgtm, i'll pull it in on monday\n. Thanks for the way, it's now in :) https://github.com/facebook/react-native/commit/39f475ea9b6d97eff6b4f61ebf8bcb9fab9a7d46\n. The goal of this private repo is to give us some time to expose all the features that we have internally and get the feedback from people before opening the flood gates. Feel free to demo it and talk about what's inside\n. Closing as this is a discussion, feel free to keep commenting here\n. Closing as it's not very actionable. We definitely want to improve this new project creation experience.\n. cc @nicklockwood \n. Yup, SVG seems more suited for a different target rather than the Image component\n. @zertosh very good question :) Here's a very nuanced answer.\nIn my mind, the reason why the \"write once, run everywhere\" approaches fail is that your only possibility is to use the cross platform components. You don't have the ability to use the native components from the platform.\nWith React native, it's a requirement to be able to use the native elements from the platform, be Navigator for iOS, Drawer for Android or <video> on web. But, that doesn't mean that we should share nothing.\nThere's a very interesting property which is that if you don't have the same building blocks (div, View...) then you CANNOT share ANY line of UI code. A concrete example is that we wanted to share a <Timestamp> component and we had to copy and paste it because span did not exist in React native context.\nSo, we decided to have some core components (View, Image, ScrollView, ...) that work on all the platforms and are a lowest common denominator that works everywhere. I was extremely surprised but it turns out that this subset is actually pretty large. The innovative things from platform to platform are not much in the low level details like border or background color, but in high level components.\nRight now, there are some attributes for those that are platform specific like alwaysBounceVertical for ScrollView. So we're probably going to split it into two components: <ScrollView> that is the subset that works everywhere and <ScrollViewIOS> that contains platform specific attributes.\nThere's still a lot of unknowns in the API design that we want to figure out :)\n. We're in the middle of our first conversion from an app written on iOS to Android. Here's the setup that we decided on so far.\nAll the iOS specific implementations have a barely functional and super ugly version for Android that only uses core components such as View and Text. The goal of those \"polyfills\" is such that the app compiles and runs in all the platforms, but there are ugly red components everywhere. Then, you can start figuring out the best solution finding an Android-friendly way to deal with those iOS components.\nYou'll probably end up rewriting a large part of your UI in order to make it look and feel good on Android, but you can do that iteratively and not having to fix all of them before anything even compiles.\nThis is still a very new territory for us and this may or may not be a viable solution :p\n. cc @evv\n. @ericvicenti actually :p\n. Nice! Glad to hear :)\nHopefully we can get gif support soon so that you can have a fully functional app soon\n. Since iOS doesn't support it, let's close this for now.\n. Sweet thanks, looks good. I'll pull it in tomorrow :)\n. Thanks for the way, it's now in :) https://github.com/facebook/react-native/commit/39f475ea9b6d97eff6b4f61ebf8bcb9fab9a7d46\n. cc @a2, @nicklockwood\n. Yup, you noticed! So, the story here is that borders on only one side are not natively supported by iOS, we did some bad hacks in our fb codebase to support it.\nWe want to rewrite it cleanly in OSS. Make sure it supports borderRadius, and does the same diagonal appearance when there are two adjacent borders with a different color/size.\n. Should be working now\n. Can you describe your use case? Hard to give a good answer without knowing what you are trying to do\n. cc @jordwalke\n. You are right, we need to have a todo app example otherwise we're not a real js lib :p\n. To give a bit more context. We're doing it in private because we're not ready yet. We don't yet have a way to take in pull requests, we can't run a React native app on device, we can't push back updates that we've done internally. All of those are super basic things that are not working.\nIf we were to open it up to people now, they would likely have a bad experience. Please give us some time to get our house in order with the open source process. We want to open it as soon as possible, trust me :)\n. Closing as it's not actionable, feel free to continue the discussion here\n. @jlongster mind updating the title of the issue to reflect what needs to be done here outside of documentation?\n. You can use ScrollView with horizontal={true} and paging={true} :)\n. Was merged here https://github.com/facebook/react-native/commit/fd8b7dee777189cbbe98628502ce67c6d2d60f5e\n. Hmm this is weird, you should receive an onScroll event every 200ms\nhttps://phabricator.fb.com/diffusion/FBOBJC/browse/master/Libraries/FBReactKit/js/RKJSModules/Libraries/Components/ScrollViewPropTypes.js;ab0173e350a5d5a542bbbb1af82e36cb9e82609e$27\n. Just made a diff internally to add a warning. D1833444 (for tracking purposes)\n. Warning is now in: https://github.com/facebook/react-native/commit/dd78b09741416e62a0a8156b1053f7086408c38f\n. Look at TouchableWithoutFeedback to implement your custom touchable element.\nHowever, be warned that this is a very dangerous path. One of the big reasons why native apps feel native is because those touchable elements have been put a lot of thoughts into.\nI'd love to know what your use case is to help you find the best implementation\n. The other common use case on iOS is opacity. We're going to bring it to the oss repo soon :)\n. Done :)\n. Cc @jordwalke\n. If you are bored, would be awesome to compile this into some sort of docs :)\n. We're going to have official docs before we open this repo to everyone. They'll be in the docs folder in markdown, the same way React is. If you can start writing them in markdown and in the docs folder with whatever you think is useful for people, that would be awesome!\nhttps://github.com/facebook/react/tree/master/docs/docs\n. Our API looks like that right now FYI\njavascript\nclass GeoLocation {\n  static getCurrentPosition(geo_success, geo_error, geo_options)\n  static watchPosition(callback)\n  static clearWatch(watchID)\n  static stopObserving()\n}\n. We're going to port back our version to github soon, so we're unlikely going to use yours sorry :( I hope this was a good learning experience though. There's a bunch of other apis that will need to be bridged in a similar fashion so your skills won't be lost\n. In iOS, the navigation (top) and tabs (bottom) are semi-transparent. This means that the content behind it (like a scrollview) should overlap the top and bottom, but have additional padding to be the size of the top/bottom bars. In iOS there's a concept of top/bottomLayoutGuide that trickles down. automaticallyAdjustContentInsets enables the automatic addition of padding based on those guides.\nThe integration with the layout and React in general is not very well thought out, so we added this attribute. It's something that needs work but is not trivial :)\n. Animations is a very complex and interesting problem. Here are the different options we've experimented with:\nDeclarative Animations\nThe first one is to have an API that starts an animation based on a ref.\njavascript\nthis.startAnimation('ref', {\n  type: this.AnimationTypes.easeInEaseOut,\n  property: this.AnimationProperties.scaleXY,\n  duration: 0.3,\n  fromValue: [0, 0],\n  toValue: [1, 1],\n});\nRight now we're using Pop to do that, but we should also be able to use CoreAnimation. CoreAnimation has the advantage of being executed in a different process with extremely high priority, whereas pop is in a different thread. However, CA doesn't support springs (unless you compute the keyframes yourself and send them to CA).\nThis kind of animation is very good for fire and forget, which is used in a lot of places. It is mostly insensible to JS thread stalls.\nGesture Driven Animations\nIf you want to implement a scroll away header, or an image viewer, you must animate based on touch position rather than time. The trigger is onScroll or onResponderMove and you've got to come up with the position/dimension/opacity of all the elements that are animated based on the position.\nIn order to apply those changes, you can either do setState, re-render and re-apply the diff algorithm. If you are careful with shouldComponentUpdate it is possible to get it fast enough. Another technique is to use ref.setNativeProps(). This is the equivalent of taking the dom node and modifying the attributes directly. This has almost no overhead but the modifications can be out of sync in the next render if not careful.\nIn order to come up with the interpolated values, there are two solutions. The first one is to do the math yourself, this works and is fast but the code is quickly impossible to understand and super hard to review. It's easier to factor your code a bit more declaratively by using interpolators.\njavascript\nvar ToTheLeft = {\n  opacity: {\n    from: 1,\n    to: 0.7,\n    min: 0,\n    max: 1,\n    type: 'linear',\n    extrapolate: false,\n    round: 100,\n  },\n  left: {\n    from: 0,\n    to: -SCREEN_WIDTH * 0.3,\n    min: 0,\n    max: 1,\n    type: 'linear',\n    extrapolate: true,\n    round: PixelRatio.get(),\n  },\n};\nThis makes it super clear how the animation works, but if implemented naively, is pretty slow. You've got to parse this structure and do dynamic execution based on what attributes there are. What we're doing instead is to pass this structure to a function called buildStyleInterpolator which generates specialized code to do the interpolation via a string that we then eval.\njavascript\nfunction(result, value) {\n  var didChange = false;\n  var nextScalarVal;\n  var ratio;\n  ratio = (value - 0) / 1;\n  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n  nextScalarVal = Math.round(100 * (1 * (1 - ratio) + 0.7 * ratio)) / 100;\n  if (!didChange) {\n    var prevVal = result.opacity;\n    result.opacity = nextScalarVal;\n    didChange = didChange  || (nextScalarVal !== prevVal);\n  } else {\n    result.opacity = nextScalarVal;\n  }\n  ratio = (value - 0) / 1;\n  nextScalarVal = Math.round(2 * (0 * (1 - ratio) + -30 * ratio)) / 2;\n  if (!didChange) {\n    var prevVal = result.left;\n    result.left = nextScalarVal;\n    didChange = didChange  || (nextScalarVal !== prevVal);\n  } else {\n    result.left = nextScalarVal;\n  }\n  return didChange;\n}\nThis way we get the nice API and the nice perf :) We can also do some cool optimizations such as returning a boolean that tells us if anything changed to avoid sending unchanged values through the bridge.\nUsually, once the touch is released, we compute the velocity and continue using a declarative animation.\nWork Scheduling\nThere is no silver bullet for getting smooth 60fps animations, you've got to avoid doing anything else while animating. In React Native, none of the setTimeout and XHR callbacks are being invoked while there is a touch happening. This is a very strict rule that we're probably going to soften in the future.\nWe're also doing a similar orchestration technique via InteractionManager to make sure that no work is being done when an animation is being executed. Those techniques are very effective, when the animation/touch is running, there's almost no code except for computing top/left/width/height of a few elements that is being executed. Almost no code or allocations (no GC) happen and we get super smooth animations, even though they are in JS.\nYet, we still want to do some work while an interaction is going on, for example you want to display the next page of content that you fetched from the server during an infinite scroll. In order to be able to do that without dropping frames, Relay has been designed to be able to process data in small chunks, instead of freezing the JS thread for 300ms. We're also investigating running Relay data processing part in a separate thread.\nLayout driven animations\nThe last piece that is unique to React Native, is the ability to animate based on layout changes. All the updates during a frame are batched together and we control the layout algorithm. This means that we can log the all the layout updates (top/left/width/height) that will happen and instead of setting them instantly, we can interpolate them over time. The code for it is extremely simple from a developer perspective:\njavascript\ncomponentWillUpdate: function(props) {\n  if (props.isDatePickerShown !== this.props.isDatePickerShown) {\n    Animation.Layout.configureNext(Animation.Layout.Presets.easeInOut);\n  }\n},\nIt will smoothly move around all the elements being displayed. There's a setting to decide how to interpolate new/deleted elements. This technique is useful for adding animations across the app very quickly.\nConclusion\nBy using a combination of those three techniques, we've been able to produce high quality, 60fps animations in many places of our apps. The great aspect is that, unlike with the web, we can play with various threading models and move work around to find the best tradeoffs.\nThere's still a lot of research to do here, for example it would be nice to send gesture driven animations to CoreAnimation for them to be executed on a different process. One idea we had was to run some React components in the main thread (similar to ScrollView being on the main thread but written in JS). The various APIs are still a bit hard to use and need some polish...\n. Closing as this is not super actionable. Please keep discussing here if need be :)\n. Sorry, \"fire and forget\" was misleading, there's a callback for when the animation is over so that you can chain another one/unmount the component/do some expensive computation\n. cc @amasad\n. @amasad would be nice to add a proper error message if a package.json file is malformed\n. We fixed both the README and the error message. Thanks for this!\n. This is supported in our internal version. It's on the list of things that we need to clean up and port to the open source version.\nWe rushed the announcement and have a lot of things to get out of the doors. Please keep up with us for a few weeks :)\n. Actually it is source={{uri: 'assets-library://...'}}, ix is a marker for static assets\n. cc @amasad\n. Sorry about that, I just pushed this change here. Let me know if it works when you rebase\nhttps://github.com/facebook/react-native/commit/462c7ed8eff5305e057b7c95ab0717313ccd61c3\n. Oh, maybe this is the same error as another issue. Did you happen to have typed\nnpm install npm start\nby chance? If yes, can you do\nrm -Rf node_modules\nand do\nnpm install\n. .ios.js is a file that's only visible in iOS, we also have .android.js.\nThis is a way to provide the same module and have a different implementation. Base components such as Image and Text will have the exact same behavior, but call different native implementations, platform specific components such as SpinnerIOS and StatusBarIOS will be a ugly red version, that cannot be used in production but make the app at least run so you can start doing the conversion.\n. We have the following right now, but they are of varying degrees of completeness.\nAxialGradient\nCameraIOS\nDatePickerIOS\nGeoMapIOS\nImage\nNavigationIOS\nPickerIOS\nScrollView\nSliderIOS\nSpinnerIOS\nSwitchIOS\nTabBarIOS\nText\nTextInput\nView\nWebViewIOS\n. Yeah, there's a cost of bridging elements, it turns out that reimplementing a button in pure JS is easier than trying to fit the iOS button api with React.\nAlso, since the new iOS, a button is just a label with no real styling associated. We do have TouchableHighlight and TouchableOpacity components to make sure interactions are working correctly.\n. We don't have any Camera implementation inside of Facebook and don't have any project lined up that needs it. Hopefully someone from the community will be able to build it :)\n. Most of the components on this list have been exported, will close this one. Let's recreate an issue \n. For measurement, we have an asynchronous API (we can't have anything synchronous in React native), that we designed to be polyfill-able in the browser. Ideally we want React Native to be a (good) subset of the browser. But in this case, since the browser doesn't have an API we came up with our own.\n. For React.findDOMNode(), we have this.refs.blabla.getNodeHandle() that you can use to communicate with native.\nWe want to converge the two at some point.\n. ReaCT :)\n. We had RK before that stands for ReactKit but it turns out that some super popular iOS library already took this prefix and apparently 2 letters prefixes are reserved for Apple\n. Good catch! Can you sign the CLA so I can pull it in? Also, would be nice to just drop 2014 altogether\n. Thanks!\n. We don't mirror the website internally, so I can just take in the pull request instead of closing and waiting for the next sync.\n. Thanks for opening up this issue. This was the setup I had in mind as well.\nOne other thing that's going to be interesting is plugins, since they have both a obj-c and js part.\n. cc @a2 @nicklockwood \n. @joewood one of the issue with Cordova is that they invented their own package manager and registry. I really don't want us to be in the business of running a registry for react native plugins. I'd much rather leave this hard work to npm and cocoapods :)\n. Some more things to put into consideration.\n1) What's the story for Android? Do we ask people to also install Maven/Graddle/whatever is being used there?\n2) What's the story for custom components? Let say I want to use Shimmer, do I have to do pod install react-native-shimmer; npm install react-native-shimmer? Or do we put everything in the npm module? Or everything in the pod?\n. cc @nicklockwood @a2 can you guys look at this? I have a feeling that it's the way we want to do things but I've never written a single line of obj-c so I'm not the best person to review :p\n. Not answering the question but fyi, when we're going to go open source, react-native is going to be pushed to npm.\n. We don't have the time to investigate it right now unfortunately. Don't expect any progress in the next couple of weeks. We're 100% focused on upgrading our infra so that we can push all the components/apis that we have before open sourcing.\n. Sweet thanks \n. Can you give a concrete usecase where you need stretch?\n. Can you give a concrete usecase where you need stretch?\n. We do support stretch actually on alignSelf and alignItems\nhttps://github.com/facebook/css-layout/blob/master/README.md\n. We do support stretch actually on alignSelf and alignItems\nhttps://github.com/facebook/css-layout/blob/master/README.md\n. Use flex: 1 for stretching in the main direction (column). The naming is confusing but that's from flexbox itself :(\n. Use flex: 1 for stretching in the main direction (column). The naming is confusing but that's from flexbox itself :(\n. At the contrary, please keep the questions coming :)\n. At the contrary, please keep the questions coming :)\n. :+1:\n. :+1:\n. You can check out the React documentation for this :) http://facebook.github.io/react/tips/communicate-between-components.html\n. You can check out the React documentation for this :) http://facebook.github.io/react/tips/communicate-between-components.html\n. Actually, please don't use @providesModule. This is an internal convention that shouldn't be exposed to developers.\n. Actually, please don't use @providesModule. This is an internal convention that shouldn't be exposed to developers.\n. Thanks, it's now in master\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/StatusBar/StatusBarIOS.ios.js\n. Thanks, it's now in master\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/StatusBar/StatusBarIOS.ios.js\n. There's a Dimensions module that's not exposed yet. We're working on getting our synchronization in order to be able to expose it\n. There's a Dimensions module that's not exposed yet. We're working on getting our synchronization in order to be able to expose it\n. Just got this as well :(\n. It turns out that when you npm install the website folder, it includes some node_modules that mess up the packager. I have a fix coming\n. Fixed by https://github.com/facebook/react-native/pull/152\n. The way it is setup (at least in fb repo, not sure how open source is yet) is that we propagate the background color from the parent. In most of cases this is working as intended and gives the nice property that the layers do not need to be blended. This makes the gpu part faster at only a small cost.\n. Cc @sahrens who implemented it and @a2 @nicklockwood who may have insight in terms of performance\n. It has landed internally\n. Hmm, we have support for alerts and action sheets internally. @sahrens do you know how it's implemented?\n. Thanks, we're pretty soon not going to need it :)\n. (There's probably a bug here but let me digress a bit with a general problem here. cc @a2)\nWhen you have <Image source={a} /> and then render <Image source={b} />, while the new source is being loaded, what should we do.\n- Blank: The \"correct\" response is to blank out the image, then when b is loaded and decoded update the image. The big issue with this solution is that your UI is going to flash all the time leading to a very ugly end user experience.\n- Keep a: The better user experience is to keep a around for the few milliseconds and when b is ready then display b. This avoids the flash and is fine as long as it doesn't take too long.\nWhat's interesting is that on the web, there's actually both behaviors implemented. <img> tag keeps a while background-image blanks out.\nWe haven't made a concrete decision on this one yet and I'm unsure what's the current behavior, but this behavior is worth thinking about.\n. Good idea :)\n. The problem here is that you are using @providesModule which is a global namespace that's very likely to collide. We're using it at Facebook because we have a single repo and we can manage this but this is not suitable for open source :)\nThe recommended way to use it as a user is by using relative requires like require('./TapDemoItem/TapDemoItem.js'), this way you don't run into conflicts.\nWe actually don't want people to ever use @providesModule and will prevent it from working in the future for user code. We haven't put that in place yet and haven't documented it, sorry :(\n. > I imagine they can get quite redundant.\nIf they are redundant this means that we've not done a good enough job at pushing people off of the cliff :)\n. It's been pulled internally :)\n. Looks like a legit change. @a2?\n. We have a task internally to expose those :)\n. > The thing is that, in the HTML, even if you use position and leave the child of the parent, you can still touch it... What has to be decided is what is the desired behavior.\nThis is the way iOS works and definitely feels wrong. I'd really like it to be fixed but I'm unsure if it's even possible. Would love some iOS experts to chime in\n. Lgtm :)\n. Landing internally\n. like-stamp\n. Cool thanks! I'll pull it in\n. alwaysBounceVertically={false} disables rubberbanding right?\n. We've been using padding for that. I feel like while that attribute is useful, it's dangerous to be able to increase hit range like this as you're likely going to overlap with other elements and have an undefined behavior\n. Right now, we've made the conscious choice not to introduce apis that cannot be polyfilled on the web. Unfortunately it's basically impossible to polyfill this without having to reimplement hit testing.\nAt some point in the future we'll want to reimplement hit testing on web, layout, ... but until then, I feel like it's best to have a slightly worse api but that's backward compatible.\n. cc @a2\n. I'm not sure I understand. You can do .blur() on Text ref right now. Do you want to do blur() on an arbitrary View?\n. You can actually call blur() on a View today. See NativeMethodMixin::blur. Can you tell me if it's doing what you want?\n. cc @a2 for review\n. Woops. We don't have yet continuous integration on the open source examples and we are mostly testing on the explorer examples and not movies app. I'll send a fix later today.\nNote that we're going to move away from cocoapods, this was an experiment but doesn't work out well in practice :(\n. I just nuked everything and rebased on the latest version and Cmd+R is working well for me on Movies & TicTacToe. Can you try again?\n. Horizontal scroll view is already supported. horizontal={true}\nFor pull to refresh, it's actually quite easy to build. we haven't yet figured out how many components we want to provide, so it's up in the air if this one is going to be provided by us vs the community\n. Nothing planed on our end sorry :( Already have a ton of work to expose all the components we have internally. Hopefully you or someone from the community can pick it up and put it on npm. If it's good quality we may want to embed it into core down the line\n. Thanks!\n. Good catch, see D1890224 internally :)\n. What is your end goal?\nTo your question, the facility with React is called ref. But in this case I have a feeling that it's not the solution you are looking for. http://facebook.github.io/react/docs/more-about-refs.html\nthis.refs[refKey].getNodeHandle()\n. Oh I see, you want to integrate with an Obj-c component. Then yeah, ref and getNodeHandle() is the right way to do it.\n. Pulled in\nhttps://github.com/facebook/react-native/commit/06a87bec25d7184269ef95d5190ef63ce77f0942\nSorry, I don't know what happened but the commit title didn't appear in the list.\n. See Navigator\n. You can do position: 'absolute' in style and use top, left, bottom, right.\nFor zindex, you can move things around in the render, the latest one is drawn on-top of the one before. If you want to do a modal, put it at the root of your app\n. cc @amasad. Note that we've never tested on windows any of the stack, so it's likely that there are more problems down the road.\n. > Any reason why you didn't opt to just use browserify or webpack for the packager? This would open the door to other transforms and plugins, workflows around static and dynamic packages etc...\nWe've tried but they are orders of magnitude too slow for codebases as big as Facebook. We unfortunately had to roll out with our own in order to have sub-second incremental build time.\nThat said, we want to play nice with those tools so that we can interoperate. We really hope that by open sourcing react-native, people outside of Facebook will help us there.\n. Usually, the reason why there's a delay is that the JS thread is blocked doing something else. Do you have some timers or code running at the same time?\n. cc @sahrens who implemented the delay\n. Still working on a few but it's getting pretty complete: https://github.com/facebook/react-native/blob/master/Libraries/react-native/react-native.js#L8\n. It's somehow working for me on npm 1.4.23, but looks like a bug indeed.\n. We thought about it (the first version was called TableView) but there's a couple of downsides:\n- It doesn't have the same api, and works best with immutable data structures, so it would confuse iOS engineers.\n- TableView is an horrible name since it's not a table but a list. Web developers would be confused. The equivalent on android is also called ListView\n- The implementation doesn't actually uses TableView but a scrollview behind the scenes. \n- It only implements out of view cell management, but doesn't have TableView features such as swipe to delete, reordering... We may want to have a component that wraps TableView more closely and have those features and call it TableViewIOS.\nWe're not 100% api with the component api and it'll likely receive more love in the future. Not set in stone yet\n. Can you try\nvar Text = React.createFactory(React.Text);\nreturn React.createElement(Text, 'Hello World');\ncc @balpert\n. The error message is still really bad. Would be nice to throw an exception along the lines of 'You tried to render the element 'Text' but it doesn't exist. You can only use string notation for lowercase components'. Want to submit a pull request that warns against this? It would prevent other people from failing into the same mistake\n. This component is not being used in any production app, this was for an early demo. So it's likely that it doesn't work as expected or there are some rough edges\n. I have no idea. My guess is that it failed internally as well but this test is not whitelisted so isn't running as part of the test step\n. Looks good to me, i'll pull in internally and wait for the tests to see :)\n. Okay, can I ask you a favor? Can you remove the changes in extractDocs.js. We're not mirroring those internally, so they make the patch to fail and the entire tool breaks :x \nWe need to fix the tool but as a small workaround would be nice if you could help out :) Thanks\n. Yay, it passed and it's merged :) When I do the next update (this afternoon) it's going to go live. Thanks!\n. Change the url to /react-native/index.html (with the ). We're now pushing the website to github and can't make it private so we mangle the url so it doesn't leak (please don't share it). I updated the description, when you run npm start, it should have the correct url.\nSorry about that\n. @tadeuzagallo: unfortunately you can't merge code like this. You need to use the internal tool to submit an internal diff. Otherwise this is going to be erased next time we sync\n. Awesome!\nCan you split this into two pull requests. One for the website that you can merge directly (or push it). And one for the lib code that you can either do a pull request here or send an internal diff.\nThanks!\n. Yeah, we're not really fan of the current state of the world but it's working and haven't been a high enough priority so far.\nI really like promises API for that, but I'm a little worried that they run in a setTimeout. Maybe we can just create a fake promise api that just calls then and catch directly.\nTangential to that, we need to figure a better way to represent the error object. Right now it's free for all. Would also be nice to have a stack trace attached.\nI'd like to get @sahrens, @jordwalke, @frantic opinion but if they are alright, I'd love for you to promisify the bridge :)\n. @baofen14787 this is awesome. I want to do the same next month and run our apps on web. I really want to know if the browsers are slow or if it was because we used to write slow code\n. We should create a tag for this. But, for this, I'd rather want people to make separate npm module and if any catches then incorporate it in core.\n. Nice! This is how you get pixel perfect with the react website. I was wondering what was wrong with my font setup\n. You can do\nxhr.send(node.image)\nIt's going to send it as an attachment. We use that in the ads manager app\n(I hope it's in the open source version)\n. cc @nicklockwood do you know if there's a difference between network implementation on opensource/internal?\n. Let's get this in so that other people can iterate on\n. Just fyi, you closed it on your branch and not on facebook one\n. This is now gone, thanks for the pr\n. Unlikely to be implemented directly inside of react native core. The goal is for the plugin api to be good enough so that people from the community can build webrtc support\n. It landed :)\n. Hey, this is the first time we heard of this error. Can you give more information or join IRC to help us figure out what's going on? Thanks!\n. Beware about npm install -g, it is extremely hard to get people to upgrade and will be challenging if there are two projects that need different versions\n. Duplicate of #331\n. Thanks!\n. For the components, we open sourced all the ones that we have that do not depend on fb infra and are in a good shape.\nAs for publishing a roadmap, we first need to figure one out :))\nMore seriously, one idea that was thrown around was to add a \"What are we working on\" section in the rc changelogs every two weeks. This way we can give people some visibility into what's coming next.\n. It is using React Art. We want to open source the obj-c backend that we have in the future\n. This error happens when you try to render a component that's actually undefined.\nvar Component = undefined;\nreturn <Component />;\nThe error message is terrible, we need to fix it. Cc @balpert\n. Give us 6 months. http://facebook.github.io/react/blog/#when-is-react-native-android-coming\n. @amasad maybe we should use a different port than 8081 as the default, it seems like it's being used by a lot of things. Maybe 9381\n. This has been requested many times, need to merge it asap\n. We're not ready yet to be open source first so any pull request has to go through our internal codebase and pass our internal tests that include android. We want to open source android sooner than later so that it doesn't become a big issue but until then, we'll have to live with those checks i'm afraid :(\n. Give us 6 months. http://facebook.github.io/react/blog/#when-is-react-native-android-coming\n. I never ended up committing this import script. It's just copy and pasted\n. This is most probably a bug. We're not using the navigatorios in any of our real apps so it likely has bugs/unimplemented features\n. The Navigation component. It supports left/right navigation with swipe to go back and custom header (we implemented breadcrumbs instead of the standard ios one). Also supports coming from the bottom and swiping down from the top to dismiss.\nIt is written purely in js and reacf\n. Right now it's backed in but we want to allow other transforms down the line. We secretly hoped that someone from the community would help :)\n. Ruby is installed by default on mac os and this is the only platform to run the project on (thanks xcode!). I'm curious, why didn't you have ruby?\n. @jordwalke: we only have one script and it doesn't need ruby, need someone to clean it up.\n. @dickyj can you paste the error that's generated when you do it? We should probably improve the wording so that you don't have to open an issue each time :)\n. We're not using Swift at Facebook so we're unlikely going to spend time building support for Swift ourself. But, we open sourced the project to get help from the community to add support for what people actually use\n. Sometimes if you lose internet connection and get it back up, the simulator will get stuck with no internet. Can you try to kill the simulator and rebuild?\n. If anyone in this thread has any idea how to solve this problem (not workaround by resetting) that would be awesome\n. What problem are you trying to solve with promisifying this file?\n. It's unclear to me what the benefits would be, all the extractDocs methods are synchronous so adding asynchronocity in the mix would only make the code harder to work with.\nAs for the server itself, it's working fine as is.\nIt's tempting to go around a codebase and use the latest shiny abstraction but you should only do that to solve problems. If there aren't problems, adding abstraction is a net negative operation\n. setScriptURL doesn't exist anymore. Can you re-open if it is still useful.\n. Can you post screenshots of iOS and Touchable with this change?\n. Thanks! Looks good\n. @mydearxym: the author closed it, let me reopen it since it is still an issue\n. You can use flex-wrap and flexDirection: row to achieve display: inline-block\n. #326 is related. If you don't have a qwerty/azerty keyboard layout, it won't work\n. Closing this issue for now since it seems resolved, please re-open if you face it again\n. Sorry, our tooling is not good enough right now, an internal diff has been made and accepted. Hopefully it should land tomorrow.\n. Not yet, we'll close it when it lands :)\n. Give us 6 months. http://facebook.github.io/react/blog/#when-is-react-native-android-coming\n. Someone even made a countdown out of it :p\nhttp://www.reactnativeandroid.com/\n. Thanks!\n. cc @amasad, would be nice to make this error message better\n. There are trailing whitespaces. Also, can you make use of those in the NavigatorIOSExample?\n. Thanks!\n. We should have WebViewIOS and WKWebViewIOS instead of a generic WebView component. Anyone up for the renaming and providing both implementations?\n. @spicyj we should be able to expose all the platform features and let the developer pick the one that makes sense for their use case.\n. cc @a2 \n. I'm sorry we didn't get to it earlier, it doesn't merge cleanly anymore :( Can you rebase and we'll get this in!\n. Thanks for flagging. cmd+R support is using some trickery already. I'm unsure if it's even possible to detect different keyboard layouts and change the shortcut accordingly :x\n. Fixed by #347\n. We started React Native on iOS 6 and recompiled JavaScript core to get it working. But since iOS 7 provides JSC for free, we dropped compatibility. There's nothing fundamental preventing React Native from working on iOS6, it's just that so far it hasn't been worth the trouble keeping the backward compatibility.\nCan you expand on your use case for iOS6?\n. We're unlikely going to provide it ourself as I don't forsee any use case for it in the apps we're going to build. But this would be a fantastic component to be built by someone in the open source community :)\n. If you want 3 elements to take 1/3 of the space each, you can do\n<View style={{flexDirection: row}}>\n  <View style={{flex: 1}} />\n  <View style={{flex: 1}} />\n  <View style={{flex: 1}} />\n</View>\neach element is going to take 1/(1+1+1) of the space.\nIs this what you want?\n. Yeah, all those feature detection needs to be carefully considered when running in a different environment. The implementation of Promise that we have is using setImmediate that has been implemented to run before we hand back the process to obj-c\n. By the way, fetch is there by default. It has a much nicer api than xhr :)\n. This is where we mangle with the global environment. We should probably do delete GLOBAL.MutationObserver; (if we can). \nhttps://github.com/facebook/react-native/blob/master/Libraries/JavaScriptAppEngine/Initialization/InitializeJavaScriptAppEngine.js#L117\nOne issue if we do this is that it's now going to use setTimeout(0), which is going to do a round trip to native for every single call. Since when you are using promises, you tend to chain a lot of then, it's going to be much slower than needed. It really needs to use setImmediate.\n. Okay perfect. I'm trying to remove MutationObserver right now, I'll report back in 2 minutes\n. Bingo, it's working, it now falls through the setTimeout check. I'm sending an internal diff, it'll be updated in the next version.\n. That was fast ;)\n. Since I got you, I'd like to get your opinion on \nhttps://github.com/facebook/react-native/blob/master/Libraries/vendor/core/ES6Promise.js\nThis is the promise implementation that we're providing. Do you think it makes sense to use bluebird by default?\n. Yeah, at Facebook we use a slightly improved version of Promises with .finally and .done\nhttps://github.com/facebook/react-native/blob/master/Libraries/vendor/core/Promise.js#L42\nDon't have the rest though. I'll poll people internally and see what they think.\n. This file is:\nhttps://github.com/facebook/react-native/blob/master/Libraries/JavaScriptAppEngine/Initialization/InitializeJavaScriptAppEngine.js\n. Is there a special build of bluebird that's compliant with the es6 spec? Aka not adding extensions such as finally?\n. React native environment should look like the browser / node. By putting non standard primitives as global we would break all the existing code out there. This would be bad for the entire ecosystem.\nIn this case, people can just npm install bluebird to get all those non standard behavior if they want to\n. Closing in favor of #342 \n. What is GA?\n. All the text elements should be accessible by default. Need to ensure that the accessibility features that we have in the internal codebase are ported to open source.\n. This is not going to do what you want. flex: 1/3/1 means that the first element will take 1/(1+3+1) of the space, the second 3/5 and the last one 1/5.\nWhat you want is \njavascript\n<View>\n  <View style={{width: 50}} />\n  <View style={{flex: 1}} />\n  <View style={{width: 50}} />\n</View>\nso, the two elements around are fixed, and use flex: 1 to make it take the remaining space\n. They ultimately need to be View, but you can make a custom component that eventually outputs a view with the style. It'll work with SwitchIOS since it has an intrinsic size (equivalent of hardcoding width: 50)\n. I know that flexbox is pretty new to many people, but at least it's a standard and what you learn on React Native can be reused for your future web projects :)\n. @a2 \n. Thanks, it is now in the repo!\n. So, StyleSheet.create turns the style object into a number that references an internal cache. The idea is to be able to send those numbers to native instead of serializing the style object over and over again. This is a cheap immutable persistent datastructure.\nYou can do  instead of Object.assign\n. Thanks! We never needed them so far so haven't implemented it.\nI'll pull this out on monday (or before if I'm motivated)\n. Fixed thanks\n. Yeah, we're going to have proper api releases with documentation in the future. But, in the next few days after the announcement it's better to move fast and ship often to fix critical issues that people are facing.\nIf you are curious, you can look at github changelog to see what changed\n. Global modules are really hard to get people to upgrade and cause conflicts when you have multiple projects. So we designed react-native-cli to do the bare minimum amount of things.\nIt knows about init and just creates a directory, npm install react-native and runs the init script from there.\nAll the other commands are forwarded to the currently installed react-native module. This way we can add/modify commands without changing the global cli :)\n. > Can MessageQueue avoid the use of dynamic require so all requires are static?\nYeah we want to do that, but haven't had the time to figure out a better way to do it so far. Suggestions are welcome\n. > Can MessageQueue avoid the use of dynamic require so all requires are static?\nYeah we want to do that, but haven't had the time to figure out a better way to do it so far. Suggestions are welcome\n. Thanks for investigating. @amasad will investigate why we have define as a global when he gets a chance\n. cc @sahrens \n. > It had to do a with a firewall issue. I was blocking access to my laptop from other devices. Thanks!\nIt would be nice to have a better error message. Do you think you can add a warning when that happens?\n. We updated the patent grant:\nhttps://code.facebook.com/posts/1639473982937255/updating-our-open-source-patent-grant/\n. This is awesome!\n1) please don't use RCT, reserved for core as you mentioned :)\n2) the idea of cross platform is that everything which is platform specific needs to run on the other platform but only a dummy version. The idea behind it is when you port an app from ios to android, you don't want to instacrash until you resolve all the dependencies. What you want is to run but having ugly red views for unimplemented features. Then you look around the app and fix all of them with android-specific versions. Not really sure how to enforce that for 3rd party plugins right now since you can't test on Android\n. Yeah would be awesome, cc @nicklockwood and @sahrens for the review\n. It looks good to me. I'm looking at why the unit tests are failing.\n. Thanks!\n. Would be nice to update the documentation to mention it as well\n. For the amd issue, here's our code responsible for it. https://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/polyfills/require.js#L597 I'm unsure why we define this global.\n. Woops @jgable beat me to it!\n. Great catch @schokocappucino, would you mind updating the applescript to try both?\n. cc @spicyj\n. There are many things to consider for this API.\n- What is being measured? Your React Native component is embedded inside of an iOS UIView (think of it as iframe on the web). Do we measure this? What happens if you have two instances of React Native sharing the same JavaScript context. How do you get the one that you want. Or, is it measuring the total screen dimensions? What about the bar at the top that comes down? what about the status bar? what about keyboard opening an closing?\n- When is it being measured? On iOS, most of the screen transitions are animated. When the keyboard comes up, it changes the size over time. How do you expose this to the developer? Do you have one callback on every frame? Do you only give the final frame and maybe the time it takes to go there? Do you also give the previous dimensions?\nThe reason we haven't released an API for this yet is that we need to consider all of those. We don't want to provide an API that's going to be half broken for the interesting use cases.\n. There are many things to consider for this API.\n- What is being measured? Your React Native component is embedded inside of an iOS UIView (think of it as iframe on the web). Do we measure this? What happens if you have two instances of React Native sharing the same JavaScript context. How do you get the one that you want. Or, is it measuring the total screen dimensions? What about the bar at the top that comes down? what about the status bar? what about keyboard opening an closing?\n- When is it being measured? On iOS, most of the screen transitions are animated. When the keyboard comes up, it changes the size over time. How do you expose this to the developer? Do you have one callback on every frame? Do you only give the final frame and maybe the time it takes to go there? Do you also give the previous dimensions?\nThe reason we haven't released an API for this yet is that we need to consider all of those. We don't want to provide an API that's going to be half broken for the interesting use cases.\n. We need it in core anyway so I'm going to leave it open for now\n. @ide: This is a possibility\n. I'm sorry but the API needs a lot of thoughts as it cannot be removed once added. Right now you can workaround with require('Dimensions') and when I make time to think it through I can really review it. Until then I'll leave it unassigned, sorry :(\n. Thanks\n. Merci! It's a great first draft, we'll improve it over time :)\n. I would just comment the line global.define = define; I'm really not sure why it is there if it is not working\ncc @amasad \n. Thanks!\n. Check this guide for how to link libraries http://facebook.github.io/react-native/docs/linking-libraries.html#content\n. Thanks\n. returning null is not yet supported but we definitely should :)\n. @spicyj fixed it\n. There's a global variable DEV being set or not.\nWhen doing \n```\nif (DEV) {\n}\n```\nThe code inside will be completely stripped out in production.\nBeware, you should NEVER change the runtime behavior of the code between dev in prod, otherwise you're going to have hell of a time trying to debug some super weird issues reported by your users.\n. We use it internally to add a lot of warnings. For example all the propTypes warn in dev to help the developer but in prod all the code for them is removed to make the app faster.\n. Sweet!\ninit.sh should be outside of the cli folder. Since the cli is global, it's super hard to update. What it does is just forward all the commands to react-native which can be updated easily.\n. Looks good, i'll test it and merge it later today or tomorrow, thanks!\n. @JoeStanton you can't put it in react-native-cli, but you CAN put it in local-cli (that's the right place where to put it)\n. Thanks, a few minor details and we're good to go :)\n. Oh you are right, nevermind me\n. There's a npm package called events which is the exact same code as node's events. https://www.npmjs.com/package/events\nI wonder what happens if you add the events dependency on node, does it use node's one or does it use the npm installed one?\n. I really want to make sure to find a good solution for sharing code between node, browser and react native. This would suck to lose all those great libraries just because we're using a slightly different but incompatible system.\nThe idea of bundling all the node modules by default like browserify is not out of the question, but I really don't want React Native to be in the game of keeping those libraries up to date with node/io and all the dependency management that it entails.\n. cc @a2 \n. cc @sahrens If I remember correctly, it's not rendering shadows for phones that are not good enough and by default the simulator fits that.\n. @mbrgm: our base reference to all of those questions is the web. Can you add a shadow and overflow hidden on a div in a jsfiddle and see what happens?\n. cc @nicklockwood\n. Sorry we didn't get to it earlier, do you mind rebasing, it can't merge it anymore :(\n. Note that browserify has the same shortcoming. The dependency analyzer just scans for require(string litteral)\n. Actually, I think this would be better for you to create a separate github repo for this specific component, iterate on it and when it reaches maturity we can see about including it in the main repo. Otherwise we're going to slow you down as we're not going to include something half baked as part of the core build.\n. Sorry about the delay, it was Sunday at 7pm in California time :x \nThanks for adding it there, it should make it easier to find out about properties. Can you just link to the documentation website instead of the js files?\n. You're not the only one that missed it, so this pull request would really help!\n. This landed\n. Hey, can you make sure it actually follows the same behavior as CSS.\nExample, can you run this in React Native, take a screenshot and make sure it looks pixel perfect:\nhttp://jsfiddle.net/y7h9j3uw/\nIf you want to try a different font: http://iosfonts.com/\n. It is super important that any feature which has the same name as CSS does actually work exactly the same as CSS, otherwise it makes debugging a lot hard and confuses developers.\n. Can you also check what's the behavior for negative spacing? Thanks a lot for making sure it's the same\n. Yeah w\n. Would be a great guide\n. >  I would want to keep boolean args out of the JS API since JS doesn't have named args.\nTotally agreed.\nThis looks good to me\n. Nothing. It should work if you update the applescript to open Firefox instead of Chrome. https://github.com/facebook/react-native/blob/master/packager/launchChromeDevTools.applescript#L13\nDo you want to try it out?\n. The applescript is just there to open chrome/firefox on the right page, after the js opens a websocket to the node server and everything runs from there\n. You probably want to look at the debugger.html source that does the piping. JS is running inside of the browser.\nhttps://github.com/facebook/react-native/blob/master/packager/debugger.html#L34-L62\n. Unfortunately CSS doesn't have a good way to do aspect ratio like this. The best hack you can come up with is padding-bottom: 150% but it's super ugly. I prototyped an implementation of aspectRatio and it worked but wasn't spec compliant so I backed off.\nIn the meantime, you can do height: require('Dimensions').get('window').width / 1.5\n. Woops, thanks! Can you just sign the CLA so I can take this in?\n. That's a super interesting idea. No plans from us but would be cool to explore this idea if you want to :)\n. React Native is using a different optimization strategy than iOS. Here's a summary\nLoad balancing\nIn UITableView, when an element comes on screen, you have to synchronously render it. This means that you've got less than 16ms to do it. If you don't, then you drop one or multiple frames. If you are rendering complex elements like newsfeed stories, it's basically impossible to meet this schedule so you're doomed to drop frames.\nWith ListView, when you reach the end of the current screen, you can prepare in advance more rows to be rendered. Those rows will be rendered in a different thread so won't freeze the UI thread while processing. The reason why it is working is that the load is not evenly spread. You don't need to render a new story on every single frame, most frames are just scrolling and don't need new stories to appear.\nListView will also render one element at a time, so if you are interacting with some element while rendering more rows, it won't block until all the rows have been pre-rendered, it will only block for one row.\nMemory management\nUITableView is very conservative memory-wise, it aggressively reuses cells. This decision was made back in the iPhone 1 where memory was extremely scarce. The problem with this is that reusing cell is extremely error prone for the developer. You are given a dirty object, from which you have no idea what mutations happened, and you need to reconfigure it to look like what you want. In our iOS app, this caused SOOO many bugs.\nThe problem of reusing cell is that some cells have internal state (video player running, text input, horizontal scroll position...) When you reuse them, you need to be able to serialize that state and put it back. This is not always possible nor easy, so you usually either loose this state or it propagates on the new row and causes bugs.\nWhat we found out on React Native is that it is fast enough on iphone 4s to create new cells for every single row. So, we don't need to impose this very hard constraint on ourself. In your screenshot, you noticed that we don't remove rows after you scrolled for a while. That's not entirely correct, we don't remove the virtual dom representation on the React side (what you see in the chrome dev tools), but we do remove those elements from the \"dom\" and keep their reference.\nWhen they are visible again, we put them back on the dom. In case we have low memory or the list is too big, we may destroy those and recreate them from scratch (loosing the state as mentioned above) in the future. We haven't done this performance optimization yet, but the user code wouldn't be impacted.\nWe tried to delete the iOS views aggressively but we found out that doing so was actually very expensive. It was better to leave them hanging than to remove them.\nChange Detection\nIn ListView, we have a DataSource object that favors immutability. If you have a list of 1000 elements to render, you want to make those 1000 elements immutable, meaning that you can check the previous one === the next one and instantly know if something changed. This way, when anything change, the only thing you've got to do is to traverse those two lists and do those very fast equality checks and know what rows changed. And then update only those.\nLayout\nIn UITableView, you've got to specify the layout of every single row even when they are not being displayed on screen. So, in cases where it's not a fixed size, you've got to basically render the element to know its size, and pay that high cost up front. It's also very annoying to do so manually.\nIn ListView, since React Native owns the layout system, you don't need to do all that painstaking manual computation yourself. When a row is rendered, it'll update the size. The only downside is that the scrollbar is a little funky, but I'm sure we'll be able to come up with heuristics to smooth it out in the future.\n. cc @bryceredd who's been investigating React Native performance\n. Closing this since it's not very actionable.\n. Closing this since it's not very actionable.\n. Sorry, trying to clean up the hundred plus issues we had, I was a bit too quick on this one.\n. Please see #502 for pull to request\n. Please see #502 for pull to request\n. @pilwon we want to eventually be github first but are not ready yet. For the time being, we need to ensure that every pull request passes our internal test suites and don't break our internal apps. Good idea about updating the contributing.md file\n. Yeah would be nice, thanks\n. \"It silently fails without the check\" what silently fails?\n. I see what you mean! Need to figure out what the best way to handle this, but I disagree that enforcing that children are native components is the right call.\n<TouchableWithoutFeedback>\n  <MyBigComponent />\n</TouchableWithoutFeedback>\nshould be able to work, otherwise you break the ability to build abstractions.\n. You should use {uri: this.props.image} for non static images\n. You should use {uri: this.props.image} for non static images\n. Can you explain what the use case is? Are you saving images from the internet and you want to be able to read them?\n. I'm unsure but isn't the CameraRoll class doing what you want?\nhttp://facebook.github.io/react-native/docs/cameraroll.html#content\n. We had justify and then realized Android doesn't support justify so we removed it.\nProbably worth adding it back and figure out something on android side, pretty crazy that it is not supported\n. Agreed. Pull request welcome\n. @sahrens can you look at this?\n. Yup, we need to document this officially. In the meantime the instruction is in https://github.com/facebook/react-native/issues/240\n. Internally, we reimplemented the segmented control in pure js. We found that it was easier than to wrap the native implementation.\n. textAlign should be in the style attribute, not as a prop of the component. Also, it doesn't merge anymore :(\n. This is really good thanks! Can you use local images and then i'm good pulling it in\n. Thanks!\n. Thanks, can you sign the CLA, rebase and i'll pull this in :)\n. It has merge conflicts :( Can you rebase and i'll pull it in. Thanks!\n. Didn't seem to work :( Maybe you want to abandon this one and recreate a new one with just your change?\n. Thanks, looks much better :)\n. @veddermatic you need to clone data[0], otherwise this is the same reference so ListViewDataSource can't tell the difference. Look for the many talks about immutability and react to have a better understanding of what is happening\n. I can see the image just fine? http://facebook.github.io/react-native/docs/embeded-app.html#add-container-view-to-your-app\n. Sadly we get the name of the people that imported the pull request and not the author of the pull request. I'm looking to see if there's a quick fix we can do as it really sucks to lose attribution.\n. I can see the image just fine?\nhttp://facebook.github.io/react-native/docs/embeded-app.html#compile-and-run\n. Thanks!\n. It doesn't patch cleanly anymore, can you rebase? Sorry about this\n. The way we deal with images in React Native is that we keep the image data in obj-c land and only pass a handle (a small string) to JS. Then we can send this handle to  to display it, send to an image manipulation library to apply filters, save to cameraroll... This way we don't have to copy this huge image twice.\n. @danicomas: have your websocket bindings know how to send this image handle. For example our internal implementation of XHR.send(image) will send the raw data when passed an image handle (we need to reproduce this feature in open source btw).\n. :+1: we have this in our internal image component and its pretty handy\n. If both props are doing the same thing, we should probably only have one and use the web naming convention.\n. Thanks! \nThis is the code that renders this element in the docs. If you can come up with a way to annotate those it would be great :)\nhttps://github.com/facebook/react-native/blob/master/website/layout/AutodocsLayout.js#L66\n. > Finally, we have been discussing which flavor of promises we want to use going forward - @amasad, @vjeux - what's the latest there? Should we be using the global promise like this or requiring something else, like bluebird?\nWe can't put bluebird as the global Promise because it's not standard compliant. I'm also hesitant of vending a non standard Promise from core APIs. But I could be convinced since it appears that standard promises are really bad at everything -_-\n. @frantic we failed :(\n. Fixed with 0.3.4, thanks!\n. Fixed thanks!\n. Note that when you pass undefined to React.createElement it displays this crazy error. We need a more explicit message.\nExample:\nvar Component = undefined;\nvar c = <Component />; // crashes with autoGenerateWrapperClass is null\nWe need to fix this @spicyj \n. Can you rebase, the change in Examples/SampleApp/index.ios.js has already been done\n. We have a fix internally, going to be pushed soon! Thanks for the heads up\n. This is awesome! Thanks for doing this! @a2, @nicklockwood can you review?\n. Sorry about the review delay, if you rename the event names i'll pull it in :)\n. Sorry for not getting to it earlier, can you rebase and i'll merge!\n. Yeah, need to figure a solution for those\n. In any case, that's still better than what we have now.\n. Waiting for travis to test it out and then you can merge it\n. lgtm\n. This is because of this line: https://github.com/facebook/react-native/blob/c6203f65166456ffaf866fbc55477c5b95589325/website/publish.sh#L22\n. React refs should be working like in React (React Native uses the latest version of React). Isn't it working for you?\n. The problem here is that replace is going to convert  into a string and not do what you want. If the input string is 'var a = this.a;', you want to end up with ['var a = ', <Text />, '.a;'].\nI don't think there is any default method to cleanly do it so you'll probably have to use a for loop and build the array yourself.\n. We don't have any usecase for websockets at Facebook right now so we are unlikely to be working on it in the near future, but the plugin api is designed to support web sockets, so hopefully someone will from the community will get it working soon. Cc @sspi\n. @tptee the idea has been thrown around yeah. Right now we know the ideal vision but the specifics are up in the air. Also, no one at Facebook is actively working on this, we're kind of hoping that someone from the community will make something that works great :)\n. Many things here:\n1) What is the web naming for this attribute if it even exists?\n2) Have those two attributes exactly the same behavior?\n3) We want to split this into TextInputIOS and TextInputAndroid because they don't share the exact set of props. Maybe add a TextInput that's a lowest common denominator\n. Many things here:\n1) What is the web naming for this attribute if it even exists?\n2) Have those two attributes exactly the same behavior?\n3) We want to split this into TextInputIOS and TextInputAndroid because they don't share the exact set of props. Maybe add a TextInput that's a lowest common denominator\n. Actually this is working, this is called Method Definition http://ariya.ofilabs.com/2013/03/es6-and-method-definitions.html\n. Actually this is working, this is called Method Definition http://ariya.ofilabs.com/2013/03/es6-and-method-definitions.html\n. It does support it, selectedIcon prop. I just documented it much better, going out in the next sync\n. Yeah, this component was in dire need of cleanup/documentation\n. > And I'm wondering why wouldn't React Native support display: none\nYou can just remove it from render to achieve the same effect and reduce memory usage no?\n. @ranyefet no one inside of Facebook is working on this right now and likely for the next few months. If you need this, I would encourage you to build it yourself or find someone to. The native component integration API should be all you need :)\n. @nicklockwood that works with me.\n. Thanks!\n. Nice!\n. Are you planing to add brew / node_modules caching?\n. Yay! \n\n. react-native-cli is installed globally and therefore extremely hard to change. The goal for it is to do as few work as possible, and to forward all the commands to node_modules/react-native/cli.js which can be updated independently.\nIf you want to add a build command, you should add it in cli.js. Hopefully if we've done our job correctly, we'll never update react-native-cli ever again.\n. Looks good to me, @frantic what do you think?\n. Yup, it's matched by name. if the component is Animation, then it looks for Examples/UIExplorer/AnimationExample.js\n. Thanks! Master is broken because of a flow error, doesn't have to do with your pull request\n. @zpao, @spicyj: what are your thoughts on exposing invariant\n. Nice! You should also look at http://react.parts which is in a similar vein\n. Nice! You should also look at http://react.parts which is in a similar vein\n. I don't think that anyone is working on it at the moment, would be nice if you could take a stab at it :)\n. I don't think that anyone is working on it at the moment, would be nice if you could take a stab at it :)\n. Thanks for the report, looks like the measure call doesn't take into account numberOfLines. Do you want to give a shot at fixing it?\nNote that internally we use a different Text implementation that's unfortunately very tied to fb infra so we had to write a new one for open source. But the goal is to make it as solid as possible :)\n. Thanks for the report, looks like the measure call doesn't take into account numberOfLines. Do you want to give a shot at fixing it?\nNote that internally we use a different Text implementation that's unfortunately very tied to fb infra so we had to write a new one for open source. But the goal is to make it as solid as possible :)\n. it seems like jxcore is handling packaging js files and the js vm. Those are very integrated in React Native and seem pretty hard to plug and play at first glance. Can you tell us more about why you want to use jxcore? Do you have some use cases in mind?\n. This is the first time I've ever heard of JXCore and I still am not quite sure what it exactly does but if the interface is asynchronous and you can run it from obj-c, then it is possible to make a plugin for it: http://facebook.github.io/react-native/docs/nativemodulesios.html#content\n. Can you try adding style={{flex: 1}} on the text node?\n. I need to double check but I'm pretty sure that this is how CSS actually behave.\n. What difference does it make if there's an empty line there or not?\n. Right now, we're focused on normal iOS and Android. We still a very small team and don't have the resources to target a different support right now. However, we open sourced React Native in the hope that we get help from the community to build those :)\n. Our current thinking around all of those APIs is that it's going to be left to whoever bridges it first. If we need it internally we'll build it and dogfood it. When it becomes good and stable, we'll include it in core. But if someone else in the community beats us to it and the package on npm gains significant traction, we'll likely bring it in core instead (assuming the author wants to).\nThe good part is that the plugin api is public and what is being used for all the existing components today, so no one has a disadvantage.\nWe don't have any plans for a feature that would use the contact api right now, so it's unlikely going to be coming from us in the next few months.\nThis whole plugin is still very much up in the air, please let me know if you have ideas on how to make it work best for everyone\n. Yeah, this is unfortunate, internally we had to implement the modal component in objective-c, so that it can be on-top of NavigatorIOS and the status bar. cc @sahrens who built it\n. If you press cmd+ctrl+z you can disable chrome debugging. Would be nice to improve the detection though if chrome dev tools are closed, to disable it automatically. cc @frantic\n. When running in the simulator, you are using JavaScriptCore that supports computed properties natively.\nWhen running in Chrome debugger, you are running stock Chrome (and v8) which doesn't support it.\nWe have many es6->es5 transforms that smooth out all those differences but computed properties is not one of them unfortunately.\n. This is super weird, it is there: https://www.npmjs.com/package/react-native-cli\nMaybe you are using a custom version of npm (entreprise maybe?)\n. This diff broke everything when I pushed.\nFirst, it wasn't included in \"files\" in package.json so it didn't work. Then, I added it but it throws\n``` javascript\n\ncli.init('.', 'test')\nundefined\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: spawn ENOENT\n    at errnoException (child_process.js:1011:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:802:34)\n```\n\njavascript\nspawn called\n{ '0': '/Users/vjeux/random/test/node_modules/react-native/local-cli/init.sh',\n  '1': [ 'test' ],\n  '2': { stdio: 'inherit' } }\n. This is the issue, missing ../, fix incoming\nhttps://github.com/facebook/react-native/blob/master/local-cli/cli.js#L47\n. 0.3.7 published with the fix, doing a commit right now\n. Ok, I confirmed that it is now working. @frantic how can we add a test to travis ci so that it doesn't break when in npm publish next time? :)\n. Multiple reasons:\n1) We haven't figured out how to deal with obj-c dependencies so it was hard to embed POP\n2) Pop runs in the main process, however there's a way on iOS to run code in a completely different process via CoreAnimation.\n3) It doesn't work on Android\nBut ultimately, we haven't figured out a good general api for doing animations. Instead of exposing some half backed version (that are working) and trashing people in open source, we prefer to wait and iterate on it internally until we find something that we want people to use and we want to maintain.\n. Yeah, we removed the Animation API from react-native as it's not being used anywhere and not good right now. I need to remove it from the docs.\n. https://github.com/facebook/react-native/commit/6a970546966aa190e5d972bca17baa3d1c2a4786\n\nChristopher \"vjeux\" Chedeau\nFacebook Engineer\nhttp://blog.vjeux.com/\nOn Mon, Apr 6, 2015 at 2:44 PM, James Ide notifications@github.com wrote:\n\ncc @sahrens https://github.com/sahrens this might be related to the\nAnimationExperimental rename.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/709#issuecomment-90254670\n.\n. I've seen people use react-tweet-state successfully https://github.com/chenglou/react-tween-state\n. Thanks!\n. Can you be more specific. Do you have screenshots/mocks of what you want the flow to look like?\n. Sorry about this, we removed the Animation API because it was written in a day and not tested anywhere. In the meantime you can use https://github.com/chenglou/react-tween-state or requestAnimationFrame with setState where you manually update the opacity.\n. Sorry about this, we removed the Animation API because it was written in a day and not tested anywhere. In the meantime you can use https://github.com/chenglou/react-tween-state or requestAnimationFrame with setState where you manually update the opacity.\n. Much better thanks!\n. Awesome thanks!\n. Sorry about this, it is now fixed. https://github.com/facebook/react-native/pull/706#issuecomment-90799052\n\nThanks a lot for reporting this!\n. react-native-cli has been designed to do the minimal amount of work (mkdir name; cd name; npm install --save react-native; node_modules/react-native/cli.js arguments) and forward everything to cli.js\nThe reason for that weird setup is that react-native-cli is a global and is therefore extremely hard to update and introduces conflicts with different versions. By moving all the complicated logic to cli.js, we bypass all those issues\n. Thanks! Sorry about this\n. Wow this is bad. @a2, @nicklockwood ?\n. Would be nice indeed. Want to send a pull request?\n. Updated! Much better wording indeed. I also toned down the red\n\n. Thanks! And thanks for marking it as highly to change as well :)\n. @facebook-github-bot import\n. This is awesome thanks! I looked at stack overflow and the answer was that it was impossible to detect but I'm glad you found a way :)\n. > I add a prop like this.props.scrollViewClass and use it to create the component returned from render()\nI've been meaning to do something similar for a while in order to support both iOS and Android specific list views but a single ListView/InfiniteScrollView/RefreshableScrollView...\nWe've been moving away from passing a class as props to passing a function. This way the call site can pass props and the implementation can cloneElement to pass props as well.\n<InfiniteScrollView renderScrollView={() => <ScrollView style={{paddingTop: 50}} />} />\n. More about future proofing the api, i can almost guarantee you that you're going to want to pass arguments computed from within the extended scroll view component at some point\n. Looks good to me after the change, thanks for using backgroundColor, it's much more logical that way\n. This is on my mental todo list of things to do with the project. It would be awesome to have View, Text, Image and the gesture system working on the web. This way you can share components that are not platform specific between the three codebases.\n. @yuanyan omg this is awesome! Do you think that you'll be able to submit pull requests to core? :)\n. @yuanyan omg this is awesome! Do you think that you'll be able to submit pull requests to core? :)\n. cc @sahrens \n. <vjeux> what happens when you display a video element in ? Does it fatal? or shows the thumbnail?\n<corp> shows a thumbnail\n. If we can get that API working, I would be extremely happy! That would help a lot to workaround the layout system and help with animations. We would only lose one round-trip instead of two to know the dimensions.\njavascript\n<View ref=\"view\" onDimensionsChange={(width, height) => { ... })/>\n. We can also hook it up at the layout level, in ShadowView.m we set the width/height/top/left, at this point we can check if someone is listening\n. @facebook-github-bot import\n. Definitely worth it. Would be nice to add a if (DEV) { } around it so that it's not being run in prod\n. The rule is that if there's an equivalent on the web in style, it should be a style with the same name and same behavior. Otherwise it should be a prop.\n. cc @a2  Can you let me know how to push a new spec and i'll do it as part of the push process\n. Hmm, i already added a warning about this, didn't I?\n. Woops, I need to publish a new version of react-native-cli. I'll do that when i release 0.15.0\n. @facebook-github-bot import\n. @ide: we found the bug why it didn't update. Should be working fine for old pull requests in a few days (need to make a real diff + land it)\n. I'd really love all those to be separate components like LinearGradient. This way we don't need to have a huge standard library that's super hard to maintain for edge case features like this.\n. I'd really love all those to be separate components like LinearGradient. This way we don't need to have a huge standard library that's super hard to maintain for edge case features like this.\n. I quickly looked at the API and indeed it looks extremely similar. I think it makes sense to have a NotificationIOS module that merges the two. When @ericvicenti built PushNotificationIOS I was unaware that iOS had the concept of local notifications\n. I quickly looked at the API and indeed it looks extremely similar. I think it makes sense to have a NotificationIOS module that merges the two. When @ericvicenti built PushNotificationIOS I was unaware that iOS had the concept of local notifications\n. Thanks for the pull request! Would be nice to follow the CSS naming convention for this\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style\nAnd, if you can provide a jsfiddle that shows that the code works on a span on the web that would be awesome!\n. Thanks for the pull request! Would be nice to follow the CSS naming convention for this\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style\nAnd, if you can provide a jsfiddle that shows that the code works on a span on the web that would be awesome!\n. We're trying to use web naming whenever possible, even if it's not implemented everywhere. This way we can redirect users to mdn documentation, and don't have to bikeshed on naming.\n. We're trying to use web naming whenever possible, even if it's not implemented everywhere. This way we can redirect users to mdn documentation, and don't have to bikeshed on naming.\n. Actually i would skip the differential part of the process. We should review it without knowing the fb-side of things and when it's accepted then only at this point do the phabricator import. I want to move towards a world where tests in open source are the \"source of truth\" and if something breaks internally we need to add a test in open source. This will make going github first easier when we do it.\n1. Contributor submits a PR. [Needs Review] <--- bot\n2. Reviewer manually tags it as [Needs Revision]\n3. Contributor updates the PR. [Needs Review] <--- bot\n4. Reviewer manually tags it as [Accepted]\n5. Reviewer imports it, get it accepted inside of fb, lands it...\nSo, for this task, the only thing that needs to be done is whenever a pull request is updated, need to remove the review tag and replace it with Needs Review\n. Actually i would skip the differential part of the process. We should review it without knowing the fb-side of things and when it's accepted then only at this point do the phabricator import. I want to move towards a world where tests in open source are the \"source of truth\" and if something breaks internally we need to add a test in open source. This will make going github first easier when we do it.\n1. Contributor submits a PR. [Needs Review] <--- bot\n2. Reviewer manually tags it as [Needs Revision]\n3. Contributor updates the PR. [Needs Review] <--- bot\n4. Reviewer manually tags it as [Accepted]\n5. Reviewer imports it, get it accepted inside of fb, lands it...\nSo, for this task, the only thing that needs to be done is whenever a pull request is updated, need to remove the review tag and replace it with Needs Review\n. There are two other urls that are suspiciously hardcoding localhost:\nhttps://github.com/facebook/react-native/blob/862d9fba09046b6ca82bcc75197de69cbfb8fa41/React/React.xcodeproj/project.pbxproj#L465\nhttps://github.com/facebook/react-native/blob/862d9fba09046b6ca82bcc75197de69cbfb8fa41/React/Base/RCTRedBox.m#L85\ncc @frantic \n. @ericvicenti\n. This actually breaks the tests\nld: library not found for -lRCTWebSocket\nhttps://travis-ci.org/facebook/react-native/jobs/62613184\n. @nicklockwood when I export the commits, all the related pull requests automatically get closed FYI :)\n. Yes, we need a better solution...\n. Please edit\n. You are right, XHR won't let you handle redirects yourself by design :( http://stackoverflow.com/questions/228225/prevent-redirection-of-xmlhttprequest\n. @3rd-Eden do you know if you are able to login to your 3rd party via web? If yes (which seems likely) then there must be another way to do it right? Before going down the rabbit hole of making nofollow working, I wonder if there's an easier way\n. Yeah this seems crazy indeed. My recommendation to you would be to write all the code that does the request, extracts the cookie, ... in obj-c via iOS networking stack and then expose a single method for js: login(cb).\nhttp://facebook.github.io/react-native/docs/nativemodulesios.html#content\nThis is going to solve your particular issue. If this becomes a common pain point for people, then we can figure out a more elegant solution\n. I had it un-polyfilled before but you run into CORS issues. If you correctly setup CORS then you can comment this line and see all the http requests in the chrome dev tools :)\nhttps://github.com/facebook/react-native/blob/2bb10cdaf956a2d88e4eb9b62572165633094143/Libraries/JavaScriptAppEngine/Initialization/InitializeJavaScriptAppEngine.js#L127\n. What you've done is currently the best way to do it. It's far from being ideal but works well enough that we were able to solve all the problems we've thrown at it so far.\nThere's definitely a better abstraction that exists somewhere.\n. Awesome! Would be nice to update the documentation to explain how to use it :)\nhttp://facebook.github.io/react-native/docs/nativemodulesios.html#content\n. @nicklockwood thanks for the info, would be nice to put it somewhere in the docs :)\n. @facebook-github-bot import\n@facebook-github-bot shipit\n. @facebook-github-bot import\n. @facebook-github-bot import\n. @facebook-github-bot import\n. @facebook-github-bot import\n. Update\n. Update\n. A more React Native-like api would be\njavascript\n<TextInput placeholderText=\"abc...\" placeholderStyle={{ color: 'red' }} />\nWhere placeholderStyle overrides style attributes\n. update\n. test\n. plop plop plop\n. trying again\n. pingou\n. kawabunga\n. try try try\n. Do you get this?! :)\n. iOS model is really tricky here. Let say we have a navigation bar and a tab bar. The normal way you would implement it is by doing:\njavascript\n<Container>\n  <Navigation />\n  <Content />\n  <TabBar />\n</Container>\nand let the layout system automatically figure out what navigation and tabbar take and size the content with the remaining space.\nHowever, Apple designers decided to make the navigation and tab bar semi-transparent, which complicates everything. Now instead of having 3 boxes laid out on-top of each other, <Content /> needs  to be as tall as the container BUT have some padding equal to the size of the top and bottom bars.\nThe way Apple implements this is by having the following structure:\njavascript\n<Navigation offsetTop={40}>\n  <TabBar offsetBottom={30}>\n    <Content />\n  </TabBar>\n</Navigation>\nAs you go deeper in the hierarchy you accumulate those offsets and when you reach the first element that's a ScrollView, you apply some negative margin up and down and padding up and down equal to the accumulated offsets.\nSomeone tried to implement this but it proved to be difficult in the current architecture because we run React Native in a separate thread layout -before- we render the iOS elements. Those offsets are computed in iOS layout phase which happens in the main thread -after- React Native layout.\nThen, we realized that it was going to be super tricky and we found easy workarounds in our use cases so we didn't invest much time on it. This is however something that needs to be fixed :)\n. This is awesome! I'm sure that there's a lot of low hanging fruits in terms of performance at the bridge level :)\nYou mention a 10-15% reduction, mind sharing your methodology so that we can reproduce it?\n. cc @bryceredd who has been looking at performance measurement lately\n. What @spicyj said. Also, we are not satisfied with the current ListView implementation as it grows memory linearly and never reclaims it. What we have right now is a first shot but expect it to change down the road\n. The problem with those two components, is that they reach in the internals of the child via setNativeProps and POPAnimationMixin.startAnimation. In the meantime, you can wrap your children into a <View> and it should work fine.\nI'm working on a larger proposal that would address those two problems.\nThe React way is to pass down updated values on every frame as prop and let the child component update on every frame. The issue is that if you don't implement shouldComponentUpdate in your child component (which is highly likely) then you're going to re-render large parts of your app and the animation or update will be really slow.\nSo, in order to \"fix\" this, what we do is to take the underlying node and set the values directly. This works when you are passing native components such as View or Image, but if you are passing composite components it falls apart. This is a really unfortunate situation as the biggest strength of React is that you can build your app with those composite components.\nMy idea is to pass down the current opacity as the style prop as usual, and let it any composite component in between manipulate it and thread it through an eventual native component. Then, the trick is to record on what native element and what style attribute it was eventually applied to.\nIf you can store this information as metadata of the style value, then anytime you want to update it, you can just list all the affected elements and set their value directly.\nIn order to make this work, you need the value to be opaque, meaning that all the composite components (which are implemented using arbitrary js) can only move it around but not be able to inspect the value. Thankfully for style, this isn't an issue in practice as all the objects returned from StyleSheet.create are already opaque.\nYou'll likely hear more from this crazy idea in the next few weeks :)\n. I think that react-native environment should behave as much as possible like state of the art browser and follow the specs.\nIn this case, this is not a great polyfill because it doesn't follow the specifications at all. It doesn't work in languages other than english and only supports one option. A bad polyfill is worse than no polyfill as it's likely going to cause a lot of problems down the line.\nNow, the thing that sucks about polyfills is that you have to load them all the time and it costs startup time for things that are probably not going to be used by a lot of people. I'd love to get to a point where you can npm install to-locale-string-polyfill and now you have it.\ncc @sebmarkbage who put a lot of thoughts on the subject\n. Doesn't merge cleanly, abandoning\n. As a general rule, you don't want to mutate anything, what you want is to make a new object that has the old and new.\nIn your case you can do\njavascript\nvar style = [child.props.style, { opacity: 0 }];\nReact.cloneElement(child, {style})\n. Also, looking up the registry is not going to do what you expect. If the style is an array, then it is going to crash. The proper way to extract information is to use flattenStyle, BUT there are very few reasons to ever use it. Please ask me if you think you need it, there is probably a better way\n. Right now there isn't a better way unfortunately right now. One thing you can do is to do setTimeout(0) instead of requestAnimationFrame in order to avoid skiping an entire frame\n. Ohh, you are right, nevermind me :(\n. Erg yeah, I didn't think of this use case. As a workaround I think you can do style={{width: undefined}}\nI'm not such a fan of auto injecting the dimensions but it's worth trying out and see how that works\n. test test \n. lgtm. @a2 want to pull it in?\n. @JohnyDays you can add a ref to the element you render and call measure on this. https://facebook.github.io/react/docs/more-about-refs.html\n. Your reading of my comment is correct but i was actually wrong. We need the equivalent of React.findDOMNode() for React Native\n. What does it mean? You can do <View style={{opacity: 0.5}} />.\n. On React Native we have position: relative by default. This has the behavior that those children are on the same z-index space as absolute children and your assumption doesn't hold true anymore: https://jsfiddle.net/m39z3bjb/2/\nThanks a lot for the jsfiddle, we really want to be compatible with the web!\n. cc @sahrens \n. We're unlikely going to provide encryption or more sophisticated obfuscation.\nRight now, all the module names leak and we're thinking of replacing them with numbers for efficiency reason, which should help a bit if we end up doing it.\n. That's correct, it probably won't fit your usecase.\nWe (as in Facebook) are not going to implement what you want anytime soon. That said, if you make the necessary changes inside of the codebase to have a pluggable way to inject an encryption/obfuscation plugin, that's something we may consider pulling in\n. This is good, can you update it to 0.11.0 and i'll bring it in\n. Thanks!\n. @facebook-github-bot import\n. Thanks for the very detailed issue! I think what needs to be done here is not to tell whether the image is 3x or 1x but what the scale independent size of the image should be.\n. @facebook-github-bot import\n. Yeah it has come up a few times on twitter as well\n. @amasad would be awesome!\n. @oveddan: the proper fix is to remove window.document.createElement = null; altogether. It was used to make sure that ExecutionEnvironment.canUseDOM is false, but we modified this file and it is now always false regardless of the presence of document.\n. This is probably going to break many of our internal apps, the person that imports it needs to review it carefully\n. fetch is copy and pasted straight from https://github.com/github/fetch\nIt may be out of date though and we need to update it\n. Oh now I understand. There's no reason but my ignorance that they actually existed. Feel free to send a pull request to add them\n. cc @frantic \n. cc @paulirish\n. @facebook-github-bot import\n. @facebook-github-bot import\n. Omg, I'm so sorry that your pull request has been ignored for 9 entire days :x There's a lot of activity on the repo right now and our tooling is not good enough, but that shouldn't be an excuse :x\n. @nicklockwood @tadeuzagallo @a2: this seems like a reasonable thing to add. But I'm not sure what your thoughts are\n. @spicyj: on you to review it :)\n. Need to update Libraries/JavaScriptAppEngine/Initialization/loadSourceMap.js as well\n. @facebook-github-bot import\n. Also need to update Examples/Movies/SearchScreen.js\n. For those two, you probably want to use the global instead of requiring fetch directly\n. @facebook-github-bot import\n. I'd like for it to be as transparent as possible, you should have an \"image\" object and send it to the source attribute and should be good to go. I like the idea but imo it should not be a different attribute.\n. cc @frantic: what is the current format you implement for handling 1x, 2x and 3x?\n. @facebook-github-bot import\n. cc @nicklockwood and @a2, this is weird that timers are suppressed\n. You need it in its own line. It actually may work with you since you have a fb employee vc\n. @facebook-github-bot import\n. @ide convinced me that it's the right way to model all our one-shot asynchronous api to use promises.\n1) They are standard\n2) They provide an explicit and standard way to handle errors\n3) We can now use async/await to work with them!\nRight now, we've got as many versions of asynchronous calls as there are ways to do it. Moving to Promise seems like a clear win all across the board from the JS side of things.\n. The JS part looks good to me, thanks!\n. @facebook-github-bot import\n. @ide we can't use native promises as they don't respect React Native scheduling with the batch, so I don't think that's a big issue anyway\n. Actually, assigning to @spicyj since he has some thoughts on the matter.\n. @facebook-github-bot import\n. strange that it didn't work for you @spicyj \n. Thanks!\n. @facebook-github-bot import\n. I'd really love to hear about the use case you are trying to solve. The way we usually design APIs is we start from a use case and we brainstorm APIs that could solve the problem. It seems like you proposed one solution but we don't know your thought process that led to that solution.\nFrom our perspective, the solution is adding a lot of complexity to the code and interface and it's unclear what problem it is solving. Can you enlighten us? :) Thanks!\n(Sorry this is coming so late in the review...)\n. > I also don't believe that all Touchable component's inside ScrollViews should be created equally\nI agree with this. The highlight should only be delayed if we are within a scrollview. There's a lot of things that behave differently within a scrollview. @sahrens: what do you think of adding isWithinScrollView as context of scrollview and check it within TouchableHighlight?\n. Can you come up with different scenarios where we would need to have different timings and see if we can enable them by default with minimal developer overhead?\nFor example,\n- if within a ScrollView then delay the highlight.\n- if the action is going to involve a network request then make the highlight longer after touch up.\nThen, we can try to figure out ways to make it the default behavior:\n- for scrollview, we can use context to figure out if the button is within a scrollview\n- for network, we can use the return value of onPress and if it's a special constant\nThis way we cover your use cases and everyone gets those great settings by default\n. > But, correct me if I'm wrong, it seems that you're opposed to exposing the delay props to developers.\nI'm not.\nEvery new props we add, especially for core components such as Touchable*, we're going to have to support basically forever. So I want to make sure that they are good and we're not going to regret it in the future.\nI'm trying to see if the use case you are using those props for isn't more generally applicable to make the component better for everyone. We have a great opportunity to make good defaults that makes an app feel good with minimal intervention of the developer. I want to tease your brain to see if we can come up with something better than adding 4 obscure configurations.\nDo you know of an example on stock iOS apps or apps that are shipped on the app store where there is a different timer for touch down based on the size of the element?\n. And if we are adding those props, would be nice to have a comment for each one explaining common use cases when you would use them and common values they are being used with\n. I just re-read the entire discussion and I apologize, I felt way too negative. Here's some context:\nDuring the course of the project, we had to make a lot of API decisions like this one. But, even though we all have a lot of experience building UIs in the team, there are a lot of times when we have few to no context.\nIn those case, we deliberately took a conservative approach where we don't make any changes until we have several concrete use cases. We also look at all the different ways this has been achieved in all the UI frameworks that existed before React Native.\nBefore this pull request, I had no idea that configuring the timing was a thing that people wanted to do as I never saw any use case for it, hence why I pushed you to provide more context.\nGiven the many use cases that you provided, there are two things we need to do:\n1) Provide the ability to tweak the timers and document the various use cases as comments so that people know when to use them.\n2) Have better defaults for timers so that your learnings can be applied to every app written in react native without people even thinking about them.\nI hope that you don't feel put off by this pull request and that you can help us make react native better as you seem to deeply understand what makes an app feel good :)\n@sahrens: can you merge it in?\n. New issue would be great\n. Can you provide more context in how you experienced this error?\n. We have flaky tests, this pull request should break anything :(\n. .flowconfig:40 Wrong version of Flow. The config specifies version 0.10.0 but this is version 0.11.0\nThe reason is that we enforce version 0.10.0 but travis brew install the latest available version: 0.11.0. Will find a solution\n. cc @gabelevi \n. @facebook-github-bot import\n. @facebook-github-bot import\n. cc @nicklockwood @a2 does it look good to you?\n. cc @nicklockwood and @a2 \n. Yes, we have fallen behind. Unfortunately, bringing up the latest version breaks some of our products internally so I have to update them as well.\nAs for min/max height, unfortunately the current implementation in css-layout is NOT complete enough that it should be added to react native. There are many cases that it doesn't support correctly.\n. Can't you use numberOfLines attribute of the Text for this?\n. I'll wait for the tests to pass\n. Sometimes I love the web but sometimes... Seriously, the way letter-spacing is implemented in CSS makes absolutely no sense :(\nIn order to get what would be considered the sane behavior, we can use a negative margin trick:\nhtml\n<span style=\"background-color: red; letter-spacing: 10px; color: white;\">\n  Hello<span style=\"margin-left: -10px; width: 0;\"></span>\n</span>\n\nIf we implement letterSpacing CSS attribute, we should implement it with the same quirks as CSS otherwise it's going to be super confusing and lead to annoying to debug problems.\nHowever, I'm not opposed to not implementing letterSpacing but implementing the right behavior using a different name like letterKerning or something. And, when we do the web version, we can polyfill letterKerning with the negative margin trick.\n. @facebook-github-bot import\n. @facebook-github-bot import\n. This is a good workaround, we need to find an easy way to link those back and to mention in the docs that they are not being linked by default\n. This is a workaround until we have a good way to link it back :) Then, it's going to be the right thing to do :p\n. I like the naming from the spec:\n- onLoadStart\n- onLoadProgress\n- onLoadAbort\n- onLoadError\n- onLoaded\n\nThis would be super useful, especially if the loaded data got passed back on success in base64 encoded string or some workable format.\n\nNo. We never want to read image data in js. This means sending a huge chunk of memory (several megabytes) to js. There are some places where js is not a good language and doing image processing is one of them. You should be manipulating the image using C or the GPU. Not js with a base64 encoded file.\n. Maybe we could make scroll position a controlled value and do (sneak peak of the animation API i'm working on)\njavascript\ngetInitialState: function() {\n  return { scrollY: new Animated.Value(0) };\n}\nonWhatever: function() {\n  this.state.scrollY.animateTiming(150, {duration: 500, easing: Easing.quad});\n}\nrender() {\n  return <Animated.ScrollView scrollY={this.state.scrollY} />\n}\nBecause Animated.Value is opaque, we don't even need to make it truly controlled. We can just serialize the animation and send it to native when it happens.\n@ide what do you think? cc @sahrens \n. It would not stay pinned. But you are right this is super weird\nOne other thing we can do is\nscrollY(y, animation)\nWhere animation can be TimingAnimation, DecayAnimation, SpringAnimation (currently implemented but we can use any), pre-compute the key frames and send them to native to actually do the interpolation. Would that work?\nThis way, we don't have to implement yet another way to describe those easing functions\n. Not yet, i'm iterating on it inside of facebook codebase, don't want to trash people while working on the api\n. @ide your idea of semi-controlled components is fascinating! I have to sleep on it :) I'm sure @sahrens will enjoy it as well.\n@skevy How urgent is it for you? I plan to have my api open sourced in the next few weeks. I'd love to revisit this once it is in a more advanced state. Would you mind keeping a fork for a while until things has settled?\n. Okay, I'll close the pull request for now and will open it back when Animated is released. Thanks for bringing this up!\n. @facebook-github-bot import\n. // assetURI as provided e.g. by the CameraRoll API\nxhr.send(new NativeFile(assetURI));\nCan we make CameraRoll vend NativeFile objects instead? This seems like a sucky API to have to require the developer to wrap the assetURI in a NativeFile before sending it.\nAlso, we absolutely want to conserve as many metadata as possible from the files than just the URI. Maybe what you can do instead of having a NativeFile tag is to check if it's an object and has a uri attribute, then it's considered to be an image and you use RCTLoadImage instead of sending the object.\nI'm not a big fan of using instanceof to check if it's a good type, I much prefer duck typing, this way it can be serialized and unserialized.\n. Ok, so my proposal for you is:\n- You don't introduce NativeFile\n- In sendImpl, you special case typeof data === 'object' && data.uri and send the URI down\n- In the obj-c implementation, if there's an URI then you just feed it to RCTLoadImage without any prefix check\nIt should make the implementation simpler. Tell me what you think\n. > Like what? I can only think of the Content-Type, and the Blob/File API has provisions for that.\nWidth and height, aspect ratio, multiple versions of the same file @2x, @3x. Also, one thing that I really want to support is representing a slice of an image. {uri: 'image.jpg', crop_rect: [0, 0.5, 0, 0.5]}. This would be useful for image spriting.\n. Also, one thing that we could do is to make non-destructive transforms. {uri: 'baseImage', transforms: ['blur:20%', 'instagram-filter#5']} and don't save the temporary images. Same we could have resize, rotate...\nAnd, eventually when you actually want to upload it, you are doing all the processing and send it.\nI don't think that we want to dissociate sending images vs displaying images.\n. @facebook-github-bot import\n. @rt2zz I'm not sure why you don't think that xhr.send(data) is the right place. If you look at the API, the browser already overloaded .send to support sending many types of data: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\nThe interesting one is send(Blob) which is the way you send an actual file. Which is exactly what we are doing here.\n. I think that instead of hardcoding this specific situation, we should provide a way for the page inside of the webview to communicate with React Native.\nMaybe something like\n// React Native\n<WebView onMessage={function(message) { ... }} />\n// Inside of the webview\ntop.postMessage(document.body.clientWidth, document.body.clientHeight);\nThe reason why I'm reluctant to get this change in is that reading from document.body.clientWidth forces a reflow and may hurt the webview performance. And, the way it is setup right now, it is going to do it every time, regardless if you actually use those dimensions or not\n. Something along those lines would be great indeed. If you don't mind I'll close this pull request. would be nice if you could open an issue to create that API :) Thanks!\n. cc @ide \n. @mcz: hopefully a month from now\n. Thanks, now it's using @facebook-github-bot  instead of @reactjs-bot :)\n. @jsierles: yes, we need to upgrade css-layout but when we tried last time it broke our internal apps because we relied on inconsistencies with the css spec :(\nI don't have any date but it's certainly high on the list of things we need to do\n. Cannot find the variable ListView seems super explicit to me. This is the same exception you've got when you use a variable you don't have.\nMaybe I should update the message on Image and Text to be \"Can't find variable Text\" so that both look the same?\n. Hmm, Can't find variable X is the error message from JavaScriptCore. v8 has the wording: \"Uncaught ReferenceError: ListView is not defined\"\nI'd rather not mess up with those as they are from js itself and you're likely to see them all the time\n. @facebook-github-bot import\n. Nice, more warnings to prevent mistakes :)\n@ide: what would fix that is for the packager to yell at you if you have two modules with the same name. Right now, it just picks a random one. Internally we've got a lot of duplicates but hopefully we'll be able to remove them and start warning instead of this very bad behavior.\n. @jingc would probably have more context in how we currently deal with this. But as far as I know, we don't have a rock solid answer to this problem and it needs more thinking\n. Sounds good, react has the same https://github.com/facebook/react/blob/master/package.json#L13\n. @facebook-github-bot import\n. @amasad imported your code, should land today and be in the repo tomorrow\n. I'm sorry but i was in pto for the last week. @amasad, can you review this pull request? \n. all the environments that we run on are ES5 so you can actually use reserved words. I would keep it there since people may not know about it\n. @brentvatne: can you consolidate all those issues into one that's about implementing core components on web? Not going to happen anytime soon but should be tracked somewhere\n. Context: http://browniefed.com/blog/2015/05/30/create-a-map-with-react-art/\n. @facebook-github-bot import\n. @brentvatne: in order to get things to the rc, we have to go through fb internal cherry-pick process and i don't think this is worth it. The goal of the rc is to be as stable as possible and only cherry-pick bug fixes. Cherry-picking features like this makes it harder to figure out what is available in what version.\n2 weeks is short enough that we can wait for the next version to get those safely\n. Thanks for the repro case, I need to investigate what's going on.\n. @oveddan: would be awesome yeah!\n. Can you send a pull request to remove the line that adds it? It's in InitializeJavascript js file\n. You can do\nrender: function() {\n  return React.createElement(View, {style: {backgroundColor: 'red'}});\n}\nto use React Native without JSX\n. You could do at the top of the files,\n```\nc = React.createElement\n...\nrender: ->\n  c View,\n    style:\n      backgroundColor: 'red'\n```\nNot as pretty but still quite elegant\n. Looks like the only reason meteor relies on document is to figure out when the dom is loaded. In React Native there is no such concept, you can just start running your code right away.\nI don't think it's a good idea to add this in react native. I would much rather have meteor update their code and if they don't find addEventListener and readyState then just execute the code right away\n. This is an issue with uglify-js. Do you mind reporting it there? https://github.com/mishoo/UglifyJS2 Thanks!\n. Oh, actually nevermind I'm wrong. We made the switch to babel but we haven't enabled the for of transform yet. I just updated the es6 docs that were wrong, they indicated that we supported for of:\nhttp://facebook.github.io/react-native/docs/javascript-environment.html#javascript-syntax-transformers\nNow that we are on babel, we'll be able to let you configure which transforms you want to enable per project. This way you can enable more features depending on your risk tolerance to spec and implementation changes.\n. @nicklockwood: that sounds like a good trade-off to me. It's not the exact same behavior as web but that's more in line with what people expect tbh\n. @ide: we also had to revert the batching of setImmediate handler for the same reason :( It turns out that android tests failing were not stopping the land. We're fixing this so that we don't have to revert diffs in the future like this anymore. Sorry about that\n. @ide, i'm not at a computer, mind editing the changelog with this and react-native-mixin require (even though I thought that diff was reverted)\n. Have you tried paginate={true} on ScrollView, doesn't it solve your use case?\n. Sorry for the super long delay in my response.\nCan we polyfill this on web somehow? Two ways would be padding-bottom: (aspectRatio * 100)% or using  with a data uri that's a transparent image of the intrisic size.\nIf we can't then I'm going to push back on this. Otherwise this seems like a fine change. Very much opt-in.\nFor your measure question, this is indeed an issue, we probably need to change the caching logic to let a component defined function also tell if it should invalidate caching or not (based on intrisic width)\n. Btw image themselves may not be the only one that require an aspect ratio. If you want to do a responsive square grid, you need to maintain 1:1 aspect ratio on a View. Out of the scope of this pull request but would be nice to unify the concept of aspect ratio constraint\n. Hmmm, we made the explicit decision not to put TouchableBounce in the open source repo, must have slept back in by mistake.\nThe problem with this component is that it looks very good when you are prototyping so people tend to use it a lot. But it is a very cheap component when used all over your app.\nWould be nice to put it in an npm repo so that people can use it but not as part of the stdlib\n. Thanks!\n. @facebook-github-bot import\n. @facebook-github-bot import\n. Sounds good to me\n. @a2 this may be the problem you are seeing\n. @tadeuzagallo i'm pretty swamped right now, can you figure this out when you have time?\n. cc @sahrens \n. @brentvatne doesn't hurt while there's no other solution\n. Awesome :)\n. unused\n. Can you attach a screenshot of what the example looks like :)\n. Would be nice to have some documentation here, it'll be displayed on the website\n. yes, call it IOS please. We're going to have a different one for Android with other options\n. remove changes to this file :)\n. Perfect thanks!\nYou can npm install; npm start on the website/ folder to see it live btw :)\n. Add it in the react-native.js file that lists all the available APIS\n. correct\n. unused now?\n. unused now?\n. can you use Header, this way when you mouse hover it shows the little '#' sign to link\n. can you use Header, this way when you mouse hover it shows the little '#' sign to link\n. seems like a if() would be less code\njavascript\nif (docs.type === 'component' || docs.type === 'style') {\n  content = <ComponentDoc content={docs} />;\n} else {\n  content = <APIDoc content={docs} />;\n}\n. seems like a if() would be less code\njavascript\nif (docs.type === 'component' || docs.type === 'style') {\n  content = <ComponentDoc content={docs} />;\n} else {\n  content = <APIDoc content={docs} />;\n}\n. Your call :) If it's weird then don't do it\n. Your call :) If it's weird then don't do it\n. You're one commit behind fyi\n. You're one commit behind fyi\n. nit: JavaScript instead of JS\nsimulator instead of sim\n. nit: JavaScript instead of JS\nsimulator instead of sim\n. configuration* typo\n. configuration* typo\n. easy 3 times in this paragraph, may want to remove/find synonyms. \n. easy 3 times in this paragraph, may want to remove/find synonyms. \n. you mean extended? expend definition doesn't seem like what you want to say\n. you mean extended? expend definition doesn't seem like what you want to say\n. nit: put the { in the previous line :)\n``` javascript\nif (req.url === '/status') {\n} else {\n}\n```\n. nit: put the { in the previous line :)\n``` javascript\nif (req.url === '/status') {\n} else {\n}\n```\n. nit: triple =\n. nit: triple =\n. Can you add a comment saying that this is only for demo purpose and that it is rate limited. If you want to use it for a real app, you should create an account: http://developer.rottentomatoes.com/\n. remove all those blank lines?\n. Rotten\n. @hansonw can you review this part?\n. So, there are multiple things we want to support in the future.\nType:\n- Library that is just exposing js functions. We call it API in the docs but I want to find a better name\n- Components\nPlatform:\n- ios\n- android\nGiven those, what do you think the command api should look like?\nreact-native new-library api ios name\nreact-native new-library component android name\nreact-native new-library name --type library --platform ios\n?\n. So, there are multiple things we want to support in the future.\nType:\n- Library that is just exposing js functions. We call it API in the docs but I want to find a better name\n- Components\nPlatform:\n- ios\n- android\nGiven those, what do you think the command api should look like?\nreact-native new-library api ios name\nreact-native new-library component android name\nreact-native new-library name --type library --platform ios\n?\n. This probably shouldn't have the facebook license\n. This probably shouldn't have the facebook license\n. Can you give more specific steps to teach people how to link it to xcode\n. Can you give more specific steps to teach people how to link it to xcode\n. We want to get rid of ruby dependency, it was a mistake :p Would be nice to convert it in js while it's small and easy\n. We want to get rid of ruby dependency, it was a mistake :p Would be nice to convert it in js while it's small and easy\n. why private?\n. why private?\n. Maybe react-native new-plugin or new-extension\n. Maybe react-native new-plugin or new-extension\n. I like it, ship it\n. use `` instead of indentation to format code\n. Can you add this image in the repo (website/src/react-native/img) this way it won't 404 if this url goes down.\n. same here\n. nit: can you add a trailing comma\n. nit: can you removeonLoadingStart -` from the beginning. We're displaying it twice on the docs and I sent an internal diff to remove the other ones from this file\n. can you use the non standard \njavascript\nthis.props.onLoadingStart({...event.nativeEvent, target: this});\nwe use this instead of merge in fb codebase, it is much easier to write and read :)\n. nit: missing a trailing comma\n. I agree with @philikon, it would be nice to follow web naming convention here.\n- onLoadStart: http://www.w3schools.com/jsref/event_onloadstart.asp\n- onLoad: http://www.w3schools.com/jsref/event_onload.asp\n- onError: http://www.w3schools.com/jsref/event_onerror.asp\n. We've had on our todolist to draft a fb coding style guide for a while. Would be nice if you want to do it and follow what we do on react/react native codebase :)\n@sebmck we want to always have trailing comma everywhere\n. @amasad ?\n. can you make it ReactPropTypes.oneOf(['all', 'photos', 'videos']) instead of writing it in the comments. The comment can say that all is the default\n. can you use the same name as <ScrollView> component? I think it's just bounces and scrollEnabled\n. why do you need to do that?\n. We already have this in PushNotificationIOS. Are they doing the same thing or are they different?\n. You cannot use || here. Otherwise if opacity is set to 0, it's going to be 1. You need childStyle.opacity === undefined ? 1 : childStyle.opacity\n. You want to use flattenStyle here. The type of childStyle can be a number, or an object, or an array of number or objects or array... :)\n. can you put the || {} outside of the flattenStyle call? flattenStyle breaks early if it's undefined\n. remove\n. nit: can you sort requires alphabetically?\n. can you make sure source maps are still working. trigger a redbox someway and make sure the file displayed is correct\n. It bothers me that we use a real Promise here because it executes the calls in a setImmediate and therefore changes the ordering of the responses. Non promises will be executed first, then react batch processing, then finally the promises but outside of the batch.\nCan we instead vend a super dumb promise polyfill that executes callbacks right away?\n. I'll be so happy when we get rid of this crazy block of code\n. Question: do we get a good stack trace when creating the error here? Is there a better place to?\n. destructuring like this is so awesome, I love it <3\n. Sweet\n. wow, this is crazy dangerous :x \n. Your timeline is correct, and yes, it will not affect correctness but will affect performance and make debugging a tad harder as the queue won't be effectively executed in order.\nThe way batching works is that all the messages during a frame are sent via one call from obj-c to js. Before processing the first message, we start a flag saying that we are in batch mode, we process all the events and there's a lot of setState being fired, we call flush and React processes all the elements that have been dirtied.\nI'm not suggesting to replace Promise globally, but just here returning a dumb object with a then and a catch method that executes synchronously.\n. If you think this is not a good idea, then we can just use Promise\n. You don't want to change react-native-cli. This is installed via npm install -g and should never change. You want to update \nhttps://github.com/facebook/react-native/blob/master/cli.js\n. Actually, I think you just want to add flow-bin: 0.10.0 to package.json\n. can require('flow-bin') be coerced as a string that represents a filepath!?\n. Sweet :)\n. none of the replacements are regexes nor need to be applied multiple times, can you not use a regex for it?\n. nit: space after if. Also, can you put return; on its own line?\n. nit: put showHelp(); on the next line :)\n. nit: space after if and space after (\n. if we add more things in RCTImageLoader we'll have to add it here too which kind of sucks as they are going to diverge. Is there anyway we can avoid listing those here?\n. at least, RCTLogError it and don't execute the next two lines as they are going to crash the entire app?\n. Also what's going on with this?\n. Also what's going on with this?\n. Can you make sure it also works with our buck rules inside of fb\n. Can you make sure it also works with our buck rules inside of fb\n. canLoadURI works with me\n. canLoadURI works with me\n. Can you not update progress if there is no onProgress callback setup in js? This is wasteful to send events that are not going to be handled. (I'm not familiar with iOS so i'm not sure if you already do that, sorry if it's the case)\n. Can you not update progress if there is no onProgress callback setup in js? This is wasteful to send events that are not going to be handled. (I'm not familiar with iOS so i'm not sure if you already do that, sorry if it's the case)\n. navigator.language is undefined on react native, which makes this entire polyfill mostly useless.\n. navigator.language is undefined on react native, which makes this entire polyfill mostly useless.\n. nit: please put space after if and before {\nif (flags.root) {\n. nit: please put space after if and before {\nif (flags.root) {\n. same here\n. same here\n. yay trailing commas! :+1: \n. yay trailing commas! :+1: \n. you also need to add this to <Image>\n. nit: indent 2 spaces\n. nit: 2 spaces\n. nit: please always put braces and the statement on the next line\n. Please don't round here. We only want to round exactly once when we apply it to the view, otherwise we're losing precision all along the way.\nAnd, if we were to round here, we would need to ask many questions like\n- why ceil instead of floor or round?\n- the pixel density needs to be taken into account. 1 unit is equivalent to 2 physical pixels on iphone 5 for example. If you were to do this, you would lose half your precision\n. use 2 spaces for indentation please :)\n. use single quotes\n. use single quotes\n. nit: space after ,\n. nit: space after ,\n. nit: space after ul\n. nit: space after ul\n. use class\n. use class\n. Can you use React for this? It's super lame to go back to raw html mutations on the react native dev tools. It's also going to limit the number of people that want to contribute\n. Can you use React for this? It's super lame to go back to raw html mutations on the react native dev tools. It's also going to limit the number of people that want to contribute\n. Can you bring in Chart.min.js in the codebase, we want this to work offline as well and don't want it to die if next year the URL becomes invalid.\n. Can you bring in Chart.min.js in the codebase, we want this to work offline as well and don't want it to die if next year the URL becomes invalid.\n. add parenthesis, otherwise it's unclear how it's going to be parsed\n. add parenthesis, otherwise it's unclear how it's going to be parsed\n. Correct, forgot that < returns a bool and not -1 +1\n. Correct, forgot that < returns a bool and not -1 +1\n. you have one extra () around map\n. you have one extra () around map\n. you can do \njavascript\n{property.type &&\n  <span>...</span>\n}\n. you can do \njavascript\n{property.type &&\n  <span>...</span>\n}\n. I copied this entire file from SampleAppTest. cc @sahrens @frantic \n. making great use of testID :)\n. OS=8.3 didn't work on my machine. Let's try to remove it and see what travis says ...\n. Hmm actually this is not safe. It will also round the alpha value, so that 0.5 will be rounded to 1 :(\n. nit: indent\n. nit: indent\n. 2 spaces please :)\n. 2 spaces please :)\n. This file is not synced internally. Can you submit a different pull request for this one?\n. nit: can you indent only 2 spaces\n. please use var and have one var for each line:\njavascript\nvar statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\nvar closeReason = typeof reason === 'string' ? reason : '';\n. So good!\n. Calling toRBG() on an invalid color is not safe in the sense that you're going to get an unexpected result. Either a crash or some arbitrary value.\nIn this case you know what it does because you dug in tinycolor implementation to figure it out. But the next person that's going to modify this function will see that r, g and b are defined and will use them even though it will not make sense.\nIn isolation this isn't dramatic, but as your codebase grows and there are unsafe accesses like this all over this is going to cause real bugs and worse, people are going to do crazy hacks to work around that.\nA not too far fetched example would be that you somehow return rbg without the isvalid information in a function that's widely used. I can bet money that there will be some code that checks if rgb is black and then find the original string and do === 'black' to make sure the user really put black and not some random variable.\n. The goal of this file is to be dead simple and just forward everything to the local cli. The only thing it handles is init which bootstraps the project.\nI don't think that we want to use an option parser here\n. (y)\n. can you write GLOBAL[name] !== undefined or typeof name !== 'undefined' but doing typeof + GLOBAL[] is not useful\n. Can you add a docblock saying what this actually does. This is not clear from just reading the code\n. Can you look at all the other ones in this file and see if it makes sense to provide the global version? WebSocket and geolocation seem like good candidates\n. so good to be able to use es6 inside of the polyfill function :P\n. ok, sorry for the change but can you add an example of why we are doing that. Telling people to do in their app if they want to use the default XHR to get Chrome/Safari/Firefox in devtools if they can manage CORS themselves would be great.\nGLOBAL.XMLHTTPRequest = GLOBAL.originalXMLHTTPRequest;\nOtherwise this is likely going to be either removed or stay there forever and people are going to be afraid of touching it because it's doing some black magic\n. remove empty line\n. remove empty line\n. remove?\n. this is fine. Please don't import a giant library just for splitting a string\n. should be typeof document === 'undefined'\n. ?\n. sweet\n. why do you indent this?\n. target=\"_blank\"\n. Mind adding the Facebook license header block here? cc @dsibiski \n. We're talking about it in https://discord.gg/0ZcbPKXt5bXHbZzz\n. pretty cool indeed!\n. too bad they didn't chose the { ...AnimationConfig, toValue: etc } syntax :(\n. nit: 80 columns.\njavascript\nif (!this._helpers.isNodeModulesDir(this.path) &&\n    (moduleDocBlock.providesModule || moduleDocBlock.provides)) {\n. nit: 80 columns\njavascript\nvar module = new Module(\n  '/root/index.js',\n  fastfs,\n  new ModuleCache(fastfs),\n  null, // whatever-the-name-of-the-arg-is\n  new Helpers()\n);\n. add an inline comment for the null argument\n. I'm sorry but this won't work. We're trying very hard to make the size of the js file we load smaller as it has a direct impact on the time it takes to start up. Loading the entire package.json in memory just to get the version number is really bad :(\nCould we punt on the version number for now and just get product there for now.\nI also think that using the react-native field of package.json is going to be a more robust way to deal with detection rather than reading this global variable.\n. Unfortunately, there's no way to have a private token on an untrusted pull request. Just put broke it into two parts so that it makes mass collection harder I guess.\n. wow, I didn't see this one :) Thanks bot!\n. nit: space after .\n. nit: space after .\n. nit: space after .\n. nit: space after .\n. nit: no space before (\n. nit: no space before (\n. Can you check typeof selectedColor === 'string' which will remove the need for the first two conditions.\nAlso, can you do the trim() only once and store it in a variable. This is a pretty hot path so we want to have as few overhead as possible.\n. Can you check typeof selectedColor === 'string' which will remove the need for the first two conditions.\nAlso, can you do the trim() only once and store it in a variable. This is a pretty hot path so we want to have as few overhead as possible.\n. why do you do .toString() here? We should only accept strings, not objects that pretend to be strings\n. why do you do .toString() here? We should only accept strings, not objects that pretend to be strings\n. We also support arrays apparently: https://github.com/facebook/react-native/blob/0e8b207cc34f230eb2cced3981734b522b601817/Libraries/StyleSheet/processColor.js#L20-L21\n. We also support arrays apparently: https://github.com/facebook/react-native/blob/0e8b207cc34f230eb2cced3981734b522b601817/Libraries/StyleSheet/processColor.js#L20-L21\n. It seems like you are duplicating a lot of the same logic as in processColor ( https://github.com/facebook/react-native/blob/0e8b207cc34f230eb2cced3981734b522b601817/Libraries/StyleSheet/processColor.js#L17 ). Could you instead make processColor return either the correct color or null. Then here you would just check if it's not null.\nThis way they always stay in sync.\n. It seems like you are duplicating a lot of the same logic as in processColor ( https://github.com/facebook/react-native/blob/0e8b207cc34f230eb2cced3981734b522b601817/Libraries/StyleSheet/processColor.js#L17 ). Could you instead make processColor return either the correct color or null. Then here you would just check if it's not null.\nThis way they always stay in sync.\n. you probably want to invert the condition here and return null. This way you don't have to write the error message twice :)\n. you probably want to invert the condition here and return null. This way you don't have to write the error message twice :)\n. I'm curious, have you tried\njavascript\nfor (var i = 0; i < files.length; ++i) {\n  result.push(files[i]);\n}\n. Please use PixelRatio.get() here. This way the following still works:\nvar pixel = PixelRatio.pixel;\npixel()\n. It's sad that we include a module named CSSCore in rn :(\n. It's sad that we include a module named CSSCore in rn :(\n. The convention is to have a block with all the letters that start with a capital and sorted a-z, an empty line and then all the lowercase.\n``` javascript\nvar PixelRatio = require('PixelRatio');\nvar StyleSheetRegistry = require('StyleSheetRegistry');\nvar StyleSheetRegistry = require('StyleSheetRegistry');\nvar flatten = require('flattenStyle');\n```\n. cc @sebmarkbage this is going to break you\n. Can you avoid adding comments like this inside the code. If those will be documented, they will be inside of those functions and this comment will unlikely be removed and be misleading.\n. Can you remove this extra level of indirection. We try to avoid unnecessary nesting as much as possible.\nStyleSheet.hairlineWidth\n. For constants, we use camelCase:\nImage.resizeMode.contain\n. Me gusta, this can also be useful for figuring out image sizes.\n. Yeah i'm not really sure what's going on here\n. Oh yeah, it's github being annoying by still showing outdated comments. I was thinking of deleting all the previous comments when receiving a new update to improve the situation\n. Correct, all those shouldn't be needed anymore now that we are in a web worker\n. @ide means www for \"internal package manager\". This is where @polyfill is being read. I'd love to avoid to fork them qs much as possible\n. Maybe jest needs it?\n. Not sure either :P I'm going to leave it as it was but if we have a convention at fb, happy to follow it\n. you need to unset it if decelerationNormalEnabled is false. The code as is will never remove it once it's set\n. Can you try to find a better name for this. It doesn't read as English to me nor does it really convey what it is doing.\n. Needed to change those as we are now only having 8 bits of precision. 0.75 * 255 = 191.25 is not a round number. It doesn't really change anything, the platform unlikely supports more than 8 bits of precision for the alpha channel.\n. omg, we shouldn't encourage people to write this...\n. all of those are crazy!\n. This file is now the reference on what we support for colors.\n. now takes a string or number and returns a number if parsed or null. <3 flow\n. Previously there was no check to make sure that the number wasn't outside of the acceptable range and not a floating point\n. Notice parse360, parsePercentage, parse1 and parse255. We don't try to \"normalize\" units to a 0-1 range as before.\n. so ...\n. ... many ...\n. ... copies\n. ... many ...\n. mutation <3\n. @mjackson ;)\n. This is an optimization gone wrong.\n. the web doesn't support hsv and I've never seen anyone use it. Let's just kill it and pretend it never existed\n. so, we are parsing this on every use :(\n. what the fucking fuck :p\n. so, we parsed a string as a number, and now back to convert it as a string ... again\n. This file was still full of es5 when I started converting it, i'll update to es6 thanks for the reminder :)\n. Got it, i'll add a comment on the list of names adding this as context.\n. The user facing int32 will be tricky to swap. Do you know why do we even expose it? Are there a lot of use cases for it? I have no idea how to grep the codebase for it.\nOne potential way forward would be to just stop supporting it. It doesn't work on the web and hasn't been very well documented anyway, I don't expect that many call sites to break.\n. Agreed, if the int is just supported for the prop type, I can just not warn if you pass in a number and don't handle this case :)\n. I renamed it to normalizeColor\n. I added\n/* eslint no-bitwise: 0 */\nbut github is stupid and doesn't hide comments from older revisions if you didn't change the specific line\n. FYI, you can do\n/* eslint no-alert: 0 */\nat the top of the file in order to disable it for a specific file\n. Makes sense\n. This is a bit annoying to have to modify Marked.js to add it but it wasn't easy to support custom html tags. Marked outputs '' and '' as different tokens, and not one \"ast-node\" that we can just convert to React.DOM like the other things here\n. Add it to eslint global\n. So good\n. Was the image already there? I don't see it in your commit\n. I assume that this function is only going go be called when dev, but could you double check\n. What I thought but wanted to double check :)\n. Sorry for the trash in the diff, I moved those two classes above. It's annoying to have the main component not be the last.\n. I removed this block\n. Nothing changed here, just moved code around\n. Transforming the title page into a HeaderWithGithub link :)\n. then do it? you can use process.env.TRAVIS_BRANCH to get it\n. this is getting really bad to do it in a travis.yml file, I'd love if you just ported it to js :)\n. this is now copy and pasted 2 times\n. We need to figure out a way for existing docs pages to still work. Maybe have them redirect in js to the specific version number?\nhttp://facebook.github.io/react-native/docs/animations.html#content\n. Is the website even working with this? I'm pretty sure we use absolute paths in a lot of places.\nThe <base> element may be handy: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base \n. One other thing that sucks about having a next is that all the typo / improvement pull requests are only going to show up in ~2-4 weeks to the main website. But I guess it's the cost of doing things :p\n. Nit you don't need the else since you have an early return above\n. Wow didn't know which was a global in node\n. Ohhh this is shelljs\n. Nit: remove all the empty lines\n. This is so cool\n. Why do you sometimes use backtick and sometimes use normal strings?\n. Not sure if we node supports it yet but I really like\nconsole.log({ isPullRequest, isTravis, version })\nFor quick logging\n. typo ght\n. No good reason, let me do that\n. now is a good time :)\n. you missed the first link\n. nit: missing space after +\n. Since you have '/react-native/' in both, I would write it\n'/react-native/' + path ? path + '/' : ''\n. would be great to send a follow up to use correct versions instead of \"latest\". Otherwise it's going to break in the future and going to be a pain to figure out why\n. shelljs is so awesome :p\n. :+1: \n. Why is github saying that this file changed?\n. You don't need to call resolveAssetSource, this is just wasteful :) You can just check if (this.props.src)\n. <Image>\n. no need to assign it to a local variable as you are using it only once\n. remove the comment, it doesn't provide any information that's not obvious from reading the line :)\n. Can you remove it altogether?\n. I moved it since we need it to be different based on a global\n. This is a temporary fix until they fix the bug on their end\n. This wasn't useful\n. I removed all the size specific versions, not very useful\n. Just a v1 of the text, I'd like to ship it as is and then people can submit more pull requests to make it good.\n. missing *\n. missing space after :, also please remove quotes around keys\n. in js, we mostly use shoeSize capitalizaiton\n. use single quote (+ the same comments as the other block\n. nit: ); on the next line\n. nit: ); on the next line\n. I have no idea what's going on here, sorry for the spam :(\n. I have no idea what's going on here, sorry for the spam :(\n. We should probably not include rebound but instead just inline the spring implementation like I did: https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L302-L514\nRebound comes with a bunch of utilities and classes that we don't need for Animated. The core \"physics\" is actually just a loop with only a dozen of lines of code.\n. We should probably not include rebound but instead just inline the spring implementation like I did: https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L302-L514\nRebound comes with a bunch of utilities and classes that we don't need for Animated. The core \"physics\" is actually just a loop with only a dozen of lines of code.\n. Instead of doing that, could you change the implementation of __getValue() in the case of natively implemented values to return only the static ones? I'm afraid that if it's handled out of band like this, it can introduce race conditions where the props gets updated but the node is not connected again and it gets out of sync.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L1175\n. Instead of doing that, could you change the implementation of __getValue() in the case of natively implemented values to return only the static ones? I'm afraid that if it's handled out of band like this, it can introduce race conditions where the props gets updated but the node is not connected again and it gets out of sync.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L1175\n. I've done many different implementations of this traversal and the best one I found was the following:\n- We update all the root nodes (Animated.Value) that are currently animated to their new values. eg: 0.2 -> 0.4.\n- We traverse all the children that depends on those values recursively and mark all the leaf nodes (AnimatedProps) as needed to be updated.\n- When we collected all the leaf nodes, we call update() on them. It asks their parent(s) what their current value are and compute their new value.\n- Except for the root nodes (Animated.Value), none of the nodes are stateful. All the values are re-computed recursively from the root on every frame.\nSee this comment for a hopefully good explanation of the process and the code supporting it:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L101-L135\n. I've done many different implementations of this traversal and the best one I found was the following:\n- We update all the root nodes (Animated.Value) that are currently animated to their new values. eg: 0.2 -> 0.4.\n- We traverse all the children that depends on those values recursively and mark all the leaf nodes (AnimatedProps) as needed to be updated.\n- When we collected all the leaf nodes, we call update() on them. It asks their parent(s) what their current value are and compute their new value.\n- Except for the root nodes (Animated.Value), none of the nodes are stateful. All the values are re-computed recursively from the root on every frame.\nSee this comment for a hopefully good explanation of the process and the code supporting it:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L101-L135\n. The main reason doing a naive top down implementation doesn't work is that you can have values that depend on multiple parents. For example transform: [{translateX: x}, {translateY: y}]. In order to compute the AnimatedTransform value, you need to know x and y. But x and y may both be updated during a single frame. So you can run into issues where you update order is [x, transform (called recursively when updating x), y] and transform has a wrong value because y has not been updated yet.\nThe code here solves this by using a topological sort in order to avoid having this ordering issue. I think that it should be safe as well.\n. The main reason doing a naive top down implementation doesn't work is that you can have values that depend on multiple parents. For example transform: [{translateX: x}, {translateY: y}]. In order to compute the AnimatedTransform value, you need to know x and y. But x and y may both be updated during a single frame. So you can run into issues where you update order is [x, transform (called recursively when updating x), y] and transform has a wrong value because y has not been updated yet.\nThe code here solves this by using a topological sort in order to avoid having this ordering issue. I think that it should be safe as well.\n. if you call it frames, could you also call the variable frames?\n. if you call it frames, could you also call the variable frames?\n. I don't see you handling the following case:\n```\nvar a1 = Animated.Value(0);\nvar a2 = Animated.Value(1);\nstyle={{transform: [{translateX: a1}, {translateY: a2}]}}\nAnimated.timing(a1, {useNativeDriver: true}).start();\nAnimated.timing(a2, {useNativeDriver: false}).start();\n```\nA value shouldn't be able to depend on both a native and non native animation. They would otherwise be updated by both native and js, race to update and use half an incomplete value.\nWhat we should ensure is that the entire acyclic graph is either all native or all non-native, but not a mix of both.\n. I don't see you handling the following case:\n```\nvar a1 = Animated.Value(0);\nvar a2 = Animated.Value(1);\nstyle={{transform: [{translateX: a1}, {translateY: a2}]}}\nAnimated.timing(a1, {useNativeDriver: true}).start();\nAnimated.timing(a2, {useNativeDriver: false}).start();\n```\nA value shouldn't be able to depend on both a native and non native animation. They would otherwise be updated by both native and js, race to update and use half an incomplete value.\nWhat we should ensure is that the entire acyclic graph is either all native or all non-native, but not a mix of both.\n. At this point, we probably want to remove that since we have so much implementation in it :p\n. At this point, we probably want to remove that since we have so much implementation in it :p\n. Why do you have this variable? You always set toValue and toValue is required.\nOne suggestion: it would greatly simplify the implementation if you always added the toValue as last element of the array. This an easy way to solve the problem of the last element not ending at the exact end value.\n. Why do you have this variable? You always set toValue and toValue is required.\nOne suggestion: it would greatly simplify the implementation if you always added the toValue as last element of the array. This an easy way to solve the problem of the last element not ending at the exact end value.\n. In the JS version I'm using attach/detach naming convention. Is there a reason why you use a different one here?\n. In the JS version I'm using attach/detach naming convention. Is there a reason why you use a different one here?\n. Indeed!\n. Indeed!\n. crap, didn't push the update\n. crap, didn't push the update\n. How big is this library?\n. Nevermind -_- you implemented it below.\n. I think you should be able to do\nconst val = +interpolations...\n. Fortunately, this works! I was worried about it as well\n. Fortunately, this works! I was worried about it as well\n. Agreed with @ide, I would remove that invariant. Not specifying an android block if you are on ios is okay.\n. Agreed with @ide, I would remove that invariant. Not specifying an android block if you are on ios is okay.\n. Remove this one as well. This is going to be a hot path and the error isn't very useful.\n. Remove this one as well. This is going to be a hot path and the error isn't very useful.\n. This is probably not going to work as you would expect. You're going to require the Android component on iOS and it may very well throw in this environment.\nYou'll likely want to write this as\njs\nvar Component = Platform.select({\n  ios: () => require('ComponentIOS'),\n  android: () => require('ComponentAndroid'),\n})();\nreturn <Component />;\n. This is probably not going to work as you would expect. You're going to require the Android component on iOS and it may very well throw in this environment.\nYou'll likely want to write this as\njs\nvar Component = Platform.select({\n  ios: () => require('ComponentIOS'),\n  android: () => require('ComponentAndroid'),\n})();\nreturn <Component />;\n. actually, remove this, you're not doing the same for StyleSheet\n. actually, remove this, you're not doing the same for StyleSheet\n. Need to make sure that ios is optional. then I have no idea how T would look like in the result value.\n. Need to make sure that ios is optional. then I have no idea how T would look like in the result value.\n. Just remove this line, we would assume that people know how to require Platform.\nFor a shipping in progress, it'll only be picked up if I re-shipit.\nWe can just leave it for now, or kill it in another commit once it lands\n. Just remove this line, we would assume that people know how to require Platform.\nFor a shipping in progress, it'll only be picked up if I re-shipit.\nWe can just leave it for now, or kill it in another commit once it lands\n. I'm not sure what's going on here, need to investigate\n. I'm not sure what's going on here, need to investigate\n. you are missing the <center> and width\n<center><img src=\"img/react-native-sorry-not-supported.png\" width=\"150\"></img></center>\n. intact (one word)\n. I haven't followed the mjs spec closely but I assume that we are going to implement whatever resolution is done between .js and .mjs (if it's not already working today)\n. Thanks! There's so much drama around this subject that we're probably going to wait until it settles and gets shipped in node before taking any action on react native\n. remove U?\n. nit: put it on the last attribute line\n. same\n. please use 2 spaces\n. I think something went wrong with your rebase. ",
    "sophiebits": "Thanks @jlongster. I just fixed this internally \u2013 will update this repo soon.\n. Yes, we're not looking to download code over the internet for exactly the reason you mention. The Facebook Groups app in the store bundles all of the JS locally.\n. A project's .gitignore is for project-specific ignores \u2013 .DS_Store is specific to an OS and has nothing to do particularly with react-native, so it belongs in a global gitignore file that you can set up on your computer:\nhttps://help.github.com/articles/ignoring-files/#create-a-global-gitignore\n. It's implemented here as a category on UIView:\nhttps://github.com/facebook/react-native/blob/0512e23ba9984b8f19d9d3932548d64311d30e39/ReactKit/Views/UIView%2BReactKit.m#L16\nPerhaps you missed that one when adding files to your project?\n. Yup, it should.\n. I don't think we can install watchman automatically via npm.\n. > I don't know Obj-C too well, but does it not crash when sending messages to a null pointer?\nNo, it doesn't crash; it returns nil. \n. Maybe with subclassing, you can make a disableOffsetUpdates like in the gist linked here:\nhttps://twitter.com/andy_matuschak/status/559796157241507841\nNot sure if that introduces significant lag.\n. I think @nicklockwood and @a2 are planning to get this in tomorrow actually.\n. I think @nicklockwood and @a2 are planning to get this in tomorrow actually.\n. Or at least, some version of it that removes the class-crawling.\n. Or at least, some version of it that removes the class-crawling.\n. The \"keep a\" experience is probably better at an infrastructural level because you can always get the \"blank\" way by adding a key to the Image equal to the src.\n. Probably an Image issue; I can't imagine it being specific to ListView.\n. Looks good, thanks.\n. Landed internally.\n. We actually don't use or support string-typed components in React native at all. Would be nice to add a warning for non-lowercase components in React core though.\n. In neither case do uppercase tag names make sense, so we can add a warning in React core. We might also want to add some sort of warning for using any string type in React Native.\n. react-native doesn't do anything with nginx \u2013 perhaps you have something else running on that port? Not sure why that wouldn't give an error earlier though\u2026\n. @ide Yeah, hhvm uses Phabricator (reviews.facebook.net) now and it's something we could look at doing here and on React too.\n. Merged internally, will be synced out soon.\n. Closing for #292.\n. Why do we need both?\n. I agree in principle but my understanding is that UIWebView is preferable only if you need a synchronous API (or need to do low-level configuration), neither of which are super compelling reasons from the JS side. I'm okay either way I guess but the UIWebView/WKWebView vs WebViewIOS/WKWebViewIOS suggested naming is odd to me.\n. I'm not a lawyer but my understanding is that this is the only license we felt comfortable releasing the examples under. Sorry I can't be more help.\n. Just for react-tools, as far as I know. We're trying to do work to get away from @providesModule for that too.\n. Really? http://blog.nodejs.org/2014/12/17/node-v0-10-34-stable/ mentions it.\n. Actually going to pull in #292 instead.\n. Looks like we don't transform the constructor correctly if it's quoted. If you just write constructor(props) { perhaps it works? (Is there a reason you're quoting everything?)\nCan you file an issue at https://github.com/facebook/jstransform for the transform problem?\n. What's the advantage of making it a function here? I'd default to making it a normal element-typed prop.\n. Right, that makes sense. Having title as a property of the route or similar seems to make the most sense though, akin to UINavigationItem on iOS? I'm not familiar with the Navigator API, so I'll let you figure it out. :)\n. This actually ended up getting fixed internally in 18cb5d0711d585bf703ab2606839f122ca2a1154 \u2013 thanks for sending this in though!\n. Thanks!\n. @sahrens Even if we do that, I'm not sure if we'd want to allow access to all DOM APIs?\nI'm don't think that running incompatible libraries in a headless web view is likely the right solution, but there certainly are cases where you'd want to have something in a web view and pass messages to it, so maybe we could add something here.\n. @rickeybobby At https://github.com/watching you can unsubscribe from notifications for this repo.\n. Your component name needs to start with a capital letter. I should improve the warning for this.\n. Can you reproduce the same problem in JS? I don't know scala-js, nor do we support it but if you show me the problem in JS I can take a look.\n. If you can't reproduce in plain JS, this isn't a react-native issue. Perhaps a scala-js list would be a better forum for this question.\n. @vjeux Thanks \u2013 filed https://github.com/facebook/react/issues/3565 to track.\n. cc @jamesgpearce \n. Ooh, good point.\n(This is trying to prevent http://facebook.github.io/react-native/docs/pushnotificationios.html#content which currently shows an error.)\n. This happened, I think.\n. Tricky. This way works on the website (probably), but not when viewing on GitHub\u2026\n. Tricky. This way works on the website (probably), but not when viewing on GitHub\u2026\n. Sure, okay. Maybe we can find something that works on both later.\n. I'll add npm caching, at least.\n. This file is a checkin of Layout.h from css-layout which was released in 2014. This change isn't useful.\n. Like #662, this change is not actually useful.\n. Like #662, this change is not actually useful.\n. Agree \u2013 this is pretty standard:\n\n. The Ads Manager app isn't open source.\n. Thanks!\n. If you require('react-native') before requiring lodash, does it work? Guessing this is an initialization order problem because we're not really treating setTimeout and friends as polyfill modules but we probably should be.\n. Thanks!\n. Thanks!\n. This is expected behavior. In ES7 you'll likely be able to use a property initializer to write\nonPress = () => {\n  // ...\n}\nwhich will autobind. This syntax is supported by Babel already in an experimental transform and hopefully will be supported in react-native sometime. You can continue to use React.createClass if you prefer its semantics.\n. I see, it's in vendor/react_contrib/interactions. That's not actually part of the React repo though and I'm pretty sure the source of truth for that file is here.\n. No worries.\n. Thanks!\n. Sorry, the link goes to an FB-internal page:\n\nYou can pass this as a second argument to forEach or use an arrow function to preserve the context.\n. Still an issue unfortunately. Should be fixed with the next sync though.\n. Fixed in ab1efbd4c12a5792f55a1021903688d5aa864b15.\n. Thanks!\n. (y)\n. You should be able to put a function ref in renderRow:\njs\nrender: function() {\n  return (\n    <ListView\n      dataSource={this.state.dataSource}\n      renderRow={(rowData) =>\n        <Text ref={(row, sec, i) => this.rows[sec][i] = row}>{rowData}</Text>\n      }\n    />\n  );\n},\nor similar.\n. It's being tracked in #868.\n. I think this is working as intended. The events come in the same no matter where the listener is, so there's no way this could give the location relative to your container. You probably want to measure the container's position and then subtract that from pageX and pageY.\n. lgtm\n. I don't know that it's true that React Native will never have a UITableView wrapper. I think it's certainly possible to build one but it's nontrivial due to the reasons listed. \n. Thanks!\n. cc @amasad -- we've hit this internally a few times as well and maybe we could have a way to pull in InitializeJavaScriptAppEngine at the top with the polyfills.\n. @oveddan document.createElement is not supported within React Native. The bug here was that we were trying to use it at all; we shouldn't attempt to.\n. Yes, unfortunately you can't use jQuery out of the box on React Native. Maybe you can use it in conjunction with jsdom, but I don't know anyone who has tried.\n. cc @ericvicenti \n. It should. Please post more info about the behavior you're seeing and a repro case.\n. In general, please post as much detail as you can to help us understand what your problem is. No need to tag specific people in the post unless you know that your issue is related to them. (In this case, it is probably not.) Whoever's monitoring the issues will get to your issue and reply when they have a chance.\n. I'd be surprised if that would be a significant cost but I am also not a security or performance expert and you shouldn't listen to anything I say.\n. Maybe worth mirroring WKWebView's already-async API here:\nhttps://developer.apple.com/library/ios/documentation/WebKit/Reference/WKWebView_Ref/#//apple_ref/occ/instm/WKWebView/evaluateJavaScript:completionHandler:\n. Wasn't suggesting any signature in particular, but it would be nice to pick a signature that is flexible and easy to replicate with a WKWebView backend if we ever wanted to switch to that (or make it configurable).\n. Sorry for the delay here.\nWith the WKWebView API, you can return any (serializable) JS object, not just a string. Can we change this to JSONify the result so that you can return numbers, arrays, and simple objects transparently from a callback?\n. If I call .evaluateJavaScript(\"foo()\", cb) then I should get whatever foo returned back, whether it's a string, a number, a string with numbers in it, or a simple object.\nAlso, separately: just realized this should probably return a promise.\n. Saw this same stack on a friend's app. Repros very intermittently; no idea what the cause is.\n. This gist, which renders 100 <Text> nodes every frame, very reliably crashes for me (reload a few times if it doesn't crash immediately):\nhttps://gist.github.com/spicyj/22bdcb6b229cd9dcbd6c\nNot exactly the same stack, but it may be the same root cause. Looks like a threading issue with the shared TextKit objects across threads \u2013 in every crash I've seen with this sample app, the main thread and shadow queue are both processing text views. AsyncDisplayKit puts a lock around all TextKit operations which might be appropriate here too. Although I'm not sure if adding a lock is all that's needed \u2013 it seems a little fishy that these objects are even shared between RCTShadowText and RCTText because it seems like one thread could get ahead of the other and we could be trying to process shadow text with a new string before the last string has been rendered on the main thread. I don't have a complete grasp of the concurrency involved here though so I could be off base.\n. Thanks, I meant to do this and forgot.\n. @facebook-github-bot import\n. > Totally expected, but it does make it painful to debug scenarios that might only occur when you load from the bundle.\nIf it's the dev vs. prod difference, you can change it to use the same http URL with ?dev=false.\n. It is unintuitive to me that setImmediate calls would get batched together into the same React reconciliation. I'll have to think about it some more.\n. I think this is all right.\n. @facebook-github-bot import\nplz\n. This got reverted internally. Will try to re-land.\n. Have you tried a number between 0 and 1?\n. Not sure if this is the cause, but we should have people start names with an uppercase letter.\n. displayName || name is the right way to do it.\n. You can do most of these things with JSC already, but we chose the existing JSON bridge for simplicity and to allow Chrome debugging easily. The remote debugger support sounds interesting though.\ncc @jordwalke \n. The extra UIView instances are temporary and are an artifact of the current view manager implementation. We'd like to remove this restriction in the future.\n. I expect that navigator.platform is already something reasonable on device; I don't think we set it. Setting navigator.product sounds somewhat reasonable though\u2026\n. Nice.\n. No one's working on it right now as far as I know. I'd be happy to look at a pull request if you're interested in adding support.\n. This is also not a regression (AFAIK) so that's another reason it can wait.\n. (We'll probably want to set it to undefined.)\n. We really don't want a document though for React Native. Annoying that it's non-writable, non-configurable.\n. We don't intend to support this in the JSX transformer, sorry. We require that you have React in scope.\n. Instead of rendering <Monkey ref=\"monkey\" color={this.state.color} /> and accessing this.refs.monkey._currentElement.props.color, just access this.state.color (for example). We don't have an API for getting the element because it's already exactly what you returned from render. If you really need a copy of the element itself, you can even store it on your instance (this.foo = <Foo />; return foo;). We also don't have an API for this because in a future React, stateless components could potentially exist without a public component instance and your ref would just evaluate to null.\n._currentElement and ._renderedChildren are both implementation details and their use is not supported. So as filed, your bug report would be a wontfix. That said, it is possible to make the mistake of accessing this.refs.monkey.props without understanding that .props on a component instance (that you didn't implement) is not public API, which works in dev but not prod. We ran into this once at FB. Since we don't currently have a good way to indicate that that isn't supported (e.g., by letting composites expose a separate \"public instance\" with only the properties they want to expose and keeping .setState, etc on the internal instance only) we should still fix this bug. I don't know what the overhead of doing the wrapper is. Maybe we can drop it. Maybe we need to be more clever about doing the propTypes check.\n. Those are also not public, but I understand that they could seem that way.\nNo, there isn't. You should refactor your code to not need to inspect the rendered tree. Without a more specific problem statement, I can't really suggest how.\n. I don't actually know anything about this stuff\u2026 maybe @vjeux does.\n. I think this is just a confusing font. location below too is also cased correctly.\n. I think this can be\nchild_process.execFile(path.join(__dirname, script), [debuggerURL], function...\nwhich avoids the need to quote and is safer.\n. Do we actually want to do this? I bet Apple complains at app review time if you have the key but don't make use of it.\n. For example:\nhttp://stackoverflow.com/questions/29406588/apple-binary-rejected-2-16\nJust from what I've read.\n. Maybe * instead of 3.1?\n. This should use RCTLogError (which causes a redbox) like the other methods in this file.\n. Mightn't plugin[0] already be the plugin object at this point?\n. Each entry in the plugins array can be a plugin or a [plugin, options] pair. In either case, the plugin can be the name of a plugin or the plugin itself.\n. If start === end already and sweep is 0, is this correct?\n. I'd like to keep componentWillReceiveProps pure (with the exception of setting state) whenever possible. Can we instead do:\ncomponentDidUpdate() {\n  if (this.props.refreshing !== nextProps.refreshing) {\n    // refreshing was updated via the normal rerender\n    this._lastNativeRefreshing = this.props.refreshing;\n  } else if (this.props.refreshing !== this._lastNativeRefreshing) {\n    // setNativeProps\n  }\n}\nthough personally I find it easier to reason about to cache and always pass the same value to refreshing in the render function (as I did in PickerAndroid) so that you know exactly when the native refreshing value gets updated.\n. I'd like to keep componentWillReceiveProps pure (with the exception of setting state) whenever possible. Can we instead do:\ncomponentDidUpdate() {\n  if (this.props.refreshing !== nextProps.refreshing) {\n    // refreshing was updated via the normal rerender\n    this._lastNativeRefreshing = this.props.refreshing;\n  } else if (this.props.refreshing !== this._lastNativeRefreshing) {\n    // setNativeProps\n  }\n}\nthough personally I find it easier to reason about to cache and always pass the same value to refreshing in the render function (as I did in PickerAndroid) so that you know exactly when the native refreshing value gets updated.\n. If you keep this approach, don't you also want\nthis._lastNativeRefreshing = this.props.refreshing;\nhere?\n. js\nvar escaped = JSON.stringify(script).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\nvar wrapped = 'JSON.stringify(eval(' + escaped + '))';\n. Maybe this would be better as mStartFrameTimeNanos = -1;.. Maybe this would be better as mStartFrameTimeNanos = -1;.. The proper way is to call .focus() or .blur() on the ref. How would you even get a node handle for it? I'd rather not add this back.. We have Keyboard.dismiss (or dismissKeyboard) for blurring the focused field.\nIf you will take care of deprecating it then removing it in the next release, we can add it back.. ",
    "chantastic": "Never mind. I misread the instruction, as one does.\n. ",
    "nick": "Perhaps we could have a root level component called <Application>  or similar that has props like statusBarStyle. That way we can update that prop from within our app if we need to change the style while the app is running\n. StatusBarIOS sounds great :)\n. @vjeux Unfortunately I have no experience whatsoever with iOS or Objective C otherwise I'd be happy to help. @amccloud good luck - would love to give it a try if you succeed\n. @vjeux haha you're right I should dive in. Right now I'm working on a clone of the iOS weather app to see how far I can get it. Looking good so far! My fork is at nick/react-native - when I'm a bit further along perhaps we could use it as another example.\n\n. Yup no prior iOS experience and about 3 hours work I got it to that. It's using https://github.com/erikflowers/weather-icons for the icons. Looking forward to seeing how far I can push it\n. I merged in @amccloud 's change to my fork and its working great :-)\n. @amccloud @vjeux do you think I can use the same method to expose a location API? Trying to get location for my Weather app and was thinking of using this code as a template.\n. I found this too. I ended up commenting out these lines as a short term fix:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Bundler/Bundler.js#L49-L52\n. I had a little more luck by using the browser build of superagent but it seems there's more of xhr that hasn't been ported yet that trips superagent up. Personally I'd love to see superagent supported as I already use it on the client and server and would be great if all that code could be shared. I'll see if I can work on Libraries/XMLHttpRequest/XMLHttpRequest.ios.js to get superagent working.\n. btw I'd love to contribute this example to the official repo once it's done :-)\n. My thoughts exactly. I'm trying to give it the exact same functionality as the iOS demo app you build in the first tutorial. Except the tutorial for this will be about 1/10th the length ;-)\n. That last api looks good to me. In the meanwhile I'll try your suggestion. Can't wait to see what @ryanflorence and @mjackson do with support in react-router! Already using it in all my other projects.\n. vjeux's comment from a few days ago\n\nThe goal of this private repo is to give us some time to expose all the features that we have internally and get the feedback from people before opening the flood gates. Feel free to demo it and talk about what's inside\n\nI'm pretty sure everyone is on the same page as far as open sourcing sooner rather than later...\n. Cool, I added it to my Weather example. You can see the component so far here.\n. If I set a value for throttleScrollCallbackMS then it works :-)\n. Running into this issue too - I don't suppose there's been any progress here?\n. Awesome - I'll give it a whirl on my Weather example. @vjeux mentioned that there is already a location API internally that they were planning on exposing soon - not sure what approach that will take.\n. You may have to add automaticallyAdjustContentInsets={false}. Anyone know why this is true by default?\n. You may need to update AppDelegate.m with the IP address of your dev machine:\n\nTo run on device, change localhost to the IP address of your computer, and make sure your computer and iOS device are on the same Wi-Fi network.\n. does this mean you guys can now pull back into the internal repo from GitHub? :+1: \n. Checking out a fresh copy of the repo did the trick\n. Checking out a fresh copy of the repo did the trick\n. Yea. I tried cleaning the cache on the old one but it didn't seem to work.\n. Yea. I tried cleaning the cache on the old one but it didn't seem to work.\n. Hi Jay - was wondering if you'd already implemented the same demo using regular React on the web? I'd recommend checking out the Flux documentation as well as this writeup on Flux as from the sound of things you may be taking a non-standard approach. I don't think you should be calling things like forceUpdate unless its a special circumstance.\n. I'd recommend getting more familiar with the concepts of regular React first as most of your questions apply there too and there is already lots of documentation, a Google group and IRC channel where you'd more easily be able to get help. There are several examples of adding adding a child to a parent in the Flux example applications: http://github.com/facebook/flux/tree/master/examples\n. Jay, I'm pretty sure your implementation is funky if you're getting that type of performance. Are you sure you're doing things the 'React' way?\n. I actually made a Carousel component in my fork here. Example usage here.\n. @ppong oops - try now\n. I've now released this as an npm module at http://github.com/nick/react-native-carousel\n. JS style unicode did the trick - thanks.\n. \n",
    "amccloud": "@nick For now you could set View controller-based status bar appearance to NO in your Info.plist and then add the following to your AppDelegate's application:didFinishLaunchingWithOptions:launchOptions method.\nobjective-c\n[[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];\n@vjeux Status bar style could be a barStyle property on NavigatorIOS. Another idea would be to add barStyle as an additional attribute to RKNavigatorItem. I think i'm leaning towards the latter because it allows each route to define a bar style.\n. I also like StatusBarIOS. Trying to implement it now to learn the internals of react-native.\n. I've pushed my initial work for StatusBarIOS. @vjeux the only issue I seem to run into is the type for attributes coming across the bridge. For example my BOOL values in RCTStatusBarManager are always NO or false.\n. Yes. That is my intention. I just want to fix the issue with the BOOL values first. \n. @vjeux Fixed all of the style issues\n. I've attempted to improve the error after running the packager without running npm install first by detecting if the node_modules directory exist.\n. Good point. Never considered ignoring it globally.\n. @boopathi I originally named it RCTStatusBarManager because of this comment https://github.com/facebook/react-native/blob/master/Libraries/BatchedBridge/BatchedBridgedModules/NativeModules.js#L10\nLooks like it was renamed in the merge.\n. @boopathi I originally named it RCTStatusBarManager because of this comment https://github.com/facebook/react-native/blob/master/Libraries/BatchedBridge/BatchedBridgedModules/NativeModules.js#L10\nLooks like it was renamed in the merge.\n. The native module is also RCT https://github.com/facebook/react-native/blob/master/ReactKit/Modules/RCTStatusBarManager.m\n. The native module is also RCT https://github.com/facebook/react-native/blob/master/ReactKit/Modules/RCTStatusBarManager.m\n. @jaygarcia Can you share an example project I can run on my device?\n. Same issue. Opening up Charles proxy reveals that no request to the image is being made. Maybe the Image component thinks it has the image cached?\nAppending  '?t=' + Math.round(new Date().getTime() / 1000) to the uri appears to make the image load but this obviously disables caching.\n. @mjohnston Installing 3rd party modules is the only issue i've run into with your webpack server. Most react-native modules appear to be ES6 but node_modules is ignored by the babel loader.\n. @mjohnston Installing 3rd party modules is the only issue i've run into with your webpack server. Most react-native modules appear to be ES6 but node_modules is ignored by the babel loader.\n. @mjohnston I tried that. Whitelisting the module but then webpack/babel tries to resolve the require statements in the module. Specifically i'm trying to use https://github.com/lwansbrough/react-native-camera\n. @mjohnston I tried that. Whitelisting the module but then webpack/babel tries to resolve the require statements in the module. Specifically i'm trying to use https://github.com/lwansbrough/react-native-camera\n. Same for me. I'm pushing a view that renders the Camera component from react-native-camera. I get major jitter when it is animating so for now i've use setTimeout to hide the camera. I've also noticed the jitter with simple list views also.\n. @frantic if you're on device wouldn't this need to be an ip?\n. ",
    "frantic": "I like StatusBarIOS suggestion. Some people will definitely want to .hide() and .show() status bar, and it gives enough power to implement higher level abstractions like <Application> or navigator/routing integration.\n. > Or react-native could be changed to use the standard //#sourceMappingURL (errorToString may need to be changed to be async, because it need to fetch the SourceMap from the server).\nActually we started with this approach, but then tried including source maps inline and it turned out to be a better dev experience.\n. @nicklockwood fixed this a while ago\n. > Is there any way we can add a warning so that other people don't fall into the same trap?\nI think running watchman from terminal could give a clue\n. > But options is parsed from the command line arguments and I don't see the projectRoot command line arg.\nOh, I missed that when syncing changes to github repo :)\nWe don't have a good story for creating new apps yet, but imho would be great if all you needed was npm install react-native + packages that your app depends on, and run npm exec devserver to start packager\n. Thanks @jlongster!  @sjmueller If you don't have iOS experience, it's easier to just copy the example app and change it's name\n. @a2 How about SVGs too? :)\n. Cool! :)\n. Looks good :+1: \n. @vjeux - the comment in the code is misleading, looks like we don't default to 200ms. @nick you are right, to receive the event continuously, you have to explicitly tell how often it should fire. The design decision here was driven by perf considerations - we don't want to spam the bridge with commands you are not interested in. If you want to animate something when scrolling, set throttleScrollCallbackMS to 16ms or less.\n. Looks like this is a very common pattern - native modules that run on main thread. Maybe we could do something like:\nobjc\n- (void)loadMesh:(NSString *)path {\n    RCT_EXPORT_ON_MAIN_THREAD();\n    node.mesh = [REMeshCache meshNamed:path];\n}\n@a2 / @nicklockwood - any thoughts?\n. @a2 great answer, totally makes sense!\n. Awesome! @amasad I think it would be nice to add something like \"try running watchman from your terminal\" to the \"Watcher took too long to load\" error message, because it can give more details about what's wrong.\n. I think it's a very clever idea and I like reducing RCTJavaScriptExecutor protocol. However, the code in the bundle has to define a global require function that will be used by ObjC to invoke JS methods. Also there are benefits for the existing model, for example Chrome debugger integration (not in the oss repo yet) that runs the JS code in a Chrome page. The app bundle in this case is loaded via <script> tag instead of being passed via websockets.\n. On my radar, will take a closer look soon\n. As of #148 RN will fallback to //@ sourceMappingURL if global RAW_SOURCE_MAP is not available. We will get rid of RAW_SOURCE_MAP soon in favor of base64-encoded sourcemaps.\n. OK, I'm happy now :)\n\n. You can dismiss it, this should be fixed with the next sync. Sorry about that!\n. Fixed by #139\n. > If my level of reporting issues is too frequent\nNo, keep them coming! In some cases you'll get \"known problem\" but some other might be pretty useful.\n. Also note that because we control the bridge we can have async stacktraces support easily, so I wouldn't say setTimeout/setImmediate usage is a concern. Imho the biggest disadvantage of promises is that it's really easy to forget to catch the error.\n. @jordwalke had the same idea but we didn't have time to look closely at it. I think it is possible to build an adapter that takes cordova plugin and exposes it as RN module in JS.\n. As for cli - check out react-native-cli, it's basically a very thin wrapper that delegates all the work to local react-native.\n. Regarding Podfile - in any case we will need to patch user-generated Podfile to include the require/eval line. Why not just include stuff inline:\n``` ruby\npod 'AWSiOSSDKv2', '~> 2.1'\npod 'CocoaLumberjack', '~> 2.0'\npod 'FMDB', '~> 2.5'\npod 'GoogleAnalytics-iOS-SDK', '~> 3.0'\npod 'Reachability', '~> 3.2'\n\npod 'react-native-page-view-controller', 'node_modules/react-native-page-view-controller/ios'\n\n```\n. > Would love comments and feedback.\nDoing a quick pass, I'll leave my comments on the commits. Could you please squash the commit history - it's sometimes hard to follow, because some changes are undone in following commits. Also please use ESLint - we have a config checked in.\n. This still sometimes happen on TravisCI, here is an example run https://travis-ci.org/facebook/react-native/jobs/59088796\n==> Installing watchman\n==> Downloading https://homebrew.bintray.com/bottles/watchman-3.1.mavericks.bott\n....\n ERROR  Watcher took too long to load\nTry running `watchman` from your terminal\nAny way to debug that? We do brew update && brew reinstall watchman for every run to get the latest release, and from the discussions above sounds like 3.1 should be good enough.\n. I've added cat $WATCHMAN_LOG in facebook/react-native#956, here is the output\nhttps://travis-ci.org/facebook/react-native/jobs/59471656\n1429657905: tid=50418448 Using watcher mechanism fsevents\n1429657905: tid=50418448 file limit is 256 kern.maxfilesperproc=10240\n1429657905: tid=50418448 raised file limit to 10240\n1429657905: tid=50418448 Using socket from launchd as listening socket\n1429657905: tid=50418448 failed to parse json from /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: unable to open /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: No such file or directory\n. More samples. This is the log when watchman starts and works fine with RN packager:\n1429744175: tid=113029904 Using watcher mechanism fsevents\n1429744175: tid=113029904 file limit is 256 kern.maxfilesperproc=10240\n1429744175: tid=113029904 raised file limit to 10240\n1429744175: tid=113029904 Using socket from launchd as listening socket\n1429744175: tid=113029904 failed to parse json from /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: unable to open /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: No such file or directory\n1429744175: tid=160116736 path /Users/travis/build/facebook/react-native is on filesystem type hfs\nAnd here is another failure:\n1429744229: tid=40600336 Using watcher mechanism fsevents\n1429744229: tid=40600336 file limit is 256 kern.maxfilesperproc=10240\n1429744229: tid=40600336 raised file limit to 10240\n1429744229: tid=40600336 Using socket from launchd as listening socket\n1429744229: tid=40600336 failed to parse json from /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: unable to open /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: No such file or directory\nThe last record (\"...path /Users/travis/build/facebook/react-native...\") is missing. Any ideas?\n. Bumped the timeout to 25 seconds, seeing this in logs\n1429928793: tid=138003216 Using watcher mechanism fsevents\n1429928793: tid=138003216 file limit is 256 kern.maxfilesperproc=10240\n1429928793: tid=138003216 raised file limit to 10240\n1429928793: tid=138003216 Using socket from launchd as listening socket\n1429928793: tid=138003216 failed to parse json from /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: unable to open /usr/local/Cellar/watchman/3.1/var/run/watchman/travis.state: No such file or directory\n1429928793: tid=185184256 path /private/tmp/react-native-oIVHCTbQ/EndToEndTest is on filesystem type hfs\nStill, packager reports \"Watcher took too long to load\", see build logs\n. Yeah, tried pkilling - no watchman is running. If you have some time we can try reverse-shell-inspecting a running Travis container?\n. Disabled watchman on Travis for now #1140\n. Looks like we need to do the same thing projectRoots does - detect if packager is running from node_modules of another project.\n. #440 \n. I guess we should provide a better error recovery suggestion. Would the instruction to open the link to the UI be helpful?\n. btw, instead of cmd+d try cmd+ctrl+z - \"Enable Debugger\", the former shortcut can't disable debugging\n. @mydearxym can you paste logs from Xcode and packager?\n. @jessepollak - double check your xcode logs. How did you set up your project? with react-native init or Cocoapods? From the symptoms looks like the websocket debug module is not linked. cc @tadeuzagallo \n. @jessepollak - we used to have a warning but now it's gone :( Basically you need to link this subspec RCTWebSocketDebugger.\n. The article looks good, but maybe still pretty complex for non-ios developer who sees Xcode for the first time. Would be nice to add a screenshot. Ideally we would do all the work using something like npm install <native-lib>, but having docs is better than not having docs :)\nAs for new-library - good point, however I think the skills you need to build native library should already include some experience with Xcode. Still worth doing though.\n. How did you install node and npm?\n. I'd rather have explanation on how to fix permission issue than encouraging usage of sudo just to fix things.\n. We definitely do support that. See https://github.com/facebook/react-native/blob/master/Libraries/Components/View/View.js#L69\nI know @vjeux implemented the support in ObjC land that automagically makes UI accessible, but maybe his change was lost during refactoring. cc @nicklockwood \n. Merged internally, thanks! Should be out with next sync\n. I don't think RN project itself addresses this kind of problems. You can always configure your editor or submit a patch to emmet to support all the awesomeness you can think of.\n. > Where can I find the generated bundle?\nhttp://localhost:8081/index.ios.bundle\n. I don't think we support source maps from external generators yet\n. I'll defer the answer to @amasad, but I think we want to have a way to plug in custom transformers in the future.\n. Awesome job @JoeStanton! I have a few suggestions - see inline comments\n. Can you also include packager logs, your node version, etc.? Live reload uses long-polling and should not be causing this. Do you have watchman installed, watchman --version?\n. Closing in favor of #240\n. Thanks for contribution! We merged the patch internally, should be out with the next sync.\n. See #482\n. @a2 - would you remind me how you did DEBUG/prod configuration for linking libraries? We would like to link libRCTWebSocketDebugger only for DEBUG builds\n. There is also minify=true, I'm going to add them to the docs in #240 \n. @glenjamin no, but there is a task open to look into it.\n. http://facebook.github.io/react-native/docs/runningondevice.html\n. Why? We don't have any workspaces in the repo yet, but I think when we do we would want to check them in\n. Restarted the Travis build. @a2 / @nicklockwood - what do you think?\n. See also #235\n. My main concern is that it will introduce more problems in the future with supporting this. However, if you guys think it's worth doing I'd suggest to change the name of the command to something more concrete, like link-xcode-project or link-native-project and have a few tests for it.\n. Few ideas for tests, if you decide to add them:\n- End to end style - call react-native link on sample project (see e2e-test.sh)\n- Extract function that deals with Xcode projects and test it on a few tiny Xcode apps (not necessarily RN)\n. When you see \"Status: Waiting for simulator\" - reload app in simulator (Cmd+R), and it should connect. Please reopen if it doesn't work\n. What happens when you reload code in simulator? Any log messages in Xcode or packager window? \n. How did you get react-native? When you download it from web in a zip file, OSX marks all executable files as \"unsafe\". Try  doing git clone or find launchPackager.command file in the repo (it's in packager/ folder), right click - Open, and it will ask you if you want to trust it. Please reopen if this doesn't help\n. Try @pjjanak's suggestion but remove wrapper <View> around <NavigatorIOS>\n. One possible solution is to make the websocket-proxy smarter. Instead of just broadcasting incoming messages it should be able to detect browser connection and simulator connection and pair them. If there is incoming simulator connection without existing browser counterpart, proxy should open a new browser tab.\n. See Controlled Components: https://facebook.github.io/react/docs/forms.html#controlled-components\n. Thanks!\n. @tobyhughes - if you are still interested in working on that, please consider @brentvatne's suggestions about code style and docs. Potentially (in separate PR) we could also provide a script that at build time writes laptop's IP address into Info.plist to make everything \"just work\".\n. Just looked at the codebase, and seems like there are few more places where the URL is hardcoded. Would be nice to change those refs too:\n- Libraries/WebSocket/RCTWebSocketExecutor.m\n- React/Base/RCTRedBox.m\n- Libraries/RCTTest/RCTTestRunner.m\nYou can also extract this logic into some util function to not have to do this manually in different places, something like RCTServerURLWithPath(@\"/index.bundle\")\n. I'm getting this in shortly :)\n. @nicklockwood has a great point\n. :cry: @krazyeom please submit a PR\n. see #598\n. :+1: That's awesome!\n. Btw publishing happens in after_success that according to the docs won't fail the build\n. Thanks!\n. React.xcodeproj has a build step that runs packager automatically, see https://github.com/facebook/react-native/blob/master/React/React.xcodeproj/project.pbxproj#L450\nNote that you can also ship pre-built bundle within the app itself http://facebook.github.io/react-native/docs/runningondevice.html#content\n. Thanks!\n. @pedro why commander? Did you consider any alternatives?\n. We already use optimist in RN, can we use it for this as well for consistency?\n. :cool: Also note there is #1125 that is likely to be merged in\n. Do you want to (a) use JXcore as runtime for React Native or (b) just communicate with JXcore from React Native running on JSC? \nFor (a), it should be pretty easy to do. See RCTJavaScriptExecutor protocol, basically it's 3 async functions you need to implement, that boil down to something like:\njavascript\neval(code: string, callback: (result_json: string) => void)\nSee list of runtimes we currently support.\nFor (b) - it's even easier, you can just expose a native module.\n. > Am I limited to String for error and params in the callbacks? What would it look like to return a object or array of objects if that is possible?\ncallback accepts array of any JSONable data, including NSArray and NSDictionary. E.g.:\nobjective-c\ncallback(@[@[@1], @{@\"foo\": @\"bar\"}])\n\nIs there a standard for what errors should return?\n\nFor passing Error-like objects, see RCTMakeError. You can attach any field to your error object, but at minimum it's good to have message.\n. That would definitely be useful, thanks for fixing! Could you please rebase your work on top of current master? TravisCI will ensure that e2e tests are still working.\nSorry about getting to this so late, I somehow missed it.\n. note that your kill $pid command didn't actually kill anything, you need to run pkill 3960. But before that, try ps aux | grep 3960 to see full path to the process that is taking that port.\n. @mbrgm - as of #736 we provide better error message. Also the troubleshooting page already has instructions how to find out which process is taking the port and what to do. Or am I missing something?\n. Would be nice to leave cli.js file there for some time that would throw an exception when required with instructions to update react-native-cli.\n. Great job! Let's start with that and do a couple more iterations before announcing it publicly. \n. Oh, I remember you used to have tests for this file?\n. @TomMcHugh that's fine, just create a new PR\n. looking\n. :zap: \n. Yeah I was actively looking into that today, will definitely have cli test-covered sometime very soon\n. didn't you land this internally?\n. @checkraiser could you please copy-paste detailed error description? You can find it by clicking on error message in the left pane in Xcode\n\n. Looks like packager thing has been fixed in #758\n. I guess automaticallyAdjustContentInsets strikes again. Try\njsx\n<ListView automaticallyAdjustContentInsets={false} ... />\n. I guess automaticallyAdjustContentInsets strikes again. Try\njsx\n<ListView automaticallyAdjustContentInsets={false} ... />\n. Why did you close this? I don't know if we have this in the docs, but to run the tests do\nshell\n$ npm test\nwe use Jest for testing, but unfortunately it doesn't work on node version above 0.10. I use n to switch node binaries, but it's up to you.\nAlso I believe in order for Jest to find your test it has to be named moduleYouTesting-test.js (at least that's our convention)\n. @TomMcHugh I think the problem is in using current dir in both tests and code. cwd() is super unreliable and often leads to weird bugs. Prefer passing around absolute paths and using path.resolve and friends with __dirname, __filename.\nFor example, your install function can take root as param. In your tests, you can create fake files to simulate different layouts (with or without Podfile, with or without node_modules, etc.). But cli.js will  invoke install function with real root dir (either by passing cwd() or __dirname, etc.)\n. Possible solutions: use postinstall hook to run npm list -g react-native &>/dev/null && echo \"Looks like you installed react-native globally, did you mean react-native-cli?\"\n. We should probably have the native module check whenever NSLocationWhenInUseUsageDescription is set and show warning / redbox. Anyone wants to send a quick PR? :)\n. I'd change the language a little bit, maybe \"Looks like you installed react-native globally, maybe you meant react-native-cli? To fix the issue, run:\"\ncc @sahrens \n. What is the use-case for this? Make it easier to develop apps? If so, I'd suggest making \"is debugger enabled\" a setting that survives app restarts.\n. @jaygarcia - how about the suggestion I made with remembering the last executor? I think this would be even more friendly and you don't have to remember to change your code before shipping to the appstore\n. Sweet, thanks! There is another mention of curl if you are interesting in helping out more :)\n. @nicinabox can you check something for me? (I can't repro the original issue)\ncan you try patching this line to have something like\njavascript\nreturn http.createServer(app).listen(options.port, '::', readyCallback)\nand see if curl without -4 works?\nThanks!\n. @spicyj has fixed this internally, should be out with the next sync. @nicinabox thanks for bringing our attention to it! :)\n. We recommend installing node using homebrew, because installing via their official downloadable package results in weird setup where sudo is required to install global modules.\n. Feels like assert is a little bit too aggressive, we are trying to keep them for infra-level errors. In this case, I guess simple RCTLogError should be enough.\nOh, and you can also add this key to SampleApp by default, this way everyone who creates react-native project via react-native init won't hit this issue :)\n. For performance, instead of having all elements background color transparent, we propagate it from parent to child. I think you can explicitly set background color on <Text>. cc @sahrens \n. We are going to provide a flowconfig with sample app soon. cc @sahrens \n. I tried this some time ago, but it turned out to be a disaster - RefreshableScrollView scrollview didn't play nicely with ListView because ListView depends on stickyHeaderIndices prop of ScrollView and assumes there are no other views besides those managed by ListView. Unfortunately RefreshableScrollView does add extra views and shifts those indices, resulting in incorrect ListView rendering...\n@ide have you tried \njavascript\n<ListView renderScrollView={() => <RefreshableScrollView />} />\nwith sections that have sticky headers?\n. @ide mind sharing it? I guess we could merge it into the main repo if you want.\n. I like it, thanks!\n. @sahrens, @spicyj - what do you think?\n. I'm going to land this this and open a new PR for adding tests to SampleApp\n. @bhosmer - does .flowconfig look good?\n. :cool: \n. Good stuff! cc @vjeux \n. Blames to \"Implemented response headers when using XMLHttpRequest\" by @nicklockwood that is based on #382\n. Nice catch! What was the module name?\nOn Wed, Apr 15, 2015 at 7:06 AM Johannes Lumpe notifications@github.com\nwrote:\n\nClosed #832 https://github.com/facebook/react-native/issues/832.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/832#event-282117784.\n. Most likely your npm installation is weird, it happens sometimes when you install package with sudo or get node from official website (not brew). This might help (see the bottom of the page) http://facebook.github.io/react-native/docs/troubleshooting.html#npm-locking-error\n. @josephtsng what's the error message? You posted just stack trace. Try this simplified example:\n\n``` javascript\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar fetch = require('fetch');\nvar REQUEST_URL = 'https://raw.githubusercontent.com/facebook/react-native/master/docs/MoviesExample.json';\nvar TestFetch = React.createClass({\n  componentDidMount: function() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((stuff) => console.log(stuff))\n      .done();\n  },\nrender: function() {\n    return (\n      \n    );\n  }\n});\n```\n. @josephtsng what's the error message? You posted just stack trace. Try this simplified example:\n``` javascript\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar fetch = require('fetch');\nvar REQUEST_URL = 'https://raw.githubusercontent.com/facebook/react-native/master/docs/MoviesExample.json';\nvar TestFetch = React.createClass({\n  componentDidMount: function() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((stuff) => console.log(stuff))\n      .done();\n  },\nrender: function() {\n    return (\n      \n    );\n  }\n});\n```\n. Thanks, that's really handy! We use something similar internally, but it's tied to our infra and build tools.\nActually react packager exposes API to create offline bundle without running the server, see buildPackageFromUrl. Would be awesome to use that instead of asking to run server manually. The only thing to keep in mind is ulimit - the OSX default 256 is way too low. @amasad - any thoughts on using graceful-fs?\nAnd please update the comments in SampleApp's AppDelegate :)\n. @arthuralee - great job! I don't think you should be solving ulimit issue in this PR, that's a more general problem that might be relevant to other tools as well. We should probably either switch to graceful-fs, wrap react-native-cli in a shell script that calls ulimit or use something like node-posix to call setrlimit directly.\nI'll take a closer look and merge this in soon.\n. Awesome thanks! If you are willing to make this even better, here is a suggestion - add a step to end-to-end tests that calls react-native bundle and makes sure iOS/main.jsbundle got updated (by checking file size or looking for a substring in the file)\n. @romanonthego - the problem is caused by too many files and low open files limit per process. Run ulimit -n 2560 in your terminal before running react-native bundle.\n@arthuralee, it's hard to repro because different environments might have different ulimits, also some users will have more js files in node_modules and will hit the bug, wheres vanilla react-native can fit in standard 256 limit.\n. @tadeuzagallo - are callbacks holding a strong ref to the bridge?\n. IMHO it makes sense to ship built-in WebSocket implementation, we already have XHR.\n. @nicklockwood - no objections, just need to be a little bit more careful with testing when merging this in internally.\n. Thanks for reporting, I'll take a closer look soon\n. Good catch, sent a fix internally.\nBtw, did you guys know that you can configure editor for React, and packager will open it when you click on stack trace? instructions\n\n. @coderdave - weird, do you use bash as your login shell? Try restarting your terminal, then open a new tab and run env | grep REACT_EDITOR.\n. @coderdave please send a PR :)\n. @sabeurthabti - think of React Native more like about browser environment, not node. fs is nodejs module that depends on nodejs implementation and will not work on RN. @brentvatne is right, look at AsyncStorage :)\n. cc @sahrens @spicyj \n. Thanks for doing this! Mind rebasing on top of #975 to make sure objc tests work?\n. Did you add images to Images.xcassets in Xcode? Is there anything in Xcode logs?\n. Going to close this for now, please reopen if this is still happening\n. See http://facebook.github.io/react-native/docs/troubleshooting.html#npm-locking-error\nPlease reopen if the recommendation there doesn't work\n. import\n. import\n. No luck :(\n. No luck :(\n. > Is there any way for me to plug in my own image provider for Image?\nNo, not yet. But I think it's a good idea. Note that currently we have 2 image component providers backing single <Image> - StaticImage and NetworkImage. Would be great to merge them on native side and add plugins support with custom URI schemas.\n. We started to mix in image width/hight if they are not set on image style. Will probably have to reconsider this - use case when image is sized using flex is valid. @vjeux the layout guru, thoughts?\n. We use optimist in a couple of places internally, let me check...\n. website tests fail, could you please check? Basically you'll need to run this:\nbash\ncd website\nnpm install\n./setup.sh\nnode server/generate.js\n. Looks like this changes the way argv.$0 works, optimist used to return node ./server/generate.js but with this diff it returns server/generate.js. Please update  website/server/server.js:24 and make sure the commands from my prev comment work. Thanks!\n. Look at AnimationExperimental module, it has fromValue property you can use. Please reopen if it doesn't help. cc @a2 \n. Could you please tell us a little bit more about what you are trying to do?\n. Oh, I got that, I'm just wondering what higher level task are you trying to solve by calling JS from Obj-C :)\nThere is no direct access to JS eval because we have an abstraction above it - batched bridge takes care about calling JS code and collecting commands for native side. cc @nicklockwood \n. @rpastorelle - thanks, will pull this in soon\n. This fixes Travis tests, going to pull in.\n. Thanks for reporting!\n. Weird. See #1123 and #1096 for quickfix (update node)\n. Ok but the real problem is actually low ulimit :(\nRun ulimit -n 2560 from the terminal before react-native bundle. Fix coming\n. Talked to @amasad - we are going to use something like graceful-fs in packager\n. Ok tracked down a little bit. I can repro if the breakpoint is in getInitialState of a component, but everything works fine in something like button tap handler. Looking...\n. Looks like when debugger hits breakpoint, it can't load source maps:\n\nResolves only when I hit play again\n\n. cc @amasad - any ideas?\n. @jlongster - meanwhile you can try Chrome Canary as suggested in this chromium issue?\n. @jlongster - just checked, everything works fine in Chrome Canary. Note that you'll need to apply #1101 locally to make RN run any \"Chrome\" browser.\n. :cool: I'm going to close this for now then since it's a Chrome bug that is fixed and will ship soon.\n. We currently do this for static images, because packager tells us what scales are available. We can do this for server side images as well, but we need information about what images are there on server.\nBtw besides 1x, 2x and 3x we are going to support any scale, including 1.5x etc (Android will use that)\n. Thanks! Please fix these 2 nits and we'll get it in.\n. :cool: ! Seems pretty easy. Could you please extract it into a shell script and then call it from Xcode? This way it's easier to test and review.\n. I'll take a look, thanks for reporting!\n. :+1: \n. Actually see #1377 , @amasad started pulling it in\n. > @frantic, @amasad, what do you think about moving the packager startup script out of React.xcodeproj and into the individual top-level project files like UIExplorer and SampleApp?\nYes, this seems to be the right thing to do.\n. Landed internally, should be here with the next sync. Thanks for fixing it, @brentvatne!\n. IIRC @sahrens built the original implementation. Re: this PR, I think we\nshould be explicit about the platform, especially when Android has a\ndifferent model\nOn Wed, Jun 3, 2015 at 5:19 PM James Ide notifications@github.com wrote:\n\nAndroid's permissioning is pretty different (coarse vs. fine updates\nrather than background vs. foreground) so I think we should optimize for\niOS in this commit and clearly name the property something like\npermissionTypeIOS.\ncc @frantic https://github.com/frantic are you the right person to take\na look at geolocation diffs (saw you were active on a few others)?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/1506#issuecomment-108655302\n.\n. Hey @paramaggarwal, great work!\n\nI'm wondering if we could use the same logic for both static and network images? Or am I missing something?\nFor more context about the image work we are doing internally. The idea is to deprecate require('image!...') usage in favor of relative require styles (require('./logo.png')). There are lots of benefits to this system: no need to manually add images in Xcode, no need to recompile, images live alongside the code, etc. You can follow it here #1043\nImplementation wise we will be serving the images over network in development mode and will bundle them with the app when submitting to AppStore, so the same image will be rendered using NetworkImage and StaticImage depending on environment. That means they have to behave the same way to avoid surprises.\nAs part of that, we made packager add width and height to image metadata, so the developer won't need to duplicate information that the system can figure out. The only problem with this approach is when the developer wants to use something like flex to size the image - width and height attributes we set get priority. One solution could be flattening style and checking if flex or alignSelf are set, and only if not - applying known width and height.\n. @ide great writeup! @paramaggarwal I'm happy with your approach, will let @vjeux stamp this.\n. Good work, thank you! But I feel like we should probably do the other way around - have React target be pure and ReactWithPackager do what React target does now. @nicklockwood / @tadeuzagallo - do you think my suggestion makes sence?\n. flow server is busy is just a warning, after that it says No errors and continues the build, so that's not the reason for the failure. This is:\n/Users/travis/Library/Developer/Xcode/DerivedData/EndToEndTest-bmjlkbqwxoavxthdezsighobnyjh/Build/Intermediates/EndToEndTest.build/Debug-iphonesimulator/EndToEndTest.build/Script-4CED847C1B3756CA00715E21.sh: line 2: /tmp/react-native-x3yOQW0y/EndToEndTest/../../packager/launchPackager.command: No such file or directory\n. Restarted the tests...\n. Nice catch, thank you! :)\n. Our practice shows that environment variables should be used as last resort, because it's extremely hard to debug, especially in large systems and across multiple projects. Unfortunately we still haven't figured a good way to switch between loading from development server vs loading from file. The approach we take internally is we have code that checks if pre-packaged bundle exists and uses that, otherwise it will try to connect to packager on fixed port.\n. We will be happy to have it in core, but we don't have enough resources to build one, especially if we are not going to use it. Our internal packaging pipeline is pretty complex and heavily relies on BUCK.\n. I think having a simple high level tool on top of xctool and gradle is\nimportant for initial development experience. Companies and individuals who\nknow what they are doing can easily use their tool of choice.\nOn Thu, Jun 25, 2015 at 7:53 PM Matt Apperson notifications@github.com\nwrote:\n\n@ide https://github.com/ide I agree mostly. I think the issue comes\ninto play more when you become cross platform. Having a CLI tool to\ninterface with for your pipeline gives one interface point vs iOS, Android\nand whatever else...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1699#issuecomment-115479702\n.\n. Should be fairly easy to fix, see debugger.html, just need to add some code that tries to reconnect. Anyone fancy a PR?\n. @almost, the latest changed finally merged in, can you check if it works now? In any case we might want to consider upgrading underscore, I'll let @amasad make a call here\n. @ericvicenti is on JS test failures, I'm looking at e2e\n. @ericvicenti is on JS test failures, I'm looking at e2e\n. > package.json is synced out to GitHub but npm-shrinkwrap.json is not\n\nWhy? We are still going to check in all npm modules internally, but @amasad and I were thinking about using shrinkwrap for opensrouce version to make sure we are using the same modules and don't have weird inconsistencies.\n. cc @DmitrySoshnikov\n. Looks good to me!\n. RCTLogError calls RedBox which should fail the test, I'm not sure why it didn't happen this time...\n. Just tried this:\nreact-native init BabelSample\ncd BabelSample\nrm -r node_modules\nnpm install react-native git+https://github.com/facebook/react-native.git --save\nreact-native bundle --minify\nand it successfully created a bundle.\nBtw if you want to help, add react-native bundle test to end2end tests :)\n. That's because packager doesn't know about it. Try adding your file extension to this list https://github.com/facebook/react-native/blob/master/packager/packager.js#L218\n. not sure I follow the description\n. do you actually need process.cwd() in path.resolve?\n. nit: not a big fan of this style of indentation. I know we don't have coding style published anywhere, but I don't think this formatting is common in our codebase. Also it makes harder to make changes and maintain blame.\n. this means it will open the tab only once per server session.\n. But when you close the tab and disable debugging on simulator (via Cmd+Ctrl+Z) or restart the app in Xcode, it's important that the tool can connect to the debugger again.\n. remove\n. even simpler: \njavascript\n module.exports = require('./local-cli/cli.js');\n;)\n. fs.existsSync\n. just a small nit: this method is not doing what name suggests. Maybe checkLocationConfig?\n. Does it work with empty string? Maybe put something generic here, \"This app would like you use your location\"?\n. @spicyj - good point, but do you know any cases when this or something similar happened? If so, I'd prefer simply having instructions on how to add the key rather than be a reason for unnecessary rejection.\n. This is never going to remove the pin, right?\n. did you mean bundle?\n. Let's keep it bundle, we are currently thinking about new build command that would compile ObjC code so you don't even have to run Xcode\n. Please handle the error here and show some helpful error message.\n. we can revisit this later when Android ships, no need for extra CLI option for now (you had this on your TODO comment)\n. nit: use done to make sure if ReactPackager.buildPackageFromUrl throws the error is reported.\n. Agree, but let's test it internally first. I'd say in a week or so. We should still support using images that are managed by Xcode.\n. if package.json exists but doesn't contain react-native, this will fail\n. from the description it's not clear how to use it. I think the most logical use case is something like react-native link react-native-video\n. When the header is already in lower case this will remove it.\n. Will this throw a warning if I use\njavascript\n<View style={{transform: {rotation: 1, scaleX: 2}}} />\n? (i.e. mixture of these shapes)\n. your regex allows y and n, but the rest of code requires yes. Maybe check yesno[0] === 'y'?\n. Would be nice to show a message that init was canceled\n. nit: space after )\n. Is this going to handle bad URLs well? what if user includes trailing slash?\n. should this also be updated then?\n. are changes in this file related?\n. nit: please be consistent with your examples, in this case change uri to my-icon\n. After https://github.com/facebook/react-native/commit/be70e32de2c417a467af902e7f4e2a0058c8e171 there is no need to do that on iOS, the bundle is generated as part of Xcode build.\n. Don't think Android needs this either. @foghina's new gradle plugin runs bundle command automatically.\n. I'm sure we should use export REACT_EDITOR=atom even for bash.\nA very cool DX detail could be figuring out what shell you use from process.env and suggesting relevant rc file.\n. Can you make sure we are not overriding this var if it already exists?\n. nit: prefer '\n. If loaded from the file, does RN Android report its scriptURL without file:// prefix? If so, we should fix that instead of adding complicated parsing and unnecessary if statements.\n. Let's fix the root cause - see my comment above.\n. Every Platform.OS branch increases this module complexity be factor of 2x. Before your PR, the only place we check Platform.OS was getPathInArchive. Let's not add extra branching.\nI think your code would be much easier to understand and support if you had 2 versions of getScaledAssetPath instead of one and only used platform check in getPathInArchive.\n. I like this (assuming it works). Before this change we had two places that compute image file name given set of its properties (platform, scale, etc.). I would recommend extracting this change in a separate PR for easier review\n. style nit \u2013 you are using both var and const. Let's keep the coding style consistent and keep var, we'll do a giant codemod at some point that will replace vars with let and const.\n. Yeah, that's one of the reasons I hate Github's review flow (Phabricator's is so much better)\n. FYI: this is a dummy binary that warns users that they have installed react-native globally (instead of react-native-cli)\n. We rely on cwd inside Xcode because I don't see any other way. In react-native-xcode.sh we can actually resolve the path to local-cli/cli.js relative to packager/react-native-xcode.sh location.\n. might be worth moving npm install --save react to local-cli? This way existing users won't have to upgrade global react-native-cli\n. very good question, might be worth installing the version we know matches react-native's one, we can get it from RN's package.json's peerDependencies.\n. Escaping path components is so much more complex than this, please use child_process.spawn instead of exec, it should handle the escaping correctly.\n. @mkonicek I'd disagree with ios-project-path, because this is not something that wouldn't make sense on Android (or other platform) one day. Also the command is run-ios which already sets the context for ios. simulator param to this command is also iOS-specific but it doesn't have the prefix.\nLet's stick to project-path?\n. exit 1\nAlso I recommend redirecting echo to stderr\n. nit: space after ,\n. Just a style suggestion, let's move the computations above the final command call, so it's easier to read and to debug when something goes wrong. In this case you can add const scheme = args.scheme || inferredSchemeName just after line 49.\n. @nicklockwood I think we've talked about reusing bundleURL in RCTWebSocketExecutor to reduce amount of URL configurations needed, because in most cases the debugger is running on the same machine as the packager. What do you think about the proposed solution?\nSide note: this will fail to guess the debugger URL when loading from file, but we already have tons of problems with debugging offline files: Chrome doesn't support loading from file:/// protocol (without additional flags), we don't store sourcemaps by default, there is no ability to load file from remote device, etc.\n. Personally I find it very hard to read this test file. I believe it will make it easier if you use same inputs for each test \u2013 currently the search token ('iPhone 6') and expected result are deeply burrowed inside the test function, and the IDs are very random.\n. nit: use let for consistency?\n. Prefer using @flow, doctype comment types are not typechecked\n. Nit: this name is not very ObjC-like, prefer something like: serverURLForPath:\n. We should not modify the sources. Consider taking the approach from #6362 - store the IP address into a file and load that file at runtime.\n. nit: please copy-paste the standard header\n. Let's not let the logic live across different files / build steps. Instead, put the condition into shell script (Xcode sets proper env vars)\n. I still don't fully understand what happens when you have, say, en0 and en1? Does it pick the random one?\n. please extract this to a separate openFileInEditor function (element inspector has the same code)\n. why not inline it?\n. I'd extract this function to something like sendWithRange module for easier understanding.\n. so we are no longer doing caching? What's the possible side effects of this change?\n. Always use quotes: \"$BUNDLE_FILE\"\n. Let's provide a better error message. Something along the lines of \"this must be a bug with React Native, please report it here \"\n. quotes\n. In case X-Http-Status is missing. Any thoughts on gif vs mp4? We only have the former so far in the docs, but real videos seem to be smaller are better quality.. According to flattenStyle any \"falsy\" value works so the users could do thing && styles.blah. I'm not sure if Flow has a special type representing falsy values, but might be a good idea to also include '' (empty string) here. I think it's okay for now. Refactoring the buttons is probably outside of the scope of this change. Move lines 160-162 here, so we don't create the UIView in case we don't need it. Yeah there's no easy way to reuse that function unless we extract it out to a util module.\nI think this could work: safeAreaInsets: according to the docs, if the rootView is part of the view hierarchy, this value should return the extra padding we need to add to our UI.\n@shergin what's the best way to do this?. Instead of creating top border for each button, can we use one full-width view and add it to the rootView directly?. ",
    "jamesgpearce": "@nick no regrets about giving you access :) - demo looks sick!\n. The continued caveat here is that we want to ensure that people with access to the repo will be able (time/talent/motivation) to help get us ready for launch - (and the license is eval-only so it's not ready for your company to starting building upon). If a few engineers from each company meet these criteria, we are open minded; let me know handles.\n. ",
    "subtleGradient": "Hey nick! Long time no see.\nFWIW, when I wanted to change the status bar style of my app, I did it in the Info.plist\n. https://github.com/facebook/react-native/search?utf8=\u2713&q=localhost\nHost your files on localhost and you're done. Search through the code for localhost to see the specific paths you need to get working.\n. Also see here: https://github.com/facebook/react-native/tree/master/packager\n. ha! I love it\n. ",
    "a2": "Just catching up on email. I commented on why that's not working. Hopefully that helps. :) \n. I was thinking about this yesterday. A solution (although not optimal) would be to run a server locally in the simulator and have some process watch the local files and tell the simulator server that it should refresh. I was specifically looking at swisspol/GCDWebServer.\n. You have a few options here, all of which are documented in AppDelegate.m:\n1. Run the server on your computer, change localhost to <your computer's IP>, and do it that way.\n2. cURL the file and change it so it references the saved file. You'll have to add the downloaded file to the app binary.\nHope that helps. If you have any trouble, just post here and hopefully we can get that sorted for you.\n. @vjeux Most definitely. We plan on putting in some sort of build step that \"compiles\" the JS source directly into a resource file in the app bundle. Obviously in production you wouldn't have a server running nearby.\n. LGTM. I'd love @nicklockwood's opinion too. :)\n. WatchKit requires all UI to be designed in a storyboard. As of now you can't do the equivalent in code. I recommend looking at the WatchKit Programming Guide.\n. iOS image views do not natively support animated GIFs. There are 3rd party libraries out there that convert animated GIFs into native image sequences. I'll look into support for this soon. :+1: \n. @zertosh :+1:\n@frantic, I'd like to leave out SVG parsing for now because it adds a lot of unnecessary bloat to the binary. Perhaps a plug-in would be a good fit for this?\nGIF support is landed so I'm going to close this now. :bow:\n. I think two things are going on here:\nA) Not sure if you're already doing this, but your TeapotController needs to conform to the RCTNativeModule protocol in order to be registered with the bridge.\nB) If a class conforms to the RCTNativeModule protocol, it will be instantiated by the RCTBridge for use in the RCTRootView. Where do you set the teapotNode_ ivar?\n. The JS bridge is meant to be asynchronous and therefore runs off the main thread. I personally think that if something should happen on a specific thread/queue, it is the caller's responsibility. Apple's documentation often says that callbacks can happen on private threads/queues and that you should dispatch if necessary.\n. The reason it doesn't work is because you present the picker from the main window's root view controller, but try to dismiss the picker from self.\n. Can we close this now that we have a CP spec?\n. It uses the old pre-iOS 8 methods. I've been chatting with @nicklockwood about the best way to achieve this and the \"find the view controller\" approach may be the best unless we want to move to a RCTRootViewController API \n. Caveat implementor; use UIToolbar as a fallback when UIVisualEffectView isn't available.\n. Brilliant catch! Ahahaha :smirk_cat: \n. I CANT USE PHABRICATOR MACROS HERE MY POWERS ARE USELESS\nBut actually this looks good to me star ship it.\n. It should have been synced by now?\n. Can we delete the update-packagejson branch?\n. I think all libraries should have subspecs defined if they're in the project. I think an \"All\" subspec is not the best solution because it will lead to bloat.\n. In that case do you think we should just remove the subspecs and have the default \"React\" pod include everything?\n. :+1: \n. @tadeuzagallo The podspec? No I haven't updated it yet. I can do that now.\n@despairblue Are you using CocoaPods?\n. @despairblue Did you follow @tadeuzagallo's advice? It's probably because you aren't linking against libicucore.dylib.\n. @tadeuzagallo Yeah I'm updating the podspec now.\n. @tadeuzagallo If you add it to the podspec, it gets linked in the main project. It's that magical. :rainbow: \nCan you merge React.podspec back internally? It seems that it wasn't and has been overwritten.\n. Everything you're saying seems valid, but I don't see why that line is the problem? CoreAnimation uses CGFloat values (and CGFloat-based structs like CGPoint, CGSize, CGRect) for all FP values.\n. @axelhzf An example project with a repro case would help immensely. Thanks!\n. You would want to set add the -lRCTWebSocketDebugger build flag only in DEBUG. If you use CocoaPods, this becomes much easier as you can set up a debug-only dependency using the following in your Podfile:\nruby\npod 'React/RCTWebSocketDebugger', :configurations => ['Debug']\n. This was added in #265.\n. This was added in #265.\n. @boyswan You need to add the font name (FileName.ttf) to the UIAppFonts key in your Info.plist.\n. Brilliant! I was having some trouble with the podspec over the weekend but I'm glad someone figured it out. I'll check this out tomorrow (it's getting late here in London) and we can merge this in. Thanks a bunch! :sweat_smile: \n. Looking at this now.\n. Committed in 18cb5d0711d585bf703ab2606839f122ca2a1154.\n. Clay, this looks great. I only have a few nit requests but if you can make those edits, we can merge this straightaway. :smiley: \n. @ashwinb Good idea. I like that better. The user should be able to set the selectedIndex and values separately.\n. /cc @jordwalke @sahrens\n. As of now, this is not possible because React Native looks for all RCT_EXPORT entries in its binary. \n. Alright, I'm currently working on an updated version of RCT_EXPORT and I will look into making this possible.\n. See #749.\n. Ah, I know the problem. Will look in a couple hours.\n. Yup. Mea culpa. Will fix shortly.\n. A fix for this is landing internally and will be updated on GitHub at the next sync. Thanks for bringing this to my attention. :beers: \n. Ah, looks like my fix landed in 0686b0147c8c8084e4a226b7ea04585362eccea8. Feel free to reopen this issue (or create a new one) if a similar problem appears. Thanks!\n. See #749.\n. You need to add pod 'React/RCTImage' to your Podfile.\n. Have you tried the following command?\nbash\n$ pod update\n. I can look at this more tomorrow, but I was under the impression that we supported inline onPress handlers (see here).\n. We should probably stop using these remote images. :laughing: \n. I assume this has to do with the way run loops (and run loop modes) work?\n. @ide That would definitely do it! :confused: \n. This PR was imported internally but @nicklockwood had some comments. Nick, can you make those comments here?\n. Looks good as well. If you can remove that one newline (sorry, OCD :wink:) and add an example as @brentvatne suggests, I'll merge this. :)\n. Sorry for all the nitpicks.\n. Sorry for all the nitpicks.\n. Waiting on event naming convention comments.\n. The geolocation code only uses -requestWhenInUseAuthorization so it would only look for the NSLocationWhenInUseUsageDescription key. The NSLocationAlwaysUsageDescription key and -requestAlwaysAuthorization methods support additional features that are currently beyond the scope of this module.\n. The geolocation code only uses -requestWhenInUseAuthorization so it would only look for the NSLocationWhenInUseUsageDescription key. The NSLocationAlwaysUsageDescription key and -requestAlwaysAuthorization methods support additional features that are currently beyond the scope of this module.\n. This seems like a bad idea considering it's undocumented and likely to change at any time. I vote to close this. @nicklockwood, thoughts?\n. This seems like a bad idea considering it's undocumented and likely to change at any time. I vote to close this. @nicklockwood, thoughts?\n. If we can support it, I would prefer to use inputAccessoryView to achieve this instead of a keyboard animation type.\n. @vishnevskiy Looks good if we can fix those couple nits.\n. I agree that I don't think this is the best way to do. @nicklockwood, what do you think? We spoke offline about this but I don't remember your opinion.\n. @nicklockwood I agree with what you're saying. Do we want to merge this for now or should someone write inputAccessoryView support?\n. Would love feedback on anything that needs clarification or updating.\n. > One of React Native's goals\n. > One of React Native's goals\n. This line is unnecessary.\n. This line is unnecessary.\n. I think this line is unnecessary but I may be wrong.\n. I think this line is unnecessary but I may be wrong.\n. You'll want to change the contentsGravity if you want full resize control.\n. You'll want to change the contentsGravity if you want full resize control.\n. Basically we don't currently support @2x or @3x GIFs so maybe change the contentsScale to 1.0? Or, if you want to keep RCTScreenScale(), we need to add that support, maybe by checking the filename suffix before the extension.\n. Basically we don't currently support @2x or @3x GIFs so maybe change the contentsScale to 1.0? Or, if you want to keep RCTScreenScale(), we need to add that support, maybe by checking the filename suffix before the extension.\n. This is a tiny nit, but I would move this to after the line that adds the NSFontAttributeName attribute to maintain consistency but that's really the only thing I have against this. Looks good otherwise! :+1: \n. This is a tiny nit, but I would move this to after the line that adds the NSFontAttributeName attribute to maintain consistency but that's really the only thing I have against this. Looks good otherwise! :+1: \n. I would give it a better name, and make it a static inline function.\nobjc\nNS_INLINE UIView *RCTViewHitTest(UIView *view, CGPoint point, UIEvent *event)\n. objc\ncase RCTPointerEventsUnspecified:\n  return RCTViewHitTest(self, point, event) ?: [super hitTest:point withEvent:event];\n. objc\ncase RCTPointerEventsUnspecified:\n  return RCTViewHitTest(self, point, event) ?: [super hitTest:point withEvent:event];\n. objc\nreturn RCTViewHitTest(self, point, event);\n. objc\nreturn RCTViewHitTest(self, point, event);\n. Nit: Remove extra line.\n. Nit: Can you fix the whitespace alignment on this method?\n. Fast enumeration with an external index variable (or -enumerateObjectsUsingBlock:) seems more appropriate.\n. I would use a NSUInteger index to match values.count and -objectAtIndex:.\n. You may want to break after this line.\n. You may want to break after this line.\n. NSNotFound is more often used for this purpose.\n. NSNotFound is more often used for this purpose.\n. Nit: One space after @\u200bproperty.\n. Nit: One space after @\u200bproperty.\n. Delegates should have \"weak\" retain semantics.\n. Delegates should have \"weak\" retain semantics.\n. Remove comment. The typedef is enough.\n. Remove comment. The typedef is enough.\n. Same.\n. Same.\n. I would recommend creating an -init method that takes in an NSURLSession, rather than creating a new one every time.\n. I would recommend creating an -init method that takes in an NSURLSession, rather than creating a new one every time.\n. Remove log\n. Remove log\n. Remove trailing whitespace\n. Remove?\n. If required, put as trailing comment after the ivar declaration.\n. Please reformat these dictionary literals\n. Here as well\n. It's totally fine. Yeah, Xcode is crazy when formatting literals like these.\n. Ah, I see. Perhaps passing in the session configuration and delegate queue?\nobjc\n- (instanceType)initWithSessionConfiguration:(NSURLSessionConfiguration *)configuration delegateQueue:(NSOperationQueue *)delegateQueue;\n. You don't need to cast the blocks.\n. objc\n- (instancetype)initWithSessionConfiguration:(NSURLSessionConfiguration *)configuration delegateQueue:(NSOperationQueue *)delegateQueue;\n. objc\n{\n  NSURLSession *_URLSession;\n}\n. ``` objc\n- (instancetype)initWithSessionConfiguration:(NSURLSessionConfiguration )configuration delegateQueue:(NSOperationQueue )delegateQueue\n{\n  if ((self = [super init])) {\n    _URLSession = [NSURLSession sessionWithConfiguration:configuration delegate:self delegateQueue:nil];\n  }\nreturn self;\n}\n. `[_URLSession downloadTask...`\n. Nit: Remove newline\n. Remove space after `*)` before `downloadData`. This method signature could be one line, actually.\n. Remove these newlines\n. Add trailing comma\n. objc\nBOOL openLinksInExternalBrowser;\n``\n. Nit: remove newline\n. This should be in a separate diff. It's unrelated to keyboard changes.\n. Please add trailing comma.\n. This would be(UIAnimationCurve)7but(UIViewAnimationOptions)(7 << 16).\n. It basically means that they become a single selectable group. That is, you can't select a child of the group but you can select the group. For example, a table view cell may have multiple labels inside, but you would want the table view cell to be accessible so the cell itself becomes a single selectable element.\n. Correct\n. When you perform the magic tap gesture, it starts at the selected element and bubbles up through the parents to see if anyone implements the magic tap gesture.\n. It seems okay to ignore the asset orientation in this case because-[ALAsset thumbnail]` should return a correctly oriented image. I still don't think this is a the correct solution though.\n. ",
    "amasad": "@a2 this is an interesting approach. We already have a solid filewatcher on the server so it might be easier to do it there. The current solution that we have is that the client keeps polling the package and checking for changes. It works well. But it's a little bit janky. If we can open a persistent connection to the server and the server can ping the client to refresh once a file changes (and a package has been updated) would be ideal. In the future, this would also help us in doing things like hot code swapping.\n. Webpack doesn't understand our module infrastructure out of the box. We have plans to support different module formats and different compilers. Additionally chokidar has so many problems but it's suffice to say it doesn't work on large codebases like ours. Regardless, we should get to a place where you decide what packager/module to use on the server.\n. I think we want to be flexible enough for users to make their own choices and maybe support some of the popular things out of the box. I'm on mobile now but I'll reply later with some of the constraints we had when building this and why we couldn't pick one of the ready made solutions.\n. In addition to having a proprietary module format, and because we have a large codebase and needed to use watchman for high performance and more reliable file watching, performance was a big concern. We needed the compiler to work in parallel and we even hand optimized source map generation so we can give error stacks on the client with correct line numbers. Maybe everything can be written as a plugin to webpack  but at what point you're reimplementing the program you're supposed to be plugging into. Finally, our vision to what our server should be doing is beyond packaging. We want to integrate Jest testing, Flow type checking, code optimization (dead code elimination, inlining etc).\nThat shouldn't mean that external react-native users shouldn't or can't use webpack, or for that matter shouldn't replace any of the things I mentioned. You should be able to use Mocha instead of Jest, or 6to5 instead of jstransform etc.\nAnyways things are still pretty much work in progress, and feedback like this helps. Thanks\n. @sokra @gaearon So initial experimentation looks good. However, like I expected, perf is the biggest concern:\n- It takes ~45 seconds to build our bundle.\n- It takes ~8 seconds to rebuild anytime a file is changed (with sourcemaps, without it's very fast)\nHere is what I want:\n- I want loaders to run in parallel so that initial build doesn't take forever. I can do it in the loader code, when I get a request I send it to my worker farm. Is this the best way to do it?\n- Combining source maps and inlining it in the file (which is what we need to do) adds too much overhead. What we do in our packager is we hand build the sourcemap after creating the bundle which ends up being incredibly fast. How do we do that in Webpack? is there a way to hook into the last step of the bundle creation?\n- Is there a way to cache loader results on disk so on startup we won't have to build the whole thing? We just stat the files to see if they changed.\n. > Now better alternatives envolved in the node.js community like https://github.com/xk/node-threads-a-gogo and we could try it again with threads.\nDoesn't look like this project is actively supported. And looks like there is no windows support. Not that we currently support windows but we want to be able to.\nnode-worker-farm works really well and super easy to manage. https://github.com/rvagg/node-worker-farm\n\nMaybe a similar alternative SourceMap devtool could be added to webpack. (More people would like that)\n\nIs source map devtool currently pluggable? Is there documentation on how to write the plugin?\n\nwebpack/webpack#250\n\nCool. It seems that you want to be able to cache your entire state? But I can say from experience that caching just the transformation (loader results in webpack lingo) should get you a lot of the benefits.\n. Thanks @sokra. What @pilwon said about how we're not ready to completely switch to a standard webpack. But I have some ideas on how we can integrate webpack as a frontend and have our packager be plugged in as loader and resolver. Anyways, what you did should come in handy\n. @gaearon  in this case what module where you requiring?\n. ok, it looks like you were requiring RepoActionCreators. Did that module ever exist and then was deleted?\nThe packager should definitely return an error and no code. But it also seems to be a bug that the error message has been replaced with a less useful one. cc @frantic \n. I answered this in another thread https://github.com/facebook/react-native/issues/5#issuecomment-72348446\n. The packager now looks at the browser field. superagent should be usable once they publish a new version following this PR https://github.com/visionmedia/superagent/pull/621 which just makes it not depend on a location object on the global object.\n. I'm glad it's working now. I'm glad we put a timeout on that so it doesn't fail silently :)\n. I doubt it's typical problem, it's the first time I've heard of it with watchman. And a lot of people are using it through my sane module. If it comes up again, will have a deeper look.\n. @frantic do you have steps for new project creation?\nThe packager currently only looks in the project root because our @providesModule format forces us to build a dependency graph ahead of time by reading files. Otherwise we'll end up reading your entire drive. There are probably ways around that. I'll look into this tomorrow make sure it works as expected \n. I think we should make it a mandatory dependency. We check for it and exit with a useful error message on how to install it if it's not available. Thoughts?\n. We can have brew install watchman in the npm postinstall script.\n. OK, after chatting with @ericvicenti I think the ideal thing to do here is to have a log message with a link to installation directions, because brew is 1) OS X specific and we'll soon have other platforms 2) it feels weird to install native binaries with brew via npm install.\n. Could you elaborate a little bit on your use case?\n. yes, working on that.\n. That failure is at a line where it's trying to JSON.parse a package.json file. I'm looking into this now but do you have any custom node module that may have a malformed package.json?\n. Hey @jimjeffers @ColinEberhardt can you add a console.log(content) before this line https://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js#L270\nThat way we know what is failing to parse.\n. It seems like it's choking on some test package.json files. I think we should ignore malformed package.json and just warn when building the dependency graph. Once the user require that module will figure out that something is wrong.\n. @ColinEberhardt will land a fix soon but try this for now:\n-        var packageJson = JSON.parse(content);\n-        if (packageJson.name == null) {\n+        var packageJson;\n+        try {\n+          packageJson = JSON.parse(content);\n+        } catch (e) {\n+          debug('WARNING: malformed package.json: ', packagePath);\n+          return q();\n+        }\n. Interesting, why do you have npm in mode_modules? Do we require it as a\ndependency?\nRegardless, will land the fix to ignore these malformed packages.\nOn Saturday, February 7, 2015, Colin Eberhardt notifications@github.com\nwrote:\n\nThanks @amasad https://github.com/amasad - here's the culprit:\nWARNING: malformed package.json:  /Users/colineberhardt/Projects/react-native/node_modules/npm/test/fixtures/config/package.json\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/47#issuecomment-73384718\n.\n. Haha no worries at all. Thanks for exposing this bug\n\nOn Saturday, February 7, 2015, Colin Eberhardt notifications@github.com\nwrote:\n\nAhhhh!!! Found the issue - I mistakenly cut and paste the instructions\nfrom the README:\nnpm install npm start\nNote, the lack of line-break, which causes an npm install npm. Must have\njust been running on auto-pilot!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/47#issuecomment-73385191\n.\n. This breaks the numbering of the list. i.e. repeats from one after the code block\n. I think if we separate into two code blocks it will work. I'll fix it.\n. closed via 5aa5e7a875d3c0ceff783d4deee8d4904f47873d\n. Can you restart your computer and try again?\nSometimes fseventsd on OSX gets into a bad state which can be solved by restarting. If that didn't work please bump the timeout we have in react-packager FileWatcher.js, maybe we need a longer one.\n\nLet me know if either of those work.\n. oops, sorry something went wrong with the update. Looking now.\n. closed via 5aa5e7a875d3c0ceff783d4deee8d4904f47873d\n. Thanks, this is fixed internally, just need to sync\n. closed via 5aa5e7a875d3c0ceff783d4deee8d4904f47873d\n. Three packages in two different package managers sounds like it would be hard to manage. What value does CocoaPod provide here?\n. > I think this is true at the moment because the project was advertised to people attending React Conf and are mostly doing web development, but I think ReactKit is going to get substantial traction when iOS developers get on board. Since CocoaPods is by far the most popular way to publish iOS libraries I think it is a good place to start even if something that's designed for polyglot modules supersedes it.\nIt sounds like this could be really useful for more advanced users. However, it seems like the common case would be developers writing JavaScript and not worrying much about Obj-C. Additionally, we're working on the Android version of ReactNative, and possibly a Windows version to follow. If we added their respective package managers as first-class dependencies, we can easily  get to a point were getting started would be too hard. Let's try to make the common thing easy and the more advanced thing possible.\nCan we have the initial project set up via npm and scripts and then more advanced users that want to write native components and use third party libraries  can have the choice to install and use CocoaPods?\n. closed via 8f68996ccd94cfc3a6b8794de9cb6f614334cdc6\n. Awesome! Yes we added multiple root support in the packager to support this use case. I'll pull this later today.\n. closed via 8f68996ccd94cfc3a6b8794de9cb6f614334cdc6\n. Tried to pull this but it broke internally because we're still on an older version of eslint. I'll pull it once we upgrade.\n. Tried to pull this but it broke internally because we're still on an older version of eslint. I'll pull it once we upgrade.\n. Thanks, we don't implement the full CommonJS spec. We use a different module format, where every module is declared via @providesModule in the docblock, see the example JS code:\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/SpinnerExample.js#L4\nHowever, I'm aware that this is counter-intuitive for users, because we support part of the spec, namely, packages and relative imports in packages (mainly to be able to use npm modules). Anyways, I'll see if this feature can be safely added, otherwise, will make sure there is an options for users to use CommonJS instead of @providesModule\n. Thanks, we don't implement the full CommonJS spec. We use a different module format, where every module is declared via @providesModule in the docblock, see the example JS code:\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/SpinnerExample.js#L4\nHowever, I'm aware that this is counter-intuitive for users, because we support part of the spec, namely, packages and relative imports in packages (mainly to be able to use npm modules). Anyways, I'll see if this feature can be safely added, otherwise, will make sure there is an options for users to use CommonJS instead of @providesModule\n. I actually forgot to close this issue. If lib is a dir with index.js require('./lib') will be the same as require('./lib/index.js').\nAnd you don't have to use @providesModule. There are still differences from node modules and we'll work towards that, but I'm also happy to fix any differences you see in the near term\n. I actually forgot to close this issue. If lib is a dir with index.js require('./lib') will be the same as require('./lib/index.js').\nAnd you don't have to use @providesModule. There are still differences from node modules and we'll work towards that, but I'm also happy to fix any differences you see in the near term\n. Can you try resetting the cache?\nThe easiest way to do this is to bump the version here: https://github.com/facebook/react-native/blob/master/packager/react-packager/package.json#L3\n. was that copy at a different path?\n. New path also means new cache. I'll bump the version and also expose a way\nto clear the cache from the command line.\nOn Thursday, February 19, 2015, Nick Poulden notifications@github.com\nwrote:\n\nYea. I tried cleaning the cache on the old one but it didn't seem to work.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/80#issuecomment-75171345\n.\n. Ah thanks, pacakge makes no sense haha\nWill pull this shortly.\n. we do some stubbing of xmlhttprequest, I'll look at the way we use it tomorrow and report back on steps on how to do it.\n. happy to pull this, just one nit\n. I might have pulled this, but haven't really closed the issue.\n. What do you mean by \"collide\"?\n. I thought we already omit source maps in the production build. Maybe we have an internal script to do that, if that's not the case and we do ship source maps, then that's pretty clowny.\n\nAnyways, thanks, will pull it shortly.\n. > From what I could tell, the code that generates the source string always concatenated the source map so your production build script (maybe it is a person?) might just truncate the end of the file.\nYou're right, I just checked the script strips out the source map.\n\nI noticed the source map (and file size -- minification helps too) really affect performance on the phone. This is just a rough idea but longer-term it would improve on-device development to have the packager always minify and have the phone be able to load source maps separately. Or if minification compromises debuggability, then it could make sense to expose a option in the package URL to toggle minification so that the simulator can load a non-minified bundle.\n\nYes, we talked about this. We want to have dev be overridable from the url, so you can toggle it from the device as you're developing. With this patch, this means that they don't get the source maps as well, which is great.\nAs for minification, with sourcemaps it should be the same debugging experience. That could be an option in the URL. It's worth noting that it could be slow to minify the bundle on each request, especially if we want to preserve sourcemaps.\nI wonder how much minification really affect performance, unless we're talking about Closure Compiler --  which does inlining and dead code elimination -- I'm doubtful that there is much change on runtime perf.\n. closed via caf21ae50dd34cc4618201349c8aecd15ac5e604\n. Thanks @caridy! Will get rid of the weirdness soon :)\n. @frantic Can the JS read it's own source? So we can parse out source maps from the comments as opposed to exposing the global variables?\n. Are there any errors in the simulator or in your terminal?\n. Cc @vjeux do we start the website with npm start?\n. wat, how did this work?\n. yup I forget to close it :)\n. ah, good point!\n. Thanks will pull this shortly\n. fixed via 0c83766e3b7d17674954bacf9ccc308d4dd4b2b3\n. Thanks!\n. I think your node version is outdated. Can you run node -v?\nBut we should definitely handle that.\n. yes that version of node has a bug with parsing the url query. Here is the correct behavior http://repl.it/fdz/1\nOn node v0.11.14 it's null. I'll add the fix anyways. Thanks\njs\nconsole.log(\n    \"should be an object: \",\n    url.parse('/path', true).query\n);\n. fixed via 0c83766e3b7d17674954bacf9ccc308d4dd4b2b3\n.  is this okay now?\n. Does this fix the horizontal scroll on mobile?\n. (y)\n. Thanks for your contribution. Pull requests currently have a bit of overhead to land so I can't prioritize stylistic changes until I make sure I landed everything else.\n. can you paste npm-debug.log?\n. Did that work?\n. Thanks @Palgrover!\nLet's keep this open if more people run into this we need to handle it. It seems fragile that we rely on the postinstall script.\n. @Palgrover can you open a new issue? we'll talk about it there\n. Can someone verify that this is fixed now?\n. cc @frantic \n. yes, there are plans to give you the option to use webpack. Meanwhile add particular extensions, is json what you want? any others?\n. I'm adding .json modules today :)\n. requireing .json landed internally, should land here next sync.\n. This is generated from the .md files, please edit those instead.\n. this been fixed via 5ce9ab143ae0e76a59d3f12b4419c0d5a18f7d85 but we still need to publish a new version to npm\n. Can you verify you installed watchman?\n. Can you increase the wait time in here and try again? https://github.com/facebook/react-native/blob/master/packager/react-packager/src/FileWatcher/index.js#L31\nYou can find this file in your project_dir/node_modules/react-native/packager/react-packager/src/FileWatcher/index.js\n. @nuno can you try bumping the wait time? and see if that works (see my previous comment)\n. @wez We have this now in the troubleshooting page. Should be safe to close?\nhttp://facebook.github.io/react-native/docs/troubleshooting.html#content\n. good idea. Let's just remove extra spaces and happy to pull it\n. Oh sorry, I thought this was an addition to this repo's readme. I don't think we should add more stuff to the getting started tutorial. It should be as small as possible.\nHowever, I think this would be a great addition to this repo's readme. https://github.com/facebook/react-native/blob/master/README.md\n. Fixed via #267\n. fixed in v0.2.1\n. duplicate of #218 \nFix coming\n. Can you open http://localhost:8081/index.ios.bundle in your browser and past the result somewhere?\n. Yup, it should just fail. Glad it's working for you now.\n. that'd be great!\n. I like something like the 3rd option. We can have a status page exposed from the packager that gets curled in the same line you pointed to.\ncc @frantic \n. @vjeux good point, but it'd be great to have an answer for this regardless (I'm sure someone will run into a problem regardless of the number we choose)\n. I believe this has been fixed via b6503ba4317f26665e8ae287d1addbe03cd50373\n. thanks\n. I think we need to update our eslint version first. Right?\n. I had this on my list of things todo. I'll take a look soon!\n. Didn't forget about this. Switching to babel very soon and then we can easily use this.\n. Thanks @ide! We just switched to Babel, and we can safely merge this now (after testing internally, with phabricator etc)\n@jaredly will take care of this.\n. :dancer: \n. Thanks!\n. Xcode should start a terminal. Could you check that for any error logs?\n. All the transformation is done by the worker https://github.com/facebook/react-native/blob/master/packager/transformer.js\nMight be able to just hack it in their and it should work. (source maps is a bit trickier for now)\n. Yes, I'd say avoid es6 modules for now. Can you share your code for others\nto see?\nOn Thursday, March 26, 2015, Stanislav Vishnevskiy notifications@github.com\nwrote:\n\nI managed to swap in babel and it works 95%.\nFor some reason even though it transforms import statements to requires\nthey don't seem to work. Does react-native crawl the requires BEFORE the\ntransform occurs?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/274#issuecomment-86838118\n.\n. Yup souremaps are currently hardcoded in the packager for speed and assume line/col numbers are preserved (jstransform) (this hack made things orders of magnitude faster for us) because source map generation is usually the most expensive part of packagers. But will try to have a better answer for this soon.\n. FYI the packager can now consume map sourcemaps returned from the transformer script\n. I really don't want us to add more items to the requirement list. It would\nbe awesome if you can port the ruby script to node!\n\nOn Thursday, March 26, 2015, David Hellsing notifications@github.com\nwrote:\n\nRuby is needed to run the init, or you will get a syntax error\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/facebook/react-native/pull/275\nCommit Summary\n- Added ruby as requirement\nFile Changes\n- M docs/GettingStarted.md\n  https://github.com/facebook/react-native/pull/275/files#diff-0 (5)\nPatch Links:\n- https://github.com/facebook/react-native/pull/275.patch\n- https://github.com/facebook/react-native/pull/275.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/275.\n. This is about the server use of WS (for debugging). When you npm install it installs native extensions which slows down the install.\n. @vkurchatkin great, how do we disable them? i.e. they don't install\n. What I meant, is that it's easy to implement a websocket server without node c/c++ extensions. And I don't know why they have to be native. Anyways, I'm just being pedantic :P\n. I don't think that's the greatest solution. Having many npm packages will make versioning really hard. Unfortunately I don't have better ideas for now. But I'm sure we can come up with something better.\n. A better approach is building a webpack loader and resolver that delegates to the React Native packager. This way webpack can process your files but will delegate to the packager for things it can't find, i.e. the core libraries. Any takers? should be a fun project.\n. > the resolver is simply recursing down from root to locate the package/module, right? \n\nyes\n\nThen it would be just a matter of applying the JSXTransformer\n\nI don't know what you mean here. You mean on webpack's side?\n\nI tried this a couple of weeks ago, but wasn't making much progress. I was hitting duplicate module problems from the root.\n\nIt'd be useful to share more details, like error messages, what exactly you've done etc.\n. published v0.2.1\n. @pedro uggh that's clowny, I'll get it back shortly\n. brought this back in v0.3.1\n. It should work now. But I know it's painful, working on making it a lot nicer.\n. What are the errors you're seeing?\n. Can you follow the instructions in this comment: https://github.com/facebook/react-native/issues/521#issuecomment-96827744\n. Any noticeable speed improvements?\n. Reopening so we can get rid of ruby crap\n. Yes, I think so.\n. It should run directly after you hit run in xcode. That wasn't your experience?\n. Did you try running npm start from react-native directory?\n. Can you try restarting your computer? The FileWatcher might be in a bad state\n. I doubt Xcode is the problem here. If the app opens in the simulator and renders it's probably something in the packager. This is a long shot but maybe the packager is run in in the wrong directory. Can you go to the directory you're changing and manually start the packager? You can use react-native start\n. Are there any logs in your terminal? It should say something about the\nrequests and time taken.\nIf there aren't any then there might be something wrong with the Cmd r\nitself\nOn Thursday, March 26, 2015, tehfailsafe notifications@github.com wrote:\n\nAlso watching some others on youtube and it seems there's a blink or flash\nin the simulator on the reload. When I hit Cmd-R there's no blink or\nanything, nothing happens at all.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/306#issuecomment-86816774\n.\n. @rywhee no <END> request:/index.ios.bundle event?\n. So it seems like the simulator is requesting the package and receiving it. Maybe the packager isn't picking up your changes. Try stopping the packager and starting it manually via react-native start in your project dir.\n. Does it at least pick up changes between stopping and starting the packager? (Trying to make sure it's not a file watcher issue)\n. If you have time please update the troubleshooting page with the your workarounds/fixes.\n. I like it. @frantic want to also take a quick look. There's been a few people having issues with the port, see #257 #304 \n. This landed and published in v0.3.3\n. it'd be better to fix it :)\n. If someone wants to take a stab at fixing this:\n\nlook here https://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js#L603\nand here https://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/index.js#L28\n. @aackerman can you list the issues you ran into by trying to use Bluebird? Maybe we can fix those quickly.\n. fixed via 0c83766e3b7d17674954bacf9ccc308d4dd4b2b3\n. One thing that has happened is I moved the packager's node_modules to the root. Making them crawlable by the packager which is probably slowing down things. This was to fix an urgent issue #225 \nWe should make the packager a stand alone node package.\n. Actually just tried this on a couple of machines and it seems to be running ok, it's not taking more than 5 seconds. Can you try restarting your computer?\n. Yes, we should fix it.\n. @jaygarcia can you open another issue for the render twice?\n. @ide Good point, although Internally, I think we have some modules living in node_modules with @providesModules. But we can make this a setting. We still need to read the directories to build the dependency graph but should be much faster than reading the files to look for providesModules.\n(If we used watchman for the dir reading it should become super fast)\n. @ide btw, did you update recently? The bluebird promise patch should get you 30% speed improvement.\n. I was mistaken that we didn't need to read those files, since the way the packager works now is that it builds up the graph ahead of time we still need to read the files to parse out the requires. Saving the docblock parsing isn't that big of a win. On a 14 second graph build time it saves 2 seconds. I'm going to try using watchman for the directory reading and file stating. I believe that'll have a bigger impact.\n. Additionally, caching the graph is not out of the question here but I always try to keep it as the last resort.\n. The node_modules part can be lazily constructed, however, haste modules cannot because the modules are not tied to the filesystem location. I think having the graph be half lazy / half eager would be more complex than caching. We have a cache module for the transformer and it's pretty stable, I'll see if it can be easily reused for this.\nBtw, I just reread your earlier comment. I had missed that this was slow for you even after start up time.\n\nWhen I make a small change to one file and load the bundle in my browser, it takes about 6-7 seconds.\n\nOoh, this shouldn't be the case at all. No recrawl happens when you change a file it should just get reprocess the module that changed and rebuild the package with everything else from cache. Can you double check the numbers? Maybe post the logs from your terminal\n. @ide good. I still want to make sure startup time is better but, I think, it's not as important as the change/reload cycle being sub-second. \n. Next sync a speed up will land which will make node_modules dependency reading lazy, i.e. unless you require a node module, that file will not be read.\n. Can you explain the problem this is trying to solve?\n. I guess @frantic has more context on this, since it's discussed in your previous PR.\n. Actually I just pulled the troubleshooting page from #347 Let's add this there. And I'll link it from the main GettingStarted page\n. We should have a troubleshooting page to include things and other hiccups like the port issue.\n. Thanks, that would be great. This way we can have the quick start be short and sweet. With a link to a troubleshooting page.\n. This is great! I like the screenshots\n\n. But where is this linked from? I can't find in the left hand side menu.\ncc @vjeux \n. Thanks! Will pull shortly\n. hmm, I just noticed that execFile is a node v0.12 api. I don't think we can depend on that for now. Anyway around this?\n. @spicyj oops, I don't know how I thought it's not. @rickyc sorry for the thrash, can you revive the PR?\n. Thanks, pulling internally\n. duplicate of #354?\n. Seems like this is resolved in #354 \n. Thanks\n. I think most bottleneck are transformation and filesystem. If you want to give it a go and report back numbers, I'll happily consider it :)\n. Thanks for the clarification @petkaantonov \nIf we end up standardizing on Bluebird in React Native we'll switch the packager to it as well.\n. This awesome, thanks for digging into it. \n. fixed\n. We plan to do that, this will solve #341 \n. @jsierles no. Go for it!\nI'd like to know your use case, I'm curious.\n. I tried to keep it as decoupled as possible, so it shouldn't be too hard. Happy to help.\n. Thanks for the suggestions.\nFor context, what we have now is incomplete and is just a stepping stone. Our goal is to abstract asset management away completely from the platforms. That way you can put assets where you please regardless of the platform, and you can share assets across platforms. Furthermore we can see a world where you want to update the assets over the internet.\nNot sure what could be dome in the near term to solve your issue cc @vjeux @nicklockwood \n. Thanks for the suggestions.\nFor context, what we have now is incomplete and is just a stepping stone. Our goal is to abstract asset management away completely from the platforms. That way you can put assets where you please regardless of the platform, and you can share assets across platforms. Furthermore we can see a world where you want to update the assets over the internet.\nNot sure what could be dome in the near term to solve your issue cc @vjeux @nicklockwood \n. Awesome, thanks!\n. If you updated this, let's update the one in DependencyGraph/index.js as well. Ideally let's export it from DependencyGraph as a a constant to be used here\n. That's strange, maybe the problem is with jest console.log. Can you try console.log(requireRe.toString())?\n. That looks good, I'll pull it.\n. @pilwon why do you care about generated code?\n. OK, this already landed internally though. @pilwon you can fix it in your \"import\" syntax pull requests because I haven't looked at it yet.\n. The packager now looks at the browser field. superagent should be usable once they publish a new version following this PR https://github.com/visionmedia/superagent/pull/621 which just makes it not depend on a location object on the global object.\n. This is autogenerated from the SliderIos.js file\n. What's the error?\n. Is this resolved?\nPlease reopen if it's still a problem\n. (y)\n. We also need to make the change here https://github.com/pilwon/react-native/blob/packager-es6-import-patch/packager/react-packager/src/DependencyResolver/haste/index.js#L28\nIt'd be great if we can consolidate them.\n. Thanks, will take a look shortly.\n. Looks good, let's just add a couple more tests\n. Great, thanks for being very response, @pilwon!\n. Do you have a use case?\n. We have plans to do that. For production it's a bit tricky and needs some thought.\nDo you want it for production or development use? \n. @jhdxr what do you mean by that? You can always require modules. If you want to dynamically load files you can use XHR and eval\n. @jsierles don't most async JS loaders do xhr+eval? I'm sure require.js and webpack do. The old ones too (like LAB.js etc)\n. Oh cool. cc @philikon who could be interested in this.\n. Can you add more information about how you're using typescript? Do you compile your typescript to JS and then have the packager pick them up?\nIf so can you paste the generated bundle somewhere and link it here?\n. Yes, we're already half way there, we just need to be abel to use source maps from those transformers as well. As for grunt/gulp etc. We want to make sure you are able to use your own build scripts, but for us to do that there is some work needs to be done in React and in our internal codebases so that's still some time away.\n. Thanks, I'll keep this open as a task to support consuming source maps from the transformer.\n. This is now fixed, if you return a .map property from your transformer the packager will use it and combine it with other sourcemaps. See:\nhttps://github.com/facebook/react-native/blob/8b93b99d4a769f86fffc95d65434f2f6a3fd827d/packager/react-packager/src/Packager/Package.js#L37-L41\n. Map property should be the sourcemap itself\nOn Wednesday, January 20, 2016, Scott Nelson notifications@github.com\nwrote:\n\n@qimingweng https://github.com/qimingweng Not entirely sure but I'm\nexperimenting with the following approach:\nvar transformer = require('react-native/packager-transformer');\nmodule.exports = function (data, callback) {\n  if (/* data.filename needs source map */) {\n    callback({\n      code: data.sourceCode,\n      map: data.filename + '.map' // not sure if this is right\n    });\n  } else {\n    transformer(data, callback);\n  }\n};\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/393#issuecomment-173247497\n.\n. > Is packager intended to live on?\n\nIf we can use webpack we will. For our codebase webpack is 10 times slower for us. 8 seconds per file  change is a no go. I suggested to the maintainers here what could be done to make perform better #5 \n\nWill it just grow to support the features of browserify/webpack?\n\nIdeally, we'll get to a point where you can use your tools and infrastructure regardless of what we use for core.\n\nWill it still be faster once it does?\n\nI assure it's a lot faster than webpack/browserify combined for bundling and sourcemaps. The only slow part if the initial file crawl. Which we have to do -- and they don't -- because our module format isn't tied to the file system.\n\nPersonally I'd rather see packager shrink to be the bare minimum required to load a JS file into native, and then the existing features could be spun out separately and be replaceable by other existing bundling solutions.\n\nThis is the plan :)\n\nAt the moment it's not entirely clear to me what is in scope / not in scope for packager - I can't even figure out how you're getting Xcode to launch it on build! :confused:\n\nThe readme is a great place to start https://github.com/facebook/react-native/blob/master/packager/README.md\n. UMD might be a good solution, might be helpful in removing the few globals that we have, like __fbBatchedBridgeConfig\n. Thanks @mjohnston! There is an open issue for consuming source maps from custom transformers and I'll get to it soon.\nYour project sounds awesome, I'm going to start pointing people interested in using webpack to your project. My only minor concern is that we're currently working on a platform-independent solution for assets and the packager will play a role in that. Meaning, we don't want React Native developers to learn to have to learn the different ways to manage assets (for every platform they want to target) and just use the same method everywhere, and be able to put images with the code and even publish components to npm with images. We're still hammering out the details, but I'm sure you can follow the same approach where you're delegating to react-packager. I'll ping you once we start rolling this out and I'll write some docs.\n. wrt consuming source maps. Now, if you return a map from your transformer the packager would use it to generate the end source map\n. Maybe we should add this info to the message?\n. fixed via #581 will publish v0.3.2 soon\n. Do you have any suggestion on what the best way to handle this?\n. Happy to pull this but this tracks our internal require system. If define doesn't work I would want to have an understanding of why first. \n. It's dead code at this point. Since we had to stick to a mixed mode of providesModule and node dependencies haste is the only one that lived. I might as well just delete that code.\n. This landed, will publish a new version soon.\n. I would love to make it more strict. We had some issues internally that stopped us from doing that. Anyways, that's on top of my list.\n. nice shortcut!\n. let's merge this with #1098\n. > packager warning, instead of runtime error, for unknown modules required.\nWe should really do that. Actually the packager does a ton of debug warnings, the reason it doesn't throw errors is probably a historic one. I'll look into it.\n. This is now fixed that we look at the browser field in the package.json. Tested using:\njs\nvar Rx = require('rx');\nvar obs = Rx.Observable.of(42);\nobs.forEach(function (x) { alert(x); });\n. I think this might be jstransform reserved name quoting transform. Can you open the issue on the jstransform repo?\nhttps://github.com/facebook/jstransform\n. @zpao although I wrote it, I forget that it's togglable\n. I think we have a transform internally that does, I'll take a closer look. Do you know if closure compiler would be able to easily do that?\n. I believe babel does simple dead code elimination now cc @sebmck\n. @sebmck This is awesome! Can you give an example of the awesome constant folding that would require understanding statements?\n. I think we can handle this case in the RegExp. If you want to take a shot at it look at \nhttps://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js#L603\nhttps://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/index.js#L28\nNote there is another PR trying to make it so we share the same Regexp and fixes some issues with whitespace: #316 \n. Thanks for the write up. Happy to take PR, but it'd be great if we split them into multiple PRs.\nWe're definitely interested in making it work on windows, especially as we support more platforms. But I'm curious how are you able to do iOS development on windows?\n. Thanks!\n. Does it happen only some of the time?\nI'll increase the timeout\n. Can you try the steps in the troubleshooting? \nhttp://facebook.github.io/react-native/docs/troubleshooting.html#watchman-took-too-long-to-load\n. @chucai There are some steps here to help you debug https://github.com/facebook/watchman/issues/90#issuecomment-87427749\ncc @wez \n. Seems to be resolved, closing for now. Feel free to reopen if you're still seeing the issue.\n. Can you open the bundle in your browser and paste it somewhere?\nhttp://localhost:8081/index.ios.runModule.bundle\n. ok, I think I can fix the jest error (or at least hack around it). I'll work on pulling this\n. Tested on internal source (which is considerably larger) and this yields a consistent 30% speedup. Great job! I'll sync the changes here soon.\n. I already updated that internally :) I should've mentioned that\n. I just need to sync from our internal repo. Our tools are not in a great place now, but we can't merge pull requests directly from github we have to go through internal review process\n. sorry for the bad experience. Does restarting the server helps?\nThis is certainly a stopgap period until we get to a point where the server manages the assets fully and properly. But first I'll make sure this is more reliable.\n. @notduncansmith Yup, this issue is fixed in v0.3.1\nIs everyone here on this version?\n. > Can confirm it works if you revert to v0.3.1;\nDo you mean update to v0.3.1? Since it's the latest version.\nIt'd be really helpful if you can tell me it this work: Can you follow the standard project creation flow in the getting started guide? Add an image and report back if this works?\nhttp://facebook.github.io/react-native/docs/getting-started.html#content\n. OK so closing for now. However, this will get even better soon (better error messages, better workflow etc)\n. @debreuil can you open this as a separate issue?\n. UPDATE: look at what @ide suggested below, as a last resort do the following:\nI'm actually not entirely sure what the issue might be here. To work around this use @JonathanMatthey suggested: {{ uri: \"myimage\", isStatic: true }}\n. Thanks @ide\n\nUse PNGs. Make sure to use .png extension.\n\nWe should be also supporting JPGs now\nAdditionally, I'm writing up a post about what we're working on to make asset management a lot better.\n. Feel free to send PR's to add any other extensions :+1: \n. I wrote about what we're working on for the new asset dependency management here: #1043\n. Thanks!\n. @frantic can you take a look?\n. The seem to be working. http://facebook.github.io/react-native/docs/linking-libraries.html#content\nMust've been fixed in some other PR. Thanks\n. We don't have a great answer to that yet, but it's something we're thinking about.\n. No, sadly. But I hear @philikon is thinking about this.\n. Sounds like it could be possible, however, we don't have any tools in place to do that, nor do we do that internally. If this worked for you please share back with the community. Thanks\n. @jnak I honestly don't have that much context on this. Good luck!\n. Fixed via 2cced4b94056770e923e3dba45d5f54506862ea9\n. published v0.3.3\n. We use RocksDB. I don't know the details. Maybe @sahrens does.\n. Thanks!\n. Can you try the suggestions here? https://github.com/facebook/react-native/issues/225\n. @andyf625 can you add this to our troubleshooting page? :)\nhttps://github.com/facebook/react-native/blob/master/docs/Troubleshooting.md\n. actually I just did that since it's simple enough https://github.com/facebook/react-native/commit/52b64907a8d55373e03e697bf5bcf6ede6fe5dc7\n. cc @forbeslindesay \n. Patches welcome! :)\n. > Hey. You are currently using sane for file watching. How about using chokidar?\nWe're primarily interested using watchman. Sane is just use for a fallback. Watchman is battle tested on facebook infrastructure, developer laptops and many open source users.\nI'm still open to exploring that option but I believe that watchman is a much better technology.\n\nChokidar was downloaded 58K times just yesterday. It is also used by socketstream and stuff like Gulp is switching to it right now.\n\nThat's great. But by the same standards watchman is a much popular open source project than chokidar, it has 2.5k github stars while chokidar has 700 :)\n\nChokidar is obviously more tested in real-world applications - we have a solid track of 24m+ stable releases. \n\nAgain, watchman is also battle tested 36 releases :)\n\nWe are not aware of any \"node watch bugs\" you mention on the web site \u2014 with correct implementation. Chokidar also has huge test coverage.\n\nYes, because you use a native fsevents module.\n. > Hey. You are currently using sane for file watching. How about using chokidar?\nWe're primarily interested using watchman. Sane is just use for a fallback. Watchman is battle tested on facebook infrastructure, developer laptops and many open source users.\nI'm still open to exploring that option but I believe that watchman is a much better technology.\n\nChokidar was downloaded 58K times just yesterday. It is also used by socketstream and stuff like Gulp is switching to it right now.\n\nThat's great. But by the same standards watchman is a much popular open source project than chokidar, it has 2.5k github stars while chokidar has 700 :)\n\nChokidar is obviously more tested in real-world applications - we have a solid track of 24m+ stable releases. \n\nAgain, watchman is also battle tested 36 releases :)\n\nWe are not aware of any \"node watch bugs\" you mention on the web site \u2014 with correct implementation. Chokidar also has huge test coverage.\n\nYes, because you use a native fsevents module.\n. > He has the point. If we have serious problems, why doesn't anyone report them? Are you absolutely sure that sane (which uses child_process) would handle large codebases without issues?\nI did report them in the past. It was incredibly slow to use on our codebase, I needed a ready event which I sent a pull request for that wasn't accepted. Even with the ready event it was no match to watchman's instant daemon model.\nAlso \"child_process\" is dishonest. We only exec to show an error message that watchman isn't installed.\n. > He has the point. If we have serious problems, why doesn't anyone report them? Are you absolutely sure that sane (which uses child_process) would handle large codebases without issues?\nI did report them in the past. It was incredibly slow to use on our codebase, I needed a ready event which I sent a pull request for that wasn't accepted. Even with the ready event it was no match to watchman's instant daemon model.\nAlso \"child_process\" is dishonest. We only exec to show an error message that watchman isn't installed.\n. > Would be great to go full NPM without homebrew though \u2014 opened the issue facebook/watchman#91\nMaybe @wez can think of a way this could work. But the way watchman works -- and what makes it fast and reliable -- is that it's a daemon.\n\n@amasad is that the exec check?\n\nSo this shells out to get the socket name and then just uses unix sockets to connect to watchman.\n\n@amasad Do you perceive that there would be value in adding a watchman option to chokidar for users willing to do the separate non-npm install?\nIf we were to move in that direction, is there potential for consolidating efforts toward a single library, or are there any other concerns/shortcomings with the recent versions of chokidar that would prevent you from considering this?\n\nYes, this sounds great. If chokidar has all the backends/fallbacks that sane has then there is no reason for sane to exist. \n. > Would be great to go full NPM without homebrew though \u2014 opened the issue facebook/watchman#91\nMaybe @wez can think of a way this could work. But the way watchman works -- and what makes it fast and reliable -- is that it's a daemon.\n\n@amasad is that the exec check?\n\nSo this shells out to get the socket name and then just uses unix sockets to connect to watchman.\n\n@amasad Do you perceive that there would be value in adding a watchman option to chokidar for users willing to do the separate non-npm install?\nIf we were to move in that direction, is there potential for consolidating efforts toward a single library, or are there any other concerns/shortcomings with the recent versions of chokidar that would prevent you from considering this?\n\nYes, this sounds great. If chokidar has all the backends/fallbacks that sane has then there is no reason for sane to exist. \n. Here is the watching backends that would be great to support in this consolidated effort:\n1. watchman -- used for high performance servers and large codebases\n2. fsevents (what chokidar has) -- used for the common case where the user is on OS X and can install native module\n3. node fs.watch (still better than polling) -- used for common linux and windows users \n4. polling (currently done via the watch module on sane) -- used for environments where no native fs events exists, e.g. vagrant\nThoughts?\n. Here is the watching backends that would be great to support in this consolidated effort:\n1. watchman -- used for high performance servers and large codebases\n2. fsevents (what chokidar has) -- used for the common case where the user is on OS X and can install native module\n3. node fs.watch (still better than polling) -- used for common linux and windows users \n4. polling (currently done via the watch module on sane) -- used for environments where no native fs events exists, e.g. vagrant\nThoughts?\n. @es128 cool! It seems like chokidar has really improved in the year that I hadn't looked. Let's make this happen.\ncc @stefanpenner any concerns?\n. > get improved fsevent handling upstreamed to iojs/node\nDidn't anyone check to see if things got better in node v0.12 or iojs? \n. > get improved fsevent handling upstreamed to iojs/node\nDidn't anyone check to see if things got better in node v0.12 or iojs? \n. This long running chokidar issue was brought to my attention. I'm going to leave a mention of it here for posterity https://github.com/paulmillr/chokidar/issues/219\n. Going to close because it's not really actionable (we can continue to discuss). Let's revisit if once we have a plan to address the issues above.\n. Going to close because it's not really actionable (we can continue to discuss). Let's revisit if once we have a plan to address the issues above.\n. We have it in the troubleshooting page. @wez is it long before you update brew recipe?\n. Cool, I'll pull this now and hope that master on watchman will continue to be stable until we publish 3.1.\n. I thought we supported this use case. Thanks\n. I have an internal fix for this. Aiming to get it out next sync :)\n. This landed internally, should land here next sync.\n. This should be landed. Reopen if it doesn't work https://github.com/facebook/react-native/blob/72c5e5d981a21ede12dcd76de5ca22a398c8bcaf/packager/packager.js#L203\n. Try the comment here https://github.com/facebook/react-native/issues/521#issuecomment-104731068\n. The main reason for this issue is that we currently ship React in source form (react-tools) inside react-native. That means that it's written in ES6 and it depends on globals like __DEV__, which your jest setup should support that. We have plans to start shipping react from npm, (I think with React v0.14). @zpao can you confirm this?\nIn the mean time here is what you can do: adapt the jestSupport directory and the jest config in the package.json to be used with your project.\n. This landed internally, should land here next sync.\n. I didn't know that require('./package') resolved to package.json. I think it just works for hard coded .json files. @alexaivars can you confirm that it doesn't work?\n. @paulgessinger Yeah, require('./package.json') works, no?\nThe issue @alexaivars is explaining is omitting the \"json\". \n. Fixed this internally, should land next sync.\n. Can you explain why we need to change the generated output? It's not really going to run on the filesystem, it's only in the browser. Why do we need to change the module names?\n. @joewood that'd be great. Having the same output regardless of the platform is great. Reproducible  and consistent builds are a good virtue of build systems.\n. I can rebase and do some testing. Can you add a test plan? What version of windows does this support? and how do you test it? (can you run xcode etc on windows?)\n. @frantic I'll have to update multiple projects we depend on, and hopefully it doesn't cause any performance degradation (it will for people with lower ulimits). But I'm fine with that.\n. :dancers: \n. This looks good. Will pull shortly\n. Looks like it wasn't :/ I'll pull it\n. What's the ideal way to do it?\n. What's the ideal way to do it?\n. @nicklockwood yes, I just mentioned images becuase of the special consideration to scales, but otherwise all other assets should just work.\n@wwwsevolod there's been a few discussion about why we didn't go with webpack from the start but it boils down to performance (webpack is orders of magnitude slower), the problem that we have a proprietary module system that needs to interop with, and finally non of the current asset loader does what we want it to do. However, this shouldn't stop you from using webpack. Take a look at @mjohnston webpack integration project which works really well, I'm open to patches or whatever is needed to support that project.\n@jaygarcia I already adressed the json loading thing, it now returns a parsed JS object, just like in node.\n. Might be a regression while we're working on #1043 cc @frantic \n. Fixed this internally, should go out in the next sync. Sorry for the delay.\n. > Perhaps the packager should warn if it finds require() calls that it can't resolve, although this might be too noisy when taking 3rd-party packages into account. Maybe a practical balance is just to warn for custom! resources. cc @amasad\nYeah, too noisy, we also have a few \"unresolved\" requires in core. warning for custom! resources sounds good.\n. This should be fixed now: see https://github.com/facebook/react-native/blob/07937620c0694afe016887df6a64e4d99e3426bb/packager/react-packager/index.js#L51-L62\nreopen if it's still a problem\n. Yeah seems like it should be part of polyfills. @frantic any objections to making InitializeJavaScriptAppEngine a polyfill module?\n. Yeah, I hate this discrepancy. JavaScript Core has rest param support whereas chrome doesn't. Pushing the switch to Babel shortly, and it should include this transform.\n. :neutral_face: \n. Yup. Come Friday this will disappear :) \n. :+1: pulling.\n. I think we're interested to get FB on v0.12. In fact, a few projects started upgrading. cc @DmitrySoshnikov \n. Thanks. fseevents is terrible\n. looks good, thanks!\n. OK updated the internal diff with the recent changes\n. yes\n. I'm not familiar with the tradeoffs here. I'll leave it to @frantic\n. huh, can you add test case? A specific npm module?\n. I can't replicate this with the latest react-native. Which version are you using?\nLatest uses Babel transformer and we don't print the comments, which I think is the problem in this case. If there is a comment at the last line then it would cause a problem. I'll fix this by adding a newline, but I'm just curious about if you're using babel or are you at an older version?\n. Landed a fix for this internally. Meanwhile until the next sync you can update to start using babel which shouldn't be an issue with it.\n. There should be a v0.5.0-rc release. \n. I have a diff that will land by next diff. It's what we discussed before, @ide. The packager will only scan react-tools and react-native for providesModule, other modules will use node module resolution. As a bonus, node module resolution will be lazy, and should speed up server start up (internally that went from 20s to 15s).\nWorking on more speed ups and trying to contain Facebook JS infra funkiness to creep out into the open source community. \n. Couldn't get this in by the sync. Shooting for the next one.\n. Can you please mention .babelrc to customize the transformers? see #1451 \n. Yeah, you need to reset the cache when changing anything about the compiler. Any ideas of how we can incorporate .babelrc in the cache hash?\nhttps://github.com/facebook/react-native/blob/master/packager/react-packager/src/JSTransformer/Cache.js#L160-L170\n. Also should we mention .babelrc in the docs?\n. @sebmck do you have any ideas on how to override the whitelist via babelrc?\n. @ide looks like we get .babelrc for free (thanks @sebmck!)\n@johanneslumpe: this looks good, but as @ide mentioned let's make sure this does what the user expects it to do. I left inline comments.\n. Just fix the absolute-path thing and this should be good to go.\n. Great! Will do pull it. It'd be nice to add some docs to that as well :) :dancer: \n. Sorry for the late reply. Just a few nits on the docs\n. What @ide said re npm packages. Actually, since we are currently checking in the modules internal, I don't see any harm in unpinning the dependencies. Anyways, we want to update Babel anyways, to get the new perf wins.\n@DmitrySoshnikov: I believe you were starting to update babel?\n. I believe @frantic is the best person to review this\n. Do you have sourcemaps turned off in chrome?\n. nit: can you add a space after the if\n. remove space\n. remove space\n. remove space\n. remove space\n. nit: space between ) and {\n. nit: space between ) and {\n. nit: spaces between if and ( and { on the right please\n. nit: spaces between if and ( and { on the right please\n. let's also just make it /status\n. let's also just make it /status\n. :+1: \n. :+1: \n. Can we please not introduce more ruby? We already have too many requirements and this one has been causing problems #275 #293\nNode would be easy to do that sort of thing in as well.\n. Can we please not introduce more ruby? We already have too many requirements and this one has been causing problems #275 #293\nNode would be easy to do that sort of thing in as well.\n. can you add test where there is no space between the comma and the default?\n. can you add test where there is no space between the comma and the default?\n. and a test where there are no spaces between the named imports and the { }\n. no idea where this came from\n. no idea where this came from\n. recently fixed this error in sane -- the file watcher.\n. recently fixed this error in sane -- the file watcher.\n. but it's fine to keep\n. but it's fine to keep\n. I'm not convinced that we need to change runtime code to support windows. Does node, browserify, or windows change the generated output for windows?\nIf we fixed things internally we can generate the same output for windows or unix, i.e. the bundle could continue to refer to modules using /\n. I'm not convinced that we need to change runtime code to support windows. Does node, browserify, or windows change the generated output for windows?\nIf we fixed things internally we can generate the same output for windows or unix, i.e. the bundle could continue to refer to modules using /\n. jest should only be in devDependencies\n. jest should only be in devDependencies\n. just add the require.resolve('./transformer') here\n. just add the require.resolve('./transformer') here\n. here pass options.transformer verbatim\n. here pass options.transformer verbatim\n. We want to support v0.10 (after all jest doesn't run on v0.12 yet). We have a package installed for this absolute-path\n. We want to support v0.10 (after all jest doesn't run on v0.12 yet). We have a package installed for this absolute-path\n. We don't really have to wait on all interpreters. We can just end the sentence at by allowing you to use new JavaScript language features.\n. We don't really have to wait on all interpreters. We can just end the sentence at by allowing you to use new JavaScript language features.\n. Awesome! Thanks for the links\n. Awesome! Thanks for the links\n. add the: \"check the Babel documentation\"\n. add the: \"check the Babel documentation\"\n. on its supported transformations for more details.\nto\nfor its supported transformations and more details.\n. on its supported transformations for more details.\nto\nfor its supported transformations and more details.\n. \"beyond the babel\"\nCapitalize babel.\n. add do\n. Can you check if the error has the string Cannot find module before going on with the following code. Otherwise we should rethrow the error to make sure we don't miss important things.\n. extra space between ! and isMissingModule\n. ",
    "gaearon": "Why not leverage existing solutions like Webpack and webpack-dev-server? It does what you described. It uses chokidar for watching. The client code learns by a socket that update is available and either refreshes (without hot reloading), or does the hot reloading thing if it's configured.\nSee also https://github.com/facebook/react-native/issues/10#issuecomment-72341077 where I also rant about not using Webpack.\n. > Webpack doesn't understand our module infrastructure out of the box.\nDo you mean custom stuff like package-scoped \u201cglobal\u201d filenames? This can probably be done with a plugin. Or is it too vastly different?\n\nAdditionally chokidar has so many problems but it's suffice to say it doesn't work on large codebases like ours.\n\nThey fixed a lot of issues in 1.0. I used to find it unreliable for months, but I suggest you give it another try unless you're absolutely sure.\n. Also Webpack does not depend on chokidar itself, its new default watching plugin does. It's entirely possible to plug another watcher implementation, but have exactly the same infrastructure for hot updates, etc.\n. By the way, I'm sorry if this is something you don't plan to consider, I totally understand that.\nI'm just saying it's a shame we'll have a different \"push code updates\" system on React Native because, if it is implemented, I expect it to only support \"refresh\" signals, whereas an existing Webpack solution supports Hot Module Replacement. Hot Module Replacement is vastly superior to a \"refresh\" signal system but supports it as a degraded simple case, so it's usable from day one.\nMany React developers consider hot replacement useful. It's not trivial to implement, so if we're not reusing Webpack's HMR runtime, we likely won't get it soon..\n. Thank you, appreciated!\nIt would be awesome if you exposed a way to reload a page and a way to \"inject a script\" to JS side. Then we'd be able to use any server and any (hot or not) reloading solution.. I think.\n. I'm sure Webpack's plugin API would be very hard (it's very tied to how Webpack processes modules, down to compilation phases) so it's probably entirely out of the question.\nImplementing Webpack loader support is easier, but only for trivial things like transforming files. It's a lot more work for complex loader features (pitching loaders, async transformers, marking dependencies, require.resolve, etc). RN packager could implement a subset of those, but it is not worth it in my opinion, as it would only cause fragmentation in Webpack ecosystem (is that particular loader supported by RN?) and I doubt RN team wants to be constrained by Webpack APIs.\nA more sustainable alternative, in my opinion, is to let users choose a bundler, and add whatever polyfills/bridges we may need for Webpack to work with RN:\n- WebSocket API or equivalent\n- An equivalent of window.reload()\n- An equivalent of loading <script> tag dynamically\nI really wish @sokra was with us in this discussion!\n. @sokra I heard you have access to this repo now, care to weigh in?\n. > The version from reactconf seem to have at least something for server to react-native notification, because saving causes a reload in the video...\nI think an earlier comment by @amasad says that:\n\nThe current solution that we have is that the client keeps polling the package and checking for changes.\n. > Is source map devtool currently pluggable? Is there documentation on how to write the plugin?\n\nYeah, absolutely, it's pluggable. Here's the default SourceMapDevToolPlugin:\nhttps://github.com/webpack/webpack/blob/master/lib/SourceMapDevToolPlugin.js\nHere's Webpack plugin API:\nhttp://webpack.github.io/docs/plugins.html\nYou can remove devtool from config and instead put your plugin in plugins.\n. Gotcha! I'll try that.\n. Sure, once I'm more comfortable with the setup I'll take another look!\n. It looks like this message replaces the original message very quickly.\n. > ok, it looks like you were requiring RepoActionCreators. Did that module ever exist and then was deleted?\nNo, I mistyped the filename. When I fixed it, the error went away.\nIt's just unfortunate that the real error is always quickly replaced with a vague one.\nIn fact if you mistype a filename and keep pressing Cmd+R really really fast, that'll give you time to read the first actual error on the screen (before it gets replaced by the vague one).\n. Isn't module system supposed to take browser\u00a0\u201credirects\u201d into account as specified in package.json? I think it's the reason I didn't have this problem with Webpack:\n(from superagent's package.json:)\njs\n  \"browser\": {\n    \"./lib/node/index.js\": \"./lib/client.js\",\n    \"emitter\": \"component-emitter\",\n    \"reduce\": \"reduce-component\"\n  },\n  \"main\": \"./lib/node/index.js\",\nReact Native's bundler doesn't seem to look at these.\nWhich triggers another question: why does RN use its own bundler instead of Webpack or Browserify? There may be other potential issues lurking in there, already solved by existing bundlers. There is an entire ecosystem of transformers, including support for AMD or ES6 or transpile-to-JS languages.\nShouldn't we leverage this by default?\n. > I know React Native handles animations, but I must be missing it in the source. I see InteractionManager which lets you schedule code to be run after animations are completed. But what is actually applying the animation?\nI'm not a React Native expert but I bet animations are supposed to be done with requestAnimationFrame which seems to be implemented. You may then be able to use something like:\nhttps://github.com/chenglou/react-tween-state (stable)\nhttps://github.com/chenglou/react-state-stream (bad perf, unstable, but potentially much more fun)\n. I'm pretty sure I read some tweet saying requestAnimationFrame bridges to CADisplayLink so it should work properly.\n. Related: #5 \n. Commander wasn't a nice option for Babel:\nhttps://github.com/babel/babel/issues/836#issuecomment-75135408\nhttps://github.com/babel/babel/issues/756#issuecomment-74286864\n. @dsibiski Thanks so much for this tip.\n. Does it matter though? The distinction is mostly important for Node apps.. Let's just use the hook declared outside.. Let's declare it once at the top, close to hook (since it's now available).. It's a bit confusing it's undefined when props is emptyObject but an empty object if props is undefined. It's better if we either always make it an emptyObject when it's missing, or always make it null when it's missing.. Let's do return this.constructor.displayName || this.constructor.name || 'Unknown';. ",
    "ykagan": "I'm curious if you guys think it would help for us to provide support for webpack's loader and plugin API out of the box for our packaging system? \nThat would give us access to most of webpack's module ecosystem while still giving us flexibility to implement features that webpack may not be designed for - particularly features around testing, code intelligence, flow integration, etc.\n. ",
    "sokra": "Hi,\nit looks like react-native just expects a URL to the bundle file, which is provided by the packager. Technically the packager could be replaced with webpack.\nreact-native also uses a non-standard way to append the SourceMap to the source (RAW_SOURCE_MAP = ... is appended). This could be implemented as webpack plugin. Or react-native could be changed to use the standard //#sourceMappingURL (errorToString may need to be changed to be async, because it need to fetch the SourceMap from the server).\nI also think it's better to use webpack, because the current packager may only support a subset of npm modules (there are really weird modules that need to be parsed).\nSo until now, nothing complex...\nFor Code Splitting and Hot Module Replacement we need something to eval a javascript from a remote URL. Best is when react-native exposes a way to do that. i. e. importScripts like in a WebWorker or even better something async.\nHot Module Replacement also need to do a full reload of the app. This need to be accessible from the js side. (Looks like this is currently not possible)\nIf we got this, Hot Module Replacement would work, but only with polling... For a live experience we need a server to react-native connection, i. e. a WebSocket (Or we could use long polling).\nThe version from reactconf seem to have at least something for server to react-native notification, because saving causes a reload in the video...\n. > I want loaders to run in parallel so that initial build doesn't take forever. I can do it in the loader code, when I get a request I send it to my worker farm. Is this the best way to do it?\nI had the feature that loaders can run in a separate process in webpack 0.6 or so, but spawning a separate processes was pretty expensive and sending source code between processes too. Now better alternatives envolved in the node.js community like https://github.com/xk/node-threads-a-gogo and we could try it again with threads.\n\nIt takes ~8 seconds to rebuild anytime a file is changed (with sourcemaps, without it's very fast)\nCombining source maps and inlining it in the file (which is what we need to do) adds too much overhead. What we do in our packager is we hand build the sourcemap after creating the bundle which ends up being incredibly fast. How do we do that in Webpack? is there a way to hook into the last step of the bundle creation?\n\nYeah... (high quality) SourceMaps are pretty slow. They are complex and the source-map lib is slow.\nThe current implementation in react-native is faster, because it only maps lines 1 to 1 (note: the jsx transformer keeps line numbers)... Maybe a similar alternative SourceMap devtool could be added to webpack. (More people would like that)\nwebpack also use some cools tricks to get faster SourceMaps:\n- devtool: \"eval-source-map\" Wraps every module in eval(\"... //#sourceMappingURL=data:...\"). So we can create the SourceMap once and cache the result for recompilations.\n- devtool: \"eval\" Wrapps every module in eval(\"... //#sourceURL=...\"). This doesn't show original sources, but at least give the module a proper name. (That's really fast.)\nOf couse this is not supported by react-native currently...\n. > Is there a way to cache loader results on disk so on startup we won't have to build the whole thing? We just stat the files to see if they changed.\nhttps://github.com/webpack/webpack/issues/250\n. @amasad I used the easter holydays to implement new SourceMaps for webpack. devtool: \"cheap-inline-source-map\" should be much faster (or devtool: \"cheap-module-inline-source-map\" if you want source mappings to jsx). Still experimental, but you can try it.\nhttp://webpack.github.io/docs/configuration.html#devtool\nIt uses a similar approach as react-native: it only maps lines and avoids recomputing base64vlc numbers.\n. ",
    "jlongster": "Just to chime in, I would <3 to see this collaboration happen, since I've experienced similar perf problems. Makes me so happy to see a big company like facebook drive an existing project to be better :) (though I totally get why you did your own in the first place)\n. > We don't have a good story for creating new apps yet, but imho would be great if all you needed was npm install react-native + packages that your app depends on, and run npm exec devserver to start packager\nThat's definitely the ideal goal. This & showing how to integrate with other bundlers like webpack would be great.\n. @sjmueller Personally I didn't find it too hard, except for not being able to set the project root of the packager. If I remember right:\n- Import ReactKit.xcodeproj into your project\n- Link to libReactKit.a in the link phase\n- Make the RCTRootView in your delegate, like:\nRCTRootView *rootView = [[RCTRootView alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    rootView.scriptURL = jsCodeLocation;\n    rootView.moduleName = @\"App\";\nAnd just append it as a subview where you need it\n- Make a js folder in your project\n- Change the root project url in packager/packager.js to your js folder\n- Copy the package.json from the root of react-native into js and run npm install\n- Copy the Libraries folder from react-native into your project\nThe last steps are the annoying ones, but I'm sure that'll be fixed soon. I may have forgotten something. (definitely need to write this down in docs)\n. Oh, I didn't know about categories. So that adds it to all UIViews?\nI added the entire ReactKit.xcodeproj to my project, which worked in another project! I will take a look closer though and try to figure it out.\n. I got it working. I had to add @executable_path/Frameworks to the \"Runpath Search Paths\". I forgot that I did that on my last project.\nThere are bunch of small things like that get a fresh project working. I should write them down.\n. I'm doing something a little unconventional, which you saw me tweet about: throwing a UI on top of a game. It's primitive right now but looks like this:\n\nThose are up/down buttons at the bottom. Problem is, you can touch the screen to move around the camera, but if you press and drag your finger on top of those buttons, it still moves the camera around.\nMy views are set up like this: one controller that has a normal UIView, the GL view as the first subview and the RCTRootView as the second subview.\n. Thanks for the explanation, @ericvicenti! After I posted this I did see the diagram in ResponderEventPlugin.js.\nI believe, however, that is doesn't fix my use case. All of this is only happening within the views controlled by ReactKit, correct? I'm rendering everything from ReactKit into it's own subview, and rendering everything from OpenGLES into a different subview. So basically I can't control how I interact with anything outside of the ReactKit subview, right? By default, all touches are being handled by both of these views.\nThe right way to do it, it seems, is to implement my own custom GL view on the native side and expose that as a custom component. Then I can render the GL view within my component hierarchy, and I can control the interactions.\nWhere should I start to look at implementing my own native UIView subclass?\n. I think I see how. I need to create a component with a viewConfig property, which has a uiViewClassName property, which is the Obj-C class that it will instantiate when creating the backing iOS instance. And I need to implement my custom UIView class on the iOS side with this same class name. Theoretically it will instantiate my custom view class.\nI'll take it from here and file an issues I run into.\n. @jordwalke The 3d scene is actually rendered the full width/height of the phone, and the buttons are sitting on top of it. I do it this way because the UI will frequently change on top of the 3d scene; it's basically just a 2d overlay.\nI could shrink the 3d scene, but there will be many other cases where I want an input on top of the scene.\n. Cool, I assumed the bridge was early work and that it'll be easier to make custom components in the future.\nThe touch handlers are on the view controller controlling the GL view. But I just realized that is the root view of the window. I add the RCTRootView as a subview on top of my GL view, but you're right, my touch handlers are still on the controller of the whole thing. I probably could try just having multiple controllers and make sure the UI is sitting on top of everything.\n. Nevermind, I thought that the method wasn't even running for some reason but it's definitely running. For some reason my code isn't updating some state like I thought it would. Still, is that the right way to expose an Obj-C method?\n. Hm, when I do NSLog(@\"%x\", teapotNode_); it prints 0. I don't know Obj-C too well, but does it not crash when sending messages to a null pointer? Anyway, it does seem to be calling the method as a static method, not as an instance method. How do I expose an instance method?\nEDIT: I'm assuming it's possible because inside RCTUIManager.m it exports several instance methods. Some of them even reference self. But I see nothing outside of RCT_EXPORT() that sets the instance for the exporter...\nEDIT2: Oh, I see in initWithJavaScriptExecutor that it allocates a single instance of the class, so the class is meant to be a single module instance. Might be nice to have a way to register an existing instance as a module? \n. Ok.\nI added a getModule method on RCTBridge so now I just do TeapotController *vc = [bridge getModule:@\"TeapotController\"]; after creating the root view. I'm sure this is not the right way to do it. But I hacked. And it was fun.\n. The teapotNode_ is just a scene node object that is created in the viewDidLoad controller method. I did add that protocol:\n@interface TeapotController : GLViewController<RCTNativeModule> {\n    TeapotNode *teapotNode_;\n    BOOL tapIsValid_;\n    CGPoint lastDragPoints_[2];\n    CGPoint touchStartPoint_;\n}\nAnd it's all working fine. The problem is that the bridge instantiates the TeapotController class, but I don't see any way to get to it through the RCTRootView class. I had to add a method myself to dig into the internal modules and return the instance.\n. To leave a clearer comment about what is needed: we need to be able to access the modules (that are actually class instances) that the bridge creates to have a generic way of talking between iOS and JS. These classes will have state, and when a callback (say from user input) calls back into the iOS world we need access to it.\n. Since I realized I could use an rgba color for the underlay, I'm good (was thinking of opacity). I agree, I don't want to re-implement the \"active\" behavior of a touchable. I was just saying that you could allow more display-related properties than just backgroundColor, though now I'm having a hard time coming up with a good use case.\n@irvinebroque that's cool, but on the web, you still couldn't access :after and :before elements in the more general pseudo-class case.\n. Yeah, the need for before and after are mitigated I suppose. Anyway, thanks for the responses, there's not really anything actionable here so I'll close it.\n. Oh haha. RTFM. It's actually pretty simple:\n```\n- (void)loadMesh:(NSString *)path {\n    RCT_EXPORT();\ndispatch_async(dispatch_get_main_queue(), ^{\n    node.mesh = [REMeshCache meshNamed:path];\n});\n\n}\n```\nThat works!\n. > If you are bored, would be awesome to compile this into some sort of docs :)\nI almost filed an issue about that, actually! I was going to ask if there's a place you want us to contribute to docs. I can certainly write done a bunch of small stuff I've learned. Where would you like it, and what format?\n. You're right, that fixed it, thanks!\n. Thanks for all the really detailed comments! I've been busy engaging people from yesterday's post so I haven't had a chance to read through it all yet. I'll probably respond here but it makes sense to close the issue.\n. I've been thinking through this a lot still, and I don't really have a follow-up comment. Just wanted to say thanks again @vjeux for the detailed response. The \"Layout driven animations\" part was exactly what I was interested in.\n. Great! In my case I set a breakpoint inside the render function that renders a row in a ListView.\n. Awesome, thanks! I'm doing a demo and figured out another place to use breakpoints that work, but this is good to know in the future\n. ",
    "pilwon": "Thanks @sokra! :+1::+1::+1:\nWe are not yet able to process all react-native project files with webpack because MessageQueue module uses dynamic require in a way not supported by webpack at the moment. The fact that all react-native modules internally use flattened module names (ex: require('ModuleName')) makes it even trickier (or impossible) to hack with ContextReplacementPlugin. A hybrid approach (using react-native's packager for node_modules/react-native/**/* and webpack for the rest) is one way to use webpack but we cannot test the new cheap-inline-source-map devtool option with that approach because packager only cares about the code, not the source map.\nI believe we need more powerful way to handle dynamic requires in webpack that works with aliased module names in order to process all files with webpack unless react-native changes its code to support webpack.\n. Here's my solution:\nAdd the following code to the top of packager/transformer.js's module.exports function:\njs\nvar babel = require('babel');\nif (!/node_modules\\/react-native\\//.test(data.filename)) {\n  try {\n    var result = babel.transform(data.sourceCode, {\n      ast: false,\n      comments: false,\n      filename: data.filename\n    });\n    return callback(null, {\n      code: result.code\n    });\n  } catch (e) {\n    return callback(null, {\n      error: {\n        lineNumber: e.loc.line,\n        column: e.loc.column,\n        message: e.message,\n        stack: e.stack,\n        description: e.description\n      }\n    });\n  }\n}\nIt transforms node_modules/react-native/**/* with the default jstransform transformer and sends the rest to babel. With this approach, I didn't have interopRequire problem @vishnevskiy mentioned above.\nI was also able to solve the ES6 import statement problem by patching DependencyResolver's DependencyGraph module. (Submitted PR #386)\nPlease share if you discover any issue other than the known issue with sourcemap with this approach.\n. > @jaygarcia: I disagree that putting in a pre-built static library is a good thing.  I enjoy the ability to dive into the source code for RCT and I see it as a valuable asset.\nThe proposal was to add prebuilt JS bundle of react-native to NPM package. (only the pre-compiled JS binding, not a new static Obj-C library to replace RCT* libraries)\n. @amasad I agree there must be a better solution. At best, the proposed solution above serves as non-breaking, temporary hack until webpack/browserify is officially supported by react-native.\nIf it's too much work to maintain official prebuilt JS releases, would it be possible to add an option to the built-in packager cli for clean local builds at least? That way webpack/browserify users can start experimenting with their preferred setups until react-native team comes up with a better solution.\n. I tried implementing @amasad's idea and here's what I've got so far. It successfully reads module dependencies information asynchronously with packager and then it constructs an alias map in the format webpack's ModuleAliasPlugin uses. I need help from the community getting this alias map to extend resolve.alias (or something similar). The code for this is there but I believe I'm doing something wrong with this.doResolve. It hangs. (webpack's resolver plugin API is a mystery to me)\nI also tried hard-coding the above alias map in the webpack config file. When you assign the alias map merged with {CSSVarConfig: 'react-native/Libraries/Utilities/CSSVarConfig'} (missing from the above result for some reason) to resolve.alias, it succesfully builds a bundle file with a warning message but there's an error in app runtime complaining document variable is undefined. Playing with output.library and output.libraryTarget didn't help. It'd be better to fix the above first since hard-coding approach is not easily maintainable with future version releases of react-native.\n. I decided to settle on this solution for now. It only overrides react-packager's transformer. You can run any combination of transpilers with that approach. It seems like a better solution if using custom transpiler is all you want with webpack/browserify.\n. Closing this issue as this approach solves my problem. I no longer see a need for adding prebuilt react-native JS bundle to NPM.\n. @amasad @petkaantonov\nI probably picked an irrelevant benchmark above depending on what it really tested, but I still think I identified a real performance bottleneck here...\nI ran a quick test just on DependencyGraph and got an interesting result as follows:\n\nTest Summary\nBluebird performed almost 2x faster :facepunch: \n- System Info\n- MacBook Pro (Retina, 13-inch, Early 2015)\n- 2.7 GHz Intel Core i5\n- 16 GB 1867 MHz DDR3\nYou can find the test script and full result here.\nDependencyGraph with Q (current code)\n```\nofRuns:  100\nAverage: 5016 ms\nMedian:  4879.5 ms\nMinimum: 4079 ms\nMaximum: 7744 ms\nStdDev:  639.8 ms\n```\nDependencyGraph with Bluebird (modified code)\n```\nofRuns:  100\nAverage: 2742.3 ms\nMedian:  2648 ms\nMinimum: 2043 ms\nMaximum: 5034 ms\nStdDev:  504.6 ms\n```\n\nNote that I only replaced DependencyGraph module for this quick test. Imagine how much performance gain you can expect if all modules currently using Q make a switch to Bluebird. There are even (presumably) faster (less features) promise implementations such as es6-promise.\nI discovered this problem while trying to integrate with webpack. The solution I currently settled on uses DependencyGraph to query internal dependencies to be able to resolve react-native modules from the webpack land. Each webpack build took annoyingly too long, that's how I started searching for an internal bottleneck.\n. @petkaantonov This particular case (DependencyGraph) that I tested with hits the filesystem like crazy as it scans the entire file tree to extract dependencies information. The promises library is heavily utilized to glue IO and transformation operations.\nWhat's the best way to measure how many promises are created?\n. @petkaantonov Is this the right place?\n. 46039 promises are created in each test run. :scream: :astonished: :unamused: \n. Related to #386\n. Do we really need to force convert quotation style (' or \") to single quotations when we relativize code? Wouldn't it be better we preserve whatever style developer chose?\n. @amasad I agree it doesn't matter for code that is never meant to be read by humans.\nI imagined more potential complex case similar to and developed from how I implemented #386. The original code passes through multiple replace steps until it reaches the final relativized code. The complexity in this replace pipeline could potentially grow (though it's highly unlikely beyond supporting import syntaxes for now) and it may be a better design choice to replace only whatever's absolutely necessary in each replace step. Either choice definitely works fine but forced conversion of quotation style didn't seem like a necessary one for me. (I'm probably overthinking this...)\n. @daviskoh Related info here\n@amasad ~~I'm not sure how to rebase your internal code onto PR #386. The branch must have been diverged since this PR and my PR touched the same files. When you bring the changes to your internal code, is it usually a manual process? Should I wait until this PR makes its way back to react-native?~~ (Updated PR #386)\n. @jgable Yes, it supports all valid ES6 import syntaxes documented in the ES6 Language Specification.\nYou can see the result from a test ran against a comprehensive list of valid syntaxes in this gist.\n. @amasad Sure I can add that to PR. I have a question:\nWhy does DependencyResolver use /require\\(['\"]([\\.\\/0-9A-Z_$\\-]*)['\"]\\)/gi while DependencyGraph uses /\\brequire\\s*\\(\\s*[\\'\"]([^\"\\']+)[\"\\']\\s*\\)/g? (they look quite different)\n- Isn't the case-insensitive flag (/i) incorrectly applied? For example, there could be a line that calls a custom function defined as function ReQuire(str) {...}. That regex will match ReQuire(...) and replace the string param that has nothing to do with the module name passed to require().\n- Is it okay \\b is not present there? Wouldn't it match any function with suffix require? (ex: myrequire(...))\n. @amasad PR #368 addressed above questions. I merged the latest code into this PR branch. Fixes https://github.com/facebook/react-native/pull/368#issuecomment-88292461 & test passes.\n. @amasad I updated test cases so most of them are in a more widely used spacing styles:\njs\nimport Default, { Foo, Bar as Baz, Qux as Norf } from 'x';\nI still kept some different spacing style cases such as import 'x' ;, import {} from 'x';, import {Foo as Bar} from 'x';, and import Default , { } from 'x';.\nAlso added an incorrect statement import'x'; that is expected to be ignored by the replace regex.\n. @amasad I like keeping .js separate from .jsx. react-packager currently processes all .js files with jstransform. In all my other projects built with webpack, I reserve .js extension for plain JS files that don't need to be transformed. I just run them and it saves me tons of time. My text editor also selects appropriate syntax highlighters based on file extensions. I'd like to do the same with react-native. (without this feature I need to write require('./module.jsx') all the time)\n. I know some people write all react code in *.react.js, probably for the same reason.\n. I know some people write all react code in *.react.js, probably for the same reason.\n. @roman01la You can dynamically build a react-native component list with this webpack config file.\nI like your approach more than what I've tried here and there.\n. @roman01la You can dynamically build a react-native component list with this webpack config file.\nI like your approach more than what I've tried here and there.\n. @roman01la I tried to use the DependencyGraph as well but ended up going with ReactPackager's top-level API as it'd be easier to maintain with future releases. The react-native team may change the internal file structure & API. I'm wondering though, does calling DependencyGraph directly make it faster? There's always several seconds of delay every time you  run ReactPackager.getDependencies so I was hoping to find a better solution that speeds it up.\n. @roman01la Thanks. There's a plan to publish packager as a standalone NPM package: #363\n. @roman01la Thanks. There's a plan to publish packager as a standalone NPM package: #363\n. @glenjamin Xcode has a build phase shell script command that launches packager if there's no server listening port 8081.\nsh\nnc -w 5 -z localhost 8081 > /dev/null 2>&1 || open $SRCROOT/../packager/launchPackager.command || echo \\\"Can't start packager automatically\\\"\n. @glenjamin Xcode has a build phase shell script command that launches packager if there's no server listening port 8081.\nsh\nnc -w 5 -z localhost 8081 > /dev/null 2>&1 || open $SRCROOT/../packager/launchPackager.command || echo \\\"Can't start packager automatically\\\"\n. @amasad Is MessageQueue module used to bridge Obj-C to JS? It uses dynamic require that causes an issue when trying to build everything with webpack. Webpack supports dynamic require feature with context module but I believe the request string needs to start with ./. I tried hacking this behavior with ContextReplacementPlugin as well as my custom plugin but I had no luck. Can MessageQueue avoid the use of dynamic require so all requires are static?\n. @amasad Is MessageQueue module used to bridge Obj-C to JS? It uses dynamic require that causes an issue when trying to build everything with webpack. Webpack supports dynamic require feature with context module but I believe the request string needs to start with ./. I tried hacking this behavior with ContextReplacementPlugin as well as my custom plugin but I had no luck. Can MessageQueue avoid the use of dynamic require so all requires are static?\n. @vjeux Supporting UMD would make it trivial to integrate react-native with other existing bundlers & their ecosystems. It should be possible to support both UMD and react-pacakger module patterns at the same time, if switching completely to UMD is not an option. But we probably need to do something with dynamic requires even with UMD.\n. We need #505 and #506 in order to implement this feature without creating another native module.\n. @nicklockwood It appears #505 has not been implemented yet. Please see comment https://github.com/facebook/react-native/issues/505#issuecomment-96841847\n. @nicklockwood ~~What kind of string values does html prop expect?~~ Looks like you closed a wrong issue. The above link points at a line modified by the commit https://github.com/facebook/react-native/commit/4b4e8ecc9bf67b47577f9cfdd52bd1d177c0ab44 and it partially fixes #506, not #505. Can we reopen this issue? I am afraid we are not ready to close #506 as well.\n. @nicklockwood It works! :scream_cat::scream_cat::scream_cat: This is the best solution for this issue :metal: Thanks-\n. @nicklockwood stringByEvaluatingJavaScriptFromString gives us power to do something like this ourselves.\n. ~~Jest is not running on my machine for some reason. Let me fix it and see where the test fails.~~ (Jest doesn't run on Node.js v0.12...)\nIt turns out code works fine but Jest gets confused with bluebird. (blocker issue: https://github.com/facebook/jest/issues/90)\n\n@petkaantonov Jest works with Q but not with bluebird. Do we have a solution for this?\n. @amasad 30% speedup sounds beyond awesome. I have a feeling a lot of folks will enjoy the speed improvement with this update :sparkles::grinning::+1:\nBtw, I noticed promisify() is the only non-ES6 standard promises feature used in DependencyGraph. Not sure about the other modules but if the use of promises library can be kept to minimum like that we may want to search for an even better alternative. (Bluebird is still my No.1 choice but you never know...)\n. @amasad Updated all code to use bluebird. q is completely dropped. (even removed from package.json) Passed all tests.\n. @amasad Understood. FB's merge policy between the internal code and react-native was not clear to me even after reading this section.\nWill FB always update its internal code first then bring the changes back to react-native after? This means PRs cannot be directly merged to react-native that is usually the only repo external contributors have access to. I can see the benefits of this merge strategy, such as the quality of contributed code is guaranteed with FB's internal review process (I assume FB has a great one) and code consistency can be easily achieved. As long as there isn't much delay until a PR makes its way back to react-native I am okay with it.\nIf this is the case though, please add more information to CONTRIBUTING.md so all contributors who send PR clearly understand the merge policy. Thanks-\n. ",
    "glenjamin": "Would it be possible to support some generic FFI-like interface for interacting with the raw imperative native APIs?\nI don't know that much about the target platforms, but something like that would reduce pressure for a \"proper\" react-native supported version of the API and allow userland to experiment with options before committing to a solution in core.\nThis is roughly how normal React deals with support for DOM stuff not explicitly exposed, and works very well in terms of not constraining the user.\n. Aha, I was just trying to find this out!\nIs this optional, is it possible to swap in babel or similar?\n. Once the initial rush settles down and the issues take some shape it'd be good to have a bit of a roadmap for larger goals like that - I'm keen to get stuck in :)\n. Is packager intended to live on?\nWill it just grow to support the features of browserify/webpack?\nWill it still be faster once it does?\nPersonally I'd rather see packager shrink to be the bare minimum required to load a JS file into native, and then the existing features could be spun out separately and be replaceable by other existing bundling solutions.\nAt the moment it's not entirely clear to me what is in scope / not in scope for packager - I can't even figure out how you're getting Xcode to launch it on build! :confused: \n. Is packager intended to live on?\nWill it just grow to support the features of browserify/webpack?\nWill it still be faster once it does?\nPersonally I'd rather see packager shrink to be the bare minimum required to load a JS file into native, and then the existing features could be spun out separately and be replaceable by other existing bundling solutions.\nAt the moment it's not entirely clear to me what is in scope / not in scope for packager - I can't even figure out how you're getting Xcode to launch it on build! :confused: \n. @amasad awesome answers - thanks!\nThe faster question was whether it'd still be fast if it had all other features, but if that's a non-goal the question is irrelevant :)\n. @amasad awesome answers - thanks!\nThe faster question was whether it'd still be fast if it had all other features, but if that's a non-goal the question is irrelevant :)\n. @pilwon - the bit I strugged to find was where they script is initiated from, probably just unfamiliarity with Xcode on my part\n. @pilwon - the bit I strugged to find was where they script is initiated from, probably just unfamiliarity with Xcode on my part\n. It looks like this has broken the docs build, but only killed one page, resulting in the pages being a stack trace.\nhttps://dl.dropboxusercontent.com/u/100463011/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA%20%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0%202015-03-29%20%D0%B2%2017.57.46.png\n. Whoops! I normally do that - \"y\" to toggle hash in URL\n. \nhere's what it looked like.\n. See #240.\nIf there's a way of doing this with a compile-time flag, that would be much neater.\n. @frantic - oh cool, does that do the DEV branch elimination too?\n. These might help: https://github.com/substack/browserify-handbook#builtins\n. See #240 \n. ",
    "joeyyang": "Replacing one error message with another is also giving me issues -- I have an npm module that's failing to load and having all the error messages persist would be very helpful in attempting to debug. Let me know what other information I can provide!\n. Has the team considered making automaticallyAdjustContentInsets={false} the default behavior of this component?\n. Has the team considered making automaticallyAdjustContentInsets={false} the default behavior of this component?\n. ",
    "lazywei": "This is still a problem, isn't it? Would RN packager plan to fix this? Thanks :+1: \n. @stirman I think this might help: https://github.com/650Industries/react-native-invertible-scroll-view\n. @ide why is this closed? is there any new proper solution to this issue?\n. I faced this error when targeting iOS 7.\n\n\n. after restart Xcode, the error disappear...\n. Where should I put the static assets then? in iOS/Images.xcassets?\n. It seems this is duplicated of https://github.com/facebook/react-native/issues/375\nSo React Native doesn't (and won't) support node runtime, right?\n. @ericvicenti Oh, I totally forgot I can use replace. I feel that is a little anti-react though. I mean, monitoring new props ourself. On the other hand, using event emitters is probably more like Flux, right? However, I'd personally prefer keep the states on the top-most components and let it pass props down, instead of let the navigator listen to the store directly.\nFor the Navigator, would it also be slow if I keep re-render (new props keep coming, for example)?\nThanks for your elaborating.\n. @nicklockwood the modification works. However, I noticed that the passed reachability is not correct. For example, with the code:\n```\n  _handleReachabilityChange(reachability) {\n    alert(reachability);\n  },\ncomponentDidMount() {\n    NetInfo.reachabilityIOS.addEventListener(\n      \"change\",\n      this._handleReachabilityChange\n    );\n  },\n```\nWhen I first disable the network, it will popup \"wifi\". After that, when I enable the network, it will popup \"none\". I think this is incorrect? I'm trying this on simulator.\nThanks.\n. any news?\n. Same here .. I'd prefer option 1.\n. To be honest, as an end-developer, I'm pretty OK with either way. All I want is just having the ability to develop program with WebSocket. To be more specific, I want to use Firebase.\nThis issue stops me from using Firebase for one month, and I really think it is important to have such ability in React Native. Simply put, I think a quick solution to this issue is the most important thing.\nIt's just my two cents though.\n. Wowwwwww!! Good to see it's been merged into the master!!\nThanks for all your great efforts!!!\n. Got it. Thanks for the information :+1: \n. Thanks for replying!\nActually I originally put the nav inside the tab. However, I want the bottom bar be hidden when pushing a new view. Unfortunately, there is no API for hiding tab bar in RN, and that's why I think maybe I need to put nav outside the tab.\nDo you know how I can solve the problem?\nthanks\n-- Chih-Wei\nSent from Mailbox\nOn Fri, Apr 17, 2015 at 6:58 PM, James Ide notifications@github.com\nwrote:\n\nCould you put the NavigatorIOS inside the TabBarIOS.Item? ListView (and its underlying ScrollView) have a prop to automatically adjusts its content insets, which is kind of like the padding for scrollable content and what starts the scroll view off below the nav bar. The thing is that automatic inset adjustment might only look at the parent view controller (disclaimer: check the code to be sure) so putting the tab bar in the nav bar might mix things up compared to the other way around. Generally speaking it's much more common to put a nav in a tab than vice versa so I would give that a shot; just a thought.\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/898#issuecomment-93964690\n. So the numerical value is actually responsive in different devices? For example, top=46 should work for iPhone5s and iPhone6, right?\nThanks.\n. @ide thanks for the suggestion. I finally used {top: 40} for TabBarIOS.Item, and set no bottom for it. Thanks :smile: \n\n@nicklockwood If I only set the top attributes to the inner TabBarIOS.Item instead of TabBarIOS, then the status bar's height will not have any effect, right?\n. @brentvatne hey, thanks for following up this! I solved this by setting \"top\" and \"margin*\" like things.\nIt would be great if we can have a better solution to this, yet please feel free to close this issue :+1: \n. ping @tadeuzagallo @nicklockwood . really need this for push notification working.\n. I think if this is merged, then https://github.com/facebook/react-native/issues/1176 is closable. I'm looking forward to this being merged :+1: \nThanks.\n. I'm not sure if I miss anything, but it seems to me the didRegisterForRemoteNotificationsWithDeviceToken is never called.\nFor anyone is interested in this, my workaround is adding these lines into your iOS/AppDelegate.m, just below the didFinishLaunchingWithOptions:\n``` obj-c\n- (void)application:(UIApplication )application didRegisterForRemoteNotificationsWithDeviceToken:(NSData )deviceToken\n{\n  NSMutableString hexString = [NSMutableString string];\n  const unsigned char bytes = [deviceToken bytes];\nfor (int i = 0; i < [deviceToken length]; i++) {\n    [hexString appendFormat:@\"%02x\", bytes[i]];\n  }\n  NSDictionary *userInfo = @{\n    @\"deviceToken\" : [hexString copy]\n  };\n  [[NSNotificationCenter defaultCenter] postNotificationName:@\"RemoteNotificationsRegistered\"\n                                                      object:self\n                                                    userInfo:userInfo];\n}\n``\n. ping @ericvicenti , how is it going?\nactually, I can build this on iPhone5 / simulator (both are iOS8)\n. @andrewimm Great, thanks! I think this should be remarked on the doc, right? By the way, when doing this (I mean, callingRCTPushNotificationManager), do I need to include any header file in myAppDelegate.m`?\n. ping @ericvicenti how is this going?\ni notice there is another similar PR https://github.com/facebook/react-native/pull/1019\nshould we merge these two issues?\nI think push notification's device token is one of the core functionality, and thus it would be great if we can merge this kind of PR earlier. Otherwise, there will be a lot of duplicated works showing on the GitHub issues list.\n. @brentvatne I rebased this and made the test pass. Would you mind help me review this or assign a reviewer for this?\nThanks :smile:\n. > Probably makes more sense to put this logic in your app's JS -- when your JS gets the \"notification\" event, check whether the application is foregrounded or not. \nI agree with you. However, the thing is currently we don't have a proper way to check the app's foreground/background state (at least I'm not aware of).\n\nI would also be surprised if this diff works... React Native does not work with backgrounded apps right now, and I think you need a different app delegate method to handle notifications while backgrounded.\n\nActually it works pretty well in my project (I'm using this PR in my app). It doesn't require RN work with backgrounded app I think. It's totally native solution -- only it emits different event for background / foreground app.\nIn a nutshell, the background notification will be triggered if we click the notification and jump to the app. On the other hand, the foreground notification will be triggered if the app is currently foregrounded.\n. oh, that's cool.\nOK, it makes sense to do that in JS side then.\nI'm going to close this PR.\nThanks.\n. Do you mean it is working when using https://www.meneame.net/backend/media?type=link&id=2426367, but it is not working when using http://thumbor.eduherraiz.com/unsafe/750x310/www.meneame.net/backend/media?type=link&id=2426126?\nI found I can't reproduce this. I tried the latter URI in my listview component, it works correctly.\nDid you set the style props to your Image?\n. When I trying to use this fork, this line seems to be never called. Did I miss anything?\n. When I trying to use this fork, this line seems to be never called. Did I miss anything?\n. ",
    "philipshurpik": "Hi! \nYou can try 'superagent/lib/client' but you need to modify require statements at the top of file:\nvar Emitter = require('component-emitter');\nvar reduce = require('reduce-component');\nBecause React Native doesn't correctly handle 'browser' section in package.json.\nAlso you can try my fork that is work with React Native:\nhttps://github.com/philipshurpik/superagent\nIt has some other little fixes... Mainly default content type fix - set \"application/json\" as default, because react native xhr request doesn't correctly handle it.\n. Hi! \nYou can try 'superagent/lib/client' but you need to modify require statements at the top of file:\nvar Emitter = require('component-emitter');\nvar reduce = require('reduce-component');\nBecause React Native doesn't correctly handle 'browser' section in package.json.\nAlso you can try my fork that is work with React Native:\nhttps://github.com/philipshurpik/superagent\nIt has some other little fixes...\n. ",
    "robbiemccorkell": "I found the same when I accidentally missed a # symbol on a hex colour in my styles. Looks like the exception raised when trying to convert the colour doesn't get caught.\n. There are instructions on deploying to devices inside AppDelegate.m, I'm sure this will be included in the docs soon. And to run chrome dev tools just press CMD+D twice in the simulator.\n. No worries, have fun!\n. My PR #419 should fix this.\n. Fixes #412 \n. ",
    "brentvatne": "This is no longer an issue\n. @freshteapot - check this issue out: https://github.com/facebook/react-native/issues/240\n. @wootwoot1234 - AnimationExperimental is deprecated. It uses CoreAnimation explicit animations under the hood, not Pop :) Unfortunately we're in an awkward limbo phase where a new animation API is about to land, but isn't quite ready yet.. I would recommend looking at react-tween-state or rebound.js (which you can grep for in the react-native source and find it is used in multiple places) to do pure js animations for now. \n. @ericvicenti - I like that! I assume that calling subscribeTo will add the subscription to some array that will then be removed upon unmount? Looking forward to seeing that released!\n. @ericvicenti - I like that! I assume that calling subscribeTo will add the subscription to some array that will then be removed upon unmount? Looking forward to seeing that released!\n. @vjeux @tadeuzagallo - any plans to revisit this? seems to be a popular issue to report :smile:\n. @chirag04 @stefalda - What capabilities did you have in mind? In terms of screen size, what information do you want to have access to beyond the width/height and pixel ratio?\nwidth/height are currently available with require('Dimensions').get('window') which returns {width: x, height: y} and pixel ratio which you can access directly with the PixelRatio module or require('Dimensions').get('window').scale. \nSo I think this issue is more about being able to watch the device for events that might change the dimensions eg rotation: #426. We can watch for changes in status bar size using react-native-status-bar-size. What else am I missing?\n. @chirag04 @stefalda - What capabilities did you have in mind? In terms of screen size, what information do you want to have access to beyond the width/height and pixel ratio?\nwidth/height are currently available with require('Dimensions').get('window') which returns {width: x, height: y} and pixel ratio which you can access directly with the PixelRatio module or require('Dimensions').get('window').scale. \nSo I think this issue is more about being able to watch the device for events that might change the dimensions eg rotation: #426. We can watch for changes in status bar size using react-native-status-bar-size. What else am I missing?\n. @chirag04 - check out the Viewport module that @ide mentioned above, it seems like a good alternative :smile:\nI'm going to close this issue, let's create a new one when we have some specific attributes that we want to be able to query for so we can handle those on a case-by-case basis.\n. @chirag04 - check out the Viewport module that @ide mentioned above, it seems like a good alternative :smile:\nI'm going to close this issue, let's create a new one when we have some specific attributes that we want to be able to query for so we can handle those on a case-by-case basis.\n. The issue here now is that the images change but the text does not\n\n@vjeux - who is the owner of ListView?\n. This seems useful!\n. Closing issue as there is now a corresponding pull request :smile: (#604)\n. Trying out moving these kinds of discussions over to discuss.reactjs.org - see the discussion here - I linked to this issue there.\n. @ide - did you ever look into this?\n. ping @ide \n. This does seem like it would be useful! Another issue came up (referenced above) where this would solve the problem. cc @ide @vjeux\n. Nice on @dhrrgn! Seems simple enough. Might be worth putting into a library on npm until a solution is integrated into core\n. @dhrrgn - I have something about that on my blog: Packaging a React Native component, I hesitated to add it to the docs because it seemed like a temporary solution, but we haven't worked out a better one yet (aside from react-native new-library from within a React Native project, in order to create a skeleton bridge module component - you could do this and just change it up accordingly rather than create a new project from scratch as I mention in my blog post)\n. @grabbou - do you have time to make the changes that @ide mentioned above and submit a PR?\n. @ide - what do you think about @grabbou's observation above?\n. @ide - seems to be a false alarm, still not working for me with 0.5: https://rnplay.org/apps/SwEnTw - tried it against master as well, same thing: https://rnplay.org/apps/AxZnJw\n@grabbou - can you reproduce that fix on rnplay.org?\nStill an outstanding issue as far as I can tell\n. Anyone up for fixing this? Would be a great way to learn about some of the React Native internals\n. @nick - nice one, thanks! :+1:\n. @joewood - is this still something you're wanting to do? Did the discussion in the issue mentioned above solve you problem? ping me if not, otherwise we'll just keep this closed\n. @ColinEberhardt - I believe the purpose for this is to keep the StyleSheet properties as similar as possible to CSS, this allows for styles to potentially be portable between platforms and keeps it as a subset of CSS. cc @vjeux \n. This is a neat idea cc @tadeuzagallo \n. Who wants to take lead on this one? @ide? :smile:\n. Here's an attempt made by @necolas to figure this out: https://github.com/necolas/react-web-sdk\n. This is happening now with static images. To summarize the above: core will not include any auto-sizing of network images, but feel free to develop and publish a module to take care of this if you would like to see it :smile:\n. @scottdixon - awesome :smile:\nFor the lazy, here's a link @scottdixon's github repo\n. @nicklockwood - sounds good, seemed stagnant for a while but the discussion has really picked up since I closed the issue, go figure! :smile:\n. Closing! Let us know if the problem comes back\n@jsierles #fridaytriage\n. This is fixed, you can test it with:\njavascript\nvar data = require('./package.json');\nReact.AlertIOS.alert(data.name);\n. This is no longer an issue, thanks for reporting!\n@jsierles #fridaytriage\n. Looks like this has been fixed, thanks!\n. @vjeux - any plans to publicize a project roadmap? in other words, is it on your roadmap to publish a roadmap? :smile:\n. @vjeux - \"What are we working on\" would be nice to see!\n. @zoomclub - give it a try and let us know :smile:\nI don't see why not, it looks like it just parses OpenType and TrueType files.\nClosing this issue because React ART solves the original question.\n. @whatsdis - 2 months, 1 week, 3 days, 2 hours, 23 minutes and 38 seconds at the time of writing this\nsource :stuck_out_tongue_closed_eyes: \n. @whatsdis - 2 months, 1 week, 3 days, 2 hours, 23 minutes and 38 seconds at the time of writing this\nsource :stuck_out_tongue_closed_eyes: \n. @josebalius - just backgroundColor: 'transparent'\n. @josebalius - strange, can you paste the code here?\n. This has been fixed!\n. @amasad - Would this be a websocket polyfill that relies on polling? Is this still an issue that is worth following up on? It seems like the built in WebSocket Native Module works well :smile:\n. This is now being tracked in #991 - mostly done, just fixing an existing TextInput bug that I encountered along the way.\n. Nice :smile:\n. @gilchenzion - I was just discussing this with some folks in IRC and learned that for the F8 app they used a RCTBridgeModule wrapper around the Facebook iOS SDK and then use the JavaScript SDK to do operations after that.\nI made an example app brentvatne/facebook-login and a blog post too.\nI can't comment on whether the team plans to make a standard implementation of this type of thing though.\n. Looks like this has been fixed! Thanks for the report\n@jsierles #fridaytriage\n. @jessepollak - all good now? can we close this?\n. Thanks :smile:\n. @jsierles #fridaytriage :smile:\n. @jsierles #fridaytriage\n. This was merged!\n. ^ cc @ide \n. Labeled as good first task as per @vjeux's comment:\n\nWe should have WebViewIOS and WKWebViewIOS instead of a generic WebView component. Anyone up for the renaming and providing both implementations?\n. I'm going to close this because it doesn't seem to be going anywhere - I think there would be some value in having a WKWebViewIOS component so it's available as an option at least - if anyone has any use for this and wants to implement it, please do so and open a PR :smile:\n. @oveddan - ooh, looks cool! shares cookies with Safari\n. Dup of #89 \n. Ping me if you implement this, I'm very interested in seeing the result! But given that there are no plans to implement this in the core at the moment I'm going to close the issue!\n. @kevindeleon - let's move discussions about features that aren't on the roadmap for core into here: https://discuss.reactjs.org/t/react-native-components-that-you-want-to-see/523\n. On second thought, this seems to be pretty important to a lot of people so let's just keep it open here\n. @sahrens - it looks like removeClippedSubviews on ScrollView does nothing, only on RCTView. ScrollView seems to pass that prop on to each row, which if I understand correctly doesn't do much to reduce memory footprint of a long ListView. I've noticed this while working on the React Native Playground app - the memory usage shoots up as we page through a long list of apps. Keeping memory usage down in long ListView's would be a nice performance improvement to get in.\n. I believe that this is covered in this doc now: https://facebook.github.io/react-native/docs/javascript-environment.html#content\n. ping @wesleyahall \n. :+1:\n. Rapidly tapping back button in simulator and I can't reproduce this, will reopen if this is still the case\n. Looks like this hasn't been pulled in yet, cc. @amasad\n. @a2 - thanks for the feedback, let me know if there's anything else you'd like me to do here!\n. @vishnevskiy - did you manage to figure this out or is it still an issue?\n. position: 'absolute',\nleft: 0,\nright: 0,\n\nThis is a good way to get 100%. If you add top: 0, bottom: 0 also it will take up the entire screen\n. Sounds reasonable @tommcgurl - check out facebook/css-layout and create an issue there, maybe someone will be up for implementing it :smile:\n. @sahrens - this would be great to see, this seems to be a highly requested feature\n. @checkraiser - I believe I recall us resolving this in IRC. If I'm mistaken, let's follow up there or feel free to create a StackOverflow thread.\n. Fixed now!\n. Fixed now!\n. Dupe #779, #902\n. For future reference, if you don't want to use controlled, another way to clear is to set a ref on the TextInput then call this.refs.yourTextInputRef.setNativeProps({text: ''})\n. :+1: I'm looking forward to this getting in to the cli!\n. I used this on #466 :)\n. @asavin - Is this still an issue for you? Seems to work for @oaleynik now\n. If the solution that @wangzhe1995 linked to does not work for anybody, ping me and I'll re-open the issue! :smile:\n. Sorry @pjjanak, this doesn't seem to be moving. I've created an issue on ProductPains here: https://productpains.com/post/react-native/add-utility-to-get-viewport-dimensions-to-core/ - if it gets upvoted enough then we can dig this back up. Your effort here is much appreciated and will certainly be used if this is needed in the future! :smile:\n. @randomer - agreed, that would be nice\n. Interesting question, @ide any idea about this?\n. Protip: use the commit sha in your links so that when master changes we can still see the exact code you're referring to :smile:\n. @glenjamin - I did not know that shortcut, awesome!\n. #583 was a good start, #835 fixes interplay between min/max value and initial value\n. I believe that this is protected against now, thanks for the issue @glenjamin!\n. The animation module has been renamed to RCTAnimationExperimentalManager and is on its way out, it's suggested that you use an existing React library like react-tween-state for animations in the meantime, as it is likely that you will have many issues with RCTAnimationExperimentalManager.\n. :+1: I noticed this today and would be happy to attempt to fix the bug if someone could point me in the right direction.\n. I see the shadow on my iPhone 5s. Let's reopen this if anyone has the issue again.\n. This doc has seen a lot of updates since this PR was submitted, I went over the changes and it looks like they've been integrated, thanks!\n. @qingfeng - https://github.com/facebook/react-native/issues/1365#issuecomment-104792251\n@syousif94 - rotation works as expected now see docs eg: transform: [{rotate: '30deg'}]\n. Looks like there are plenty of examples above now, more exciting stuff re: animations coming soon!\n. I believe this is no longer an issue\n. It looks like this is fixed now in 0.5: https://rnplay.org/apps/FtnarQ\nLet me know if you run into it again!\n. :blush:\n. @grp - that would be great! Looking forward to seeing it\n. @vjeux - that makes total sense, agreed\n. @vjeux - repo is here: https://github.com/brentvatne/react-native-video /cc @grp @tadeuzagallo \n. @jaredly - seems like this is worth adding support for - I had an initial shot at this here, we could use the same strategy for other props\n. The animation API is experimental and likely to be phased out, sorry for the confusion there. Exciting things coming up in that area in the next few weeks, stay tuned. LayoutAnimation will stick around though.\n. Take a look at your rowHasChanged function on your DataSource\nThat said, closing because @mkonicek is spot on :smile:\n. :+1: - I'd love to see this get merged\n. Great work @vkurchatkin - looking forward to putting this to use!\n. @nicklockwood any update?\n. :+1: this will be a very convenient feature! No comment on the code itself.\n. @tadeuzagallo - any update here?\n. @tadeuzagallo - oh sorry for bothering you! Enjoy the well-deserved holidays :beers: :palm_tree:!\n. @tadeuzagallo - oh sorry for bothering you! Enjoy the well-deserved holidays :beers: :palm_tree:!\n. This belongs on the facebook/react-devtools repo\n. More thought has been put into Cocoapods now and this should be working much better, give it a try and let me know if you still have an issue! \n. This was an issue with RCTConvert that I fixed in c09bdebcd532bfb487763d1800aaf1f3e4d2f150 - let me know if you're still having the issue and I will reopen.\n. @paramaggarwal - check out these bridge methods on RCTUIManager for performing measurements\n. Agreed, I would love to see this\n. Nice one @wlindner :smile:\nI'm going to close out this issue as it seems dead and at least for the moment best suited for a community module. Feel free to create another issue if in writing that module you run into an issue with the core infrastructure!\n. Check out the related bits from my implementation of a Video element here:\nRCTVideoManager.m - this passes the props on to setX methods in RCTVideo\nRCTVideo.m - this defines how the setters work\nVideo.ios.js - this is where we pass it in to the element itself via js.\n. @dvcrn - can you post your code and point to the specific place where you are having a problem passing params?\n. Similar problem was solved here on react-native-mapbox-gl \nThere is no way to pass in some values into a constructor, but if you move the view you are creating into something like RCTMapboxGL in the above link, then you can defer creating the underlying native component that you are wrapping until all of the necessary initialization props are available.\n. Can you post your entire index.ios.js here?\n. @ckknight - executing JS would be easy to implement but adding a callback would be a bit more complicated. @oveddan is going to have a shot at least at executing JS in #1349, I mentioned also possibly adding a callback there as well!\n. @iamdustan - any interest in continuing work on this or should we close?\n. @phamhieu - would this work for you? https://github.com/facebook/react-native/blob/master/Libraries/Image/RCTImageLoader.m#L60-L72\n. @phamhieu - try adding isStatic: true to the uri object\n. @phamhieu - <Image source={{uri: '/var/mobile/Containers/...', isStatic: true}} ... />\n. @phamhieu - relevant code: https://github.com/facebook/react-native/blob/master/Libraries/Image/Image.ios.js#L111-L116\n. :boom: fantastic, any chance you'll open source your app @phamhieu? I'd love to see it\n. @phamhieu - thanks! I'll check that out tomorrow. I suppose we can close this issue now?\n. @vjeux - any particular reason for not including justify? If not, we can tag this as a good first task\n. @sahrens @vjeux - this is not necessary if we merge #918\n. Discussion here seems to be dead, if anyone has made progress or is still keen to do something related to this issue, ping me and I'll reopen\n. :+1: great addition to the docs\n. - Should follow styleguide - curly braces for all if statements, space between if and paren\n- Any change here would need to include a corresponding change to the docs in docs/Debugging.md and perhaps other places\ncc @tobyhughes @frantic \n. @tobyhughes - any interest in updating this or can we close?\n. @jonaswindey - did you figure that out? ping me if not and I'll reopen\n. Now using JSC C api as per #1037\n. @danicomas - not using websockets but you could adapt this accordingly: https://github.com/kamilkp/react-native-file-transfer\n. @mudetroit - you're right - I believe we should eliminate one of the two. It seems like the reason for it is that on Android the password prop is used and on iOS secureTextEntry is used, but both props are accepted regardless. \n@vjeux - if there's any interest, I can submit a PR for this\n. @notduncansmith - any interest in this still? if so, a PR would be welcome! you can ping me on irc/twitter @notbrent (nice username, by the way) if you need a hand\n. @Intellicode - it seems like Titanium allows some actions to be triggered on remote sites as well - that said, I think the best angle here is to pull this out into an external library where we can discuss it and iterate on it and when it is mature enough potentially integrating it back into React Native. Are you willing to do that? It would be awesome :smile:\n. Oh neat, CLGeocoder integration would be a nice addition\n. @imaffett - still interested in this feature? Seems simple enough to make a PR, ping me on irc/twitter @notbrent if you need a hand\n. :+1: this would be incredibly useful!\n. Any update on this one? I'd like to use these features\ncc @a2 @vjeux \n. @vjeux - This is the one I pinged you about on irc, seems pretty small. Would be nice if we could move the Examples dir out of the FB sync process with the exception of UIExplorer and SampleApp so I don't have to bother you with these things.\n. @ShawnOceanHu - None of the react-native Android project is open source currently, it is still about 6 months off from release. Sorry, there's no way around it, I wish there were!\n. @hharnisc's pr was merged :smile:\n. @vjeux - re: point 1, it is type=\"password\"\n. @vjeux - re: point 1, it is type=\"password\"\n. Fixed in 731335eb7c231d8c0b05fd82a6b6ddc3662f9cd4\n. Fixed in 731335eb7c231d8c0b05fd82a6b6ddc3662f9cd4\n. :+1: \n. :+1: \n. This is resolved now here\n. This is resolved now here\n. Similar enough to #667, closing\n. Awesome @amasad - looking forward to this, will make lib development easier\n. @matthewga0 @ranyefet - if either of you would like to have a shot at this, ping me @notbrent in irc!\n. @matthewga0 - it's possible to implement that same behaviour on another platform even if there is no built-in native function for it. We'll have to see where this goes with Android.\n@karpotkin - thanks for the image, unfortunately it's not very clear from it exactly what the issue is? If you can explain further I will reopen the issue\n. Discussed with @vjeux and @auser in irc, this is indeed an issue and if anyone is up for tackling it a PR would be very welcome. Just post in here if you are getting started on it. Otherwise I may look at it later this week.\n. @nicklockwood - thank you the detailed response, your expertise is much appreciated.\n@ide - you're right, that will work just fine for the most part. If you have a username and password field, you can just focus the password in the onSubmitEditing callback, easy. If you have several inputs, it seems preferable to have a more generalized focusNextField(currentField) function so that you don't have to hardcode the order of fields. This becomes a bit awkward because the event target is a node id number that refers to the node. So you have to set a ref on all of the inputs, then search through the refs until you find the one with the matching id, and then use the TextInput following that. Tabbing through inputs seems like a common enough use case that it would be worth simplifying a bit, can't say I have a good API in mind at the moment though.\n. @nicklockwood - that sounds fantastic to me\n. @admmasters - @auser mentioned in irc that he was interested in doing this. @auser - is that still the case? If you're too busy I can have a look at it soon\n. cc @nicklockwood \n. ping @frantic \n. ping @tadeuzagallo\n. :+1: nice solution\n. I'm not sure that this change is necessary, with the current documentation I believe it is clear that you can call the directory whatever you wish to call it, the example just happens to use ReactComponent\n. I think the latter example is preferred in this case @ccheever.\nOne thing that we will want to do in addition to this is add some documentation in AdSupportIOS.js so that we can have it under the APIs section in the docs. If you're up for it @ccheever ;)\nAgreed re:squashing, can you squash your commits into one @lvyile?\n. I think the latter example is preferred in this case @ccheever.\nOne thing that we will want to do in addition to this is add some documentation in AdSupportIOS.js so that we can have it under the APIs section in the docs. If you're up for it @ccheever ;)\nAgreed re:squashing, can you squash your commits into one @lvyile?\n. This looks much more complete now but still doesn't include LinkingIOS. @ide any thoughts?\n. This looks much more complete now but still doesn't include LinkingIOS. @ide any thoughts?\n. > However, when move the project to a new directory, the react server will stop autorun. I have to manually call npm start\nI tried this on my own and this works fine, will reopen if you are still having the issue. If so, please explain step by step exactly what you're doing and we can try to narrow it down :smile:\n. > However, when move the project to a new directory, the react server will stop autorun. I have to manually call npm start\nI tried this on my own and this works fine, will reopen if you are still having the issue. If so, please explain step by step exactly what you're doing and we can try to narrow it down :smile:\n. Thanks @phamhieu!\n. Thanks @phamhieu!\n. Would prefer not to link to an image external to this repo from the docs, additionally I think this is increasingly a non-issue as most people will have installed from a newer version these days - it would be a bit silly not to. It could have been useful at the time though! Thanks anyways @lvyile!\n. Would prefer not to link to an image external to this repo from the docs, additionally I think this is increasingly a non-issue as most people will have installed from a newer version these days - it would be a bit silly not to. It could have been useful at the time though! Thanks anyways @lvyile!\n. @wootwoot1234 - thanks for this! Can we close this issue?\n. @wootwoot1234 - thanks for this! Can we close this issue?\n. @lenage - Looking forward to seeing what you come up with! Let us know on irc when you have something. Can you close this issue now?\n. @lenage - Looking forward to seeing what you come up with! Let us know on irc when you have something. Can you close this issue now?\n. @frostney - awesome! can you submit a PR to add that to https://github.com/ericvicenti/react-native-community ?\n. @frostney - awesome! can you submit a PR to add that to https://github.com/ericvicenti/react-native-community ?\n. :smile: \n. :smile: \n. Fixed!\n\n. Fixed!\n\n. The preferred style is to have a trailing comma, however this PR has languished for quite sometime and because of the current sync process it would be much easier if someone could just hunt down all missing cases and fix them in a single PR, thanks though!\n. The preferred style is to have a trailing comma, however this PR has languished for quite sometime and because of the current sync process it would be much easier if someone could just hunt down all missing cases and fix them in a single PR, thanks though!\n. Did anyone manage to get this working? Can we see it on Github anywhere?\n. :+1: curious to see what the solution is\n. @LeezQ - we need to see what styles.comment are here as well, I suspect your problem may be there. Also any styles on the render function itself.\nThis works fine for me with:\njavascript\n  renderRow: function() {\n    return (\n      <View style={{backgroundColor: \"transparent\"}}>\n        <Text numberOfLines={2}>When true, no visual change is made when text\n        is pressed down. By default, a gray oval highlights the text on press\n        down.</Text>\n      </View>\n    )\n  },\n\n. And to pre-empt a potential future question about the height with numberOfLines - a fix is coming very soon: https://github.com/facebook/react-native/issues/673\n. @bradoyler - indeed, this is a dup of #89\n. @bolismauro - I believe that will only work if the component is a subclass of RCTView - check out RCTViewManager.m and notice how it is mapping the styles to native properties. You could create a RCTView subclass wrapper that adds it as a subview or layer and use that to set the frame of the component, which will give it the layout styles, and then you can pass on any other props if you like. See react-native-video for an example.\n. @colinramsay - this appears to be an issue with using NSTimer, I'll look into it further - I was able to get a single notification through in your example by moving the initialization out of AppDelegate, exporting the startSending function and calling it from JS:\n``` objc\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender\n@synthesize bridge = _bridge;\n\n(void)doSomeSending:(NSTimer *)timer\n{\n    RCT_EXPORT();\n    NSLog(@\"Doing some sending\");\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n}\n\n-(void)startSending\n{\n    RCT_EXPORT();\n    NSLog(@\"Start sending!\");\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n    [NSTimer scheduledTimerWithTimeInterval:1.0f\n                                     target:self selector:@selector(doSomeSending:) userInfo:nil repeats:YES];\n}\n@end\n```\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Animation,\n  Text,\n  TouchableHighlight,\n  View,\n  DeviceEventEmitter,\n  AlertIOS,\n} = React;\nvar EventSender = require('NativeModules').EventSender;\nvar WebViewApp = React.createClass({\n    componentDidMount() {\n        console.log('Mounted');\n        var subscription = DeviceEventEmitter.addListener(\n            'MyCustomEvent',\n            (info) => { AlertIOS.alert('Incoming!') }\n        );\n        EventSender.startSending();\n    },\ncomponentDidUmnount() {\n  subscription.remove();\n},\n\n\nrender() {\n    return <Text style={{backgroundColor: 'white', padding: 20}}>hi</Text>\n}\n\n});\nAppRegistry.registerComponent('RCTTest', () => WebViewApp);\n```\n. @colinramsay - this works, sending a message every 5 seconds:\n``` objc\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender {\n  id _timer;\n  int _delay;\n  NSDate *_prevRun;\n}\n@synthesize bridge = _bridge;\n\n(void)update\n{\n\nif (_prevRun != nil) {\n    int interval = (int) [[NSDate date] timeIntervalSinceDate: _prevRun];\n    NSLog(@\"Time since: %d\", interval);\n  }\n  if (_prevRun == nil || ((int) [[NSDate date] timeIntervalSinceDate: _prevRun]) >= _delay) {\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n    _prevRun = [NSDate date];\n  }\n}\n-(void)startSending\n{\n    RCT_EXPORT();\n    NSLog(@\"Start sending!\");\n_delay = 5;\n_prevRun = nil;\n_timer = [CADisplayLink displayLinkWithTarget:self selector:@selector(update)];\n[_timer addToRunLoop:[NSRunLoop mainRunLoop] forMode:NSDefaultRunLoopMode];\n\n}\n-(void)stopSending\n{\n  [_timer invalidate];\n}\n@end\n```\n``` objc\n// EventSender.h\nimport \"RCTBridgeModule.h\"\n@interface EventSender : NSObject\n- (void)update;\n- (void)startSending;\n@end\n```\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Animation,\n  Text,\n  TouchableHighlight,\n  View,\n  DeviceEventEmitter,\n  AlertIOS,\n} = React;\nvar EventSender = require('NativeModules').EventSender;\nvar WebViewApp = React.createClass({\n    componentDidMount() {\n        console.log('Mounted');\n        var subscription = DeviceEventEmitter.addListener(\n            'MyCustomEvent',\n            (info) => { AlertIOS.alert('Incoming!') }\n        );\n        EventSender.startSending();\n    },\ncomponentDidUmnount() {\n  subscription.remove();\n},\n\n\nrender() {\n    return <Text style={{backgroundColor: 'white', padding: 20}}>hi</Text>\n}\n\n});\nAppRegistry.registerComponent('RCTTest', () => WebViewApp);\n```\nI looked at react-native/React/Modules/RCTiming.m and noticed that they prefer this approach. @a2 @tadeuzagallo any insight into what's going on here and why NSTimer doesn't seem to work?\n. @colinramsay - I'm not entirely sure, my Obj-C skills are only a couple of weeks old so I pinged a couple of more experienced people in the last comment ;)\n. @colinramsay - it turns out there is an in depth discussion about timers already here: https://github.com/facebook/react-native/issues/167\n. @colinramsay - this discussion ended up being quite useful for react-native-video :smile:\n. @colinramsay - this discussion ended up being quite useful for react-native-video :smile:\n. @colinramsay - neat! thanks for sharing\n. @colinramsay - neat! thanks for sharing\n. @sebslomski - what does your \"Link Binary with Libraries\" screen look like? eg: http://url.brentvatne.ca/1gK2z\nAlso, is RCTGeolocation.xcodeproj under your Libraries directory? eg: http://url.brentvatne.ca/dWH9 - if not, you will need to add it to the project (node_modules/react-native/Libraries/GeoLocation/RCTGeolocation.xcodeproj)\n. @lachlanjc - can you close this issue?\n. @colinramsay - if you're interested in building a bridge, ping me as notbrent on irc (#reactnative on freenode) and I can help you get started!\n. Thanks @mattotodd for putting that together :smile: \n. @checkraiser - can you post the view code that causes this?\n. @checkraiser - is this on a brand new project created with react-native init? Which version of react-native-cli?\n. @checkraiser - I just did the following, and it worked with react-native-cli 0.1.3:\n1. Create project and cd into it\n   react-native init TestText\ncd TestText\n2. Edit index.ios.js and make it this:\n``` javascript\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n} = React;\nvar TestText = React.createClass({\n  getInitialState() {\n    return {}\n  },\nrender: function() {\n    return (\n      \n\n this.setState({input: text})}\n          />\n          {'user input: ' + this.state.input}\n\n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js\n        \n\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+Control+Z for dev menu\n        \n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\nAppRegistry.registerComponent('TestText', () => TestText);\n```\nThis works on the iPhone 5 simulator for me. Is it possible that you unlinked a core library in your project by accident?\n. @checkraiser - can you push your entire project to a Github repo please?\n. @checkraiser - tried to test that, hard to reproduce without the native module, could you post that?\n. @checkraiser - I replace render on EtyList with:\njavascript\n  render: function() {\n    return (\n      <View style={{flex: 1}}>\n        <React.TextInput placeholder='I love you' style={{flex: 1}} />\n        <React.ScrollView scrollEventThrottle={500} contentInset={{top: -100}}\n          style={styles.scrollView}>\n            <TextInput />\n            <React.ListView dataSource={this.state.user}\n            renderRow = {this.renderItem}\n            style={styles.listView} />\n          </React.ScrollView>\n      </View>\n    )\nIt works just fine. All I did was replace index.ios.js on a new project created with react-native init. You could try doing init again if you don't want to debug too carefully, somewhere along the line it's possible that you accidentally unlinked an important core library.\n. @checkraiser - if you want to share the full repo on Github I can help debug further! Otherwise I suppose we can just close the issue\n. @checkraiser - sorry for not getting back to you here, I somehow lost this amongst all of the other issue notifications :frowning:\nI have used TextInput inside of View many times and I have never had any issues - if you are still having this problem on v0.5.0-rc, ping me and I can reopen.\n. @kocyigityunus - have a look at react-native-modal and let me know if that doesn't answer your question, I'll be happy to answer!\n. @vjeux - any insight into how we can absolute position a component to overlay NavigatorIOS?\n. That makes sense, I'll have a go at fixing that. Thanks @vjeux \n. Having a bit of a hard time figuring out the right away to do this, any tips @sahrens?\n. @jordwalke - that makes sense - I like the JS navigator personally, I was just thinking that it would be useful for others who choose to use NavigatorIOS for my react-native-modal library to just work well with it.\n. @sahrens - that's a neat idea re: overriding reactAddSubview to create a UIWindow - I'm going to give that a try\n. @sahrens - this worked, but when I render the subviews in the new window they stop responding to any click events, and cmd+r no longer refreshes, any idea?\n. @ide - I tried both with and without\nobjc\n    [_overlayWindow makeKeyAndVisible];\nobjc\n    _overlayWindow.userInteractionEnabled = YES;\n    _overlayWindow.hidden = NO;\n. @ide - without being key, cmd+r works but presses won't.\n. https://gist.github.com/brentvatne/5115e83d02027869ca83\n. Thanks @sahrens :smile:\n\nSorry, I wish I had time to clean up what we have internally sooner, but it relies on some FB infra stuff :(\n\nNo problem, this is an enjoyable learning exercise\n. @sahrens - so I have this mostly working, I just can't figure out how to properly dispose of the modal UIWindow and give touch control back to the main UIWindow. The only thing that I have found to work is _mainWindow.windowLevel = UIWindowLevelStatusBar; but that is undesirable of course because the main window's windowLevel should not need to change for this. Example repo is here and component is here\n. @sahrens - Got this working, the problem was that the component is initialized twice by React - once as a base component without props, and immediately after that once more and the props are applied. The problem was that I was creating the UIWindow in the init function so the first one, for the base, would just stay around indefinitely.\n@kocyigityunus - You can use NavigatorIOS with react-native-modal now, just be sure to set the forceToFront prop to true on the modal so it will create it in a new UIWindow!\n. \n. @jordwalke - Agreed, definitely a matter of trade-offs here. Will definitely get the same thing working on Android when the time comes!\n@sahrens - yup, but this could applicable to overlay any native component on UIWindowLevelStatusBar\n@kocyigityunus - can we close this issue now?\n. Closing :smile:\n. \n. Thanks @tadeuzagallo - giving this a try now.\nAlso...\n\n. @tadeuzagallo - thank you very much for the detailed response! I have this working now on react-native-video - both for progress events (to get currentTime updates on the video) and onLoad (to get any initial data about the video - duration, whether it supports fast forward etc).\n. This is possible now with borderBottomLeftRadius etc :smile:\n. @vjeux - simple README typo fix, easy merge\n. The recent change to Babel should fix this!\n. This is fixed now: #1415 :smile: \n. Check out RCTUIManager measure functions. That said, this kind of issue is best suited for StackOverflow :smile:\nIf you can't find a solution there after trying, feel free to ping me here or on Twitter @notbrent\n. I think we need a section in the docs about how to test your React Native components\n. @naoufal - that would be great! can you write up a draft for that and submit a PR? I'll review and augment as necessary\n. https://github.com/facebook/react-native/issues/1365#issuecomment-104792251\n. No problem @mcz :smile:\n. Also would love to see this, consolidating into one issue #1440\n. @checkraiser - this script invocation error occurs because you're trying to build the project with a packager instance running each time - it's a bit annoying how that works right now but you just have to be sure to close it when you want to build it again (not required to just refresh JS in simulator).\n. barTintColor as per the above issue\n. @frantic - curious what you think about @joeyyang's suggestion above\n. @frantic - curious what you think about @joeyyang's suggestion above\n. This issue seems stale, ping me if you are still having this problem @mcz and we can look into it further :smile: sorry we didn't get around to it sooner\n. This issue seems stale, ping me if you are still having this problem @mcz and we can look into it further :smile: sorry we didn't get around to it sooner\n. @jcgertig - the border code changed significantly recently, and a big change to the animation api is under way as well. If you can post the code that you used to generate that, we can try it on the newer version and see what the result is!\n. @frantic - is this still relevant? seems like a clean merge still if not :smile:\n. :+1: would love to see this, @danscan can you try putting a PR together to add this in?\n. Not sure why this is failing on Travis, anyways this isn't so important with deepDiffer coming so I'll just close this.\n. Fixed in 33ac55b2 \n. Looks like #1333 is a dupe, closing :smile:\n. I can confirm that I ran into the same issue with the newest version and I had to downgrade\n. @a2 - thank you sir\n. https://facebook.github.io/react-native/docs/geolocation.html#content - \"/!\\ ATTENTION /!\\ You need to add NSLocationWhenInUseUsageDescription key in Info.plist to enable geolocation, otherwise it's going to fail silently! !/ !/\" - did you do this?\n. @frantic - on it, PR coming!\n. @iDVB - confirmed that with custom location set and NSLocationWhenInUseUsageDescription configured, this works:\n\n. @iDVB - that happened to me and then I went into Debug > Location and chose Apple, pressed CMD+r to reload and it worked. Then switching to a custom location worked too, after that. Let me know if that helps!\n. @justinmcp - there have been a lot of changes since this was last updated, do you have any interest in updating your code?\n. Thanks @nicklockwood - I'll keep an eye on this and ping you if there is any activity\n. @justinmcp - what do you need to know to be able to move forward with this? Based on @nicklockwood's comment above, we'd probably need to re-write most of the work you've done here, unfortunately.\n. You can implement your own custom component for this until it's added in to core: strike through on UILabel and how to create your own components for react-native\n. @KJlmfe - thanks, closing this issue as the discussion as moved to the PR now :smile:\n. @vjeux - looks good to me\n. Indeed, same issue - you'll need to downgrade for now @rogergl \n. > As @frantic suggests, the eventual solution will probably be for the app to simply remember it's last state, so if you set debug mode in the dev menu and then do a cold start, it should still be in debug mode.\nIt looks like you folks got around to doing this, works great, so I will close this\n. Fixed in c700f71cb52362a80e7e740e85e09900058fbe27, incorporating @frantic's feedback\n. @frantic - good points, switched to RCTLogError, added key to SampleApp, and updated docs.\n. @kozorezal - What is the expected behaviour? What happens if you do this for an <img> tag in the browser?\n. lgtm, thanks :smile:\n. Consolidating this issue into #182 :smile:\n. ~~Looks good to me~~\n. Scratch the above comment - @darylrowland could you also add support for this prop to RCTTextView? And ideally also include an example in UIExplorer so we can pull it down and see.\n. @alexaivars - if when you do that you are trying to require package.json then yup, same thing\n. :+1: would love to see this\n. If I'm not mistaken, this is now implemented in the form of onLayout - let me know if this doesn't solve your problem @pjjanak and I can reopen.\n. @sahrens - is this still relevant?\n. New projects have .gitignore and .flowconfig now\n. Dup #902\n. lgtm @vjeux \n. Sorry for the delay, RCTWebSocketDebugger is no longer a thing, so I'm closing this\n. Thanks!\n. Thanks @gabelevi! Your plan sounds good to me :+1:\n. Great stuff @ide, :+1: for this being useful\n. @vjeux - do you think this is worth adding?\n@blairvanderhoof - rebase needed here :smile:\n. @colinramsay - fixed in #801\n. AnimationExperimental is very.. Experimental.. :wink: A new api will be coming soon, there aren't any plans to fix any issues with this at the moment as it is more or less deprecated.\n. @paramaggarwal - do you think it's worth adding a note about this to the documentation anywhere?\n. Thanks!\n. @vjeux - sounds very reasonable to me, I gathered that was what we were going for and said the same thing in another issue which I can't find at the moment :smile:\n. @johanneslumpe - is this fixed if you add displayName: 'someName' do your components?\n. Strange, thanks for checking it out @johanneslumpe - let's move this issue over to the devtools repo\n. @joewood - what's the status of this? is this still relevant? \n. ping @joewood ^\n. @joewood - if you still see the issue, can you reproduce in a public repo or on rnplay.org?\n. Oops just noticed #815 \n. :+1: - nice one @ide \n. @jmstout - this works now on master, no longer causes CPU to be pegged thanks to syncing css-layout in this commit: af921542b5f0be2a96f169cf397c530e4968a3f8\n. @vjeux - I tried out a npm i -g react-native yesterday and didn't get a warning, so this or #889 still needs to make it in :smile:\n@dbanck - sorry for the delay, can you please rebase this?\n. @vjeux ^\n. I don't know think is necessary.. Unless it is otherwise stated in a README you should always be using the current version of any related tool.\n. While this solution works, I do wonder if it's worth adding a hook on view manager classes that allows us to specify in what order props should be applied, either in JS or Objective-C. eg: instead of having RCTSetViewProps [iterate over each prop in an unreliable order as provided by NSDictionary] the manager class could optionally expose a function that specifies order which RCTSetViewProps can then use to sort.\n``` objc\n// RCTSliderManager.m\n\n(NSArray *)applyPropsFirst\n{\n  return @[ @\"minimumValue\", @\"maximumValue\" ];\n}\n```\n\nor...\n``` objc\n// RCTSliderManager.m\n\n(NSArray *)propsOrder\n{\n  return @[ @\"minimumValue\", @\"maximumValue\", @\"value\" ];\n}\n```\n\nThis would have been helpful for me on react-native-overlay because I need to ensure visible is set before setting the windowLevel here and on react-native-video because most things are dependent on the src being set.\n@tadeuzagallo - thoughts? cc @vjeux\n. ping @tadeuzagallo - simple change here that we discussed in IRC, would be good to get it into next sync if possible\n. :+1: \n. @bhatti - @siuying is right, there is no document var in the context where JS executes for react-native. I had a look at the source that was generated and unfortunately it was minified, so it was very tough to tell what might be required to add support for it. If you're in the market for a websocket library, you might want to have a look at RCTWebsocket and keep an eye on #619. Good luck!\n. @wfkbyni - feel free to ping me if the above solutions don't fix the problem, otherwise closing the issue\n. @chirag04 - as @vjeux mentioned, could you try to make this into its own library for now? If it seems like something that would be a good fit for the standard library then it might eventually get pulled in. If you need a hand don't hesitate to ping me on irc as notbrent or shoot me an email brentvatne at gmail.com\n. @chirag04 - as @vjeux mentioned, could you try to make this into its own library for now? If it seems like something that would be a good fit for the standard library then it might eventually get pulled in. If you need a hand don't hesitate to ping me on irc as notbrent or shoot me an email brentvatne at gmail.com\n. @PhilippKrone - @chirag04 pinged me about this on IRC as he was working on it and needed a hand, I haven't had a chance to look at it yet though but will try to get you two something on the weekend! Added to calendar ;)\n. @PhilippKrone - @chirag04 pinged me about this on IRC as he was working on it and needed a hand, I haven't had a chance to look at it yet though but will try to get you two something on the weekend! Added to calendar ;)\n. @chirag04 - check this out: https://github.com/brentvatne/react-native-dashed-border-example - feel free to take this and build your own library based on it\ncc @PhilippKrone \n. @chirag04 - check this out: https://github.com/brentvatne/react-native-dashed-border-example - feel free to take this and build your own library based on it\ncc @PhilippKrone \n. @PhilippKrone \n\nI'm already using it as component, but that somehow does not \"feel right\", to be honest\n\nI agree that it isn't ideal!\n\nLet's assume I want my view to have a dashed border and - in addition - some other stuff for which I will as well built such components. Then I do have a lot of nested components instead of having it in the style property.\n\nYou could combine these into a single component with a prop that switches between them and that would make it easier to manage.\nYou could even change it so that these are set through style! Look at how borders are implemented in RCTView.m and make the appropriate changes in a subclass of RCTView and it should work just fine, then when you want to have that kind of border you can use a CustomBorderView or even something more generic like PhilippsView :smile: that would incorporate all of your customizations. If you need help with this, ping me on irc @notbrent\nIf this becomes popular and there turns out to be a lot demand for integrating it into the core library then we would have an advantage of having an existing battle tested library that would be simple to integrate. But the problem is that any existing feature that is added to the core library needs to be-reimplemented on Android and maintained as it changes throughout releases, and as the surface area of the library grows it becomes harder and harder to manage. So the preference amongst the team right now (I gather from conversations on issues and in IRC, I don't actually work at Facebook or on the react-native team, I just help out when I can) is to build these in separate libraries and only integrate when demand is high and there is a compelling reason for why it would work better as part of the core library.\nHope that answers your question @PhilippKrone!\n. @PhilippKrone \n\nI'm already using it as component, but that somehow does not \"feel right\", to be honest\n\nI agree that it isn't ideal!\n\nLet's assume I want my view to have a dashed border and - in addition - some other stuff for which I will as well built such components. Then I do have a lot of nested components instead of having it in the style property.\n\nYou could combine these into a single component with a prop that switches between them and that would make it easier to manage.\nYou could even change it so that these are set through style! Look at how borders are implemented in RCTView.m and make the appropriate changes in a subclass of RCTView and it should work just fine, then when you want to have that kind of border you can use a CustomBorderView or even something more generic like PhilippsView :smile: that would incorporate all of your customizations. If you need help with this, ping me on irc @notbrent\nIf this becomes popular and there turns out to be a lot demand for integrating it into the core library then we would have an advantage of having an existing battle tested library that would be simple to integrate. But the problem is that any existing feature that is added to the core library needs to be-reimplemented on Android and maintained as it changes throughout releases, and as the surface area of the library grows it becomes harder and harder to manage. So the preference amongst the team right now (I gather from conversations on issues and in IRC, I don't actually work at Facebook or on the react-native team, I just help out when I can) is to build these in separate libraries and only integrate when demand is high and there is a compelling reason for why it would work better as part of the core library.\nHope that answers your question @PhilippKrone!\n. Hey @PhilippKrone, that's an interesting idea, cc @vjeux \n. Hey @PhilippKrone, that's an interesting idea, cc @vjeux \n. @leiyong316 - When you run react-native init, it will create a new project and also run npm install and pull in react-native - it can potentially take a while to run, especially if you're on a slow connection or, as @siuying mentioned, it may not work at all if you're behind a firewall.\nClosing this issue, feel free to create a new one with more details (how long you waited, whether it ever completed, whether you have issues with other npm packages, any logs) if he above clarification didn't help! :smile:\n. @leiyong316 - When you run react-native init, it will create a new project and also run npm install and pull in react-native - it can potentially take a while to run, especially if you're on a slow connection or, as @siuying mentioned, it may not work at all if you're behind a firewall.\nClosing this issue, feel free to create a new one with more details (how long you waited, whether it ever completed, whether you have issues with other npm packages, any logs) if he above clarification didn't help! :smile:\n. @josephtsng - does this always happen when using it from your iPhone 4G/LTE hotspot? Could you post the code that caused this as well?\n. @josephtsng - does this always happen when using it from your iPhone 4G/LTE hotspot? Could you post the code that caused this as well?\n. @sahrens - looked at the git blame and wasn't quite sure who to assign here, your name stood out so I just added you, re-assign if I'm off.\n@KJlmfe - thanks! can we get a rebase?\n. @sahrens - looked at the git blame and wasn't quite sure who to assign here, your name stood out so I just added you, re-assign if I'm off.\n@KJlmfe - thanks! can we get a rebase?\n. @KJlmfe - instead of merging could you do a git rebase -i to squash the commits into one? See this guide\n. @KJlmfe - instead of merging could you do a git rebase -i to squash the commits into one? See this guide\n. @KJlmfe - I'm confused about what's going on here, I will close this but will happily re-open if you rebase and squash into one commit! Thanks :smile:\n. @KJlmfe - I'm confused about what's going on here, I will close this but will happily re-open if you rebase and squash into one commit! Thanks :smile:\n. @liubko - great way to demo that :smile:\n. I fixed this here: https://github.com/brentvatne/react-native-navigator-ios-hide-bugfix/commit/e0655d19821072f7d2ace9bea42902ab50e9d861\nIf this doesn't seem like too much of a hack, I can follow along those lines and have it update other props as well.\ncc @ide \n. @ustun - seems to me that it is just undocumented, the source is simple enough to read through for now but if you want to contribute docs that would be awesome\nSee: RCTActionSheetManager.m and ActionSheetIOS.js\nAlso for an example, see here\n. https://facebook.github.io/react-native/docs/actionsheetios.html#content\n. @adrian-social-prod - will do\n. @adrian-social-prod - for now, you can see it here: https://github.com/facebook/react-native/blob/master/Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js#L53-L61\njavascript\n    /**\n     * A custom icon for the tab. It is ignored when a system icon is defined.\n     */\n    icon: Image.propTypes.source,\n    /**\n     * A custom icon when the tab is selected. It is ignored when a system\n     * icon is defined. If left empty, the icon will be tinted in blue.\n     */\n    selectedIcon: Image.propTypes.source,\nFor example:\njavascript\n<TabBarIOS.Item icon={require('image!icon')}  title=\"Blue Tab\">Blue Tab</TabBarIOS.Item>\n\n. Easy fix here is to just add '../Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js', to extractDocs.js, but then it would also make sense to add that to the React export object. Alternatively, we could modify the doc generator to allow us to group components on one page. Thoughts @vjeux?\n. Added in https://github.com/facebook/react-native/commit/9ee6cd61682c19d3373a388474b9071ed729078b\n. So I ran this through the compiler and it gave me this:\njavascript\nfunction push(array )var $__2; {for (var items=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) items.push(arguments[$__0]);\n  ($__2 = array).push.apply($__2, items);\n}\nYou're right, this is an error and running in your browser shows that too. It looks like the var $__2; should be inside of the curly braces rather than before. That said, I believe this is actually an issue with jstransform and is very similar to this one: https://github.com/facebook/jstransform/issues/91 so I'm going to close this issue and move the discussion there and you can track the progress on that!\nThanks for the report :smile:\n. @lacker - revision on that comment: https://github.com/facebook/react-native/issues/11103. @iostalk - if @o-e's suggestion doesn't fix it (I suspect it will) then feel free to ping me again on this issue, otherwise closing it\n. @iostalk - if @o-e's suggestion doesn't fix it (I suspect it will) then feel free to ping me again on this issue, otherwise closing it\n. @paramaggarwal - you could use one of the resizeMode options to adjust the image to maintain the aspect ratio and still fit in whatever container size you have\n. @paramaggarwal - you could use one of the resizeMode options to adjust the image to maintain the aspect ratio and still fit in whatever container size you have\n. @paramaggarwal - would it help if you were given a callback with the width and height of the network image when it finishes loading?\n. @paramaggarwal - would it help if you were given a callback with the width and height of the network image when it finishes loading?\n. That makes sense, you could maybe make a wrapper component around it that does that for you\n<ImageWithConstraints source={require('..')} \n   width={200} height={100} maintainAspectRatio={true} style={{width: 300}}/>\nthen you can just calculate out the height and pass that on to an Image that is rendered by ImageWithConstraints. If you wanted to use flex you could hook into onLayout and find what width it is given and then calculate the height from the aspect ratio.\nWould that solve your problem?\n(It would be great to see this published as community component)\n. That makes sense, you could maybe make a wrapper component around it that does that for you\n<ImageWithConstraints source={require('..')} \n   width={200} height={100} maintainAspectRatio={true} style={{width: 300}}/>\nthen you can just calculate out the height and pass that on to an Image that is rendered by ImageWithConstraints. If you wanted to use flex you could hook into onLayout and find what width it is given and then calculate the height from the aspect ratio.\nWould that solve your problem?\n(It would be great to see this published as community component)\n. @paramaggarwal - yeah, depending on your use case that might not be ideal but this seems pretty easy to implement so it's worth a shot :smile:\nPlease post code here afterwards! I'm curious to see\n. @paramaggarwal - yeah, depending on your use case that might not be ideal but this seems pretty easy to implement so it's worth a shot :smile:\nPlease post code here afterwards! I'm curious to see\n. @iostalk - NavigatorIOS wraps UINavigationBar and renders out a navigation bar for you, allowing you to control things such as tint colour and buttons. Navigator is a component that leaves implementing the actual view up to you and allows you to control routing through the app similar to NavigatorIOS. Check out the docs and compare the props :smile: and you will see what I mean.\n. @iostalk - NavigatorIOS wraps UINavigationBar and renders out a navigation bar for you, allowing you to control things such as tint colour and buttons. Navigator is a component that leaves implementing the actual view up to you and allows you to control routing through the app similar to NavigatorIOS. Check out the docs and compare the props :smile: and you will see what I mean.\n. @rkmax - Android is planned, see this blog post\n. @rkmax - Android is planned, see this blog post\n. @ide - as discussed in irc, looks good!\n. @ide - as discussed in irc, looks good!\n. It looks like this is gone now :smile:\n. :smile: nice!\n. @cloudify @soheil - I don't have a device on me at the moment so I can only test in the simulator and was able to confirm this, could you test this on a device and let me know if it works there? Thanks! :smile:\n. cc @tadeuzagallo - I stepped through RCTReachability and couldn't find the root cause of the issue - RCTReachabilityCallback always enters the RCTReachabilityStateNone block, any ideas?\n. thanks @nicklockwood :smile:\n. @soheil - with RCTReachability.m updated to refer to apple.com rather than http://apple.com?\n. Great! @brendanv sorry you've been getting pinged for me so much on this repo for some reason!\n. @soheil - haha seems like that would be a useful feature indeed\n. Fixed in bbd52595864a3ac6469b46b3789b882b51f33e86\n. Thanks @arthuralee \n. @nicklockwood - I have run into this issue on my own as well - it's common for sticky headers to include touchable components, eg: for navigation, and this isn't possible currently. I tested this fix and it worked well for me.\ncc @tadeuzagallo @a2\n. @nicklockwood - Thanks for the response! That does indeed sound troubling - what about the option of implementing a custom hitTest for RCTScrollView? It might be a good stop-gap solution until we can come up with a more comprehensive one.\n. @badfortrains - are you up for modifying this PR based on the above conversation or would you like me to take care of it?\n. Closing in favour of new PR, thanks!\n. @oblador - that worked for me as well, submitted a PR to update the SampleApp accordingly\n. @littleweb - see AppStateIOS - if this doesn't resolve your problem, ping me here\n. @jtremback - this is being tracked in #1429 now, PR welcome!\n. @jtremback - hmm, it sounds vaguely familiar but having looked through several hundred issues in the last few days I'm having a hard time remembering exactly, if you find it let me know\n. @mrblueblue - if you're still having this issue, ping me and we can look into it further!\n. @drkibitz - thanks for the report! This is fixed now: https://github.com/facebook/react-native/blob/master/Libraries/AppStateIOS/AppStateIOS.ios.js#L92-L103\nThe events are communicated through the RCTDeviceEventEmitter so you could access all of the events through that, this module just wraps that to make it even simpler to manage.\nI'd love to see your module, could you share it?\n. @drkibitz - unfortunately not :( \n. Thanks! Will check it out tomorrow\n. Dup of #731 and #65 :smile:\n. Closing due to dupe\n. @amasad - did this ever get pulled?\n. Indeed, same issue was #476 \n. It seems that UIKit doesn't allow you to change the height of UITabBar very easily, probably because the designers did not intend for it to be changed. If you want to do you could subclass React/Views/RCTTabBar.m and add one of the fixes from the above link :smile:\n. ping @ide \n. @lazywei - did you manage to resolve your issue?\n. @lazywei - agreed, cc @vjeux \n. PR welcome if someone wants to take a stab at solving this problem!\n. @frostney - I'm not sure that such a warning is necessary - it works without borderWidth if there is a background specified. If there is no background or borderWidth, I'm not sure what a developer would be expecting borderRadius to do :smile: If you feel really strongly about this, ping me here again and explain why and I can re-open this discussion. Thanks for the idea :+1:, keep them coming\n. @frostney - sure thing, let me know if you come across it again\n. @michalraska - that's the right way to go! Thanks for updating with your solution, should be helpful to others who have the same issue.\n. @despairblue - initially I was a bit confused but realize that it does indeed make sense - by setting flexDirection: 'row' we are telling it to flex on the horizontal axis. If you change that to column on the container it works as you would expect.\n. cc @vjeux - not quite sure about the above, maybe you have some insight\n. Hi @finalquest - I've tried to use this library myself and ran into a bunch of issues with how it determined start and end values. I'd recommend using react-tween-state for now, you can see react-native-modal for an example of how I have used it. My current understanding of the animation module is that going to be replaced entirely, so I wouldn't use it unless I had to. Let me know if your issue persists with react-tween-state and I will reopen this issue!\n. Hi there! Try setting overflow: hidden, does that fix it?\n. @frostney - does this still occur on 0.4.0 for you?\n\nI can only reproduce this when I have some other item inside, eg: , which inherits the background colour of the parent by default and does not have border radius and so it appears to be outside of the rounded corner. You will have to use overflow: hidden as mentioned above to fix that issue.\n. @frostney - no problem, glad it helped! :smile:\n. @jnhuynh @mymickey - pull request create, closing this issue to move the discussion there!\n. @vipulnsward - which version of flow do you have installed? \n$ flow --version\nFlow, a static type checker for JavaScript, version 0.8.0\nWorking for me with this, you might want to try upgrading.\n. @skv-headless - could you send over a pull request with that change?\n. @nicklockwood - #1069 is a dup of this with some extra info:\n\nYes, the issue is a duplicate, but this one causes a full app crash, so we need a nil check on cacheKey till a proper fix is in place.\n@paramaggarwal \n. @Benmidi's comment is completely correct :smile:\n. Hi @coderdave - you are right, this won't work in the simulator but if you open it up on your device you should find that it will work exactly as expected. If not, feel free to ping me here and I can look into it further for you. It's worth noting that the openURL method under the hood is just: [[UIApplication sharedApplication] openURL:URL];, so there's not really any magic  going on there :smile:\n. @coderdave - I also added some clarification to the docs, thanks for the heads up that this might lead to confusion! Commit: https://github.com/facebook/react-native/commit/ebdc041b4f6afac4e08e2abee9b0d787f651e752\n. e2e test failed but that seems to be an existing issue unrelated to this branch\n. Any reason not to merge this one?\n. @henter - good question, this is expected to be there in RCTEventDispatcher already, see here - but the actual module in JS is not there, so this just adds that module.\n. @mjw56 @ericvicenti - if there is still interest in pursuing animations on replace, let's open a new issue for it\n. :+1: excellent addition to the docs @nicklockwood, LGTM\n. @nicklockwood - :smile: that sounds like a very reasonable plan\n. @aroth - nice one :smile:\n. The fix for this has been merged!\n. @VonD - if the fix doesn't solve all of your issues, it would be great if you could open another issue! :smile:\n. @leecade - there is did you mean to do AlertIOS.alert(77)?\n\nRegardless, because this isn't currently supported in the standard build of react-native, you might have better luck discussing it here: https://github.com/roman01la/react-native-babel or in irc. :smile:\n. good point @iamdustan - that should fix it for you @leecade \n. You'll probably want to look into RCTUIManager and RCTEventDispatcher. \nNot exactly equivalent to document.querySelector but you can find the native element corresponding to a given node handle (which you can get from the ref) by doing:\nobjc\n  [_bridge.uiManager addUIBlock:^(RCTUIManager *uiManager, RCTSparseArray *viewRegistry) {\n        UIView *view = viewRegistry[reactTag];\n        // do something with the view\n  }];\nYou can run that inside of a bridge module function, eg: RCTAnimationExperimental startAnimation\nNot sure if this helps, I'm not very familiar with FRP so some of your question went over my head.\n. @nicklockwood - another big difference that jumps to mind for me is support for multiline which is baked into the Android field but not for iOS\n. @nicklockwood - fair! I just created this in response to a comment in IRC, I'll close this issue for now since it looks like there isn't as much consensus around the idea as I had thought, at least not enough to move forward with it yet. :smile:\n. @nicklockwood - no problem, I didn't read it as you shutting me down - it just seemed like we could wait until this becomes more of a need than a want and in the meantime focus on higher priority issues :rocket:\n. @vjeux - very cool how easy that is to accomplish!\n. - Packager isn't intended to be run as a production server\n- A best practice for updating deployed JS to an App Store-deployed app hasn't been established yet but it would be awesome if someone from the community could come up with a module or blog post for this\n@jacobjiangwei - yup, anything that is in the JS, as long as you don't update the native code\n. Various ways to do this - flex: 1 on a view whose container does not constrain its size will take up the full screen. position: absolute, top: 0, bottom: 0, left: 0, right: 0 will do this too. If this doesn't solve your problem, let me know why and I'll reopen the issue :smile:\n. @ele828 - you are correct, it sets it back to 1.0 - I'm not entirely sure I understand your use case though, sometimes code is the best language - can you post an example please? :smile:\n. @ele828 - thanks, that definitely looks like a bug\n\n. @ele828 - moved discussion over to #977 where I provide a fix, thanks! :smile:\n. @awiss - it is expecting the content to be nested inside of the TabBarIOS.Item - sorry for unclear docs, I will be fixing that soon.\n``` javascript\n  render: function() {\n    return (\n        \n { this.onPressTab('Trips') }}>\n            \nHi from trips\n\n\n      <TabBarIOS.Item selected={this.state.name == \"Brokers\"} name=\"Brokers\" systemIcon=\"contacts\" title=\"Brokers\"\n        onPress={() => { this.onPressTab('Brokers') }}>\n        <View style={{flex: 1, backgroundColor: 'white'}}>\n          <Text>Hi from brokers</Text>\n        </View>\n      </TabBarIOS.Item>\n\n      <TabBarIOS.Item systemIcon=\"more\" selected={this.state.name == \"More\"}\n        onPress={() => { this.onPressTab('More') }}>\n        <View style={{flex: 1, backgroundColor: 'white'}}>\n            <Text>Hi from more</Text>\n          </View>\n      </TabBarIOS.Item>\n    </TabBarIOS>\n)\n\n},\n```\njavascript\n  onPressTab: function(name) {\n    this.setState({name: name});\n   },\n. @yueliangwen - this is on the base project, with nothing changed? And it does not happen in the simulator?\nCan anyone else with an iPhone 6 plus confirm?\n. This is being tracked in #868 and a fix is on the way :smile:\n(See also #907 and #870 - this is a popular one!)\n. javascript\ncanvas: {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n},\njavascript\n<Image\n  resizeMode=\"contain\"\n  source={{uri: 'http://imgs.steps.dragoart.com/how-to-draw-a-pony-step-7_1_000000053055_5.jpg'}}\n  style={styles.canvas} />\nTry out stretch and cover for alternative resizeModes too\n. Here's a full example that integrates it using position: relative in the parent to constrain it:\n``` javascript\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n} = React;\nvar SampleApp = React.createClass({\n  render: function() {\n    return (\n      \n\n\n\n\nHello!\n\n\n);\n\n}\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    position: 'relative'\n  },\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n});\nAppRegistry.registerComponent('SampleApp', () => SampleApp);\n```\n\n. If this doesn't resolve your problem feel free to re-open.\n. Hi @potsypantsy! #1029 should solve your problem\n. @gabro @leecade - this is possible with the measure function: https://github.com/facebook/react-native/blob/master/Libraries/ReactIOS/NativeMethodsMixin.js#L61-L63\nfor example:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} = React;\nvar TestIt = React.createClass({\n  measureWelcome() {\n    this.refs.welcome.measure(this.logWelcomeLayout);\n  },\nlogWelcomeLayout(ox, oy, width, height, px, py) {\n    console.log(\"ox: \" + ox);\n    console.log(\"oy: \" + oy);\n    console.log(\"width: \" + width);\n    console.log(\"height: \" + height);\n    console.log(\"px: \" + px);\n    console.log(\"py: \" + py);\n  },\nrender() {\n    return (\n      \n\n          Welcome to React Native!\n        \n\nMeasure it\n\n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\nAppRegistry.registerComponent('TestIt', () => TestIt);\n```\nThe result of clicking the button:\n2015-04-22 15:34:44.969 [info][tid:com.facebook.React.JavaScript] \"ox: 72\"\n2015-04-22 15:34:44.969 [info][tid:com.facebook.React.JavaScript] \"oy: 313\"\n2015-04-22 15:34:44.969 [info][tid:com.facebook.React.JavaScript] \"width: 231.5\"\n2015-04-22 15:34:44.970 [info][tid:com.facebook.React.JavaScript] \"height: 24\"\n2015-04-22 15:34:44.971 [info][tid:com.facebook.React.JavaScript] \"px: 72\"\n2015-04-22 15:34:44.971 [info][tid:com.facebook.React.JavaScript] \"py: 313\"\nmeasure uses the RCTUIManager measure function. Notice the return values to the callback:\ncallback(@[\n      @(frame.origin.x),\n      @(frame.origin.y),\n      @(frame.size.width),\n      @(frame.size.height),\n      @(pagePoint.x),\n      @(pagePoint.y)\n    ]);\nYou may also be interested in measureLayout, which gives you:\ncallback(@[@(leftOffset), @(topOffset), @(width), @(height)]);\n. See also #977 where I get an element's opacity from over the bridge. Closing this as I believe the above comments resolve the issue, feel free to ping me if not and I will reopen. :boom:\n. cc @vjeux\n. Thanks for the update @gabro, glad it worked out for you\n. @sahrens - what kind of api did you have in mind for predeclaring what you want to measure?\n. Great job @sahrens - this will help a lot of people!\n. @jonathanong - can you create a PR for this? seems like a simple change, you can refer to the recently pushed Native UI Components guide or ping me on irc @notbrent if you need a hand.\n. @erikdung - you can add that here: https://github.com/facebook/react-native/blob/master/React/Views/RCTWebView.m#L39 - but preferably we would have an option that we could just pass into the component to enable/disable that, I can do this later\n. Thanks :smile:\n. @iceNuts - Source please! Probably the function isn't being bound to the component class. Closing this until source is posted :smile: Please in the future attach any relevant code when you post an issue, thanks so much!\n. Seems like this is resolved :smile:\n. Oh sorry @gabro - I thought from your follow up comment that you had resolved it. \n. cc @spicyj \n. :smile:\n. Thanks! :smile:\n. I believe you will need to write a native module to interact with the filesystem, a good example of this is with AsyncStorage - check out the source - it saves and loads and parses a JSON file :smile:\n. @soheil - as discussed in IRC, built a library for you that fixes this: https://github.com/brentvatne/react-native-status-bar-size :smile:\n\nCould add this back into StatusBarManager perhaps when it has all of the kinks worked out, cc @tadeuzagallo @vjeux \n. @soheil - you could add some negative margin when the status bar is larger to offset it\n. This should only happen in development mode, if you can reproduce with development mode disabled, please ping me and I'll reopen this issue! @jbhatab \n. @tadeuzagallo - I like it, I didn't realize we could just grab the opacity out of the registry like that - nifty!\n. @tadeuzagallo - tested your code, works great, updated the PR (force-pushed so goodbye previous commit) to include it and removed setting opacity in onPress - does seem pointless given that it is set onPressIn\n. @joshbedo - can you post a project where this happens to Github and link us to it? that would probably be the easiest way for us to discover the problem\n. @wong2 - just tried this out on my own, seems to work as expected. Does your loading image display normally? Like this: <Image style={styles.image} source={require('image!loading')} />\nThis works for me on 0.4.0 (I used the name cat for my image though):\njavascript\n  render() {\n    return (\n      <Image defaultSource={require('image!cat')}\n             source={{uri: \"http://upload.wikimedia.org/wikipedia/commons/3/3f/Fronalpstock_big.jpg\"}}\n             style={{flex: 1}} />\n    )\n  }\n. @marcshilling - thanks for following up, still having this problem?\n. Closing because 0e67e33534e8f2e7652ad83f4395a64d955517d4 landed\n. @vjeux - added this to the getting started page:\n\n. @vjeux - added this to the getting started page:\n\n. @vitch - take a look at how this is handled currently for value, minimumValue and maximumValue - if you set value before either of those then it will be clipped to whatever the min-max range is, so it is similarly related to timing. RCTSlider.m\n. @vitch - take a look at how this is handled currently for value, minimumValue and maximumValue - if you set value before either of those then it will be clipped to whatever the min-max range is, so it is similarly related to timing. RCTSlider.m\n. @vitch - any interest in following up on this? It looks like thumbTintColor for RCTSwitch is as simple as:\nRCT_EXPORT_VIEW_PROPERTY(thumbTintColor, UIColor);\n. @vitch - any interest in following up on this? It looks like thumbTintColor for RCTSwitch is as simple as:\nRCT_EXPORT_VIEW_PROPERTY(thumbTintColor, UIColor);\n. @pewallin - neat, can you put together a PR including this polyfill?\n. @pewallin - neat, can you put together a PR including this polyfill?\n. Looks like you're tracking this in #1042 now :smile:\n. Looks like you're tracking this in #1042 now :smile:\n. @dwilt - is this still happening? did you fix it?\n. @dwilt - is this still happening? did you fix it?\n. @dwilt - no problem, I'm glad your issue was resolved!\n. @dwilt - no problem, I'm glad your issue was resolved!\n. @nicklockwood - having a few issues with getting it to respect padding, both on the placeholder (UILabel as you suggested) and the UITextView.\nOn the UITextView, padding works as expected only when there is text, otherwise it goes a bit nuts:\n\nOn UILabel, I think all we need to do is have it factor in the contentInsets of the the UITextView, of course UILabel doesn't support and I was wondering what your approach would be.\nThanks!\n. @nicklockwood - thanks, have that working now, ran into another issue with setting fonts that seems to be an existing bug with RCTTextField:\nRCTConvert.m\nRCTTextFieldManager.m\nEach time you set one of the font styles it obliterates the others, (UIFont *)UIFont:(UIFont *)font withFamily:(id)family size:(id)size weight:(id)weight style:(id)style doesn't seem to behave as you would expect (ignore nil values, create new UIFont with the non-nil options applied, return it). I'll look at resolving this too.\n. @nicklockwood - quickly hacked this together, fixes the issue, will need to circle back later to make sure it's robust:\n``` objc\n+ (UIFont )UIFont:(UIFont )font withFamily:(id)family\n              size:(id)size weight:(id)weight style:(id)style\n{\n  // Defaults\n  NSString *const RCTDefaultFontFamily = @\"Helvetica Neue\";\n  const RCTFontWeight RCTDefaultFontWeight = UIFontWeightRegular;\n  const CGFloat RCTDefaultFontSize = 14;\n  CGFloat fontSize;\n// Get existing properties\n  BOOL isItalic = NO;\n  BOOL isCondensed = NO;\n  RCTFontWeight fontWeight = RCTDefaultFontWeight;\n  if (font) {\n    if (!family) {\n      family = font.familyName;\n    }\nisItalic = RCTFontIsItalic(font);\nisCondensed = RCTFontIsCondensed(font);\n\n}\n// Get font style\n  if (style) {\n    isItalic = [self RCTFontStyle:style];\n  }\n// Get font size\n  if (!size && font) {\n    fontSize = font.pointSize;\n  } else {\n    fontSize = [self CGFloat:size] ?: RCTDefaultFontSize;\n  }\n// Get font family\n  NSString *familyName = [self NSString:family] ?: RCTDefaultFontFamily;\n// Get font weight\n  if (!weight && font) {\n    fontWeight = RCTWeightOfFont(font);\n  } else {\n    fontWeight = [self RCTFontWeight:weight];\n  }\nif ([UIFont fontNamesForFamilyName:familyName].count == 0) {\n    font = [UIFont fontWithName:familyName size:fontSize];\n    if (font) {\n      // It's actually a font name, not a font family name,\n      // but we'll do what was meant, not what was said.\n      familyName = font.familyName;\n      NSDictionary *traits = [font.fontDescriptor objectForKey:UIFontDescriptorTraitsAttribute];\n      fontWeight = [traits[UIFontWeightTrait] doubleValue];\n    } else {\n      // Not a valid font or family\n      RCTLogError(@\"Unrecognized font family '%@'\", familyName);\n      familyName = RCTDefaultFontFamily;\n    }\n  }\n// Get closest match\n  UIFont bestMatch = [UIFont fontWithName:font.fontName size: fontSize];\n  CGFloat closestWeight;\n  if (font && [font.familyName isEqualToString: familyName]) {\n    closestWeight = RCTWeightOfFont(font);\n  } else {\n    closestWeight = INFINITY;\n  }\n  for (NSString name in [UIFont fontNamesForFamilyName:familyName]) {\n    UIFont *match = [UIFont fontWithName:name size:fontSize];\n    if (isItalic == RCTFontIsItalic(match) &&\n        isCondensed == RCTFontIsCondensed(match)) {\n      CGFloat testWeight = RCTWeightOfFont(match);\n      if (ABS(testWeight - fontWeight) < ABS(closestWeight - fontWeight)) {\n        bestMatch = match;\n        closestWeight = testWeight;\n      }\n    }\n  }\n// Safety net\n  if (!bestMatch) {\n    RCTLogError(@\"Could not find font with family: '%@', size: %@, \\\n                weight: %@, style: %@\", family, size, weight, style);\n    bestMatch = [UIFont fontWithName:[[UIFont fontNamesForFamilyName:familyName] firstObject]\n                                size:fontSize];\n  }\nreturn bestMatch;\n}\n```\nThis fixes a bug with the regular RCTTextField where multiple font attributes can't be set as well.\n. @nicklockwood - try setting fontWeight: bold and fontFamily: 'Superclarendon' on a TextInput styles, only one will work at a time\n. :smile:\n. Heading out for a run, will finish this off and push code up later tonight! Edit: Actually, tomorrow :smile: Edit Edit: Actually, Monday :smile:\n. Possible API for more placeholder customization - probably for a separate diff but just documenting here: https://github.com/facebook/react-native/issues/1011#issuecomment-96321175\n. @nicklockwood - Changes up now, seems to be working well!\nI'm curious - I didn't notice tests for RCTConvert, do you think it's worth setting that up here to test the changes I made to it? If so, any chance you could pull the branch and add some scaffolding for the tests so I can be sure I'm following your preferred style?\n. @nicklockwood - woops, I'll check that out, thanks\n. @nicklockwood - I've reverted those changes, I think they are better suited for their own diff as they have implications beyond multiline text.\n. @nicklockwood - Scratch that, I fixed the issue and added an example that includes a styled multiline text input. Everything in the example app is working fine now with that fix! Still some work to go to get all props supported though.\n. @nicklockwood - finished adding support for remaining attributes, ready for review again :smile:\n. Looks like it was solved in #663 and merged in https://github.com/tadeuzagallo/react-native/commit/b0fb6e0566014b4ff9045c32a7eccfca8b6699e7\n. Closing, ping me if this is still an issue for you @jwyld \n. @tadeuzagallo - to JS, we could add something like:\n\nLeave a trailing comma after the list item in object literals\nUse object destructuring assignment where possible\n\nFor objc, do you have a preference on using [x setVar:y] vs x.var = y? Might be worth picking one to avoid any future bike shedding.\n. @tadeuzagallo - to JS, we could add something like:\n\nLeave a trailing comma after the list item in object literals\nUse object destructuring assignment where possible\n\nFor objc, do you have a preference on using [x setVar:y] vs x.var = y? Might be worth picking one to avoid any future bike shedding.\n. Closing this, feel free to re-open if you address the feedback above, thanks! :smile:\n. Closing this, feel free to re-open if you address the feedback above, thanks! :smile:\n. Can we close this @nicklockwood, @ide?\n. Thanks @jwyld!\n. Can we close this @tadeuzagallo?\n. See #997 - try pulling down that diff to see if it fixes your problem\n. cc @vjeux ^\n. Thanks @vjeux, that looks good to me - added that to #991. @drkibitz once #991 is complete do you want to try implementing that?\n. @mjw56 - just to clarify: When you pull down to dismiss a view that was introduced with FloatFromBottom it currently does not pop the route from the stack but does dismiss the view. This pull request also removes it from the route stack. Is this correct?\n. @lazaronixon  - I definitely like the improvement in the API here, are there any drawbacks to this approach? ObjC isn't my strongest language - is this automatically imported into AppDelegate in every app or will it be opt-in via manual import of the +notification category header?\ncc @nicklockwood @tadeuzagallo \n. Thanks!\n. @arthuralee - The tradeoff of generating from the most recent tagged commit is that we would have to create a new release every time we want to update docs. Version picker could be useful in the long run, at the moment but that could be tricky to implement properly - if you're up for that task feel free to give it a shot and open a PR!\nThis is not so hard to manage for docs that are generated from markdown files - we just only merge when the feature has been added - but for those that are automatically generated by comments it's a bit trickier.\nA couple of ideas:\n- Have something like a /latest path that exposes the docs from the latest tagged release\n- Update markdown docs at any time, generate component docs only from latest tagged commit\n. @arthuralee - do you want to have a crack at implementing auto-gen docs from tagged releases and others from master?\n. @arthuralee - yeah that must have just been a mistake to merge the docs before the functionality was released :smile: - great! thanks\n. No problem, whenever you get the time :+1: Thanks @arthuralee \n. @jaygarcia - how about publishing a library that exposes this functionality to JS?\n. @davidpfahler - it looks like this made it into the docs because it was included into the release - see comment here - it is merged into master but still not on npm. Until then you can use the former approach: curl 'http://localhost:8081/index.ios.bundle?dev=false&minify=true' -o iOS/main.jsbundle\n. @davidpfahler - this is live now in 0.4.1, we're tracking the issue of documentation sync in #1022 :smile: - if you have any ideas for how we can solve this problem they would be very welcome, thanks!\n. Maybe there should be a better way of dealing with this built into react-native, cc @vjeux, but you can try this out until then https://github.com/brentvatne/react-native-status-bar-size\nBased on changes in the status bar size, you could add a negative margin of the difference between the new status bar height and the default (20) to your container and that should offset it properly.\nLet me know if this helps @PhilippKrone \n. @PhilippKrone - agreed - it's still very early for react-native so it's likely that something like this will get built in eventually. Does the negative margin trick approximate what the default behaviour should be for you? (Shift content up to appear underneath the status bar). Perhaps we could look at building this in.\n. Great - this issue seems to be coming up a lot and I think a good solution would be to automatically do those offsets, but there should be a way to disable that as well, just in case. I'm sure @vjeux would have a better comprehensive insight into what would work best here. \n. @aaronksaunders - I tried pulling your app and I just saw this: http://url.brentvatne.ca/1isEN - that was a problem with your parse query, this fixed it:\njavascript\n    observe: function (props, state) {\n        return {\n            tutorSessions: (new Parse.Query(\"TutorSession\").include(\"place\").include(\"tutor\").include(\"user\"))\n        };\n    },\nNext, the actual problem - this is pretty easy to fix, in SessionDetail add react-timer-mixin and include it as a mixin, then render the map after the component has already mounted and performed an initial rendering pass.\n``` javascript\n/\n\n\n */\n'use strict';\nvar React = require('react-native');\nvar ActionSheetIOS = require('ActionSheetIOS');\nvar {\n    StyleSheet,\n    ScrollView,\n    MapView,\n    View,\n    } = React;\nvar moment = require('moment');\nvar TextLabelPanel = require('../Components/TextLabelPanel');\nvar Button = require('../Components/Button');\nvar TimerMixin = require('react-timer-mixin');\nvar SessionDetail = React.createClass({\n  mixins: [TimerMixin],\ngetInitialState: function () {\n    return {\n        relativeTime: moment(this.props.session.createdAt).startOf('hours').fromNow(),\n        annotations: [{\n            longitude: this.props.session.place.coords.longitude,\n            latitude: this.props.session.place.coords.latitude,\n            title: 'You Are Here'\n        }],\n        mapRegion: {\n            latitude: this.props.session.place.coords.latitude,\n            longitude: this.props.session.place.coords.longitude,\n            latitudeDelta: .01,\n            longitudeDelta: .01\n        }\n    };\n},\n\n\nshowShareActionSheet: function () {\n    ActionSheetIOS.showShareActionSheetWithOptions({\n            url: 'https://code.facebook.com',\n        },\n        (error) => {\n            console.error(error);\n        },\n        (success, method) => {\n            var text;\n            if (success) {\n                text = `Shared via ${method}`;\n            } else {\n                text = 'You didn\\'t share';\n            }\n            this.setState({text})\n        });\n},\n\ncomponentDidMount: function() {\n  this.setTimeout(function() {\n    this.setState({showMap: true});\n  }.bind(this), 250);\n},\n\nrenderMap: function() {\n  if (this.state.showMap) {\n    return (\n      <MapView region={this.state.mapRegion} style={styles.map}\n               annotations={this.state.annotations}/>\n    );\n  } else {\n    return (\n      <View style={[styles.map, {backgroundColor: '#cccccc'}]} />\n    );\n  }\n},\n\nrender: function () {\n    //  alert(JSON.stringify(this.state.annotations));\n    return (\n          <ScrollView>\n            {this.renderMap()}\n              <TextLabelPanel label=\"Name\" text={this.props.session.place.Name}/>\n              <TextLabelPanel label=\"Location\" text={this.props.session.place.Location}/>\n              <TextLabelPanel label=\"When\" text={this.state.relativeTime}/>\n              <Button\n                  onPress={() => this.showShareActionSheet()}\n                  label=\"Share Session Information\"/>\n          </ScrollView>\n    );\n}\n\n});\nvar styles = StyleSheet.create({\n    map: {\n        height: 250\n    }\n});\nmodule.exports = SessionDetail;\n```\n. @rxb - great :smile:\n. How abut this?\n<View>\n  <Text>this is </Text>\n  <Text onPress={this.onLinkPress} style={{color: '#0000ff'}}>facebook.com</Text>\n  <Text> link</Text>\n</View>\n. Sorry that was silly of me, this should work just fine:\njavascript\n<Text>\n  <Text>this is </Text>\n  <TouchableOpacity onPress={() => { AlertIOS.alert('hi!') }}>\n    <Text style={{color: '#0000ff'}}>facebook.com</Text>\n  </TouchableOpacity>\n  <Text> link</Text>\n</Text>\n\n. Wow great job folks\n. @nicklockwood - has this one been resolved? cc @tadeuzagallo \n. @paramaggarwal - can you wrap lines at 80 characters?\n. @paramaggarwal - given the above comments perhaps you could turn your docs into a blog post about why there is currently not a UITableView wrapper in react-native :smile: let me know if you want a hand with that\n. Agreed, neat idea :smile:\n. Hmm, I'm starting to wonder if this might be better suited as an external lib. @vjeux what are your thoughts on adding in additional polyfills to the react-native core both in general and also specifically in this case? :smile:\n. That makes a lot of sense @vjeux - thanks for the detailed response, we can refer to it in the future for other polyfill discussions\n. @robertjpayne's solution could work - or you can just do something like this\n<View style={{flex: 1}}>\n     <View style={{height: 50}}><Text>first item</Text></View>\n     <ScrollView style={{flex: 1}}>\n     </ScrollView>\n     <View style={{height: 50}}><Text>last item</Text></View>\n   </View>\nEither way, this question is better suited for IRC as it's not really an issue, more of a \"how to use Flexbox\" type of inquiry :smile:\n. @JohnyDays - you can get the actual backing stylesheet from the StyleSheetRegistry as @tadeuzagallo demonstrates here\n. @JohnyDays - good point. I believe it is put in the stylesheet registry for perf reasons. If you want to submit a PR with docs that would be awesome! :rocket:\n. :+1: to @vjeux's comment, should have pointed that out myself\n. @JohnyDays - nice :smile: looking forward to seeing the module\n. @finalquest - you can pass data using an eventDispatcher by creating it with initWithBridge passing in the bridge that is used by your root view :smile: - you just have to instantiate the bridge separately from the rootView (which you probably want to do anyways so you can share it between multiple rootViews)\n``` objc\n  RCTBridge *bridge = [[RCTBridge alloc] initWithBundleURL:jsCodeLocation\n                                            moduleProvider:nil\n                                             launchOptions:launchOptions];\nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                      moduleName:@\"YourModuleName\"];\n```\nAlternatively you can look at calling enqueueJSCall:args on the bridge directly, just as RCTEventEmitter does\n. :rocket:\n. @PhilippKrone - just a shot in the dark, did you try restarting XCode?\n. Maybe this?\n. Perhaps not, it looks like that was just some dead code removal (unless it produces some side effects). \n. @PhilippKrone - fair. Could you post the full code or something that will reproduce it so we can determine if the change was a fix or a regression? :smile:\n. :+1: thanks for the follow up, perhaps the error was with something inside of the dashboard component that lead to a dependency graph problem?\n. Interesting, it could be worth opening an issue if you want to re-create the problem in public repo so we can consider what might be a more descriptive/useful error message :smile:\n. @flipstewart - makes sense, can you submit a PR?\n. @flipstewart - seems reasonable to me, let's see how that looks when it's in place!\n. events is a node.js standard library module, @jaygarcia is right - here you would do require('EventEmitter') just like in RCTDeviceEventEmitter\n. @iceNuts - alternatively, you could include the events module from npm as I do here\n. ping @vjeux \n. Let's try to keep it to issue :smile: @plredmond thanks for the help, this issue will be forever linked to the other because of the above tag haha.\n. Confirmed this, what's happening is that _liveReload and _liveReloadPeriod are being thrown away on each reload because the devmenu is dealloc'd when a reload occurs - other menu options don't have their state stored in a devmenu class instance variable.\n. Closing this as we are tracking it now in the aforementioned pull request! Thanks :smile:\n. @paramaggarwal - this is a dupe of #914 I believe, feel free to re-open if not.\n. Thanks @ide - fixed those!\n. @tadeuzagallo - this would be a good fix to get into the next release if possible\n. @tadeuzagallo - this would be a good fix to get into the next release if possible\n. @tadeuzagallo - excellent, will close this then\n. @finalquest - react-native bundle will do that for you, if you have any questions that aren't answered by this thread or the issues that @ssssssssssss mentioned let me know, closing until then\n. @dolmens - what's your use case?\n. @dolmens - Ah, interesting. As far as I know, this is not supported at the moment, but @tadeuzagallo or @ide would know better than I\n. If you downgrade to 0.4.0 does it work for you?\n. Thanks!\n. Better suited for the react-native-svg issues :smile: feel free to open there\n. The order that you place the elements in determines its layout order, so if you put something at the end it will appear on top if you use position: absolute. Alternatively you can use my library react-native-overlay to bring anything to the front.\n. @JohnyDays - are the icons the last child of the posts?\n. @JohnyDays - yup, make them the last child, that will fix it\n. cc @vjeux re: consistent behaviour with web\n. @crylico - any interest in following through on this? If so, perhaps turn your gist into a PR and we can give feedback there :smile:\n. @crylico - awesome, looking forward to it :smile:\n. Tracking this in your PR @jmstout :smile:\n. @flipstewart - ping me when you've had a chance to update based on feedback! :smile:\n. @flipstewart - ping me when you've had a chance to update based on feedback! :smile:\n. Squashed these commits into one, made some further changes and merged https://github.com/facebook/react-native/commit/1a3ee9936521af4a5ff112ae4f68bd085af230b2\nThanks! :tada: \n. @lelandrichardson - looks like there hasn't been any progress here, would be great for you to jump in if you're still willing\n. @lelandrichardson - that sounds acceptable to me, I believe a .catch chained on the promise should cover these errors so I'm going to close this issue, we can reopen if you change your mind or other people have this problem\n. Code example here is incomplete, seems like this works fine for myself and others. Ping me with the uri that doesn't work and I'll reopen this issue @iceNuts!\n. Seems like @oveddan will try to implement this, as per #1349\n. This is an issue better suited for StackOverflow, I'd recommend posting \"how-to\" issues there and bugs here :smile:\n. javascript\nrender() {\n  if (this.state.bindPanhandlerToView) {\n     return <View {...this._panResponder.panHandlers} />\n  } else {\n     return <View />\n  }\n}\nIf this doesn't work, ping me with a runnable example and I'll reopen this issue @amitverma :smile:\n. Very interesting discussion, good to see some options presented here. Given that this is outside of the scope of React Native itself, let's move the discussion to discuss.react.js.org if there's anything left to be said!\n@rborn - feel free to ping us again in this discussion with followup if you do get a chance to test it in the app store!\n. This has been reported a bunch already, #65 being the earliest report of it :smile:\nI'd recommend searching issues in the future when you run into issues like this, you might even find a solution that way!\n. Thanks for the follow up @rborn!\n. lgtm!\n. Is this collapsable into #1287 @ide?\n. Ah okay, just wanted to be sure\n. @danawoodman - you can add this if you like! PR is welcome\n. I updated the documentation here finally! Hurray\n. Won't merge cleanly anymore :( Can you rebase and push please @SellaRafaeli?\n. Awesome, thanks for the report and patch @artemyarulin! Closing this issue as the discussion is being tracked in the PR now. :rocket:\n. @rymdluo - do you have a component defined in JS called DrawViewEngine? Check out this example: https://github.com/brentvatne/react-native-dashed-border-example/blob/master/index.ios.js - BVDashedBorderView is the native class name, DashedBorderView is the React class that I will use to wrap this component so I can specify customer propTypes etc.\n. @voronianski - hi there! Are you sure that the backing DVEffectsView class is linked to your project? You can verify it by doing var NativeModules = require('NativeModules') and checking for it on that object. \n. @voronianski - interesting, can you push a project up to Github?\n. @littleweb - https://facebook.github.io/react-native/docs/textinput.html#onsubmitediting onSubmitEditing should work for you. Ping me if not and please explain the use case and we can look at it again!\n. It looks like this isn't possible yet, do you want to try to implement it? See: http://stackoverflow.com/a/15297919/659988\nSomething like this on RCTMapManager.m (the delegate):\nobjc\n- (void)mapView:(MKMapView *)mapView didSelectAnnotationView:(MKAnnotationView *)view\n{\n    // Dispatch event through React stack\n}\n. @dvcrn - Nice one! Closing so we can track this in the PR\n. You can use the same approach that you would use in a browser :smile: - for example, http://blog.arkency.com/2015/03/use-your-gettext-translations-in-your-react-components/\n. @rustyconover - could you update this PR to load the images from Images.xcassets instead?\n. @slooker - It seems like in #1096 this was fixed by installing node 0.12.2, could you try that and let me know if it works?\n. Sure :smile: glad it was resolved\n. lgtm cc @vjeux \n. This seems very reasonable given the deprecation of optimist\n. @enaqx - are you still interested in getting this through? could you address the above comments if so? :smile: thanks!\n. Looks good to me\n. @enaqx - were you able to build the site without any errors after these changes?\n. @enaqx - I haven't heard back from you for a few weeks so I'm going to close this, ping me if you're interested in finishing this up and I'll reopen!\n. Seems reasonable, I think we might just be better off at this point removing the left margin entirely - the React docs don't have any and look very good. Can you update? Will merge as soon as you have it.\n. Sure, this is possible, check out https://github.com/jsierles/RNPlayNative for a demo. This app allows you to load bundles that are shared through a web app so that you can quickly preview and share.\n. @xiekunRonaldo - when you call initWithBundleUrl on RCTRootView, this is called to resolve the URL: https://github.com/facebook/react-native/blob/master/React/Base/RCTConvert.m#L67-L101 - you could try putting a breakpoint in here: https://github.com/facebook/react-native/blob/master/React/Base/RCTJavaScriptLoader.m#L34 to see what is returned from that and adjust accordingly\n. @xiekunRonaldo - do you mind posting the full source for code related to the issue here in case somebody else has the same issue? :smile:\n. @cxfeng1 @crysfel  - could either of you take a crack at this and submit a PR?\n. @cxfeng1 - can you not just broadcast the event on DeviceEventEmitter or AppEventEmitter?\nAs @nicklockwood said, if we can get some more details it would help! Closing until we hear back from you, but I am very curious to hear what you have in mind.\n. It would be fantastic if someone could reproduce this in a simulator on rnplay.org\n. @jtremback - it might be useful to set var DEBUG_SPY_MODE = true; in Libraries/Utilities/MessageQueue.js - but you will get a lot of noise from timers, so we'd probably want to filter that out.\n. It will \"re-render\" everything but with two caveats:\n1. The rowHasChanged function determines whether a re-render should occur in JS, so you can tune this according to your needs.\n2. For the rows that actually do change, the re-render doesn't destroy and recreate the view, it just sends some commands over to native to update it, such as the following:\n\"JS->N: RCTUIManager.updateView([278,\"RCTView\",{\"backgroundColor\":\"black\"}])\"\n\"JS->N: RCTUIManager.updateView([279,\"RCTView\",{\"opacity\":0.8}])\"\n\"JS->N: RCTUIManager.updateView([282,\"RCTNetworkImageView\",{\"src\":\"https://fbcdn-dragon-a.akamaihd.net/hphotos-ak-prn1/t39.1997/p128x128/851575_767334539959622_441598241_n.png\"}])\"\n\"JS->N: RCTUIManager.updateView([284,\"RCTRawText\",{\"text\":\"Row 3 (pressed) - Lorem ipsum dolor sit amet, ius ad pertinax oport\"}])\"\n\"JS->N: RCTUIManager.updateView([279,\"RCTView\",{\"opacity\":1}])\"\n\"JS->N: RCTUIManager.updateView([278,\"RCTView\",{\"backgroundColor\":\"transparent\"}])\"\n. @kenzan100 - It takes some time to merge changes to actual source files because these have to go through an internal Facebook process, even if it's just to a comment for docgen purposes, otherwise they will be overwritten later. Changes to markdown docs or files in the /website directory can be merged immediately though. So this one should get in there eventually.\n. Great :smile: thanks!\n. Neat solution there @yelled3 :smile:\nAs far as I know, this isn't in the roadmap cc @ericvicenti correct me if I am wrong and I will reopen. \n. @iceNuts - closing this because we haven't heard a followup, feel free to ping me if you're still having this issue, and if you can please post a runnable example repository or app on rnplay.org, thanks!\n. @amitverma - the documentation seems to be a bit unclear about this, this is how you need to specify it:\njavascript\n<View style={{flex: 1, transform: [{translateY: 50}, {scaleX: 0.5}, {scaleY: 0.5}]}}>\n   <Text>Text here!</Text>\n</View>\n. Updated docs to remove this, working on fixing it up to better display those options under the transform prop.\n@vjeux also informed me of something interesting: the reason that these are in an array in separate objects inside of the transform property is because order matters here - translate followed by scale is different than scale followed by translate.\n. Thanks for the follow up @rxb!\nI'm going to close this issue for now as it looks like the initial issue has been solved.\n. Any chance you could post a minimal example of this?\n. @jtremback - looks like this isn't exported: https://github.com/facebook/react-native/blob/master/Libraries/Fetch/fetch.js\nWhy not just pass the headers in like this? https://github.com/github/fetch#post-json\njavascript\nfetch('/users', {\n  method: 'post',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    name: 'Hubot',\n    login: 'hubot',\n  })\n})\nYou could modify your fetch wrapper to just add the token to the authorization header in the options object.\n. Being tracked in #1192 now, thanks @jtremback \n. @barneyboo - can you post the full code of the simple example? Check out this extremely simple example of implementing a dashed border view here: https://github.com/brentvatne/react-native-dashed-border-example - very minimal, should hopefully answer your question.\n. Also noting some other feedback from Slack:\n- CalendarManager name is confusing - doesn't indicate anything special for regular bridge modules, but it does for View managers.\n- More details on conventions\n. :+1: ba501a1bf50bb0ed9e16637e68965ef13cbcc6b3\n. @samuelcouch - same as how you would in a regular iOS app :smile: \nFollow steps 1-4 here: http://codewithchris.com/common-mistakes-with-adding-custom-fonts-to-your-ios-app/\nThen you can use that font family inside of your styles\n. @dalinaum - Probably the easiest approach is what was done there - create a fork and keep it updated with what we have on the main repo. A lot of our docs are extracted directly from the code and it would add a lot of noise if we had inline translations :smile:\nIf you need a hand with anything docs related, ping me in irc or on Twitter - @notbrent. Looking forward to seeing what you come up with, thanks a lot!\n. @unknownexception's PR looks great, closing this as we are tracking the issue there!\n@christopherdro #fridaytriage\n. Being tracked in the PR mentioned above :smile: nice work\n. @nicklockwood - I like that idea! @lukasreichart - any interest in submitting a PR?\n. The web audio API is just on the web, you can try to implement something similar on top of iOS tools like AVPlayer as I mentioned in our email discussion. As far as I know, there are not any plans to build this into the core at the moment but it would be awesome if you wanted to attempt to re-implement the web audio API on top of iOS components! Feel free to ping me on irc @notbrent if you want a hand with getting started.\n. @siejkowski - awesome, I would love to see the proof of concept!\n. d177a45bdce124b635dbc31ab0949d2e9d139eb3 broke the transform docs, rebased and fixed so this is now in a new section:\n\n\n. Thanks @nicklockwood!\n. @mvayngrib - thanks for the interesting discussion! if you ended up creating a native module for this, please do share :smile:\n@christopherdro #fridaytriage \n. @ranyefet - you could listen to keyboard events and set the position of your Done button accordingly when it opens: https://github.com/johanneslumpe/react-native-keyboardevents - there may be a more elegant way but this will work\n. Let's collapse this issue into #371\n. reminder ping for @spicyj \n. Ah yeah, big :+1: to promise!\n. Thanks! Sign the CLA and we can merge\n. @soheil you will need to use the Navigator component and create your own navbar component (at its most basic, just a view with some height and a background color / image inside, or use something like the react-native-navbar component mentioned above). \nEdit: scratch that above, you can pass in a Title to the routeMapper prop on the navbar, see the UIExplorer example - just use an Image instead of Text:\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigationBarSample.js#L77-L83\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigationBarSample.js#L122-L126\n. @tonyhb - looks good, seems like this can't be cleanly merged anymore could I bother you to do a rebase?\n. @nicklockwood - your name seems to be the one most closely associated with this code, any insight?\n. Actually let's move this discussion into one issue: #1294\n. I ported the VectorWidget with some fun swiping effects here, @spicyj any interest in adding that to the Examples directory?\n. The compare view works great for this: https://github.com/facebook/react-native/compare/a63b6ff11279e1c39e6147d8576b10c4e57c39d4...41612f37b0c31320b025043df9e954df540db171\n. @soliury - It would be useful to see but I'm not sure if the resources are available to compile a changelog. If anyone would like to take on this job I'm sure it would be welcome! This is an OSS project after all :smile:\n. @skyline75489 - is this happening on a brand new 0.4.2 project? react-native init SomeNewProject?\n. @amasad this seems like something that you are good at :smile:, any ideas?\n. Great, thanks for the fix @cparmar82!\n. @nimingzhe - you can't have a comment inline in JSX\nsource={require('image!k')}\n  //source={{uri: 'http://news.xinhuanet.com/world/2015-05/09/127782089_14311512601821n.jpg'}}\nthat is invalid.\nAside from that, are you using a normal project init process, react-native init, or are you using Cocoapods?\n. Thanks for the follow up @soheil!\n@christopherdro #fridaytriage\n. @soheil - happy to reopen if we can get an example on 0.5.0-rc up on rnplay :smile:\n. > I modified my entire app only to find out that Navigator is not what I want because the animations suck and don't feel native!\n@soheil - aw man, sorry to hear that. Which animations are you having trouble with? When you say they don't feel native, is it because they feel janky or just don't seem like they are the correct animations?\n\nSomeone should update this doc; how is one supposed to know the difference between Navigator and NavigatorIOS?\nAlso explain exactly why they are two different components, this should be in bold on top of both their doc pages. I'm yet to know the logic behind having two different ones.\n\nI believe that by reading the docs for each it is not too difficult to determine the differences, but agree that it might be useful to have a sentence at the top explaining how they relate to each other.\nNotice how with NavigatorIOS there is no way to add your own custom navigation bar? It uses the native implementation for it. Navigator allows you to write your own component to use as a navigation bar. Additionally, NavigatorIOS adds support for swipe-back, but Navigator has many more transitions available (eg: you can swipe a view down to dismiss it with floatFromTop), and they can be customized as well!\nWould a description like the above help to have in the documentation? Or would there need to be more information?\nAs for passProps, this is all done with renderScene I believe - you get the data from the route object that you pushed and then pass it in as a prop to the component that you render here.\n. @jtremback - NavigatorIOS uses UINavigationController, check it out to see what options are exposed\n. @jtremback - you can set the leftButtonIcon and leftButtonTitle, see #1230 for issue to improve parsing of the docs for this\n. Thanks for the :+1:'s folks, helps me to prioritize this\n. I haven't had much time for this recently but should get around to fixing up a bunch of docs this week. Additionally, to better reflect Facebook's priorities the idea is to move NavigatorIOS to an OSSLibraries folder and outside of the internal sync process which will allow us (the OSS community) to iterate on it more quickly.\n. Done: https://facebook.github.io/react-native/docs/navigator-comparison.html\n(just pushed, should be up within a few minutes)\n. @paramaggarwal - if we can come up with a name that communicates that these libraries are considered not part of the core and not actively maintained by the core team, that would be nice :smile:\nlet's get them moved into an OSSLibraries directory first, and we can revisit when that's done!\n. Thanks @henter!\n@christopherdro #fridaytriage\n. @lpww - this image isn't broken for me:\n\nIt's also definitely in the repo:\nhttps://github.com/facebook/react-native/blob/master/website/src/react-native/img/EmbeddedAppExample.png\nSeems like it's a problem on your end, thanks though!\n. Thanks!\n. Hi Tyler! This is related to #113 - you can call blur() on the TextInput ref that you would like to unfocus, and that will hide the keyboard. Notice in #113 that at the moment there is no way to unfocus an entire component subtree with a single blur call, but you can iterate over each of your TextInput components on the view when the back button is pressed and call blur() on each of them.\n. @nicklockwood - any progress here? this looks like a nice feature :smile:\n. @lukasreichart - really interesting stuff! Curious what @nicklockwood has to say about it\n. @pwmckenna - yup, check out the website/server and website/jsdocs directories. Some docs come from docs/, others (like those mentioned above) are generated based off of comments and prop data.\n. Thanks @arypurnomoz - I added a note in https://github.com/facebook/react-native/commit/39b2342ab9b394bbf7755749677facf97ab8f8a0\n. Looks like a bug to me, @lwansbrough can you test this out when you pull the newest version of css-layout? \nRunnable example that you can just copy and paste in: here\n. Thanks @dhrrgn, this does seem to be a regression.\nI took your gist above and turned it into a runnable example here:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  Text,\n  View,\n  StyleSheet,\n} = React;\nvar NavigationTabs = React.createClass({\n  render: function() {\n    return (\n      \n\n\nNav 1\n\n\nNav 2\n\n\n\n    );\n  },\n});\nvar styles = StyleSheet.create({\n  navTabsContainer: {\n    flexDirection: 'row',\n    borderWidth: 3,\n    borderColor: '#aaaaaa',\n    borderRadius: 10,\n  },\nnavTab: {\n    paddingVertical: 5,\n    width: 100,\n  },\n  navTabText: {\n    fontSize: 18,\n    color: '#aaaaaa',\n    alignSelf: 'center',\n  },\n/ This is the view that is not being clipped /\n  activeTab: {\n    backgroundColor: '#cccccc',\n  },\nactiveTabText: {\n    backgroundColor: 'transparent',\n    color: '#ffffff',\n  },\n});\nAppRegistry.registerComponent('NavigationTabs', () => NavigationTabs);\nmodule.exports = NavigationTabs;\n```\ncc @vjeux \n. Looks like this fix should land soon, see here: https://github.com/tadeuzagallo/react-native/commit/81401064e5bc0e50de5d77ec9e2384a70e43e2f4\n. @nickhudkins - can you also add this change to the README?\n. @opolyo01 - the geolocation module uses CALocationManager, and the startUpdatingLocation method when you call watchPosition.\nFrom the docs on it:\n\nCalling this method causes the location manager to obtain an initial location fix (which may take several seconds) and notify your delegate by calling its locationManager:didUpdateLocations: method. (In iOS 5 and earlier, the location manager calls the locationManager:didUpdateToLocation:fromLocation: method instead.) After that, the receiver generates update events primarily when the value in the distanceFilter property is exceeded. Updates may be delivered in other situations though. For example, the receiver may send another notification if the hardware gathers a more accurate location reading.\n\ndistanceFilter is set to kCLLocationAccuracyHundredMeters - if you were to set it to kCLLocationAccuracyTenMeters you would receive updates more frequently.\nIt might make sense to have this be configurable, but you'll have to keep in mind that greater degrees of accuracy result in higher battery usage. Any reason not to expose this @nicklockwood?\nIf you'd like to get the updates every x seconds, then just setting a timeout and grabbing the current location would be okay.\n. @nicklockwood - poor wording on my behalf - desiredAccuracy is exposed, distanceFilter is not\n. Closing as it seems to be fixed! @christopherdro #fridaytriage\n. @dvcrn - Nice one! Sorry for the lack of love on this PR - could you possibly squash your commits and rebase against master? Thanks!\n. @dvcrn - sorry could you rebase again and ping @a2 when it's done? the project is moving so quickly :smile:\n. Awesome :smile: thanks @dvcrn \n. Looks like this gives a red screen with a descriptive error message as it should. @christopherdro's suggestion is totally correct :smile:\n. @pukhalski - please post a minimal example demonstrating the issue :smile:\n. @martco - this is a bug with AnimationExperimental that has come up on numerous occasions - the AnimationExperimental library is on its way out and I'd recommend using a plain react library such as react-tween-state, see #722\n. - Let's add examples to the UIExplorer for each of the props that we are adding here\n- Agree with @sahrens that it seems unlikely that delayHighlightHide doesn't seem likely to be used, in the interest of keeping the API surface area smaller it's probably worth leaving this out.\n- As mentioned in #1078 we should have some asserts to avoid negative delays.\n- Also in the interest of keeping the API smaller, what do you think about making this an object? interactionDelay={{press: 500, pressIn: 200, pressOut: 300, longPress: 200}} - just an idea.\nNice job @jmstout :heart:\n. > You've both mentioned clearer asserts to avoid negative delay cases. Forgive my ignorance, but what exactly does this mean? In areas where negative delay props would cause issues I've made sure Touchable will only accept a minimum of 0, and in other areas, passing a negative value to setTimeout just returns the function immediately. Should we be throwing an error if a negative value is set? Or when you say asserts, do you mean testing? Any guidance would be much appreciated.\nI was thinking something like this - or maybe just a warning.\n\nAs far as condensing the properties into one delay prop that takes an object - I don't really have a preference one way or the other. I considered this initially but opted for the individual props as it seemed more in line with the style of existing React apis. (If we're going this route, could all of the onPress props also be defined in an object behind one interaction property?) Maybe @vjeux can weigh in here?\n\nLet's scrap that idea for now and just do the individual props as you proposed.\n@jmstout - still interested in pushing this through? If so, if you can address the points from your previous comment (in light of this comment), then rebase and squash into one commit I'll give it one last review and we can try to get it into an upcoming sync.\n. @jmstout - thanks for sticking with this :+1: :rocket: :cake:\n. @joewood my understanding is that this is an ongoing effort that is happening in parallel with and in part driven by Android development - I'm not sure there is so much value in having an open ticket, but if you like I can reopen this.\n. @umhan35's approach seems solid - check out the RCTDatePickerManager for an example of how this can be done\n. Nice one @umhan35!\n. Does this happen for all of you if you clone the repo and run the UIExplorer app?\n. Tested this on master in UIExplorer and it works fine. Make sure you have all of these files included in your Libraries/React.xcodeproj \nreact-native/React/Views/RCTSegmentedControl.h\nreact-native/React/Views/RCTSegmentedControl.m \nreact-native/React/Views/RCTSegmentedControlManager.h\nreact-native/React/Views/RCTSegmentedControlManager.m\n. @ojkelly - this looks good to me, can you add an example to UIExplorer? :smile:\n. Awesome @joeferraro \n. Similar to #530 this change is not necessary if #918 gets merged\n. @yelled3 - you could add it as an additional example in the UIExplorer :smile:\n. @dsibiski - any interest in updating the Embedded App docs to reflect your approach? It seems like you have a good amount of experience with it :smile:\n@nicklockwood \n\nWe should probably provide a different template for apps with multiple RCTRootViews. Or maybe just deprecate the RCTRootView convenience constructor that obscures the existence of RCTBridge.\n\nShould we spin this off into a separate issue?\n. Example here\nCould you fork this and modify it to produce the same bug?\nThanks @oblador!\n. Collapsing #1206 into this as well\n. @myusuf3 can you try cleaning the project?\n\n. @ide - agreed, also somewhat related to #749 perhaps\n. @tobyhughes - are you still interested in working on this?\n. @yangxf's answer is correct\n. @soliury - looks nice! would like to see it when the open source version is available. thanks for the follow up!\n. @romanonthego - strange one there, could you post a small project that reproduces this so we can clone and check it out? it helps a lot :smile:\n. Thanks @jimmystridh! In order to update these docs, you actually need to change the markdown in the /docs directory, I went ahead and did this because it was just a quick change and there were a couple of other changes I wanted to do in the same file: https://github.com/facebook/react-native/commit/424d1318c8bafe4055e7915034b73343654ab76a\nWe do have some open issues regarding docs if you want to help out with those!\nSee: #847, #1230 for example\n. Thanks for all of the work here people, looking forward to seeing this in :smile:\n. @a2 - any chance you have a bit of time to :heart: this PR?\n. @vjeux - can you shed any light on how you'd like to do naming for these types of events, as per @unknownexception comment above?\n. @PhilippKrone - going to close this issue for now, if you're still having this issue it would be awesome if you could reopen with a runnable example as per contributing guidelines\n. @philikon - sure - I've never run into this issue, as per the above comment - if you take out the status bar related code, does it still crash?\n. I would remove all calls to forceUpdate and see if that fixes it\n. Haha, sorry @philikon I indeed mentioned you by mistake ;) Best mistake I've made today\n. These types of how-to questions are best suited for StackOverflow - if you run into a bug in the process then please report that here! :smile:\n. @dvine-multimedia - silly me, I didn't search before opening my issue - thanks for the report! Given that I have more notes in the other issue, I'll close this instead\n. Are you still having this issue @mintuz @onlymejosh? Is your shell $EDITOR or $REACT_EDITOR set to nano by any chance?\n. Similar: #1273 \"Allow translucent on NavigatorIOS\"\n. @vjeux - this looks good to me, do you see any issues with pulling this in?\n. Closing as there has been no response and doesn't seem to happen to others. @NecoleYu if you're still having the issue then ping me with some more details and we can reopen :smile:\n. Looks good to me\n. :+1: thanks @nicklockwood!\n. @tsunammis - looks like that won't be needed :smile: hope you join in on Friday!\n. Hardcoded values seem to make sense here, it would only become an issue if it were to change in some new release and then there would be different values for different iOS versions. But as it stands now this seems reasonable!\n. @Dharmoslap - makes sense. Unfortunately nobody on the team is currently working on NavigatorIOS because it is not used internally - if you'd like to submit a PR for this it would be welcome!\n. @ide - good point. It couldn't hurt to augment the docs to reflect this odd behaviour.\n. @christopherdro - nice demo :smile:\n. Awesome :smile:\n. I think we would probably want to execute the JS via a direct function call, eg:\n<WebView ref=\"myWebView\" />\nthis.refs.myWebView.execute('alert(\"hello world\")')\nIt would also be neat if there was some way to get data back via a callback function :smile:\n. Good points @tadeuzagallo!\nIf we want to integrate this into our standard UIWebView based WebView perhaps we can just use stringByEvaluatingJavaScriptFromString?\n. @oveddan - let's try it as a separate Github repo and see how it turns out, if doesn't end up being too large or if there turns out to be a lot of demand then it might be worth integrating into core\n. @oveddan - fyi, I just noticed #1191 \n. @alinz - not sure when, it's a WIP. @oveddan - great, feel free to drop in there with comments to make sure it's appropriate for the use cases you foresee you will need :smile:\n. @liubko - if you would like to update the docs for TouchableWithoutFeedback to explain this, that would be great :smile:\n. @pwmckenna - is there somewhere in the documentation where it's mentioned that you can use multiple children? If so, we should definitely fix that :smile: \n. @pwmckenna - haha good point, do you have time to put together a PR that updates the docs to indicate this?\n. @TYRONEMICHAEL - I opened issue #1410 to address the documentation problems. Check out the ScrollResponder source for more info on these events - there are some pretty good comments documenting how they work.\nAlso, let me know if you come up with custom horizontal ScrollView pager, would be curious to see your implementation - I'll need to do something like that myself soon.\n. @rxb - that looks so cool! If you'd like to put together a PR for it, that would be much appreciated :smile:\n. @rxb - try restarting Xcode and packager. if that doesn't fix it, vjeux/react-native#a5cabd17 works fine, just tried it\n. @rxb - one thing I didn't see there in the video, can you cancel the snap by starting to scroll again? That's something that's very missed from the current snap implementation\n. @rxb - including this in my newsletter this week :smile:\n. @rxb - yeah, like that but also in the opposite direction - so if it starts to snap you can cancel it and scroll back\n. @rxb - yeah, like that but also in the opposite direction - so if it starts to snap you can cancel it and scroll back\n. @rxb - awesome :smile:\n. @qingfeng - I would strongly advise that you don't use AnimationExperimental for now, and instead use something like react-tween-state - a better animation api is in the works. See this project for an example of using react-tween-state to animate multiple properties.\n. @marcshilling - is this a brand new project that you created with react-native init? If not, we'll probably need to see the code for it to be able to guess at what might be the problem :smile:\n. @marcshilling - is this a brand new project that you created with react-native init? If not, we'll probably need to see the code for it to be able to guess at what might be the problem :smile:\n. Curious to see what the solution is here!\n. @carlgik4 - This wouldn't be related to your ssh config - it seems like your network is blocking the connection. You can try it on another network or create a fork of the project to get it working right away.\ncc @frantic\n. @myusuf3 - sorry I don't quite understand the issue because there is not a code example. If you can provide a runnable repo that I can clone that would help a lot and then I would be happy to reopen and look into it :smile:\n. @rxb - thanks for bug report and examples, it would be ideal the example includes all code necessary to reproduce the problem - currently no mention of navigator. Additionally, if you can post it on rnplay.org - eg: https://rnplay.org/plays/NVOjJA (feel free to fork this) that would help a lot too and it makes it easy to test it across various versions\n. Thanks @rxb! That's perfect.\n. Thanks @rxb! That's perfect.\n. Wanted to find out where this broke - 0.4.2 works, 0.4.3+ is broken.\n. Wanted to find out where this broke - 0.4.2 works, 0.4.3+ is broken.\n. @lwansbrough - good point, do you have any time today to try that out?\n. @ccheever - Have any time to put together a PR to fix this? High quality error messages are very important for dev workflow :smile:\n. This is an interesting idea. As far as I know, this happens for Image and Text because those are actually available in the browser environment, whereas others are not.\n. @vjeux @spicyj - any thoughts on this?\n. I think the line that @ccheever is referring to that seems most useful is \"You probably forgot to require x\"\n. :+1:\n. Hi @faithfe - if you push a new route, you need to specify what the back button icon should be in that as well - not just in the initialRoute. Also, your left button looks like it also has the back button image.\nIf the above doesn't help, can you post a runnable example on https://rnplay.org/ please?\n. Hi @faithfe - if you push a new route, you need to specify what the back button icon should be in that as well - not just in the initialRoute. Also, your left button looks like it also has the back button image.\nIf the above doesn't help, can you post a runnable example on https://rnplay.org/ please?\n. @yelled3 - fair point, fixed here: https://github.com/facebook/react-native/commit/ffcdf210044b2fb2cb7702d0bec29eb3d279b89a - thanks :smile:\n. @yelled3 - fair point, fixed here: https://github.com/facebook/react-native/commit/ffcdf210044b2fb2cb7702d0bec29eb3d279b89a - thanks :smile:\n. Closing this because you created a pull request, so we can track the issue there :+1:\n. It would appear that @ide fixed this one in #1377, doh\n. @MossP - you can get the underlying ScrollView by calling getScrollResponder on it, and then you can call scrollTo on that :smile:\n. @jawadrehman - you could use the UIManager measureLayoutRelativeToParent function to determine the position and then scroll to that\n. The function signature is:\nRCT_EXPORT_METHOD(measureLayoutRelativeToParent:(NSNumber *)reactTag\n                  errorCallback:(RCTResponseSenderBlock)errorCallback\n                  callback:(RCTResponseSenderBlock)callback)\nSo you need to pass in a ref to the component, then an error and success callback - the success callback will give you an array of values:\ncallback(@[@(leftOffset), @(topOffset), @(width), @(height)]);\nSo let's say that your row has some ref like \"mySpecialRow\"\nthen..\n```\nvar UIManager = require('NativeModules').UIManager;\n// inside of your component...\nReact.findNodeHandle(this.refs.mySpecialRow),\nfunction(error) { ... },\nfunction(leftOffset, topOffset, width, height) {\n  // Do something\n}\n``\n. @dvine-multimedia - are you usingsetNativePropsto set thevalue` to null?\nsetNativeProps example\ncontrolled setState example\n. @dvine-multimedia - good point, documentation for setNativeProps would be useful! Related - it might also be useful to add documentation for the issues faced in this discussion - also pertaining to communicating directly from js->native\n. @grabbou - any interest in adding some documentation for blur() and focus()?\n. @grabbou - TextInput seems like the best spot\n. @grabbou - I'm going to close this issue, can you open a PR for that when it's ready? Thanks :smile:\n. Docs that cover setNativeProps for TextInput clearing are here: https://facebook.github.io/react-native/docs/direct-manipulation.html#setnativeprops-to-clear-textinput-value\n. Hi @dvine-multimedia - check out this pull request: https://github.com/facebook/react-native/pull/1229\nIf that doesn't help, join us in irc (freenode #reactnative), these types of questions are better suited for discussion in that context :smile:\n. Hi @dvine-multimedia - check out this pull request: https://github.com/facebook/react-native/pull/1229\nIf that doesn't help, join us in irc (freenode #reactnative), these types of questions are better suited for discussion in that context :smile:\n. @sahrens - looked at the git attributions for this and it looks like you are the right man for this issue, feel free to re-assign if I got it wrong :smile:\n@umhan35 - can you elaborate on that last point?\n. @tadeuzagallo - Github Issue Assigner - I had the same problem so I made this extension.\n. From IRC\n\npotomushto:\nIs there any plans to introduce a cache policy for images? For example, to be able to set expirationDate for RCTCache keys (<Image expire={week} />) or add methods to manual invalidating (this.res.image.reload())?\n. @alinz - this is fixed in the next release: https://github.com/tadeuzagallo/react-native/commit/8d992262ed2dcf0d46e8d22e605764902c33012f\n. @oblador - ah, this would allow you to transition more smoothly by having the same background colour as the launch screen in the \"flicker\" moment.\n\n@vjeux - how do you get past this issue in FB apps? I noticed that F8, which if I understand correctly is 100% React Native, transitions directly from the launch screen to the app. cc @nicklockwood \n. This is a dup of #846\n. ping @nicklockwood\n. @Iragne - can you rebase this and squash it into one commit? It looks like it won't be a clean merge\n. @bparadie - yeah let's move that over to a separate PR! thanks\n. Closing because of the new PR\n. Hi @faithfe! Your image should be inside: Images.xcassets/icon.imageset/icon.png. Try deleting the imageset on app B and re-adding it like this: https://facebook.github.io/react-native/docs/image.html#adding-static-resources-to-your-app-using-images-xcassets\n. @faithfe - yeah you will need to add all of those image assets to app B as well\n. @martco - pretty sure it should be RCTMap, can you try running the code? It is assumed that all view components have a Manager class and that is appended to the end of the name then used to instantiate it\n. Great :smile: - if you're up for it, maybe you could add that to the docs to clarify so others don't have the same confusion that you had\n. Also, when using onScroll, I receive this warning:\nWarning: Don't set .props.onScroll of the React component <ScrollView />. Instead, specify the correct value when initially creating the element or use React.cloneElement to make a new element with updated props. The element was created by OrganizationProfileScreen.\nJust based off of this\n<ScrollView style={{backgroundColor: 'white', flex: 1, borderWidth: 0}} onScroll={this._onScroll}>\n</ScrollView>\n. onScrollAnimationEnd doesn't seem to fire for horizontal scrolls\nedit: need to use onMomentumScrollEnd - onScrollAnimationEnd refers to the incorrect event type and updating that does not fix it even\n. Might be useful to have a way to get the current contentOffset - just as we can access the contentSize\n. Note: this is a bit of a braindump right now from working with ScrollView, will cleanup when I'm done\n. Being tracked in #1382 now :smile: thanks for the report @dalinaum \n. Being tracked in #1382 now :smile: thanks for the report @dalinaum \n. @ide - good call, changed\n. Hey @shayne - noticed that you just closed this again, did this turn out to not be a problem after all?\n. @shayne - ah ok, thanks!\n. Looks reasonable to me\n. @lzyy - Thanks for the follow up here! I don't know a lot about this area and I'm very curious to what your objective is in replacing the delegate :smile: could you explain?\n@nicklockwood @sahrens - you two seem to appear most in the git history for this, did you have any ideas for how this might be extendable? cc @tadeuzagallo because this is bridge related\n. Hi @iostalk! Can you explain the use case and provide some sample code for how you would like to use this from the React Native side?\n. @iostalk - I haven't tried that myself, this is probably a better question for StackOverflow now that I see it, could you repost it there? If you don't get an answer, ping me here and I can reopen and see if someone on the team can help you. :smile: \n. Seems reasonable - right now my workaround is to create a index.ios.js that requires my app, but this seems cleaner.\n. @bparadie - do you have time to submit a PR for this?\n. @bparadie - agreed!\n. @esauter5 -  it looks like your first example works as expected - can you reproduce your issue on rnplay.org please?\n. Thanks @tadeuzagallo :smile:\n. @bright-sea - I think what we want here is something like:\n<WebView url=\"/web/index.html\" />\nThen we just check if the url is http http or not - if not, we do something like this\nOr we could explicitly support setting a root\n<WebView baseURL=\"/web\" html={html} />\nAnd then you can pass in your html prop just like above.\nDo you want to try submitting a patch for that? cc @JohnyDays \n. @bright-sea - the second option I proposed would help:\n<WebView baseURL=\"/web\" html={html} />\nBy setting the baseURL, like in the example I linked to on StackOverflow, the WebView knows where to look for the css/js that you link to :smile:\nThe html var I'm using there is just the same as what you used in your original post.\n. @JohnyDays - that would be great! looking forward to seeing it when you have time.\nGiven that this issue has been solved for now I'll close this, but I hope to see a PR to add something like what I mentioned above to WebViews - I think that would be very useful.\n. Hi @chandu0101 - this type of question is best suited for StackOverflow - if this turns out to be a bug, feel free to create an issue here in accordance to our bug reporting guidelines. Thanks!\n. @chandu0101 - reopened! any interest in submitting a PR for this?\n. @chandu0101 - it looks like there is an existing PR for this! #1247\n. I believe I see that being mentioned elsewhere but can't seem to find it cc @ide \n. @ide that's the one :) thanks\n. > Please note that the simulator is very unreliable for this kind of profile, the timing is not the same as in the device (this profile is from the simulator since I just took a quick screenshot to attach), but you can notice things like the VSync values on the UI thread and JS threads are completely different, what doesn't make any sense.\n@tadeuzagallo - is this still true on the most recent version of the profiler? Just looking back of some screenshots I did for release notes last night and it looks like VSync values on UI/JS thread were properly aligned\n. Looks good to me, thanks!\n. dup :P\n. Maybe we can add in parens after bare timers (setTimeout(...)) and after this mixin (this.setTimeout(...))? Just to be super-extra-clear. Thoughts @christopherdro?\n. We strongly discourage using the global setTimeout(...) and recommend instead that you use  this.setTimeout(...) provided by react-timer-mixin. This will eliminate a lot of hard work tracking down bugs, such as crashes caused by timeouts firing after a component has been unmounted.\n. Dup: https://github.com/facebook/react-native/issues/700\n. @checkraiser - can you ask that question in the issue I mentioned above? Ideally we would keep all related conversations in one place\n. > The good thing about front-end web technologies is that there are a lots of people who know how to quickly debug them just in the browser using DOM inspector. What is the point about making mobile application with CSS, if I can't use the benefit of DOM inspector? Alright, I can just follow the docs + common sense and hope that everything will always just work, but there will be for sure situations where inspecting CSS might be really helpful.\nI would argue that is not the good thing but one of the good things about it. You get many benefits of using CSS-like styles in React Native :smile: - such as familiar syntax, Flexbox layout, etc. Additionally, inspecting CSS should be much less of an issue in React Native where you must use inline styles, because you don't have to worry about the cascade - so you should just be able to look at your component file and see the styles right there.\nThat said, inspecting elements is certainly useful and efforts are underway to add an element inspector to React Native. You can try it right now by installing from master npm i facebook/react-native#master --save. You can expect it to become more fully featured over time!\n\nThere are already toolkits out there (Cordova/Ionic), where you can run your mobile app directly in the browser and debug it from there.\n\nThis works fantastic for them, and the reason is that the only context the app ever runs in is inside of a browser, so whether that's a WebView on an iPhone in Chrome, it's the same thing. React Native does not run inside of a WebView - you are interacting with real native UI components.\n\nSo we need to be able to open React Native app in the browser, develop it from there, and then run it in xCode. That would probably mean to incorporate React.js components to substitute React Native component's inside browser, using some CSS/JavaScript similar to what http://touchstonejs.io/ or http://www.idangero.us/framework7/ are making.\n\nAs far as I know, this is not on the roadmap. You're more than welcome to investigate yourself and try to make this work!\n. cc @vjeux \n. @Dharmoslap - #182\n. @Dharmoslap - also see #770\n. Consolidating this issue into #182 :smile:\n. @browniefed if you get stuck don't hesitate to ping me on irc or twitter!\n. @browniefed - that seems like a good place to start!\n. Looks good to me\n. @kayluhb - please sign the CLA and we can mark this as accepted!\n. Sorry folks, I accidentally pushed this commit while updating docs but went ahead and reverted it in 62fef1075526fe21b9791c2a1cb40b9774e4d762 - feel free to fix the history if you like\n. Hi @the4dpatrick - this is the type of question better suited for StackOverflow or IRC - if you don't have any luck there, feel free to open an issue.\n. Closed with #1548 :smile:\n. This fixed the issue for me, nice one @spicyj \nIt would be great to get this into 0.5.0 as it's a small bugfix so it seems like it might be appropriate cc @vjeux \n. Sounds good, thanks for the clarification\n. @oveddan - you can actually avoid setting an explicit height at all.\nThe problem seems to be this: if a parent does not have flex, this doesn't work.\nSimplified example with flex: 1 on container\nSame example without flex: 1 on container\nYou'll notice that this is very similar to the following change:\n\nSo this behaviour is a bit different in that we can't just say display: flex on the parent container and make it work, we have to give it a height or flex value, and then that stretches to the full available container size. I'm curious if this behaviour is intentional - I would say it seems like a bug after all - cc @vjeux \n. AnimationExperimental is deprecated and will be replaced soon, sorry. For the moment you are better off using react-tween-state or rebound (used in various places by react-native, so it's already in your project ready to require).\n. Agreed, this is a good start. In addition to what we have here, it would be great if we could include instructions as per https://github.com/facebook/react-native/issues/700#issuecomment-105406099 for how to do it without mocking out all of the pieces in order to be able to use the shallow renderer.\nCould you try this out to see if it works with 0.6.0-rc? If not, let's find a way to make it work :smile:\n. @sahrens - sure thing\n. What use case do you have for using a name other than React? While this isn't ideal I don't think it is really a big issue either :smile: cc. @frantic.\n@alinz - If you want to look into it and submit a PR that would be great.\n. An example of how you might do this @JohnyDays:\n``` objc\n- (void)setHtml:(NSString *)html\n{\n  _html = html;\n  [self applyHtmlAndBaseUrl];\n}\n\n\n(void)setBaseUrl:(NSString *)baseUrl\n{\n  _baseUrl = baseUrl;\n  [self applyHtmlAndBaseUrl];\n}\n\n\n(void)applyHtmlAndBaseUrl\n{\n  if (_baseUrl != nil && _html != nil) {\n    // set them on the webview\n  }\n}\n```\n\n\nBut you need to be sure that the JS component that wraps this always passes in a baseUrl, even if the user doesn't, otherwise the html prop will never be applied when the user leaves it out.\nor you could set them both via a dictionary so you are certain that they are applied at the same time\n. @JohnyDays - maybe it's easiest for us to collapse all of these options into a source prop that is a dictionary?\n. @JohnyDays - let's do that, leave the existing API in place and submit a PR then get some feedback on it - maybe we can leave those props in for a while and deprecate them after a few versions if we decide to go in that direction\n. @JohnyDays - sounds like a great idea :smile:\n. @nicklockwood - any tips on how I can fix this?\n. Sorry I didn't get around to this, will try to sometime in the next week\n. @srameshr - What XCode version?\n. @srameshr - update XCode to 6.3, that should fix your problem :smile: \nIf it doesn't, ping me and I'll open this issue up again.\nAlso, I updated the docs to indicate the recommended XCode version here: https://github.com/facebook/react-native/commit/613e561751db09a82d12137790310da1278ddcb3\n. I update the package.json to point to the specific version that I want then do npm install again\n. @bretrouse - yup the iOS files will update too, you might have to restart Xcode to be safe. You will occasionally run into problems if new modules are renamed eg: when websocket was added, the included project was renamed from RCTWebSocketDebugger.xcodeproj to RCTWebSocket.xcodeproj, but for the most part it will just work because it will just be referring to React.xcodeproj and other required components by relative path to node_modules (not actually copying it anywhere).\nI think a good approach to this will just be to include anything such as the websocket change into the breaking changes in the changelog for each release. Creating an update command is probably overkill here because it will generally be quite straightforward to do. Maybe if this becomes more complicated it will be worth re-visiting. cc @vjeux\n. @bretrouse - you raise a good point though, this should be made clear in the docs\n. @adamkrell - looks good aside from the one small style nit, can you fix that and squash into one commit?\n. Interesting, in a recent commit I changed this to specifically not include the git schema\n@chumster - does npm i tadeuzagallo/sane#a029f8b04a work for you?\n. With latest npm 2.7.5 as well as 1.x\n. Closing because I didn't hear back from you\n. fwiw @ericvicenti I had to add react-timer-mixin to my project's package.json for my project to work using this branch\n. Makes sense, thanks @ide \n. @ide - even better, good call\n. @grabbou - makes sense, so OSSLibraries/Components/NavigatorIOS? \n. @jsierles - @ide @vjeux and I discussed this and it may happen eventually but at the moment it would complicate things a bit too much on the Facebook end, so this is a step towards that\n. Hi @lazywei!\nSome thoughts:\n- Is it more common to listen to both foreground and background or to listen to them separately? With this approach, we will need to add two listeners if we want to listen to both.\n- Could we use one event and pass in the event object whether it is foreground or background?\nI don't have a lot of experience with this area so I'm curious what other smarter people like @ide think.\n. Thanks for it anyways @lazywei, even if it didn't work out :smile: \n. module.exports = ((null: any): typeof POPAnimation);\nis this valid syntax or is the issue with the transformer?\n. Ran into this myself on facebook/react-native#8b93b9 installing from https://github.com/rnplay/rnplay-ios/tree/c97ebe51860abcc249a9cbbf754b3bc8e0ddaad0\n. Ran into this myself on facebook/react-native#8b93b9 installing from https://github.com/rnplay/rnplay-ios/tree/c97ebe51860abcc249a9cbbf754b3bc8e0ddaad0\n. Thanks @sebmck!\n. Discussion about this on the contextify repo - maybe that will help @lorenzostdubois \n. @lorenzostdubois - indeed, can you chime in on that issue I linked you to above? I think that they can help you better there.\nWhat node version are you using? Or are you using iojs?\n. The docs serve the OSS community and should be driven by us as well.\nIf you would like to browse the older documentation you can actually just run the server locally very easily - clone the repo and check out the version you are interested in, then cd into the website directory and run node server/server.js - this will start up a docs webserver locally and you can now browse it.\nBut you're right that it should default to stable and not rc. We discussed this a bit in #1022, @arthuralee perhaps you and @ldesplat can collaborate on coming up with a solution for this?\n. @arthuralee :+1: to the version picker, between stable and RC is an excellent starting point\n. @rxb - could you also squash these commits into one?\n. Not sure who owns ScrollView cc @tadeuzagallo @nicklockwood \n. @rxb - Absolutely! I think the closer that we can be to the w3 spec the better. Great point, can you adjust accordingly? cc @vjeux \n. @vjeux - there are several problems with paginate={true}:\n- Fixed page size to the viewport width\n  - If it were to support variable widths, it would need to have an option to specify where to snap to (middle, left-side, right-side)\n- Horizontal paging only\nLike in the screenshots that @rxb posted in the original comment above, it's quite common to want to snap to something other than the viewport width\n. Fair @sahrens :smile: - I don't have a clue either, we can wait for Nick then :+1:\n. Thanks @browniefed! @elgubenis - did this solve your problem?\n. @paramaggarwal - this is a really interesting idea! cc @vjeux \nAn initial bit of feedback:\n- I'm not sure that this is best suited as an addition to Image, but rather as a separate component.\n- ~~It feels awkward to specify the width and height in the style when that will not be respected - it would make more sense to include this in the source prop~~ sorry I read that wrong :smile:\n. Great points @ide - what are your thoughts on this @vjeux? I know you've looked into this kind of thing previously.\n. Also, this is a dup of #846\n. Looks good to me, thanks!\n. @olivierlesnicki - you can require it using var TouchableBounce = require('TouchableBounce') - it isn't currently included in the react-native export.\nSee https://rnplay.org/apps/q8c-hg for an example\n. @olivierlesnicki - you will need to link Libraries/Animation/RCTAnimationExperimental.xcodeproj with your project\n. @jaygarcia - I'd recommend updating the version in package.json then just running npm i again\n. @vjeux - I think it snuck in because of the 2048 example. Agreed, this would be nice as an external lib\n. Thanks @kevindeleon! This looks good to me.\n. I like this idea a lot, cc @tadeuzagallo for review\n. @grabbou - if you create one and @vjeux would prefer it to be on the Facebook account we can look at transferring it :smile:\n. Haha awesome thanks :100:\n. FYI, tangential to this issue is #584 - it's awkward that we have both password and secureTextEntry, so it would be nice to pick something that is as closely aligned as possible to web naming conventions and deprecate those. Contributions welcome!\n. This is an issue with Packager that has since been fixed: #1526 - thanks for reporting! :smile:\n. There hasn't been any followup in a few days, @hpze2000 ping us if you're still having the issue, thanks! :smile:\n. Is this happening for you on master as well? Is the render function being called on your HomeNavigatorComponent? I notice a couple of warnings there, you could try fixing those and see if that helps too\n. @threepointone - can you post the code where you have a problem? I just tried this on my own project with 0.5.0 and this worked fine for me\nedit: fwiw, I did this:\n``` javascript\n  componentWillMount() {\n    this.springSystem = new rebound.SpringSystem();\n    this._scrollSpring = this.springSystem.createSpring();\n    this._scrollSpring.setRestSpeedThreshold(0.05);\n    this._scrollSpring.setCurrentValue(0);\nthis._scrollSpring.addListener({\n  onSpringUpdate: () => {\n    var val = this._scrollSpring.getCurrentValue();\n\n    this.scrollView && this.scrollView.setNativeProps(precomputeStyle({\n      transform: [{translateX: deviceWidth * val}],\n    }));\n  },\n});\n\nthis._panResponder = PanResponder.create({\n  // Claim responder if it's a horizontal pan\n  onMoveShouldSetPanResponder: (e, gestureState) => {\n    if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n      // Some initial setup?\n      return true;\n    }\n  },\n\n  // Touch is released, scroll to the one that you're closest to\n  onPanResponderRelease: (e, gestureState) => {\n    var gestureCompletion = (gestureState.dx / deviceWidth) * -1;\n    var doesGestureRelease = gestureCompletion > 0.5;\n    this._scrollSpring.setEndValue(doesGestureRelease ? -1 : 0);\n  },\n\n  // Dragging, move the view with the touch\n  onPanResponderMove: (e, gestureState) => {\n    this._scrollSpring.setCurrentValue(gestureState.dx / deviceWidth);\n    // this.moveTo(this.state.beginOffsetX + gestureState.dx);\n  },\n});\n\n},\n``\n. @threepointone - full code example [on rnplay.org](https://rnplay.org/apps/qHU_5w)\n. @threepointone - I believe [this is why it works](https://github.com/facebook/rebound-js/blob/master/rebound.js#L1120-L1122) \n. glad it was resolved @threepointone :smile:\n. I'm going to close this because otherwise it will just sit here, but a PR is very welcome to fix this :smile:\n. @ide - maybe onTick? runTick is fine by me as well, no strong preference\n. @bparadie - seems to fix the size portion at least, I'm not familiar with this too much - is there a native api for configuring the orientation as well?\n. @bparadie - Makes sense. What's a use case for configuring the orientation? How does that work? Aren't thumbnails square?\n. This has worked for a while, the error seems unrelated to the class problem. If all you do is toggle between thecreateClassandextendsdoes that break it still?\n. @soliury - but with bothcreateClassandextends? or justextends`? can you reproduce on rnplay.org?\n. :guitar: :rocket: thanks for the feedback! @ide - excellent point, will try that as the default\n. @jawadrehman - that shouldn't cause any problems, related to #1562 - PR welcome :smile:\n. @jawadrehman - actually I'm not familiar with the first one cc @tadeuzagallo \n. This is what I see on 0.6.0rc:\n\n(https://rnplay.org/apps/BrylDg)\nThe red border is for the Text element with the blue background.\nThere is some discussion going on about this in #1504 as well.\n. @hansonkd - I'm not seeing this in the simulator on my laptop, what kind of machine are you using? I don't see how this would be React Native specific, it seems more like either a simulator issue or slow hardware. Try this out with just a plain UIDatePicker, without React Native and let me know if you still have the issue. If you're not familiar enough with iOS to do this, check out this tutorial - you can download the source and run it.\n. @hansonkd - ah, makes sense, hard to say what could be going on with the early developer release of El Capitan :smile:\n. Yes, you can do this :smile:\nYou will have to use Objecitve-C or Swift and write it as you would with any other native app at the moment.\n. Maybe I'm misunderstanding, it seems like you just want to have your modules loaded and exposed globally automatically? Could you not create a single file, require that in your main app, and do something like this to make everything attached to the global object?\n. @maplebaby - this looks like a dup of your own issue #1540\n. @alvaromb - just a quick thought from browsing the moment docs, what about:\nvar moment = require('moment');\nvar esLocale = require('moment/locale/es');\nmoment.locale('es', esLocale);\n. Also, see this: https://github.com/moment/moment/issues/2007#issuecomment-99811475\nIf it doesn't fix the problem, let me know and I'll reopen\n. It isn't possible to do getDOMNode with React Native at the moment, but anything that you can do with that can be done other ways. For example, you can use onLayout to get your MapView dimensions.\n. @jtremback - that simulator is on 0.5.0 (see the header bar)\n. @vjeux - I think we need to update css-layout\n. @steve-ng - can you share the code behind the AdView?\n. Oh, excellent :smile: thanks for the follow up!\n. While this would be nice, I think it could slow down merging PR's and would require a lot of buy-in from all parties. Thoughts @vjeux?\n. Great point @ccheever - updated accordingly\n. I'm happy with this now, thanks so much for the help @ide @ccheever :heart:\n. cc @nicklockwood @tadeuzagallo \n. Thanks for the review @ide! Made those changes, merging now.\n. I think that the individual developer should be responsible for managing the gitignore for their editor of choice. I'd recommend just using a global ~/.gitignore for your editor and you won't need to add this to any of your projects :smile:\n. This question is better suited for StackOverflow - if you're unable to find an answer there, feel free to open an issue!\n. @ide nailed it, not much else to be said here. I'm sorry that the experience wasn't seamless for you @philonpang. Closing this issue, feel free to re-open one with a detailed description of your problem, we'd be happy to help if we knew what was wrong! :smile:\n. @ojkelly - can you squash this into one commit please?\n. @vjeux - what do you think about adding this example to UIExplorer to demonstrate alternate ListView layouts?\n. Haven't done this myself but it seems like we should update the embedded app docs to explain how this would be different for Swift\n. At Facebook they are only using Objective-C with React Native at the moment, so this would need to be a community effort. That said, I think this would be an awesome idea to reduce the friction of creating a Swift project. Any interest in tackling it?\n. @yelled3 - fair! maybe someone else will pick it up now that I've tagged it, cc @robertjpayne\n. ProgressView does not exist in 0.4.4, it was introduced in 0.6.0-rc: https://github.com/facebook/react-native/commit/e68f89bfadba2381e7ea6c958a5aa187bc862713\n. AnimationExperimental uses CoreAnimation and the animations occur in the presentation layer so this breaks hit detection. You can use it for static animations right now, but this api is deprecated and I'd recommend using react-tween-state until the new api is release (soon!). \n. :+1: this is a nice idea\n. Can you post the code that you're using with this? Are you using cloneWithRows?\n. Do you see any logs in the Xcode console? Is this in the simulator?\n. Can you show us some code that produces this warning?\n. We can't really support forks, but if you can reproduce this on a standard build of React Native then please do link to the repo and I'll be happy to take a look! Closing until then\n. Merging this now as I think its usable in its current state, but will continue to improve it if necessary\n. @isair - what if you set transparent background on the container view?\n. @nicklockwood - should the parent backgroundColor need to be set to transparent in this case? or should the child being set to transparent be enough?\n. @spicyj - assigned you because it seems related to responders :smile:\n. Looks good to me, thanks!\n. Interesting ideas! Can you try reviving the discussion on #235? Closing because this is a dup of it essentially in that is concerning a module system.\n. @mattapperson - what about dealing with multiple projects on one machine? I agree that switching between loading code via url and app bundle is not ideal right now, but I'm not sure that this would make that much better. As for configurable entry point / port, I'd suggest joining in the discussion on #1546 and making a case for it there :smile:\n. Makes sense, cc @amasad @frantic \n. Check this out: https://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigationBarSample.js\n. @mattapperson - check this out: https://github.com/bh5-js/rctapp\n@amasad @frantic - is official support for this on the roadmap at all?\n. Hey there, these types of questions are probably better suited for StackOverflow or IRC, and it'd probably help to post some code with it too. If you don't have any luck on either of those sources, ping me with what you tried / some code and I'll re-open this issue! :smile:\n. I'm not familiar with this myself, any idea @vjeux?\n. Perfect! @PhilippKrone - I also added docs about setNativeProps recently: https://facebook.github.io/react-native/docs/direct-manipulation.html#content\nIf you've figured this out can you close this issue?\n. Nice, thanks for the follow up @syousif94!\n. @uber5001:\nRCTUIManager.manageChildren(1, null, null, null, null, [0]);\nFor container 1, move from null, to null, add children null, add at indices null, remove at indices [0]\nRCT_EXPORT_METHOD(manageChildren:(NSNumber *)containerReactTag\n                  moveFromIndices:(NSArray *)moveFromIndices\n                  moveToIndices:(NSArray *)moveToIndices\n                  addChildReactTags:(NSArray *)addChildReactTags\n                  addAtIndices:(NSArray *)addAtIndices\n                  removeAtIndices:(NSArray *)removeAtIndices)\nIf you look at the definition of _manageChildren:\n// Removes (both permanent and temporary moves) are using \"before\" indices\n  NSArray *permanentlyRemovedChildren = [self _childrenToRemoveFromContainer:container atIndices:removeAtIndices];\n  NSArray *temporarilyRemovedChildren = [self _childrenToRemoveFromContainer:container atIndices:moveFromIndices];\nNotice that what you indicated as detaching is actually permanently removing.\nAnd immediately after that:\n[self _purgeChildren:permanentlyRemovedChildren fromRegistry:registry];\nSo I think the point about updateView re-using an existing view is moot here because we actually explicitly destroy it. It looks like right now there is only support for detaching/re-attaching atomically via specifying moveFromIndices and moveToIndices. cc @tadeuzagallo \nAlso, for context it appears to be related to this: https://github.com/angular/react-native-renderer/issues/1\n. @uber5001 - does @jtremback's solution work for you?\n. @amasad - is this something that can be easily fixed?\n. @uber5001 - I don't think this is super high priority because of the following:\n1. It's not easy to fix: the packager server just sits there waiting for requests, when one comes in it serves the JS, done, wait again. We could post to the server something like \"hey switch and start serving this project now\" , but what if that's running a different React Native version? Then we need to have the packager restart itself from that directory. That's just one case I can think of.\n2. Frequently changing projects is not that common, and closing the packager is not a big hassle.\nIf you'd like to submit a fix it would be welcome though! Closing this issue but hope you submit a PR for it :smile:\n. Yup, this is fixed in 0.6.0-rc and on master: https://www.rnplay.org/apps/ShFX9g\n. @adamjernst - have you tried https://github.com/johanneslumpe/react-native-keyboardevents ? If so, what do you dislike about it?\nI think it would be useful to have a \"Recipes\" type site that deals with these sorts of common topics, any interest in starting one? ;)\n. Looks good to me, I'm not crazy about the name onTick (I know, I know, I suggested it :P) now that I see it in context but no need to bikeshed here.\n. @mosch - check this out: https://facebook.github.io/react/docs/reusable-components.html#default-prop-values\n\nThe result of getDefaultProps() will be cached and used to ensure that this.props.value will have a value if it was not specified by the parent component. This allows you to safely just use your props without having to write repetitive and fragile code to handle that yourself.\n\nAdd this to getDefaultProps and behold: React.AlertIOS.alert(Object.keys(this).toString());\nthis is the 'class' not an instance, so you need to add that function to statics:\nstatics: {\n    getDefaultText() { return \"Default\" }\n  },\nThat will fix your issue!\nSee here: https://rnplay.org/apps/J7su3w\n. This sounds good to me, however AnimationExperimental is deprecated. @vjeux do we want to accept patches for this?\n. Should be an easy review and import for @nicklockwood \n. Looks great @a2! Added some feedback for you, looking forward to getting this in!\n. @cxfeng1 - Inevitably new versions will sometimes have to introduce breaking changes: a module might be renamed or removed, an API could be changed, etc. I'm not sure that there is a good way to keep this indefinitely backwards compatible :(\n. @cxfeng1 - Inevitably new versions will sometimes have to introduce breaking changes: a module might be renamed or removed, an API could be changed, etc. I'm not sure that there is a good way to keep this indefinitely backwards compatible :(\n. :pray:\n. :pray:\n. Thanks @jordanbyron, this is an easy merge @vjeux - ResponderExample is indeed unused, not sure how that file got in there but :tada:\n. @wootwoot1234 - device or simulator?\n. Good point, removed\n. If I remove it then the image does not show up at all, so it seems necessary\n. Good point again, I suppose we can just remove this line entirely too\n. @sebmck - it is, but as a matter of style and consistency across the project it is used. See: https://github.com/elierotenberg/coding-styles/blob/master/es6.md\nRelated: if anyone thinks it's worthwhile, I could draft a code style guide for react-native in order to make things more clear cc @vjeux \n. Yup, it works with an empty string. A message is already provided by default along the lines of what you suggested above, see:\n\nAnything you add to NSLocationWhenInUseUsageDescription appears underneath that in smaller text.\nIt seems like that's enough of a message for me, but if you think otherwise I'd be happy to add a value in there, let me know @frantic \n. good point, done\n. @spicyj - interesting point, you guys probably have more expertise here so I'll defer to you - I can revert this if you prefer.\n. @spicyj @frantic - Did you manage to reach a consensus on this?\nedit: I was going to rebase this and noticed that it's already on master :+1:\n. \"they vend\" -> \"they send\"\n. scratch that, read the next paragraph and it makes sense ;P\n. \"Let's saw\" -> \"Let's say\"\n. Good point, that falsey 0\n. this change is incorrect - it is the responder chain that does not have a universal analog\n. @bimawa - what happens here if the placeholder is set and then removed by setting the prop to null / empty string? Will the attributedPlaceholder stick around?\n. @nicklockwood - agreed, that's what I thought might be happening so I just wanted to make sure\n. @tadeuzagallo - good idea, the ideas are certainly not mutually exclusive - if we later add support for @frantic's proposed api (which looks ideal certainly) we can just switch between the two depending on the arity. I can imagine a number of edges cases that would get in the way of react-native link react-native-video, which would require more careful consideration. It's not a big hassle to include in the README for a project npm i x --save && react-native link MyProject node_modules/x/X\n. :+1:\n. Yeah I'm not sure how great of an idea that is but it seemed like the simplest way to store config independent of the RCTDevMenu instance. Diff above looks out of date still, I removed the redundant property declarations as you can see in the full diff.\n. Release => Release\nin app => in-app\n. Are these triple ticks necessary? I think Product should work just as well. I know it was like that before, just wondering.\n. in app => in-app\n. Selecting Reload will reload the iOS application (this is the same as pressing Command + R in the iOS Simulator).\n. @frantic - nope, but that won't work - you need to put each transform in a separate object. Also, I have realized that rotation is not a prop on iOS, it looks like that was just for Android. On iOS, the rotate transform property exists and accepts a string: {rotate: \"1deg\"} or {rotate: \"1rad\"} just like the CSS property.\nSo this is how that would be written:\njavascript\n<View style={{transform: [{rotate: \"1deg\"}, {scaleX: 2}]}} />\nIf you were to write this, rotate would be applied by scaleX would not, and you would not see an error:\njavascript\n<View style={{transform: [{rotate: \"1deg\", scaleX: 2}]}} />\n. :+1: this is working\n. Incredibly small nit - the convention throughout the product leaves out the semicolon after using these macros, could we remove that?\n. select Run and change the Build Configuration to Release\n. Let's use \u2318 instead of Command, and lowercase for the letter Z. I know it wasn't like this in the original, but it's more clear I think :smile:\nSame thing for the following examples\n. \u2318 + d now opens the Dev Menu, and you have to select Debug in Chrome from there :smile: - can you update this?\n. application( => application (\n(added a space)\n. Certainly\n. Fixed, thanks for catching that\n. Strangely enough, the prop name is actually segmentedIndex. Maybe we should change this so it is consistent on both ends.\nRCTSegmentedControl\nSegmentedControlIOS\n. nit: this should be indented two spaces\n. @ide - any plan to update the PR for this?\n. Why both [Image] and [Images]?\n. :+1: should have mentioned the continuous animations use case\n. also should be sure to emphasize more that this shouldn't be something that you use frequently outside of that use case\n. @ide - Maybe my wording is just poor here, what I meant to say was that we don't actually need to track the opacity and we don't need to re-render the component each time. We have a pressed opacity and an unpressed opacity and we just switch between the two. I could switch to another example if you think this is not the best\n. I explain that in the next section about forwarding, perhaps I should add more emphasis here\n. @ide - sounds good, I'll reference the React docs in case people aren't familiar with that\n. I did this at first but it is quite ugly when it's red -- it seems like it's a warning. Maybe I need to look at adding a new style to the docs that handle quotes in a better way.\n. The triple backtick here needs to be on a newline :smile:\n. nit: I'd do true instead of true here\nAlso, I think it's not entirely clear what the implications of \"it groups its children into a single selectable component\" are for the developer - does this mean that an accessible component can only have a single child like Touchable components?\n. I think \"simply\" is unnecessary here\n. so it would default to it but because we specify the accessibilityLabel explicitly then that takes precedence?\n. Is there any rule for what component we should add this handler to? Should it be on our app root or anywhere? What happens if we have two of them?\n. Makes total sense, thanks! Might be helpful to add that to the docs here!\n. nit: } else {\n. nit: } else {\n. I think the assetThumbnail prop should be moved into the source object - {{uri: '...', thumbnail: true}}. I'm not a big fan of adding a prop that is only supported for certain backing image types to Image itself. cc @vjeux \n. I think the assetThumbnail prop should be moved into the source object - {{uri: '...', thumbnail: true}}. I'm not a big fan of adding a prop that is only supported for certain backing image types to Image itself. cc @vjeux \n. TODO: have the constructor accept prevData param, so we don't do extra work when cloning\n. TODO: have the constructor accept prevData param, so we don't do extra work when cloning\n. @tadeuzagallo - you are absolutely correct! pod lib lint ran successfully with all of those removed :+1:\n. @tadeuzagallo - you are absolutely correct! pod lib lint ran successfully with all of those removed :+1:\n. nit: should be } else {\n. nit: should be } else {\n. nit: missing a space\n. nit: missing a space\n. nit: missing space between ) and {\n. nit: missing space between ) and {\n. nit: missing spaces after : in both properties\n. nit: missing spaces after : in both properties\n. nit: would be nice to clean this up onto separate lines for each url\n. nit: would be nice to clean this up onto separate lines for each url\n. \"in an optimized way why\" => \"in an optimized way\" or \"in an optimized way, which is why\"\n. sentence is quite long, maybe break it up into two, and reword slightly:\n... faster than calling setState and re-rendering. Because the entire configuration is declarative, we will be able to provide further optimizations in the future by serializing the animation configuration and passing it to native and allowing the native side to handle the animation on its own, without calling back to JavaScript over the bridge.\n. Origami\n- probably not everyone is familiar with what this is\n. #### Core API\n(or something like that)\n. #### Co-ordinating multiple animations\n(or something like that)\n. #### Interpolating values\n(or something like that)\n. Might be worth spacing out the interpolations to make them more readable:\njavascript\nvalue.interpolate({\n  inputRange:   [-300, -100, 0, 100, 101],\n  outputRange:  [ 300,    0, 1,   0,   0],\n});\nAnd it would be helpful to include a table with some values that demonstrate the interpolations:\n| Input | Output |\n| --- | --- |\n| -300 | 300 |\n| -150 | ? |\n| -75 | ? |\n| 0 | 1 |\n| 50 | 0? |\n| 100.5 | 0? |\n. Title for this part maybe:\nTracking dynamic values\n. #### Input Events\n. #### Responding to the current animation value\n. Maybe I have the logic backwards in my head somehow but it seems like the ! before this.props.editable should not be there - editable as false would return true for it, and then focus, editable as true would return false and not focus. So maybe this?\nif (this.props.editable || !this.props.hasOwnProperty('editable')) {\n  this.focus();\n}\n@christopherdro \n. Maybe I have the logic backwards in my head somehow but it seems like the ! before this.props.editable should not be there - editable as false would return true for it, and then focus, editable as true would return false and not focus. So maybe this?\nif (this.props.editable || !this.props.hasOwnProperty('editable')) {\n  this.focus();\n}\n@christopherdro \n. Also probably useful here to talk about extrapolate options - this will be a problem that people will run into really quickly I think. Especially extrapolate: 'clamp'\n. nit: space between the ### and the E\n. nit: space between the ### and the E\n. nit: add newline between 237 and 238 here\n. nit: add newline between 237 and 238 here\n. I don't think RCTFileQueue exists :smile:\n. I don't think RCTFileQueue exists :smile:\n. nit: I know it was pluralized in the original, but this would read better as RCTScrollView\n. nit: I know it was pluralized in the original, but this would read better as RCTScrollView\n. indeed, I sorted it alphabetically, let's try to keep it in that order :)\n. indeed, I sorted it alphabetically, let's try to keep it in that order :)\n. I believe this should be process.exit() - other commands above that exit with status code 1 are because they are errors :smile:\nSee: https://nodejs.org/api/process.html#process_process_exit_code\n. :+1:\n. :+1:\n. Sure thing\n. ah that's fantastic thanks @ide :)\n. > bundle and server image\nbundle and serve the image\n\nIf there is no image matching screen density, closest\n\nIf there is no image matching the screen density, the closest\n. > just refresh simulator\njust refresh the simulator\n. > Packager knows image size\nThe packager knows the image dimensions\n. > image name in require\nthe image name in require\n. > it's actual location\nits actual location\n. > Image name is\nThe image name is\n. should be standards committee rather than standard committee\n. also: fetch returns a... rather than Fetch returns a..\n. > This has a hidden side effect of setting animatePageTransition for all future updates of selectedPage.\nIt actually doesn't have any impact because this only happens for JS-driven page updates, and those always go through setPage or setPageWithoutAnimation so we set the animated transition prop each time. It's a little bit of an awkward API though I agree. It leads to the onAfterUpdateTransaction method above as well because we need to be sure that all of the prop updates for the batch have been applied before actually setting the page on the ViewPager. I'll look at putting this through a single prop instead, as per your suggestion :)\n. See my reply below! :)\n. Going to get rid of this as per comment below :)\n. That's great to hear, I think that's the right place for it cc @ide \n. it looks like on iOS we just pass null, so unless someone can think of a good reason to do otherwise I'll change it to null here as well\n. Makes sense\n. Thanks! I'll do this\n. Not great with flow -- what should I put here as the return type @mkonicek?\n. correct -- this line is actually removing the platform annotation for onLoad\n. Fixed!\n. Ah thanks for pointing this out, I think what confused me here was this: https://github.com/facebook/react-native/blob/e4f0971a55d386db93ff5c78d383ffae1132dc33/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageView.java#L233-L237 - but that makes sense as we're calling that directly from test code presumably and not as part of a transaction.\n. as discussed on messenger we'll leave this one as is :)\n. nit: wrap this at 80 chars -- so move down to the next line\n. I wonder if a better approach here is to have the CLI -v flag output the following:\nreact-native-cli: 0.x.y\nreact-native: 0.a.b\nAnd if we are not inside of a project directory:\nreact-native-cli: 0.x.y\nreact-native: n/a - not currently inside React Native project directory\n. You only need a single tick here, $(SRCROOT)/../node_modules/react-native/Libraries/PushNotificationIOS\n. yikes\n. fixed, sorry about that!\n. Sorry @kmagiera, it seems that I was mistaken here: these properties are not currently supported directly on the Image component on iOS. The only way to re-create this effect on iOS is by adding a corner radius to a wrapper View, but this does not work on Android.\n<View style={styles.test}>\n  <Image\n    style={styles.image}\n    source={{uri: 'https://www.petfinder.com/wp-content/uploads/2012/11/140272627-grooming-needs-senior-cat-632x475.jpg'}}\n  />\n</View>\ntest: {\n  borderTopLeftRadius: 20,\n  overflow: 'hidden',\n},\nResults in:\n\nOn the web, and on React Native Android with this PR, assigning the border property specifically to images works:\n\nSo even though this isn't actually the current behaviour on iOS I think it is still desirable for us to pull this in, and we can bring iOS to parity eventually. cc @vjeux \n. thereore => therefore :smile: \n. @sahrens @astreet - the threshold to be used here in the spec says it is determined by the user agent, we could definitely use something more sophisticated than this but for now this seems fine\n. I think the idleCallbackId should be type number and not optional -- this may have been my mistake, oops.\n. ah, gotcha :+1:\n. @janicduplessis - is this blocking landing this PR?\n. Which props aside from onScroll do you think we might want to be able to bind natively to with Animated.event?\n. Actually pan responders would be a good example of these kinds of events\n. @janicduplessis - as discussed on Saturday, this should be [self updateAnimation] :) for others reading this, this is important because 1) it updates the value right away, rather than potentially waiting a frame 2) we don't repeatedly startup and teardown loop which, combined with 1) sometimes led to a race condition where the value that started the loop would never get applied because another would arrive before it had a chance to.\n. nit: const { bottom } = this.state;\n. actually it seems like this file uses the format that you used here :\\\n. style nit: }); should be on a newline, indented to the same level as items. please follow coding style from the project, see: https://github.com/facebook/react-native/blob/master/React/Base/RCTBridge.m#L67-L69 for an example of an if statement with one line, and notice the space between if and (. please follow style conventions, eg: https://github.com/facebook/react-native/blob/9ee815f6b52e0c2417c04e5a05e1e31df26daed2/React/Modules/RCTI18nManager.m#L27-L32. please follow code style, eg: https://github.com/facebook/react-native/blob/9ee815f6b52e0c2417c04e5a05e1e31df26daed2/Libraries/Image/RCTResizeMode.m#L14-L20. please follow code style: https://github.com/facebook/react-native/blob/9ee815f6b52e0c2417c04e5a05e1e31df26daed2/React/Base/RCTNullability.h#L12 (2 spaces). newline after this, as with the rest of the file. setStorageLocationIOS makes sense if there will never be equivalent functionality on android cc @satya164 . StorageLocationIOS if suffix is added for setStorageLocationIOS. extra newlines. extra newlines. should this be inside of the if clause?. should this be inside of the if clause?. can we defer this until it's used for the first time?. can we defer this until it's used for the first time?. nit: space after //. nit: space after //. :+1: to @hramos's feedback. :+1: to @hramos's feedback. maybe worth linking to this talk by @vjeux as well for people who want a more in depth explanation than we can cover in a blog post: https://www.youtube.com/watch?v=xtqUJVqpKNo. maybe worth linking to this talk by @vjeux as well for people who want a more in depth explanation than we can cover in a blog post: https://www.youtube.com/watch?v=xtqUJVqpKNo. Possible alternative phrasing:\nWhat the native driver does is move all of these steps to native. Since Animated produces a graph of animated nodes, it can be serialized and sent to native only once when the animation starts, eliminating the need to callback into the JS thread; the native code can take care of updating the views directly on the UI thread on every frame.. Possible alternative phrasing:\nWhat the native driver does is move all of these steps to native. Since Animated produces a graph of animated nodes, it can be serialized and sent to native only once when the animation starts, eliminating the need to callback into the JS thread; the native code can take care of updating the views directly on the UI thread on every frame.. Missing .start()?. Missing .start()?. \"make sure every animations\" => \"make sure every animation\"\n. \"make sure every animations\" => \"make sure every animation\"\n. \"also use\" => \"also uses\". \"also use\" => \"also uses\". perhaps the youtube link I commented above for the talk by vjeux is better suited for here actually. perhaps the youtube link I commented above for the talk by vjeux is better suited for here actually. \ud83d\ude13 oops. \ud83d\ude13 oops. derp. I think we can delete this new text and add clarification on to the end of the previous sentence, something like this but maybe better wording:\n\nonly keyboardDidShow and keyboardDidHide events will available on Android because it is not possible to listen for keyboardWillShow or keyboardWillHide events in the underlying Android APIs.. I think we can delete this new text and add clarification on to the end of the previous sentence, something like this but maybe better wording:\nonly keyboardDidShow and keyboardDidHide events will available on Android because it is not possible to listen for keyboardWillShow or keyboardWillHide events in the underlying Android APIs.. this is a flow type not a prop type :> granted, it is a flow type for a prop ... :P. this is a flow type not a prop type :> granted, it is a flow type for a prop ... :P. \n",
    "mfikes": "For App Store submission, perhaps you have no choice but to include the JS in the bundle if you wish to comply with 2.7 (\"Apps that download code in any way or form will be rejected\").\n. This was an environmental issue with a previous install of pcre on this machine and I was able to resolve it. \nHere are details in case anyone else encounters it:\nThis was on a box that had never had Homebrew installed on it, but did have pcre installed in /usr/local and other places. When I installed Homebrew, brew doctor warned about these pcre files, and since I had previously noticed that pcre is used for React Native, I proceeded to manually remove all of the pcre files that brew doctor reported, and then proceeded with brew install node and brew install watcher.\nGiven that this appeared to be a watcher issue, I tried uninstalling watcher, and reinstalling it. At that point, brew had me try brew link pcre and pointed out additional existing pcre files that it was having problems with, and I addressed each of those, with the offending files/directories including\n/usr/local/bin/pcre-config\n/usr/local/bin/pcregrep\n/usr/local/bin/pcretest\n/usr/local/share/doc/pcre\n/usr/local/share/man/man1/pcre*\n/usr/local/share/man/man3/pcre*\nAfter cleaning up these additional leftover files, and successfully installing watchman, I then used brew to uninstall node, pcre, and watchman and clean reinstall node and watchman.\nAfter all of this, and in a fresh clone of react-native, things worked on this box, including running the Movies app in Xcode.\n. FWIW, I had installed pcre binaries on this particular machine a few years ago for some esoteric thing I can't even recall the details of. I don't usually install binaries like that. That, combined with the fact that I hadn't been using Homebrew is probably a fairly rare combination. Homebrew itself tried to warn about it, so I had enough clues to go on.\nThe existence of the timeout is useful, IMHO. If it had somehow additionally indicated something derailing in a way that pointed a finger at pcre, that would probably have been helpful and I would have sorted it sooner, but to be honest, I didn't lose a lot of time on this and was able to sort it out pretty quickly anyway.\n. @benkomalo I can reproduce this if I don't have watchman installed.\n. @benkomalo I had Watcher took too long to load and for me the root cause was a botched pcre installation. See #20\nI can't answer the question regarding packages.son (I'm not with Facebook.) The only reason I knew to install it is the recommendation in the main README.md.\n. I was wondering if this is actually the \"node file watching bug\" referenced in Step 5 of the Requirements section in README.md. If so, perhaps a future README.md could give a sample line from the endless stream, making it a little easier for devs to know when watchman is needed.\n. My view: While Ben's environment had a few items that are a little older, mine is completely up-to-date (OS X 10.10.2, Node v0.10.36 via brew, and npm version 2.3.0 via brew). So If a lot of users are like me, and if my ability to reproduce this is deterministic (it appears to be), then perhaps watchman should be required instead of recommended.\n. I'd like to see this issue addressed.  +1 from me.\nBackground: I'm working to establish a ClojureScript REPL (Ambly) into the mix, so that we can develop React Native apps with things like Om, and all that is really needed is access to the underlying JSContext being used by React Native. I previously had success when RCTRootView allowed you to specify your own RCTContextExecutor (I was using Bentho). @ide 's RCTJavaScriptExecutorSource proposal sounds flexible enough.\n. @tadeuzagallo FWIW, we've have the ClojureScript REPL / Om working for now with latest React Native by setting the executorClass between alloc and initWithBundleURL:moduleProvider:launchOptions: (a very nice suggestion by @jolby ):\nobjective-c\nRCTBridge *bridge = [RCTBridge alloc];\nbridge.executorClass = [BTHContextExecutor class];\nbridge = [bridge initWithBundleURL:jsCodeLocation\n                    moduleProvider:nil\n                     launchOptions:launchOptions];\n. ",
    "roman01la": "+1 for better way\n. +1\nI believe React Native components does not expose accessibility props to iOS, I'm not an expert, but it seems true.\n. Yeah, just wondering if someone here have a solution already.\n. +1\n. Cannot find entry file index.ios.js in any of the roots:...\n. @pilwon Thanks for this gist! I've found that calling ReactPackager.getDependencies directly does some unnecessary stuff from the inside.\nThere's DependencyGraph module, which does exactly what I need. I've created a separate branch, check this code. I believe it also can handle user-defined native modules as long as you pass a path to dir with your native modules into DependencyGraph config.\n. @pilwon Nope, DependencyGraph itself is slow, because of IO stuff, but everything wrapped around is ok.\nFor me it looks like the whole React Native is nicely divided into separate modules, so probably some of them will go standalone to npm, Packager for example, but I'm not sure about DependencyGraph. Anyway it literally does just scan for modules, so it should not be hard to implement a standalone solution.\n. +1 Crashes anytime Text gets a value from component's state.\n. @a2 0.3.10, works perfectly, thank you!\n. ",
    "wesleyahall": "This should at least be documented on the website -- I'm sure it's going to confuse a lot of people initally until updated.  (react native rules!)\n. I figured out the image problem (read the docs \ud83d\ude11) by adding accessible={true} but this prop doesn't appear to be available on Text components. How do we make the non-touchable Text components still readable?\n\nOn Mar 27, 2015, at 10:01, Alexander Kotliarskyi notifications@github.com wrote:\nWe definitely do support that. See https://github.com/facebook/react-native/blob/master/Libraries/Components/View/View.js#L69\nI know @vjeux implemented the support in ObjC land that automagically makes UI accessible, but maybe his change was lost during refactoring. cc @nicklockwood\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "freshteapot": "Under option 2).\nWhere exactly is the 'main.jsbunle' meant to be saved.\nHave tried.\n- top level.\n- inside \"AwesomeProject.xcodeproj\"\n\"You'll have to add the downloaded file to the app binary\":\nWhere is this? :)\n. - Not the best approach, Issue #240 is clearer, however either approach requires you to run this everytime you want to see your changes. A trade off :) *\n  To answer my own question:\n\"You'll have to add the downloaded file to the app binary\":\nOpen Xcode -> Project (I will assume AwesomeProject)\nLook in the folder Products, click \"once\" on 'AwesomeProject.app', look on the rightside and it should display \"Full Path\".\nAt this point, jump to the terminal, and navigate to the same directory.\nAfterwards.\ncd FULL_PATH\ncurl http://localhost:8081/index.ios.bundle -o main.jsbundle\nNow at this point. You could do\ncurl http://localhost:8081/index.ios.bundle -o FULL_PATH/main.jsbundle\nAt this point, it works. At least on xcode 6.2.\n. @brentvatne thank you!\n. Worth noting, (at least unless I am missing something) if you go down this path, you will have to run the curl step, every time. If you want to see your changes.\n. ",
    "gu-fan": "@freshteapot Thanks, It works~\n. ",
    "facebook-github-bot": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1057649787583002/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. @lvyile updated the pull request.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/330079883868498/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/622194451249017/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1569556253318981/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1576511432619372/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1422071278101659/int_phab to review\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1422071278101659/int_phab to review\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1422071278101659/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1422071278101659/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/691320904330225/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/638321529600839/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1596030840680088/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1428484607458625/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/938878726156386/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/716666635106444/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/694155724039606/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/694155724039606/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/351999461663052/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/100913020243956/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1402019833455864/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/465355620295660/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1466250883666799/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/439269476233905/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/863746920348404/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/966263836738882/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/824909987577894/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/968781156479864/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1593093057609165/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/827327144026655/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1067134919980570/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/832610953454845/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/989285021083565/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/103613819974102/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/388649984669665/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/897906616934455/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1663226797244458/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/811803732236315/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/831340873568138/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/979790032055954/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/694897330656408/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1474549602836673/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1619666888292087/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/927310640664607/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1594169367522355/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/894583160580151/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1412775009049513/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1450147555287251/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1596196980639638/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/472869989542500/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/665160350281633/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/665160350281633/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1150649598294435/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/409637509222021/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/406409676212526/int_phab to review.\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/406409676212526/int_phab to review.\n. Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n. Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n. Thanks for importing. If you are an FB employee go to https://our.intern.facebook.com/intern/opensource/github/pull_request/1467647633533815/int_phab to review.\n. ",
    "meric426": "@amccloud: would be nice if we could style the statusbar, backgroundColor, size etc\n. +1 would love this feature\n. I've gotten this playing around on a iphone 5, never in the simulator.\n. thanks @chirag04, i'm closing it.\n. ",
    "nicklockwood": "@meric426 none of those options are configurable on iOS. The only option you can set is whether the status text is dark or light (which is already exposed in @amccloud's PR).\nTo change the background color you can place a colored <View> behind the status bar, but the bar itself is transparent, and the height is always 20pts, or 40pts if there's a call waiting or some other background process like audio recording.\n. No, it probably doesn't. I'll file a task to fix that.\n. Gifs should work for both remote and local images, but there might be an issue using them with the require() syntax. Try just using the file name (including extension) as the uri value.\n. The throttleScrollCallbacksMS property is now called scrollEventThrottle.\n. Looks like the warning wasn't updated when the property name was changed.\n. You could set the scrollEnabled property to NO, or in the viewDidScrollDelegate you could reset the contentOffset to th previous value.\n. Whilst @a2 is quite correct, I wonder if it might make sense to change the thread that we call back to modules on to main.\nWe don't call module methods on the JS thread, we actually call them on the shadow thread, which is a seperate thread used by the RCTUIManager to do layout calculations.\nBut other than the UIManager, the vast majority of modules either don't care what thread they run on, or would prefer to run their methods on the main thread. Perhaps then, the bridge should call back to main, and the UIManager can dispatch to the shadow thread?\nIt would save having to dispatch_async inside every single module's methods for the sake of catering to the requirements of one specific module.\n. I'm inclined to agree with @joewood. I like CocoaPods, and if this were an iOS-specific framework I would say that pods were an obvious solution for managing plugins. But in the long term, our plugins are going to contain JavaScript, Objective-C (or Swift!) and Java code, with whatever dependencies each of those requires, and CocoaPods only really makes sense for managing the Objective-C code.\nGiven that the target consumers of these plugins are predominantly web developers, and that node is a requirement to run the platform, I'd say that npm makes sense, provided that it can meet all of our requirements.\nI totally understand @vjeux's disinclination for us to try to build our own package manager, however the plugin management of Cordova is one of its strongest features, and I would like to make sure that whatever we end up with provides at least that ease of use for plugin developers and consumers.\nIn the short term however, I see no harm in including a podspec, as it will make it easier for iOS developers to discover and try out React Native.\n. Hi James,\nThanks for doing this, and sorry it's gone uncommented for so long.\nThe thinking behind RCTRootView was that it could be used in places where it's awkward, or non-idiomatic to use a ViewController, such as inside a Table/CollectionViewCell, although I admit that's probably an uncommon scenario.\nIt may seem odd that a view should be doing so much work, but it's loosely modelled on UIWebView, where you give it a url and it does the rest. Some would consider that a bad pattern, but the separation of responsibility between view/controller in iOS has always been a little wooly IMO anyway. I prefer the model adopted by SpriteKit (and React) where you just have a single hierarchy of nodes that manage their own content.\nWe're currently working on remodelling RCTRootView to find a more useful division of responsibility. There's nothing wrong with this diff per-se, however it doesn't really address all the problems we're trying to solve, which are:\n- we'd like it to be as simple as possible to set up a react view (controller/context/whatever) at any level of an application, whether it's a single view on a screen, a single screen/tab in an existing app, or basically a whole app in its own right.\n- we want multiple react views in an app to be able to share a single bridge/executor instance, and to be running the same js application.\n- we want to be easily able to pump application-level events such as push notifications into the js context.\n- we want to be able to present view-controller based iOS UI elements (e.g UIAlertController) in a non-hacky/fragile way, but without the concept of controllers leaking out into the front-end, JS part of the system.\nHaving a controller instead of a view as the main entry point helps a little bit with the last of these points, and may in fact end up being part of the solution as a whole, but I'm not sure that it helps at all with the other issues we need to address.\n. That's similar to the model we use internally, where we have a RootView \"factory\". I was hoping to move away from that pattern though, because it seems very un-iOS like.\nI do think we need to move script loading out of the view, but I thought perhaps the bridge could take on that responsibility, since it has effectively become our central DI context/container anyway.\nThen you could init a new rootview by passing it a bridge instance, rather than requesting that the environment builds one for you\nI don't know though TBH; there's a few different directions to take with it, and I need to work through all the pros and cons of each.\n. We are. I'm interested to hear your thoughts on how to approach it though.\n. We are. I'm interested to hear your thoughts on how to approach it though.\n. Our initial implementation is just going to replace the class crawling with an alternative automatic registration mechanism that uses mach-O data headers (much the same as how methods are currently registered with RCT_EXPORT).\nThis means we get to keep the automatic module registration, but get rid of the need to scan every class in the whole app. Automatic registration has a lot of advantages, and you can already opt-out of it if necessary by returning nil from init (or, in the new system, by not adding the RCT_EXPORT_MODULE macro).\nLazy init is something I've been thinking about, but there are certain cases where you want your module to be initialized immediately - for example if it broadcasts notifications, or needs to register some constants - so it's not simply a case of waiting until the first time it's called.\n. Our initial implementation is just going to replace the class crawling with an alternative automatic registration mechanism that uses mach-O data headers (much the same as how methods are currently registered with RCT_EXPORT).\nThis means we get to keep the automatic module registration, but get rid of the need to scan every class in the whole app. Automatic registration has a lot of advantages, and you can already opt-out of it if necessary by returning nil from init (or, in the new system, by not adding the RCT_EXPORT_MODULE macro).\nLazy init is something I've been thinking about, but there are certain cases where you want your module to be initialized immediately - for example if it broadcasts notifications, or needs to register some constants - so it's not simply a case of waiting until the first time it's called.\n. As you say, there shouldn't be much overhead to having extra modules initialised that you aren't using, so our current recommendation if you want different modules in two different root views is simply to load all of them in both - especially since we've now set it up so root views can share the same bridge (which is a much bigger resource saving, as it means there's only only JavaScript context running).\nIt's also possible to override built-in modules with your own by injecting another module with the same moduleName, so I think we've covered cases like test mocking, or providing your own versions of (for example) XHP, that use your existing network stack (we do this for our internal apps).\nPlease do let us know if you have use cases we aren't handling yet though - and if you want to share your alternative architecture idea as an \"RFC\" pull request, then please do that too - we might still incorporate some of the ideas :-)\n. As you say, there shouldn't be much overhead to having extra modules initialised that you aren't using, so our current recommendation if you want different modules in two different root views is simply to load all of them in both - especially since we've now set it up so root views can share the same bridge (which is a much bigger resource saving, as it means there's only only JavaScript context running).\nIt's also possible to override built-in modules with your own by injecting another module with the same moduleName, so I think we've covered cases like test mocking, or providing your own versions of (for example) XHP, that use your existing network stack (we do this for our internal apps).\nPlease do let us know if you have use cases we aren't handling yet though - and if you want to share your alternative architecture idea as an \"RFC\" pull request, then please do that too - we might still incorporate some of the ideas :-)\n. @ide the responder chain approach you mention is already used by the RCTNavigator (which is basically an UINavigationController). It's possible that we will eventually move to using a RCTRootViewController instead of a RTCRootView to make this less of a hack, but in the meantime that seems like a reasonable solution.\nIn general, I think we want to avoid introducing the concept of view controllers as a distinct entity from the point of view of React JS. Creating and manipulating controllers via the view hierarchy seems a bit backwards from a native iOS perspective, but it has a lot of advantages in terms of maintaining a single react node hierarchy.\nPresenting views/viewcontrollers modal should probably be handled by a RCTBridgeModule rather than the RTCViewManager of the view being presented. It might be appropriate to make this the responsibility of the RCTUIManager module. There is some complexity because the presented view would not be guaranteed to be a direct child of the RCTRootView, so we may need to introduce the concept of a RCTModalRootView. We do have support for multiple rootViews running on the same bridge, but it's not fully implemented in the OSS release branch yet.\nI agree that we should support UIAlertController at some point, however it's a rather frustrating API compared with the old UIAlertView, because you have to be much more careful about not attempting to present an alert when your VC isn't the current frontmost controller, or you can cause a crash. Since alert views are often used to surface errors during asynchronous events such as network requests, it makes UIAlertController more complex and dangerous to expose than UIAlertView.\n. RK is short for \"React Kit\", which was the previous prefix we were using, but we've changed it to RCT (a contraction of \"React\", as you guessed) in accordance with Apple's guidelines on using three-letter prefixes, and to prevent clashing with RestKit. We just haven't cleaned up all the references in the JS code yet.\n. @sahrens, not yet, but I'm looking.\n. @sahrens I've figured it out. Fix incoming.\n. @jaygarcia we'll get a proper fix landed as soon as possible. In the meantime, if you change line number 328 in ScrollView.js to\nstickyHeaderIndices: {diff: deepDiffer},\nIt should fix the problem for you locally.\n. Yeah, we do this already for stuff like RCTWebView, and it's a pain doing the same lookup code every time. Makes sense to have a simple macro to wrap that logic.\n. It should probaby wrap the UIBlock logic as well for view methods, to avoid accidents. Then there would be no need to dispatch to main queue inside the method.\n. @vjeux yes, they're separate. I don't think we support image upload in OSS at the moment.\n. We won't be using Swift internally within the framework for the foreseeable future for all the reasons that @ide mentions, however we would welcome support for writing modules and views in Swift.\nThe reason this is difficult at the moment is because we're heavily reliant on macros for setting up the bindings between Objective-C code and the JavaScript bridge, and Swift has no support for macros whatsoever.\nI'm not particularly a fan of macros in general, but it makes this process simple and elegant to an extent that would be hard (if not impossible) to achieve any other way, and crucially it isolates the syntax from the implementation, giving us freedom to make changes to the infrastructure without constantly breaking everyone's existing code.\nTo support modules written in 100% swift, we would need to provide a totally separate mechanism for registering the module class, methods and properties because writing the bridging code that the Obj-C macros generate manually in Swift would be cumbersome and fragile (assuming that it's even possible).\nIn the future, once the APIs settle, we may be able to move to a more traditional protocol-based approach, which would be better suited to Swift. In the meantime though, if you don't mind writing a little bit of glue code in Objective-C, it's perfectly possible to implement the bulk of your native module logic in Swift if you wish to do so.\n. Reopening this as it seems to be a useful place to track this discussion.\n. @robertjpayne awesome work - I appreciate you taking the initiative with this.\nI agree that this seems like Swift module support should be part of the core rather than something external because it will be very hard to ensure macros are kept in sync.\nYour RCT_SWIFT_EXPORT_MODULE macro can be simplified to:\n```\ndefine RCT_SWIFT_EXPORT_MODULE_PUSH(module_name, superclass, js_name) \\\n@interface module_name : superclass \\\n  @end \\\n  @interface module_name (RCT_SWIFT_MODULE_EXPORT)  \\\n  @end \\\n  @implementation module_name (RCT_SWIFT_MODULE_EXPORT) \\\n  RCT_EXPORT_MODULE(js_name) \\\n```\nI thought it could be reduced to just\n```\ndefine RCT_SWIFT_EXPORT_MODULE_PUSH(module_name, superclass, js_name) \\\n@interface module_name : superclass  \\\n  @end \\\n  @implementation module_name (RCT_SWIFT_MODULE_EXPORTS)  \\\n  RCT_EXPORT_MODULE(js_name) \\\n```\nBut it seems that with this approach, module_name isn't registered as conforming to RCTBridgeModule, which is a little strange (though probably easy to fix in the bridge logic itself).\n. The RCT_SWIFT_EXPORT_MODULE_PUSH/POP syntax is quite elegant, but it has shades of trying to reinvent the Objective-C language, which we've been trying to avoid (macros are seductive). I'm going to think about this for a bit and see if I can come up with something less obtrusive.\n. @robertjpayne I tried both those code examples before posting them. It seems to work without the extra category.\n. I was thinking that the RCT_SWIFT_EXPORT_METHOD macro could be called something like RCT_EXTERN_METHOD instead (meaning \"this method is declared elsewhere\"). Then we could implement RCT_EXPORT_METHOD in terms of RCT_EXTERN_METHOD:\n```\ndefine RCT_EXPORT_METHOD(method) \\\nRCT_EXTERN_METHOD(method)\n  - (void)method\n```\nThat way, we avoid duplicating the macro logic, which should make it easier to maintain.\n. @ide but then you'd have to add the class to the bridging header, right? This way, you don't have to, as the Swift class doesn't need to reference any symbols in  SwiftReactModuleExports.m\n. We could derive the js name from the category name, but that might be a little too magical :-)\n. Another pattern I considered is\nRCT_EXTERN_MODULE(MySwiftModule,\n  RCT_EXTERN_METHOD(foo);\n  RCT_EXTERN_METHOD(Bar);\n)\n. This would have the benefit of generating all the boilerplate for you, and it feels a bit less magical than the push/pop to me. That may be purely subjective on my part though.\nWhat do you think?\n. True. Maybe something more like this then?\n@interface RCT_EXTERN_MODULE(MyModule, NSObject)\nRCT_EXTERN_METHOD(foo);\n  RCT_EXTERN_METHOD(Bar);\n@end\n. @robertjpayne yep, this looks good to me. Yeah, I realised we'd have to reimplement RCT_EXPORT_METHOD by having it call RCT_EXTERN_METHOD (see my earlier comment), but I think that's not a problem if RCT_EXTERN_METHOD is going to be part of the core.\n. @robertjpayne good call on RCT_EXTERN_REMAP_MODULE as well - I like the consistency there. I'll run this by the rest of the team today, but I'm pretty happy with this solution overall.\n. @robertjpayne please do :-)\n. This makes sense, but I think we're ditching the public property for setting executor, since you'll only ever want the JSCore one for deployment, or the WebSocket/WebView one for debug. Might add a private setter for injecting a mock version (for unit testing), but otherwise there seems little benefit to exposing the class.\n. Yeah, I'd assumed that the constants would be compiled in but they weren't. I've changed up the logic to replace them with macros if you're targeting iOS 8.1 and earlier.\n. Makes sense. Might break some of our internal apps if they're using the default though - we'd better verify that before merging.\n. To reiterate what Christopher said, it's not that we don't feel it belongs in the core, it's just that we don't have the resources to build and support a high-quality wrapper for UITableView at this time. If someone else would like to try, I'd be happy to review it for inclusion.\n. For now, it's probably best just to either not use use xcassets, or manually ensure that the xcassets names match the files.\n. For now, it's probably best just to either not use use xcassets, or manually ensure that the xcassets names match the files.\n. Just looking into it now. Looks like it failed to land due to a unit test failure on internal CI. Probably a flaky test. I'll try re-submitting it.\n. It should be Viewport. General rule is that single words or hyphenated words shouldn't be camel-cased. Only when two words are joined (\"viewport\" is a word in it's own right, it isn't a contraction of \"view\" and \"port\").\n. @vjeux \nI agree with point one. We should really be broadcasting an event from within RCTRootView whenever the frame changes. I can see how that would be useful - I'm less clear on how the screen itself changing is useful, since the RCTRootView's dimensions might not be directly affected by that, or might not be affected proportionally.\nFor point two, we should simply send an event every time the size changes. On iOS, the size only changes once during a rotation - the animation between the two sizes in handled internally by the Core Animation render server, so the client code only needs to know the start and end sizes.\n. KVO isn't necessary - we already override the setter.\n. Agreed.\n. Thanks for doing this. Unfortunately the problem is slightly more complex than this solution suggests, which is why we have yet to implement this.\nThe rotation property needs to be absolute, so that if you set the rotation to (for example) 1/4 Pi and then, on a subsequent render, updated the rotation to 1/2 Pi on the same view, the value should be 1/2 Pi.\nThe solution as implemented here would be cumulative, however. Setting the value to 1/4 Pi then updating it to 1/2 Pi would yield a total value of 3/4 Pi.\nI have a solution in mind. I'll see if I can tackle it this week.\n. We've been looking at this internally and have a solution that is more compatible with the CSS transform spec. It's going to be a little while before it lands though I'm afraid, as there's still a few details to work out.\n. Yes.\n. @frantic what happened to this? Can we resurrect it?\n. @JoeStanton yes please!\n. @sahrens I agree, we should try to emulate CSS, as we do for all other aspects of border rendering.\nThere's a fix I need to make to clipping that will fix this as a side effect anyway.\nThe best solution in the meantime is to nest two views, with the shadow on the outer view and clipping on the inner view (this is basically what my fix will be, but it'll be done opaquely by the framework instead of explicitly).\n. I submitted a fix for this today that changes the property type to NSTimeInterval and renames the property to scrollEventThrottle, which seems more logical. That also fixes the issue with the default value being set incorrectly.\n. Makes sense.\n. This looks good to me. Not sure what's holding it up. I'll check.\n. Note that #505 has now been implemented, so at the very least it should now be possible to load a complete React application into your webView from a local resource file, provided all the JS and CSS are bundled into the same file.\n. IIRC, refreshControl is somewhat tricky to get working correctly outside of a UITableViewController.\n. WebView now has an html property:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/WebView/WebView.ios.js#L84\n. Oh, sorry, quite right. But as it happens, any relative URL is considered to be relative to the app resource bundle, so <WebView url=\"foo.html\" /> should load a file called foo.html that's been added to the project.\n. Let me know if that isn't working, and I'll re-open.\n. Adding an \"html\" property should be straightforward (although if you also wanted to specify a baseURL, it would either need to be a separate property, or a method with two arguments).\nWhat's the use case for exposing \"stringByEvaluatingJavaScriptFromString\" though?\n. Fair enough.\n. It would replace the previously loaded web page, so no, not in the way you mean.\nThis property was added as an unrelated feature to your request though, so don't assume this means we won't be adding a means to execute JS code.\n. This seems problematic because we use different executor implementations for Chrome/Safari (and don't support Firefox) - unless I'm missing something obvious?\n. Nice idea. Looks good to me.\n. Hmm. It's not ideal that it adds a dependency on the ActivityIndicatorIOS though, since ActivityIndicatorIOS is iOS-specific, and the WebView component will likely be shared with Android.\n. Yeah, this isn't the right right way to handle URLs in iOS. You should probably do something like:\nNSString *server = [[NSBundle mainBundle] objectForInfoDictionaryKey:@\"ReactServer\"];\nif (server == nil) {\n    server = @\"http://localhost:8081\";\n}\nNSURL *baseURL = [NSURL URLWithString:server];\nNSURL *fullURL = [NSURL URLWithString:bundlePath relativeToURL:baseURL];\nAlthough that also isn't completely bulletproof. Probably worth writing some unit tests with various combinations of missing or redundant prefixes and suffixes.\nIt may be worth using [RCTConvert NSURL:server] instead of [NSURL URLWithString:server] actually, as that handles a whole bunch of bad inputs gracefully already, and already has some tests.\n. Hey, sorry about the radio silence on this. The internal diff sort of got lost in transmission for a while, however the good news is that this has now been merged and will ship with the next release.\n. The \"handles\" are just urls. They reference an image in the camera roll, or a temporary local file.\n. That's true. I'm working on it :-)\n. That's correct, we still don't support modules linked from dynamic libraries yet. That's coming soon.\n. The back/forward form navigation buttons are a iOS browser feature, not a native iOS app feature. These buttons will show up automatically if you display  an HTML form inside a WebView, but there is no API for displaying these buttons in native iOS apps, and any app that you have seen using them is either using a WebView, or has re-created the same feature natively using custom code (presumably for the purpose of making their native form behave more like a web form - a somewhat dubious UX decision IMHO).\nIt would certainly be possible to implement a facsimile of this feature right now as a native module, and if the demand is high enough then I expect someone will build it (maybe even us), but for the record, if I was developing a native iOS app and the designer asked for this, I would push back and suggest that they try to implement forms using native iOS app design patterns rather than iOS mobile web patterns.\nYou'll notice that the iOS Settings app never once uses this pattern, despite having pages and pages of form fields.\nThat said, we are currently investigating the best way to implement inputAccessory views (the docked bar that appears above the keyboard that can be used for adding additional application-specific controls), and once that is in place, it should be relatively simple to implement this feature in JS code.\n. @dvdhsu unlike web forms, iOS has no natural concept of tabbing order, or the \"next field\", so we cannot easily replicate that automatically. If you register an event handler for onSubmitEditing, it should fire when the return key is pressed, and you can then call focus() on the next field in the form.\n. @dvdhsu I've not actually tried building a form like this in practice, so if you find that it doesn't work, or if you have some ideas for how to make it simpler to implement, I'd be keen to hear them.\n. @dvdhsu Having the keyboard dismissed automatically onSubmitEditing is probably a bug - it doesn't match the native iOS behaviour.\nI think it would make sense if we kept this as default behavior if onSubmitEditing isn't set (to avoid breaking existing code), but if onSubmitEditing is set then we disable it and leave it up to the JS to dismiss the keyboard.\n. Now that I think about it, we could probably implement select-next field automatically as well by making the following changes:\n- If the field's returnKey type is set to \"next\", the default behaviour of onSubmitEditing will be to focus() on the next field inside the parent. We can also support tabbing with the actual tab key for external keyboards.\n- Next field would be determined by the order of textfields inside their parent view. It could then be manually overridden either by adding a tabindex property to TextField (which matches the web convention) or with an explicit nextField attribute (although then we'd have to decide if that should be a ref or a reactID)\n@vjeux would you be in favour of something like this? And if so, @ide, @dvdhsu, do you feel like creating a pull request to implement some or all of the above? (I'll be happy to finish the job if you can at least make a start with it)\n. Not a bad idea, but I'm concerned about the maintenance burden of keeping this up to date.\nIt's also probably not necessary to include most/any of the view and viewmanagers, as they're effectively private - they're only exposed to the JS code.\n. To solve the image quality problem, you should be able to name your image Foo@2x.png or Foo@3x.png but reference it as just Foo, then iOS should load the correct size and resolution automatically.\n. To solve the image quality problem, you should be able to name your image Foo@2x.png or Foo@3x.png but reference it as just Foo, then iOS should load the correct size and resolution automatically.\n. Seems like this now works as intended.\n. \ud83d\udc4d\n. We've recently changed how modules are registered. I'm not sure if the new mechanism will make it easier or harder to work with RubyMotion, but perhaps you can update your implementation and we'll re-review.\nNotes:\n- We now have a macro that adds the +moduleName method to every bridge module, so if you do need to add extra code to every module, it should be done in that macro. We aren't likely to accept a PR that requires a new method to be manually added to every module in existence.\n- It's probably not a good idea to mix stylistic or whitespace changes with functional changes. It makes it harder to review, and also TBH, in general we probably don't want to change our preferred coding style over to your preferred coding style :-)\n. Re: 2) sorry I saw a lot of seemingly whitespace-only changes and jumped to the wrong conclusion. You can ignore that comment.\n. Unfortunately we had to move away from using objc_copyClassList due to startup performance issues in apps with very large numbers of classes (we use code generation for our internal apps, so our data model has many small classes).\nI don't think the objective of this PR still makes sense under the new system, but feel free to revisit it if you think there's something salvageable.\n. One major change that landed recently is that the executor and debug mode, etc. are all controlled via the bridge now, rather than the root view.\nWe're going to be doing some more refactoring of this soon, so I'd probably hold off on trying to update this for now.\nAs @frantic suggests, the eventual solution will probably be for the app to simply remember it's last state, so if you set debug mode in the dev menu and then do a cold start, it should still be in debug mode.\n. I think I need a little more context about how this is used. Do you have an example implementation you can point me to?\n. I think I need a little more context about how this is used. Do you have an example implementation you can point me to?\n. Thank you for the detailed explanation. That makes a lot of sense to me. @vjeux?\n. Why not just \"backgroundColor\"? Also, I feel like the \"opaque\" attribute is an implementation detail that we should hide. For example, we could set it automatically based on the opacity of the color specified.\n. I'm a little unclear about why backgroundColor is distinct from underlayColor? Why would you ever want them to be different?\n. RCTView is already the base view used by almost all components. Probably makes sense just to add the functionality to that rather than create an new RCTUIView class.\nThe views that don't currently inherit from RCTView can be modified to do so. We've been talking about this option for a while anyway, as it would mean we could get rid of the category on UIView, and have a lot more flexibility to override default view behaviors.\n. Also, no need for KVO - you can simply override layoutSubviews and send the notification from there.\nYou wouldn't want to do this constantly for every view though, so potentially you could only send notification if the onDimensionsChange callback was set?\n. Good point. And if we do it all in RCTShadowView, there's no need to change any of our view classes.\n. libuicore is no longer required. If you wouldn't mind removing it, I'll get this merged.\n. RCTWebSocketDebugger is still there, it's just included in the RCTWebSocket lib now instead of being a separate module.\n. Ah, but the issue itself is resolved, I believe. Nevermind :-)\n. We codemodded manually \u00af(\u30c4)/\u00af\nThe old RCT_IMPORT() syntax for methods should still be supported for a while though, so no need to upgrade everything right away.\n. @lwansbrough I understand that this is frustrating, and we'll try to do better, particularly with the docs updates.\nRelease notes are problematic due to the way that fixes are landed internally and then pushed to github in batches. Again, we're actively working to improve that process.\nI would like to reassure you that there is some method to the madness though. We're aware that breaking changes are painful, and we'll do our best to a) avoid making them, and b) when we do make them, ensure that we break things in an obvious way, rather than having things silently fail.\nFor example, in the change to module registration, we left the class scanning feature enabled in debug mode, purely so we could detect modules that have not yet been converted, and provide a useful error message.\nSimilarly, for the RCT_EXPORT -> RCT_EXPORT_METHOD change, we've left in full support for the old system so that you can make the upgrades at your convenience instead of immediately breaking the apps.\nI'm pretty happy with the technical approach we've taken here, but we'll try to improve on the communication and documentation side too.\n. Sorry if I was unclear: RTC_EXPORT_MODULE() is required, but RTC_EXPORT_METHOD() shouldn't be. These landed around the same time, but they're distinct changes.\n(i.e if the old RCT_EXPORT() approach of exporting methods isn't working, that's a bug, not deliberate).\n. @vitch please make a separate pull request, as this one has already been merged. Once accepted, it will become part of RN.\nI'll let @vjeux field the question about whether it should be a style vs a prop, but my undertanding is that it should be a prop.\n. We did debate adding this at the time of the refactor. In the end I decided it wasn't really necessary - these methods are written explicitly for the purpose of exporting to JavaScript, so there's no need to maintain compatibility with existing code, and the approach of taking just the first part of the selector allows full freedom to name it whatever you want.\nThe only disadvantage is that it forces you to sometimes name your method slightly un-idiomatically with respect to Objective-C - i.e. you might have to call it:\n- (void)doSomething:(id)foo bar:(id)bar;\nInstead of:\n- (void)doSomethingWithFoo:(id)foo bar:(id)bar;\nWhich would be the convention. This does bother me a little bit, but honestly so few people will care about this that it hardly seems worth increasing the API surface to support it. We checked our existing modules and there were only about 2 cases in the whole project where someone had bothered to use a different name, even though this was fully supported under the old system.\n. Another solution I considered was to do the Swift-like thing of removing the WithX: from the first selector, if present. Then you could write\n- (void)doSomethingWithFoo:(id)foo bar:(id)bar;\nAnd the JS method would still be. doSomething().\nThe reason I decided against that is that, while it would make Objective-C people happier, it would cause more confusion for JS developers, and we want to avoid that since the majority of our target audience at the moment are not expert native developers.\n. Another thought:\nFor properties, where we do support something similar, we call the macro RCT_REMAP_VIEW_PROPERTY(). I don't love this, but it if we were to add such a feature, I feel we should try to be consistent with the naming.\n. Eh.. fair enough :-)\n. Wouldn't it make more sense to provide an array of pins?\nAlso, we'd really want to be able to remove them. We could do that by maintaining a dictionary of annotations keyed by coordinate internally and when the array is updated we'd remove the ones that are no longer in the array.\n. let {LinkingIOS} = React only includes the JavaScript code, not the native code. We split the native code into distinct libraries to keep the binary size down for apps that aren't using all of the features, so you need to include all of the libraries that contain the native modules you want to use in your app.\n. It's now merged.\n. Sorry about the breakage. AFAIK, RCTDataManager is a private implementation detail of XMLHttpRequest, which now passes the data as a dictionary, so I'm not sure why it would be breaking.\nCan you give me any more detail about where the error is occurring?\n. Yep, it looks like the only reference to DataManager is in XMLHttpRequest.ios.js, where it is passing a dictionary for the second parameter.\nAre you using an outdated copy of XMLHttpRequest.ios.js? Or maybe you wrote some custom js code that calls DataManager directly, and passes a string?\n. @johanneslumpe I'm unable to explain how that can be happening. fetch calls XMLHttpRequest, and XMLHttpRequest sends an object as the second parameter to queryData, not a string. Can you verify that the queryData call in your local copy of XMLHttpRequest.ios.js looks like this?\nRCTDataManager.queryData(\n  'http',\n  {\n    method: method,\n    url: url,\n    data: data,\n    headers: headers,\n  },\n  // TODO: Do we need this? is it used anywhere?\n  'h' + crc32(method + '|' + url + '|' + data),\n  (result) => {\n    result = JSON.parse(result);\n    this.callback(result.status, result.responseHeaders, result.responseText);\n  }\n);\nIf so, can you trace the call in Chrome debugger and verify that's the method being called? Maybe you somehow have a stale copy of XMLHttpRequest.ios.js in another folder that it's using preferentially?\n. I've been trying to land this today, but ran into an unexpected merge conflict. Should be sorted shortly.\n. I think borderStyle itself is something we can reasonably support in the core library, given that we already have a custom CSS border rendering implementation and border style is part of the spec.\nFor more general styling properties, the idea is that you'd have a bespoke component (e.g \"FancyBorderView\") and to use it via composition, rather than trying to inject additional functionality into RCTView.\nThe idea of rendering plugins for RCTView is interesting, but I'm struggling to think of a use case for such a plugin that couldn't be achieved with ordinary component composition.\n. I think borderStyle itself is something we can reasonably support in the core library, given that we already have a custom CSS border rendering implementation and border style is part of the spec.\nFor more general styling properties, the idea is that you'd have a bespoke component (e.g \"FancyBorderView\") and to use it via composition, rather than trying to inject additional functionality into RCTView.\nThe idea of rendering plugins for RCTView is interesting, but I'm struggling to think of a use case for such a plugin that couldn't be achieved with ordinary component composition.\n. I'm not promising we'll add borderStyle to the core, but if we did there would be a fairly simple upgrade path - you'd just remove your custom wrapper view and apply styles directly (and if you didn't, your old code would still continue to function perfectly well).\nThe problem with allowing arbitrary extensions to RCTView is that if we were to later implement the same style in core, the semantics might be different, leading to crashes or unexpected behavior in your code.\nAlso, what if multiple different plugins tried to add extensions with clashing property names? What if you wanted to use two different components that relied on conflicting style extensions? Etc.\nI appreciate that having to insert extra container views isn't ideal (especially if you come from the web world, where your node structure is supposed to reflect the semantics of your data, not its stylistic presentation), but it avoids all these problems.\n. I'm not promising we'll add borderStyle to the core, but if we did there would be a fairly simple upgrade path - you'd just remove your custom wrapper view and apply styles directly (and if you didn't, your old code would still continue to function perfectly well).\nThe problem with allowing arbitrary extensions to RCTView is that if we were to later implement the same style in core, the semantics might be different, leading to crashes or unexpected behavior in your code.\nAlso, what if multiple different plugins tried to add extensions with clashing property names? What if you wanted to use two different components that relied on conflicting style extensions? Etc.\nI appreciate that having to insert extra container views isn't ideal (especially if you come from the web world, where your node structure is supposed to reflect the semantics of your data, not its stylistic presentation), but it avoids all these problems.\n. @vjeux  are you happy to include this as a separate module, or is there a case for renaming PushNotificationIOS to just NotificationIOS and then merging these? The API and implementation for local and remote notifications is very similar on iOS.\n. @vjeux  are you happy to include this as a separate module, or is there a case for renaming PushNotificationIOS to just NotificationIOS and then merging these? The API and implementation for local and remote notifications is very similar on iOS.\n. @joewood this is exactly what I've been considering - storing data on the native side and sending a tag to the JS as the XHR response.\nThe problem with this approach is controlling the lifecycle of the data. We'd have no way of knowing if JS discarded the tag, so we wouldn't know when to release the data on the native side. We could put it in a LRU cache, but then you have the opposite problem, where the data has been released but you're still holding on to the tag, expecting it to work next time you use it.\nI'm open to suggestions.\nOne option would be to encode enough info in the tag that it can re-download the data again if it's been discarded from the cache. I'm not sure if that would work in practice though.\nAnother option I've considered is that rather than downloading data to RAM, the \"tag\" will be a local file URL, and we'll provide a file manager so that the caller can then move or delete that file manually, otherwise it will remain indefinitely.\n. @ssomnoremac we haven't attempted to solve the problem of marshalling arbitrary binary data across the bridge yet, but we support adding file attachments to XHR requests by just specifying the url so that the data never needs to cross the bridge (it will download and upload the data on the native side as a single action).\nAlternatively, if it's an image, there's a workaround involving using the ImageStore module to export the image to JS as a base64 string.\n. @nsainaney I'm a bit unclear on your use case. If you have a url that returns a blob of imageData, can't you pass the url as the <Image> source directly?\n. @ssomnoremac I've only tried it with plain XHR, but I assume it works with fetch as well.\nThe trick is to use our FormData polyfill. It seems like the docs for that aren't on the website, but it's pretty well-documented in the FormData.js file:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Network/FormData.js\n. cc: @mkonicek, @bestander - can we get the FormData docs added to the web site? It's not the first time this has come up, and judging by the number of 3rd party file upload modules, I don't think anyone knows this feature exists.\n. @experimentsin ah, good point. We should extend the image source object to include headers and http method, like the one for webview.\nWe'd need to do some work on RCTImageLoader as well to make it accept NSURLRequests and not just url strings.\n. How are pins different from annotations? They seem to be duplicating the same concept...\n. OK, it turns out that this is because I used \"http://apple.com\" as the host, when it should just be \"apple.com\". Dumb mistake \ud83d\ude1e\nI've submitted a fix which should land shortly. In the meantime, if you make that change yourself locally inside RCTReachability.m, it will solve the problem.\n. It's working for me on device and simulator, but I vaguely recall there was a bug on OSX reachability that may have been fixed in 10.10.3. If you haven't upgraded yet, that might explain why you're seeing this.\n. To be clear, the bug was on Mac OS, so it only affected the simulator. As far as I know, it should work fine on the device for all iOS versions.\n. Sorry this has been in limbo for a while. The issue we have with the fix is that it's very expensive to do the search like this. Because the loop is no longer exiting early, it basically increases the algorithm from O(log n) to O(n), which is troubling.\nA possible alternative would be to pre-sort subviews by z-index, but since the JS-side of React isn't aware of the z-index property, it's not entirely clear how best to do that.\n. @brentvatne that sounds like a solid approach, especially since that's currently the only place we use z-index.\n. It should be pretty straightforward - just loop through the sticky header indexed views first and if none of them return a hit, call [super hitTest].\nThere are certainly some optimisations that could be made, such as extracting some of the dockClosestSectionHeader logic so that you only need to check the docked headers (the others all have the same z-index as the normal views, so don't need special treatment), but I reckon that's a reasonable starting point.\n. Sorry, I've had this on the backburner for a little while. I'm just trying to figure out the best way to share the SocketRocket library between both this and the Chrome debugger, as they're both optional libraries.\n. The options I've come up with so far are basically:\n1. Include SocketRocket in the core React lib, so both WebSocket and WebSocketExecutor can share it.\n2. Put the WebSocketExecutor and WebSocket in the same library.\n3. Have two copies of the SocketRocket library, and rename one so they don't clash if you include  WebSocket and WebSocketExecutor in the same project (I'd probably also #ifdef out the WebSocketExecutor version in release mode to save a few KB)\nOption 1 is probably the most straightforward, although it means that projects that don't use WebSocket have to carry the weight of SocketRocket in their binary anyway. Option 2 doesn't really solve anything. I guess I'm leaning towards option 3, but it will be a pain to maintain such a heavily modified fork of SR.\n. The decision we've come to with CocoaPods is that we want to fully support people using it, but don't want to make it mandatory. Unfortunately that eliminates it as an option for solving mutual dependencies between our first party modules.\n. @lazywel sorry for the delay. Internal diff means the github pull request has been translated into a pull request in our internal repository, which is the first step to being merged in.\nThis has now landed internally, so it should be included in the next update.\n. @vjeux are you referring to the missing import in UIExplorer that@tadeuzagallo has now fixed? If so, can we close this again?\n. @brysgo yeah, we messed up. We'll push up a fix shortly.\n. Makes sense to me. @frantic - any objections? We might need to check that none of our internal apps rely on this default, but I think we're probably fairly safe.\n. @ide good call.\n. This should probably be handled inside [RCTConvert NSURL:], however we tried that before and ran into problems where the @2x suffix on images URLs was being double-encoded.\nThis is on my radar to fix, but it requires some care since it potentially affects many different components.\n. @brentvatne thanks :-) Just need to wait for the actual methodQueue feature to land now!\n. Of these, I find option 2 (polyfill the node http module) most appealing. Specifically the http.request() and http.get() methods.\nDo you feel like trying to build it? :-)\nhttp://nodejs.org/docs/v0.4.11/api/http.html#http.request\n. @vjeux sadly my knowledge of node conventions is lacking. If I were to provide a polyfill for Node's http module, would there be a practical way to switch React Native into \"server mode\" so that modules would use that instead of our XHR polyfill, or am I barking up the wrong tree?\n. That would be helpful - thanks!\n. Which are the main differences between the controls that are prompting this discussion?\nLooking at the TextInput.js it seems like there are no features on AndroidTextInput that aren't present on RCTTextField (with the exception of multiline) and most of the differences are simply features on RCTTextField that haven't been implemented yet on Android.\nThere are a few iOS-specific features such as returnKeyType and clear button that may have no analog on Android (I don't know Android, so correct me if I'm wrong), but that's always going to be the case with any control. I'm wondering whether it would be better to suffix just these property names with IOS/Android rather than forking the whole control.\nThat said, having a common component and then exposing the platform-specific properties on platform-specific subclasses does have its merits - in particular, it means that if platform-specific properties ever get promoted to x-platform, there's no need to change property names and disrupt existing code.\n. @brentvatne we have multiline support internally on iOS in the form of RCTTextView (you can see it referenced in the TextInput.js file) - we just haven't got around to building an open-sourceable version yet. iOS has a UITextView that supports multiline input, so we just need to wrap it (I was hoping someone would have filed a PR for it by now, but if not I'll probably end up building it myself!)\n. @brentvatne but in any case, if we are going to fork a component, I think it should be because of irreconcilable differences between platforms, not because the Android/iOS feature lists haven't quite synced up yet :-)\n. @brentvatne I didn't mean to shut you down, I wasn't in the IRC chat so I don't have a lot of the context. I don't actually dislike the idea at all - just wanted to make sure that you weren't operating on incomplete information about why the missing features are missing.\n. \ud83d\udc4d\ud83c\udffd\n. This is an interesting. Idea. We polyfill the XMLHttpRequest API using native code when running in the JavaScriptCore executor, because XHR is a browser API and as such, simply doesn't exist in a pure-JS context.\nBut in theory, when running in a browser, we could offer the option to un-polyfill the API, and use the browser's HTTP request infrastructure instead. It would have to be an option that was separate from normal debug mode, because it wouldn't be a true test of the app behaviour (it would mask differences in the native XHR implementation), but it seems like a reasonable thing to want to do.\nAnother option would be to simply pipe request/response headers and bodies through to the JS console so they can be inspected. That would be simpler, but perhaps less useful?\nThoughts, @vjeux?\n. @jaygarcia, @paramaggarwal As far as we know \u2013 based on the new guidelines \u2013 Apple don't have a problem with you downloading and running JS code from a server, provided that the app that you release continues to behave substantively the same as the one that was submitted for review.\nThat said, none of our existing React Native apps at FB are downloading their code in production - they all use static bundled JS as suggested in the documentation.\n. @paramaggarwal yes, that would be a better approach in most cases\n. @iostalk provided that you only use the download facility to fix bugs or make very minor feature changes, yes, that seems to be what Apple are suggesting with their latest developer guidelines.\n. I've got it working in flow 0.10 by disabling flow in UIExplorerList.js, and switching a few types to \"any\" in the other files it complains about.\nThere were a couple of genuine type errors, but it looks like the others are either bugs in the flow analyser, or it's been confused by a knock-on issue from an imported file that my flow-fu isn't strong enough to diagnose.\n. It has been internally - just not in time for the last github merge. It will be in the next one.\n. Not currently, but it's an interesting idea. Obviously you can store stuff in JS memory, but it can't be shared between RootViews.\nA generic key-value store BridgeModule that wraps a dictionary would be very simple to write. In fact, here's all the native code you'd need if you feel like making one for yourself (completely untested of course) :-)\nRCTKeyValueStore.h file\n```\nimport \n@interface RCTKeyValueStore : NSObject\n@end\n```\nRCTKeyValueStore.m file\n```\nimport \"RCTKeyValueStore.h\"\nimport \"RCTConvert.h\"\n@implementation RCTKeyValueStore\n{\n  NSMutableDictionary *_store;\n}\nRCT_EXPORT_MODULE()\n\n(instancetype)init\n{\n  if ((self = [super init])) {\n    _store = [[NSMutableDictionary alloc] init];\n  }\n  return self;\n}\n\nRCT_EXPORT_METHOD(setValues:(NSDictionary *)values)\n{\n  [_store addEntriesFromDictionary:values];\n}\nRCT_EXPORT_METHOD(getValues:(NSStringArray )keys callback:(RCTResponseSenderBlock)callback)\n{\n  NSDictionary values = [_store dictionaryWithValuesForKeys:keys];\n  callback(@[values]);\n}\nRCT_EXPORT_METHOD(deleteValues:(NSStringArray *)keys)\n{\n  [_store removeObjectsForKeys:keys];\n}\n@end\n```\nIt (and the data in it) would persist for the lifetime of the bridge, but would not survive a cold app restart or a Cmd-R. Hope that helps!\nEDIT: PS, the values it stores can be any json-serializable object, and it will return null for any requested key that doesn't exist. Example usage:\n```\nvar RCTKeyValueStore = require('NativeModules').KeyValueStore;\nRCTKeyValueStore.setValues({\n  foo: 5,\n  bar: [\"hello\", \"world\"],\n});\nRCTKeyValueStore.getValues([\"bar\"], function(results) {\n  var bar = results.bar;\n});\nRCTKeyValueStore.deleteValues([\"foo\"]);\n```\n. @ide, yeah I guess so. Mine was more fun to write though \u00af_(\u30c4)_/\u00af \n. Sorry this has gone unattended for a while. We're still catching up on the backlog.\nThis is basically fine aside from a few stylistic issues. If you can fix those, and rebase against the latest version, we can get this merged.\n. Good call. I've removed it.\n. There's a discussion of the reasons in this thread: https://github.com/facebook/react-native/issues/207\n. TL;DR;\n- React Native was already in an advanced stage of development before Swift was announced\n- Swift is still changing frequently, and the tools are very unstable and slow for large projects\n- The dynamic binding and macro tricks we are using would be difficult to implement in Swift\n. The red box error screen is only for development purposes, and won't show up in a real app.\nThere's nothing to stop you presenting an error alert using AlertIOS, or building a custom error screen to display in the event of catching a JS exception, but I'd advise against it, as it's not a great user experience.\nUsers don't expect to see 404-style error pages in a native app - the ideal scenario is that you should ship your app without any showstopping crashes, but in the event that a React Native app does throw an uncaught exception in a release build, it will quit to the home screen lust like a normal app.\nNetwork failures, and other \"expected\" errors should always be sent back to your JS code in the form of error callbacks, so you can handle these gracefully and appropriately to the context in which they arise, rather than needing to resort to exception handlers and red/blue/pink screens of death :-)\n. @robertjpayne I have some work to do in order to support this.\nBecause of the data segment registration mechanism, right now, even if you pass a module in explicitly via the moduleProvider block, it won't work if the class is defined outside the main binary because it can't pick up the metadata. That's why the RCTTest module must be included in the app target right now instead of just the test target.\nShouldn't be too hard to fix this though.\n. LayoutAnimation is a neat feature, but until we work out what our overall animation strategy is, I don't really want to invest a lot of time in it. It feels like an iOS-specific hack, and I'm not sure if we'll be able to support it x-platform in its current form.\n. LayoutAnimation is a neat feature, but until we work out what our overall animation strategy is, I don't really want to invest a lot of time in it. It feels like an iOS-specific hack, and I'm not sure if we'll be able to support it x-platform in its current form.\n. Right, the spring animation curve in particular seems very platform-specific, but I agree the general principle could be more widely applicable. And it's declarative, which fits nicely with React.\n. Right, the spring animation curve in particular seems very platform-specific, but I agree the general principle could be more widely applicable. And it's declarative, which fits nicely with React.\n. We support iOS 7 and above.\n. We support iOS 7 and above.\n. The Android version currently works on Jelly Bean (API level 16) and above. The team are hoping to be able to support Ice Cream Sandwich (API level 15) and above, but can't commit to that at this time.\n. The Android version currently works on Jelly Bean (API level 16) and above. The team are hoping to be able to support Ice Cream Sandwich (API level 15) and above, but can't commit to that at this time.\n. Not yet. I've created a task to implement this.\n. Not yet. I've created a task to implement this.\n. To be clear, do you want to display a loading indicator inside the webview itself, or are you talking about the network activity indicator that appears in the status bar on the top of the screen?\n. To be clear, do you want to display a loading indicator inside the webview itself, or are you talking about the network activity indicator that appears in the status bar on the top of the screen?\n. Already implemented.\n. This looks fantastic, thank you!\nThe only thing I can see that's missing is placeholder text support. There's no built-in support for this in UITextView, so it will need to be implemented as a private UILabel inside RCTTextView that shows and hides automatically when the text is edited.\n. OK, so there's a couple of things happening here: The contentInset property you declare in the interface is currently redundant because that property is declared already on UITextView and inherited.\nYou won't find it in the docs because it's not a property of UITextView itself, but is inherited from UIScrollView, which is UITextView's superclass.\nHere's a good writeup of the problem, and the only viable solution, which seems to be to wrap the control in another view and apply the padding to that outer view instead: http://stackoverflow.com/questions/18560412/uitextview-content-inset - in React we could do that wrapping either in the native or the JS code, but I think native makes more sense in this case.\nProbably easiest to make RCTTextView a subclass of RCTView, and add a regular UITextView as a private subview that it controls. The contentInset property would then be used to adjust the frame of the subview, not the inset of the scrollView.\nTo fix the placeholder label, just adjust it's frame to match tht inner textView's (it's frame may need to be inset by a few pixels to make the label text perfectly align with the textView text though).\n. Yes, that is indeed how the UIFont stuff is supposed to work. If you can provide some examples of it not working, I'll dig in and see if I can figure out the problem.\n. Hah, you were too quick for me ;-)\n. It looks like the <Text> example is totally broken - I think the changes to +[RCTConvert UIFontXX] may need some more work :-)\n. This is great, thanks! I've merged it internally.\n. The idea is that all native styling features should be exposed to JS, but it's a work in progress. If you've found a solution, please add a property to expose this to JS and open a pull request, then other people will be able to do it without having to write Objective-C.\n. 1. This should be fine. You can place one or more RCTRootViews anywhere in your app - they don't have to be the root view of the app, if that makes sense.\n2. That's also fine. Just create the bridge and store it somewhere (probably in a property in your app delegate). You can then re-use that bridge for each RCTRootView without re-creating or reloading it.\n3. I'm not sure what this means.\n4. You can pass properties in the -(NSDictionary *)exportedConstants method of each of your modules that will be available to the JS code immediately when it loads. For data that changes while the JS is running, you'll need to use the event emitters. These events are guaranteed to be received as long as the JS code is running and has registered to observe the event.\n. 1. Yes, I think that's fine.\n2. Create your bridge like this:\nRCTBridge *bridge = [[RCTBridge alloc] initWithBundleURL:URL_YOU_NORMALLY_PASS_TO_ROOTVIEW moduleProvider:nil launchOptions:nil];\nThen store it somewhere in your app, e.g. in a property inside AppDelegate. Then whenever you create a new RCTRootView, do it like this:\nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge:BRIDGE_YOU_CREATED_EARLIER moduleName:MODULE_NAME_FOR_THAT_COMPONENT];\nThat way, all of your root views will share the same bridge and javascript code, but can each run a different component.\n. Merged.\n. @bimawa Static C functions are also smaller, faster and truly private, as opposed to private-by-convention. They're also inherently \"pure\" - they only operate on their arguments, making them easier to understand and debug. We're trying to use them wherever possible instead of private methods.\n. It's difficult to know what level of detail to go into with something like this. We do have very specific style guidelines for Objective-C code, but they'd probably run to a dozen pages if we mentioned everything!\nThe [x setVar:y] vs x.var = y is a good one (we prefer the latter, but only for @properties, not methods).\nBesides that, may as well merge this as is and we can expand on it later as and when issues arise.\n. It's difficult to know what level of detail to go into with something like this. We do have very specific style guidelines for Objective-C code, but they'd probably run to a dozen pages if we mentioned everything!\nThe [x setVar:y] vs x.var = y is a good one (we prefer the latter, but only for @properties, not methods).\nBesides that, may as well merge this as is and we can expand on it later as and when issues arise.\n. We have a solution in mind for this, but it's not really supported at the moment. Using @ide's PR is a good option if you need it right now.\nI'm curious why you need it by the way? (just so I can keep track of the real-world requirements for when we do ship a solution).\n. We have a solution in mind for this, but it's not really supported at the moment. Using @ide's PR is a good option if you need it right now.\nI'm curious why you need it by the way? (just so I can keep track of the real-world requirements for when we do ship a solution).\n. Ah, I'm guessing it relates to this: https://github.com/facebook/react-native/issues/1010\n. Ah, I'm guessing it relates to this: https://github.com/facebook/react-native/issues/1010\n. I'm curious what the use case is for setting a custom thread?\n. I'm curious what the use case is for setting a custom thread?\n. Hmm. The fact that all RCTContextExecutors share a single thread is probably a design error. It dates back to when we had to create seperate bridges for each rootView, but now I think it would be better if each RCTContextExecutor created its own thread instance.\n@tadeuzagallo would you agree with that?\n@jwyld would that be a more straightforward solution to your requirement?\n. Hmm. The fact that all RCTContextExecutors share a single thread is probably a design error. It dates back to when we had to create seperate bridges for each rootView, but now I think it would be better if each RCTContextExecutor created its own thread instance.\n@tadeuzagallo would you agree with that?\n@jwyld would that be a more straightforward solution to your requirement?\n. We don't use HTML for rich text on the native side at all. I suspect (although I'm not 100% sure) that the reason the first example works is that the JSX parser converts the entity into the equivalent unicode character.\nSo to make the second example work, you should probably use JavaScript-style unicode escaping instead of XML/HTML-style escaping - i.e.\nvar txt = '\\u00AE';\nreturn <Text>{txt}</Text>\n. With a bit of runtime logic we could just detect if the RCTPushNotificationManager exists, and include the necessary code to call it in the AppDelegate of the standard project template. Maybe that's the best option.\n. Take a look at the implementation for RCTWebView, which solves a similar problem.\n. Although, if your command center is a singelton, and doesn't have any UI of its own, should it perhaps just be a regular bridge module, rather than a view manager?\n. It sounds like your problem is more similar to something like RCTReachability, or RCTLocationObserver, where the native module just has methods and sends events, but has no view of its own.\n. I'm working on something now. Will keep you posted.\n. We don't have one yet. I'm working on something, but I don't have an ETA yet, so feel free to make one.\n. @watsonwu9 can you also post the code inside your AppDelegate?\nIf I understand correctly, when your JS application loads, you call sendAuthReqToWX to initialize the 3rd party API, and some time after that, it calls a delegate method on your App Delegate. In that App Delegate method, you then call sendUserInfoToJS on your module and send the user data back to the bridge - is that correct?\n. WeixinLoginManager should ideally not be a singleton (i.e. should not be accessed via a sharedInstance method). The RCTBridge creates its own instance of WeixinLoginManager, so if you try to access [WeixinLoginManager sharedInstance], it won't be the same instance that the bridge is using.\nInstead of calling [WeixinLoginManager sharedInstance], use  bridge.modules[@\"WeixinLoginManager\"].\nTo do this, you'll need to have a reference to the bridge somewhere in your app delegate.\n. Where do you set up your RCTRootView?\n. @watsonwu9 did you look at the example apps? Every app normally has an RCTRootView, which is typically set up in the AppDelegate. That's where your React Native app will appear on screen.\nThe RCTRootView has a bridge property, so if you set up your RCTRootView in the AppDelegate, you can store the bridge in a property in your AppDelegate and then use that to access you module.\n. Yeah, that isn't supported currently. We rely on Apple's border drawing for rounded corners, and that doesn't support different colored sides.\nThe CSS border spec is actually amazingly complicated, with loads of really weird edge cases.\nThe good news is, @a2 has now managed to implement most of it, and his upgraded version should hopefully land sometime this week.\nIf that's not soon enough, you're probably best off using a background image.\n. Just spotted this today. I think it may actually be a simpler problem than that; we're trying to remove objects from an array inside a for\u2026in loop. Oops.\nhttps://github.com/facebook/react-native/blob/master/React/Base/RCTBridge.m#L1139\nCc: @tadeuzagallo\n. cc: @vjeux \n. Will this apply to sounds, html files, json, etc. as well?\n. @yifeic I'm working on an improvement to the image loading pipeline that will make it possible to plug in new image loaders. For now though, the only option is to clone RCTStaticImageManager or RCTNetworkImageManager, modify it to use your own loader, then export it with the same name as the built-in module and inject it using the RCTBridge moduleProvider block so that it is used instead of the built-in version.\n. Ah, well spotted. Thanks!\n. You can either change the value in RCTDefines.h, or in the build settings for the React lib project, search for \"Preprocessor Macros\" and add RCT_DEV=0 to the section where DEBUG=1 is currently defined.\n. The fact that the developer menu stays active in release mode was a bug that has now been fixed on our internal build. That should make it into the next OSS release. Sorry for any inconvenience.\n. @opolyo01 are you using version 0.4.2? I believe 0.4.1 had a bug that would explain this, but it's fixed in 0.4.2.\nYou can manually disable the dev menu by changing the value of RCT_DEV to 0 in RCTDefines.h, but that should be the default value in release mode anyway unless something is wrong.\n. I'm on board with fixing this, but I'm not thrilled about the solution. Not calling super inside layoutSubviews is violating the API contract, so it may only work by coincidence, and could have unforeseen side-effects.\nI'll dig in and see if I can come up with a better solution. If not, I'll re-evaluate.\nThanks!\n. OK, well what I've been able to establish so far is that the problem relates to this code in RKCustomTabBarController:\n- (void)viewWillLayoutSubviews\n{\n  [super viewWillLayoutSubviews];\n  _currentTopLayoutGuide = self.topLayoutGuide;\n  _currentBottomLayoutGuide = self.bottomLayoutGuide;\n}\nIt's not the settings of the _currentTopLayoutGuide/_currentBottomLayoutGuide that's the problem (they appear to be unused), it's the fact that calling self.topLayoutGuide/self.bottomLayoutGuide triggers the creation of some layout constraints, which are then applied by [super layoutSubviews].\nI'm going to investigate what those layoutGuides are actually used for, and if we can remove them.\n. Sorry, the fix has landed internally, but we want to solve some of the other bugs people are seeing in 0.4.1 before we update GitHub. Shouldn't be too long.\nThe fix is as-described though, so you can continue using your fork for now - the fix will work the same when it lands.\n. This fix is included in https://github.com/facebook/react-native/pull/1165 so I'll close this now.\nThe issue with the status bar getting lost if app is opened in landscape still persists though, if you'd like to open that as a separate issue (we're tracking it internally, but no progress on a fix so far).\n. We don't have a way to do this currently, but you could add a method to a native module to do this. It would look like this:\nRCT_EXPORT_METHOD(reloadBridge)\n{\n  [self.bridge reload];\n}\n. I've just added a way to do this in the latest internal build. I'll give you more details once it's shipped.\n. This should now be possible in the latest version by using:\nNativeModules.DevMenu.reload();\n. Yes, you can create the bridge using\nRCTBridge *bridge = [[RCTBridge alloc] initWithBundleURL: moduleProvider: launchOptions:];\nThen store that in a property somewhere (e.g. in your AppDelegate), and whenever you need to create a root view, say:\nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge: moduleName:];\nThat way the JS code bundle is shared, and each root view runs its own component.\n. cc: @tadeuzagallo \n. It seems like it would make sense to make it a core feature. I'm not sure where it should go though - maybe in the RCTUIManager constants, so it's available globally, but we already jam too much stuff in there :-/\n. Can this value potentially change while the app is running? If not, perhaps we could just bake support for these constants in +[RCTConvert UIFont:] so that they can be used as size values instead of passing numeric sizes.\n. Yeah, that's pretty much what I figured. I guess we can pass the notification through and let the app decide to re-render or not. I'll think about it.\n. How would this name be used?\nThere should only be one JSContext active at a time, so would it be sufficient for us to hardcode the name to something sensible?\n. We already support multiple root views running in a single bridge / context. That's probably a better approach in terms of memory usage, etc. Is there a particular reason you want seperate contexts?\n. OK, it should be possible. Rather than exposing new API though, what if we named the JSContext after the bundle loaded in it? Or maybe the actively running module(s)?\n. It seems like that code is just a stub and could do with some improvements. If you know what it should be doing, please feel free to change it and file a pull request.\n. You can add a custom error handler by using RCTSetLogFunction(). This won't disable the RedBox (perhaps it should - TBD), however you can do that separately by setting RCT_DEBUG=0.\nIf you can think of a better solution that won't break existing expectations, I'd be happy to consider it. \nIn future, RCTRedBox is likely to become a module, so you'll be able to replace it by passing in an alternative module with the same name vis the moduleProvider block. For now, the only option that doesn't involve changing the RCT_DEBUG preprocessor flag would be to swizzle some methods in the RCTRedBox (we do this in some of our unit tests).\n. Is it a local image uri, or remote? How big is the image?\n. I've checked on our latest codebase and this seems to be working correctly. Sorry for the breakage, but it should be fixed in the next update.\n. Which WebView functions do you want to call?\n. You could do this by using an encryption library to encode the JS and decode it at runtime before passing it to the bridge. The problem is that you'd have to ship the decryption key with the app code, so it would be trivial for a hacker to decrypt it if they were inclined to do so.\nI'd advise against including secret information in your application, even in native code. Code on the client is not secret - secrets should be kept on the server.\n. As @vjeux said, we have no immediate plans to add encryption for JS bundle files, and yes, under the currently recommended bundling instructions, your JS will be included as plaintext that can be extracted and de-obfuscated with relative ease.\nIf you are just interested in preventing casual inspection of the JS source (as opposed to stopping a determined attacker) then I believe there is another way to bundle your code that will be much harder to crack (I've not tested this, so you'll have to try it and let me know if there are any problems):\n1) Compile your jsbundle file as normal\n2) Base64 encode the jsbundle file, then copy the contents:\n3) In your AppDelegate (or wherever you set up your RCTBridge/RCTRootView), add the following:\njsCodeLocation = [NSURL URLWithString:@\"data:text/javascript;base64,AAAAAAAAAAAAA\"];\nWhere AAAAAAAAAAAAA is your base64-encoded bundle. Then pass that URL into RCTRootView as normal to load your app.\nThe advantage of embedding the source code in this way is that by including it as a string constant in your app (as opposed to a text file in the app resources) it will automatically be encrypted using Apple's FairPlay DRM when you upload it to the App Store.\nThat means that anyone who downloads the app from the store and looks in the resources won't find the code, but more importantly even if they open the app binary in a hex editor they won't be able to find this base64 string and decode it because it will have been converted into encrypted gibberish. That makes it about as secure as ordinary native app code.\nA determined attacker could still open the app on a jailbroken device and use some tools to copy the decrypted binary out of RAM, but as I said earlier, there's really no practical defence against that. This approach will certainly push the difficulty out of the realm of \"casual curiosity\" though.\nLet me know if this works for you (or doesn't). It should be relatively easy to modify the packager to automate this if there's significant interest in doing it.\n. @rborn did you get a chance to try my suggestion? Any problems?\n. Ah, pity.\nThe next option would be to encrypt the base64 URL and then decrypt it before passing to the bridge then. Not very much harder, but still an extra step. Doesn't really matter if the string is stored in the app or in a file.\n. Wait, when you say generated ipa for app store, do you mean you submitted it to Apple and then downloaded in iTunes once it was approved and released, or did you just export a release build from xcode?\nThe encryption is applied by Apple in the cloud, so it doesn't encrypt the ipa before you actually submit it.\n. Fairplay encryption is only applied to certain parts of the app binary itself, not to assets in the resources folder (they unzip your ipa, add the encryption, and then reassemble the ipa)\n. This has been merged,\n. Cc: @tadeuzagallo, who's been working on a unified solution for these race conditions.\n. Fixed in https://github.com/facebook/react-native/pull/1165\n. @tadeuzagallo is this fix included in your bridge changes already, or is it a new issue?\n. @frantic should this be using the require(image!xxx) syntax for images instead? That way, we get the size set automatically, right?\n. Oh right, these are remote images. Sorry, then yes, this is fine.\n. @jaygarcia, like @frantic, I'm curious what the high-level problem is, as it may be that there's a simpler or more idiomatic way to do what @cxfeng1 is attempting.\nIf you want to get data in/out of your JS application then there are abetter ways to do this - e.g. by sending an event from your native module that is monitored by your JS module, and then having your JS code call one of your native module's methods when it's done.\nIf you just want to call a JS API from native code without wrapping it in the standard React Native framework code then yeah, we don't really support that.\nI was considering exposing an API to execute arbitrary JS on the WebView component though, if that's any use to you (it's primarily useful for injecting code into web pages, but it could also be used to execute arbitrary JS code in a sandbox without affecting the main JS application).\n. Interesting. So you want a way in native code to know if the JS code is actually using a module?\nThis seems like a bigger problem at a platform level. Ideally we don't want to be including or executing any native code that isn't needed by the JS app. We've been discussing options such as lazy loading of native modules when they are first called, for example.\nDoes that sound like the sort of thing that might help with your problem? Perhaps you can give some more details about the sort of work on the native side that you are doing only when the module is required?\n. If you just want to encode data on the JS side, you should just be able to pull in any 3rd party base64 module (here's one: https://github.com/dankogai/js-base64).\n. This should no longer be an issue in 0.4.4.\n. I agree, we need a standard way to do this. I'm not sure I like using file:// for this though.\nMaybe starting the path with \"~/...\" would make more sense?\n. We're still looking at this one. Some other optimizations that we've merged into the RCTContextExecutor make merging this nontrivial now.\n. I'm cautiously in favor of this idea. Some thoughts on the implementation:\nThe RCTPromiseRejecter callback for handling errors is a good idea, but I've been wanting to introduce something like this as a general solution for error callbacks, replacing the existing RCTMakeError() mechanism, which is inadequate anyway as it doesn't enforce any kind of standard for domain/code info. So let's just add an RCTResponseErrorBlock (or whatever) to complement RCTResponseSenderBlock (which I now realise is a terrible name anyway) and allow it to be used in any callback.\nThe automatic resolve/reject declaration idea you had originally was nice, but if that's not workable, then there's not really any need to have a new macro for promises. Instead of declaring a method to be of type promise, and then validating that the arguments meet the criteria, just let any method with a success and error callback be used as a promise. It doesn't seem like the actual calling mechanism is any different on the native side.\nOn the JS side, when enumerating over the exported module methods we can identify methods that meet the criteria to be a promise, and either add a second function with promise semantics, e.g.\nMyNativeModule.getValue() // the original exported function\nMyNativeModule.getValuePromise() // promise-ized version added by BatchedBridgeFactory.js\nOr, since functions are objects anyway, we could add a property, something like:\nMyNativeModule.getValue() // the original exported function\nMyNativeModule.getValue.promise() // promise-ized version added by BatchedBridgeFactory.js\n. @ide works for me. I'd be OK with enforcing the param usage on the native side instead if that makes sense. Since it's an error in the native code to send the wrong params it should probably be an assertion rather than a redbox.\n. (To be clear when I say \"enforce on native side\" I mean enforce that if any included arguments are an enforcer or rejecter, they must be the last two. I don't know if that's what you meant.)\n. @dhrrgn the support for variable border radii that I mentioned has now landed in 0.4.3. Let me know if that solves your issue.\nSeperately, it looks like the fact that clipping no longer works may actually be a bug, but if so the fix won't be coming for at least a few days, so if you can work around it using corner radii, that's probably a faster solution.\n. Yeah, @a2's fix for this is in the latest release. There's still an outstanding bug where borders are drawn behind the content when overflow = hidden, but I'm working on that now.\n. Fix has landed internally. Should be in the next update.\n. There's no reason not to expose the accuracy, but it should be done so in a way that's compliant with the HTML5 Geolocation API as far as possible.\nI thought we already did this, but I guess I misremembered.\n. @robertjpayne I'm intending to do some work to make executor \"plugins\" possible in the near future. Until then, it should be reasonably simple to hack a solution to get your custom executor working.\n. This has been merged internally.\n. They're automatically managed by the Objective-C network stack, which is used internally by fetch. We haven't exposed any explicit support for them though. This would need to be implemented as a native \"RCTCookieJar\" module.\n. @xavibonell did you include the native RNCookieManagerIOS.h/m files in your Xcode project? It's not sufficient just to require the js.\n. @joeferraro this is likely to be a common source of confusion. It might be a good idea to include an invariant inside your index.js to the effect of:\nvar invariant = require('invariant');\ninvariant(\n   NativeModules.RNCookieManagerIOS,\n   'Add RNCookieManagerIOS.h and RNCookieManagerIOS.m to your Xcode project.'\n);\n. @marcshilling The JS can be preloaded by the bridge in advance of your RCTRootView being displayed. I suggest storing an RCTBridge instance in your app delegate and preloading the JS. You can then create a new RCTRootView on each tap, using the same bridge instance (via -[RCTRootView initWithBridge:]), and it should load much more quickly.\n. We should probably provide a different template for apps with multiple RCTRootViews. Or maybe just deprecate the RCTRootView convenience constructor that obscures the existence of RCTBridge.\n. You might be interested in the new RCTContentDidAppearNotification in the latest release btw :-)\n. I'm surprised that RCTBridge blocks your app loading noticably. It's true that it has to be initialized on the main thread, but most of what it does afterwards is done on a background thread.\n. You can load the bridge whenever you want, it doesn't have to be at app launch time. For example, you might load it on the screen before you present your RCTRootView controller so that by the time the user presses the button to display the React view, it's already loaded the JS. You could then throw it away again if they go somewhere else in the app.\nTo avoid the additional delay due to the JS app initialization, you could also try pre-creating the RCTRootView off-screen, and then set it as the root of your view controller when it's presented.\n. cc @tadeuzagallo - maybe we're running the displaylink in the wrong mode? I thought it was using commonModes already, but maybe not.\n. Oh, yeah. That would do it. I think timers were always envisioned as being used for animation-related purposes, but it seems like we should add an explicit \"pauseInBackground\" property or something rather than pausing all timers by default.\n. You might want to take a look at #1229 as it looks like what you're trying to do has already been implemented in that PR.\n. @robertjpayne sorry for not getting back sooner. Looking at your \"ACTIVE CHALLENGES\" example above, it seems like the \"ACTIVE\" is still off-center - i.e. this fix doesn't work for wrapped lines, only the last line in the string, which seems a bit unsatisfactory.\nIs there another solution we could try, such as offsetting the whole rendered string by half the width of one character space?\n. I noticed this clause in the code:\nif (shadowText.effectiveLetterSpacing < 0) {\n  result.dimensions[CSS_WIDTH] -= shadowText.effectiveLetterSpacing;\n}\nIf I understand correctly, this is intended to compensate for a bug where a negative letterspacing causes the width to be too short by one letter space. But I think this is actually the same bug you're dealing with. If the if statement was removed, so that the code was just\nresult.dimensions[CSS_WIDTH] -= shadowText.effectiveLetterSpacing;\nI think it might remove the extra space at the end of the string. Wanna try that?\n. I'm not sure we should be slavishly matching web behaviour even if the web behaviour is wrong. It seems to me pretty clear cut that having letter spacing work the way that it does currently is not desirable, and if we can fix it then I think maybe we should. @vjeux, what are your thoughts on this?\n. @vkurchatkin I agree that it should work the same in terms of the actual spacing between characters, but having spacing after the last character seems broken. I cannot imagine a situation where you would want it to work that way - it's something you'd have to work around on the web rather than something you'd seek to emulate.\nAlso, one of the reasons we want stuff to work the same as on the web is so that we can make a web-based polyfill for React Native. But since the fix here is probably just adding or subtracting a known value from the frame width, there's no reason we couldn't make the web work the same way if we wanted to, so I don't think that's a valid reason not to fix this problem.\n. This was actually merged yesterday. Should be included in the next update. Sorry for the wait!\n. Maybe we should just hard-code the values in this case. They've never changed since the date picker was first introduced AFAIK, and if they ever do we can add some OS-based branching.\n. We've talked about adding a lazy initialization feature for bridge modules, but that wouldn't help here really - constants have to be fetched at init time so they're available immediately without needing a round trip.\n. @philikon iOS supports displaying a sub-region of an image at the view level without having to actually chop up the image. It would be more efficient to do it that way for most purposes, although that would limit the use of the cropped image to being displayed inside an  tag.\n. Incidentally, I've been working on expanding the implementation of [RCTConvert data:] to make it easier to construct multipart mime uploads. I was thinking that instead of just string data, it could support a structure something like this:\n[\n    {text: 'Hello World'},\n    {base64: 'asdasdsdadawdda'}\n    {text: 'Some More text'},\n    {uri: 'file://someLocalFileData'},\n    {uri: 'assets-library:someImageTag'}\n]\nSo then you could construct an entire request body on the JS side, either passing the data yourself or referencing data known to the native side by using tags/uris. This might be a more flexible solution than what you're planning with the separate dataURI.\nThe only problem is that it might be tricky to make the NSData blob construction asynchronous, due to the design of RCTConvert, in which case those uris might be less generally useful than they would be in your design (although most of the uris you'd want to access would be local, and the construction would happen on a background thread anyway, so it might not be too bad).\n. The other thing I wanted to do was basically unify the concept of a source (in the sense of <Image source={...}/>) and a query (in the sense of RCTDataManager) into something with a structure like:\n{\n    uri: someURL,\n    method: GET/POST/etc (optional, defaults to GET)\n    body: someData (optional, of the form described above),\n    headers: someHTTPHeaders (optional)\n}\nThis would then be processed into an NSURLRequest, which could then be used to retrieve any sort of data in any situation, whether it's loading an image, making an XHR request, setting a WebView target, etc.\nThe source dictionary could also include whatever other data you wanted which would be handled by the receiver, so for image sources it might have width/height and cropping information, for RCTDataManager it might include a queryType, etc.\n. Phil has added a nice upload example to the XHRExample in UIExplorer. It should be included in the next update, but here's the code if you want to paste it into XHRExample.js yourself.\n```\n/\n * The examples provided by Facebook are for non-commercial testing and\n * evaluation purposes only.\n \n * Facebook reserves all rights not expressly granted.\n \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL\n * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n * @flow\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AlertIOS,\n  CameraRoll,\n  Image,\n  LinkingIOS,\n  PixelRatio,\n  ProgressViewIOS,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} = React;\nclass Downloader extends React.Component {\nxhr: XMLHttpRequest;\n  cancelled: boolean;\nconstructor(props) {\n    super(props);\n    this.cancelled = false;\n    this.state = {\n      downloading: false,\n      contentSize: 1,\n      downloaded: 0,\n    };\n  }\ndownload() {\n    this.xhr && this.xhr.abort();\nvar xhr = this.xhr || new XMLHttpRequest();\nxhr.onreadystatechange = () => {\n  if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n    var contentSize = parseInt(xhr.getResponseHeader('Content-Length'), 10);\n    this.setState({\n      contentSize: contentSize,\n      downloaded: 0,\n    });\n  } else if (xhr.readyState === xhr.LOADING) {\n    this.setState({\n      downloaded: xhr.responseText.length,\n    });\n  } else if (xhr.readyState === xhr.DONE) {\n    this.setState({\n      downloading: false,\n    });\n    if (this.cancelled) {\n      this.cancelled = false;\n      return;\n    }\n    if (xhr.status === 200) {\n      alert('Download complete!');\n    } else if (xhr.status !== 0) {\n      alert('Error: Server returned HTTP status of ' + xhr.status + ' ' + xhr.responseText);\n    } else {\n      alert('Error: ' + xhr.responseText);\n    }\n  }\n};\nxhr.open('GET', 'http://www.gutenberg.org/cache/epub/100/pg100.txt');\nxhr.send();\nthis.xhr = xhr;\n\nthis.setState({downloading: true});\n\n}\ncomponentWillUnmount() {\n    this.cancelled = true;\n    this.xhr && this.xhr.abort();\n  }\nrender() {\n    var button = this.state.downloading ? (\n      \n\nDownloading...\n\n\n    ) : (\n      \n\nDownload 5MB Text File\n\n\n    );\nreturn (\n  <View>\n    {button}\n    <ProgressViewIOS progress={(this.state.downloaded / this.state.contentSize)}/>\n  </View>\n);\n\n}\n}\nvar PAGE_SIZE = 20;\nclass FormUploader extends React.Component {\n_isMounted: boolean;\n  _fetchRandomPhoto: () => void;\n  _addTextParam: () => void;\n  _upload: () => void;\nconstructor(props) {\n    super(props);\n    this.state = {\n      isUploading: false,\n      randomPhoto: null,\n      textParams: [],\n    };\n    this._isMounted = true;\n    this._fetchRandomPhoto = this._fetchRandomPhoto.bind(this);\n    this._addTextParam = this._addTextParam.bind(this);\n    this._upload = this._upload.bind(this);\nthis._fetchRandomPhoto();\n\n}\n_fetchRandomPhoto() {\n    CameraRoll.getPhotos(\n      {first: PAGE_SIZE},\n      (data) => {\n        console.log('isMounted', this._isMounted);\n        if (!this._isMounted) {\n          return;\n        }\n        var edges = data.edges;\n        var edge = edges[Math.floor(Math.random() * edges.length)];\n        var randomPhoto = edge && edge.node && edge.node.image;\n        if (randomPhoto) {\n          this.setState({randomPhoto});\n        }\n      },\n      (error) => undefined\n    );\n  }\n_addTextParam() {\n    var textParams = this.state.textParams;\n    textParams.push({name: '', value: ''});\n    this.setState({textParams});\n  }\ncomponentWillUnmount() {\n    this._isMounted = false;\n  }\n_onTextParamNameChange(index, text) {\n    var textParams = this.state.textParams;\n    textParams[index].name = text;\n    this.setState({textParams});\n  }\n_onTextParamValueChange(index, text) {\n    var textParams = this.state.textParams;\n    textParams[index].value = text;\n    this.setState({textParams});\n  }\n_upload() {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'http://posttestserver.com/post.php');\n    xhr.onload = () => {\n      this.setState({isUploading: false});\n      if (xhr.status !== 200) {\n        AlertIOS.alert(\n          'Upload failed',\n          'Expected HTTP 200 OK response, got ' + xhr.status\n        );\n        return;\n      }\n      if (!xhr.responseText) {\n        AlertIOS.alert(\n          'Upload failed',\n          'No response payload.'\n        );\n        return;\n      }\n      var index = xhr.responseText.indexOf('http://www.posttestserver.com/');\n      if (index === -1) {\n        AlertIOS.alert(\n          'Upload failed',\n          'Invalid response payload.'\n        );\n        return;\n      }\n      var url = xhr.responseText.slice(index).split('\\n')[0];\n      LinkingIOS.openURL(url);\n    };\n    var formdata = new FormData();\n    if (this.state.randomPhoto) {\n      formdata.append('image', {...this.state.randomPhoto, name: 'image.jpg'});\n    }\n    this.state.textParams.forEach(\n      (param) => formdata.append(param.name, param.value)\n    );\n    xhr.send(formdata);\n    this.setState({isUploading: true});\n  }\nrender() {\n    var image = null;\n    if (this.state.randomPhoto) {\n      image = (\n        \n      );\n    }\n    var textItems = this.state.textParams.map((item, index) => (\n      \n\n=\n\n\n    ));\n    var uploadButtonLabel = this.state.isUploading ? 'Uploading...' : 'Upload';\n    var uploadButton = (\n      \n{uploadButtonLabel}\n\n    );\n    if (!this.state.isUploading) {\n      uploadButton = (\n        \n          {uploadButton}\n        \n      );\n    }\n    return (\n      \n\n\n            Random photo from your library\n            (\n              update\n            )\n          \n          {image}\n        \n        {textItems}\n        \n\n            Add a text param\n          \n\n\n          {uploadButton}\n        \n\n    );\n  }\n}\nexports.framework = 'React';\nexports.title = 'XMLHttpRequest';\nexports.description = 'XMLHttpRequest';\nexports.examples = [{\n  title: 'File Download',\n  render() {\n    return ;\n  }\n}, {\n  title: 'multipart/form-data Upload',\n  render() {\n    return ;\n  }\n}];\nvar styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 8,\n  },\n  paramRow: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    alignItems: 'center',\n    borderBottomWidth: 1 / PixelRatio.get(),\n    borderBottomColor: 'grey',\n  },\n  photoLabel: {\n    flex: 1,\n  },\n  randomPhoto: {\n    width: 50,\n    height: 50,\n  },\n  textButton: {\n    color: 'blue',\n  },\n  addTextParamButton: {\n    marginTop: 8,\n  },\n  textInput: {\n    flex: 1,\n    borderRadius: 3,\n    borderColor: 'grey',\n    borderWidth: 1,\n    height: 30,\n    paddingLeft: 8,\n  },\n  equalSign: {\n    paddingHorizontal: 4,\n  },\n  uploadButton: {\n    marginTop: 16,\n  },\n  uploadButtonBox: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    backgroundColor: 'blue',\n    borderRadius: 4,\n  },\n  uploadButtonLabel: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n```\n. Here's our internal POP module implementation. This will probably never be released as it will be made obsolete by the official animation API that @vjeux is working on, but if you're using it anyway, you may as well use something that works:\nRKPOPAnimationManager.h\n``` objc\n// Copyright 2004-present Facebook. All Rights Reserved.\nimport \"RCTBridgeModule.h\"\nimport \"RCTInvalidating.h\"\nimport \n@interface RKPOPAnimationManager : NSObject \n@end\n```\nRKPOPAnimationManager.m\n``` objc\n// Copyright 2004-present Facebook. All Rights Reserved.\nimport \"RKPOPAnimationManager.h\"\nimport \"RCTAssert.h\"\nimport \"RCTBridge.h\"\nimport \"RCTConvert.h\"\nimport \"RCTLog.h\"\nimport \"RCTSparseArray.h\"\nimport \"RCTUIManager.h\"\nimport \ntypedef NS_ENUM(NSInteger, RKPOPAnimationType) {\n  RKPOPAnimationTypeSpring = 0,\n  RKPOPAnimationTypeDecay,\n  RKPOPAnimationTypeLinear,\n  RKPOPAnimationTypeEaseIn,\n  RKPOPAnimationTypeEaseOut,\n  RKPOPAnimationTypeEaseInEaseOut,\n};\n/\n * Properties for all animations that can be specified in JavaScript via\n * RKPOPAnimationManager.createAnimation().  These generally map directly\n * to POPAnimation properties.\n /\nstatic const struct {\n  __unsafe_unretained NSString property;\n  __unsafe_unretained NSString velocity;\n  __unsafe_unretained NSString fromValue;\n  __unsafe_unretained NSString toValue;\n  __unsafe_unretained NSString springBounciness;\n  __unsafe_unretained NSString dynamicsTension;\n  __unsafe_unretained NSString dynamicsFriction;\n  __unsafe_unretained NSString dynamicsMass;\n  __unsafe_unretained NSString deceleration;\n  __unsafe_unretained NSString *duration;\n} RKPOPAnimationManagerProperties = {\n  // Not all of these properties apply to all animation types\n  .property = @\"property\",\n  .velocity = @\"velocity\",\n  .fromValue = @\"fromValue\",\n  .toValue = @\"toValue\",\n  .springBounciness = @\"springBounciness\",\n  .dynamicsTension = @\"dynamicsTension\",\n  .dynamicsFriction = @\"dynamicsFriction\",\n  .dynamicsMass = @\"dynamicsMass\",\n  .deceleration = @\"deceleration\",\n  .duration = @\"duration\",\n};\n@implementation RKPOPAnimationManager\n{\n  RCTSparseArray *_animationRegistry;\n}\n@synthesize bridge = _bridge;\nRCT_EXPORT_MODULE()\n\n\n(instancetype)init\n{\n  if ((self = [super init])) {\n    _animationRegistry = [[RCTSparseArray alloc] init];\n  }\n  return self;\n}\n\n\n(dispatch_queue_t)methodQueue\n{\n  return _bridge.uiManager.methodQueue;\n}\n\n\n(NSDictionary *)constantsToExport\n{\n  return @{\n    @\"Types\": @{\n      @\"spring\": @(RKPOPAnimationTypeSpring),\n      @\"decay\": @(RKPOPAnimationTypeDecay),\n      @\"linear\": @(RKPOPAnimationTypeLinear),\n      @\"easeIn\": @(RKPOPAnimationTypeEaseIn),\n      @\"easeOut\": @(RKPOPAnimationTypeEaseOut),\n      @\"easeInEaseOut\": @(RKPOPAnimationTypeEaseInEaseOut)\n    },\n    @\"Properties\": @{\n      @\"bounds\": kPOPLayerBounds,\n      @\"position\": kPOPLayerPosition,\n      @\"positionX\": kPOPLayerPositionX,\n      @\"positionY\": kPOPLayerPositionY,\n      @\"opacity\": kPOPLayerOpacity,\n      @\"scaleX\": kPOPLayerScaleX,\n      @\"scaleY\": kPOPLayerScaleY,\n      @\"scaleXY\": kPOPLayerScaleXY,\n      @\"subscaleXY\": kPOPLayerSubscaleXY,\n      @\"translationX\": kPOPLayerTranslationX,\n      @\"translationY\": kPOPLayerTranslationY,\n      @\"translationZ\": kPOPLayerTranslationZ,\n      @\"translationXY\": kPOPLayerTranslationXY,\n      @\"subtranslationX\": kPOPLayerSubtranslationX,\n      @\"subtranslationY\": kPOPLayerSubtranslationY,\n      @\"subtranslationZ\": kPOPLayerSubtranslationZ,\n      @\"subtranslationXY\": kPOPLayerSubtranslationXY,\n      @\"zPosition\": kPOPLayerZPosition,\n      @\"size\": kPOPLayerSize,\n      @\"rotation\": kPOPLayerRotation,\n      @\"rotationX\": kPOPLayerRotationX,\n      @\"rotationY\": kPOPLayerRotationY,\n      @\"shadowColor\": kPOPLayerShadowColor,\n      @\"shadowOffset\": kPOPLayerShadowOffset,\n      @\"shadowOpacity\": kPOPLayerShadowOpacity,\n      @\"shadowRadius\": kPOPLayerShadowRadius\n    }\n  };\n}\n\n\n(void)dealloc\n{\n  RCTAssert(!self.valid, @\"must call -invalidate before -dealloc\");\n}\n\n\n(BOOL)isValid\n{\n  return _animationRegistry != nil;\n}\n\n\n(void)invalidate\n{\n  _animationRegistry = nil;\n  _bridge = nil;\n}\n\n\nRCT_EXPORT_METHOD(createAnimationInternal:(NSNumber )animationTag\n                  type:(NSInteger)type\n                  props:(NSDictionary )props)\n{\n  RCTAssert(props != nil, @\"props should exist\");\n  [_bridge.uiManager addUIBlock:^(RCTUIManager uiManager, RCTSparseArray viewRegistry) {\nNSString *propertyName = [props objectForKey:RKPOPAnimationManagerProperties.property];\nif (!propertyName) {\n  RCTLogError(@\"Animation has no property to animate: %@\", props);\n}\nPOPAnimatableProperty *property = [POPAnimatableProperty propertyWithName:propertyName];\n\nstatic NSDictionary *animationsByType;\nstatic dispatch_once_t onceToken;\ndispatch_once(&onceToken, ^{\n  animationsByType = @{\n    @(RKPOPAnimationTypeSpring): ^{return [POPSpringAnimation animation];},\n    @(RKPOPAnimationTypeDecay): ^{return [POPDecayAnimation animation];},\n    @(RKPOPAnimationTypeLinear): ^{return [POPBasicAnimation linearAnimation];},\n    @(RKPOPAnimationTypeEaseIn): ^{return [POPBasicAnimation easeInAnimation];},\n    @(RKPOPAnimationTypeEaseOut): ^{return [POPBasicAnimation easeOutAnimation];},\n    @(RKPOPAnimationTypeEaseInEaseOut): ^{return [POPBasicAnimation easeInEaseOutAnimation];},\n  };\n});\n\nPOPPropertyAnimation *(^animationBlock)() = animationsByType[@(type)];\nif (!animationBlock) {\n  RCTLogError(@\"Unknown animation type: %zd\", type);\n  animationBlock = ^{return [POPBasicAnimation easeInEaseOutAnimation];};\n}\n\nPOPPropertyAnimation *animation = animationBlock();\nanimation.property = property;\n\n[props enumerateKeysAndObjectsUsingBlock:^(NSString *key, id jsonValue, BOOL *stop) {\n  // Specially handled these keys above.\n  if ([key isEqualToString:RKPOPAnimationManagerProperties.property] || [key isEqualToString:@\"type\"]) {\n    return;\n  }\n\n  if ([RKPOPAnimationManager _propertyKeyIsPOPAnimationKey:key]) {\n    id animationValue;\n    if ([jsonValue isKindOfClass:[NSNumber class]]) {\n      //\n      // JSON number -> NSNumber\n      //\n      animationValue = jsonValue;\n\n      // Make sure it's actually an NSNumber(float) or NSNumber(double); POPAnimation fails on NSNumber(int).\n      animationValue = @([animationValue doubleValue]);\n    } else if ([jsonValue isKindOfClass:[NSArray class]]) {\n      NSArray *jsonArray = (NSArray *)jsonValue;\n      if (jsonArray.count == 2) {\n        //\n        // JSON array -> NSValue(CGPoint)\n        //\n        CGPoint point = [RCTConvert CGPoint:jsonArray];\n        animationValue = [NSValue valueWithCGPoint:point];\n      } else if (jsonArray.count == 4) {\n        //\n        // JSON array -> NSValue(CGRect)\n        //\n        CGRect rect = [RCTConvert CGRect:jsonArray];\n        animationValue = [NSValue valueWithCGRect:rect];\n      } else {\n        RCTLogError(@\"Only two-dimensional (point) values supported for %@ of property: %@\", key, propertyName);\n        return;\n      }\n\n    }\n\n    // Various POPAnimation methods, such as -setToValue:, throw if the value is of a type not supported for the animated property (for example, if the animated property is 'scaleXY', the toValue should be a CGPoint, never an NSNumber or some other type).  Catch and log errors instead of crashing.\n    @try {\n      [animation setValue:animationValue forKey:key];\n    } @catch (NSException *exception) {\n      RCTLogError(@\"Error setting animation property \\\"%@\\\" to %@: %@\", key, animationValue, exception);\n    }\n  } else {\n    RCTLogError(@\"Unknown animation property: %@\", key);\n  }\n}];\n\n_animationRegistry[animationTag] = animation;\n\n}];\n}\nRCT_EXPORT_METHOD(addAnimation:(NSNumber )viewTag\n                  withTag:(NSNumber )animationTag\n                  completion:(RCTResponseSenderBlock)callback)\n{\n  if (!animationTag || !viewTag) {\n    RCTLogError(@\"addAnimation requires both animationTag and viewTag, received (#%@, #%@)\", animationTag, viewTag);\n    return;\n  }\n[_bridge.uiManager addUIBlock:^(RCTUIManager uiManager, RCTSparseArray viewRegistry) {\n    UIView view = viewRegistry[viewTag];\n    POPAnimation animation = _animationRegistry[animationTag];\n    if (!view) {\n      RCTLogError(@\"addAnimation cannot find view with tag #%@, attempting to add animation:\\n%@\", viewTag, animation);\n      return;\n    }\nif (!animation) {\n  RCTLogError(@\"addAnimation cannot find animation with tag #%@, attempting to animate view %@ with tag #%@\", animationTag, view, viewTag);\n}\n\nif (callback) {\n  animation.completionBlock = ^(POPAnimation *anim, BOOL finished) {\n    callback(@[@(finished)]);\n  };\n}\n\nCALayer *layer = view.layer;\n[layer pop_addAnimation:animation forKey:[animationTag stringValue]];\n\n}];\n}\nRCT_EXPORT_METHOD(removeAnimation:(NSNumber )viewTag\n                  withTag:(NSNumber )animationTag)\n{\n  if (!animationTag || !viewTag) {\n    RCTLogError(@\"removeAnimation requires both animationTag and viewTag, received (%zd, %zd)\", animationTag, viewTag);\n    return;\n  }\n[_bridge.uiManager addUIBlock:^(RCTUIManager uiManager, RCTSparseArray viewRegistry) {\n    UIView view = viewRegistry[viewTag];\n    // Simply getting the animation to verify that it exists.\n    POPAnimation animation = _animationRegistry[animationTag];\n    if (!view) {\n      RCTLogError(@\"removeAnimation cannot find view with tag #%@, attempting to remove animation:\\n%@\", viewTag, animation);\n      return;\n    }\n    if (!animation) {\n      RCTLogError(@\"removeAnimation cannot find animation with tag #%@, attempting to remove from view %@ with tag #%@\", animationTag, view, viewTag);\n    }\nCALayer *layer = view.layer;\n[layer pop_removeAnimationForKey:[animationTag stringValue]];\n\n}];\n}\n\n(BOOL)_propertyKeyIsPOPAnimationKey:(NSString )propertyKey\n{\n  // These are RKAnimationProperties which correspond exactly to CGFloat or NSValue(CGPoint) properties of POPAnimation.  Specifying one of these in the animation properties means that it'll be set directly on the underlying POPAnimation.  This is for convenience so that -createAndRegisterAnimationWithTag:type:props: can parse various similar properties in the same way.\n  static NSSet POPAnimationPropertyKeys = nil;\n  static dispatch_once_t onceToken;\n  dispatch_once(&onceToken, ^{\n    __unsafe_unretained NSString objects = (__unsafe_unretained NSString )(void )&RKPOPAnimationManagerProperties\n    POPAnimationPropertyKeys = [NSSet setWithObjects:objects count:sizeof(RKPOPAnimationManagerProperties) / sizeof(objects)];\n  });\n  return [POPAnimationPropertyKeys containsObject:propertyKey];\n}\n\n@end\n```\n. My view is essentially the same as @sahrens's - the right solution is to implement inputAccessoryView, but that's more difficult, and this might be a reasonable stopgap solution until we can do that.\n. @a2 both?\n. If I understand correctly, @vjeux's animation system will make the existing LayoutAnimation API obsolete, so if the whole system is a temporary workaround anyway, I don't see any harm in adding some additional workarounds to it.\n. I have some ideas for how inputAccessoryView can be implemented. If somebody has some time to look at building it, I'm happy to discuss solutions.\n. What's the use case for nested root views?\n. (Not that I need to know that in order to approve the PR - which seems reasonable to me).\n. We could use the property propagation mechanism (or maybe even something simpler) to disable the scrollsToTop property for scrollviews that are nested inside another.\nOr does the issue still occur even if the scrollviews aren't nested? In which case maybe we could to have a global static variable for \"currentScrollsToTopView\" like we do for firstResponder, and enforce that only one scrollview can have it set at a time.\nOr maybe the simplest solution is just to change the default to false.\n. There's a (separate) fix for this issue too. Use the new loadingView property of RCTRootView, and set it to a full-screen UIImageView showing your launch image. The code might look something like this:\nUIImageView *launchView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@\"MyLaunchImage\"];\nrootView.loadingView = launchView;\nI've been experimenting with a way to automatically detect the launch image and make this completely automatic, but it's not really ready yet. If you're interested, it looks like this:\n```\n// TODO: support landscape orientation\n// Get launch image\nNSString *launchImageName = nil;\nif (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone) {\n  CGFloat height = MAX(RCTScreenSize().width, RCTScreenSize().height);\n  if (height == 480) launchImageName = @\"LaunchImage-700@2x.png\"; // iPhone 4/4s\n  else if (height == 568) launchImageName = @\"LaunchImage-700-568h@2x.png\"; // iPhone 5/5s\n  else if (height == 667) launchImageName = @\"LaunchImage-800-667h@2x.png\"; // iPhone 6\n  else if (height == 736) launchImageName = @\"LaunchImage-800-Portrait-736h@3x.png\"; // iPhone 6+\n} else if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad) {\n  CGFloat scale = RCTScreenScale();\n  if (scale == 1) launchImageName = @\"LaunchImage-700-Portrait~ipad.png\"; // iPad\n  else if (scale == 2) launchImageName = @\"LaunchImage-700-Portrait@2x~ipad.png\"; // Retina iPad\n}\n// Create loading view\nUIImage image = [UIImage imageNamed:launchImageName];\nif (image) {\n  UIImageView imageView = [[UIImageView alloc] initWithFrame:(CGRect){CGPointZero, RCTScreenSize()}];\n  imageView.contentMode = UIViewContentModeBottom;\n  imageView.image = image;\n  rootView.loadingView = imageView;\n}\n```\n. @alinz, I believe @ide means to use your launchscreen xib to set the RCTRootView loadingView (which you'll still need to do manually). There is no automatic support for doing that (yet).\n. To clarify, iOS hides your launch screen at the point when React begins loading. To avoid seeing a blank screen, you'll need to extend the time that the launch screen is displayed by manually showing the same view as the RCTRootView's loadingView.\n. @dvine-multimedia does that work better than the code snippet I provided above?\n. Is the flash appearing after the launch image is hidden, or does the launch image fail to appear? (This may be hard to determine just by looking - change the launch image to something like a solid red rectangle temporarily to be sure).\n. The purpose of the loadingFadeDelay is precisely to cover the scenario where your app doesn't render anything up immediately, so you're using it correctly.\nYou might want to consider setting the loadingViewFadeDelay explicitly though, in case the default ever changes - and make sure you test on the slowest device you support, in case it takes longer to load.\n. If the startup time depends on network then tes, I'd definitely advocate drawing an \"empty\" view immediately instead of hoping it downloads faster than fade delay.\n. This was a consequence of the text multithreading crash fix. I landed a fix for this yesterday, but it must have just missed the branch cut.\n. Is this only happening for you when the screen is rotated / RCTRootView is resized?\nIf so, I have a fix.\nIf not, can you provide steps to reproduce?\n. Possibly. I landed a fix for the rotation issue anyway. Once it hits Github, let me know if it's fixed.\nIf not, a sample app to repro the issue would be super-helpful.\n. You can use a base64 data URL containing the entire JS file as a string. Is that a viable solution for you?\n. Fair enough. It should be fairly simple to add an alternative constructor to RCTBridge that accepts a script string. If you want to make a PR for it, I'm happy to review.\n. @ide yes, this is expected behavior - it's an optimisation to reduce blending. Try setting the background color of the <Image> explictly to transparent and it shouldn't do this (if it still does then it's a bug).\nEDIT: didn't read the whole thread. Yes it sounds like this is working correctly. @vjeux maybe it's time to post that piece about blending?\n. OK, so I have a solution for this. I'm thinking that for top-level <Text> nodes, the background color should apply to the whole view, and for nested <Text> nodes it should apply only to the span. This avoids the need for the extra containerBackgroundColor style, and makes the color propagation consistent with other views.\nSo this would yield a completely red view:\n<Text style={{backgroundColor: 'red'}}>foo</Text>\nAnd if you only wanted the span to be red, not the whole  node, you could do this:\n<Text>\n  <Text style={{backgroundColor: 'red'}}>foo</Text>\n</Text>\nThoughts? @vjeux, @sahrens?\n. An alternative solution (which is possibly the same or similar to what @ide is suggesting) would be to disable the ability to explicitly set the containerBackgroundColor, and have backgroundColor only affect the span.\nIn that scenario, we'd still inherit the container background from the parent, but if you set the span background to something translucent, it would disable inheritance.\nThe only problem I have with that is that if you wanted to have an opaque span background, but a transparent container background, you'd have to embed your <Text> inside a <View> with an explicit transparent background, and I think that having that requirement only apply for opaque span backgrounds and not translucent ones is more confusing than the solution I suggested, where the behavior would aways be consistent.\n. The fix for this was included in Tuesday's update, so if you upgrade to the latest release it should now be working correctly.\nhttps://github.com/ericvicenti/react-native/commit/49e87af934b8060858a8b0e3e1b03b690470b1e8\n. This isn't exactly a bug, more like a policy decision we haven't made yet. The question is - should we expose border drawing on every component, or just on <View>, and require that you use composition  (or even remove it from <View> and add a new component called <BorderView>).\nHappy to hear your thoughts on the matter.\n. Yes, sorry, I updated the example but forgot to include it in the release notes.\n. @facebook-github-bot import\n. We aim to follow the CSS spec as closely as possible with the border styles, even if the spec is weird. If it's behaving differently from a spec-compliant browser like Chrome then it may be a bug, otherwise it's as intended.\n. Thanks, I'll take a look.\n. Hmm, well this is better than my solution, which was to have every unsupported initializer call the designated init with nil params, and then param assert that they mustn't be nil.\nI'm surprised that it's no longer necessary to return self from init though - that's awesome! Is there a document about this change somewhere?\n. Btw, you can print [self class] directly using %@ - no need to use class_getName.\nDid you try using [self doesNotRecognizeSelector:_cmd]? - I believe that's a common pattern for unsupported method implementations.\n. Oh I see, you don't need to return because of the @throw, and you don't need the if self because of the ASSUME_NON_NULL. Makes sense.\n. @vjeux, I noticed that we're using different default styles for PickerIOS and DatePickerIOS width/height, but I'm not really sure what these should be. In both cases, the height is fixed and can't be changed, and the width has a default value, but should ideally be flexible.\nAny thoughts?\n. @paramaggarwal  The system font has changed to San Francisco in iOS 9.\n@ide I'm thinking we should add a virtual font name called \"System\" that defaults to whatever the current system font is. Does that work for you?\nI'll consider making this the default instead of Helvetica, but this may break existing apps.\n. @ide that's why I'm proposing we have a virtual \"System\" font name/family to specify that you want to use the system defaults for all these attributes.\n. @ide exactly.\n. \ud83d\udc4d\n. Hmm. It should default to UTF-8 if not specified.\nCan you tell me the URL that you're trying to download?\n. @facebook-github-bot import\n. This is no longer needed, as RCT_IMPORT_METHOD is going away. But thanks :-)\n. @facebook-github-bot import\n. [UIViewController addKeyCommand:] doesn't seem to help us, unfortunately, but I've devised a new, even more diabolical hack. Should be ready to ship soon.\n. @facebook-github-bot import\n. I think we need to solve this universally, not just in TextView, as per discussion in https://github.com/facebook/react-native/issues/1611\n. This is only a partial solution, as generating the system font from the family name won't include the other attributes @ide mentioned.\nFor the tests, we'll need to have different snapshots per OS version (which was already the case, as Apple always tend to make minor changes to font and UI rendering between OS versions). For now we can probably just mandate that the tests should be run on 8.x.\nFor apps, the expectation is that anything using system font will look different on new iOS releases, so I think that's OK. If people really want to keep using Helvetica (and make their app look dated on iOS9), they can specify the font explicitly.\n. The lack of dynamic weight change support was why I used the (rather hacky) solution of enumerating fonts to find the closest match with the requires attributes.\nBut we can't really ship an update that breaks fontWeight support for the system font. There must be a better solution.\n. There isn't currently an API to check this, but I agree it would make sense. I'll file a task to add one.\n. @amasad, any thoughts? \n. Hmm. I can't reproduce this. CMD + R works as expected for me on Xcode 6.3.1. It currently does nothing on Xcode 7 beta, but that's a known issue.\nSHIFT + CMD + Z not working is probably because the keyboard shortcut is actually CTRL + CMD + Z ;-)\n. Either should work, but in the case of text, this wasn't working as expected. I've fixed it, but haven't been able to land the fix for a few days due to Travis issues.\n. @frantic go for it - I've been wrestling Travis all week trying to land it :-)\n. Sorry about that - I forgot to add NSObject as a supported RCTConvert type.\nIt's generally better to be specific about the type, so use NSArray, NSDictionary, or whatever the actual type is. But if you aren't sure, or it's a mixed type (i.e. could be several different types) then use id, like this:\nRCT_EXTERN_METHOD(emit:(NSString*)event items:(id)items)\n. RCT prefix should only be used for first-party modules, we shouldn't encourage others to use it as it will create namespace conflicts.\n. What's is the first @ in @%@ for?\n. The custom name in RCT_EXPORT(addEvent) should not have quotes.\n. also, double, CGFloat, etc.\n. For type checking, we use RCTConvert, which automatically handles type conversion and redboxing if invalid, so this would be:\n- (void)addEventWithName:(NSString *)name details:(NSDictionary *)details\n{\n    RCT_EXPORT(addEvent);\n    details = [RCTConvert NSDictionary:details]; // ensure details is a dictionary (possibly overkill?)\n    NSString *location = [RCTConvert NSString:details[@\"location\"]]; // ensure location is a string\n    ...\n}\n. @pjjanak The syntax @(someFloatValue) is a shorthand in Objective-C for [NSNumber numberWithFloat:someFloatValue].\n. Is the problem that RubyMotion doesn't let you specify that a class implement a particular Objective-C protocol? \n. Is this change purely stylistic?\n. Is this change purely stylistic?\n. This should be NSInteger, which is what the method actually returns . Not sure why we'd cast to an int (I appreciate that this was pre-existing, and not something you changed).\n. This should be NSInteger, which is what the method actually returns . Not sure why we'd cast to an int (I appreciate that this was pre-existing, and not something you changed).\n. Can you add this to the RCTText lib instead of the main React lib? Otherwise it will clash with our private FBTextView implementation.\n. Can you add this to the RCTText lib instead of the main React lib? Otherwise it will clash with our private FBTextView implementation.\n. (I know that's rather inconsistent with the RCTTextField - we should move that too, but I'll do that in a separate diff.)\n. (I know that's rather inconsistent with the RCTTextField - we should move that too, but I'll do that in a separate diff.)\n. Missing RCT_EXPORT_VIEW_PROPERTY(placeholderTextColor, UIColor)\n. Missing RCT_EXPORT_VIEW_PROPERTY(placeholderTextColor, UIColor)\n. It should disappear, but it doesn't really matter if it's set to nil or an empty string. Whatever's easiest to implement.\n. It should disappear, but it doesn't really matter if it's set to nil or an empty string. Whatever's easiest to implement.\n. To be clear, that's what should happen - I believe in the current implementation it would continue to show the previous placeholder value, which is incorrect.\n. To be clear, that's what should happen - I believe in the current implementation it would continue to show the previous placeholder value, which is incorrect.\n. Remove this?\n. Remove this?\n. You can just write  tintColor=\"black\" if value is a string.\n. You can just write  tintColor=\"black\" if value is a string.\n. This method was only added in iOS 8.2, it will crash on iOS 8.1 and earlier (we need to support 7+)\n. This method was only added in iOS 8.2, it will crash on iOS 8.1 and earlier (we need to support 7+)\n. Could you change this to \"titleFontFamily\"?\n. Could you change this to \"titleFontFamily\"?\n. I would be surprised if that were true, but if so then I agree fontFamily would make sense for the name.\n. I would be surprised if that were true, but if so then I agree fontFamily would make sense for the name.\n. Please use RCT prefix for constants, and don't prefix with k.\nAlso, I'm not sure what the point of having these constants is, vs sending the actual ascii values of those keys?\n. Please use RCT prefix for constants, and don't prefix with k.\nAlso, I'm not sure what the point of having these constants is, vs sending the actual ascii values of those keys?\n. According to http://stackoverflow.com/questions/19045484/how-to-know-when-paste-event-triggered-in-uitextview it does work, but you need to set the delegate of the TextView or it won't fire.\nThe delegate is currently set to itself, which may be why it isn't working. @tadeuzagallo has just changed this though because it was causing other issues, so it may work once his fix has landed.\n. According to http://stackoverflow.com/questions/19045484/how-to-know-when-paste-event-triggered-in-uitextview it does work, but you need to set the delegate of the TextView or it won't fire.\nThe delegate is currently set to itself, which may be why it isn't working. @tadeuzagallo has just changed this though because it was causing other issues, so it may work once his fix has landed.\n. Could it be because, at the time it's being called, the view hasn't been added to the window yet, so window is nil and scale is zero?\n. Could it be because, at the time it's being called, the view hasn't been added to the window yet, so window is nil and scale is zero?\n. We've fixed this already internally, but for future reference you can just say:\n- (UIView *)viewWithProps:(__unused NSDictionary *)props\n. These are pointers, they should be strong or possibly weak, but definitely not assign.\n. These are pointers, they should be strong or possibly weak, but definitely not assign.\n. This method is redundant, this setter would be synthesized automatically from the @property.\n. This method is redundant, this setter would be synthesized automatically from the @property.\n. There are a lot of redundant checks in this code, even if the logic is correct. There are no null pointer exceptions in Objective-C, so no need to check if things are nil before accessing their sub-properties.\nI think it can be simplified to:\nif (_navigationItem.backBarButtonItem.title) {\n  // update title if backBarButtonItem already has a title\n  _navigationItem.backBarButtonItem.title = _backButtonTitle;\n} else if (_backButtonTitle) {\n  // re-create backBarButtonItem\n  _navigationItem.backBarButtonItem = nil;\n  [self backButtonItem];\n}\n. There are a lot of redundant checks in this code, even if the logic is correct. There are no null pointer exceptions in Objective-C, so no need to check if things are nil before accessing their sub-properties.\nI think it can be simplified to:\nif (_navigationItem.backBarButtonItem.title) {\n  // update title if backBarButtonItem already has a title\n  _navigationItem.backBarButtonItem.title = _backButtonTitle;\n} else if (_backButtonTitle) {\n  // re-create backBarButtonItem\n  _navigationItem.backBarButtonItem = nil;\n  [self backButtonItem];\n}\n. As above, this is more complex than it needs to be.\n. As above, this is more complex than it needs to be.\n. Again, overcomplicated.\nAlso, there's a lot of copy-paste code here, with the same logic repeated for all three navigation buttons. Can't this be abstracted into a common function?\n. Again, overcomplicated.\nAlso, there's a lot of copy-paste code here, with the same logic repeated for all three navigation buttons. Can't this be abstracted into a common function?\n. This can just be\nif (self.rightButtonTitle.length) {\n. This can just be\nif (self.rightButtonTitle.length) {\n. nit: space between @property and (nonatomic)\n. nit: space between @property and (nonatomic)\n. This is long enough now that we should wrap the props:\nreturn (\n  <RCTMap\n    {...this.props}\n    onPress={this._onPress}\n    onChange={this._onChange}\n    onAnnotationDragChange={this._onAnnotationDragChange}\n  />\n);\n. This is long enough now that we should wrap the props:\nreturn (\n  <RCTMap\n    {...this.props}\n    onPress={this._onPress}\n    onChange={this._onChange}\n    onAnnotationDragChange={this._onAnnotationDragChange}\n  />\n);\n. Actually, is this even used? It doesn't seem like it's being set or read anywhere.\n. Actually, is this even used? It doesn't seem like it's being set or read anywhere.\n. Why is this needed?\n. Why is this needed?\n. Is this state property useful? If it is, we should probably convert it to a more JS-friendly string constant, and define an enum for it in the js module.\n. Is this state property useful? If it is, we should probably convert it to a more JS-friendly string constant, and define an enum for it in the js module.\n. This can just be:\nif (text) {\n  body[@\"text\"] = text;\n}\n. This can just be:\nif (text) {\n  body[@\"text\"] = text;\n}\n. As above\n. As above\n. Files should end with a blank line.\n. Files should end with a blank line.\n. This isn't needed. Property synthesis is automatic in most cases, and Xcode will warn you when it isn't.\n. This isn't needed. Property synthesis is automatic in most cases, and Xcode will warn you when it isn't.\n. The step value is a float, so I'm not sure you should assume that it's a whole number. This logic should probably be:\nfloat value = round(sender.value / sender.step) * sender.step;\n. The step value is a float, so I'm not sure you should assume that it's a whole number. This logic should probably be:\nfloat value = round(sender.value / sender.step) * sender.step;\n. I'm a little surprised that this works. Doesn't it prevent you from dragging the slider, since it would keep snapping back to the previous step?\nIf it does work, that's cool, but I'm a bit concerned that it's relying on an undocumented feature, and may break in a future iOS release.\nWould it possibly be safer to send the stepped value in the event callback, but only actually update the slider value when continuous = false (i.e. when the user has stopped dragging)?\n. I'm a little surprised that this works. Doesn't it prevent you from dragging the slider, since it would keep snapping back to the previous step?\nIf it does work, that's cool, but I'm a bit concerned that it's relying on an undocumented feature, and may break in a future iOS release.\nWould it possibly be safer to send the stepped value in the event callback, but only actually update the slider value when continuous = false (i.e. when the user has stopped dragging)?\n. We should avoid sending events when the value hasn't actually changed. Currently this would send an event each time the slider was dragged, even if the stepped value rounded to the same amount.\n. We should avoid sending events when the value hasn't actually changed. Currently this would send an event each time the slider was dragged, even if the stepped value rounded to the same amount.\n. On second thought, that may not handle minimumValue/maximumValue correctly if they aren't a multiple of the step value. I'm not sure whether you'd ever have that situation, but in any case, I think the correct logic is:\nfloat value = MIN(sender.maximumValue, sender.minimumValue + round((sender.value - sender.minimumValue) / sender.step) * sender.step);\n. On second thought, that may not handle minimumValue/maximumValue correctly if they aren't a multiple of the step value. I'm not sure whether you'd ever have that situation, but in any case, I think the correct logic is:\nfloat value = MIN(sender.maximumValue, sender.minimumValue + round((sender.value - sender.minimumValue) / sender.step) * sender.step);\n. This should be an ImageSource instead of a string. That makes it possible to use the require() syntax for setting the image, and also lets you specify a scale property if you use a base64 url.\n. This should be an ImageSource instead of a string. That makes it possible to use the require() syntax for setting the image, and also lets you specify a scale property if you use a base64 url.\n. Instead of [UIImage imageNamed:] use [RCTConvert UIImage:] instead, which is much more flexible (BUT: if you set the type to UIImage in the RCT_EXPORT_VIEW_PROPERTY, there's no need to manually convert it anyway, as the bridge will do it for you.)\n. Instead of [UIImage imageNamed:] use [RCTConvert UIImage:] instead, which is much more flexible (BUT: if you set the type to UIImage in the RCT_EXPORT_VIEW_PROPERTY, there's no need to manually convert it anyway, as the bridge will do it for you.)\n. Set the type here to UIImage instead of NSString, then it will be converted automatically.\n. Set the type here to UIImage instead of NSString, then it will be converted automatically.\n. Wouldn't it be better to make these separate properties?\n. Wouldn't it be better to make these separate properties?\n. We already have an ImageSource type that includes all this information. There's no need to invent a new format.\n. See comments in https://github.com/facebook/react-native/pull/3850#issuecomment-153230107\n. Resizing images on the main thread like this is generally a bad idea as it can cause frame skips.\n. nit: use subscripting syntax where available, i.e. notification.userInfo[@\"notification\"];\n. nit: use subscripting syntax where available, i.e. notification.userInfo[@\"notification\"];\n. keys[0] or keys.firstObject\n. keys[0] or keys.firstObject\n. _scheduledLocalNotifications[identifier]\n. _scheduledLocalNotifications[identifier]\n. nit: prefer dot syntax for properties, e.g. _scheduledLocalNotifications.allKeys, note.fireDate.timeIntervalSinceReferenceDate, etc.\n. nit: prefer dot syntax for properties, e.g. _scheduledLocalNotifications.allKeys, note.fireDate.timeIntervalSinceReferenceDate, etc.\n. This if statement is very hard to parse. I think it's saying \"if note.fireDate is earlier than now\" - is that correct? If so, I'd write it as:\nif (note.fireDate.timeIntervalSinceNow < 0) {\n. This if statement is very hard to parse. I think it's saying \"if note.fireDate is earlier than now\" - is that correct? If so, I'd write it as:\nif (note.fireDate.timeIntervalSinceNow < 0) {\n. _scheduledLocalNotifications[identifier];\n. _scheduledLocalNotifications[identifier];\n. _scheduledLocalNotifications[identifier] = notification;\n. _scheduledLocalNotifications[identifier] = notification;\n. I think it's more common to use a monotonically increasing numeric value for identifiers like this in JS-world. Since these ids only seem to last for the lifetime of the app running, I don't see any reason why they need to be UUIDs, so an NSNumber would be cheaper.\n. I think it's more common to use a monotonically increasing numeric value for identifiers like this in JS-world. Since these ids only seem to last for the lifetime of the app running, I don't see any reason why they need to be UUIDs, so an NSNumber would be cheaper.\n. This check is not necessary, since it's already enforced by the RCTConvert function.\n. nit: bracket on new line\n. Please use this instead, as it does runtime type checking in dev mode:\nNSArray<NSDictionary *>* locations = [self NSDictionaryArray:json[@\"locations\"]];\n. We already have a converter for this (although note that it expects \"latitude\" and \"longitude\", not \"lat\", \"long\":\nCLLocationCoordinate2D  coordinate = [RCTConvert CLLocationCoordinate2D:location];\n. We already have logic to do hex string -> color conversion on the JS side. Please use that pattern rather than converting natively here, as it also supports named colors, etc.\n. This property should be publicly immutable, like annotationIds. It's generally poor practice to expose mutable collections in the public interface unless you absolutely have to.\n. You'll need to add a getter for this as well to prevent crashes if you pass null for the image:\n- (UIImage *)thumbImage\n{\n  return [self thumbImageForState:UIControlStateNormal];\n}\n. super should be self here, since we're not overriding the method.\n. This should probably check if onRefreshStart is nil and remove the refreshControl if it is.\nAlso, if onRefreshStart is not nil, and _scrollView.refreshControl is already not nil, there's no need to create and assign a new UIRefreshControl.\n. nit: { on new line\n. nit: { on new line\n. nit: use double (( for assignment inside if, i.e.\nif ((self = [super init])) {\n. Can you use NSNotFound instead of -1 as the \"null\" value? It's more idiomatic for Obj-C (and also doesn't rely on the implementation detail that UIBarButtonSystemItem happens to be an NSInteger rather than NSUInteger).\n. If the itemStyle applied to each item is always the same, why not pass it once as a single property of the RCTPicker view instead of duplicating the same data for each item?\n. There's an example in MapView, where we use it for the pin tintColor.\nI wonder if it mightn't be simpler just to include the item styles in the main stylesheet though. If you just put font, textColor, etc. on the main component, it's unambigous that they refer to the labels in the items, and then you can export the properties individually, like we do for RCTText, which handles the color conversion automatically.\n. should be strong, not copy\n. Why get rid of the in-memory cache?\n. It would probably be better to use an NSURL for the storageDirectoryParam, because it includes all the logic for expanding ~/ etc. If not, you should probably at least call stringByExpandingTildeInPath, otherwise there's no good way to specify paths in the docs or library directory.\n. A lot of changes to the logic here - why get rid of the changedManifest bool, etc?\n. We probably need to distinguish between switching storage location and migrating to a new storage location, as these are separate concepts.\n. [RCTConvert UIColor:] already performs a nil check, so this can just be:\nUIColor *tintColor = [RCTConvert UIColor:options[@\"tintColor\"]];\n. [RCTConvert UIColor:] already performs a nil check, so this can just be:\nUIColor *tintColor = [RCTConvert UIColor:options[@\"tintColor\"]];\n. I think this can just be collapsed to \noptions.tintColor = processColor(options.tintColor);\n. I don't think this check is really needed. processColor does its own input validation, and supports types other than string (such as an array of rgba values).\n. Yes.\n. He's right that you shouldn't call processColor() multiple times, but I also don't think there's any benefit to checking its result before assigning it.\nIn the code as you've written it, if options.tintColor is some invalid string that causes processedTintColor to return null or zero, you're actually leaving options.tintColor as the original string instead of overwriting it with transparent, which will then crash the native code that's expecting a number instead of a string.\nIt's perfectly safe to just write\noptions.tintColor = processColor(options.tintColor);\nThat should ensure that whatever garbage value options.tintColor goes in as, it will come out as a sanitised value. If for some reason it doesn't, that should be fixed in processColor.js, not in ActionSheetIOS.js.\n. It's alright, I've fixed in at our end.\n. I think this needs to be\nif (!_pendingRequests) {\n  _pendingRequests = [NSMutableArray new];\n}\nOtherwise you're wiping out all previous requests each time you call getCurrentPosition().\n. I think this needs to be\nif (!_pendingRequests) {\n  _pendingRequests = [NSMutableArray new];\n}\nOtherwise you're wiping out all previous requests each time you call getCurrentPosition().\n. It is the only thing that adds to it, but what if you call getCurrentPosition() again before the first request returns?\n. It is the only thing that adds to it, but what if you call getCurrentPosition() again before the first request returns?\n. space after , before errorCb\nAlso, can we call these \"success, error\"? I don't think we use the \"cb\" abbreviation elsewhere.\n. there should also be space between the ) and  {\n. sames formatting comments as above.\n. The getString implementation could be written concisely as:\ngetString(success, error) {\n   Clipboard.getString(success, error || () => {});\n}\n. If you rebase, this should be fixed already.\n. No commented-out code please.\n. space after comma\n. space between if and (, space around != and between ) and {, i.e.\nif (errorCb != null) {\n. Can you change this to\nif (!(imageURL = [self NSURL:RCTNilIfNull(json[@\"uri\"]]))) {\n. Can you change this to\nif (!(imageURL = [self NSURL:RCTNilIfNull(json[@\"uri\"]]))) {\n. Maybe just\nmodule.exports = React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]);\n. Maybe just\nmodule.exports = React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]);\n. Imports should be in alphabetical order please.\n. Imports should be in alphabetical order please.\n. Can you write this as:\n@\"height\": @([UIApplication sharedApplication].statusBarFrame.size.height),\nOtherwise, looks OK.\n. Sounds like you missed an @ somewhere.\n. This should be ColorPropType (sorry, it probably changed since you wrote this).\n. Incomplete comment\n. Something wrong with the indenting here\n. Misaligned braces\n. This can be written as\nrequest.timeoutInterval = [RCTConvert NSTimeInterval:query[@\"timeout\"]];\n(The NSTimeInterval: converter already does the conversion from ms to seconds)\n. it will be set to zero.\n. Image (on iOS, at least) only supportsa subset of the border styles. It doesn't support individual corner radii or different border colors or widths for each side.\nFor that reason, having the styles specified separately for Image is intentional.\nThis diff adds additional border styles for Image on Android that aren't supported on iOS. I'm not sure what the best way to handle that is.\nMaybe we could just implement these styles for View for now and not Image? I don't think there's a lot of demand for individually specified corners radii on images.\n. NSURLComponents.queryItems is an iOS8+ api, and we need to support iOS7+ (We got burned by this once already :-))\n. These properties are all optional (may be nil). You should probably suffix them all with ?: @\"\", or wrap them in RCTNullIfNil(...) if null would be preferable on the JS side.\n. These errors seem spurious. @vjeux?\n. @bestander do you know how the docs get generated? Can we add support for docblocks inside 'statics', so that it's not necessary to mark everything as a prop?\n. The only call site I'm aware of is here (though there may be others I'm not aware of - possibly outside of the open source directory): https://github.com/facebook/react-native/blob/master/Libraries/ReactIOS/requireNativeComponent.js#L114\n. I think it was already #rrggbbaa - at least, that's how I remember implementing it (which was different from the original tinycolor implementation), so it won't be a breaking change if we keep that order.\nAnd yes, it's frustrating that it's different from the order of the int32 we send to native, but unfortunately Android expects the byte order to be argb, and doesn't do any native-side post-processing (iOS doesn't care, as we convert it to four floats on the native side anyway).\n. We only expose it because of a flaw in our propType validation which means that we use the same validator for the public prop as for the native prop, which means we have no way to expose View.backgroundColor as a string if the underlying RCTView.backgroundColor is an int, unless we rename the native property. This is somewhat clowny, but I've not had time to find a better workaround.\nAllowing end-users to specify colors as hex ints is kinda nice, but it's also a bit fragile because we can't support both rgb and rgba that way, e.g.\n0xff0000\ncould be interpreted as either red or green depending on whether we assume it's an rgb or rgba literal. argb format doesn't have this problem, so I suggest we either keep the int literal support but keep it as argb (which is different from the string format, but does that really matter?), or drop support for it and fix the propType validator.\n. Since you're importing ScrollView.js anyway, you can avoid the repetition here by defining this as:\ndecelerationRate: ScrollView.propTypes.decelerationRate,\n. In the interests of code cleanliness, you can probably just remove the native html and url props completely, and implement support for them on the JS side by using them to build the source object. Something like:\n```\nvar source = this.props.source || {};\nif (this.props.html) {\n  console.warn('html is deprecated. Use source instead.');\n  source.html = this.props.html;\n} else if (this.props.url) {\n  console.warn('url is deprecated. Use source instead.');\n  source.url = this.props.url;\n}\n\n```\n. There's no guarantee that error.userInfo is JSON serializable, so this is a bit dangerous. You can make it safe by doing:\nerrorInfo[@\"userInfo\"] = RCTJSONClean(error.userInfo);\nBut if all you need the userInfo for is to get the message, you probably don't need to do this at all (see my other comment).\n. There's also no guarantee that error.userInfo is not nil, and assigning nil to a dictionary will crash on iOS7 IIRC. So this should probably be:\nerrorInfo[@\"userInfo\"] = RCTNullIfNil(RCTJSONClean(error.userInfo));\n. It would probably be better to identify how/where self.fontSizeMultiplier can end up getting set to zero, and prevent it at that point.\n. Since this pattern comes up a lot, perhaps we can come up with a standard way to mark props as deprecated that includes the component info? I think someone mentioned such a thing already exists in React.js?\n. It should be a module in its own right, so it can be imported from anywhere.\n. Why make this change?\n. Not that I'm aware of.\n. Not that I'm aware of.\n. I'll probably revert it when I merge this. But for future reference, it's better to avoid making unrelated changes in PRs anyway, even if they are uncontroversial, as it makes it harder to review.\nIf we do ever want to move away from using alert(), we can just do it once as a codemod across the whole project.\n. I'll probably revert it when I merge this. But for future reference, it's better to avoid making unrelated changes in PRs anyway, even if they are uncontroversial, as it makes it harder to review.\nIf we do ever want to move away from using alert(), we can just do it once as a codemod across the whole project.\n. Lol\n. Lol\n. While I mostly agree with your decision about keeping this as an \"animated\" prop, We'll need to add another prop to define the transition type for showing/hiding on iOS to avoid loss of functionality. Maybe:\n/*\n * The transition effect when showing and hiding the status bar. Defaults to 'fade'\n * @platform ios\n */\nshowHideTransition: React.PropTypes.oneOf([\n  'fade',\n  'slide',\n]),\n. Why not call this RCTStatusBarManager? then you can avoid the forking in the JS code.\n. Android module name should match iOS, then there's no need for this code fork.\n. I found this example a bit confusing. When a button is labels \"Set animated true\", it's not entirely obvious that the current state is \"false\" and that the button will set it to \"true\" - instead it looks like maybe \"true\" is the current state.\nI'd suggest making this unambiguous by changing the format of the button labels to:\nanimated: true\nstyle: default\netc...\nThat way the label reflects the current state.\n. Maybe rename this to backgroundColor, so that it's clear that it changes the color of the bar itself and not the text/icons?\n. Can this property be inferred from the backgroundColor? If it has an alpha component < 1.0 then it's translucent, otherwise it's inherently opaque.\nOn second thought, I guess \"should draw under the bar\" is still a useful distinction. Even if the bar is transparent, you might still not want to draw content under it.\n. This processColor conversion should be handled in requireNativeComponent.\n. I don't think that works. It makes it sound like \"hidden\" refers to the transition, not the other way around.\n. Can you expose this in RCTTextViewManager.m too please, as TextInput.js wraps them both.\n. Why use animateWithDuration here instead of setContentOffset:animated:YES ?\n. You can just use scrollView.contentOffset = x here since animated = NO by default\n. Nit: this can just be:\nCGPoint offset = {scrollView.contentOffset.x, scrollView.contentOffset.y - self.frame.size.height};\n. Probably no need to use super here, since you aren't overriding isRefreshing. Maybe it's safer though.\n. (I daresay there's a good reason, but please add a comment explaining why if there is)\n. Can we keep the warning for now, but just downgrade it to RCTLogWarn? I'd rather keep it until we're sure of what causes it (there are other cases besides pull to refresh).\nAlso can you add *stop = YES; before the return as well? Just so we don't generate repeat warnings.\n. Can we keep the warning for now, but just downgrade it to RCTLogWarn? I'd rather keep it until we're sure of what causes it (there are other cases besides pull to refresh).\nAlso can you add *stop = YES; before the return as well? Just so we don't generate repeat warnings.\n. I'd be fine with that, but still change it to RCTLogWarn, as we're occasionally seeing this error happening with bridgeDidFinishTransaction in the stack trace, so clearly there is at least one scenario where it arises that doesn't relate to scroll event race conditions.\n. I'd be fine with that, but still change it to RCTLogWarn, as we're occasionally seeing this error happening with bridgeDidFinishTransaction in the stack trace, so clearly there is at least one scenario where it arises that doesn't relate to scroll event race conditions.\n. Is this necessary? I thought that passing functions directly is fine, since React auto-binds this?\ncc: @davidaurelio \n. Is this necessary? I thought that passing functions directly is fine, since React auto-binds this?\ncc: @davidaurelio \n. Same comment as above.\n. Same comment as above.\n. A couple of issues with this:\n1) setValue:forKey: is actually part of the KVC (Key Value Coding) protocol, and should not be used for setting dictionary keys. The method you probably meant was setObject:forKey:, but we prefer to use dict[key] = value syntax anyway. I'd write it as:\nheaders[key] = [value description];\n2) Are you sure it's safe to mutate the headers dictionary while you are enumerating it? That normally crashes with a \"Collection was mutated while being enumerated.\" exception.\n. A couple of issues with this:\n1) setValue:forKey: is actually part of the KVC (Key Value Coding) protocol, and should not be used for setting dictionary keys. The method you probably meant was setObject:forKey:, but we prefer to use dict[key] = value syntax anyway. I'd write it as:\nheaders[key] = [value description];\n2) Are you sure it's safe to mutate the headers dictionary while you are enumerating it? That normally crashes with a \"Collection was mutated while being enumerated.\" exception.\n. Since NSURLRequest already includes headers, is there any reason for the seperate headers parameter? Can't we just include them in the request?\n. if (!_requestedHeaders[@\"origin\"]) {\n. Could just use [obj description] to convert it to a string here. That will do the right thing for numbers, which are the most likey kind of wrong value to get passed in.\n. We can just merge the url and headers into an NSURLRequest at this point, and use the other constructor.\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:URL];\nrequest.allHTTPHeaderFields = headers;\n. Shouldn't this be !== ? @vjeux\n. Shouldn't this be !== ? @vjeux\n. @satya164 completely agree.\n. @satya164 completely agree.\n. BOOL dirty = NO;\n. BOOL dirty = NO;\n. return YES;\n. return YES;\n. return NO;\n. My only concern is this change of behavior. Previously, the default lineBreakMode was NSLineBreakByTruncatingTail or NSLineBreakByClipping, depending on the numberOfLines. Now it's NSLineBreakByWordWrapping.\nI've no idea why the original defaults were chosen, or whether NSLineBreakByWordWrapping is a better choice, but this change has the potential to break all sorts of things. Can we find a way to implement this so that the defaults aren't affected?\nA simple solution would be to add something like this in the Text.js render function (code not actually tested):\nif (Platform.OS === 'ios' && props.lineBreakMode === undefined) {\n  props.lineBreakMode = props.numberOfLines > 0 ? 'truncating-tail' : 'clipping';\n}\n. Looks good, although it seems that the comments didn't get included in your PR for some reason?\n. It's unsafe to use == for string comparisons in Objective-C. It probably happens to work in this case because they are constants, and so the pointer is the same, but it's best practice to write this as:\nif ([notification.name isEqualToString:UIApplicationWillResignActiveNotification]) {\n. No - memory management in Objective-C is (mostly) automatic (ARC).\n. By convention, Objective-C methods that return a value directly should not start with \"get\". This should just be:\n- (NSDictionary<NSString *, NSNumber *> *)metadataForImage:(id)imageOrData\nI'm also not sure why the name was changed however, since the method still seems to just return the image size. If the plan is to add additional metadata in future, this probably won't work anyway because you need the NSData to get most metadata, you can't get it directly from the UIImage.\n. I think that's fine.  if (uri.length > 0) might be clearer, but it's NBD.\n. NSURLSession normally sends cookies automatically unless told not to. Are you sure this is necessary?\n. Nit: NSDictionary *headers\n. \"keyboard\"  should just be an alias for RCTAnimationTypeKeyboardShow\n. Please document this as being deprecated\n. Remove this - there are no call sites for it on the native side except for the one's you've updated in this PR.\n. Good idea, but can you move this deprecation warning to the JS side instead, that way the legacy support code can be kept only on JS side, making it easier to remove later.\n. I agree that we should send a final onScroll event. It's what happens natively, and the fact we don't do this currently is effectively a bug that has been introduced by the throttling mechanism.\n. Can you make this UIViewAnimationCurve instead of int? I know that the value it's set to doesn't actually appear in the UIViewAnimationCurve enum, but it's intended to be passed to a method parameter of that type so arguably it's a private member of that enum.\n. This should be integerValue rather than intValue, assuming you make the change above.\n. This could just be done in the +(void)initialize method, then you wouldn't need to explicitly call it.\n. When you rebase, you'll notice that the implementation of the EventEmitter.emit method (on which this removeListener method seems to be based) has changed quite a lot. Please update to reflect that style, as the use of Object.keys to enumerate subscriptions (which is an array, not an Object) is a bit strange.\n. It's fine to call it in production. I only use the RCT_DEBUG checks if the logic needed to calculate if there is an error is expensive.\n. Nit: can you replace\n[NSNumber numberWithFloat:lineHeight/2 - fontSize/2]\nWith\n@(lineHeight/2 - fontSize/2)\n. Good idea, but might be better just to use imageURL.path.lastPathComponent here, since the prefix is mostly noise.\n. @cpunion I'm not sure why that matters. calling nil.path.lastPathComponent won't crash in iOS if that's what you're worried about.\n. Maybe I'm missing something, but shouldn't a view with zIndex = -1 appear underneath a view view with zIndex = 0? In testViewExample_1@2x.png, it's on top.\n. There are a couple of problems with using layer.zPosition for this:\n1) It doesn't affect event processing order, so views that are visually in behind another view because of zIndex, but appear later in the hierarchy order, won't receive touch events because the other view will intercept them,.\n2) layer.zPosition doesn't just affect order, it actually moves the view in 3D. If you are using a perspective transform matrix that will affect the scale and position of the view due to parallax, as it will be closer or further from the camera.\n. nit: { on new line\n. nit: { on new line\n. nit: { on new line for methods (not for other blocks such as if/for/etc)\n. nit: { on new line for methods (not for other blocks such as if/for/etc)\n. Please use lightweight generics for all collection types, it makes the code much easier to understand, e.g.\nNSMutableDictionary<NSNumber *, RCTAnimatedNode *> *_childNodes;\n. Please use lightweight generics for all collection types, it makes the code much easier to understand, e.g.\nNSMutableDictionary<NSNumber *, RCTAnimatedNode *> *_childNodes;\n. As above re: generics for collections.\n. As above re: generics for collections.\n. You can annotate this with NS_REQUIRES_SUPER; to tell compiler to enforce that overrides must call the super method.\n. You can annotate this with NS_REQUIRES_SUPER; to tell compiler to enforce that overrides must call the super method.\n. typo\n. typo\n. Please use headerdoc style comments\n/**\n * Marks a node and its children as needing update.\n */\n. Please use headerdoc style comments\n/**\n * Marks a node and its children as needing update.\n */\n. Collection properties that have mutable subclasses (NSDictionary, NSArray, NSString) should be marked as copy instead of strong. Also please use lightweight generics to provide some indication of the collection contents (see below):\n@property (nonatomic, copy) NSDictionary<NSString *, id> *config;\n. Collection properties that have mutable subclasses (NSDictionary, NSArray, NSString) should be marked as copy instead of strong. Also please use lightweight generics to provide some indication of the collection contents (see below):\n@property (nonatomic, copy) NSDictionary<NSString *, id> *config;\n. Lazy initialization FTW! \ud83d\udc4d\n. Lazy initialization FTW! \ud83d\udc4d\n. Use [ ] syntax whenever possible please:\n_parentNodes[parent.nodeTag] = parent;\n. Use [ ] syntax whenever possible please:\n_parentNodes[parent.nodeTag] = parent;\n. Note: despite what I said above don't use _parentNodes[parent.nodeTag] = nil; for removing values, as it crashes on iOS 8 (so this is fine).\n. Note: despite what I said above don't use _parentNodes[parent.nodeTag] = nil; for removing values, as it crashes on iOS 8 (so this is fine).\n. There's no need to copy the array here as _parentNodes.allValues already returns a copy (i.e. it's safe to write this even if [parent removeChild:] potentially modifies the _parentNodes dictionary):\nfor (RCTAnimatedNode *parent in _parentNodes.allValues) {\n    [parent removeChild:self];\n  }\n. There's no need to copy the array here as _parentNodes.allValues already returns a copy (i.e. it's safe to write this even if [parent removeChild:] potentially modifies the _parentNodes dictionary):\nfor (RCTAnimatedNode *parent in _parentNodes.allValues) {\n    [parent removeChild:self];\n  }\n. As above\n. As above\n. I \u2764\ufe0f this syntax, but it's considerably more expensive than a for...in loop, so if this is a performance critical section of code you should write:\nfor (RCTAnimatedNode *node in _childNodes.allValues) {\n  [node setNeedsUpdate];\n}\nInstead\n. I \u2764\ufe0f this syntax, but it's considerably more expensive than a for...in loop, so if this is a performance critical section of code you should write:\nfor (RCTAnimatedNode *node in _childNodes.allValues) {\n  [node setNeedsUpdate];\n}\nInstead\n. As above\n. As above\n. As above\n. As above\n. We don't use it much in the codebase, but if you want to use nullability annotations, it's better to wrap the whole header in\n```\nNS_ASSUME_NONNULL_BEGIN\n....\nNS_ASSUME_NONNULL_END\n```\nAnd then just mark the nullable properties.\n. We don't use it much in the codebase, but if you want to use nullability annotations, it's better to wrap the whole header in\n```\nNS_ASSUME_NONNULL_BEGIN\n....\nNS_ASSUME_NONNULL_END\n```\nAnd then just mark the nullable properties.\n. Maybe use \"tag\" instead of \"id\", for consistency with the rest of the code (unless there's a good reason for the distinction?)\n. Maybe use \"tag\" instead of \"id\", for consistency with the rest of the code (unless there's a good reason for the distinction?)\n. Any particular reason to use NSNumbers for this instead of NSTimeInterval?\n. Any particular reason to use NSNumbers for this instead of NSTimeInterval?\n. As above - not sure why the arguments to this method are NSNumbers if you're just unboxing them here anyway.\n. As above - not sure why the arguments to this method are NSNumbers if you're just unboxing them here anyway.\n. Prefer NSTimeInterval for timings. It's just an alias for double anyway, but it makes it clear that the timing is in seconds.\nAside: On the JS side we generally use milliseconds (as is conventional) for timings and on the iOS side we generally use seconds (made clear by using NSTimeInterval). If you ever deviate from that, please document it heavily with inline comments, or even consider naming the properties with an \"MS\" or  \"Seconds\" suffix.\n. Prefer NSTimeInterval for timings. It's just an alias for double anyway, but it makes it clear that the timing is in seconds.\nAside: On the JS side we generally use milliseconds (as is conventional) for timings and on the iOS side we generally use seconds (made clear by using NSTimeInterval). If you ever deviate from that, please document it heavily with inline comments, or even consider naming the properties with an \"MS\" or  \"Seconds\" suffix.\n. Use YES and NO for BOOL literals.\n. Use YES and NO for BOOL literals.\n. NSTimeInterval for all these (except to/from values, obviously -  but those should maybe be CGFloats if they're animation related?).\n. NSTimeInterval for all these (except to/from values, obviously -  but those should maybe be CGFloats if they're animation related?).\n. Might as well access _animationHasBegun ivar directly here for consistency.\n. Might as well access _animationHasBegun ivar directly here for consistency.\n. NSTimeInterval\n. NSTimeInterval\n. This should be a static function, since it's private. Note: if you make it static, there's no need to pre-declare it here.\nPrivate C functions should always be static, otherwise they share a global namespace, and can conflict.\n. Should be a static function (see above).\nAlso, please document what this function does as it isn't clear from the name.\n. Can you document what this does? The name is a bit confusing because it talks about a range but then it returns a single integer instead of a range of values.\n. self.inputRange.count and value.doubleValue will be recomputed each time around  the loop here. Maybe hoist them out of the loop (the compiler can't do that for you unfortunately).\n. Seems inconsistent to use floatValue here when you use doubleValue everywhere else.\nAlso, from what I've seen, there's no reason for all this boxing and unboxing - self.value should just be a double or CGFloat instead of an NSNumber.\n. It's preferable not use override init on modules unless you really need to, as it causes them to be eagerly initialized when bridge starts.\nCould [[RCTNativeAnimationManager sharedManager] setNativeAnimationModule:self]; be called lazily the first time one of RCTNativeAnimatedModule methods is called instead?\n. Why is this a singleton. It seems like it's only used by the RCTNativeAnimatedModule, so couldn't it be part of that module, or at least a property of it?\n. yeah, this should probably use RCTLogError (which shows a redbox).\n. why _ as suffix instead of prefix?\n. This would be a bit more elegant (and maybe more performant) as a dictionary literal:\n```\nstatic NSDictionary *map;\nstatic dispatch_once_t onceToken;\ndispatch_once(&onceToken, ^{\n  map = @{\n    @\"style\": [RCTStyleAnimatedNode class],\n    @\"value\": [RCTValueAnimatedNode class],\n    ...etc\n  };\n});\nClass nodeClass = map[nodeType];\nif (!nodeClass) {\n  RCTLogError(@\"Animated node type %@ not supported natively\", nodeType);\n  return;\n}\nRCTAnimatedNode *node = [[nodeClass alloc] initWithTag:tag config:config];\n_animationNodes[tag] = node;\n```\n. For nil parameter checks you can actually just write\nRCTAssertParam(parentTag);\nRCTAssertParam(childTag);\n. This nodeForTag: method seems like unnecessary code indirection. You can just write:\nRCTAnimatedNode *parentNode = _animationNodes[parentTag];\nAnd if you use generics for the _animationNodes dictionary, it will be strongly typed as well.\n. Use _animationDrivers[animationId] = animationDriver; syntax\n. Use RCTLogXXX instead of NSLog\n. No need for the && node check here - if node is nil the isKindOfClass: call will return NO anyway\n. See note above about this makeObjectsPerformSelector being expensive. It's fine normally, but probably best not to use it inside such a performance critical part of the code.\n. _ as prefix rather than suffix is the preferred naming convention for ivars.\n. Can you document what all these properties are? Or maybe just give them longer/clearer names?\n. CGFloat is actually a double on modern devices, so use opacity.doubleValue.\n. @JAStanton I think @javache meant\n@((BOOL)(notificationSettings.types & UIUserNotificationTypeAlert))\nSo that the value of the NSNumber is 1 or 0 instead of the numeric value of the UIUserNotificationTypeAlert enum.\nHowever, that won't work either, since casting to a BOOL doesn't actually affect the value. I think what you'd actually need to write is\n@(notificationSettings.types & UIUserNotificationTypeAlert > 0)\nThat's equivalent to \n[NSNumber numberWithBool:notificationSettings.types & UIUserNotificationTypeAlert]\nBut we prefer the modern @(...) syntax to [NSNumber numberWithX:...] in our codebase.\n. I think this won't actually work, for the reason I mentioned - casting to BOOL is basically just casting to char/int8, it won't actually coerce the value to be true or false\n. I think this needs to be written as\n@\"alert\": @(notificationSettings.types & UIUserNotificationTypeAlert > 0)\n. @JAStanton This failed to land due to a type error detected by our build system. You're assigning notification.userInfo (which is defined as being an NSDictionary) to a property of type UIUserNotificationSettings. I'm not sure why this worked for you locally, but it seems unlikely that it's correct.\n. @JAStanton ah, I totally missed that. Should just be a simple case of wrapping notificationSettings in a dictionary and then unwrapping it then:\n@{ @\"settings\": notificationSettings }\n. This would be cleaner as a static C function instead of a class method, since it doesn't reference self.\nstatic NSDictionary<NSString *, id> RCTConvertLocalNotification(UILocalNotification *notification)\n{\n  ...\n}\n. @maartenschumacher you'll have to verify this, but I believe if you just write:\nNSURL *redirectURL = [URLWithString:location relativeToURL:request.URL];\nwithout checking the prefix, it will do the right thing anyway, i.e. if it's already an absolute URL it will ignore the relativeToURL argument.\n. ",
    "brennanpayne": "I'm not sure how it all fell into place, but I ended up in the same place as @mfikes.  I followed his above steps and was able to resolve the issue. \nThe odd part is that pcre appeared to have been installed by homebrew (it came up in brew ls).  I was also able to run watchman from the command line in other scenarios and it would work, it was only not working for react-native!  Anyway, uninstalling pcre and doing a fresh install of node and watchman resolved my issue.  Thanks for documenting how you fixed it @mfikes!\n. ",
    "sjmueller": "@frantic, even if the story for new project creation is not there yet, could you still share the manual steps needed to setup a fresh new project?  It's been harder than expected, and we have fallen back to just copying one of the examples and hacking away within the cloned repo.\n. Much appreciated, @jlongster!\n. I went through the process of creating a new Swift v1.2 project from scratch with Xcode 6.3 beta, and preparing it for use with react-native.  I know the end goal is to improve the experience so that this is trivial, but for the time being, here are the steps if anyone is curious:\n1. Create a new swift project. I generated mine with Xcode 6.3-beta as Single View Application.\n2. Copy packager, libraries, and reactkit folders from react-native.  Copy over .gitignore as well, or create one yourself.\n3. Import ReactKit as a subproject.  The easiest way is to drag ReactKit/ReactKit.xcodeproj from finder into the Project navigator in your newly created Xcode project.\n4. Link ReactKit library to build with main binary. This is done by selecting the main project in Xcode, choosing the Build Phases tab, and adding a new framework under the Link Binary With Libraries group.  Choose libReactKit.a, as Required.\n5. Add bridging header to use ReactKit in swift.  You can do this by adding an temporary ObjC file to your project, and Xcode will prompt you asking if you want to create a Bridging Header.  You can then delete the temp file, and continue to use the newly created [app]-bridging-header.h file.\n6. Add all the headers you plan to use from ReactKit into your [app]-bridging-header.  I added all of them, since there are some interesting errors if you don't get the dependencies right.  I bet there's an easier way to do this, but if not just let me know and I can post my bridging-header.\n7. In order for the headers inside ReactKit to be found, you must add the\n   project as a search path.  Select main project, choose Build Settings\n   tab.  Under Search Paths, add a new entry Header Search Paths:\n   $(PROJECT_DIR)/ReactKit, recursive.\n8. Initialize app with RCTRootView, set js bundle location.  I used the following code in AppDelegate.swift:\n```\n   func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n   let jsCodeLocation = NSURL(string: \"http:localhost:8081/Cards/CardsApp.includeRequire.runModule.bundle\"),\n   rootView = RCTRootView(),\n   rootViewController = UIViewController()\n\n   rootView.scriptURL = jsCodeLocation\n   rootView.moduleName = \"CardsApp\"\n\n   self.window = UIWindow(frame: UIScreen.mainScreen().bounds)\n   rootViewController.view = rootView\n   self.window!.rootViewController = rootViewController\n   self.window!.makeKeyAndVisible()\n\n   return true\n\n}\n   ``\n9. Delete unused default storyboard, viewcontroller under your [app] folder, since they aren't being used.\n10. ModifyInfo.plist` to remove storyboard entry:\n```\n-      <key>UIMainStoryboardFile</key>\n-      <string>Main</string>\n```\n\n\nAdd -all_load linker flag to pick up ReactKit objc category methods.  Otherwise you'll receive errors like unrecognized selector sent to class when trying to use RCTRootView. On your main project, select Build Settings tab, Linking -> Other Linker Flags: Add -all_load.  I've read that there are more optimal ways to do this, but good enough for now.\n\nAdd main entry point to js application as [AppName]App.js.  Just for starters you can use something like the code below (check out the tictactoe app for a full example):\nvar App = React.createClass({\n    render() {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>My App</Text>\n            </View>\n        );\n    }\n});\n\n\nPerhaps there are some steps that are extraneous, and a few obviously won't apply to a pure ObjC project.  Hope this helps.\n. Setting flex: 1 will trigger the underlying text to wrap, but what if you want your view to grow with the text, and then wrap when it reaches the boundary?\n\n. The temporary hack I'm using right now is conditionally adding flex: 1, based on the content length.  Of course this is pretty imprecise, and doesn't take into consideration orientation or variations in device resolution.\n. Anything preventing this one from being merged? It's much needed functionality for TextInput, but this PR has been pretty quiet the last month.\n. ",
    "boopathi": "@sjmueller Thanks a lot. I was stuck because of not adding all headers to bridging-header for quite a while, and I would suggest this to go into the docs as well (or) to Examples/SwiftApp\nAnd instead of copying files around, you can open packager/packager.js and add your project directory to  options.projectRoots. #64 would fix it where you could run \nsh\n./packager/packager.sh --root ~/workspace/Cards\nand your jsCodeLocation would be http://localhost:8081/CardsApp.includeRequire.runModule.bundle where CardsApp.js is the entry point.\n. Overlooked that stuff. so deleted the previous comment as it was irrelevant. \n. Overlooked that stuff. so deleted the previous comment as it was irrelevant. \n. The source has become unknown repository when this went public, and my private clone wasn't available. Closing it now. Will rebase master and send another.\n. I haven't used css-layout before. If child is relative to the parent element and there is no height specified to parent, does the parent element expand when top is specified to child or the child goes out of the parent element ?\nBut, looks like it does come out of the parent container. I did a test with css-layout - https://github.com/boopathi/textinputbug/blob/master/css-style.js - and the result I got was this https://github.com/boopathi/textinputbug/blob/master/css-style.output.json . The height of the child is used to compute parent's height, but the child top is not considered to compute parent's height.\nSo, I guess the fix for this would be to not style(top, etc...) the textinputs and manually add height to parent. \n. I haven't used css-layout before. If child is relative to the parent element and there is no height specified to parent, does the parent element expand when top is specified to child or the child goes out of the parent element ?\nBut, looks like it does come out of the parent container. I did a test with css-layout - https://github.com/boopathi/textinputbug/blob/master/css-style.js - and the result I got was this https://github.com/boopathi/textinputbug/blob/master/css-style.output.json . The height of the child is used to compute parent's height, but the child top is not considered to compute parent's height.\nSo, I guess the fix for this would be to not style(top, etc...) the textinputs and manually add height to parent. \n. @joshaber That works. Thanks!\n@tadeuzagallo :+1: auto can use this, so there is less confusion. \n. Invalid now. \nReact-native-cli does a really good job.\n. This should work. But sometimes, writing markdown or syntax highlighted code snippets can be useful.\n. @glenjamin , you can have a User Defined build setting in xcode, and use this flag to choose between http url or file location.\n. sure! :+1: \n. ",
    "zertosh": "Thanks @a2 and @vjeux!\n. Looks like it was fixed in https://github.com/facebook/react-native/commit/6153fffb30c118626fbaf9efba0e9bacc01cfbf6. Thanks!\n. Yeah it's workin' \n\n. I think I misunderstood the mission/role of react-native. I can't find it in the docs, but I walked away with the idea that Components would map closely to their native counterpart. So, if UIImage doesn't support gifs, but <Image /> does, then I must be mistaken. Does this also mean that the Andriod version of <Image /> will support gifs? What if there are components that can't reconcile their feature set across platforms? I understand that the goal is not to \"write-once run everywhere\", but does this mean that core components will diverge significantly between platforms? I'm not complaining - I like the gif support - I'm just looking for clarification.\n. @vjeux: Thank you for the detailed answer. I'm happy to hear that baseline and platform specific components are being considered. Feels like a very web thing to do. It'll be interesting to see how the polyfill/shim world develops around this, and to what extent devs will take a progressive enhancement approach to building cross-platform components (if they do at all).\n. @vjeux: So far I'm having a great time with react-native. I wrote a tumblr browser that uses the flux pattern heh. This is what it looks like: min-s-react-native-demo-gif. (I'm not inlining the gif because it's too distracting.)\n. @nick I've got a similar issue - I need to be notified that a \"back\" happened https://github.com/facebook/react-native/issues/26. I'm currently hacking around it by having the NavigatorIOS children call a prop callback on componentWillUnmount.\n. ",
    "wong2": "does defaultSource support GIFs? I tried and it seems not working\n. @nicklockwood thanks, waiting for this\n. @nicklockwood  any updates on this? :smile: \n. @brentvatne  it works after I update to 0.4.0, thanks!\n. ",
    "SelmanKahya": "Is GIF still supported? I am trying to display an animated GIF as follows:\n<Image source={require('image!sandglass')} />\nPNG works just fine, but I am getting the following error when I try to render animated GIF in my view. Restarting the package manager doesn't help. Any ideas?\n\n. Yea, using uri worked fine, thanks.\n<Image style={styles.gif} source={{ uri: 'test.gif' }} />\n. ",
    "ide": "AFAIK remote gifs are supported. Try a URL.\n. I'm not actively looking into this. Based on what I've heard from other people and from reading this discussion, the solution could be quite hard or non-obvious without advanced knowledge of gesture systems. I have a thought regarding some of the discussion above...\n\nDo you know of a way to have UIScrollViews be disabled by default and then reenabled?\n\nMight be possible through the gesture recognizers by adding a custom gesture recognizer that communicates with the JS layer. I think you can tell UIScrollView's private gesture recognizers to need this custom gesture recognizer to fail -- this might let JS allow/disallow the private gesture recognizers to become active.\n. CocoaPods handles the Xcode workspace configuration and linking. Things that you can do by hand or with a tool like Carthage (though that's iOS8-only which I think is a no-go for Facebook) but are nicer when handled automatically.\n\nMost developers familiar with React will be used to npm but likely not have seen Cocoapods etc. before.\n\nI think this is true at the moment because the project was advertised to people attending React Conf and are mostly doing web development, but I think ReactKit is going to get substantial traction when iOS developers get on board. Since CocoaPods is by far the most popular way to publish iOS libraries I think it is a good place to start even if something that's designed for polyglot modules supersedes it.\n. @vjeux\n1. Yeah. I think you want compatibility with Maven and Gradle so that the class path is automatically handled. These tools shouldn't be required, like how you're not forced to use CocoaPods even if a project has a podspec, but they automate the project setup experience a lot more.\n2. Great question. I'm not sure of the answer though I think the solution for distributing ReactKit could apply to UI components as well. Lots of similarities like having both JS and ObjC code, needing to integrate with Xcode, making the packager aware of the JS, etc.\nI want to reiterate that integrating with the iOS ecosystem & community and drawing upon the wealth of Cocoa experience could be really valuable for ReactKit. From another angle, CocoaPods is familiar to people already building iOS apps today who might find it easier to drop into Obj-C when building features that ReactKit hasn't yet anticipated.\n. > In the short term however, I see no harm in including a podspec, as it will make it easier for iOS developers to discover and try out React Native.\nTotally. The podspec is hopefully unobtrusive. There's a fair chance that CocoaPods isn't part of the picture at the end but I think it is worth experimenting with.\nHere's another idea for the dependency management & binary build process: what if there were a small tool that looked inside node_modules for React Native components and updated the Xcode project file (or even updated the Podfile to reference these modules, and delegated the rest of the work to CocoaPods)? Something like:\nFile hierarchy:\nPodfile\nAutogenerated-npm-Podfile  # created by the tool\nnode_modules/\n  react-native-page-view-controller/\n    package.json\n    index.js\n    ios/\n      RCTPageViewController.h\n      RCTPageViewController.m\n      react-native-page-view-controller.podspec\nPodfile\n``` ruby\nall your normal dependencies, here are some examples\npod 'AWSiOSSDKv2', '~> 2.0'\npod 'CocoaLumberjack', '~> 2.0.0-rc'\npod 'FMDB', '~> 2.5'\npod 'GoogleAnalytics-iOS-SDK', '~> 3.0'\npod 'Reachability', '~> 3.2'\nrequire 'Autogenerated-npm-Podfile'\n```\nAutogenerated-npm-Podfile\n``` ruby\n@generated by hypothetical tool\nReference the local pods that live in node_modules\npod 'react-native-page-view-controller', 'node_modules/react-native-page-view-controller/ios'\n```\nWhat the tool does:\n1. Scans node_modules for the podspecs\n2. Adds references to them in an autogenerated file that is loaded from the Podfile (Podfiles and Podspecs are just Ruby)\n3. Runs pod install or pod update, whatever is appropriate\nThe workflow\n```\nnpm install react-native-page-view-controller\ncool_tool\nopen App.xcworkspace\n```\nNow here's the cool part / litmus test: can ReactKit itself be distributed this way? I think it can.\n. @a2 Yeah soon I think. The podspec needs a little bit of work (see #285) but with my diff I've gotten things running.\nI would like to exclude unused code soon though, which is one thing a package system should provide. Discussion about external packages can continue in #235.\n. The podspecs for RN and its helper libraries are in a reasonable place now. Module system still needs to be worked out and let's have that discussion separately.\n. For the time being, this helps with configuring Xcode project files compared to manually modifying the Header Search Paths, which is easy to do but requires knowing which settings to modify. The CocoaPods setup is straightforward in this regard and integrates well with existing projects.\n. After the talk about making the package distribution more npm-centric I'm thinking there should be two npm packages: react-native and react-native-tools. The react-native package would include the runtime JS + Obj-C + Podspec. The react-native-tools package would include the packager and supply a \"bin\" field in its package.json, which adds a program (ex: react-native-server) to your PATH when the package is installed globally.\n. I believe \"npm start\" is exposed only within the react-native package for a couple of reasons such as ambiguity. So I don't think it would work if react-native were a dependency:\npackage.json\nnode_modules/\n    react-native/\n        package.json  # defines \"start\" under the scripts section\n. @sahrens it should probably live next to ReactKit.xcodeproj. I think I placed it one folder higher in case the podspec needed to reference the Libraries JS but that's no longer the case. Will move it into ReactKit.\n. Fixed in https://github.com/facebook/react-native/commit/6500ba7bfbdc2bd8e3301813b3cb606aeea35331. Thank you @tadeuzagallo!\n. Could the JS application engine be set up by passing in a global object? For example:\njs\n(function(global) {\n  // Make require.js use \"global\", which passes it to all of the module factory functions.\n  // require.js also sets \"global.require\", \"global.requireLazy\", etc...\n});\nFrom the native side, the application engine is initialized like:\nobjc\n// Create a \"global\" object. May need to have it act as a proxy to the real global object\n// and would need to write a little more code for that.\nJSValue *reactGlobal = [JSValue valueWithNewObjectInContext:context];\nreactGlobal[@\"__fbBatchedBridgeConfig\"] = bridgeConfigDictionary;\n[[context evaluateScript:bundleScriptString] callWithArguments:@[reactGlobal]];\nAccessing the global require function from Obj-C is simple as well:\nobjc\nJSValue *exports = [reactGlobal[@\"require\"] callWithArguments:@[@\"moduleName\"]];\n[exports invokeMethod:@\"doSomething\" withArguments:@[...]];\nSo in the end, RCTJavaScriptExecutor has a smaller API and ReactKit is better encapsulated by reducing pollution of the global scope (some functions like setTimeout need another approach though).\n\nFor the Chrome debugger extension, it might be possible to keep using the real global object with the help of the packager by serving (function(global) { /* ... */ })(window);.\n. Could I get a code review sometime this week or the next? I know you guys are super busy so when you get a breather is fine. I'm pretty sure the view controller (specifically splitting the environment setup out of RCTRootView) is a step in the right direction and it takes time to rebase on top of the latest commits, so it'd be great if this could be reviewed sometime soon.\n. Thanks Nick -- appreciate the commentary and it's helpful to know the direction you guys are looking in. If I'm understanding your goals with RCTRootView right, it sounds like you want to separate the JS environment from RCTRootView so that it can manage multiple root views and orchestrate app-wide events.\nIf you're already far along with the new RCTRootView structure that's fine but just to put an idea out there since this diff might save you guys some work - RCTRootViewController could be renamed RCTEnvironment and would be a plain NSObject subclass. RCTRootViewController doesn't actually use any of UIViewController's features so we can leave that baggage behind and make it easy to embed RCTRootViews anywhere.\nSample code using it might look like:\n``` objc\nRCTEnvironment environment = [[RCTEnvironment alloc] initWithModuleProvider:moduleProvider];\nenvironment.executorClass = [CustomExecutor class];\nenvironment.sourceURL = sourceURL;\nRCTRootView rootView = [environment createRootView:moduleName initialProperties:props];\n// Add rootView wherever\n[tableCell addSubview:rootView];\n// Cleanup\n[environment invalidateRootView:rootView];\n// or maybe rootView has a backpointer to the enviroment and can clean itself up on\n// [rootView invalidate] or when it gets deallocated\n```\nIs this more in line with what you're thinking?\n. Got it, will sit tight for now.\n. GitHub turned the fork into a mess: re-PR'd as #259 \n. Working on this now. I expect a good performance win and a more encapsulated API (replacing a lot of globals) to come out of this.\n. Working on this now. I expect a good performance win and a more encapsulated API (replacing a lot of globals) to come out of this.\n. OK. Thanks for letting me know.\nOne goal of mine to be able to disable automatic module registration so that I can provide different module implementations (or exclude modules) for different root views, so I'm looking forward to the new system.\nI had a module loader that handled the module class <-> ID <-> name mapping and could generate the \"remote module\" and \"local module\" configs. This let me delete most of the static functions and variables in RCTBridge.m, which I wanted so that two different root views could use two separate sets of remote & local modules.\nRe: lazy init -- currently I'm thinking that the number of modules should be fairly small (under 1000) it actually seems fine to initialize all modules up front and the ones that do heavy work can implement some kind of lazy initialization on their own.\n. OK. Thanks for letting me know.\nOne goal of mine to be able to disable automatic module registration so that I can provide different module implementations (or exclude modules) for different root views, so I'm looking forward to the new system.\nI had a module loader that handled the module class <-> ID <-> name mapping and could generate the \"remote module\" and \"local module\" configs. This let me delete most of the static functions and variables in RCTBridge.m, which I wanted so that two different root views could use two separate sets of remote & local modules.\nRe: lazy init -- currently I'm thinking that the number of modules should be fairly small (under 1000) it actually seems fine to initialize all modules up front and the ones that do heavy work can implement some kind of lazy initialization on their own.\n. One feature I'd like is the ability to enable or disable autoloading for specific bridges. For example one bridge may autoload all linked modules while another bridge would only have modules provided to it. I could work on a PR when you guys complete the new module loader but it would be great if the code you're currently writing anticipated this feature or even implemented it.\nI had a diff about 1/3 complete where the only moderately interesting part is being able to skip autoloading if the module provider is specified: https://github.com/ide/react-native/commit/b8271e9ad167da19a4a92c13d1a7a374eb9d50d9#diff-e15318f48b6447f2d9936c5e047d882fR509\n. One feature I'd like is the ability to enable or disable autoloading for specific bridges. For example one bridge may autoload all linked modules while another bridge would only have modules provided to it. I could work on a PR when you guys complete the new module loader but it would be great if the code you're currently writing anticipated this feature or even implemented it.\nI had a diff about 1/3 complete where the only moderately interesting part is being able to skip autoloading if the module provider is specified: https://github.com/ide/react-native/commit/b8271e9ad167da19a4a92c13d1a7a374eb9d50d9#diff-e15318f48b6447f2d9936c5e047d882fR509\n. The new module system from awhile back addressed most of what this issue was about. Closing out.\n. There is also https://github.com/pjjanak/react-native-viewport for viewport sizes.\n. There is also https://github.com/pjjanak/react-native-viewport for viewport sizes.\n. Closing this out because queues and run loops don't mix. Still wish we could use queues in the executor though.\n. Closing this out because queues and run loops don't mix. Still wish we could use queues in the executor though.\n. Superseded by #261 \n. Superseded by #261 \n. Shipped in 258c6b1b5455bf1ba32ede1c9cf5f041b5b2b20c\n. Shipped in 258c6b1b5455bf1ba32ede1c9cf5f041b5b2b20c\n. Try Reset Content and Settings in the simulator since it can sometimes be buggy.\n. Superseded by #263 \n. I will try to profile this later on a device to see the performance difference (or do you have numbers?). One thing is that UILabels are transparent but they are fast enough for UIKit apps so I don't know if the cost of blending is really a problem. The other thing is that I believe \"opaque\" on a UIView is a rendering hint, and iOS may optimize views with opaque background colors even if opaque = NO.\n. I made a simple scroll view with 5000 text views:\n``` js\n  render() {\n    var textRows = [];\n    for (var ii = 0; ii < 5000; ii++) {\n      textRows.push(\n          \n          This is a line of text\n        \n      );\n    }\n    return (\n      \n        {textRows}\n      \n    );\n  }\nvar styles = StyleSheet.create({\n  text: {\n    color: 'blue',\n  },\n};\n```\nI profiled loading the screen on an iPhone 6 with iOS 8.2, waiting for it to render (this takes awhile) and then scrolling. This is what it looks like with opaque = NO:\n\nHere it is with the default opaque = YES:\n\nThe demo consistently crashed when I set the background color of the scroll view's content container style, so I could not test inherited background colors.\nI don't see a performance regression looking at the profiler charts so I believe this diff doesn't slow performance, or at least not in a way that matters. Additionally when I gave the text views an opaque background color (just \"white\"), toggling the \"Color Blended Layers\" option in the Core Animation profiler showed that they were not blended even though opaque = NO.\nSo my takeaway is: setting opaque = NO doesn't affect blending if the text views have a solid background color, which is what React usually will try to do. And if they don't have a solid background color and default to being transparent, then the performance difference is nominal and definitely not the bottleneck.\n. Hi Spencer,\nThat's really good to know. I hadn't thought about the the opaque bit letting the renderer optimizer transparent overlays. The text crispness is interesting too. It looks like the system pre-renders the glyphs with subpixel anti-aliasing in the opaque case. I believe on the latest screens (thinking about the 6 Plus) the visual fidelity will always be high since individual pixels are actually finer than subpixels on older devices. Cool stuff.\n\nOur groups app definitely shows tons of blending with this feature turned off.\n\nFrom what I understand, React propagates background color down the view hierarchy, so if an ancestor view were to set an opaque background color, all descendant text views would inherit it. Since the Core Animation debugger was showing all green even with opaque=NO as long the text views had an opaque background color, I believe this diff wouldn't deoptimize nor lower the rendering quality of the groups app but I'd like to know for sure.\n. See #256. Closing this since GitHub didn't handle the private -> public transition well.\n. Thanks for your input @a2 and @nicklockwood. The overall picture is much clearer. Based on UIAlertController's behavior (both the crashing and the fact it takes over the entire screen), it might make sense to have the key window's root VC present it. That seems simple to code up and reason about if it works.\nAs for presenting generic VCs, I believe the RCTBridgeModule or RCTUIManager that performs the presentation should use the VC that owns the view associated with the React component initiating the presentation (hope that makes sense). So for components that are inside a NavigatorIOS screen, the presenting VC would be the RCTWrapperViewController instead of the RCTRootViewController. I bet there are also some lessons from the website's contextual layer components that the UIE team wrote.\n\nIn general, I think we want to avoid introducing the concept of view controllers as a distinct entity from the point of view of React JS.\n\nTotally spot on.\n. With some custom nav bar implementations that simulate iOS's style, this could quickly surpass UINavigationController. Really great @ericvincenti. BTW I noticed some small issues causing crashes with the UIExplorer example and put up #200 as a fix.\n. @jordanna - yeah, I imagine so. The nuanced part is that when you add React children, the subviews need to be added to the UIVisualEffectView's contentView. I don't think the current BlurView was necessarily built with vibrancy effects in mind but my current thinking is that it's desirable to write:\njs\n<BlurView blurStyle={BlurView.DarkStyle}>\n  <Text>Title</Text>\n  <VibrancyView>\n    <Image source={ix('Icon')} />\n  </VibrancyView>\n</BlurView>\nThe native blur view can automatically pass its blur effect to the native vibrancy view (also implemented with a UIVisualEffectView) that needs the blur effect to create its vibrancy effect. Another thing that may make sense to do -- although iOS may do this automatically now -- is to set the nested image to render as a template or otherwise the image won't take on the vibrancy effect.\nI actually have a project that demonstrates the available effects (https://github.com/ide/UIVisualEffects). The native APIs aren't all that intuitive and used to require a bit of fiddling to get right so I think it's a helpful reference if you're interested in learning how to produce these effects.\n. You guys are right about iOS 7 support. UIToolbar should handle the common case for creating blurry overlays but there is no simple way to get the vibrancy effect. Here's a strawman proposal w.r.t. iOS 7:\n- Support <BlurView> on iOS 7+, using UIVisualEffectView if possible and UIToolbar otherwise\n- Support light and dark blur styles on iOS 7+ since UIToolbars can be dark or light\n- Support the extra light blur style only on iOS 8. Fall back to the light style and print a warning and maybe red box in dev on iOS 7.\n- Support <VibrancyView> on iOS 8+ and don't define it at all on iOS 7 (module.exports = undefined)\nI probably won't be able to get to building this in the next couple of weeks so you may want to open source the existing BlurView for navigation bars. If someone else is interested in building this in the meantime I can help with code reviews.\n. catping\n. Feels like this would result in a change to React since the component renderer would need to hook up each owner's setNativeProps to the root it owns. Perhaps there is a less intrusive way with a mixin that we can experiment with and then make the change to React once we understand the space better. I think there is something useful here with automatic proxying between the owner and its root, like making onLayout work for composite components as well.\n. Scratch this -- I think working with the numeric indices is more appropriate at this level of abstraction.\n. Shipped in 258c6b1b5455bf1ba32ede1c9cf5f041b5b2b20c\n. ListView now has renderSeparator.\n. Thanks guys!\n. @vjeux - The alwaysBounceX properties affect rubber-banding when the content is smaller than or equal to the scroll view bounds. The bounces property affects rubber-banding all of the time.\n. Superseded by #264. This is simple to review =)\n. I wrote my own inverted scroll view, and I believe it should be a standalone component. No need for it to be deeply integrated with the core for now.\n. @jawadrehman open an issue on the other repo if you have trouble with it, but to answer your question you should unshift items onto your array instead of pushing them. It's the exact same as a regular scroll view, only that the pixels are flipped upside down.\n. Superseded by #265 (+ secureTextEntry support!)\n. Hit slop is especially useful when you Have completed your layout and just need to adjust the tappable areas. Comfortable hit-test areas are one of those features that makes apps feel \"native\" and it would be good if they were easy to customize. Sometimes the tappable region may overlap with other views, which is unambiguous when those views don't handle touches. When touchable areas do overlap I believe the behavior can be well-defined (e.g. use z-index and responder chain) and the programmer can later fine-tune the hit area. There may be another good way to resolve tap conflicts / UIKit might have a clever approach.\n. OK. I will think about it some more to see if there is a solution that can be built in user space, either with pure JS or a native module that swizzles native hit-testing methods. I do think it is useful to adjust hit-test areas easily even when you can't run the same code everywhere.\n. Last I looked at the touch handler the easiest way would be to override the hit testing of views. I haven't experimented with this, just have been making my views bigger to compensate for now.\n. Thanks @amasad. From what I could tell, the code that generates the source string always concatenated the source map so your production build script (maybe it is a person?) might just truncate the end of the file.\nI noticed the source map (and file size -- minification helps too) really affect performance on the phone. This is just a rough idea but longer-term it would improve on-device development to have the packager always minify and have the phone be able to load source maps separately. Or if minification compromises debuggability, then it could make sense to expose a option in the package URL to toggle minification so that the simulator can load a non-minified bundle.\n. I don't have perf numbers but anecdotally the minified JS is faster for a bunch of little reasons that add up. For boot time it helps to read fewer bytes off of disk / from the packager server, and to run the code the app has to copy the string from Obj-C to JS.\n. Yeah, it blurs any descendant that has focus. The descendant could be a TextInput but could also be any other kind of input element that can become the first responder.\n. Confirmed that this.refs.parentView.blur does not blur its child views. Where this would be handy is in the navigator stack where a scene will lose focus without being unmounted, and you want to make sure to blur all of its text fields. So instead of \nthis.refs.textInput1.blur();\nthis.refs.textInput2.blur();\nthis.refs.textInput3.blur();\nyou want to write\nthis.refs.container.blur();\n. Not sure why that's happening. Maybe something changed. Feel free to close this if it just works now.\n. @vjeux Most of the Apple components are useful to have because they have a lot of subtle details that take work to get right so it's helpful to have some robust implementations:\n- Pull-to-refresh spinner: animate based on the scroll position, \"snap\" to provide visual feedback when the refresh action begins\n- Table view: cell animation, separator placement\n- Navigation controller: nav bar interpolation, animating in new screens on-demand\n- Collection view: this is hard to build but supports a lot of layouts and animations\n. @vjeux Could we get an update on the pull-to-refresh component? Beyond being a really common UI element I believe the gesture-based animation that you described in #46 requires some thought to build, and it probably makes sense for 3rd party components to share a style interpolation technique.\n. @vjeux sounds reasonable. could you throw the style interpolation code over the wall as a starting point?\n. There's enough of a foundation now that this can be built independently.\n. I believe the ListView renders one cell at a time after the initial render. You can tell it to render 100 cells per rAF or ensure the data source is populated the first time you render the ListView.\n. Updated w/splat syntax and tested.\n. Thanks @vjeux!\n. https://github.com/facebook/react-native/pull/129 should fix this.\n. > Imho the biggest disadvantage of promises is that it's really easy to forget to catch the error.\nYeah. I think promises are ok and versatile in some scenarios but not always the API I'd directly want to use. The reason I lean towards them is that they're going to be the lingua franca of asynchrony in JS so to speak, and it will be easy to use promises with callback APIs / promise libraries / ES7 async functions.\n. Fixed by #1232 / https://github.com/facebook/react-native/commit/90439cec26e5ba86ee4f7f12d5a7591cdd745e62. RCT_EXPORT_METHOD now can export JavaScript functions that return promises and are compatible with async/await.\n. That's really cool @baofen14787. Thanks for sharing your experience!\n. Fixed by #1232 / https://github.com/facebook/react-native/commit/90439cec26e5ba86ee4f7f12d5a7591cdd745e62. The callbacks in the bridge code consistently go (successCallback, errorCallback), which now matches most of the built-in native modules. And with promises the callback arguments are entirely hidden.\n. I still think this is useful so I've put up #266 (same diff, just on a fixed fork) but if you don't want to merge it I understand and will just publish it to npm sometime.\n. Looks like this was merged in. Thank you =)\n. @vjeux do you have a tag for \"good first bug\" or something similar to highlight this for potential contributors? I'd like to see this direction get explored and there's a good chance it will make writing stylesheets a lot nicer.\n. This is in better shape now. I also exported React itself so that you can write just one destructuring assignment expression:\nvar {\n  React,\n  StyleSheet,\n  View,\n} = require('react-native');\n. Superseded by #262 \n. For some context - the Breadcrumbs and Jumping navigator examples would redbox without the image assets and libRCTAnimation fixes.\n. Superseded by #260 \n. FYI transferring data back and forth between JS and Obj-C is relatively slow so you'll probably want to keep all of the image data in Obj-C. I don't have numbers but I expect you will see it takes a measurable amount of time to transfer several MB of data. It's small compared to the amount of time it takes to upload the photo but it's a good idea to keep the JS <=> Obj-C message queue clear.\nYou could write a tiny bridge module that receives the asset URL and then performs the upload, reporting progress/error/success information back to JS.\n. @tjwudi the diff is just calling the native console and would be simple to skip calling the native console's if it's not defined. The idea is that Web Inspector (Safari or Chrome's) are useful as REPLs and it's helpful to see all the console output in one place.\n. Re: class definition - I get the need for the category but think you could get rid of the first @interface declaration and pull in the swift bridging header instead.\n. @nicklockwood oops - I meant generated header instead of the bridging header. It's just #import \"App-Swift.h\".\n. @robertjpayne have you had issues with the latest Xcode? Swift got a lot more tenable in the last release and a lot of compiler issues went away.\n. Boo Apple. OK - the @interface stub sounds good to me.\n. The CLTilesManagerClient messages are just log spew from #69 but don't affect the movies app. There must be something else going on.\n. @TomMcHugh Great to hear you're interested. I agree it makes sense for package.json to denote that the package is a React Native module for the reason you mentioned and also it could be useful to store extra metadata (ex: which platforms are supported).\n. Perhaps eval instead of require is the right thing to do since the autogenerated file should have access to all of the functions that the main Podfile does. I believe this matches how CocoaPods loads the main Podfile in fact: https://github.com/CocoaPods/Core/blob/master/lib/cocoapods-core/podfile.rb#L254\n. @TomMcHugh Is your code in working condition? If so, do you want to create a new GitHub organization and repo with your work, and then we can publish it to npm and start trying it out? I have a couple of native components that are coming together like a camera and more advanced URL handling that I could try linking with your script.\n. @neonichu could you shed some more light on what a CocoaPods plugin could get us?\n. @johanneslumpe Yeah, that seems reasonable and really good that you can use npm directly if you're used to it or have other tools that call into it. \n. @sahrens we have the pieces of a module manager based on REM coming together. The hard part is supporting transitive dependencies  (e.g. an \"audio\" module with some native code might be the dependency of both a \"podcast\" module and an \"arcade\" module -- what code should be included in the app? lots of choices here when taking versioning into account).\n. I just published react-native-button if you want to give it a try. It's very simple and primarily makes it more convenient to create iOS-style buttons with the correct opacity constant.\n. You're totally right. I added a bunch of TextInput properties in https://github.com/facebook/react-native/pull/109. It wouldn't be too hard to expose secureTextEntry (especially since it's just a boolean) in a similar way.\n. If this is still a problem please open an issue with more details.\n. Probably the best way to approach this is to install eslint, babel-lint, and eslint-react-plugin directly so that React Native can have its own linter settings independent of any other project. My latest commit does this but there's an issue with the packager where it's finding conflicting @providesModule directives deep inside of node_modules (the \"commoner\" module's files) so that needs to be resolved before merging.\n. I'll keep rebasing periodically so it's easy to merge and uses the latest eslint plugins.\n. Removed the unnecessary jest-cli entry from dependencies.\n. Sweet, looking forward to it.\n. Yay! Thanks for landing it =)\n. This has been fixed in master.\n. This has been kind of hacked together as React Native has been refactored, so I think the concept stands but each library should have its own umbrella header, and then maybe have a master umbrella header that imports the core + ubiquitous libraries (text, image support but not geolocation, vibration, etc).\n. I removed the React self-export so now this is just the struct prop types and the static renderers.\n. Removed Static helpers, it's now just prop types for EdgeInsets and Point.\n. Updated to use RCT_CUSTOM_VIEW_PROPERTY. I left the nav event in RCTUIManager for now, but was thinking they eventually belong in one of the RCTNav*Manager files.\n. Fixes the secure text field request in #245 \n. @a2 awesometown\nI would be 80% serious if I said to move the code review off of GitHub and onto Phabricator. Phacility has done a really great job making the flow intuitive compared to other products.\n. Thanks for the code review guys\n. @jsierles want to add README.md to https://github.com/facebook/react-native/tree/master/react-native-cli? npm should automatically take care of the rest when it comes to displaying the docs on npmjs.com.\n. Closing this out since there are 3rd party solutions available.\n. This is mainly a stopgap until we have a package script that works with React Native. Otherwise there needs to be a dozen or so subspecs (for example, ListView and the JS Navigator are missing). Since there's so much activity in the repo I'd rather pay the cost of bloat (and am explicitly opting in with React/All) than have to update the podspec everytime someone adds a new Libraries subdir.\n. In the short term I think that'd be OK (Libraries/RCTTest should be excluded though, and the Web Socket code should be included only for development targets). Longer term something like the package system sketched out in #235 should reduce bloat and make dependencies easy to maintain.\n. Closing since the root podspec pulls in all of Libraries so it's tenable to list out a couple of subspecs for now.\n. @tjwudi if it is a simulator problem try completely resetting it (as if it were a new iPhone). Reset Content and Settings or something like that I believe.\n. cc @nicklockwood I believe you are the right person to look at this. it's a quick fix but shouldn't have adverse side effects until an API change can be worked out.\n. @amasad This actually introduces a delay of one run loop of the main thread (should be under 16ms) to fix a bug.\n. I actually use a custom executor (similar to the ContextExecutor) to set up the JS environment so could you keep a way to set it?\n. This diff addresses that issue by giving the initial load one pass of the run loop to set up the executor class. It's not meant to be a permanent solution but the patch is kept tidy in one place and shouldn't add maintenance cost until another solution is in place.\n. This is still an issue -- RCTBridge calls setUp from its initializer, which synchronously creates the executor. I'm not able to reopen GH issues but have updated the branch/diff.\n. Yeah, looks like it could be an iOS 7 issue although I'd expect the compiler to inline their values so it could be something else. What if you figure out what UIFontWeightRegular is equal to in iOS 8 and manually inline it on line 542?\nobjc\nUIKIT_EXTERN const CGFloat UIFontWeightUltraLight NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightThin NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightLight NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightRegular NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightMedium NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightSemibold NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightBold NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightHeavy NS_AVAILABLE_IOS(8_2);\nUIKIT_EXTERN const CGFloat UIFontWeightBlack NS_AVAILABLE_IOS(8_2);\n. Might be a red herring then since that checks only the SDK version at compile time.\n. Couldn't get a screenshot while pressing down so here is a video: https://gfycat.com/WelllitGaseousDolphin\n. Those are CSS properties. See https://facebook.github.io/react-native/docs/flexbox.html#content for the list of styles that React Native's layout system supports.\n. The list at https://facebook.github.io/react-native/docs/flexbox.html#content gives a quick overview. i also find reading the code to work really well.\n. Additionally, it is a feature of the style prop that you can pass it null/falsy values so you can write code like this:\njs\n<View style={someCondition && styles.conditionalStyle} />\nThe solution to detecting undeclared property access is to use a type checker like flow.\n. iOS 6 usage is really low (2% according to https://developer.apple.com/support/appstore/) and there were major changes to the UI and JavaScript environment from 6 to 7. To my knowledge none of Facebook's apps are targeting iOS 6 anymore so the biggest contributor to React Native is not going to be testing on iOS 6. So practically speaking while you might be able to get RN running on iOS 6 it might be a bit like pushing boulders uphill to keep it running as new versions of RN are constantly released.\n. The packager has been really slow after setting a couple of root directories even when it's hot. When I make a small change to one file and load the bundle in my browser, it takes about 6-7 seconds.\nMy hypothesis is that it's scanning deep into node_modules to see if there are any Haste directives (@amasad - would you know if this is the case?). I have some big devDependencies (gulp, coffeescript, etc.) and when I rm -rf node_modules I can now load a new bundle in less than a second. Could the packager stop traversing down the file system when it sees node_modules?\n. Is there ever a need to scan node_modules for @providesModule? I thought about it a bit and the only case I could think of was for react-native to be able to pull in some helper modules from react-tools. Either node_modules/react-tools could be whitelisted, or those files in question could just ship with react-native proper (they may already, I haven't checked recently).\n. @amasad I'm using up to https://github.com/facebook/react-native/commit/08b48cafb3785f70c51f07d46cf36004721b9f44 which is fairly recent.\nSome setting to limit searching under node_modules sounds right (probably a whitelist, with support for \"*\" if FB needs it). Node/CommonJS-style path resolution still needs to search in node_modules but it should be much faster as you mentioned. It's just the Haste parsing that I think could be worth pruning.\n. It might end up involving a bunch of work but I imagine lazily building the graph would help a lot here and not involve caching (good call). Ex: since my root file (ExampleApp.js) doesn't transitively require node_modules/gulp, the packager never need to scan those files. I could also try moving my devDependencies into another directory for now, just to hide them from the packager.\n. It's fast for me now actually. I'm not sure what changed, other than today's commits (only https://github.com/facebook/react-native/commit/c32d9bc423dd1eca10302c3583729ed981ee963d#diff-e5979e1e4c8039af168a3114bcbac5ffL67 looks related...).\n. 0.5.0-rc includes accessibility improvements: https://github.com/facebook/react-native/releases/tag/v0.5.0-rc\nCan someone familiar with accessibility report whether the improvements are good enough and open up more specific issues if there are areas that still need to be addressed?\n. Send a PR to https://github.com/facebook/css-layout, which is the layout engine that React Native uses.\n. There's a new group (public) at https://www.facebook.com/groups/586400221495560. \n. Thanks for reading through it. I guess there are two topics at hand -- resource management and the event loop (which could enable synchronous modules which enables using the GC). Resource management actually seems like more of a priority since apps need to be able to work with images, etc. while some of the more advanced event loop features enable higher-order infra. It'd be great if a small event loop API could help solve some resource management issues though.\nOne real-world scenario dealing with resource management that doesn't quite fit a component life cycle is an image uploader, where you want to upload an image taken by the camera that hasn't been saved to the camera roll. Since the network could be flaky and require retry logic or the upload could just be slow, you might want the upload task to outlive the lifetime of the camera component. And the NSData or UIImage being uploaded should live for as long as there's a reference to it (components may reference it, as may the uploader module).\nThe uploader could tell the native code to decrement a reference count when the image has been uploaded (or if the upload failed and the uploader decides not to retry). I believe this would achieve the correct behavior and can work over the batched message queue. This is essentially pre-ARC Manual Retain Release though and in this case leaks could lead to OOM since we're working with images and other heavier resources. It should be possible to let the GC take care of this so I'd like to see experiments in that direction so we can understand the tradeoffs.\n. Try this on your parent component:\nstyle={{\n    justifyContent: 'center',\n    alignItems: 'center',\n  }}\nNo need for 'flex: 1' on the image -- that just sets its size.\n. It's expected that the text overlays the image (I assume that's what you want because you're nesting it). I would expect the transparent background color to take effect though.\n. This would be really good for major releases that aren't drop-in upgrades for the old version. See hapi as an example of a project that does this well.\n. You need to keep the imageset and the real filenames in sync; see #365. Perhaps write a small tool and share it on GitHub?\n. Chiming in - the viewport dimensions would be useful when showing things like global banners (e.g. when you get a message in Messenger if you're in the app but not in the message's thread). Banners are actually a great use case for controlling multiple RCTRootViews from one JS environment since they can't be implemented purely in React.\nThat said most of the time I think you want to know the size of the RCTRootView since that's the area that React gets to work with, in the same way that document.body.clientWidth/clientHeight are usually more useful than window.screen.availWidth/availHeight.\nIn the common case where the RCTRootView takes up the entire screen anyway, the RCTRootView's size is equal to the viewport's. Active phone calls / tethering / map apps that grow the status bar might cause that not always to be true, though, so that's partly why knowing the RCTRootView size is useful. I like @nicklockwood's suggestion to send an event whenever the RCTRootView's frame changes (from layoutSubviews / KVO on layer.bounds?). \n. @vjeux couldn't core npm install it like react-timer-mixin?\n. We're in a improving state: react-native-viewport is available on npm for getting the screen dimensions and listening for rotation. For individual views there's now onLayout (although it's too bad composite components don't have it).\n. Docs are much better now.\n. the pattern I use is to treat these states as eventually consistent in my application code. implementing the JS portion of the module then involves three parts:\n1. passing the initial value from Obj-C to JS when the module is first -[init]'d. this ensures that JS always has access to a state value (e.g. app state, device orientation, screen size) even if it is potentially stale.\n2. subscribing to updates from Obj-C via the DeviceEventEmitter. this runs the first time the JS module is set up.\n3. asynchronously fetching the latest value from Obj-C. this also runs the first time the JS module is set up.\nthe race condition is still there, but it usually isn't an issue as long as the JS app is guaranteed to catch up to the native state. when the race condition is an issue (e.g. you need to make some method calls that only make sense in certain states) then I write a bit of Obj-C that handles the native notifications synchronously.\n. It is possible but not implemented and AFAIK no one is working on it. You could expose a prop like leftButtonSystemIcon that takes the name of an icon, and on the Obj-C side display the corresponding icon.\n. You can also tell uglify to do constant replacement. It would need a little work since it changes __DEV__ = false into false = false but would otherwise fit well with the current pipeline.\n. @frantic is right, workspaces should be checked in. Adding xcuserdata makes sense though. Here's a template for ideas:\n.DS_Store\n*/build/*\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata\nprofile\n*.moved-aside\nDerivedData\n.idea/\n*.hmap\n*.xccheckout\n. could you tell Closure that \"require\" is an extern? https://developers.google.com/closure/compiler/docs/api-tutorial3#externs\n. +1\n. The work on #235 is going to pave the way for a React Native ecosystem where different packages can share the same dependencies. For example React Core will probably have a dependency on pop for POPAnimation support, and someone else might publish a (hypothetical) ReverberatingSound library that uses pop's spring dynamics. The two modules must share the same copy of pop for the app to compile, and they may also have different version requirements (ex: React Core might need pop >= 1.0.7 while ReverberatingSound might only need pop ~1.0), which #235 will address. As facebook publishes more mobile infrastructure and projects line up (ex: React Native on ComponentKit with pop) I believe this is the direction to look in.\n. closing in favor of #509 w/suggested changes\n. Does Instruments provide any insight into what's leaking? (specifically wondering if the problem is in JS or Obj-C)\n. It does have infinite scrolling (look at the data source code) but a refresh control is separate. ++@colinramsay, it's all open source so build what you need.\n. On a related note I was thinking it could be good to include 'pod install' as part of the integration tests especially if not a lot of people at facebook are actively using the podspec.\n. @vjeux it works, you just need to implement setNativeProps I believe. https://github.com/facebook/react-native/issues/97 might be a better fix.\n. Can this be closed out Friday too?\n. You could try to pull in #508 and #285 and optionally #261. The current master branch doesn't handle cocoapods very well but once something like a scalable module system (#235) is built out things should get a lot better.\n. To summarize what's been working:\n- Make sure React Native is up to date\n- Make sure the RCTImage project is linked\n- Use PNGs. Make sure to use .png extension.\n- Name your image files the same as the imageset in Xcode's Images.xcassets to reduce any confusion. Ex: your image should be named \"foo.png\" and Xcode should display the image as \"foo\".\n- Require the image with require('image!foo')\n- Restart the packager after all of this just to be sure.\n. Sweet. I was working on getting local animated GIFs working yesterday and ran into the PNG-only issue so this is exciting to see.\n. +1 to shipping it on iOS. Seems ok for Android to fall back to left or center alignment since the app is still usable, sort of like how older browsers just drop rules they don't understand on the web until one day the property is supported.\n. You might want to look into https://ngrok.com/. It lets you set up a URL that any computer on the internet can access and will forward the request to your local machine.\n. Could you generalize this so it's programmatically configurable and reads from the Info.plist by default but doesn't require it? Ex: [RCTConfiguration sharedConfiguration][@\"scriptHost\"] = ipAddress.\n. Have you tried using row IDs and passing them into dataSource.cloneWithRows as the second argument?\n. Something to consider - should this be a property of the navigator's style?\n<Navigator style={{transitionBackgroundColor: '#000'}} />\n. Another thought: this would be helpful as documentation e.g. to easily be able to see what methods UIManager supports without reading the .m file.\n. If it's not yet supported (I don't think it is) the quickest path forward is to submit a PR.\n. @drkibitz yes, if you publish e.g. a keyboard component that has some native code, it currently has to be distributed as a static library. This means you can't write helper code in Swift without splitting it out into a separate framework.\nSo far I've found RCT_EXPORT easy to type and maintain so it would be nice to keep it or something very similar. Maybe it (or a new macro) could generate dummy methods that RCTBridge knows to scan for?\n. @a2 That sounds really great. One of the practical benefits of framework support is that you can use CocoaPods containing Swift -- if a pure-ObjC pod (e.g. a React module) depends on a pod with Swift code (e.g. Alamofire, whatever) then CocoaPods builds both as frameworks.\n. @imaffett OK. I've added the \"good first task\" tag to encourage contributions from other devs in the community =)\n. This looks great and I think it makes the right tradeoffs. You might want to prefix the codegen'd methods with rct_ which is Apple's suggested convention for private methods, although in practice I don't see name collisions happening.\nA longer-term thing to think about is Swift support... since Swift can use the Objective-C runtime API it should be possible to dynamically add the getViewPropDef_* methods but there isn't a way to do it with a macro. Just something to keep in mind, but it feels like there's a path forward to accommodate Swift one day.\n. @bhosmer my directory structure looks like:\n.\n\u251c\u2500\u2500 react-native (a git submodule)\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .flowconfig\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 <other react files>\n\u2514\u2500\u2500 App\n    \u251c\u2500\u2500 React\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 .flowconfig\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 <other app JS>\n    \u2514\u2500\u2500 <other app files>\nI run flow from App/React, and in App/React/.flowconfig I've essentially inlined react-native's .flowconfig (with the relative paths updated appropriately), since flow didn't seem to do this automatically (https://github.com/facebook/flow/issues/308).\n```\n[ignore]\n./react-native/Examples/.\nImported from react-native\nWe fork some components by platform.\n./.web.js\n./.android.js\nSome modules have their own node_modules with overlap\n./node_modules/node-haste/.\nIgnore react-tools where there are overlaps, but don't ignore anything that\nreact-native relies on\n./node_modules/react-tools/src/vendor/core/ExecutionEnvironment.js\n./node_modules/react-tools/src/browser/eventPlugins/ResponderEventPlugin.js\n./node_modules/react-tools/src/browser/ui/React.js\n./node_modules/react-tools/src/core/ReactInstanceHandles.js\n.*/node_modules/react-tools/src/event/EventPropagators.js\nIgnore jest\n./react-native/node_modules/jest-cli/.\nIgnore Website\n./website/.\n[include]\n../../react-native  # <----  I think the issue lies somewhere here \n[libs]\nImported from react-native\n../../react-native/Libraries/react-native/react-native-interface.js\n[options]\nmodule.system=haste\n```\n. You're right. I was looking at propTypes and it wasn't there but I see it in render(). \n. For single-line text fields, the onSubmitEditing handler (or similar) should suffice. What is missing from it to let you solve this use case?\n. @dvdhsu - there are a good number of cases where you might want the Next button to do something other than go to the next text field. For example you might want to transition to the next screen, or focus the next text field that doesn't yet have valid input (ex: if the user filled them out out-of-order).\nFor the use case you mentioned: if I understand it correctly, to move to the next field you could get refs to all of the text fields and then call this.refs[desiredTextField].focus(). This is pretty lightweight and opens the opportunity for custom logic like skipping over certain fields, etc.\n. The call site is in my app's code. I create the RCTBridge with this new initializer method, and pass the bridge into the RCTRootView.\n\nIf you have an use case for that, I don't see any problem in having it, but please, create another initializer so we don't need to go through all the codebase adding a Nil param.\n\nI can do this -- are there are a lot of places in the FB codebase that create RCTBridge objects though? (I was thinking most of the time the bridge would be created by RCTRootView except in a few custom cases.)\n\nI also think you should assign it to _globalExecutorClass, otherwise your executor will get erased when you try debugging your app.\n\nI'll fix that, thanks for the catch. I am thinking to add another ivar though (maybe _debugExecutorClass?), since it might be surprising that the _globalExecutorClass is set, especially if you have two RCTBridge objects with different executor classes for example.\n. - Added debugExecutorClass\n- Added convenience initializer that passes in the default classes (RCTContextExecutor and RCTWebSocketExecutor)\n- Removed _globalExecutorClass\n. Thinking about this some more, I think executorClass and debugExecutorClass should be replaced by executorBlock and debugExecutorBlock. This faciliates using the V8 debugger on the phone:\nobjc\ndebugExecutorBlock: ^{\n  return [[RCTWebSocketExecutor alloc] initWithURL:proxyURLWithMacBookHost];\n}\n. The custom debug executor is useful for configuring the hostname of the V8 debugger proxy (e.g. debugging on phone). I'll look into updating RCTDevMenu.\n. hey @tadeuzagallo, I got this working with RCTDevMenu in a simpler way without a separate debugExecutor.\nThere's a simple interface called RCTJavaScriptExecutorSource that you can optionally pass to the RCTBridge constructor. The RCTDevMenu and the keyboard shortcut handlers tell the RCTJavaScriptExecutorSource to create different types of executors (UIWebView, WebSocket, etc) and reload the bridge. The code is backwards compatible so existing users of RCTRootView and RCTBridge should not have to update their code.\n. @nicklockwood - i agree about the maintenance upkeep. I could make a little script that adds all the headers under Base and Executors, and then have a manually curated list of headers under Views (e.g. the categories).\n. @nicklockwood - there is now a little bash script that generates the umbrella header that pulls in Base+Executors and some headers I handpicked from Views.\nTo reduce the chance of breakage (specifically removing/renaming a header and not removing it from the umbrella - although I imagine codemod/git grep would pick up the change anyway), I'll update the example projects to use the umbrella header if this looks good to you.\n. This is awesome, love that it's so simple.\n. Closing this, the default makes sense for link buttons. \n. fair\n. There should probably be an entry under the podspec for LinkingIOS.\nI think react diverges from the convention of shipping everything in the default spec because most apps won't use anything, and there are modules like adsupport that should be opt in.\n. There should probably be an entry under the podspec for LinkingIOS.\nI think react diverges from the convention of shipping everything in the default spec because most apps won't use anything, and there are modules like adsupport that should be opt in.\n. Closing this since the answer is: most apps don't want to pay the cost of pulling in all the subspecs, so pick and choose the subspecs that you need.\n. Please send a PR that adds a LinkingIOS subspec -- you shouldn't have to fork in this case.\nMy general view was that what is core and what isn't will differ between apps and there may be superior linking solutions that emerge. It is very early to say what is \"core\" and what isn't. At the moment \"core\" mostly means \"something that someone at Facebook wrote\" and happens to be in this repo because it's simple to sync code that way. A very reasonable outcome would be for the ecosystem to grow like npm's where node tries to ship with a small stdlib and encourages development with npm.\nAnyway that doesn't mean you should have to fork just to use LinkingIOS so I'm pretty sure a PR to add a subspec will be accepted.\n. Cool -- thanks so much!\n. The window is probably affecting the responder chain. Is your modal window the key window?\n. cc @sahrens this might be related to the AnimationExperimental rename.\n. cc @sahrens this might be related to the AnimationExperimental rename.\n. I've been using this for nav bar buttons and it's pretty helpful to approximate UIKit's behavior. Any takers?\n. cc @vjeux and @ericvicenti since this is most useful for nav bar buttons\n. Fixed in 0686b0147\n. @jedt, give the scroll view a contentInset of {bottom:49} or however tall your tab bar is, and the scrolling behavior should be fixed.\n. @jedt, give the scroll view a contentInset of {bottom:49} or however tall your tab bar is, and the scrolling behavior should be fixed.\n. Your most recent code snippet looks right. This should be handled at runtime and not by the compiler as long as you're using the iOS 8 SDK. \n. Your most recent code snippet looks right. This should be handled at runtime and not by the compiler as long as you're using the iOS 8 SDK. \n. Can you verify with a breakpoint that [[UIApplication sharedApplication] respondsToSelector:@selector(registerUserNotificationSettings:)] returns true on iOS 7? I wouldn't expect it to which is what's surprising to me.\n. Can you verify with a breakpoint that [[UIApplication sharedApplication] respondsToSelector:@selector(registerUserNotificationSettings:)] returns true on iOS 7? I wouldn't expect it to which is what's surprising to me.\n. The ViewManager always creates n+1 UIViews to help with React's diffing technique. Is that what you are referring to?\n. this.getNodeHandle() gives you the react tag.\n. You should be able to use the node handle to go through the UIManager and get the underlying shadow view from Obj-C. Take a look at the the Obj-C side of the UIManager as a starting point.\n. The new way to get the node handle is with React.findNodeHandle(componentReference). You can use a uiBlock in a native module to get access to a lookup map from node handles to native views if needed. Closing this out.\n. +1, this is one of those things that native does much better than web and is really well-suited to shadow-thread computation\n. After #652 is updated this will be easier to do (won't have to modify React's source).\n. Thanks @nicklockwood (#792)\n. Does pointerEvents=\"none\" work for you?\n. I submitted #652 a couple days ago which lets you specify the primary executor. So one thing you could do is create a bridge that defaults to the WebSocketExecutor:\nobjc\n[[RCTBridge alloc] initWithBundlePath:bundlePath\n                   moduleProvider:block\n                    launchOptions:launchOptions\n                    executorBlock:^{\n                 Class executorClass = NSClassFromString(@\"RCTWebSocketExecutor\");\n                 if (!executorClass) {\n                   RCTLogError(@\"WebSocket debugger is not available. Did you forget to include RCTWebSocketExecutor?\");\n                   executorClass = [RCTContextExecutor class];\n                 }\n                 return [[executorClass alloc] init];\n               }\n               debugExecutorBlock:nil];\nOne thing that's nice about this approach is you can configure the WebSocketExecutor to support using the Chrome debugger while running the app on your phone.\n. I'll start with some background to paint a complete picture: I'm building \"higher-order\" scroll views that have some extra functionality. For example, an infinite scroll view invokes a callback to fetch more data when the scroll position approaches the end. This could look like:\n``` js\nclass InfiniteScrollView extends React.Component {\n  scrollTo(destY, destX) {\n    this.refs.scrollView.scrollTo(destY, destX);\n  }\nrender() {\n    return (\n       {\n          if (this._shouldLoadMoreContent(event)) {\n            this.props.onLoadMore();\n          }\n        }}>\n        {this.props.children}\n      \n    );\n  }\n}\n// * this could be a mixin, but there are other advanced scroll views that require\n// a new component class\n```\nNow I'd like to use a different kind of scroll view, like a ListView, ReversedScrollView, etc. so I add a prop like this.props.scrollViewClass and use it to create the component returned from render(). This works well and so far I'm happy with the flexibility from this style of composition.\nThe one snag is implementing methods like getInnerViewNode, scrollTo, and scrollWithoutAnimationTo. In the core classes, these methods are implemented only on ScrollView, while ListView defines getScrollResponder() which returns the underlying ScrollView. So I came up with two approaches:\n1. Implement getScrollResponder() on every ScrollView-like component class. This lets you get the underlying ScrollView and then you can call scrollTo, etc. on it. By adding this method to ScrollView itself, you can indiscriminately call scrollComponent.getScrollResponder().scrollTo(0, 0) regardless of the actual type of the scrollable component. This PR implements this approach.\n2. Implement scrollTo, scrollWithoutAnimationTo, and getInnerViewNode on every ScrollView-like component class. This makes it convenient to call scrollComponent.scrollTo(0, 0) regardless of the scroll component's type. This is implemented in #755.\nI prefer the first approach because if ScrollView's methods are added/removed/renamed, the code for all other scrollable components doesn't need to be updated. It's a little more verbose with the getScrollResponder() call but I believe that can be papered over with a mixin.\njs\nScrollableMixin = {\n  scrollTo(destY, destX) {\n    invariant(this.getScrollResponder, 'Scrollable components must implement getScrollResponder');\n    this.getScrollResponder().scrollTo(destY, destX);\n  }\n};\n. @vjeux good idea with the function. Just wondering, is there a reason the prop takes a function instead of a component instance directly? Maybe how the ref owner is determined?\n. Thought about it some more - the function also lets us do nested composition e.g.\njs\n<ScrollViewA\n  renderScrollView={() =>\n    <ScrollViewB renderScrollView={() => <ScrollViewC/ >} />\n  }\n/>\n. yeah. this seems simple and reasonable.\n. cc @vjeux, this implements the composition prop discussed in #766\n. It could be better to name the prop renderScrollComponent or renderScrollableView since it's OK to return components that aren't exactly <ScrollView>. Is renderScrollView confusing?\n. catping\n. @frantic: my RefreshableScrollView (not yet open-sourced) doesn't modify the header indices or children so composing it with a ListView works. You may actually want to look at using it when it is open-source since it handles more edge cases and features than I believe the FB implementation does. Along with #766 this composition API lets me create reversed, refreshable, infinite-scroll list views for example. \n. Yep, my plan is to share it in the near future once it is easy to use out of the box, since I am still working on the default spinner component. I will probably publish it to npm since it is pure JS code; it will be as simple as npm install react-native-refreshable-scroll-view and no need to add code to core.\n. Renamed renderScrollView to renderScrollComponent. Left the isRequired for now because it tells Flow that the prop is non-nullable.\n. Also, if FB has codemod regexes for the upgrade it'd be helpful to get those.\n. If this looks good I'll send another PR to update the docs once this lands.\n. Renaming it to RCT_REMAP_METHOD is alright with me. I had a need for this in a database module where the Obj-C selectors looked like:\nobjc\n- (void)executeQuery:(NSString *)query parameterDictionary:(NSDictionary *)parameters successCallback:...;\n- (void)executeQuery:(NSString *)query argumentsArray:(NSArray *)array successCallback:...;\nThese are exported to JS as executeQueryWithParameters and executeQueryWithArgumentArray respectively. I was much more satisified with named exports than awkwardly writing\nobjc\n- (void)executeQueryWithParameters:(NSString *)query parameterDictionary:(NSDictionary *)parameters successCallback:...\n. Merged in https://github.com/facebook/react-native/commit/862d9fba09046b6ca82bcc75197de69cbfb8fa41.\n. This got fixed awhile ago, thanks\n. On Flow's side would it be possible to transitively include .flowconfigs of [include]'d directories and require()'d npm packages? It would let projects customize their .flowconfig files while keeping an up-to-date reference to React Native's .flowconfig and other projects' .flowconfig files if Flow gains more adoption. I opened an issue over at https://github.com/facebook/flow/issues/308 if that's a better place to make progress.\n. > the project has its own copy of everything\nYeah. It would be nice if individual projects could each import one React Native .flowconfig into each of their own .flowconfig files.\n. This looks helpful, can someone help merge it in?\n. I originally posted in the React repo since Touchable.js is vendored from there. It applies to both projects so would be good to discuss it here too.\n. Oh ok. For some reason I thought those files were from React proper.\n. You could try resetting the simulator which sometimes fixes network issues: http://stackoverflow.com/questions/2763733/how-to-reset-iphone-simulator. Could there be something wrong with the URL or your setup (ex: try not using the Chrome debugger, make sure all URLs have hosts publicly accessible from the internet)?\n. You could try resetting the simulator which sometimes fixes network issues: http://stackoverflow.com/questions/2763733/how-to-reset-iphone-simulator. Could there be something wrong with the URL or your setup (ex: try not using the Chrome debugger, make sure all URLs have hosts publicly accessible from the internet)?\n. It's working in the UIExplorer.\n. You probably want to layout the React views when the root view / native view controller roots are resized and I expect the end effect will look quite nice.\nAgree with @drkibitz that I wouldn't want to blow away the entire app when the user rotates their device and in some ways this is similar to crashing if the user loses their state. If this behavior is ok for your app I think it'd be better to keep it in your own app's code. \n. Makes sense, thanks for the clarification.\n. Makes sense, thanks for the clarification.\n. There's something intuitive and familiar about grouping the image's intrinsic dimensions with its source. I believe the packager now includes the width and height of local images when you do require('image!icon.png') so a lot of existing code would be able to take advantage of this feature as-is.\n. There's something intuitive and familiar about grouping the image's intrinsic dimensions with its source. I believe the packager now includes the width and height of local images when you do require('image!icon.png') so a lot of existing code would be able to take advantage of this feature as-is.\n. In master a new style property called aspectRatio was recently added. I haven't tried it yet but believe it could be super useful for images incl. this issue.. You may have been developing with the Chrome debugger or UIWebView debugger which enforce CORS, so resetting the simulator state may have reset that :)\n. @brentvatne this is a simple markup tweak - since you've been writing docs a lot recently could you take a look and merge if it looks good to you?\n. @sahrens is your fix to make the polyfilled methods non-enumerable? That's the cleanest solution I had in mind since RN is used only in ES5+ environments.\n. Got it - that fix seems right too. For the Array.prototype polyfill I think we want to use Object.defineProperty to add the polyfilled methods as non-enumerable properties. I imagine this was not done consciously for www so is it possible for www and RN to have different copies of the polyfill?\n. > Any other way to start a development server?\nRun packager/packager.sh, and tell it the where your app JS and images are with --root and --assetRoots respectively.\nCan you also paste the npm error here? \n. You should clone your original data source, this time with all of the original data minus the item you want to remove. Then pass that data source into ListView during the next render() pass. Look at the Movies example to learn more about dynamic Lists.\n. The packager uses two methods to look up modules. The first is based on docblock headers: if you write \"@providesModule X\" in the first docblock this enables require('X'). The other method is Node's resolution.\nTo answer your question, you are seeing the first type of module resolution. Grep for @providesModule moduleName and I think you'll find the source of modules you're looking for.\n. @lzyy what is your question?\n. When you run the packager and load a bundle, it scans all the files for @providesModule and adds them to the dependency graph: https://github.com/facebook/react-native/blob/4673dca0b0941f9f8a61970b0d0829807f26f9bc/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js#L448\n. Could you put the NavigatorIOS inside the TabBarIOS.Item? ListView (and its underlying ScrollView) have a prop to automatically adjusts its content insets, which is kind of like the padding for scrollable content and what starts the scroll view off below the nav bar. The thing is that automatic inset adjustment might only look at the parent view controller (disclaimer: check the code to be sure) so putting the tab bar in the nav bar might mix things up compared to the other way around. Generally speaking it's much more common to put a nav in a tab than vice versa so I would give that a shot; just a thought.\n. The simplest solution is probably to do what you were doing and set the top/paddingTop/contentInset (last one for scroll views, top should be 64 and bottom is 49 for iOS's nav and tab bars IIRC. Also set automaticallyAdjustContentInsets to false).\n. It's not responsive but to my knowledge the nav bar is always 44pt + 20pt for the status bar on all devices (iOS 7 and up)\n. See #868, it's the deepDiffer's treating objects as arrays. \n. The color in this diff should be changed to match the system's #efeff4.\n. Compute the y offset from the content size and viewport size, and call scrollTo.\n. Look in the source code to learn how the UIManager.measureX methods are used. You can measure the scroll view and its content view. If you are using a ListView you will need to write your own ListView that measures the height of every single row to compute the content size.\n. @bdeezz, something like:\n``` js\nrender() {\n  return ;\n}\nonSomeEvent() {\n  this.refs.scrollView.scrollTo(0); // will scroll to the top at y-position 0\n}\n```\n. Something like peer dependencies (or whatever succeeds it) makes sense. I'll go out on a limb and say all of the React Native modules so far shouldn't specify react-native as a regular dependency. Even if React's native side correctly handles multiple copies of the JS side, it's important to keep the JS bundle small for boot times especially on an iPod touch or 4s.\nOne way React could guard against this would be to set a global flag when first loaded, and warn/throw if the flag is already set. \n. I believe so unless you've run npm dedupe. I haven't looked at an actual JS bundle to verify that though.\n. I believe you can also point CocoaPods at node_modules/react-native. I'm doing something like that.\n. @7ynk3r, that's correct. One of the recent updates to react renamed the pod subspec to RCTWebSocket.\n. For convenience it sounds like you can also turn off CORS (and maybe more - use at your own risk) by running Chrome with --disable-web-security. https://blog.nraboy.com/2014/08/bypass-cors-errors-testing-apis-locally/\n. I got this working in a crude way. First quit Chrome so none of its processes are running. I didn't find a way to apply the CLI switch to a single tab. Then run:\n\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\" --disable-web-security\nnote: a malicious site now can get your gmail, facebook, bank account, etc if you are logged in, so after you're done be sure to restart Chrome. also why I think it's better just to set up CORS if you own the endpoint or write a proxy.\nComment out the line in InitializeJavaScriptAppEngine.js mentioned above in this thread and then when you enable Chrome debugging in an app you get this:\n\nIt seems useful to track down issues like too many network requests or forgetting to gzip the responses but it won't help with debugging issues with Cocoa's networking stack that users are running. Also for more than basic HTTP requests (ex: NSURLSession) then advanced apps won't use the XMLHttpRequest polyfill. So, I think it's a good tool to have but Charles Proxy or getting PonyDebugger hooked up looks more fruitful in the longer term.\n. This is kind of tricky to do with React's programming model but I guess I would use an onScroll handler to track the current contentOffset. When the keyboard opens, increase the bottom contentInset and then call scrollTo(trackedContentOffset + keyboardHeight). \n. Something like this.refs.scrollView.scrollTo. The React documentation talks about refs and is a good place to learn if this is the first time you're using them.\n. @josebalius: I'm not aware of what could have caused this slow down. Doesn't seem good though - can you open a new issue with more detail?\n. =)\n. Could you simply use a global singleton as you mentioned?\n. @nicklockwood - couldn't you achieve the same with a global JS object, which has the same scope and life cycle as a bridge module? You'd then get a synchronous API and skip marshalling data across the bridge. I could be missing something. The entire DataStore.js could be /** @providesModule DataStore */, no code at all maybe.\n. @iq-dot could you explain what you mean when you say \"view change\"?\n. @iq-dot that DataStore module is what I had in mind. Two different components in the same React app will get the same copy of the module so they can use it to share data with each other.\nIt sounds like you are using a UITabBarController and multiple RCTRootViews if you are unable to share data between screens. In this case you could make all the root views share the same bridge, and then the RCTRootViews will share modules.\n. See issue #288 and PR #652.\n. See issue #288 and PR #652.\n. I don't think there's an equivalent right now but two suggestions:\n- could you use Unicode escapes directly \\u00AE?\n- or could you use https://www.npmjs.com/package/html-entities ?\n. Try grabbing the \"buffer\" module from npm which is built on typed arrays and provides a mostly compatible API.\n. Nice find...\nHave you looked into the Obj-C API? I believe it would slim the code down to 1/4 its size, partly because it's more succinct and also because you could write [module invokeMethod:methodName withArguments:arguments]. (This would also fix what I think is a bug in your diff where thisObject is missing or referring to the global object instead of the module object.)\n. Left some comments on the diff regarding the thisObject bug.\nI took a look at the issue mentioning memory corruption and it sounded like the problem was with JSExport or perhaps the wrapper layer between Obj-C and JS objects. There's also some chance that the issue was due to bridged native objects getting freed at non-deterministic times if they weren't registered with the GC (just a guess). For this code at hand the Obj-C layer is straightforward without JSExport magic so I expect it not to have strange bugs.\n. > As for the Objective-C API, it would presumably work just fine, but it'll be less performant due to how JSC internally maps objects and stuff.\nKeeping the NSObject -> JSON -> JSValue marshalling, the Obj-C API would perform the same work as the C API plus Obj-C's message passing. I think it's a good tradeoff, given how much more easily the code reads.\n. Try putting flex: 1 on growableItem. The value of the flex property specifies the ratio at which it grows relative to its siblings.\n. This was fixed in https://github.com/facebook/react-native/commit/b99744a164f96be2989d686495a1c7d1afac737a#diff-e15318f48b6447f2d9936c5e047d882fR194\n. The RCTRootView has a property called initialProperties for the props of the root component. That said embedding RCTRootViews in cells might perform poorly if you have more than 2-3 cells on the screen though I haven't tried it.\n. >  But how to access the initialProperties in JS land?\nThe initialProperties are passed in as the props of your root React component.\nIt's good that you are sharing a bridge. I was thinking there would be noticeable latency when rendering your cells (have to render an entire React hierarchy + create all of the initial UIViews) so you might see flickering if you were to quickly scroll through a list of cells.\n. @opolyo01 two things to check - are you using the latest version of react? and what does this print for you? NSLog(DEBUG ? @\"DEBUG\" : @\"RELEASE\"); (or maybe it doesn't compile because DEBUG is undefined depending on your settings)\n. In addition to the font sizes, we should expose the font family, weight, etc. since iOS uses subtly different flavors of Helvetica Neue. Basically the entire descriptor if possible.\n. Thanks for the tip about RCTSetLogFunction(). I want to build a sort of custom console for the RCTRootView so this sounds great to start.\n. Handling soft/hard exceptions with the exceptions manager works well for most cases. I think there are some errors that don't go through that code path but will open up separate issues and/or PRs for those when needed.\n. 1. To update React, update the version number of react-native in your your package.json file. To help with this you could run npm install -g npm-check-updates to install a helper script, and then run npm-check-updates -u inside of your project directory. Then run npm install to get the latest copy of React.\n2. You might need to run npm install in your project directory since it looks like you're missing dependencies. For testing my development copy of React, here's what I recommend:\na) Fork this git repo and clone the fork to your computer\nb) Create a new git branch and make your changes\nc) In your iOS project, change the value of the \"react-native\" dependency from a version number to the path of your local git repo. For example \"react-native\": \"~/Code/react-native\".\nd) Run npm install in your iOS project\ne) You should be able to run your project using your own copy of React\nf) Push your branch when you're done and submit a PR\n. require needs a string literal so the build tools can statically resolve the resources, as mentioned here https://facebook.github.io/react-native/docs/image.html#static-assets.\nPerhaps the packager should warn if it finds require() calls that it can't resolve, although this might be too noisy when taking 3rd-party packages into account. Maybe a practical balance is just to warn for custom! resources. cc @amasad \nIf you have hundreds of images, I recommend writing a script / editor macro that generates a large lookup table of image sources. For example:\nvar imageSources = {\n  '01': require('image!weather_ic_01'),\n  '02': require('image!weather_ic_02'),\n  '03': require('image!weather_ic_03'),\n  ...\n};\nThen you can write <Image source={imageSources['01']} />.\n. I believe you could write this without needing to make changes to the core project by writing a scene config that mirrors FloatFromRight and providing it to the Navigator.\n. Are you invoking the Obj-C block more than once? That would cause this error.\n. You can't and will have to fire events though DeviceEventEmitter instead (grep the native module docs for examples).\n. This might be possible if the callbacks are NSObjects instead of blocks, and in -[dealloc] they tell JS to free the corresponding JS closure. My sense is this feature is desirable but the implementation might feel a bit sketchy. Also building it on Android would require a different bag of tricks but might be possible with WeakReferences or finalize().\n. This is a different problem with the layout engine.\n. Check out RCTActionSheet/ActionSheetIOS\n. Wrap the elements in <TouchableWithoutFeedback onPress={...}>.\n. Try wrapping all the Texts in a View.\n. Sounds good.\n. Try always returning true from rowHasChanged. Better solution is not to access this.state/this.props/this.context/any non-constant instance variable or global variable from renderRow, and instead pass data through only the data source. The docs should probably mention this as a rule of thumb since there have been a couple similar issues opened.\n. Good point, you need to force a data source update too. Option 3 of cloning a data source with the same content should provide the desired behavior.\nFor the API it would be easier if hasRowChanged were replaced with shouldComponentUpdate plus component pooling to avoid allocations. I haven't thought through the details but I think we want a React-style API instead of this UIKit-inspired one.\n. If Cmd-R is not working there might be a problem with the first responder -- make the root view the first responder.\nIf Cmd-R is working but Cmd-D doesn't then I believe the issue is you need to pull in the web socket debugger subspec.\n. https://github.com/facebook/react-native/blob/master/React.podspec#L77\n. The short answer is no, the NavigatorIOS component doesn't support that. One solution is to separate the view code from the view controller, follow the React Native documentation that shows how to create a JS class for your new native view class, and then display that directly. But... you lose a lot of your view controller logic that way, so you could try embedding the view controller in a view, and then bridging that to JS, but you have to set up view controller containment in a fragile way. Basically it's possible but you're on your own. For RN it's really much better to rewrite with React.\n. What I did was patch in #1154, then get the scene component's ref in onItemRef(ref, index, route) and add it as a field of my route object, and then in onDidFocus I called route.sceneRef.componentDidMount?().\n. i guess so - high cohesion between related pieces\n. 1. Oops. Yes I meant componentDidMount \ud83d\ude48\n2. The patch I linked to will make the Navigator pass the route to the onItemRef callback, so you can write:\n``` js\ntype Route = {\n  sceneRef?: ReactComponent;\n};\n {\n    route.sceneRef = ref;\n  }}\n  onDidFocus={(route) => {\n    route.sceneRef.componentDidFocus();\n  }}\n/>\n``\n. I agree there needs to be a better way of sending the \"componentDidFocus\" signal down the component hierarchy. This is especially important when you have nested Navigators, which the solution I offered does not solve.\n. I briefly went through the Ads Manager and all of the spinners I found were horizontally centered so I don't expect this diff to expect them. Also they were custom spinners so I don't think they even use this component. In the groups app there's a spinner on the home screen, also horizontally centered. The only places where this diff would have an effect is if the spinners were positioned next to other components.\n. You might not have the RCTAnimation library linked -- check in Xcode if your app includes it.\n. Looks like the C portion was merged in with https://github.com/frantic/react-native/commit/af921542b5f0be2a96f169cf397c530e4968a3f8 so this PR can be reduced to the JS change.\n. Got it. I believe the best way forward is to get your PR merged in the css-layout repo and then pull the changes over to react-native. The purpose of the signed source hash is to prevent modifications to the downstream project (react-native) without first making them upstream (css-layout).\n. New Layout.h/c were recently merged in https://github.com/facebook/react-native/pull/1165 so looking forward my recommendation is to first merge your PR into css-layout, then submit a PR here just updating react-native's copy of Layout.h/c, and the submit a last PR exposing alignContent to React views.\n. Dupe of #1186 \n. Currently you can't style the titles with NavigatorIOS but you can with Navigator.\n. The native side could generate entropy up front and send it to JS in advance but apps that don't use crypto would then always be paying that cost. Async crypto API or synchronous bridge are probably the answer.\n. For one module it'd be pretty cheap -- I'm more wary of the general pattern of doing potentially unnecessary work up front to work around the async bridge.\n. You want what's called the input accessory but it's not yet built yet.\n. You should implement/configure it in code. The keyboard is very manual on iOS. ScrollView has some prop that lets you auto-dismiss the keyboard that you might want to look into.\n. Closing this because of https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442.\n. This seems to have gone away with one of the two big updates. Possibly was related to the bridge and not AsyncStorage specifically.\n. :+1:\n. Merged in https://github.com/facebook/react-native/commit/92d7324f15196a8d17d51ab3e16bbec2bb85cf21#diff-9bdd6391cd866b37f84e7e9b5f276ff9R155\n. I use them for assertions when creating an RCTBridge and loading JS but would be OK with moving the property out of RCTBridge.h and into the RCTBatchedBridge@interface.\n.source={multiSourceObject}is OK too if it supports multiple URLs.\n. @iostalk please use the Subscribe button on the right of the page\n. The controlled prop is the semantically correct way to do things but it's not usable from a UX perspective. You can callsetNativePropson a ref to the TextInput to directly set its value if desired.\n. Most likely yes :) Want to send a PR?\n. It happened the first time after cleaning my build artifacts and running the app, and then I wasn't able to repro after that. It might not be related to the onLayout demo (that[RCTText drawRect:]line is suspect) - that was just the demo that triggered the crash. If you guys have crash logs for the Groups app / Ads Manager is it possible to grep them for RCTText?\n. Closing this because of https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442. Will reopen if the crash persists.\n. Please open an issue with an explanation of what you're looking for if this is still an issue for you.\n. AFAIK there is no changelog separate from the list of commit summaries.\n. The latest RC now has a change log, authored by @vjeux! https://github.com/facebook/react-native/releases/tag/v0.5.0-rc\n. I put it in-[invalidate]so that if you were to invalidate the bridge directly (when not reloading it), it would no longer be observing the reload events. Alternatively we could observe and just not handle the notification when the bridge is invalid, and remove the observer in-[dealloc]. The main thing is I wanted to fix a crash I was getting about the notification being sent to an unallocated RCTBridge instance.\n. Moved theremoveObservercall to dealloc. I added an isValid check to-[reload]because of the dispatch_async call:\n1. Bridge is invalid, receives reload notification, runs dispatch_async\n2. Bridge becomes valid before the dispatched block runs\n3. Block runs on main queue and invalidates the bridge again\n. You're right, the current code should be fine since there is no public API to make a bridge valid. My thinking is that programming defensively would make it easier to safely make changes to RCTBridge without causing extra reloads in apps that manage multiple bridges. (I want to support the use case of multiple RCTBridge instances, where the invalidation of one bridge can cause the invalidation of another with an explicit-[invalidate]` call.)\nOne slightly different issue I realized is that if you reload a bridge and invalidate it, it will still reload. Shouldn't invalidating a bridge cancel all operations related to the bridge? That is -[reload] should look like:\n``` objc\n- (void)reload\n{\n/*\n * AnyThread\n /\n  typeof(self) __weak weakSelf = self;\n  dispatch_async(dispatch_get_main_queue(), ^{\n    typeof(self) strongSelf = weakSelf;\n    if (!strongSelf || !strongSelf.isValid) {\n      return;\n    }\n[strongSelf invalidate];\n[strongSelf setUp];\n\n});\n}\n``\n. For this diff I reduced it just to theremoveObservercall. Will make a separate PR for reloading.\n. SetautomaticallyAdjustContentInsets={false}`. It's trying to accomodate the status bar. Alternatively you could give your scene 44px of top spacing instead of 64px.\n. RN pauses timers when the app is backgrounded. Not sure why this is -- it probably shouldn't do this at the infrastructure level.\n. @a2 that could be part of it since the run loop is driven by the display link. This for sure is part of the problem: https://github.com/facebook/react-native/blob/4eece85b6b96e4d43842b0b59ae1ad1f84e39b0f/React/Modules/RCTTiming.m#L89\n``` objc\n    for (NSString *name in @[UIApplicationWillResignActiveNotification,\n                             UIApplicationDidEnterBackgroundNotification,\n                             UIApplicationWillTerminateNotification]) {\n  [[NSNotificationCenter defaultCenter] addObserver:self\n                                           selector:@selector(stopTimers)\n                                               name:name\n                                             object:nil];\n}\n\n```\n. That's github being too clever. Try this: https://facebook.github.io/react-native/docs/navigator-comparison.html\n. https://github.com/facebook/react-native/pull/1232 provides a foundation to address this.\n. Could you please send a PR that fixes it? Look at website/layout/AutodocsLayout.js as a starting point.\n. This leaks memory on the JS side if the request times out and will also cause the JS app to hang forever if the callback isn't invoked. Better to cancel the timer if the location request invokes either its success or error callback.\n. @henter this looks good but can you please verify that the NSTimer is scheduled and invalidated on the same run loop (check with https://developer.apple.com/library/mac/documentation/CoreFoundation/Reference/CFRunLoopRef/index.html#//apple_ref/c/func/CFRunLoopGetCurrent)?\nApple says:\n\nyou should always call the invalidate method from the same thread on which the timer was installed\n\nIn -[RCTLocationRequest dealloc] you should check _timeoutTimer.valid since I believe it will crash the app if a timer is invalidated twice.\nAlso please squash your commits (git rebase -i) into one commit so that it's easier to review and bisect.\nOtherwise, this PR looks good to me.\n. Left one small comment if you want to update it but will mark this as accepted.\n. @vjeux if I say:\n@facebook-github-bot import\nwill it work? ;)\n. @facebook-github-bot import\n. Thanks @henter. This looks fine to me.\n. @sahrens My view on this is: covering up the retain cycle (if there is one) is bad and we should fix that. I do think the explicit -[invalidate] calls clarify the intent here, since we want to stop the timer whether or not the request is deallocated.\nI haven't profiled the code for leaks but it looks like there is a cycle between request.timer and timer.userInfo (which is the request object). A nice thing about calling -[NSTimer invalidate] is that it clears the strong references to the timer's target and userInfo properties, which should break the cycle.\n. @chirag04 I don't believe that is possible but if you believe it is can you write a demo with UIKit and we can figure out how to support it in react?\n. I believe if you return NO from textFieldShouldBeginEditing, the text field won't get focus. \n. @chirag04 are you on IRC? let's take this discussion out of this github issue.\n. One thing I'd like to discuss is the macro API. I'm not very satisfied with RCT_EXPORT_NULLARY_PROMISE, which exists solely to support selectors that don't have any parameters since adding the resolver & rejecter parameters is syntactically different than when adding them to selectors with parameters (method -> method:(RCTPromiseRejecterBlock)reject... vs. method:(id)arg -> method:(id)arg __rct_rejecter:(RCTPromiseRejecterBlock)reject...). Maybe someone here knows a macro trick that would let us consolidate the macros.\nAnother idea is to require the resolver & rejecter parameters to be manually declared. I like the simplicity of this despite the extra typing.\nobjc\nRCT_EXPORT_PROMISE(getValueAsync:(NSString *)key\n                        resolver:(RCTPromiseResolverBlock)resolve\n                        rejecter:(RCTPromiseRejecterBlock)reject)\n{\n}\n[If we were to go this route, I'd want to modify the JS bridge code that currently assumes the order of callbacks to be (onFail, onSucc) and change it to (onSucc, onFail) so that the Obj-C selectors take (resolve, reject) which matches the order of args when creating a JS Promise. I believe this is a safe change since the order isn't enforced and modules currently do whatever they want.]\n. Switched to the more explicit API for now. If we want implicit resolve/reject that can be added on top as another macro anyway. Usage now looks like:\nobjc\nRCT_EXPORT_PROMISE(getValueAsync:(NSString *)key\n                        resolver:(RCTPromiseResolver)resolve\n                        rejecter:(RCTPromiseRejecter)reject)\n{\n  resolve(@\"whatever\");\n}\nThe onFail and onSucc callbacks in the message queue have now been flipped to be (onSucc, onFail) to match (resolve, reject).\n. cc reviewers @nicklockwood @sahrens @vjeux \n. @nicklockwood this is my brief plan: remove RCT_EXPORT_PROMISE and the FunctionKind entry in the data segment. RCTBridge will infer that an RCT_EXPORT_METHOD method is a promise method if it sees RCTPromiseResolve/RejectBlock parameters in the signature. The JS side of the batched bridge can enforce that the last two arguments must be the resolver & rejecter. Does this plan earn the checkmark?\n. @nicklockwood params are now enforced in RCTBridge.m and the function kind is inferred from the parameters. added a test plan to the commit too.\n. I just noticed this wasn't imported into Differential - can someone summon the bot?\n. Thanks \ud83d\ude4c\ud83c\udffb\n. @nicklockwood could you take a look at the Obj-C side when you have a chance?\n. Nested RCTRootViews with their own RCTBridges is one feature I want to get working well. There are still a couple of issues with touch events and the keyboard shortcuts but it's mostly working.\nWill update the diff with your feedback.\n. I realized batchedUpdates needs to be inside of the guard. Update coming.\n. Looking some more, the current diff appears correct to me. Both batchedUpdate calls (the one in processBatch and the new one in _flushQueueUnguarded) run inside of the guard so errors should be handled correctly. \nIt's easy to reduce the batching to one batch by moving JSTimersExecution.callImmediates() inside of processBatch, but if RN's semantics are intended to match the web's in this case, I think we actually want two separate batchedUpdate calls so that the setImmediate handlers run after the native->JS calls. \n. @spicyj totally understand. What if they were process.nextTick calls? The motivation behind this diff is to batch the following updates:\n``` js\nvar resolve1, resolve2;\nnew Promise((resolve) => resolve1 = resolve).then(() => {\n  this.setState({...});\n});\nnew Promise((resolve) => resolve2 = resolve).then(() => {\n  this.setState({...});\n});\n// Resolve both promises in the same run of the event loop\nresolve1();\nresolve2();\n```\nPromises internally schedule a microtask (in RN this currently means setImmediate) but we want to batch the updates.\nOne catch is that if we use native Promises then they won't call setImmediate nor nextTick so maybe this diff isn't the best approach anyway. Feel free to take or reject it.\n. The bundle version should equal the version of React that you are using (don't mix versions).\n. That's because the JS interpreter doesn't support that feature of the language yet. Write ES5 or transform your code to ES5 before evaling it.\n. > Restricting a developer to only the functionality of the use cases we're able to conceive, rather than allowing for precise control feels incredibly limiting to me.\nI agree with this sentiment. One of the worst aspects of UIKit is that many of the APIs are narrow and prescriptive and you often can't easily compose features to get the effect you want. So +1 to having good defaults but also +1 to making it easy to configure behavior too. React and Facebook APIs generally do a good job of this so I'm not too concerned -- just don't want to see this go the way of UIKit.\n\nRelated to the delay prop and speaking of good defaults, how should the Touchable components expose animation durations? There are a couple: initial press down, press up, and also moving your finger in and out of the touch retention area. They might be totally orthogonal to this diff but there's some chance that the touch delay can be expressed using animatable values.\n. You probably need to pass forward all of the props. Try this:\njs\n <Navigator.NavigationBar {...this.props} routeMapper={NavigationBarRouteMapper} />\nAlso if NavigationBar has any instance methods on it that the Navigator calls, you will need to forward those calls.\n. You can override the props you don't want. For example if you add \"style=[customStyle]\" to the list of props it will override the forwarded style from {...this.props}.\n. cc @sahrens \n. I remember not getting layout events when I adjusted the top of a component but then getting them when I adjusted left or right, but now I'm seeing layout events when modifying top, as expected. I may have been doing it wrong or perhaps today's commits might have fixed something.\nWill reopen if I see this not fire when I expect it to.\n. Does your main file contain:\nAppRegistry.registerComponent('den', () => RootComponent);\n?\n. I have a question - what kind of native view does not have custom props? All the native views so far have special props to customize them.\n. I think there's a bug in that code, since pitchEnabled will not get verified (docs fix at https://github.com/facebook/react-native/pull/1271). However it's also bad to get a confusing error about undefined not being an object, so I think we should change verifyPropTypes to assert that component.propTypes is defined and throw a helpful error message when it's missing. \n. @kejinlu can you update this PR so that it asserts?\n. @vjeux won't this be a problem for users too? Ex: I run brew update && brew upgrade, which automatically gets the latest version of flow (may be used for other projects). As a practical proposal, what if the version in the config were a min version, so flow 0.10 and 0.11 would both be supported but not 0.9?\n. The code looks good to me.\n@vjeux can you merge this or reassign to the appropriate owner?\n. There's an NSNotification called RCTJavaScriptDidLoadNotification that runs once the JS has finished downloading you could listen to. Alternatively you could write a native module that lets JS tell ObjC when your React view has mounted.\n. I understand you want to improve perceived performance. Two things you could do (separately or together) are:\n1. Immediately push a view controller that displays a loading indicator. This way the UI immediately responds when the user taps the table cell and also lets them know the app is loading content and isn't stalled.\n2. Preload a hidden RCTRootView in advance, mounting an empty component just to set up the JS environment. When the user taps the table cell and you know the content to display, and the RCTRootView has successfully finished loading (known via the technique in my first post), send an event from native to JS with the data you want to display and show the RCTRootView.\n. @nicklockwood's suggestion is really clean and should work well. ++\n. @sebmck I believe it should work. RN deploys ES5... in theory with ES3 support RN could run in IE8 if we wanted. Something is going wrong with the transform that's causing Chrome to receive a maltransformed spread operator.\n@rogergl can you view the JS that is running in Chrome and see what the code around your Promise.all call looks like?\n. @rogergl, sorry - I meant the code that Chrome's web inspector shows under the Sources tab. Things like the arrow functions should be transformed into normal functions.\n. @rogergl: thanks. Looks like a transform bug.\nThe best workaround now is to write a manual array.concat call until the transform pipeline uses babel as @sahrens mentioned. \n. Babel landed in master: https://github.com/tadeuzagallo/react-native/commit/56d6ee3f0fadeb66aeb6cf9156c723759f48f617\n. Try setting the backgroundColor of your RCTRootView to [UIColor clearColor]\n(arguably RCTRootView should be transparent by default and the example projects should explicitly give it a white background cc @nicklockwood).\n@martco also another thing to note is that the system will hide your launch image as soon as the app has launched. So there will be nothing displayed in the period of time after the app has launched but before React has rendered.\n. The easiest solution would be set up your app it looks like:\n- View - the root of your app\n  - UIImage with your background\n  - RCTRootView that is transparent and covers your UIImage once loaded\n. Hah awesome!\n. I agree this is a bug. Timer events - except maybe rAF - should run in the background.\n. @nicklockwood the timers are also explicitly paused when the app is backgrounded https://github.com/facebook/react-native/issues/1218#issuecomment-102150599\nHaven't explored to see if the run loop is a confounding factor but the timer code is part of the problem for sure.\n. The React docs say they aren't supported but css-layout says they are: https://github.com/facebook/css-layout#supported-attributes. So I believe React's copy of css-layout needs to be updated and the new properties exposed to Views.\n. @vjeux can we get periodic updates of css-layout to keep it up-to-date ex: maybe the on-call does a weekly sync? We also wouldn't want css-layout to get too far ahead of React and accumulate features that need be reverted because they break apps in ways that are hard to fix.\n. OK, thanks for the update.\n. @cheunghy is react-native in your PATH? I don't see any failure -- those are just warnings that look unrelated to react-native. I'm going to close this since react-native-cli installs cleanly for me:\n```\nide:~$ nvm install 0.12\n################################################################## 100.0%\nNow using node v0.12.3 (npm v2.9.1)\nide:~$ npm install -g react-native-cli\n/Users/ide/.nvm/versions/node/v0.12.3/bin/react-native -> /Users/ide/.nvm/versions/node/v0.12.3/lib/node_modules/react-native-cli/index.js\nreact-native-cli@0.1.3 /Users/ide/.nvm/versions/node/v0.12.3/lib/node_modules/react-native-cli\nide:~$ which react-native\n/Users/ide/.nvm/versions/node/v0.12.3/bin/react-native\n```\n. Sounds like you want to install Node (or better yet io.js) with nvm or brew so you don't run into file permissions needing sudo everywhere.\n. You'll want to link the new RCTWebSocket library too so that you get back the Chrome debugger and the new WS polyfill. This probably should have been mentioned in the release notes.\nSomeone else will have to confirm whether React is following semver, but if so, anything numbered 0.x.x is subject to API changes until it hits 1.0.0. That said I think the team generally has maintained backwards compatibility or added warnings during deprecation periods while keeping pace.\n. The files might already be included then. If the Chrome debugger works for you everything is good.\n. Wish I could like Github comments. @jmstout is right on the mark. One note - you can actually leave off nav={navigator} since Navigator will implicitly set navigator={self} for you.\n. LGTM though the Apple docs seem to imply that the kerning value applies between characters which I read to mean not at the end of the string.\n\nNSKernAttributeName\nThe value of this attribute is an NSNumber object containing a floating-point value. This value specifies the number of points by which to adjust kern-pair characters. Kerning prevents unwanted space from occurring between specific characters and depends on the font. The value 0 means kerning is disabled. The default value for this attribute is 0.\n\nAdding the reviewers on the original diff https://github.com/facebook/react-native/pull/482\ncc @nicklockwood @a2 \n. Looks like the same problem as #1207.\n. Closing this out since https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442 hopefully fixes the source of the text crashes. Please open another task if the master branch of React still causes RCTText crashes for you.\n. The best fix is for the sample project to not link in AdSupport. Only apps that track users across different apps made by different companies require it.\n. I think we want willLoseFocus and didLoseFocus lifecycle events, or something of that nature. Worth looking at UIViewController's transition API (it's complex...) and Android fragments to get a sense of what events a scene might want to receive and when those events should be fired.\n. I think these are intentional. https://github.com/facebook/react-native/commit/d9b7e63e47434ca0ace9b5fe4f11152cf31d002c\n. As for the API you may want to study https://html.spec.whatwg.org/multipage/embedded-content.html#mediaevents to see if any of the concepts are worth sharing (cc @vjeux)\n. @lelandrichardson: opacity:0 would still create UIViews and acts like uiView.alpha = 0 or uiView.hidden = YES. We may want to override the hit testing so that fully transparent views still receive touches though this is not the case currently.\nMeanwhile visibility:hidden would not create UIViews and would not receive touch events.\n. @mintuz do you mean nano as in the editor? not sure where this is coming from. The only mention of nano is unrelated.\nide:react-native\u00b7master$ grep -r nano .\n./node_modules/module-deps/node_modules/JSONStream/test/fixtures/all_npm.json:{\"id\":\"nano\",\"key\":\"nano\",\"value\":{\"rev\":\"105-50efc49a8f6424706af554872002c014\"}},\n./node_modules/module-deps/node_modules/JSONStream/test/fixtures/all_npm.json:{\"id\":\"nanostate\",\"key\":\"nanostate\",\"value\":{\"rev\":\"9-1664d985e8cdbf16e150ba6ba4d79ae5\"}},\n. https://github.com/facebook/react-native/commit/723e988416f453f5ed1d382f84f96d3a73d17f21 should make this less of a mystery by putting up an error box when there's a syntax error. Not the same as your suggested fix but I believe it should make debugging the root cause a lot easier.\n. @jtremback it's partly historical and partly due to performance as I understand it. Babel/6to5 wasn't as big as it is today (or didn't even exist) when React/RN were developed, and FB's JS processing pipeline already used jstransform. The good news is that a migration to Babel is on the horizon, though someone else would have to give you the timeline for that. https://github.com/facebook/esprima/issues/111\n. Babel is in master, RN is JS-hipster-approved, closing this out. https://github.com/tadeuzagallo/react-native/commit/56d6ee3f0fadeb66aeb6cf9156c723759f48f617\n. I expect it will ship with 0.6 because it's a bigger change and not a bug fix for 0.5.0 rc.\n. Proposal to move things forward: navigator.product returns \"ReactNative\" and navigator.productSub returns the version e.g. \"0.5.0\". This is a little different than browsers, which return \"Gecko\" and \"20030107\" but we'd be returning useful values in this case.\nRelevant docs:\nhttps://developer.mozilla.org/en-US/docs/Web/API/NavigatorID/product\nhttps://developer.mozilla.org/en-US/docs/Web/API/Navigator/productSub\n. That sounds preferable actually. We don't want any of the browser environment to leak into React Native's environment ideally. \n. @vjeux: what is the behavior of the scroll view after the animation is finished? Does it stay pinned to y=150, or does a finished animation stop controlling the scroll position?\n. @vjeux scrollTo(y, x, animation) would be a good stepping stone and preserve backward compatibility. The prop-driven API is interesting to me as an experiment though I'm not sure if it will work well in practice (I'm not against it - just don't know). Fine-grained control over the scroll position and content insets is so important for many apps.\n\nother thoughts:\nIt's pretty interesting to have the scroll position not stay pinned. This notion of an \"ephemeral value\" could be used to replace imperative APIs and perhaps remove refs from React. To generalize, this code:\njs\nrender() {\n  return <X ref=\"x\" />;\n}\nonEvent() {\n  this.refs.x.performAction();\n}\nis now:\njs\ngetInitialState() {\n  return { performAction: new Animated.Boolean(false) };\n}\nrender() {\n  return <X performAction={this.state.performAction} />;\n}\nonEvent() {\n  this.state.performAction.setEphemeralValue(true);  // true for one pass\n}\nThis may also be the answer to making components like TextInput much more usable. Currently the asynchrony between JS and UIKit is janky and controlled TextInputs aren't usable in production. But I think there's a third type of TextInput -- semi-controlled -- where you generally don't need it to be controlled but occasionally want to set its value to a given string from JS, just like how the scroll view's position generally should not be controlled but sometimes we want to set the position from JS.\n. There's no officially supported way to do this at runtime. Best way is to write your own script with esprima or estree that figures this out. I'm not aware of scripts that do this for destructuring assignment but https://www.npmjs.com/package/find-requires could be a good project to fork. \n. This is intentional due to how React Native works. Every view class creates one extra view instance to provide default values for React's diffing algorithm.\nIf this is causing issues for you, it's likely because your view class is creating some resource that it should be lazily initializing instead. So try deferring the initialization of those resources as late as possible, for example when properties are set.\n. The layout is used to get the frame size which is included with the constants. It should only be called once, though.\nWe should probably create a singleton instance of the date picker and reuse it so that if your app has more than one JS environment, the layout is performed only once.\n. sizeToFit should work. BTW you can test iPad via the simulator too if you weren't aware.\n. About the scope of constants: The constants are constant within the context of the RCTBridge instance. If you force-quit the app and relaunch it, you might get new values for your constants (ex: one \"constant\" could be the referrer URL that launched the app, or a timestamp of when the RCTBridge was created). So for this case we absolutely want the constant to be different across devices.\n. Look at AHKNavigationController for fix. This is an Apple idiosyncrasy and not anything React is doing.\n. ?dev=true/false in the packager's URL sets __DEV__ to true/false in the JS.\n. +1 to updating the docs\n. cc @lwansbrough, you might find this interesting\n. This is just how iOS behaves: size of scroll view viewport == one page.  I don't believe it's possible to customize it, so if you want a different pagination distance, you'll have to change the size of your scroll view.\n. I haven't thought about your specific use case but this documentation may provide helpful: https://facebook.github.io/react-native/docs/gesture-responder-system.html\n. @tadeuzagallo should we make -[UIManager addUIBlock] schedule a task to run -[UIManager batchDidComplete] on the next iteration of the run loop if JS hasn't sent any commands?\n. @JohnyDays that is expected behavior because you were calling into UIKit off of the main thread. Almost always dispatch_async(dispatch_get_main_queue()) when doing UIKit work.\n. @tadeuzagallo - what I was thinking is that it is confusing that the UI blocks do not run until some other unrelated piece of code or a UI interaction causes the UIManager to flush the blocks.\nTo make this less surprising, here are two ideas: one idea is to schedule the the UI blocks to run ASAP (probably after the next vsync iteration as you suggested). The other idea is to print a warning message if -[UIManager addBlock:] is not called on the shadow queue. Either way, my hope is to help guide module authors in the right direction.\n. Is the animation curve always the same? Hiding/showing the autosuggest bar on iOS 8 is also considered a keyboard animation and may use a different curve. For robustness and forwards-compatibility it might be better to expose all of the built-in animation curves, and have the app specify which one to use.\n. @vishnevskiy, RN apps should do the same and use the animation curve specified by the keyboard events.\n. Babel should end up fixing this for free.\n. Babel landed in master: https://github.com/tadeuzagallo/react-native/commit/56d6ee3f0fadeb66aeb6cf9156c723759f48f617\n. Changing the package.json dep URL to frantic/stacktrace-parser#493c5e5638 should do the trick, or at least make this a general problem with npm instead of react.\n. This is for the Exponent component that renders a React Native bundle inside of another React Native app ^_^\n. This should go in the 0.5.0 branch as well (something broke in the May 22 sync). \n. Fixes #1412 \n. Yeah, we need https://github.com/facebook/jest/pull/374 first, which is a breaking change to jest to get it running on io.js. One of jest's dependencies, jsdom, has dropped compatibility for legacy Node so jest needs to run on io.js in order to use a modern jsdom release.\nThis PR is a rough cut at getting React Native working with io.js and the future version of jest with the aforementioned patch. I still want to get it running against Travis but it doesn't need immediate attention until the jest patch lands.\nOn a related note, it's a big undertaking to get all of Facebook's JS on io.js and the next version of jest. If React Native's OSS tests are separate from the internal tests, it would be good to preserve that separation because I expect it will take considerable time and dedication for the rest of Facebook's codebase to catch up.\n. @faithfe, only local images are supported with NavigatorIOS.\n. Nice catch. With babel we may also want to use const with all requires so the transformer catches this.\n. The packager already breaks if there are two @providesModules with the name name (or it used to a couple weeks ago). In this case the index.ios.js file doesn't have a haste header, it's just that there are two variables with the same name.\n. The issue is there even if scroll views aren't nested. Another potential solution is for React to detect that there are two scroll views in the UIView hierarchy that both have scrollsToTop = YES and print a warning that identifies the scroll views. there's a laundry list of little things like this that React can do to fix UIKit...\n. This looks good in spirit. I might trim the content for brevity, something like\nNOTE: TouchableOpacity supports only one child\nIf you wish to have to have several child components, wrap them in a View.\n. lgtm\n. This sounds like a reasonable proposal to me. Just to throw another idea out there, you could also configure Xcode to call your custom packager script directly. It's just a question of whether the level of indirection is at the Xcode script or package.json.\n. @umhan35 there might be a bug in the image component, but for a temporary workaround (emphasis on temporary! if there is a bug in react we should fix it), you could specify <Image key={url} /> which will replace your old image with a new one each time the URL changes.\n. cc @nicklockwood \n. An easy solution to what @nicklockwood described is to load the launchscreen xib if you're on iOS 8+.\n. Yeah this is a real issue. Crash in a different but similar part of the code in #1207.\n. Closing this out since https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442 hopefully fixes the source of the text crashes. Please open another task if you continue to see crashes when running the latest master branch of React.\n. jest is unrelated to testing:https://www.npmjs.com/package/jest\n. Frames are set from JS. Once you bridge your component over, give it style={{width: 100, height: 100}} and it should show up.\n. API feedback - how about placeholderStyle={{fontSize: 10, fontFamily: 'Comic Sans'}}?\n. Sounds like a plan.\n. yay https://github.com/johanneslumpe/react-native-browser-polyfill\n. Looks like another text layout crash (look at the stack in be bottom right corner).\n. Closing this out since https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442 hopefully fixes the source of the text crashes.\n. There are two roadblocks here. One is the API limitation you described and one solution would be to work with the WebKit team to patch the API for the next-next release of JSC.\nThe second issue is that the RN bridge uses JSON to communicate between JS and native. There are no shared references so you currently can't access a TypedArray from Obj-C that JS can also access. This could change at the cost of losing the Chrome debugger but if shared memory enables another class of apps that do photo processing, etc, that might be the right trade off.\n. @ericvicenti mentioned in another discussion that StaticX components can often be replaced by holding a reference to the JSX element, and returning the same element instance from render() each time it is called. That should be robust against forceUpdates too.\n. https://github.com/facebook/react-native/pull/262#issuecomment-101371638\n. Closing this out since https://github.com/facebook/react-native/commit/0689c0790edcc9cb8494e3f15300e2743556f442 hopefully fixes the source of the text crashes.\n. I think so. A good approach to make things configurable without stepping on too many toes could be to define a macro like RCT_WEBSOCKET_PORT so that it's as configurable as RCT_DEV, etc.\n. @bparadie: bundles (I assume you mean JS bundles and not iOS asset bundles) and the web socket executor are independent. You could run a bundle across the web socket executor if you wanted. Best to keep the two concepts separate.\n. This may or may not work for you but if you use the podspecs via CocoaPods you'll skip using the FB-provided React.xcodeproj and therefore drop the magic packager launcher.\n. You can use npm along with the podspecs. It's not documented but it's a standard cocoapods setup.  Probably best to find an iOS/app developer on your team who can help set it up.\n. My thinking is that instead of putting the launch script in React.xcodeproj, it'd be better for the top-level projects like UIExplorer.xcodeproj and SampleApp.xcodeproj to have the script. You could make the argument that React.xcodeproj implies that you need the packager but users who are manually linking React are also the kind of users who want to set up their own packager scripts and aren't expecting everything to work out of the box.\n. cc @amasad \n. This will be fixed once babel lands.\n. Babel landed in master: https://github.com/tadeuzagallo/react-native/commit/56d6ee3f0fadeb66aeb6cf9156c723759f48f617\n. ES6 React classes don't autobind their methods (documentation here) so you have three options:\n1. Bind the methods yourself in the constructor() function\n2. Use the property syntax like onButtonPress = buttonType => { ... };. This might require adjusting the options that the packager passes to Babel.\n3. Use decorators like @autobind onButtonPress() { ... }. Again this might require a small patch to the packager.\n. Can you try String? instead of String? \n. You should add the nil check since the Swift function can receive nil. That is, String? is the correct type unless you assert in JS that typeof value === 'string' before passing it down to Obj-C.\nJay's example works because NSString * in Obj-C means the function can take a string or a nil value. To express that it takes only a string you can write (nonnull NSString *) but I don't think that will compile in RN right now. \n. Either could work equally well. I think it's really up to your preference because your RN module (the JS and native code together) is a black box since people will use your module through its JS interface. It doesn't affect them whether your JS passes null values to native code that does a nil check, or if your JS coerces null to an empty string and ensures that the native code never receives nil.\nBetween the two I'd personally lean slightly towards explicitly checking for nil in native because, as you've seen, the default error message is confusing if somehow JS were to pass null to native. Also NSString *, which is what RN sees, really means \"a string or nil\" so String? is a more robust choice until RN supports nonnull NSString *.\n. @brentvatne were you thinking about this? https://twitter.com/amasad/status/604057791859445760\n. @johanneslumpe would things be easier if RN depended on babel-core directly?\n. cc @tadeuzagallo \n. That reads nicely. Let's publish it.\n. cc @amasad. did you want .babelrc though?\n. That makes sense. Maybe let the path be relative to cwd?\n. These are <Text> components that don't set a max number of lines. I'm not sure what caused this bug but one hypothesis is that when the NSTextStorage for the RCTText view is created in uiBlockToAmendWithShadowView:, the frame of the shadow view is somehow incorrectly very wide. The NSLayoutManager would think there is enough room to draw the text on one line.\n. That's great to hear. I'll close this out.\n. I'm seeing this with master still (up to and including the June 10 sync). Once I tap the screen the text reflows properly but occasionally it is rendered all on one line.\n. No screen rotation. The root view is smaller than the screen, but it isn't resized after its initial layout is computed... maybe there's a race condition where the content is rendered and then the root view is laid out. \n. To generalize would it make sense to expose the JS loader and allow custom implementations to be injected? One thing I've wanted to do with the loader is also have a better notion of progress, so custom loaders would let me achieve that and address this issue at the same time.\n. Why do you need React.DOM?\n. Providing React.DOM doesn't really solve the problem because there's still the problem of creating elements for third-party components. Probably best to write your own helper like this:\njs\nvar {\n  View,\n  Text,\n} = require('create-react-factories')(require('react-native'))\n. @vjeux and co. have the final say but I don't think it makes sense to add this to the core for a couple reasons. It's confusing if core components behave differently even though they otherwise look the same as third-party components. Also while totally ubiquitous components like Text and View belong in core, the majority of the other components in this repo aren't very different from third-party components. It's better for the ecosystem if a solution for MapView applies to react-native-camera's Camera too.\n. > Why would adding React.DOM makes it \"confusing if core components behave differently even though they otherwise look the same as third-party components\".\nTake a handful of components: View, Image, Camera, ListView. It's not intuitive to identify which ones let you write Component({style: ...}, child1, child2).\n\nthe majority of the other components in this repo aren't very different from third-party components\n\nMy point is that I wouldn't be able to tell you that ListView or Navigator are first-party components while Camera or Video are third-party components without background knowledge. There's nothing intrinsic to these components that warrants a different syntax for constructing them.\nSomething like React.DOM adds a second syntax for a use case that can be addressed with a helper module in a pretty straightforward way (require('create-react-factories') in my comment above). I think the core repo is at the right place now where it makes it possible to create factory functions but doesn't necessarily support this uncommon use case out of the box.\n. > And if multiple React.createFactorys are called for a component, you can opt to put it somewhere or wrap it (with adaptor pattern?) to promote DRY principle.\nThis is a good idea. I just think it should be applied uniformly across all composite components. I'm not proposing to mix JSX and non-JSX; what I'm trying to say is that mixing uppercased composite-component classes and composite-component factories makes things more confusing. Maybe there should be lowercased <view> and <text> that act as primitive components, but I think it's easier to explain to someone that they always receive component classes and can convert them to factories with a helper module. \n. Looks like SocketRocket doesn't guarantee a non-null reason, this lgtm.\n. > One thing we also considered was naming it \"justifyIOS\" or something to make it clear it's IOS-only (although windows phone and other platforms probably support it?), or just put a comment in the code. A redbox on Android might also be sufficient. Thoughts?\nMy preference is to add a comment and document it because that's easiest and I can't test Android, and the failure mode on Android will have a sane default -- I expect it will either redbox because it doesn't know what to do with the prop value, or it will fall back to left-aligned text which is still totally usable and at worst a lo-pri bug in most cases.\n. I don't think I did anything weird to the screenshots. I captured them by opening the UIExplorer project, set _runner.recordMode = NO to YES, and hit Cmd+U. I do have imagemagick and a couple of other image processing programs on my laptop (OS X 10.10.3) so perhaps they got automatically invoked somewhere along the way. \n. Thanks for chiming in @cmcewen \n. Closing since 0.5.0 is out\n. My thinking is that events like 'readystate' and the notion of a document are auxiliary concepts to RN and would better be provided by an npm package if polyfilling document is the best direction.\n. @hharnisc, @AdamBrodzinski - is this something you guys want to explore? Since you have a real use case for it I imagine you'll be able to make more progress on it than people who don't.\n. @ericvicenti thanks for the update. The code is intended to be backwards-compatible so I bet it's something small. \n. @nicklockwood OK, makes sense and is consistent with Text nodes if I'm not mistaken.\nI believe @jsierles has found a different bug here, where the Text node in <Image><Text style={{background: 'transparent'}}>Words</Text></Image> is rendered with an opaque background.\n. To me it's more intuitive if backgroundColor sets the background behind the glyph runs and not the containing box, so the current naming makes sense in that light. Example from CSS: http://jsfiddle.net/5upzy4x8/.\nI think we want to disable the blending optimization on the container if the text has a translucent background color, so as to maintain the illusion that the container is transparent. So in the example above, the text's container would have a transparent background because (a) the text's backgroundColor is \"transparent\" and (b) containerBackgroundColor is null/undefined.\n. My reasoning is that CSS applies the background color to the glyph runs and not the bounding box. RN should produce that effect if it's the behavior we want (maintaining CSS compatibility is the strongest argument I can think of), and text with a translucent background color is a scenario that isn't eligible for the blending optimization. When I think of it that way, it's less a magic rule that users need to learn and more like code specialization that is applicable under certain conditions.\n. @vjeux ok, thanks for the note. Tell me if there's something I should do to support my commits once the Android team has had a chance to look into things.\n. This should probably be an enum instead of a boolean or at least renamed to be clearer.\n. Android's permissioning is pretty different (coarse vs. fine updates rather than background vs. foreground) so I think we should optimize for iOS in this commit and clearly name the property something like permissionTypeIOS. \ncc @frantic are you the right person to take a look at geolocation diffs (saw you were active on a few others)?\n. You should use pointerEvents: https://facebook.github.io/react-native/docs/view.html#pointerevents\n. cc @a2 @nicklockwood \n. Seems like we'd want a different cache policy than taking just the first 2048 values too.\n. @brentvatne I think that is expected. Previously your code (and mine too) was grabbing the copy of react-timer-mixin from react-native, but now the packager does a better job of isolating react-native's node_modules and your own node_modules. The downside is that I believe we lose deduping so something to keep an eye on. Might be good to mention in the next release notes that you need to specify your dependencies in your own package.json (cc @vjeux)\n. We should render the inspector UI on top of the status bar (window level + 1).\n. @flashlizi could you tell us some of the inconsistencies that are giving you trouble?\n. @spicyj any thoughts? or know how to get the current element from a component (or if that's something intentionally kept private because it will break in React.next?)\n@flashlizi my suggestion for the short-term (since you are using a private API) is to write a helper function that smooths over the differences. But this might break in a future version of React...\njs\nfunction getCurrentElement(component) {\n  return component._currentElement || component._reactInternalInstance._currentElement;\n}\n. Probably makes more sense to put this logic in your app's JS -- when your JS gets the \"notification\" event, check whether the application is foregrounded or not. \nI would also be surprised if this diff works... React Native does not work with backgrounded apps right now, and I think you need a different app delegate method to handle notifications while backgrounded.\n. Check out https://facebook.github.io/react-native/docs/appstateios.html#content\n. @lorenzostdubois the lgcc._s.10.5 error is kind of a mystery. I encountered it too (Node 0.10, 0.12, 1.8.1, and 2.1.0) and couldn't get it to go away (tried updating brew packages, tried pruning them, used a clean installation of io.js) and the issue went away only after I restarted my computer (OS X Yosemite). Sorry I can't provide more informative guidance than that :/\n. #magic\n. I believe this was an intentional change in https://github.com/facebook/react-native/commit/45d8fb0ef64a8a41929d61fe822a64c2febe5455. @nicklockwood could you confirm that the enum was dropped in favor of \"default\" and \"light-content\"?\ncc @vjeux for the breaking change for the release notes.\n. Thanks for confirming.\n@ldesplat looks like this is working as intended and thanks for testing the RC!\n. The main site should match npm, and ideally there would be docs for RC (both to document RC and to act as a staging release in case there's a problem with the docs site) and master. I'm not so familiar with Jekyll and GH pages... is it easy to \"reparent\" a site so that it could live under https://facebook.github.io/react-native/rc/ or https://facebook.github.io/react-native/master, and customize the CSS a bit to add a banner at the top with the version info?\n. If the new doc generator were to use the git tags (latest stable, latest rc, master) we'd still be able to quickly update the docs in an emergency by overwriting those tags (yay force push) to point to a new commit. \n. You can support variable widths with pagination with a couple of tricks -- that is how the Apple Photos app works.\nThe core difference between pagination and scroll snapping is that pagination snaps to the next page even if you swipe hard, while scroll snapping accounts for momentum so you could end up several pages away.\n. I think we want this in core since it achieves parity between static and network images and it's a fundamental that applies to all images. To be clear, @paramaggarwal's proposal maintains the current invariant of needing to specify the image size up front (before we've downloaded it from the network). The sole difference is that it's the intrinsic image size, not the displayed size (in the style prop) that needs to be specified. This provides a very consistent API for users that I could explain to people:\n- You should specify an image's intrinsic dimensions in the <Image source> prop\n- The intrinsic dimensions, which tell us the intrinsic aspect ratio, will be used to help the layout engine calculate the image's displayed dimensions (e.g. the flex example in this discussion)\n- If you don't specify intrinsic dimensions then you must specify the image's displayed dimensions via width and height in the style prop.\n- The packager automatically specifies the intrinsic dimensions when it replaces require('image!icon.png')\n- Missing intrinsic dimensions default to zero\n@paramaggarwal: might want to rename original width/height to intrinsic width/height to match w3c docs.\n. > I'm wondering if we could use the same logic for both static and network images?\nYes, this should absolutely happen.\n- For truly remote images (http://example.com/logo.png) the programmer has to specify {width, height, uri} in the image source\n- For images that are locally available but are served remotely by the packager (./logo.png), the packager should read the intrinsic size of the image and replace require('./logo.png') with {width, height, uri}\n- For images that are locally available and are statically bundled, the packager should read the intrinsic size of the image and replace require('./logo.png') with {width, height, uri, isStatic}\nThen, both the native implementations for static and remote images should take the provided intrinsic dimensions into account when computing layout.\n\nThe only problem with this approach is when the developer wants to use something like flex to size the image - width and height attributes we set get priority.\n\nThe width and height properties of the image source should not get priority. They are intrinsic dimensions, not the rendered dimensions.\nJust like the web, they should be the defaults that the layout engine uses as a last resort. For example, if the programmer uses flex and we know the rendered width of the image should be 375px wide but don't know its rendered height, then the layout engine should calculate rendered_height = rendered_width * intrinsic_height / intrinsic_width. If the programmer specifies style={{width: 200}} but leaves off the height, then the layout engine should perform a similar calculation using the intrinsic aspect ratio to compute the rendered height. If the programmers doesn't specify any rendered dimensions (no flex, no width nor height in the style), then the image falls back to its intrinsic dimensions.\n. Hey @hedgerwang, sorry it took me awhile to write up some feedback. Overall I like the idea of separating the navigation state from the UI, particularly for deep linking where we want to know the current navigation state (so we can make a permalink) and how to render any navigation state (so we can visit a permalink).\n\nTree structure and focused node: you mentioned that exactly one node must be focused. I was thinking in a more complex app especially on a tablet, you might have two sibling navigators displayed on screen at the same time so there could be two scenes focused like this:\n+-----------------------------------------+\u2009\u2009\n\u2009\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009app \u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009\u2009\n\u2009\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009\u2009\n\u2009\u2009|\u2009+------------------+\u2009+----------------+\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009contentL1\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009contentR1\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009|\u2009\u2009\n\u2009\u2009|\u2009+------------------+\u2009+----------------+\u2009|\u2009\u2009\n\u2009\u2009|\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009\u2009|\u2009\u2009\n\u2009\u2009+-----------------------------------------+\nThe navigator on the left-hand side can display scenes contentL1, contentL2, etc... and similarly the navigator on the right-hand side can display scenes contentR1, contentR2, etc... To express the navigation state I would write:\n|-- app\n   |-- [left=contentL1, right=contentR1] * // currently focused\n   |-- [left=contentL1, right=contentR2]   // can navigate to this state\n   |-- [left=contentL2, right=contentR2]   // and then this one\nThere is probably a simpler way to express this state so if having multiple sibling navigators is a valid use case then we might want to pick a different data structure for it.\n\nLayout: sometimes there may be a child scene that covers the entire parent scene so that it intercepts all gestures, but parts of the child are transparent. For example, there could be a dialog that can be dismissed by swiping anywhere (even outside of the dialog), but you can still see the parent scene behind the dialog:\n+-----------------------------+         \n|             app             |        \u2009\n|                             |         \n|                             |         \n|      +---------------+      |         \n|      |               |      |         \n|      |    dialog     |      |         \n|      |               |      |         \n|      +---------------+      |         \n|                          ^  |         \n|                          |  |         \n+-----------------------------+         \n                           |            \n                           +            \ncan swipe anywhere to dismiss dialog\nTo implement this, I would make the dialog scene's layout cover the entire screen (a big transparent View) so that it receives all touches before the app scene.\nGestures: I believe you had some ideas about progress events. I'm not sure about a lot of the API but they are these are some types of transitions I've seen in other apps:\n- Navigation bar of course\n- Carousel navigation like Snapchat (built on top of ScrollView... reimplementing the scroll pagination physics still doesn't feel right)\n  - Also, carousel that updates the nav bar, like the Skype app\n- Lightbox navigation when opening a single photo in the Facebook app\n- Opening/closing a photo that's part of an album in the Facebook app\n- The story strip in FB Paper (might be hard)\n- Minimizing a video in the YouTube app while it keeps playing in the corner\n- Opening/closing an email in Google Inbox\nIt could be a little helpful to look at UIViewController's API to see how the transitions are structured. The full API is pretty complex but it might provide an idea or two.\n. @vjeux was TouchableBounce excluded because it's not part of the platform UI conventions?\n. @frantic fwiw I agree with that structure, and would take it a step further by skipping ReactWithPackager and just having SampleApp, UIExplorer, TicTacToe, etc... call the packager from their own pbxproj files.\n. How do people feel about s/tick/runTick/? Would make for an easy task.\n. File a bug with Apple if you have a case for local IPs. They might already have a way to whitelist certain IPs in which case we could add localhost. I don't think weakening security for the entire app is a good default if we can avoid it.\n. It has nothing to do with OTA updates. This is blocking HTTP and requiring HTTPS. An alternative solution would be for the packager to serve a self-signed certificate though I'm not sure what it would take to get the client to accept it.\n. I believe the set interval call has been removed in 0.6.0-RC\n. Thanks for investigating. The RC is published to npm so you could edit your package.json to upgrade to it and see if it fixes the CPU usage.\n. The spec says to prevent overlapping which is what produces the circle effect: http://www.w3.org/TR/css3-background/#corner-overlap. If you were to set a 50pt radius on just one corner it should produce a quarter-circle: https://jsfiddle.net/36uax3oL/1/\n. oops.. someone from FB will need to merge this (thanks @brentvatne for the pointer). can the on-call pull this in?\n. This is how UIKit behaves -- go through the ScrollViews in your app and make sure that all of them have scrollsToTop={false} except for the one you want to scroll to the top. See https://stackoverflow.com/questions/8527801/how-to-find-out-which-other-uiscrollview-interferes-with-scrollstotop for tips.\n. How barebones is your code? Try paring it down to only the TabBarIOS, NavigatorIOS, and ListView with empty View cells if you haven't already.\n. cc @nicklockwood @tadeuzagallo @a2 \n. I solved this in my own components with a couple extra method declarations. In the header file I have:\nobjc\nNS_ASSUME_NONNULL_BEGIN\n...\n- (instancetype)initWithFrame:(CGRect)frame NS_UNAVAILABLE;\n- (instancetype)initWithCoder:(NSCoder *)coder NS_UNAVAILABLE;\n- (instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher NS_DESIGNATED_INITIALIZER;\n...\nNS_ASSUME_NONNULL_END\nThe implementation file has:\n``` objc\n- (instancetype)initWithFrame:(CGRect)frame\n{\n  @throw EXNotImplementedException();\n}\n\n(instancetype)initWithCoder:(NSCoder *)coder\n{\n  @throw EXNotImplementedException();\n}\n```\n\nThat macro is defined as:\n``` objc\ndefine EXNotImplementedException() \\\n[NSException exceptionWithName:EXNotImplementedException \\\n                          reason:[NSString stringWithFormat:@\"-[%s %s] is not implemented\", \\\n                                  class_getName([self class]), \\\n                                  sel_getName(_cmd)] \\\n                        userInfo:@{@\"file\": @(FILE), @\"line\": @(LINE)}];\n```\nI'd be interested to learn of a leaner solution. It's kind of disappointing that NS_UNAVAILABLE alone doesn't suffice.\n(Aside: with the nonnull keyword from Xcode 6.3, init methods no longer need the if (self = [super init]) dance.)\n. > have every unsupported initializer call the designated init with nil params, and then param assert that they mustn't be nil.\nThis wouldn't work for init methods that have nonnullable parameters. In my example, - (instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher actually desugars to (nonnull RCTEventDispatcher *) so it's not clear how to call it from initWithCoder/Frame.\n\nI'm surprised that it's no longer necessary to return self from init though\n\nYeah I was referring to the 'if' check. Still nice to remove the extra level of indentation.\n\nDid you try using [self doesNotRecognizeSelector:_cmd]? - I believe that's a common pattern for unsupported method implementations.\n\nJust tried it now but the compiler doesn't recognize that [self doesNotRecognizeSelector:_cmd] affects the program flow. I had the same problem with [NSException raise:] earlier so I had to use @throw to tell the compiler that the init method doesn't return (I kept it outside of the macro to communicate this to the reader as well).\nOne thing we could do to ease the burden is to have RCTView revoke the \"designated initializer\" status from initWithCoder so view subclasses only need to deal with initWithFrame if they introduce a new designated initializer.\n. @ericvicenti does the navigator currently do anything special to ignore touches on views that will lose focus?\n@mixophrygian the pointerEvents prop lets you disable touches for any view and optionally its subviews. You could set pointerEvents=\"none\" on your root component for the duration of the transition. https://facebook.github.io/react-native/docs/view.html#pointerevents\n. Also so we're all on the same page - @mixophrygian are you using Navigator or NavigatorIOS?\n. ~~Once https://github.com/facebook/react-native/pull/1583 is merged,~~ can you see if this issue is present on master? One of the commits in that PR changes the native module registration to use +[load] which the KVO support subclasses shouldn't invoke.\n. The patch that changes module loading is planned to go out Friday with 0.7.0-RC.\n. This looks good to merge.\n. @prathamesh-sonpatki yes, once your commit is merged the website HTML will be regenerated from the JS source code.\n. I like the initial data constructor too. For the differ, I bet (r1, r2) => true will work better for most people as a default. It matches React's default for shouldComponentUpdate and is what you want when working with mutable data objects.\n. The biggest reason to move it into package.json is the write once run everwhere aspect. Android =)\n. Can you also note that the new text is passed to the handler?\n. I would try putting the NavigatorIOS component inside of the Navigator (it might not work because it takes extra work to set up UIViewControllers inside of arbitrary views but worth a shot).\n. @alvaromb I recommend using eslint + babel-eslint + eslint-plugin-react. It handles flow syntax and matches the same linting and transformer used by the react-native packager.\n. @nicklockwood I think we want the notion of a system font for a given size, which includes the font name and other typographical defaults that Apple has configured. This includes options like how colons are formatted in timestamps -- when rendering 9:45AM, the colon should be vertically raised. I haven't tested it but I believe that these options are configured when you call [UIFont systemFontWithSize:] but aren't when you create a new UIFont with the same family.\nAdditionally we'll want to expose these new options to JS. One example is the monospaced digits options -- with the new SF font, digits are no longer monospaced (instead they are naturally spaced so that \"1\" is thinner than \"5\" for example), but for UI elements like incrementing counters you want the monospaced digits.\nAnd of course there's the font name vs. font family distinction. I believe we want to encourage use of font families so that the OS picks the appropriate font for the given size. For the SF font, there's a Display cut and a Text cut, where Display is intended for larger sizes.\nI wasn't able to find the new font options in the prerelease docs yet but Session 804 (2015) covers most of this.\n. @nicklockwood Making sure I understand your idea... so style={{fontFamily: 'System', fontWeight: 'bold', fontSize: 48}} on iOS9 would render SF with the Display cut and all the Apple preset options, while {fontFamily: 'San Francisco', fontWeight: 'bold', fontSize: 48} wouldn't have the Apple presets?\n. That sounds really good.\n. Another approach that feels more generic and composable to me is to expose the shadowImage property. Then you could set it to a 1x1 transparent pixel. \nhttps://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UINavigationBar_Class/index.html#//apple_ref/occ/instp/UINavigationBar/shadowImage\n. NavigatorIOS is mostly a community-maintained component so quality PRs are welcomed. I think what you've come up with is a very reasonable stab at the problem. Can you squash your commits into one?\n. @plandem It's not very well supported at the moment. You will have issues with React's event loop if the JS functions you invoke directly from Obj-C do any kind of async work. Directly using the JSContext will bypass the code path that React takes to start an iteration of its event loop. Also if your JS throws an unhandled error you may have to handle it yourself. And even though JSC is mostly thread-safe, you should make sure to use the JSContext only on the same JS thread as the one that React will use.\nBut since you asked... currently the best approach is to subclass RCTContextExecutor and define init to return -[super initWithJavaScriptThread:globalContextRef:], which allows you to inject your own JSContextRef as the second argument. Expose this JSContext/JSContextRef to the rest of your app via NSNotificationCenter or a global variable. Then set up an RCTBridge like so:\n``` js\nRCTBridge *bridge = [RCTBridge alloc];  // warranty not included\nbridge.executorClass = [YourCustomExecutor class];\nbridge = [bridge initWithBundleURL:url moduleProvider:nil launchOptions:launchOptions];\nRCTRootView *root = [[RCTRootView alloc] initWithBridge:bridge moduleName:@\"YourAppKey\"];\n```\nI'm going to close this because as you can see it's really not well-supported but it does work if you know what you're doing and are willing to dive into the full stack.\n. What version of React Native are you using?\n. This has been fixed in master. The WS library sometimes returned a nil error message, and ObjC crashes if you put nil in its common data structures :/ \nFix should be out with react-native 0.7.0 in 3 weeks.\n. If you're familiar with Xcode projects and CocoaPods then downloading react-native from npm and using the podspec under node_modules works well since you just regenerate the Pods project whenever you update react-native. You'll have to run the packager manually too.\nIf that isn't something you're familiar with then the approach you've outlined seems the most robust to me but is often unnecessary. I would try to upgrade the react-native npm package, see if the project still compiles, and create a new project if that doesn't work.\n. Once #1497 lands you'll be able to provide your own implementation of the JS source code transformer. So in a custom transformer you could add the require calls to each file, similar to what you've done in the webpack plugin.\n. This looks good for now but we'll later want to go further and use the system UIFont object instead of reconstructing it by hand because there are special flags set on it (getting the system font != creating a UIFont object with the same font name and size).\n. re: going further -- in +[RCTConvert UIFont:...], instead of building up the font object from [UIFont init...], I want to try starting with [UIFont systemFont....] and modifying the font/font descriptor's family, size, etc. so that all of the other system properties of the font (e.g. natural-spaced instead of monospaced numbers) are preserved. Alternatively (and eventually) all of those properties should be exposed to JS... this is one of those areas where iOS leaves Android way behind so no sense trying to provide perfect cross-platform compatibility.\n. > I agree your idea. But it looks to me like It's beyond my limit now.\nyeah, I think it's fine if this commit focuses just on getting iOS 9 on SF instead of Helvetica Neue.\n. @mosch I think this might have been fixed in master. What version of react are you using? \n. Hmm https://github.com/facebook/react-native/commit/856469a24b6f0b0998061c1244533b510aee3ddd is in 0.6-stable so this could be a bug.\n. Native view components have a prop called onLayout. For now the best way to measure composite components is to explicitly pass the prop down.\njs\nclass X extends Component {\n  render() { return <View onLayout={this.props.onLayout} />; }\n}\n. onLayout returns the component's position relative to its parent. I don't think there's a way right now to get its global position without getting the layout of the entire component ancestry.\n. Thanks for the repro and noting the versions... @amasad is this something that your node_modules algorithm diffs could fix?\n. FYI your custom modules can define their own events. I forget the specifics but somewhere in RCTUIManager it asks each module for its events.\n. Oh.. the comment is right -- only custom modules that are view managers can fire events. I imagine for 95%+ of cases you'd want to fire a UI event from only a view manager. In non-view managers you'd just use the event dispatcher to fire an event through DeviceEventEmitter.\n. > > These event types should be distributed among the modules that declare them.\n\nIs this too complicated to do? Maybe I can take a shot at attempting this.\n\nProbably would be appreciated. Some of the events might be shared by multiple modules though, so centralizing them in the UIManager might make sense. Also Facebook may have internal modules that also use the same events so you'd need to get someone to test the FB apps too.\n\nSo the point here is that any Native Module should be able to define events, not just the ones that inherit from RCTViewManager?\n\nI guess so but it doesn't seem that useful because all modules can already emit events via the NativeAppEventEmitter and DeviceEventEmitter. The limitation now is just that non-view managers cannot fire UI events... which seems mostly fine. If someone has a compelling use case then we could look into it.\n\nThis is the bit where I was suggesting why even specify event names. Why not just call the event and map it to corresponding event name in JS automatically. What are the challenges in doing so?\n\nI'm not sure - you could read the code to learn that.\n\nAlso, what is the difference between customBubblingEventTypes and customDirectEventTypes?\n\nBubbling events are like DOM events so that a parent component can capture an event fired by its child. Generally these are UI-related, like \"the user touched this box\". Direct events are not bubbled and are intended for more abstract events like \"this image failed to load\".\n. Covers most of it... thanks for writing this up. \n. Are you having trouble upgrading your React Native version, or are you not able to run a new project with the latest version? I'm not sure what you're asking and need more details like a stack trace or screenshots to tell you what's happening. Provide more info if you expect to receive help.\nAs for upgrading, React Native's versions are currently 0.x releases which generally means that features may change between releases. However, the changes are usually documented in the release notes and no one is intentionally trying to make life hard for users. Maybe this isn't yet right for your use case if you require a very stable API that changes much more slowly or need to ship a production app and can't afford the technical risk. The native part of React Native is young compared to other frameworks and under heavy development in many areas, so there have been many changes and you should expect the framework to evolve.\n. This looks correct to me. lastIndexOf('}') should be correct in all contexts. I'm kind of surprised that this is something that iOS 9 would have affected... if memory serves, the latest version of Safari changed function.toString's behavior to match Chrome & Firefox as part of https://bugs.webkit.org/show_bug.cgi?id=142853 but it wouldn't strip out trailing semicolons as far as I'm aware.\n. @vjeux can you sanity check this and merge?\n. Can you paste a gist with your code? The callback-style ref should work. String-style refs won't work because they're assigned to the owner component that renders them which probably ends up being ListView and not your own component.\n. Hi @yonglam, ListView is a custom component that is implemented almost entirely in JS. It does not wrap the native UITableView. My suggestion is to use the ScrollView component and style its contents to look similar to the UITableViewStyleGrouped style.\n. Re: use cases -- another thing I wanted to do was add a progress bar to get a better visual sense of whether loading the script is slow or if the bottleneck is elsewhere.\n. tintColor: probably makes sense to expose this to all Views. Perhaps the property should be named tintColorIOS... I don't have enough context on the Android side of things to tell you what the right choice is here.\nclearButton color: iOS doesn't provide a way to customize the clearButton's look AFAIK so you should build your own if you want to style it differently... one common theme amongst a lot of UIKit APIs is that if you stray away from the confines of the API author's intents (e.g. changing a text field's white background -> black background) then you need to rebuild several components from the ground up.\n. Sweet! The crash is gone. The app gets stuck loading with ASan enabled but that looks like a separate issue. Closing this out.\n. @admmasters do you want to submit a PR? Cloning the props should fix it ex:\njs\nvar props = {\n   ...this.props,\n  style: [styles.input, this.props.style],\n};\n. If Facebook isn't actively supporting it I don't think it's a good idea to include it in this project. Build tools are also something that tend to be different across organizations e.g. Facebook uses buck, some people might want to use xctool, others may use shenzhen and fastlane.\nThe fact is this rctapp tool exists so the CLI use case is already addressed. It seems reasonable to link to it in the docs if it's a good tool.\n. @mattapperson @frantic OK. I didn't mean to be dismissive of a CLI tool if it sounded that way. My main concern is that when code is in this core project, often people have the expectation that FB is committed to maintaining it.\n. @browniefed is right. @ecesena please try var image = require('image!name'); with your big image. If you want to dynamically display an image based on its name, write this:\njs\nfunction getImageSourceByName(name) {\nswitch (name) {\ncase 'pic1':\n  return require('image!pic1');\ncase 'pic2':\n  return require('image!pic2');\ncase 'pic3':\n  return require('image!pic3');\n}\n}\nThen you can write <Image source={getImageSourceByName(name)} />.\n. One thing I'd like to get feedback on is whether \"exceptionID\" is the best name for the IDs, since we may want to do the same with console.log/warn/error calls. I would actually like to extend this past just errors and receive a stream of log entries with nicely formatted stack traces.\n. >  I guess it's possible for multiple errors to happen and update the stack with the wrong one\nYeah, this is what I wanted to prevent in a robust way when two errors are thrown in quick succession.\n. >  I guess it's possible for multiple errors to happen and update the stack with the wrong one\nYeah, this is what I wanted to prevent in a robust way when two errors are thrown in quick succession.\n. It almost definitely won't be backwards compatible since it's a pretty big cost to have to anticipate how  every new version of JS will work with every old version of the native code. You should think of the code in this repository (Obj-C + JS) as a single black box.\n\nAt present my solution is adding a version number to the url from native manualy, and providing various versions of JS code, which forces the web developers to provide a new version of JS when native upgrade.\n\nEither do this or just bundle your JS with the native code and then there are no RN versioning issues to worry about.\n. There's a new version of the packager algorithm in one of the latest commits (https://github.com/frantic/react-native/commit/2d4055e513fea0cb36873447d67e64229a187aad) that should more closely match the node_modules algorithm. It hasn't been merged yet due to the tests' not passing but once merged it may solve this issue of not being able to use your own copy of underscore.\nThat being said it would be nice if RN used npm's semver caret in package.json so that you could use the latest compatible version of underscore by just running npm install... I put up #1736 to address that.\n. Yes, you could ship with npm-shrinkwrap.json since users always have the option to install with --no-shrinkwrap.\nPersonally I would still try publishing react-native without npm-shrinkwrap.json because it offers users more flexibility with dependency versions so that \"npm dedupe\" is more likely to be able to remove duplicate packages, and it lets users automatically receive bugfixes from package authors. The majority of npm packages aren't shrinkwrapped and it's been working well. If it ends up being a pain then I think publishing the shrinkwrap JSON is ok.\n. Regarding package deduping, npm 3 (announced just a couple hours ago!) will dedupe by default: https://github.com/npm/npm/releases/tag/v3.0.0. As a realistic example, if an app depends on the \"promise\" package this means npm will try to set up this folder hierarchy:\nnode_modules\n  promise\n  react-native\n    node_modules\n      ... everything except promise\nYou guys probably have done some perf experiments showing how important it is to minimize JS evaluation on mobile so this optimization is pretty exciting.\nContinuing with the example, react-native is currently using promise 7.0.3. In the future, say that I want to use a new feature or optimization in promise 7.1.0 when it comes out. Assuming the maintainer of the promise package is following semver (most people try to be good about it), this should be a backwards-compatible upgrade. \nIf react-native is pinned to promise 7.0.3 exactly, then npm will set up this:\nnode_modules\n  promise@7.1.0\n  react-native\n    node_modules\n      promise@7.0.3\n      ... everything else\nand now the app loses the benefits of deduping.\nSo the tl;dr is: the carets in package.json let me get this deduping optimization. If you guys decide to ship with npm-shrinkwrap.json I can still get the optimization by running npm install --no-shrinkwrap. If you leave out npm-shrinkwrap.json then everyone will get the optimization by default (but at the risk of a package maintainer not following semver).\n. No it does not. In iOS 9 all NSURLSessions automatically support HTTP2.\n. Actually I misspoke - there is some SPDY support in iOS 8. But React Native doesn't do anything special regarding SPDY.\n. Great to see exploration in this area... I think we can make writing stylesheets better in a bunch of ways.\nFor this specific use case, you could omit the StyleSheet.create calls from the styles you want to share so that they remain plain JS objects. RN will happily accept them without the StyleSheet.create wrapper, at some cost to performance because you then would be sending JSON-encoded objects instead of a single stylesheet ID from JS to native.\nAnother approach would be to let StyleSheet.create accept multiple arguments so you could write:\njs\nStyleSheet.create(\n  BigLabelStyle,\n  RedLabelStyle,\n  {\n    label: {\n      fontSize: 18,\n      padding: 5\n    }\n  },\n);\nThe nice thing is that you could implement this entirely in user space without modifying RN. In fact I encourage you to do that (ex: set up a project called MultiStyleSheet) to explore and learn how useful new techniques like this are.\n. I am excited about npm 3 and the potential performance improvements from deduping.. @evansolomon  thanks for taking the initiative!\n. cc @amasad. ~~the babel version will need be bumped to 5.6.11 I think.~~ Looks like the new version of babel-core is raising this warning.\n. The packager only works with statically analyzable requires. Treat require like a keyword (as you would with ES6 import).\n. Thank you :)\n. I want to merge the ListView's props (e.g. scrollEventThrottle) with the underlying ScrollView's props if renderScrollView returned something like <ScrollView pageSize={10} />, but the implementation in this diff is not flexible enough. I'll update it to your renderScrollView(props) idea  after I try composing some ScrollViews together.\n. ~~getters and setters are implicitly declared by obj-c~~\nedit: didn't realize these were static methods\n. Can remove this, the property declarations below are sufficient\n. Can remove these, Obj-C autosynthesizes properties now\n. just alloc instead of allocWithZone is generally preferred\n. The stack trace will have an extra frame for _createErrorFromErrorData but it's going to be full of internal methods with BatchedBridgeFactory and MessageQueue anyway. We could also use the Error.prepareStackTrace API (V8 only though) to modify the trace too.\nThe nice thing about this overall diff is that the Promise library can enable long stack traces. I have not tried it yet, but if a user wants to set global.Promise = bluebird and turn on debugging mode, I believe they will get long stack traces for free =)\n. Just to make sure I understand what you're saying:\n1. Non-promise callbacks are invoked. Also the resolve/reject functions are invoked, which schedules setImmediate/nextTick.\n2. React batch processing -- this checks the message queue for new JS -> native calls and sends them to native(?)\n3. --- next tick ---\n4. The then/catch handlers of the promises run\nI'm not sure what the right answer is though I have a couple of thoughts. Ideally this should not affect the program's correctness, since generally speaking it's not possible to know for sure when the promise will be fulfilled so better to program defensively. It may affect performance because of the extra tick and reduced batching -- wish that could be better. I do like the fact that global.Promise can be swapped out for a custom promise library like bluebird so features like long stack traces are available -- this is the main reason I would not be in favor of relying on a non-standard polyfill. Maybe the right tradeoff is to have a synchronous polyfill by default but still allow bluebird, etc. at the cost of the extra setImmediate tick.\n. I was thinking we would want the behavior and extra functions of global.Promise, like long stack traces and promise.done().\nSetting out-of-order execution aside for a moment, it looks like the setImmediate handlers should be batched. That way we'll keep most of the performance though there will be two batches instead of one unless we refactor the code a bit.\nHere's what I think we should do longer-term:\n1. Call ReactUpdates.batchedUpdate when processing the setImmediate handlers since they do not appear batched right now\n2. Rename setImmediate to process.nextTick. The current behavior of setImmediate is closer to process.nextTick than setImmediate since the handlers are synchronously invoked at the end of the JS event loop.\n3. Most Promise libraries will automatically use nextTick if it is available. Nothing should break.\n4. Implement setImmediate according to the spec or as much as is reasonable =)\n5. Convert most bridge methods to promises. Now they are batched and in order again (if everyone is using Promises).\nI'd like to start with the built-in Promise library if that's OK, and then can optimize later if it's causing problems. The really sensitive code like the UIManager should keep using callbacks for now -- but modules like AsyncStorage and the network library are fine if they aren't batched since they fire at unpredictable times.\n. Here's a sample trace with bluebird's long stack traces enabled in JSC. Code looks like:\njs\n  componentDidMount() {\n    new Promise((resolve) => resolve(1)).then(() => {\n      require('NativeModules').Testing.testAsync().catch(\n        (err) => console.log(err.stack)\n      );\n    });\n  }\nError: Unknown error from a native module\n    _createErrorFromErrorData@UIExplorer:7330:24\n    _invokeCallback@UIExplorer:7659:15\n    forEach@[native code]\n    perform@UIExplorer:6188:24\n    batchedUpdates@UIExplorer:18840:26\n    batchedUpdates@UIExplorer:4720:34\n    applyWithGuard@UIExplorer:882:25\n    guardReturn@UIExplorer:7487:30\nFrom previous event:\n    callTimer@UIExplorer:7981:17\n    callImmediates@UIExplorer:8030:34\n    _flushedQueueUnguarded@UIExplorer:7855:37\n    applyWithGuard@UIExplorer:882:25\n    guardReturn@UIExplorer:7490:37\nFrom previous event:\n    UIExplorerApp_componentDidMount@UIExplorer:1157:12\n    notifyAll@UIExplorer:4957:26\n    close@UIExplorer:19254:35\n    closeAll@UIExplorer:6261:29\n    perform@UIExplorer:6202:24\n    batchedMountComponentIntoNode@UIExplorer:20834:22\n    batchedUpdates@UIExplorer:18838:15\n    batchedUpdates@UIExplorer:4720:34\n    renderComponent@UIExplorer:20903:32\n    ReactMount__renderNewRootComponent@UIExplorer:5056:26\n    render@UIExplorer:1350:39\n    renderApplication@UIExplorer:40446:15\n    run@UIExplorer:40387:34\n    runApplication@UIExplorer:40409:26\n    jsCall@UIExplorer:7438:34\n    _callFunction@UIExplorer:7693:21\n    forEach@[native code]\n    perform@UIExplorer:6188:24\n    batchedUpdates@UIExplorer:18840:26\n    batchedUpdates@UIExplorer:4720:34\n    applyWithGuard@UIExplorer:882:25\n    guardReturn@UIExplorer:7487:30\n    processBatch@UIExplorer:7712:23\nIt's not clean but it's really good that it shows the error originated from componentDidMount. Compare it to the error with the current Promise library and no long stack traces:\nError: Unknown error from a native module\n    _createErrorFromErrorData@UIExplorer:7328:24\n    UIExplorer:7283:54\n    _invokeCallback@UIExplorer:7657:15\n    UIExplorer:7720:39\n    forEach@[native code]\n    UIExplorer:7712:22\n    perform@UIExplorer:6186:24\n    batchedUpdates@UIExplorer:13850:26\n    batchedUpdates@UIExplorer:4718:34\n    UIExplorer:7711:34\n    applyWithGuard@UIExplorer:882:25\n    guardReturn@UIExplorer:7485:30\n    processBatch@UIExplorer:7710:23\n    [native code]\n    global code\nSo I think this will help contribute to much better debugging.\n. Looks like a neat fb extension, will add this.\n. Slightly prefer _timeoutTimer.valid since it's documented that way here: https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSTimer_Class/index.html#//apple_ref/occ/instp/NSTimer/valid\n. it's unrelated iirc\n. We should expose this as a separate prop so that changing the bar background color doesn't automatically toggle the shadow.\n. Is this needed? I am wondering because there is a little extra complexity needed to handle the case where a bar switches between a bar tint color with alpha and without alpha (bar.translucent should revert to its default state when going back to a bar tint color without alpha)\n. \"a lot of hard tracking down bugs.\" could use rephrasing\n. Agreed. There is a slightly tricky edge case to handle: on the Image's first render pass we don't provide an onProgress handler, and then provide one on the second pass. So the view/viewmanager needs to enable/disable the progress events when the onProgress handler prop is set/removed.\n. remove newline\n. - operator goes at the end of the line above\n. Will update with a renamed version.\nRegarding isRequired, I understand it to mean that the type of this.props.renderScrollView is Function instead of ?Function in Flow-speak. So because we're saying the prop is non-null (which is true because of the default value from getDefaultProps), Flow won't complain about this.props.renderScrollView() needing a null check.\n. Yeah, here's a small example:\n``` js\n/*\n * @flow\n /\n'use strict';\nvar React = require('react-native');\nvar { PropTypes, Text } = React;\nvar App = React.createClass({\n  propTypes: {\n    getContent: PropTypes.func,\n  },\nrender() {\n    var content = this.props.getContent();\n    return {content};\n  },\n});\n```\nFlow prints:\n/Users/ide/test/index.js:15:19,41: call of method getContent\nFunction cannot be called on possibly undefined value\n/Users/ide/test/index.js:11:17,30: undefined\nAdding isRequired makes the error go away.\n. Adding getDefaultProps doesn't make the error go away (Flow 0.11.0):\njs\n  getDefaultProps() {\n    return {\n      getContent() { return 'x'; }\n    };\n  },\n. use a recursive approach for robustness: http://jslim.net/blog/2014/02/28/remove-the-1px-shadow-from-uinavigationbar/\n. hide it instead of removing it. we may want to support re-showing it if shadowHidden gets set back to false.\n. I prefer a separate commit so it's easy to bisect & revert if some product at fb is relying on this detail.\n. setNativeProps is best used for continuous animations, to avoid the overhead of rendering the component hierarchy and reconciling many views. I believe we want to discourage it from an API perspective since it is imperative and stores state in the native layer (DOM, UIView, etc.)\n. Tracking the opacity value is one of the features of React. Once you need to write code that needs to know the current opacity you'd either need to store the opacity value in this.state or introduce getNativeProps which is now back to directly storing/reading state from the DOM.\n. Small rephrasing:\nIf you run this you will immediately see this error: Touchable child must either be native or forward setNativeProps to a native component. This occurs because MyButton isn't directly backed by a native view whose opacity should be set. You can think about it like this: if you define a component with React.createClass you would not expect to be able to set a style prop on it and have that work - you would need to pass the style prop down to a child, unless you are wrapping a native component. So the two options we have, as the error message so kindly suggests, are to make the composite component into a native component or to forward setNativeProps to child component with native backing (in the same way that we would pass style down to a child).\n. Don't think we want to encourage this. For now it seems like only natively backed components (e.g. View, ActivityIndicator) should be native, and NativeMethodsMixin and the viewConfig are details reserved for native component authors. cc @sahrens for your thoughts.\n. minor suggestion: encourage the callback refs API which is more composable\njs\nref={component => this._root = component}\n. clearText() and render()  to match the syntax you use in other examples\n. OSS -> open-source, just to make it obvious\n. As a sub bullet point you might want to mention that you get animations and behavior that Apple has developed.\n. sub-bullet point: currently, animations are good but less refined than Apple's\n. The point we should convey is that setNativeProps is a perf optimization, so if \"a lot of work\" refers to a lot of CPU cycles I agree with that and rephrase as\n\nThis is computationally intensive compared to the original example - React needs to re-render the component hierarchy each time the opacity changes, even though other properties of the view and its children haven't changed. Usually this overhead isn't a concern but when performing continuous animations and responding to gestures, judiciously optimizing your components can improve your animations' fidelity.\n\nIf it's referring to a lot of typing code, I don't think setNativeProps is the right technique to reduce that because the program becomes more complex in a bunch of ways (this component should own the opacity value but now it doesn't know it, the source of truth of the opacity value is now stored on the native view, and later re-renders could clobber the effects of setNativeProps as you mentioned at the end of this doc).\n. Use blockquoting instead of code formatting\n. The hyphen is rendered as a bullet point\n. > simply select and hit delete to go back to the CocoaPods default.\nclarify what should be selected\n. > exact error what is causing\nrephrase slightly e.g. \"exact error that is causing\" \n. spelling in the first sentence - dependencies\n. Subspecs array syntax might be easier to work with since RN has a ton of subspecs. Also might be worth including the remote debugger and RCTWebSocket in the example to head off questions about why it's not working.\nruby\npod 'React', :subspecs => [\n  'RCTText',\n  'RCTImage',\n  'RCTNetwork',\n  'RCTWebSocket',\n]\n. missing \"s\"\n. Should be OK to keep local/relative requires where they were before, right?\n. Ah - that makes sense.\n. can you update this to use spaces instead of tabs?\nalso put a trailing comma after the last property\n. This should be \"0.11.0\" (or I guess 0.13.1 now) without the caret since .flowconfig's [version] doesn't support semver yet (I think?). Opened up https://github.com/facebook/flow/issues/592.\n. is it OK to ignore the orientation info? seems like this metadata should be threaded through to all the way to coregraphics.\n. Since this is blocking you I would fork React Native and publish the app with the patched version. Since this commit is small it should be pretty easy to rebase on top of new updates to React Native until the camera roll and image resource handling is improved.\n. maybe implement backoff?\n. Yeah -- Babel has this hack where it patches ast-types and I needed to update the dependencies in RN's package.json to get things working.\n. Maybe hasSuffix instead of containsString in case some font family names contain common words like \"regular\"? Not sure how good of a heuristic it is.\n. Is traits[UIFontWeightTrait] an NSNumber equal to zero or is it nil? The nil check seems more appropriate if the latter is true.\n. @YES\n. @YES\n. @YES is the modern syntax.\n. @YES ;)\n. Also in this specific case you could write @{@\"*\": @YES}\n. I believe you should handle the case where json is nil with defaultView.aspectRatio.\n. \"...width of [the] parent...\"\nalso can you adjust the line width of the comment to be 80 chars?\n. Ideally, the aspect ratio would support views that have a known height (either hardcoded height from the stylesheet, or alignSelf: stretch in a horizontal parent) and unknown width. Any way to support this?\n. A good way is to use:\n```\nexecFile(flowbin, ['--json', '--timeout', 20], {cwd: flowroot}, (flowError, stdout, stderr) => {\n});\n``\n. there is now caret support so this can safely be^0.14.0`!\n. This should work and be safe I think:\njs\nexecFile('command', ['-v', flowbin], error => {\n});\n. remove, unused\n. remove, unused\n. shouldn't this be If-None-Match on the incoming request?\n. shouldn't this be If-None-Match on the incoming request?\n. You should be able to do something like [subview endEditing:YES] instead of doing the complete traversal. Also can remove the uiManager parameter since self == uiManager.\nobjc\nUIView *view = uiManager.viewRegistry[reactTag];\nif (view) {\n  [view endEditing:YES];\n} else {\n  // Recurse through the shadow hierarchy when the shadow view has no backing UIView\n  for (RCTShadowView *subview in [shadowView reactSubviews]) {\n    [self endEditingForShadowView:subview.reactTag viewRegistry:viewRegistry];\n  }\n}\n. Could change __block UIView *stickyHeader to __block UIView *hitView and set it inside the enumeration loop, avoiding an extra hitTest: call at the end of this method.\n. I think this blocks the image loader thread but not the main thread so it will block the loading of other images.\n. I think this blocks the image loader thread but not the main thread so it will block the loading of other images.\n. weird. good to know, thanks.\n. weird. good to know, thanks.\n. Thanks guys. I'll send a PR fix once the latest sync is merged.\n. Thanks guys. I'll send a PR fix once the latest sync is merged.\n. This should be a check for !titleStyles since people sometimes pass in false for styles\n. minor: [NSMutableDictionary dictionary]\n. Change the check to textAttributes.count so it's easier to add more properties in the future\n. I believe if json is nil, the weight just doesn't change if view.titleFont already has a custom weight but it should get reset to the default value here (like you did for the font size).\n. here too\n. Can you change these to TextStylePropTypes.color etc? So like:\njs\ncolor: TextStylePropTypes.color,\nfontFamily: TextStylePropTypes.fonFamily,\n. Fixed in #2334.\n. Fixed in #2334.\n. we don't want to run this on every drawRect call, it's too expensive\n. we don't want to run this on every drawRect call, it's too expensive\n. Would need to profile this but since text layout is one of the slowest operations, my sense is that this should binary search for the appropriate size.\n. Would need to profile this but since text layout is one of the slowest operations, my sense is that this should binary search for the appropriate size.\n. should round to the nearest device pixel, not whole number. there's some utility function to do that in react. also since it's a position (instead of a dimension) it should round down.\n. should round to the nearest device pixel, not whole number. there's some utility function to do that in react. also since it's a position (instead of a dimension) it should round down.\n. Shouldn't the style be a string instead of @NO? Is there a reason you pass in NO instead of @\"normal\"?\n. This should be @\"normal\" instead of UIFontWeightRegular right?\n. Style: Closing > goes on the same line as the last prop for opening JSX tags\n. style nit: trailing comma on the last item when each key: value pair is on its own line\n. SOP should be kept on by default. It will be bad if someone launches Chrome with the RN tools and then starts using it as their browser.\n. (new coding guideline) [NSShadow new]\n. (new coding guideline) [NSShadow new]\n. remove\n. remove\n. Just bail out & return early if !isEnabled to avoid all this indentation.\n. Just bail out & return early if !isEnabled to avoid all this indentation.\n. There's no style guide but avoiding multiple exits sometimes leads to extra convoluted code. When you return early it can make your code simpler because you're reducing the state space of your program and keeping the code visually easier to read because there's less indentation.\n. There's no style guide but avoiding multiple exits sometimes leads to extra convoluted code. When you return early it can make your code simpler because you're reducing the state space of your program and keeping the code visually easier to read because there's less indentation.\n. NSValue instead of id\n. NSValue instead of id\n. if dimensions is nil, then exclude the \"size\" from the event object (otherwise include it). This means that if we download an image that actually has 0 width or height, it will be reported to the JS code.\n. if dimensions is nil, then exclude the \"size\" from the event object (otherwise include it). This means that if we download an image that actually has 0 width or height, it will be reported to the JS code.\n. In terms of code style it might be more succinct to start with \n[NSMutableDictionary dictionaryWithDictionary:@{\n  @\"target\": self.reactTag,\n}];\nand add \"size\" to it later\n. In terms of code style it might be more succinct to start with \n[NSMutableDictionary dictionaryWithDictionary:@{\n  @\"target\": self.reactTag,\n}];\nand add \"size\" to it later\n. remove\n. remove\n. ?\n. ?\n. trailing comma\n. trailing comma\n. can you put the replace() call inside of the ${} so it explicitly escapes just the module name?\n. ? i don't think this does what you meant\n. ? i don't think this does what you meant\n. what i mean is that validAttributes doesn't control the default value of the props, which you've already done below.\n. This makes a lot of sense\n. +1 to a deprecation message. Whether it just warns and fails, or warns and makes root work for now, either sound good to me.\n. +1 to a deprecation message. Whether it just warns and fails, or warns and makes root work for now, either sound good to me.\n. This is tricky since we want to support more than rgba... I think the right solution is for the native layer to round. \n. Shouldn't this actually be index.bundle?platform=ios? Just like how you can write require('button') and the system automatically loads button.ios.js, it seems consistent for index.bundle to automatically refer to index.ios.js.\n. packages.json -> package.json\n. dedent lines 43-49 \n. Latest Android Studio uses this instead:\n*/.idea/workspace.xml\n*/.idea/libraries\n. ~~projectRoots -> roots?~~ nvm, now see this that this is for the middleware\n. ~~projectRoots -> roots?~~ nvm, now see this that this is for the middleware\n. Agree with @foghina's suggestion. If you find that Java-WebSocket works better though you could always publish your own module to npm instead though.\n. Agree with @foghina's suggestion. If you find that Java-WebSocket works better though you could always publish your own module to npm instead though.\n. If the intent is to match any character, use [\\s\\S] instead.\n. why 1000?\nnvm: can you add a comment or assign this to a variable/constant so it's documented?\n. why 1000?\nnvm: can you add a comment or assign this to a variable/constant so it's documented?\n. Done!\n. Done!\n. Can you make this an actual Java comment?\n. Can you make this an actual Java comment?\n. Separate PR sounds good since it's easier to go through the commit logs and bisect if there's an issue. Could you rename maxHeight to maxLength since the ScrollView could be horizontal, and wrap the code to fit 80 cols?\n. Separate PR sounds good since it's easier to go through the commit logs and bisect if there's an issue. Could you rename maxHeight to maxLength since the ScrollView could be horizontal, and wrap the code to fit 80 cols?\n. e.nativeEvent.updatedChildFrames\n. e.nativeEvent.updatedChildFrames\n. I think I agree with the attached issue... if you scroll to the end, then scroll back up, and then scroll down again, you should get another \"onEndReached\" event. This gives the owner more flexibility over whether it wants to dedupe the event or not.\n. I think I agree with the attached issue... if you scroll to the end, then scroll back up, and then scroll down again, you should get another \"onEndReached\" event. This gives the owner more flexibility over whether it wants to dedupe the event or not.\n. style: remove newline\n. style: remove newline\n. here too\n. here too\n. 2 space indentation\n. Please wrap to 80 cols. Also add @platform ios on the last line since Android has a different behavior.\n. Please wrap to 80 cols. Also add @platform ios on the last line since Android has a different behavior.\n. Space after each comma\n. Space after each comma\n. I worry about shell injection.. can you use something like https://www.npmjs.com/package/shell-escape or child_process.spawn to defend against this?\n. I worry about shell injection.. can you use something like https://www.npmjs.com/package/shell-escape or child_process.spawn to defend against this?\n. I'll let @frantic and @foghina make the call since they can make the call from FB's security perspective. I didn't test with cli.js but I was able to inject code into a similar child_process.exec with HACK=\"&& ls\" node test.js.\n. I'll let @frantic and @foghina make the call since they can make the call from FB's security perspective. I didn't test with cli.js but I was able to inject code into a similar child_process.exec with HACK=\"&& ls\" node test.js.\n. Typo\n. Typo\n. We might want to name it the same as iOS (could change the iOS side too). The JS needs to be deduped before this PR is merged.\n. We might want to name it the same as iOS (could change the iOS side too). The JS needs to be deduped before this PR is merged.\n. WebSocket.android/iOS.js should be replaced with just WebSocket.js, or they should be small files that inject their differences into WebSocketBase.js. \n. ~~Use {3} for brevity~~\nscratch that, the quantifier only gets the last capturing group\n. 2 spaces for indentation \n. I think it'd be good and less surprising to support a mix of rgb and hex.\n. ...and then have this not throw\n. This may break Facebook's code. cc @vjeux can you grep for this?\n. these licenses should be BSD\n. spaces after the commas\n. The list is hardcoded in some way (whitelist or blacklist) because we don't want to include everything under Libraries by default. For example if you include Libraries/AdSupport your app will be rejected unless you display ads.\nThe point of the bridging header is to expose Obj-C classes, etc to Swift. We actually don't need very much in Swift -- just some of the base RCT classes like RCTRootView, RCTBridge, and a couple of the base types like RCTBridgeModule. What if we exported only those, and anyone who wants to use more than the five or six exported files can modify the bridge header themselves (the people who need this feature know how to use it).\n. The list is hardcoded in some way (whitelist or blacklist) because we don't want to include everything under Libraries by default. For example if you include Libraries/AdSupport your app will be rejected unless you display ads.\nThe point of the bridging header is to expose Obj-C classes, etc to Swift. We actually don't need very much in Swift -- just some of the base RCT classes like RCTRootView, RCTBridge, and a couple of the base types like RCTBridgeModule. What if we exported only those, and anyone who wants to use more than the five or six exported files can modify the bridge header themselves (the people who need this feature know how to use it).\n. spelling\n. spelling\n. ~~Could we greatly simplify this PR by using image.size (may need to be careful to account for screen scale -- but it sure would make this PR super short :D )?~~\nnvm, that goes back to my original comment on this PR\n. ~~Could we greatly simplify this PR by using image.size (may need to be careful to account for screen scale -- but it sure would make this PR super short :D )?~~\nnvm, that goes back to my original comment on this PR\n. We'll lose data if there are multiple values for the same header. okhttp has a method to get a list of values for a single header, for example.\n. We'll lose data if there are multiple values for the same header. okhttp has a method to get a list of values for a single header, for example.\n. style nit: instead of assign... {...descriptor, value: GLOBAL[name]} :D\n. style nit: instead of assign... {...descriptor, value: GLOBAL[name]} :D\n. This should read global.XMLHttpRequest\n. This should read global.XMLHttpRequest\n. My linter was going off on unused imports so I removed a few.\n. My linter was going off on unused imports so I removed a few.\n. space after the colon\n. space after the colon\n. space after colon likethe other type decls? also if you wanted to take this further you could maybe write: static flatten: typeof flattenStyle http://flowtype.org/docs/typeof.html\n. Can you move the await call inside of the async function? Sometimes people think they can use await outside of an async fn.\n. This check should be more dynamic. Check if forceTouchCapability is defined (iOS 9+) and enabled.\n. Ok can you just replace the iOS 9 check with whether forceTouchCapability is defined by the system OS (regardless of its value?)\n. nit: use property syntax instead of calls: nativeTouch.view.traitCollection\n. On iOS you can re-use the same bridge with a different sourceURL. \"reload\" is a bit of a misnomer here since you're loading a different URL, but you could imagine something like: \nbridge.sourceURL = \"http://localhost:8081/bundle.js?version=1\"\n... later in the program ...\nbridge.sourceURL = \"http://localhost:8081/bundle.js?version=2\"\nbridge.reload();\nBy making \"bundleFile be mutable\" @arbesfeld is referring to adding a method like setBundleFile(String) to ReactInstanceManager. \n. think this was supposed to say \"native view [and] only requires\"\n. Versions are not like normal numbers. For example 9.10 is a later version than 9.9. Also need to handle 9.9.1 for example.\n. nit: space between parens and curly\n. +1 @javache. The ideas conveyed by the docs are more valuable than the code and it comes down to striking a good SNR.\n. Can you remove the \"By\" at the beginning, and then update this PR after squashing your commits (git rebase -i master)?\n. remove the await\n. Yes, it's purely implemented in JS. (The iOS bridge has support for defining bridged async functions, which we need to add to Android. But you can use pure JS async functions on both platforms.)\n. is using a comma the way you're supposed to do this?\n. Can you pull this out into a shared file like XHRExampleHeaders.js so it's not duplicated across platforms?\n. Yeah that's great. Would be good to get to a state where you pay for only what you use, for most of the components & modules.\n. Shouldn't this work with npm 2 as well? Specifically, both npm 2 and npm 3 should set up node_modules in ways that are compatible with Node's require algo.\n. Oh I see. Should package.json in website depend on recast then? (Or is this a weird case where recast is stateful and different packages need to access the same instance?)\n. The callback is pushed onto the queue i.e. invoked when the interaction completes. That's my reading of @philikon's code at least. The InteractionManager wraps each callback in an ErrorUtils guard so even if the callback fails the InteractionManager will run the promise's resolve function.\n. Rather than checking for this specific ordering of options, it'd be more robust to start with no paint flags, split the string on spaces (so we get an array of options), and apply them each to the bitmask so we'd support \"line-through underline\" and potentially also combinations with \"overline\" one day.\nIt looks like the iOS side is similarly constrained but it seems like a good change to make.\n. Good point about x-platform parity. Would you like to submit a follow-up PR that adds flexible parsing to Android and iOS? That'd be awesome!\n. style nit: unindent 2 spaces\n. Yep - I'll add a little -z check. (let me know if you'd like a more robust check)\n. Use the object spread operator instead of Object.assign.\n. space after colon\n. Use getHeader(header) { ... } shorthand. Same for setHeader and end below.\n. semicolon\n. \"load/require is\" => \"load/require it\"\n. in facebook-speak, the red error screen is called the \"redbox\"\n. nit: could you change the variable names to this.body?\n. can you change this back to res? the model is - there's a response object that has several methods on it like end and one field of it (for testing purposes) is a string called body which contains the body of the HTTP response.\nso, this line and everything below it should be res I think.\n. cross platform -> cross-platform\n. 2 spaces for indentation. also can you add a trailing comma at the end of this line?\n. Capitalize \"Android\"\n. if (_refreshControl) and remove the return statement since we want to clear the current one\n. ES7 -> ES2016\n. I modified this a bit to add some more detail and tried to be concise:\nNative modules can also fulfill a promise, which can simplify your code, especially when using ES2016's async/await syntax. When the last parameter of a bridged native method is a Promise, its corresponding JS method will return a JS Promise object.\nRefactoring the above code to use a promise instead of callbacks looks like this:\n. I think we'll want to pass in Exception objects. The iOS API for promises takes in NSErrors, which lets us propagate native stack traces up to JS. cc @davidaurelio \n. Suggestion:\nThe JavaScript counterpart of this method returns a Promise. This means you can use the await keyword within an async function to call it and wait for its result:\n``` js\nasync function printLayoutAsync() {\n  try {\n    let {\n      relativeX,\n      relativeY,\n      width,\n      height,\n    } = await UIManager.measureLayout(100, 100);\nconsole.log(relativeX + ':' + relativeY + ':' + width + ':' + height);\n\n} catch (e) {\n    console.error(e);\n  }\n}\n```\n. Same suggestion as for Android:\nNative modules can also fulfill a promise, which can simplify your code, especially when using ES2016's async/await syntax. When the last parameters of a bridged native method are an RCTPromiseResolveBlock and RCTPromiseRejectBlock, its corresponding JS method will return a JS Promise object.\nRefactoring the above code to use a promise instead of callbacks looks like this:\n. Likewise, I have the same suggestion as for Android -- specifically, putting the code inside of an async function so that people don't try to use await outside of one, which is nonsensical.\n. Need to name this RCT_EXPORT_METHOD(findEvents:(RCTPromiseResolveBlock)resolve or else it will define a JS method called 'resolve' :)\n. Oops, can you wrap await in backticks? (and in the obj-c example too)\n. Did you test this code by actually compiling and running it?\n. Do more graceful type checking here -- RCTLog an error and fall back to the default origin if the value is not a string. Also prefer dictionary indexing syntax.\n. Same here with type checking and syntax.\n. I don't think we should do this. It complicates the type signature once we try to use more precise types than any?. Always specify a value for protocols -- much simpler that way.\n. Delete this -- this is intrinsically expressed by the code.\n. Delete this -- this is intrinsically expressed by the code.\n. Move the types into the method signature itself.\n. Move the types into the method signature itself.\n. Might want to define a typedef for the options so it's clear exactly what options are supported.\n. Might want to define a typedef for the options so it's clear exactly what options are supported.\n. protocols should be an array, right? Make sure to test this case.\n. protocols should be an array, right? Make sure to test this case.\n. Can you add a TODO comment to support this? For other APIs, arrays of header values are joined by \", \".\n. Can you add a TODO comment to support this? For other APIs, arrays of header values are joined by \", \".\n. can you indent this so it's left-aligned with int duration: ...?\n. can you indent this so it's left-aligned with int duration: ...?\n. check if nodenv exists before modifying $PATH\n. use -x and command instead of which (copy the style used for brew above)\n. I don't know enough about nodenv -- do you know if $HOME/.nodenv/bin needs to be added to $PATH for it to work or is this enough?\nAlso could you change -s to -x?\n. I don't know enough about nodenv -- do you know if $HOME/.nodenv/bin needs to be added to $PATH for it to work or is this enough?\nAlso could you change -s to -x?\n. spelling: \"release\"\n. spelling: \"release\"\n. _requestedOptions[@\"origin\"] ?: _url.RCTSR_origin\n. _requestedOptions[@\"origin\"] ?: _url.RCTSR_origin\n. Maybe files.push.apply(files, file.getFiles()) to avoid the overhead of invoking the arrow function each time? (also would be good to have a comment explaining that this micro optimization is meaningful)\n. Maybe files.push.apply(files, file.getFiles()) to avoid the overhead of invoking the arrow function each time? (also would be good to have a comment explaining that this micro optimization is meaningful)\n. Style: 2 spaces for indentation\n. Style: 2 spaces for indentation\n. This require should go above this group of lowercased requires \n. This require should go above this group of lowercased requires \n. > Node won't apply more than 65536 arguments to a function\nwow good find. I would worry about calling concat many times since it could result in O(n^2) performance. Maybe change files to fileArrays and build up an array of arrays that get merged at the end with [].concat(...fileArrays)\n. > Node won't apply more than 65536 arguments to a function\nwow good find. I would worry about calling concat many times since it could result in O(n^2) performance. Maybe change files to fileArrays and build up an array of arrays that get merged at the end with [].concat(...fileArrays)\n. @cpojer if we call concat many times on huge arrays I'm concerned we'll get bad performance unless V8 has some special optimization for concat\n. @cpojer if we call concat many times on huge arrays I'm concerned we'll get bad performance unless V8 has some special optimization for concat\n. @cpojer philikon's approach is simple to read and should be close to optimal. Calling concat many times on arrays with > 100k elements is going to invoke a lot of extra copying unless V8 is using persistent data structures or CoW under the hood.\n. @cpojer philikon's approach is simple to read and should be close to optimal. Calling concat many times on arrays with > 100k elements is going to invoke a lot of extra copying unless V8 is using persistent data structures or CoW under the hood.\n. The packager runs on Node 4+ so yes =)\n. The packager runs on Node 4+ so yes =)\n. Single quoted strings\n. space between here and (\n. space between here and (\n. Did you mean to delete this example?\n. Change this to just != null\n. Change this to just != null\n. @astreet there is a PR (incomplete) to support flexible parsing: #3819. So either that PR should get updated or this PR should borrow code from the other one.\n. @astreet there is a PR (incomplete) to support flexible parsing: #3819. So either that PR should get updated or this PR should borrow code from the other one.\n. @vjeux are you OK with this link in the docblock?\n. I was wondering if it would be confusing to people inside facebook reading the code. if you're ok with it let's ship this.\n. OK. Let's revert unless there's a stronger reason to keep this diff.\n. Revert here: https://github.com/facebook/react-native/pull/5296\n. can you remove this and use just the link key?\n. Thinking about this some more, I think the babelrc under the path specified by --projectRoots is what we want to use. That way if you invoke the packager and point it at another directory, we'd correctly use that directory's .babelrc.\n. Just add RCTSRWebSocketDelegate to the protocol list here\n. Can you do this lookup dynamically so that we support both npm 2 and npm 3? Maybe require.resolve('babel-core') would help.\n. Can you do this lookup dynamically so that we support both npm 2 and npm 3? Maybe require.resolve('babel-core') would help.\n. This doesn't resolve to package.json... please test more thoroughly.\n. This doesn't resolve to package.json... please test more thoroughly.\n. Use call instead of bind\n. Use call instead of bind\n. change this to an arrow function\n. change this to an arrow function\n. AFAIK all instances will share this static variable.. better to initialize _sockets in the initializer\n. AFAIK all instances will share this static variable.. better to initialize _sockets in the initializer\n. the reliance on cwd here might be fragile. just a thought.\n. the reliance on cwd here might be fragile. just a thought.\n. Files with @polyfill don't get wrapped in a closure scope (i.e. they aren't modules) in the internal Facebook packager... @martinbigio is it OK to make the changes below, in React Native's source?\n. docblocks need to go above the props\n. docblocks need to go above the props\n. Also, if getSize isn't a prop we shouldn't pretend it's one. Better to have no docs than wrong docs...\n. Also, if getSize isn't a prop we shouldn't pretend it's one. Better to have no docs than wrong docs...\n. spelling: occurrences\nalso basing off of frequency is smart\n. This should be #rrggbbaa per CSS4: https://drafts.csswg.org/css-color-4/#hex-notation. Let's issue a breaking change.\n. This should probably be rrggbbaa too for consistency.\n. If it's easy to add, CSS4 also specifies #rgba (four hex digits)\n. ...args in the function signature, then you can do args.join()\n(although maybe you want to pick a name other than args because this function is called args -- how about ...patterns?)\n. Shouldn't need \\\\ in the character class I think\n. Maybe we shouldn't officially support the raw ints (see discussion above). Specifically raw ints (aarrggbb) will work but you probably shouldn't use them directly.\n. Maybe we shouldn't officially support the raw ints (see discussion above). Specifically raw ints (aarrggbb) will work but you probably shouldn't use them directly.\n. code style, please write this as:\njs\nreturn (\n  <TextInput\n    props.....\n  />\n);\n. code style, please write this as:\njs\nreturn (\n  <TextInput\n    props.....\n  />\n);\n. We should probably take the code path that prints <unknown file> -- this might make it easier for log analyzers to consume.\n. I think it will be much simpler to understand the hit-testing rules if hitSlop affects only the size of the hit box and not the priority. Later we can add a new property like zIndex or hitPriority that affects the priority.\n. I think it will be much simpler to understand the hit-testing rules if hitSlop affects only the size of the hit box and not the priority. Later we can add a new property like zIndex or hitPriority that affects the priority.\n. style suggestion: I often use template strings for messages so quotes don't have to be escaped\n. style suggestion: I often use template strings for messages so quotes don't have to be escaped\n. Probably want to do the same here for consistency\n. Probably want to do the same here for consistency\n. IIRC they shipped with Node 4\n. IIRC they shipped with Node 4\n. use case-insensitive comparison\n. +1 to reading the version from RN package.json\n. +1 to reading the version from RN package.json\n. Please use semicolons and adhere to the coding conventions - look around to infer what they are\n. The line also becomes invalid when master changes, hence the point of this commit. Honestly instead of linking into the repo we should teach people how to read a code base e.g. Grep for Babel-preset and look around.\n. The line also becomes invalid when master changes, hence the point of this commit. Honestly instead of linking into the repo we should teach people how to read a code base e.g. Grep for Babel-preset and look around.\n. This isn't quite right -- the problem is that ListView won't scroll unless it has a non-zero height. Flex is one way to achieve that, but I think if you specified height: 400, it would scroll too.\n. spaces\n. spaces\n. Remove these methods if they only call super\n. Remove these methods if they only call super\n. Curly braces on the same line for loops, if-clauses, etc. Look at other places in the file to infer the coding conventions.\n. Curly braces on the same line for loops, if-clauses, etc. Look at other places in the file to infer the coding conventions.\n. 2-space indentation\n. 2-space indentation\n. Make this a private class method: + (UIButton *)_findClearButton (cc @nicklockwood)\n. Make this a private class method: + (UIButton *)_findClearButton (cc @nicklockwood)\n. This too, make this a private ~~class~~ instance method\n. This too, make this a private ~~class~~ instance method\n. fix spacing\n. fix spacing\n. Instead of drawing a new image, it might be easier to create a new UIImage with renderingMode = UIImageRenderingModeAlwaysTemplate and set the tintColor of the UIButton.\n. JS strings now support startsWith as part of the standard API\n. JS strings now support startsWith as part of the standard API\n. Also we probably can write \"use strict\" now... can do that in a future diff.\n. We want to keep the word \"remote\" in the UI somewhere because that's one of the key differences between using JSC and one of these remote JS VMs... especially if we start experimenting with JSVMs that run on the UI thread and need to be on the device.\n. We want to keep the word \"remote\" in the UI somewhere because that's one of the key differences between using JSC and one of these remote JS VMs... especially if we start experimenting with JSVMs that run on the UI thread and need to be on the device.\n. You should be able to leave off the @Nullable assuming the return types are covariant (think I have that right)\n. Safari already supports this out of the box and gets better with each release, including this year's OS X update. However the React hierarchy debugger tool would need to be rewritten as a WebKit debugger extension (currently it runs only in Chrome or Firefox) and I'm not sure whether that is possible.\n. Safari already supports this out of the box and gets better with each release, including this year's OS X update. However the React hierarchy debugger tool would need to be rewritten as a WebKit debugger extension (currently it runs only in Chrome or Firefox) and I'm not sure whether that is possible.\n. We very recently changed (or plan to change) package.json to be version \"1000.0.0\" in master, so just package['version'] should suffice\n. 2 spaces for indentation in this file\n. Can you check for \"solid\" too?\n. Can you check for \"solid\" too?\n. > The values set by your custom class will be overwritten by the React Native layout/rendering process.\nCan you make this more precise, like \"React Native will overwrite the values set by your custom class in order to match your JS component's layout props.\"\n\nIf you need this grandular control\n\n\"this granularity of control\"\n. > The values set by your custom class will be overwritten by the React Native layout/rendering process.\nCan you make this more precise, like \"React Native will overwrite the values set by your custom class in order to match your JS component's layout props.\"\n\nIf you need this grandular control\n\n\"this granularity of control\"\n. This is a cheap check. The main thing we want to avoid is actually setting the native property every frame if we can help it, which in this case we should, since most of the time we're not changing the value of the pointerEvents property.\n. This is a cheap check. The main thing we want to avoid is actually setting the native property every frame if we can help it, which in this case we should, since most of the time we're not changing the value of the pointerEvents property.\n. Should be fine to leave this -- clearTimeout & cancelAnimationFrame are designed to accept null or inactive timer handles.\n. Should be fine to leave this -- clearTimeout & cancelAnimationFrame are designed to accept null or inactive timer handles.\n. When can innerViewNode be null? We should understand what's going on here and make sure that it's valid for setNativeProps to be called when innerViewNode is null, or instead fix whatever's calling setNativeProps at the wrong time.\n. When can innerViewNode be null? We should understand what's going on here and make sure that it's valid for setNativeProps to be called when innerViewNode is null, or instead fix whatever's calling setNativeProps at the wrong time.\n. I imagine FB's internal test suites would catch this very quickly if it didn't compile -- maybe try shipping this and if it fails we can go back to using Java 6 style catches?\n. I imagine FB's internal test suites would catch this very quickly if it didn't compile -- maybe try shipping this and if it fails we can go back to using Java 6 style catches?\n. Can this call go above line 341?\n. Can this call go above line 341?\n. I'll read the Fresco code more to see if this call is even necessary -- then we can either remove the unnecessary call, or will add a finally block if it is necessary.\n. I'll read the Fresco code more to see if this call is even necessary -- then we can either remove the unnecessary call, or will add a finally block if it is necessary.\n. close() sets some internal state and I verified that the DataSource isn't automatically closed, so I believe it's correct to call close(). I'll add the finally blocks and ship this.\n. close() sets some internal state and I verified that the DataSource isn't automatically closed, so I believe it's correct to call close(). I'll add the finally blocks and ship this.\n. The Blob constructor accepts some options including the MIME type of the response -- should we parse the HTTP response headers and pass the Content-Type to the Blob too?\n. Yea, might be nice to get a clear error message early on.\n. May want to trim this string\n. /^utf-?8$/i\n. also this code is kind of clever \ud83d\ude12\n. node 0.12 -> Node 4\n. Ohh makes sense\n. always add trailing commas\n. It probably wants const val: number instead of Number\n. spelling: update\n. mmore -> more\n. \"make much of a sense\" -> \"make much sense\"\nspelling: crate -> create\n. ah thanks\n. could this check be if (!this.__isNative) ?\n. use property syntax: self.methodQueue\n. Property syntax\n. Maybe say \"secure\" cookies instead of HTTPS-only because \"http-only\" means something different for cookies\n. caseInsensitiveCompare maybe? not sure if NSURLComponents lowercases the scheme -- could you verify this?\n. Use property syntax when the docs declare a property: request.allHTTPHeaderFields = ...\n. Thanks for explaining -- your reasoning makes sense.\n. Think we don't want this because you should be able to run code like this:\njs\nPlatform.select({\n  android: { ... }\n})\nand have the Android style get filtered out on iOS even if there are no iOS-specific styles.\n. One thing to check is whether this code runs:\njs\nStyleSheet.create({\n  ...undefined,\n};\nNot sure if the RN polyfills accept this, but we might want to support it.\n. fbjs/lib/invariant\n. use modern syntax: headers.count, headers.allKeys, headers[key]\n. result[key] = val works in Obj-C\n. Can you add a log message (RCTLogWarn) when \"keyboard\" is specified so that we can deprecate and later remove this value, unless you can think of a reason to keep it around?\n. We were seeing the issue on KitKat (specifically API 19, don't have API 20) but not Marshmallow (API 21+). Changed this check to < 21 so that we cover all of KitKat.\n. Move this comment next to or above the .readTimeout() call\n. OK, make a new directory in facebook/react/common/network then.\n. @Override?\n. Move the JSON entry to the apps section and keep alphabetical order\n. prod -> proc\n. prod -> proc\n. Make this take a Promise instead of using the Callback API\n. Make this take a Promise instead of using the Callback API\n. Need to close the dataSource in here too (I think?)\n. Need to close the dataSource in here too (I think?)\n. Make the public JS APIs use callbacks, but use promises for the private native implementation.\n. Make the public JS APIs use callbacks, but use promises for the private native implementation.\n. Add the same check that prefetch does above this. Uri.parse will throw if it gets null, and we want to always either resolve or reject the promise.\n. Add the same check that prefetch does above this. Uri.parse will throw if it gets null, and we want to always either resolve or reject the promise.\n. close the dataSource even with ref is null\n. close the dataSource even with ref is null\n. Add a catch clause and reject the promise. Need to be sure that we never leave the Promise unsettled.\n. Add a catch clause and reject the promise. Need to be sure that we never leave the Promise unsettled.\n. enumerable: enumerable !== false\n. enumerable: enumerable !== false\n. Just check if (!headers)\n. Just check if (!headers)\n. Think we want to remove this so that we nil out headers even in production when receiving invalid values. The validation check is cheap and bad errors occurred at FB when the iOS app shipped with code that was stricter during dev than production because the code paths were different. Better to crash or not crash the same way everywhere.\n. Think we want to remove this so that we nil out headers even in production when receiving invalid values. The validation check is cheap and bad errors occurred at FB when the iOS app shipped with code that was stricter during dev than production because the code paths were different. Better to crash or not crash the same way everywhere.\n. next thing you'll tell us you used vim over emacs \n. next thing you'll tell us you used vim over emacs \n. I think you can replace all this with path.resolve(args.transformer)\n. I think you can replace all this with path.resolve(args.transformer)\n. Don't need the isAbsolutePath check. It's probably more consistent always to call path.resolve so that we always normalize the path.\n. Don't need the isAbsolutePath check. It's probably more consistent always to call path.resolve so that we always normalize the path.\n. this never gets hit\n. this never gets hit\n. website\n. This is different on Android, and also differs when the status bar is hidden on iOS. (And the nav bar height might differ when the phone is in landscape mode.) Basically rather than using a magical constant that happens to work today but could break tomorrow, I think we should look for touches on the nav bar header or measure its dimensions and reduce content coupling.\n. This is different on Android, and also differs when the status bar is hidden on iOS. (And the nav bar height might differ when the phone is in landscape mode.) Basically rather than using a magical constant that happens to work today but could break tomorrow, I think we should look for touches on the nav bar header or measure its dimensions and reduce content coupling.\n. li.st (mentioned below) was made with Exponent and we fit criteria 3 & 4 and is targeted at RN developers. We don't have writing directly about the making of Exponent but have a good number of conference talks and blog posts around RN/modern development in general.\n. li.st (mentioned below) was made with Exponent and we fit criteria 3 & 4 and is targeted at RN developers. We don't have writing directly about the making of Exponent but have a good number of conference talks and blog posts around RN/modern development in general.\n. Moving to Resources make sense, thanks for the context & explanation.\n. Moving to Resources make sense, thanks for the context & explanation.\n. Maintain alphabetical ordering\n. Instead of creating a new function object each time, it might be simpler just to use Function.prototype, which is a no-op function #jstrivia\n. Maybe leave this until we've implemented onTextChange?\n. laid out\n. dimensions\n. The coding convention is Listener instead of Watcher I think\n. capitalize Content\n. With destructuring assignment the syntax overhead of unpacking an object vs. getting just the relevant value is only { } so I think we should go with the more future-proof approach and use the object.\n. With destructuring assignment the syntax overhead of unpacking an object vs. getting just the relevant value is only { } so I think we should go with the more future-proof approach and use the object.\n. Just want to chime in and suggest adding a TODO for now if synchronous JS execution isn't yet figured out. For example, if we rely on synchronous JS, the Chrome debugger won't work and therefore you can't debug rIC code. (This limitation seems OK for more obscure libraries, but for a core API like rIC I think we want it to be debuggable.)\n. Just want to chime in and suggest adding a TODO for now if synchronous JS execution isn't yet figured out. For example, if we rely on synchronous JS, the Chrome debugger won't work and therefore you can't debug rIC code. (This limitation seems OK for more obscure libraries, but for a core API like rIC I think we want it to be debuggable.)\n. better to check for http:// and https://\n. better to check for http:// and https://\n. Should be able to remove the \"active\" fallback right?\n. Should be able to remove the \"active\" fallback right?\n. Ah good point, can you explicitly call that out in a comment?\n. Ah good point, can you explicitly call that out in a comment?\n. Can you remove props.style above in theprops definition and instead pass in this.props.style (and add flex: 1 if it's necessary).\nAnd set style in the props definition above to just {flex: 1}.\nAlso rename props to recyclerProps. \n. nit: cancelled seems to be more popular than canceled in the RN code. both are correct thought =P\n. Move this into the if-clause so we avoid an extra object allocation when there is not enough remaining time, and use @() syntax\n. Syntax: @(kFrameDuration) should work too\n. Since the if-statement's logic was reversed, maybe rephrase this as:\n\nSwitch to a paused state only if we didn't call at least one timer this frame, so if...\n. Can remove the !_sendIdleEvents check since it's always true due to the outer if-statement\n. Might want to define a little helper method that returns !_sendIdleEvents && _timers.count == 0 (or the opposite)\n. Also it's not a big deal but might be clearer to do the x1000 multiplication at the very end, so leave frameElapsed and currentTimestamp in seconds (which NSTimeInterval is supposed to be)\n. maybe add \"Unless you are [a React Native release maintainer and] cherry-picking...\" or some other wording so it's clear that nearly all contributors never need to cherry pick.\n. maybe add \"Unless you are [a React Native release maintainer and] cherry-picking...\" or some other wording so it's clear that nearly all contributors never need to cherry pick.\n. Yeah. The way I think of this is: when working in Obj-C/Cocoa we want to follow Cocoa conventions most of the time (in this case, use NSTimeInterval and define the values in seconds, which is what people expect NSTimeInterval to represent). And then, as late as possible, convert from seconds to milliseconds when we are sending these values from Obj-C to JS.\n. We could synchronize the clocks on each side by doing a super-fast, synchronous call from JS -> Obj-C to compute the clock skew. Once we know the clock skew, it's easy to convert Obj-C timestamps to JS timestamps. RN might also already be tracking the clock skew deep within the bridge and message queue. If so we could maybe piggyback off of that.\n. Use the same warning method that React uses:\n\njs\nwarning(false, '%s', error.stack);\n. Use the same warning method that React uses:\njs\nwarning(false, '%s', error.stack);\n. Yeah, one way to think of it is: how would this code be most clearly written from scratch? \n. remove == true, just check enabled\n. can you rename this to mixedContentModeEnabled actually? other props in this component are named xxxEnabled\n. and name this setMixedContentModeEnabled\n. We should add comments on both sides saying to keep the constants in sync across JS and Obj-C then\n. Might want to wrap this to 80 or 100 cols since it required horizontal scrolling in the github source viewer\n. In OSS at least, there's only one caller:\n$ git grep 'Config.get('\nlocal-cli/cliEntry.js:  command[0](args, Config.get(__dirname, defaultConfig)).done();\nAnd since cliEntry.js runs just once, I don't think caching mattered. Also the cache doesn't create any cache key based on cwd + defaultConfig, so if you called Cache.get with different arguments you might get the wrong cached value.\n. In OSS at least, there's only one caller:\n$ git grep 'Config.get('\nlocal-cli/cliEntry.js:  command[0](args, Config.get(__dirname, defaultConfig)).done();\nAnd since cliEntry.js runs just once, I don't think caching mattered. Also the cache doesn't create any cache key based on cwd + defaultConfig, so if you called Cache.get with different arguments you might get the wrong cached value.\n. Maybe make this package scope unless it needs to be public?\n. Maybe make this package scope unless it needs to be public?\n. style: add trailing comma\n. trailing comma\n. style: use property syntax (.) instead of method call for error.domain and error.localizedDescription when Apple documents them as properties:\n\n. trailing comma\n. trailing comma\n. property syntax\n. I think result should be of type {[key: $Keys<T>]: number}, this checks out on the Try Flow website:\njs\nfunction create<T: Object>(obj: T): {[key: $Keys<T>]: number} {\n  var result: {[key: $Keys<T>]: number} = {};\n  for (var key in obj) {\n    StyleSheetValidation.validateStyle(key, obj);\n    result[key] = ReactNativePropRegistry.register(obj[key]);\n  }\n  return result;\n}\nEDIT: this is a little prettier: \n``` js\ntype Styles = {[key: string]: Object};\ntype StyleSheet = {[key: $Keys]: number};\nfunction create(styles: S): StyleSheet {\n  var styleSheet: StyleSheet = {};\n  for (var key in styles) {\n    StyleSheetValidation.validateStyle(key, styles);\n    styleSheet[key] = ReactNativePropRegistry.register(styles[key]);\n  }\n  return styleSheet;\n}\n```\nhttps://flowtype.org/try/#0CYUwxgNghgTiAEA3W8DKAXAnhEqAWII6AalBAJbBTrkD2AdgFzwDyARgFbjoDcAUKEiwEyGPABKIKGHQA5auUQgACjFoAHSQHNyAZ3QxMzAN5948ODv0gYAClqduzdlxkBKZvQCuAWzY2AGj4AX34+LHUEDGwQXXgAXnhjAG0AaxAjeH0YcnotAF1nRxlQ8MxItCwcfEJ0AB4AFWZonF0APgSktIzmABIAaQzdRrbC+G8-G1LzPgAzL3oZOnp4MDhqEDrUZqrYttt9GN1mj0qYmqItjtNzUSzdi-Qd84JL1A7E42n4WdoxWzu6Uw8Fy9yObiSZnMZ2qrxIZEoCgYADpkBQqOhcLtbECAmDWm5+ND8bg4d1MPlOpJpHIFEpVBptHoDJhkZZmTYDrtdOT8oSocEoXB0F4YCtDrDavxBXwwAx9BYoAB3FqxTo3VYMdBQXI2ExQ8yzHAAD2YAEYguZgkFSnL6AqJWrEmspJjbDBlardPy+I7dMi7Tr6DZ+FyjgGtUG9fccnlCUA @\n. Sorry looking at the Android API more closely, I think we want to expose the underlying API: always, never, compatibility as enums.\n. Remove this comment? :)\n. Isn't {[key: string]: any} the same as Object? \n. Yep they are different:\n\n. Move this out to be static const\n. Use dot notation for properties \n. Trailing comma\n. Confusing to shadow the variant variable, choose another name\n. eslint-bot runs Flow checks too I think. It should really be called lint-bot.\n. Style: Spaces around operators (/)\n. Style: Use property notation (.) when the iOS docs document members like pointSize as properties.\n\n. Might be able to use TransformHelper.processTransform here after rebasing\n. Even if the original property was not configurable we should be able to set the backup property.\n. trailing commas\n. Can you revert this?\n. nice, this is really clean\n. Just if (device) is OK here\n. if (!device)\n. spelling: chosenDevice\n. Style: Use a short arrow function in map:\njs\ndevices.map((device, index) => `\\t${index + 1}. ${device}`)\n. Style: space between while (\n. Style: spaces around minus operator\n. @janicduplessis just a guess, maybe FB is relying on this. We could stub it out as return true and try to merge.\n. Can you change this to use require syntax:\njs\nconst {fetch, Headers, Request, Response} = require('whatwg-fetch');\n. Please follow the style conventions, see the original file\n. Would it make sense to throw some #ifdef __ANDROID__ pragmas around it and the str method? At least that way iOS can't inadvertently depend on it.\n. This is confusing, it's adding to the map, not getting the properties. Make this code clearer.\n. Is this safe to call super.initialize() extra times?\n. Is it always safe according to the API contract? Just because it works doesn't mean it's right.\n. Should this say hash of the asset files instead of mtime now?\n. probably still a good idea to explain how to bust caches since watchman and the RN packager cache implementations are buggy afaik\n. \"or in these\"\nis it possible for searchQueue to be empty? If so the error message should say something different in that case.\n. This should get cleaned up when the module is destroyed. In general, use instance variables instead of static variables with React Native modules; make this mHttpClient.\n. fyi: this can be done with JS syntax and one fewer object creation: return {...frame, file: SourceCode.scriptURL} (just a style thing more than a performance thing)\n. Might be confusing to call this a copy when it's not a copy if the code below doesn't run. How about just assigning stack = [...stack] and then keeping the old code?\n. @bestander I don't love bundling Yarn because react-native-cli is supposed to not change very often and we put the changes in react-native/local-cli instead. As Yarn 0.17 and 0.18 etc. are released, we'll have to tell everyone to update react-native-cli too.\nAlso because of differences in the lockfile format and installation behavior between Yarn versions, it could be confusing if you already have Yarn installed but \"rn init\" creates a lockfile or node_modules that's different than what you're used to.\nI suppose we could include yarn@^0.16 with r-n-cli and use it if the user doesn't have Yarn installed, but I do think it's good to first look for the user's own copy of Yarn. To me the question is: is it better to use [user's own copy of Yarn -> fallback to included Yarn 0.16] or is it better to use [user's own copy of Yarn -> fallback to user's own copy of npm]? There are good arguments to be made for both sides, on one hand we could focus on supporting just Yarn (especially for new projects), on the other using the user's own package manager might be less surprising.\n. Nah, it's fine the way it is then.\n. semicolons\n. new Buffer(size) is deprecated. Can you write this as Buffer.alloc ? Buffer.alloc(size) : new Buffer(size) instead, and add a comment to remove the new Buffer call when RN drops support for Node 4?. Call this tvOS instead of AppleTV. sort alphabetically, put this in between IntegrationTests and ReactCommon. Probably shouldn't be catching all Exceptions, the people responsible for maintaining this code have wanted more precise error handling in the past. Catch the precise exceptions. Make sure to rethrow, don't cover up errors. should we assert that webSocket == mWebSocket?. Still need this return. The way I would be comfortable with relying with Yoga from the CocoaPods repo is if Facebook were to use the same snapshot of Yoga (whether via CocoaPods or another mechanism e.g. Buck). I strongly prefer a systemic way that makes sure FB engineers are less likely to break open-source and vice versa, by making sure everyone is running the same copy of Yoga.. The systems don't need to be the same, I want just the Yoga code to be the same -- I would be on board with specifying a precise commit.. @mkonicek it's 2.14 (newer than 2.4). Rather than mixing math (multiplying, modulo) and bitwise ops can you use just bitwise ops when encoding & decoding the call IDs, I think it will be clearer in the code what is going on.. In practice it usually won't matter but for the sake of correctness can you change this to >>>?. style: space after // on each line. Can you remove the extra space between this._callID and <<?. Can you use toMatchObject here and below?\nhttps://facebook.github.io/jest/docs/expect.html#tomatchobjectobject. Wondering if we should log this, what do you think? Seems like the kind of thing people would also want to have insight into ex: how many users are getting a slightly different UI because their Android doesn't support these fields?. Use modern syntax: _propsDictionary[key] = [NSNull null]. Use modern syntax: _propsDictionary[key] = [NSNull null]. allKeys is documented as a property, write _propsDictionary.allKeys: https://developer.apple.com/reference/foundation/nsdictionary/1409150-allkeys?language=objc. allKeys is documented as a property, write _propsDictionary.allKeys: https://developer.apple.com/reference/foundation/nsdictionary/1409150-allkeys?language=objc. If there are props that were previously set, but now are no longer set -- that is, if the old value of _propsDictionary has keys that wouldn't be in props (in the old code) -- should we set those entries in _propsDictionary to [NSNull null]?. If there are props that were previously set, but now are no longer set -- that is, if the old value of _propsDictionary has keys that wouldn't be in props (in the old code) -- should we set those entries in _propsDictionary to [NSNull null]?. it's -> its. it's -> its. I would prefer to come up with a solution that doesn't use the lock on each operation to further ensure the code is correct, plus perhaps better performance due to less contention.\nMy concern is that we may process half a JS frame's worth of operations, rendering an inconsistent state to the user, regardless of whether the JS thread runs faster than the UI thread or vice versa. I believe we should treat all the operations in a given JS frame as one atomic set -- the code should be structured in a way that makes it impossible to do otherwise.\nHere is one idea: we split _operations into two arrays (same for _preOperations): NSMutableArray<AnimOp> *_operations and NSMutableArray<NSArray<AnimOp> *> *_operationLists. The first array is accessible only from the UIManager queue and the second only from the native main queue (mostly).\nThe UIManager queue still writes to _operations the same way. When we know it has written all of its operations for the current JS frame, we run:\nobjc\n// On the UI queue\n[_operationsLock lock];\n// Add both operation sets to be accessible from the main queue\n[_preOperationsLists addObject[_preOperations];\n[_operationsLists addObject:_operations];\n// We are on the UIManager queue at the end of the frame, this is safe:\n_preOperations = [NSMutableArray new];\n_operations = [NSMutableArray new];\n[_operationsLock unlock];\nThere's a little trickiness on the main queue to also use the above lock (plus probably more efficient solutions than what I proposed).\n. I would prefer to come up with a solution that doesn't use the lock on each operation to further ensure the code is correct, plus perhaps better performance due to less contention.\nMy concern is that we may process half a JS frame's worth of operations, rendering an inconsistent state to the user, regardless of whether the JS thread runs faster than the UI thread or vice versa. I believe we should treat all the operations in a given JS frame as one atomic set -- the code should be structured in a way that makes it impossible to do otherwise.\nHere is one idea: we split _operations into two arrays (same for _preOperations): NSMutableArray<AnimOp> *_operations and NSMutableArray<NSArray<AnimOp> *> *_operationLists. The first array is accessible only from the UIManager queue and the second only from the native main queue (mostly).\nThe UIManager queue still writes to _operations the same way. When we know it has written all of its operations for the current JS frame, we run:\nobjc\n// On the UI queue\n[_operationsLock lock];\n// Add both operation sets to be accessible from the main queue\n[_preOperationsLists addObject[_preOperations];\n[_operationsLists addObject:_operations];\n// We are on the UIManager queue at the end of the frame, this is safe:\n_preOperations = [NSMutableArray new];\n_operations = [NSMutableArray new];\n[_operationsLock unlock];\nThere's a little trickiness on the main queue to also use the above lock (plus probably more efficient solutions than what I proposed).\n. @javache any reservations about adding this API?. @javache any reservations about adding this API?. style: remove the else, we've already bailed out of the native case\n. style: semicolon. style: semicolon. style: trailing comma. style: trailing comma. remove the unused ReactNative import. remove the unused ReactNative import. can you make this an instance variable unless it truly needs to be static and shared across NodesManagers?. Add an assertion or a comment about which queue this runs on. It's important that this runs on the the method queue (RCTGetUIManagerQueue in practice) because we don't want [self addOperationBlock:] and this method to run concurrently. I think it might run on the JS queue... Add an assertion or a comment about which queue this runs on. It's important that this runs on the the method queue (RCTGetUIManagerQueue in practice) because we don't want [self addOperationBlock:] and this method to run concurrently. I think it might run on the JS queue... What do you think about naming this _stagedOperationsLock since it's only (I believe) the staged operation arrays that are accessed from different queues (UIManager queue and main queue)?. What do you think about naming this _stagedOperationsLock since it's only (I believe) the staged operation arrays that are accessed from different queues (UIManager queue and main queue)?. Use for in instead of enumerateObjectsUsingBlock? Same above too.. Use for in instead of enumerateObjectsUsingBlock? Same above too.. Just do [_uiManagerObservers copy]. Just do [_uiManagerObservers copy]. More importantly this avoids needing to think about concurrent modification of the observers set while the observers run (i.e. when an observer adds or removes other observers). More importantly this avoids needing to think about concurrent modification of the observers set while the observers run (i.e. when an observer adds or removes other observers). I think you should go back to your first approach of adding just one observer. The issue here is that the observers are stored in an NSSet, which doesn't preserve order. So if batchDidComplete is called twice, the observer set might store the OperationBatch objects in the wrong order.\nSo I think it would be better to have one NSMutableArray<OperationBatch *> in RCTNativeAnimatedModule and make the module be the only observer.\nbtw I think this batch approach is good, this is what we do for GL calls in exgl.. I think you should go back to your first approach of adding just one observer. The issue here is that the observers are stored in an NSSet, which doesn't preserve order. So if batchDidComplete is called twice, the observer set might store the OperationBatch objects in the wrong order.\nSo I think it would be better to have one NSMutableArray<OperationBatch *> in RCTNativeAnimatedModule and make the module be the only observer.\nbtw I think this batch approach is good, this is what we do for GL calls in exgl.. I think it would also be safe to remove the lock and replace it with dispatch_async(main queue) since the main queue is a serial queue.. I think it would also be safe to remove the lock and replace it with dispatch_async(main queue) since the main queue is a serial queue.. This should hold weak references -- otherwise I think there is a cycle from the animation module -> bridge -> UIManager.\nYou might be able to use [NSPointerArray weakObjectsPointerArray] or an NSArray of [NSValue valueWithNonretainedObjectValue:] but be very careful especially around the semantics of what happens when the values are dealloc'd and whether the references are properly zeroed.. This should hold weak references -- otherwise I think there is a cycle from the animation module -> bridge -> UIManager.\nYou might be able to use [NSPointerArray weakObjectsPointerArray] or an NSArray of [NSValue valueWithNonretainedObjectValue:] but be very careful especially around the semantics of what happens when the values are dealloc'd and whether the references are properly zeroed.. Also trying to get the array to behave well might not be a good use of time now, you could change the property to be just __weak id<RCTUIManagerObserver> _observer similar to a traditional delegate.. Also trying to get the array to behave well might not be a good use of time now, you could change the property to be just __weak id<RCTUIManagerObserver> _observer similar to a traditional delegate.. The order of operations that currently touch the lock (addUIManagerObserver, removeUIManagerObserver, the code within flushUIBlocks) should still happen in the same order with dispatch_async, which keeps the order of blocks (it uses FIFO). I believe that \"otherwise the observer could be added after the UI operations are completed\" is about as equally likely with the locks as with dispatch_async.. Yes, are you sure the animated module eventually gets deallocated? Might be good to verify that dealloc is called.. We still have a similar bug with the locks:\n\n[UIManager batchDidComplete] -> dispatch_async to the main queue to run the UI blocks\nMain thread starts running and acquires the observers lock\n[NativeAnimatedModule batchDidComplete] -> acquires the observers lock. They get dealloc'd upon reload, make sure you test that case.. Not sure you want to do this, but just to put the idea out there -- since this file is just Ruby code, it can read from ios-configure-glog.sh or some other shared file so that the two don't need to manually be kept in sync.. Better to mimic what the actual transformer does and return an object.. This \"uri\" field doesn't actually exist at runtime, maybe call it testUri so it's clear this field is defined only in tests?. I think touch $ANDROID_HOME/installed-dependencies can go on its own line since CircleCI runs these commands with bash -e. I just realized with CircleCI caching we'd stop using the latest copy of Buck. If we want that, one thing we could do is commit a small file to RN that contains just a Git commit hash or Git tag of the Buck repo. We'd check out just that commit and cache it. That way we intentionally don't use the latest copy of Buck and also consistently use the same version, not at the whim of CircleCI's caching behavior.\n\nIf we do want to use the latest copy of Buck, we could create a shallow clone of its Git repo (to avoid downloading 500MB) and build it each time.. Could try bumping the make jobs to 2 since compiling C++ is slow here. Might be able to do threads=2. CircleCI says there are 2 CPUs per build now, could try 2 workers (and for the other Node versions as well). Another place we could try using 2 workers. Since this probably installs files outside of ~/watchman, we probably want to run this step every time regardless of whether watchman was cached. --branch v4.9.0 --depth=1 might speed things up (and similar for the Buck repo clone). I made a separate issue to keep track of a couple extra things like Android SDK caching for later: https://github.com/facebook/react-native/issues/15855. Prerelease should be a string (not number) that includes -beta.1, etc... can you change the regex to this?\njs\n/^(\\d+)\\.(\\d+)\\.(\\d+)(?:-(.+))?$/\nAlso for clearer error messages:\njs\nlet match = version.match(...);\nif (!match) {\n  echo(`You must pass a correctly formatted version; couldn't parse ${version}`);\n  exit(1);\n}. <String, @Nullable Object> since the prerelease value may be a String. Just concatenate the prerelease (instead of assuming -rc, see comments later in this review). The main thing is to keep dev and prod similar, particularly around edge cases, error handling, initialization, cleanup. If we move this to a __DEV__-only check, we should change this to a console.error call instead of throwing an error.. Name this onFinally, like the spec. Also remove the parameter and set the return type to void.. May want to make a new section for TC-39 proposals, finally() is in Stage 3. Yep, will do. We can't add a test for checking that the major matches since we don't have that logic right now, we'll need to add it later if/when we shift RN versions over by one point (RN 51, RN 52, etc...).. spaces around =. can you write this as expect(() => new Blob()).not.toThrow()?. this resolve call looks buggy\n  . If the changes were applied to the yoga repo they\u2019ll eventually make their way to RN sometime.. Later it might be nice to honor the protocol too (ex: setting up an HTTPS reverse proxy in front of the packager server) and to use something like Express\u2019s approach to inferring the protocol: https://github.com/expressjs/express/blob/master/lib/request.js#L306. clear these only when we return (or don't clear at all) so we don't always need to reparse?. Instead of currentHeadersLength (assuming we want to calculate the size of the response body downloaded so far), don't we want to track the starting index of the response body?. If I understand this correctly, we'd reach 100% only on the last chunk -> don't we want to force the progress event only in that scenario then? Otherwise I'd say isFinal should be named something else if it gets set to true many times and not just for the final progress event.. I think I get it. I thought that the progress was for the entire multipart response (e.g. like a multipart upload) rather than for just the chunk.\nWhat do you think about refactoring the ChunkCallback interface so that it's clear the progress events are just for that one chunk? (Breaking change to the API)\n```java\n  public interface ChunkListener {\n    /*\n     * Invoked when a chunk of a multipart response is fully downloaded.\n     /\n    void onChunkComplete(Map headers,\n                         Buffer body,\n                         boolean isLastChunk) throws IOException;\n/**\n * Invoked as bytes of the current chunk are read and may be invoked multiple times per chunk.\n * This method is guaranteed to be invoked one last time when the chunk is fully downloaded,\n * with `isChunkComplete` set.\n */\n void onChunkProgress(Map<String, String> headers,\n                      long chunkBytesRead,\n                      long chunkTotalBytes,\n                      boolean isChunkComplete) throws IOException;\n\n}\n``\n. not sure we want these destructive actions during the build step (vs in a clean step). can you change this to spawnSync so we don't run the risk of shell injection?. most of the capturing groups can be cleanly removed so there's just the one that's actually used e.g.[\\s\\S]*?That said, maybe capture the target name too and print it in a helpful console log particularly because you mentioned this could be a source of bugs if the intended target doesn't always follow React? At least this way people have more visibility into what your heuristic matched.. seems like the namespathandmatch` should be swapped i.e. the regex result is a match and it contains the path we care about. I think this code isn't very vulnerable in its current state but if someone were to modify how one of the interpolated variables is set, they could be unintentionally opening an injection hole.\n. Don't think it matters either way.. ",
    "sahrens": "This is on our radar, but not implemented yet. Ideally we can bake support directly into the layout system. \n\nOn Feb 1, 2015, at 4:09 PM, Nick Poulden notifications@github.com wrote:\nHow should I re-layout the page when the orientation of the device changes? I noticed none of the demo apps seem to support this yet. If I refresh the app in a different orientation it lays out fine though.\n\u2014\nReply to this email directly or view it on GitHub.\n. The UIExplorer example does handle rotation now - it's simplistic, but a\nstart :)\n\nOn Saturday, March 28, 2015, Joe Wood notifications@github.com wrote:\n\nI think it would be more generic to handle resize events, with an\norientation hint. Some devices are likely to support side-by-side apps now\nor in the near future. Adaptive layout is key, and the flex system is good\nat supporting it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/25#issuecomment-87331904\n.\n. The docs say the values may change, but they currently don't because we never implemented that :(\n\nI'm not sure exactly how the UIExplorer rotation works, but I think there is a riot VC that rotates and whenever the root view bounds changes it triggers a layout update, which works (if you don't use Dimensions, which you shouldn't for 99% of layout - use flex/stretch instead).\nI think @nicklockwood has more details on existing rotation support. \n\nOn May 10, 2015, at 10:28 AM, Gertjan Reynaert notifications@github.com wrote:\n@sahrens Where in the UIExplorer example do you handle rotation? It seems like I can't find it. As I'm trying to add rotation detection support to my npm module this could be really usefull.\nPS: maybe the inline documentation in the Dimensions.js utility should be changed, because the width and height don't change on device rotation (Probably because they are set as constants here on application start?)\n\u2014\nReply to this email directly or view it on GitHub.\n. what do you think, @ide?  You seem to have the most experience with nesting and composing scroll views...\n. I think @andreic has been looking at this a bit?\n. This is similar to how we do some of our integrations in the groups app, like reuse of the sticker store, photo picker, and composer from the main Facebook app.\nOn Feb 6, 2015, at 5:25 AM, Joe Stanton notifications@github.com wrote:\nClosed #45.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is a very complicated space, and we have several implementations internally that we are trying to unify and nail down.\n\nIt's definitely possible to use requestAnimationFrame and do whatever you want, but it takes some TLC to get good perf on slower devices. You can use setNativeProp to directly update specific properties without doing a full setState/render pass as a potential perf optimization. Internally we have an implementation that does this well (and also integrates with continuous gestures) that we would like to release soon.\nWe also have a system for doing global layout animations.  Basically you just setState and update whatever (can be as complex a change as you want, creating new nodes, change flow direction from row to column, etc), and configure the global layout animation before returning control to native. Then the layout system (which does run in native but on a background thread) will compute the new layout, then animate all the resulting changes according to the specified config using standard UIView animation.\n\nOn Feb 6, 2015, at 8:38 AM, Dan Abramov notifications@github.com wrote:\nI'm pretty sure I read some tweet saying requestAnimationFrame bridges to CADisplayLink so it should work properly.\n\u2014\nReply to this email directly or view it on GitHub.\n. We have a mechanism for exporting constants for JS to consume which can be trivially used to provide device info like screen dimensions, number of processor cores, etc. We'll probably migrate over our internal RCTDevice module soon. \nOn Feb 24, 2015, at 5:59 PM, Joe Wood notifications@github.com wrote:\nLooks sensible. I like the general rule of avoiding string literals.\nWhat about non-event based non-visuals, like the NSKeyedArchiver? How would the serialization work for that? Maybe just send back JSON using JSONModel?\n\u2014\nReply to this email directly or view it on GitHub.\n. We do have a camera component internally, but it's not longer used so is probably pretty crusty. \nOn Mar 28, 2015, at 11:04 AM, potsypantsy notifications@github.com wrote:\n@vjeux Thanks for the heads up! In that case, maybe I should go ahead and build a component and share it :)\n\u2014\nReply to this email directly or view it on GitHub.\n. I like James' proposal a lot - basically leveraging cocoapods (or Maven or whatever) as a platform-specific installer, and all the code is pulled in as one versioned unit from one system (npm), and we can even hide the steps inside npm install so it's super smooth for developers. \nOn Feb 24, 2015, at 6:38 PM, Joe Wood notifications@github.com wrote:\nI think the above provides the best of both worlds. This makes npm the parent package manager, CocoaPod, Maven etc. subordinate. Most JS developers won't have to worry about the native modules, as long as the scripts keep the packages in sync.\n\u2014\nReply to this email directly or view it on GitHub.\n. > The JS files are not included nor is the packager so you need to move that around yourself but baby steps.\n\nPresumably npm install could pull everything (including the JS and packager) into node_modules so it would work?\n. Why do you want react-native-tools to be separate and installed globally?  You can just run the packager like this to pick up the JS in your project:\n02/25/2015 14:54:23 sahrens-mbp : ~/src/react-native\n% npm start -- --root ~/src/MyReactNativeProject/\n. Closing for now since it doesn't sound like this is blocking anything.\n. I think it would make sense to have an option to make a shared bridge and pass it into one or more RCTRootViews.\n-Spencer\n\nOn Mar 19, 2015, at 10:25 PM, James Ide notifications@github.com wrote:\nGot it, will sit tight for now.\n\u2014\nReply to this email directly or view it on GitHub.\n. We're actually re-thinking how this works because it's usually not the right thing to simply grab the screen dimensions (not robust to device rotation, in-call notification bar, etc). We definitely need to provide a solution soon though!\nOn Feb 16, 2015, at 10:30 AM, Christopher Chedeau notifications@github.com wrote:\nThere's a Dimensions module that's not exposed yet. We're working on getting our synchronization in order to be able to expose it\n\u2014\nReply to this email directly or view it on GitHub.\n. We're actually re-thinking how this works because it's usually not the right thing to simply grab the screen dimensions (not robust to device rotation, in-call notification bar, etc). We definitely need to provide a solution soon though!\nOn Feb 16, 2015, at 10:30 AM, Christopher Chedeau notifications@github.com wrote:\nThere's a Dimensions module that's not exposed yet. We're working on getting our synchronization in order to be able to expose it\n\u2014\nReply to this email directly or view it on GitHub.\n. I remember seeing a task about this internally that got fixed, and I can't seem to repro now.  Please re-open if you can repro in v0.6.0-rc\n. I remember seeing a task about this internally that got fixed, and I can't seem to repro now.  Please re-open if you can repro in v0.6.0-rc\n. I think it's more of an issue with text overlaid on complex hierarchies (and semi-transparent views overlaid on those, e.g. the groups photo viewer shadow while swiping to dismiss), and on worse devices like iphone 4/4s. \n\nOur groups app definitely shows tons of blending with this feature turned off.\nEven if it's not enough of a win to save dropped frames, there can still be meaningful benefit from saving battery by doing less work on the GPU, and it saves developers who fire up the blended layers mode from thinking they need to manually fix all the red (since most everything will automatically come up green out of the box).\nFinally, the Paper team mentioned that text renders more crisply into opaque buffers - I'm not sure if this is still true on iOS 8.\n-Spencer\n\nOn Feb 19, 2015, at 11:23 PM, James Ide notifications@github.com wrote:\nI made a simple scroll view with 5000 text views:\nrender() {\n    var textRows = [];\n    for (var ii = 0; ii < 5000; ii++) {\n      textRows.push(\n          \n          This is a line of text\n        \n      );\n    }\n    return (\n      \n        {textRows}\n      \n    );\n  }\nvar styles = StyleSheet.create({\n  text: {\n    color: 'blue',\n  },\n};\nI profiled loading the screen on an iPhone 6 with iOS 8.2, waiting for it to render (this takes awhile) and then scrolling. This is what it looks like with opaque = NO:\nHere it is with the default opaque = YES:\nThe demo consistently crashed when I set the background color of the scroll view's content container style, so I could not test inherited background colors.\nI don't see a performance regression looking at the profiler charts so I believe this diff doesn't slow performance, or at least not in a way that matters. Additionally when I gave the text views an opaque background color (just \"white\"), toggling the \"Color Blended Layers\" option in the Core Animation profiler showed that they were not blended even though opaque = NO.\nSo my takeaway is: setting opaque = NO doesn't affect blending if the text views have a solid background color, which is what React usually will try to do. And if they don't have a solid background color and default to being transparent, then the performance difference is nominal and definitely not the bottleneck.\n\u2014\nReply to this email directly or view it on GitHub.\n. That said, defaulting to transparent for the meantime seems ok. \n\n-Spencer\n\nOn Feb 19, 2015, at 11:23 PM, James Ide notifications@github.com wrote:\nI made a simple scroll view with 5000 text views:\nrender() {\n    var textRows = [];\n    for (var ii = 0; ii < 5000; ii++) {\n      textRows.push(\n          \n          This is a line of text\n        \n      );\n    }\n    return (\n      \n        {textRows}\n      \n    );\n  }\nvar styles = StyleSheet.create({\n  text: {\n    color: 'blue',\n  },\n};\nI profiled loading the screen on an iPhone 6 with iOS 8.2, waiting for it to render (this takes awhile) and then scrolling. This is what it looks like with opaque = NO:\nHere it is with the default opaque = YES:\nThe demo consistently crashed when I set the background color of the scroll view's content container style, so I could not test inherited background colors.\nI don't see a performance regression looking at the profiler charts so I believe this diff doesn't slow performance, or at least not in a way that matters. Additionally when I gave the text views an opaque background color (just \"white\"), toggling the \"Color Blended Layers\" option in the Core Animation profiler showed that they were not blended even though opaque = NO.\nSo my takeaway is: setting opaque = NO doesn't affect blending if the text views have a solid background color, which is what React usually will try to do. And if they don't have a solid background color and default to being transparent, then the performance difference is nominal and definitely not the bottleneck.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is pretty busted - any updates, @nicklockwood?\n. We have found the better solution to mammoth files is not to separate the languages/technologies, but instead breakdown the components into smaller units. The ads manager app we just released (https://www.facebook.com/business/news/ads-manager-app) has about 100,000 lines of new JS product code just for that app, and I believe every single component is a single file with event handling, jsx, styles, and queries all together, and it has worked out quite well.\n\nYou are of course welcome to build your apps however you want, we're just sharing what we've learned from our experience :)\nWhat examples did you see that used @providesModule?  It should only be used in library code...\n\nOn Feb 23, 2015, at 7:20 PM, Christopher Chedeau notifications@github.com wrote:\nClosed #92.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah yeah, I forgot we still use those in a different way internally - we'll try to figure out how to remove the providesModule usage on those. \nOn Feb 25, 2015, at 5:26 AM, Jay Garcia notifications@github.com wrote:\nThat makes a lot of sense. I do agree that smaller components does help with organization. I'm still learning how this is all put together and am drawing off of prior experiences.\nI'll say that 15 years of web development, 10 of which are \"Ajax/web 2.0 apps\" (did I just date myself?) and at the moment, I cannot help but feel that separation of styles, component definitions is the right way.\nI'm not saying I'm right =). I'm saying that it \"feels right\" at this current time.\nFWIW, I did a quick search and found the following files in Examples/ that contain the @providesModule flag\n./Movies/MoviesApp.js\n./TicTacToe/TicTacToeApp.js\n./UIExplorer/ActivityIndicatorExample.js\n./UIExplorer/createExamplePage.js\n./UIExplorer/ExpandingTextExample.js\n./UIExplorer/ImageCapInsetsExample.js\n./UIExplorer/ImageExample.js\n./UIExplorer/LayoutExample.js\n./UIExplorer/ListViewPagingExample.js\n./UIExplorer/NavigatorIOSExample.js\n./UIExplorer/PointerEventsExample.js\n./UIExplorer/ScrollViewExample.js\n./UIExplorer/StatusBarIOSExample.js\n./UIExplorer/TextExample.ios.js\n./UIExplorer/TextInputExample.js\n./UIExplorer/TouchableExample.js\n./UIExplorer/UIExplorerApp.js\n./UIExplorer/UIExplorerBlock.js\n./UIExplorer/UIExplorerPage.js\n./UIExplorer/UIExplorerTitle.js\n./UIExplorer/ViewExample.js\n\u2014\nReply to this email directly or view it on GitHub.\n. James: If you're referring to the existing BlurView we have internally, it's iOS7 compatible and just uses a UIToolbar (so is pretty lame in comparison) - we'll need to build something from scratch for the stuff you want. Want to build it?\n. Yeah, we want to do this but don't think we ever got around to it.\nOn Feb 24, 2015, at 11:32 PM, James Ide notifications@github.com wrote:\nTouchableHighlight calls setNativeProps on its child, which is automatically handled by native views but not user-level composite components. In the examples I can think of off the top of my head, you'd typically want a composite component to forward setNativeProps to its root subcomponent i.e. the implementation looks like:\nsetNativeProps(nativeProps) {\n  this.refs['root'].setNativeProps(nativeProps);\n}\nrender() {\n  return ...;\n  // If Subcomponent is composite, it will recursively forward setNativeProps\n}\nI propose this to be the default implementation if a component does not implement setNativeProps. This retains flexibility while I believe behaving reasonably in the default case.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, please build, this would be great!  \n\nThe API could be a simple prop for fadeInDuration that defaults to 0 (shows instantly), and ideally it could also call an onLoad event on the component in js for custom logic. \n\nOn Feb 25, 2015, at 12:47 AM, Christopher Chedeau notifications@github.com wrote:\nWe have a task internally to expose those :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, just didn't get around to it :)\nOn Feb 25, 2015, at 5:26 PM, James Ide notifications@github.com wrote:\nThis would let TouchableHighlight/Opacity be supersets of TouchableWithoutFeedback while still retaining the highlight / fade behavior. Does this make sense? I will send a PR if so.\n\u2014\nReply to this email directly or view it on GitHub.\n. Great idea!  At times we have cheated by making the (static) separators the same color as the highlight state so they appear to disappear on press....having real support like this would be much better. \nOn Feb 26, 2015, at 3:21 AM, James Ide notifications@github.com wrote:\nRow separators are non-trivial to do and ListView could help by providing them out of the box in a way that's easier to use than UIKit in most cases. The special characteristics of a separator are:\nIt sits in between rows but not above the first row and not below the last row in a section if there is a section header below\nIt disappears when a row is highlighted\nHighlighting a row on either side of the separator will include the separator's area. In the diagram below, if you touch row 1, it highlights row 1 and the separator. If you touch row 2 it highlights row 2 and the separator.\n          +----------------------------+  +\n          |  row 1                     |  |     touch row 1\n          |                            |  |\n          +----------------------------+  |\nseparator ------------------------------  +  +\n          +----------------------------+     |  touch row 2\n          |  row 2                     |     |\n          |                            |     |\n          +----------------------------+     +\nFor these reasons separators are tricky to build. React could outshine UIKit by letting the programmer provide any View as a separator. This makes it really easy to customize the side margins/padding or have separators of arbitrary heights.\nThe API could resemble the other list child APIs and just be a delegate prop:  where renderSeparator is a function that receives the section ID and the rowID of the row above it, and returns any View.\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm going to close this out - if you come up with an elegant solution, put up a PR?\n. We definitely need some docs about how the bridge works - there is definitely some dark magic going on in there. A simple example/tutorial with a walk through of what actually happens under the covers would be awesome (internally and for the community).  We'll definitely wrote something, hopefully soon. \nOn Mar 13, 2015, at 1:00 PM, Joe Wood notifications@github.com wrote:\nIf the bridge and view registration could be described in the docs directory that would be really useful. I'm doing some rudimentary opengl tests and some guidance would help. May also be useful to #34.\n\u2014\nReply to this email directly or view it on GitHub.\n. ping @a2, @nicklockwood\n. I'm sure others can list more problems, but from my perspective, supporting CocoaPods as a first-class system has the following issues:\n\n1) Non-ideal project layout (copies files rather than linking projects, all libs are under Pods project)\n2) Allows excessive flexibility with build configurations that are hard to model in other dependency and build systems.\nWe will continue to support interoperability with cocoapods of you want to use them, but we're going to come up with something more universal that integrates better with npm as the recommended way to generate Xcode projects and workspaces. \n\nOn Mar 3, 2015, at 12:17 PM, Joe Wood notifications@github.com wrote:\nCould somebody post a one sentence summary of what the problem would be? It seemed to be quite an elegant solution of packaging the native parts from npm. I struggle with Cordova's plugin model and the impact on the native build part.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, we want npm to have all the code. \nOn Mar 3, 2015, at 12:57 PM, Joe Wood notifications@github.com wrote:\nOK, sounds interesting. So the non-JS sources would be kept in npm, I guess something like node-gyp.\n\u2014\nReply to this email directly or view it on GitHub.\n. We want to unify everything on RCT, but haven't done it yet.\n\nWhere do you see an RC prefix without RCT?\n. Don't worry, we have plenty of plans to make the integrated development and debugging experience awesome :)\n-Spencer\n\nOn Mar 5, 2015, at 7:51 AM, Jay Garcia notifications@github.com wrote:\nHaving this as a default configuration option for development would be great. Lots of web developers are not familiar with Xcode and when they do a console.log(), they may not know to look @ Xcode.\n\u2014\nReply to this email directly or view it on GitHub.\n. If you're just enabling disabling, you should do it with a prop:\nthis.setState({enabled: !this.state.enabled})}>\n   \n\nThen map the enabled prop through to your native view, and run whatever native code you want in the setEnabled: setter. Maybe take a look at RCTNetworkImageView(Manager).m\n-Spencer\n\nOn Mar 5, 2015, at 12:37 PM, Christopher Chedeau notifications@github.com wrote:\nOh I see, you want to integrate with an Obj-c component. Then yeah, ref and getNodeHandle() is the right way to do it.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, you should just use props when possible.\n\nThe handles are meant to be opaque references so the value/contents should be irrelevant from a JS perspective. You can pass them over the bridge to native and native can use them to find the corresponding native element. One example where this is done is the scrollTo method on RCTScrollViewManager. \n-Spencer\n\nOn Mar 14, 2015, at 10:31 AM, Jay Garcia notifications@github.com wrote:\nI believe that I've gotten a step closer by inspecting the RCStaticImageManager.m source:\nI suppose I was looking for directly calling functions like with what the RC_EXPORT() macro does for managers.\nThe RCT_CUSTOM_VIEW_PROPERTY macro seems to be the right way to go a la the example below:\nRCT_CUSTOM_VIEW_PROPERTY(imageTag, RCTStaticImage )\n{\n  if (json) {\n    [RCTImageLoader loadImageWithTag:[RCTConvert NSString:json] callback:^(NSError error, UIImage *image) {\n      if (error) {\n        RCTLogWarn(@\"%@\", error.localizedDescription);\n      } else {\n        view.image = image;\n      }\n    }];\n  } else {\n    view.image = defaultView.image;\n  }\n}\n\u2014\nReply to this email directly or view it on GitHub.\n. If you batch it up, I bet it won't be a problem :)\n\n-Spencer\n\nOn Mar 14, 2015, at 11:34 AM, Jay Garcia notifications@github.com wrote:\nThanks @sahrens. I've gotten tot he point where a view Mgr can execute methods on view instances.\nNow it's time to see how well this thing deals with 512 floating point audio samples =) per channel at 30fps.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, ideally we could figure more of this out automatically rather than you needing to tweak the params manually. The defaults are optimized for Groups which have much taller rows.\nOn Mar 5, 2015, at 4:44 PM, Jay Garcia notifications@github.com wrote:\nClosed #127.\n\u2014\nReply to this email directly or view it on GitHub.\n. We're also probably going to simplify and further optimize this component significantly in the not-so-distant future - if anyone wants to take a stab at it, we were thinking of simply relying on the row components' shouldComponentUpdate methods instead of the DataSource, etc. \nOn Mar 5, 2015, at 4:44 PM, Jay Garcia notifications@github.com wrote:\nClosed #127.\n\u2014\nReply to this email directly or view it on GitHub.\n. We have internal stuff that I don't think we have moved over yet (we will soon), but you can check out the Ads Manager app in the App Store to get a taste of what will be supported.\nOn Mar 8, 2015, at 9:42 AM, Jay Garcia notifications@github.com wrote:\nIs it possible to configure custom anims for RKNavigator or any View to allow them to slide in/out?\nI'm currently working on a media player and am considering the UX for it. A slide-in transition would be perfect for a \"browse for file\" UI a la Spotify (see below).\n(Ignore the flicker. That's an artifact of Reflector)\n\u2014\nReply to this email directly or view it on GitHub.\n. We're working on it :)\nOn Mar 8, 2015, at 4:31 PM, Jay Garcia notifications@github.com wrote:\nBloody hell man!!! There is a treasure trove of UI goodness in that app that would be a HUGE asset to ReactNative.\n\u2014\nReply to this email directly or view it on GitHub.\n. What do you want different exactly?  Did you set the pagination prop true?\nOn Mar 8, 2015, at 10:13 AM, Jay Garcia notifications@github.com wrote:\nOur current choice for a Carousel-like widget is the Scroll View oriented in a horizontal mode, but that doesn't give us the milky smooth locking of a carousel.\nHopefully, after i'm done w/ this VGM player app, I'll have the cycles (and skills) to build these types of custom components for submission into this repo.\n\u2014\nReply to this email directly or view it on GitHub.\n. That could be handy - a  component could also do some processing of the raw onScroll data to provide onChangeCard. Want to send a PR?\nOn Mar 8, 2015, at 4:28 PM, Jay Garcia notifications@github.com wrote:\nMaybe this is an opportunity to make this feature more developer-friendly? I had no idea that something called \"pagination\" would be used as a carousel. I'm used to pagination meaning \"pages of data queried and viewed\". :-\\\nI imagine there could be an extension to ScrollView called a Carousel that sets pagingEnabled to true by default and renders indicators.\nExamples (Sencha Touch) -- Common UI pattern.\n\u2014\nReply to this email directly or view it on GitHub.\n. I didn't implement the delay, it blames back to @jordwalke internally (D765907) and the 130ms value has remained unchanged since first introduced in react on the FB desktop website in April 2013. My guess is that it exists for reasons similar to those described here:\n\nhttp://stackoverflow.com/questions/7541159/is-it-possible-to-remove-the-delay-of-uibuttons-highlighted-state-inside-a-uisc\nbut it doesn't really seem to be necessary since TouchableOpacity works fine.\n@jaygarcia - for your last comment with the nested structure, do you still need to do that if you set the delay to zero, or does changing changing the delay fix the issue completely?  We can definitely add\ntouchableGetHighlightDelayMS: function() {\n    return 0;\n  },\nto TouchableHighlight to match TouchableOpacity if that's the better behavior - want to send a PR if that fixes things for you?\n. Yes, I'm suggesting that you change the implementation of TouchableHighlight.js and send us a PR with those changes (which requires the contrib agreement).  We can make the change ourselves if you prefer, but it will take longer.\nFor the layout issues, those are due to unfortunate discrepancies in the implementations - TouchableHighlight is unique because it requires an extra view be rendered behind the content to provide the colored highlight.  It's fixable, but would require some work.\n. To get things working with TouchableWithoutFeedback, I think if you add a View wrapper around the inner text and apply the styles to that instead of to TouchableWithoutFeedback, it will work?\n. cc @nicklockwood - any ideas?\n. So in order for the react diffing algorithm to correctly reset properties back to their default state, we create a single dummy \"defaultView\" for every type of view so we know what value the properties should be reset to if the property of deleted or nulled out on the JS side. This is probably the second instantiation you're seeing, and your views need to be resilient to creating multiple instances (but I think there might also be a mechanism to provide the default view manually, so you could potentially use a singleton if you wanted, but that would probably break things).\nIf you are seeing more than one extra view than you are expecting being instantiated, let me know. \n-Spencer\n\nOn Mar 14, 2015, at 4:08 PM, Jay Garcia notifications@github.com wrote:\nIn my own project.\n\u2014\nReply to this email directly or view it on GitHub.\n. Honestly we haven't given timers a very thorough considerations, and background operation is completely unconsidered at this point - thanks for such a thorough writeup!\n\nI did add one simple feature recently - setTimeout(fn, 0) will now fire immediately (but in a different event loop, unlike setImmediate) rather than waiting for the next run loop frame as it currently does. This will be useful for time-slicing optimizations we have in mind. \n-Spencer\n\nOn Mar 18, 2015, at 7:16 PM, James Ide notifications@github.com wrote:\nI wanted to start a discussion about the timers and an API that exposes the capabilities of the system timers. A couple of things I noticed were that the timers use CADisplayLink on the main thread and also listen to the UIApplication state notifications. To my knowledge this works well for timers that are coupled to the UI (requestAnimationFrame comes to mind, there may be other uses). I'd like to discuss timers that do other work e.g. interact with the event loop or schedule background tasks, and how they co-interact.\nEvent loop timers seem to fall into two categories - those that run at the end of the current loop and those that run right after. This is like process.nextTick and setImmediate. These aren't too hard to implement though there are a couple of gotchas like warning if a process.nextTick handler endlessly schedules itself before blowing the stack. I would also expect both of these timers to run even if the app is inactive or backgrounded (e.g. say you get a network response while the app is backgrounded and schedule some work to run soon after - it should run in the background).\nBackground task timers (setTimeout, setInterval) raise a couple of questions like the semantics of a zero-ms timeout. I would also propose that these run in the background as well to address the use of running code that does not need the app to be foregrounded. And, if the app is backgrounded there is little harm in running UI code anyway -- in cases where it does matter, the timer handler can check the UIApplication state.\nBackground task timers that repeat are also good candidates for energy optimization. One thing that OS X systems do is coalesce timers where possible, partly aided by the programmer providing a tolerance value. If many running apps schedule timers that can overlap within their respective tolerance windows, the system may wake the CPU just once to run all of those tasks together.\nThere is also a question of the ordering of all of these timers. My strawman proposal is:\nEnd of event loop: nextTick\nASAP after end of prior event loop: setImmediate, followed by setTimeout(0)\nA short while later (using NSTimer): setTimeout(n + [0-tolerance]) up until the next frame begins\nStart of next frame (CADisplayLink): requestAnimationFrame. However, this will wait till later if the app is foregrounded or inactive. Also I believe CADisplayLink may not fire if momentum scrolling is active (not verified).\nSome time later (again using NSTimer): setTimeout(n + [0-tolerance]) where n is big enough that a frame has elapsed\nAdditionally, setTimeout(delay = 9, threshold = 2) should run before setTimeout(delay = 10, threshold = 0), and two setTimeouts with the same delay should run in the order that they were scheduled even if they have different thresholds. But to keep things simple at first I would recommend we go with whatever the system timer (NSTimer) does. There's an argument to be made that the timer handlers should use promises or semaphores, etc if they need to coordinate and not rely on the timer system.\n\u2014\nReply to this email directly or view it on GitHub.\n. Real error objects would be great. AsyncStorage returns pseudo error objects and the JS facad turns them into proper errors. Would be great if our modules were consistent. \n\n-Spencer\n\nOn Mar 20, 2015, at 12:22 PM, Christopher Chedeau notifications@github.com wrote:\nYeah, we're not really fan of the current state of the world but it's working and haven't been a high enough priority so far.\nI really like promises API for that, but I'm a little worried that they run in a setTimeout. Maybe we can just create a fake promise api that just calls then and catch directly.\nTangential to that, we need to figure a better way to represent the error object. Right now it's free for all. Would also be nice to have a stack trace attached.\nI'd like to get @sahrens, @jordwalke, @frantic opinion but if they are alright, I'd love you to promisify the bridge :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Ping on this?\n. I know vjeux is excited about this, so passing to him for when he has time (or so he can find another owner).\n. Merged internally.\n. It might actually be awhile (or never) before we release the networking module we use internally, so I wouldn't wait for that if you need the functionality...\nOn Mar 26, 2015, at 6:02 PM, Julien Nakache notifications@github.com wrote:\nI d be down implementing this in objective c, but since I know you guys are\nabout to release the internal fb component, I d rather spend my time doing\nsomething else :)\nOn Thu, Mar 26, 2015 at 8:43 PM Jay Garcia notifications@github.com wrote:\n\n\nFYI transferring data back and forth between JS and Obj-C is relatively\nslow\nI've found that React Native's bridge impl seems to be slower that\ncordova's :(\n\nI don't have specific bench marks, but if the queue is rapidly utilized,\nthe UI becomes non-responsive whereas with a cordova app, the UI works\nfine.\nI understand the mechanics of why a RN app would be come unresponsive, but\nI just had to add my experience.\nJG\n:: sent from my mobile device ::\n\nOn Mar 25, 2015, at 20:47, James Ide notifications@github.com wrote:\nFYI transferring data back and forth between JS and Obj-C is relatively\nslow so you'll probably want to keep all of the image data in Obj-C. I\ndon't have numbers but I expect you will see it takes a measurable amount\nof time to transfer several MB of data. It's a small compared to the amount\nof time it takes to upload the photo but it's a good idea to keep the JS\n<=> Obj-C message queue clear.\nYou could write a tiny bridge module that receives the asset URL and\nthen performs the upload, reporting progress/error/success information back\nto JS.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/201#issuecomment-86773682\n.\n\u2014\nReply to this email directly or view it on GitHub.\n. Merged here: https://github.com/facebook/react-native/commit/bcabb3bc4ab25fa415039b55d2bcb71268016d6f\n. Thanks for spotting!\n. cc @amasad \n. Just needs to be added to SampleApp which is what the init script uses for the template. \n\nOn Mar 26, 2015, at 8:17 PM, Claud\u00e9ric Demers notifications@github.com wrote:\n+1\n\u2014\nReply to this email directly or view it on GitHub.\n. Just an oversight - feel free to send a PR for SampleApp.xcodeproj which is used as the template (if there isn't one already - sorry we haven't been able to keep up with PRs!)\nOn Apr 1, 2015, at 5:18 PM, Jonathan Gertig notifications@github.com wrote:\nEven with manually linking i am getting this error https://www.dropbox.com/s/r80zzgk62otaq3r/Screenshot%202015-04-01%2020.16.42.png?dl=0\n\u2014\nReply to this email directly or view it on GitHub.\n. The native calls are not made on the main thread so as not to hurt scrolling or other interactions, but you can jump onto whatever other thread you want in the native code. For example, parts of GeoLocation must run on the main thread, and AsyncStorage has its own queue for file operations. \n\nFollowing Joe Stantons model for vibration would be perfect for other extensions. A folder with an xcodeproj, native files, JS files, and a package.json. Then a user of it would pull it into node_modules, drag the xcodeproj into Xcode, and link the lib. \n\nOn Mar 27, 2015, at 7:48 AM, Jay Garcia notifications@github.com wrote:\nI'd like to add a note that the API for exposing ObjC to JS is volatile.\nI just got bit by a change to the RCT_CUSTOM_VIEW_PROPERTY macro :(\n\u2014\nReply to this email directly or view it on GitHub.\n. Any more progress here?\n. This has a merge conflict - can you rebase?\n. Closing in favor of #238\n. An engineer here at Facebook actually hacked up a prototype a while back - shouldn't be hugely difficult for someone to make it happen if you want to give it a go :)\nOn Mar 26, 2015, at 5:34 PM, Jay Garcia notifications@github.com wrote:\nReact native currently extends Cocoa Touch. It would be cool to see a Cocoa desktop bound layer :). \nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 16:13, Timur Carpeev notifications@github.com wrote:\nIs it possible to use react native to target OS X apps? And if not are there plans to make it compatible?\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub.\n. Closed in favor of #256 which already landed.\n. @amasad Can we do this yet?\n. cc @nicklockwood \n. cc @tadeuzagallo too.\n. LGTM - @ericvicenti: can you import and land?\n. Actually I'll just take it.\n. @facebook-github-bot import\n. cc @ericvicenti as well.\n. This is landing internally - we'll close it when it's sync'd.\n. Yeah sorry, we haven't ported that functionality to open source yet.\n\nOn Mar 26, 2015, at 4:38 PM, Fran\u00e7ois de Campredon notifications@github.com wrote:\nThe multiline options does not work at all in my ios simulator (in fact the input is not editable with multiline={true}).\nThe doc says :\nThe multiline prop is not supported in all release\nCould we have more of information ? :)\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks for +1-ing issues like this, helps us prioritize. Unfortunately there is no estimate yet...\nOn Apr 3, 2015, at 12:03 PM, Jack Boyce notifications@github.com wrote:\n+1\n\u2014\nReply to this email directly or view it on GitHub.\n. It's unlikely you'd be able to write an extension in pure swift based on the way the system currently works, but you can probably write the majority in swift and provide a thin registration wrapper in ObjC (implement the RCTBridgeModule protocol) to expose it in JS.\nOn Mar 26, 2015, at 7:03 PM, Goddy Zhao notifications@github.com wrote:\nClosed #284.\n\u2014\nReply to this email directly or view it on GitHub.\n. Currently we don't throw or even warn if you provide unsupported react props, we'll only tell you if you provide the wrong type for a propType that is declared. It would be nice to fix this somehow :\\\nOn Mar 26, 2015, at 7:25 PM, TooBug notifications@github.com wrote:\n\ninput:{\n    height:50,\n    color:'#ffffff',\n    textAlign:'center',\n    backgroundColor:'#1D1F26',\n    fontSize:20\n  }, \nThe placeholderTextColor and textAlign has no effect. Did I miss something?\n\u2014\nReply to this email directly or view it on GitHub.\n. Those props should work - they are used in the Movies and UIExplorer example apps.\n\nI was specifically referring to multi line support - I don't think that is working in OSS yet and might break things if you try to use it. \n-Spencer\n\nOn Mar 27, 2015, at 6:41 AM, TooBug notifications@github.com wrote:\nExactly! But has no effect.\n\u2014\nReply to this email directly or view it on GitHub.\n. I believe @nicklockwood has a fix for this. \nOn Mar 26, 2015, at 9:09 PM, James Ide notifications@github.com wrote:\nMight be a red herring then since that checks only the SDK version at compile time.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is now landing internally.\n. And borderRadius should work in React Native.\nOn Mar 26, 2015, at 9:33 PM, Christopher Chedeau notifications@github.com wrote:\nYou can use flex-wrap and flexDirection: row to achieve display: inline-block\n\u2014\nReply to this email directly or view it on GitHub.\n. There are a few open issues about the packager not running automatically, usually because of other programs using the same port.  We should make the auto-start more robust rather than adding steps to the guide.\n. Yup, I think this only work in our internal text component - hopefully we can get this working soon in OSS.\nOn Mar 26, 2015, at 8:24 PM, James Ide notifications@github.com wrote:\nText components with onPress handlers don't highlight. The RCTIsHighlightedAttributeName attribute is set on the attributed string but it is unused afterwards.\nSee the \" and onPress\" demo in the UIExplorer for a test case.\n\u2014\nReply to this email directly or view it on GitHub.\n. Glad you could figure it out. What to send a PR with the tip?\nOn Mar 26, 2015, at 10:41 PM, tehfailsafe notifications@github.com wrote:\nTurns out it's a simple hardware keyboard setting in the simulator menu. Never would have thought to check that, especially since things like alt-drag work for multi-touch emulation without this setting enabled.\n\u2014\nReply to this email directly or view it on GitHub.\n. @JustinCarmony: Can you address those nits real quick before we land internally?\n. Great, this is now landing internally.\n. Check out linter.js\nOn Mar 31, 2015, at 3:06 PM, Justin Carmony notifications@github.com wrote:\n@sahrens done.\n\u2014\nReply to this email directly or view it on GitHub.\n. Also merged internally.\n. Feel free to send a PR :)\nOn Mar 26, 2015, at 11:14 PM, Sabri notifications@github.com wrote:\nHi there,\nhttps://facebook.github.io/react-native/docs/touchablehighlight.html#content\nTouchableHighlight tag is not closed properly.\nCordially,\nS.\n\u2014\nReply to this email directly or view it on GitHub.\n. This has landed internally.\n. Unfortunately we don't have any news here. We originally had a UITableView wrapper, but the UITableView API is not well suited for the asynchronous nature of ReactNative, and the resulting code was pretty gross, especially when trying to do smooth animations to grow the heights of rows, which we do in the groups app.\n\nWe might revisit this and provide a separate TableViewIOS component that is a wrapper for the use cases you want, but we don't have a concrete plan at this point.\n\nOn Mar 27, 2015, at 6:26 AM, Jay Garcia notifications@github.com wrote:\nThis was brought up a few times during the private beta. @vjeux , have you guys given any more thought into this?\n\u2014\nReply to this email directly or view it on GitHub.\n. @danicomas: besides missing features, what makes you think ListView doesn't feel native?\n. Perf is something we're actively working on and isn't as simple as just using UITableView - we need to properly support view recycling at a low level.\n\nDid you try playing with removeClippedSubviews and the various tunable props on ListView like pageSize?  Those were critical optimizations for getting good scroll perf in the Facebook Groups app. \n\nOn Jun 1, 2015, at 2:16 PM, Daniel Comas Fern\u00e1ndez notifications@github.com wrote:\n@sahrens I had problems in performance with a lot of rows. I have to try the latest version to verify again.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yup, totally agree on more features being needed, just wanted to make sure there wasn't anything else broken ;)\nOn Jun 2, 2015, at 5:29 AM, Daniel Comas Fern\u00e1ndez notifications@github.com wrote:\nI agree with @kevindeleon.\n\u2014\nReply to this email directly or view it on GitHub.\n. cc @nicklockwood\nOn Jun 4, 2015, at 5:52 PM, Brent Vatne notifications@github.com wrote:\n@sahrens - it looks like removeClippedSubviews on ScrollView does nothing, only on RCTView. ScrollView seems to pass that prop on to each row, which if I understand correctly doesn't do much to reduce memory footprint of a long ListView. I've noticed this while working on the React Native Playground app - the memory usage shoots up as we page through a long list of apps. This would be a nice performance improvement to get in.\n\u2014\nReply to this email directly or view it on GitHub.\n. We're planning on writing a more complete guide/tutorial for plugging in your own native views, but that mini-guide + digging through code for the existing Views (e.g. RCTImageViewManager) will have to do for now. \nOn Mar 27, 2015, at 5:10 AM, Michael Chong notifications@github.com wrote:\n@marciok , Thanks a lot. I apologise for my careless.\n\u2014\nReply to this email directly or view it on GitHub.\n. We always need more docs!\n\nFor testing in the full environment, check out the \"Testing\" section of the documentation - we have a harness for integration testing that should help you do what you want.\n\nOn Mar 27, 2015, at 7:38 AM, Davis Koh @daviskoh notifications@github.com wrote:\n+1\n\u2014\nReply to this email directly or view it on GitHub.\n. Merged internally and synced.\n. Agreed we can and should make it faster, but I'm curious: how often and for\nwhat reasons do you do cold starts of the packager?\n\nOn Fri, Mar 27, 2015 at 10:54 AM, Amjad Masad notifications@github.com\nwrote:\n\nYes, we should fix it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/341#issuecomment-87033588\n.\n. I think the render twice issue has been fixed - does it still repro for you on master?\n\n-Spencer\n\nOn Mar 28, 2015, at 5:37 AM, Jay Garcia notifications@github.com wrote:\nNot often :). I just happened to notice it after a kernel panic (debugging core audio implementation). \nThis also surfaced another strange thing: while the first cold-boot request is made to the packager, hit cmd+r. That induces a second request, causing your app to render twice. \nThis is most noticeable in \"SampleApp\"\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 27, 2015, at 21:57, Spencer Ahrens notifications@github.com wrote:\nAgreed we can and should make it faster, but I'm curious: how often and for\nwhat reasons do you do cold starts of the packager?\nOn Fri, Mar 27, 2015 at 10:54 AM, Amjad Masad notifications@github.com\nwrote:\n\nYes, we should fix it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/341#issuecomment-87033588\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. cc @evv - looks like we just need to handle the case of rapid tapping on the back button. \n. Merged internally and synced.\n. I'm not sure I understand your question - React Native doesn't really \"put\" the JavaScript files anywhere - they just live in the directory structure of your project. if you use the CLI via \"react-native init MyProject\" then it just creates one file, index.ios.js, in the MyProject folder it creates. The library code lives in node_modules/react-native/Libraries.\n\n\nWhen you run your app, the packager reads these files off disk, and bundles them into a single script that it delivers to the app over localhost. This script only lives in memory in the app.\nIf you want to publish your app to the App Store, then you can manually save this file with curl -o, then put it wherever you want in the app bundle, and change your AppDelegate.m to point to this local file instead of localhost.\nDoes that help?  If not, what exactly are you trying to accomplish. \n. Yeah, I'm on the core team.\n\nOn Mar 28, 2015, at 8:07 PM, Djkds notifications@github.com wrote:\n@sahrens Thank u ,are u the core team member of RN ?\n\u2014\nReply to this email directly or view it on GitHub.\n. Merged internally and synced.\n. Yes definitely - this is how we built parts of the comment input in the Groups app. Hopefully we'll be able to clean it up soon and release it to you guys. \n. I'll take a look at what we have. \nOn May 31, 2015, at 11:25 AM, Brent Vatne notifications@github.com wrote:\n@sahrens - this would be great to see, this seems to be a highly requested feature\n\u2014\nReply to this email directly or view it on GitHub.\n. Definitely some interesting ideas here we'll need to think more about.\n\nAnother approach to the resource management specifically is to tie it to the component lifecycle - e.g. native could pass an image tag to JS, and JS could tell native that it's done with the tag in componentDidUnmount (which could be handled automatically through a container component).\n. The view method needs to allocate a new GABannerView instance and return that.  You also need to specify the valid attributes in your createNative call or you won't be able to set them from JS. \n. Do you recall what you did exactly leading up to the crash?  Can you reproduce reliably?\n\nOn Mar 28, 2015, at 6:40 AM, luosong notifications@github.com wrote:\n\u2014\nReply to this email directly or view it on GitHub.\n. If you setState to re-render the component and pass in the string you want to the value prop it should update to reflect that. If that's not the case, can you provide a code snippet that shows the bug?\n. The chrome debugger over websockets adds a fair bit of latency :(\n\nYou should be able to clear/reset the value without setting controlled={true}, it just won't fully control the component.  Does that work at all for you?\n\nOn Mar 28, 2015, at 7:36 PM, Ryan Florence notifications@github.com wrote:\nhuh ... I closed the chrome debugger and now the UI is nice and responsive, where before it dropped characters and flickered a lot.\n\u2014\nReply to this email directly or view it on GitHub.\n. For device debugging, you should be able to physically shake the decide and select debug mode from the options. If you have things configured to load the bundle from your computer's IP, it should be able to find it if you're on the same wifi network. We'll add proper docs at some point ;)\nOn Mar 28, 2015, at 10:59 AM, Christopher Chedeau notifications@github.com wrote:\nIt had to do a with a firewall issue. I was blocking access to my laptop from other devices. Thanks!\nIt would be nice to have a better error message. Do you think you can add a warning when that happens?\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry, setting the bundle to load over wifi will let you live reload, but to debug you'll probably need to change the websocket config, which is less explored territory. Let us know if you can get it working.\nOn Mar 28, 2015, at 10:59 AM, Christopher Chedeau notifications@github.com wrote:\nIt had to do a with a firewall issue. I was blocking access to my laptop from other devices. Thanks!\nIt would be nice to have a better error message. Do you think you can add a warning when that happens?\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome work, Joe!  It's great to have folks like you involved so early with the project.\nOn Mar 28, 2015, at 11:13 AM, Joe Stanton notifications@github.com wrote:\nOk - removed the RCT prefix from everything :) Will wait for the docs to be merged around XCode linking instructions, and in the meantime attempt to port both Ruby scripts into Node.\n\u2014\nReply to this email directly or view it on GitHub.\n. Can you run the packager manually from your fork with --root ?\n. It's preferred that each project has its own copy of the packager in node_modules for typical development so you don't have to worry about versioning between libs. \n\nThis doesn't really work with multiple React Native projects yet since the packager runs continuously on the same port, but there is discussion of adding a status endpoint so you could kill a currently running packager if it reports the wrong version via status and start the right one for that project automatically. \n\nOn Mar 28, 2015, at 3:49 PM, allenhartwig notifications@github.com wrote:\n@sahrens starting packager.sh with --root does work. @amasad thoughts on starting packager with npm run start --  rather than npm start and have package.sh relay the parameter as --root to packager.js? This way nothing is inferred and allows react-native's location to be completely independent of the app project.\n\u2014\nReply to this email directly or view it on GitHub.\n. Assigning to vjeux since he wants it unassigned and we should try to keep all issues with an internal owner...\n. Good stuff, thanks for helping out!\n. Great, thanks!\n. Fixed in master.\n. Fixed in master.\n. Can you tell which processes are eating the most CPU?\nOn Mar 29, 2015, at 8:37 AM, Dana Woodman notifications@github.com wrote:\nWhen I run live reload on my iOS app in the emulator (iPhone 5s simulation), the CPU jumps to about 170%. If I leave it open the simulator just freezes and I have to force quit it. Not sure if this is a know issue or if there is a way to work around it.\nI'm on a 15\" MacBook Pro Retina FWIW.\n\u2014\nReply to this email directly or view it on GitHub.\n. Our GPU fill-rate gating was only for some specific product code, and was no longer necessary after we switched to assets for shadows instead of the layer properties.  There shouldn't be anything in the infra intentionally disabling shadows, probably just some sort of bug - cc @a2, @nicklockwood\n\nThat said, I would recommend using assets instead of the shadow properties in general - they tend to perform much better on older devices.\n\nOn Mar 29, 2015, at 12:27 PM, Oisin Lavery notifications@github.com wrote:\nShadow is NOT visible on iPhone 6\nShadow is visible on:\niPhone 5 Simulator\niPad Retina Simulator\niPad 2 Simulator\nShadow is NOT visible on\niPhone 5s Simulator\niPhone 6 Simulator\niPhone 6+ Simulator\niPad Air Simulator\n\u2014\nReply to this email directly or view it on GitHub.\n. The shadow typically displays outside the bounds of the view, so if you set\noverflow hidden I would expect it to clip the shadow. If you really need\noverflow hidden, you could put the shadow properties on a wrapper view that\ndoesn't hide the overflow?\nOn Mon, Jun 15, 2015 at 1:10 PM Marius Bergmann notifications@github.com\nwrote:\nI found that the shadow disappears once I set overflow: 'hidden' in the\nview's style. Is this intended behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/449#issuecomment-112192402\n.\n. Yeah, we should try to follow web where possible, but this might be kinda tricky - what do you think, @nicklockwood?\n. We don't want to send the events by default, and we want the client to think about what frequency they need the events. If the parent specifies onScroll and not the frequency, perhaps we should redbox?\nOn Mar 29, 2015, at 12:00 PM, Tadeu Zagallo notifications@github.com wrote:\n@nicklockwood I think you wrote the TODO, is that right?\nI don't think 0 should be the default value...\n\u2014\nReply to this email directly or view it on GitHub.\n. If there is already a warning we can leave it. \nOn Mar 29, 2015, at 5:20 PM, Tadeu Zagallo notifications@github.com wrote:\nI tested it and it's working as expected, but @sahrens I tried adding an invariant instead of the current warning, and during testing it on UIExplorer I just noticed that an invariant during a NavigatorIOS push crashes the objC... Any idea about that? Should we add the invariant anyways?\n\u2014\nReply to this email directly or view it on GitHub.\n. This should be fixed in master - please open an issue if still see the bug.\n. Not supported, sorry. Would love a PR ;)\nOn Mar 29, 2015, at 2:14 PM, Lachlan Campbell notifications@github.com wrote:\nThere doesn\u2019t seem to be a StyleSheet property for the letter-spacing CSS property. Is it just called something else or does it not exist yet? If not, it\u2019d be a fantastic addition.\n\u2014\nReply to this email directly or view it on GitHub.\n. I believe iOS supports letter spacing via NSKernAttributeName on NSAttributedString, which should be pretty easy to map into  in react native, but hasn't been done yet ;)\nOn Mar 29, 2015, at 6:43 PM, Lachlan Campbell notifications@github.com wrote:\n@sahrens Do you mean iOS doesn\u2019t support it, or just that React Native doesn\u2019t yet support it?\n\u2014\nReply to this email directly or view it on GitHub.\n. SocketRocket is only needed for debugging - you shouldn't have to include it in your final app submission if you run into any issues with this. \nOn Mar 29, 2015, at 3:01 PM, Tyler Paul Thompson notifications@github.com wrote:\nThere's reports on SocketRocket's repo that the _connect method in SocketRocket resembles a private API method and doesn't pass iTunes Connect validation:r\nsquare/SocketRocket#226\n\u2014\nReply to this email directly or view it on GitHub.\n. Instead of inventing our own package.json schema, we might want to consider just using a BUCK file for the details, and package.json would just point to that.\n\nYou might also want to use the xcodeproj tool to modify the xcode files instead of regexes:\nhttps://github.com/CocoaPods/Xcodeproj\n\nOn Mar 31, 2015, at 8:10 AM, Tadeu Zagallo notifications@github.com wrote:\nI've also created a gist, with 3 files:\nthe initial file, that Xcode generates,\na clean file, the same file file, after parsed and stringified\nthe final file, with the libraries added\nhttps://gist.github.com/tadeuzagallo/dd046e738f4c87edac4f\nI also added support for a libraries key, tu support the use case we have now, that is the debugger, but it should be pretty straightforward to add frameworks next.\nIt also tries to guess a lot of names, that should work well specially for the native libraries.\n\u2014\nReply to this email directly or view it on GitHub.\n. Sorry, I should have looked at your code more closely - this looks pretty sweet and is nice that it doesn't rely on any complex deps.  I think once we have this, it shouldn't be too hard to create a react-native install script (maybe called as npm post-install?) that scans dependencies and calls this under the hood to add all the necessary libs.  It doesn't address the versioning issues @ide mentioned, but I think it's a reasonable step for now without taking the CocoaPods plunge.\n. removeClippedSubviews is our current stopgap that makes the groups app work - can you guys try scrolling in that app and see what you think of the perf/stability?\n\nWe definitely need to fix crashes when you have removeClippedSubviews - I don't think we tested thoroughly with sticky headers (they aren't used in groups), so that might be the issue.\nNote on OP - the react tab just shows the react elements in JS. Just because they show up there doesn't mean they are in the actual UIView hierarchy (and you should find they are not all in the UIView hierarchy if you enable removeClippedSubviews). \n. removeClippedSubviews is our current stopgap that makes the groups app work - can you guys try scrolling in that app and see what you think of the perf/stability?\nWe definitely need to fix crashes when you have removeClippedSubviews - I don't think we tested thoroughly with sticky headers (they aren't used in groups), so that might be the issue.\nNote on OP - the react tab just shows the react elements in JS. Just because they show up there doesn't mean they are in the actual UIView hierarchy (and you should find they are not all in the UIView hierarchy if you enable removeClippedSubviews). \n. I've been working on an experimental WindowedListView that should help with\nthis problem. I'll try to get it out soon.\nOn Tuesday, December 1, 2015, Param Aggarwal notifications@github.com\nwrote:\n\nPlease report on https://productpains.com/product/react-native/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/499#issuecomment-160994126\n.\n. @brentvatne: how's your fixed row height fork of WindowedListView coming? Are you going to contribute that back? I think that's probably the best option for most cases. \n. I'm still stalled on getting windowed list view with variable height rows working with Incremental. \n. Merged internally and synced.\n. closing for now - feel free to re-open when it's ready for review - we'll need to make sure our full tool stack actually works in chrome, safari, and firebox before we enable something like this, though, otherwise it's just going to open in a broken environment.\n. Merged internally and synced.\n. Yup, thanks!\n. Merged internally and synced.\n. Merged internally and synced.\n. Yeah, closing in favor of #918. \n. What type of deployment are you referring to?  Local device builds?  Publishing to the App Store?\nOn Apr 26, 2015, at 11:31 AM, Aaron K Saunders notifications@github.com wrote:\nI would settle for a deployment script that could do this for me? I know xcode project provide hooks for when running projects that could be utilized to automate this whole process a little more cleanly.\n\u2014\nReply to this email directly or view it on GitHub.\n. Merged internally and sync'd\n. Merged internally and sync'd.\n. cc @nicklockwood - were you planning on adding this to the dev menu?  would be nice to move what we have internally to OSS with the bonjour stuff and app link support (rn://ip:X.X.X.X)\n. What do you want to do exactly?  The AsyncStorage module is built into ReactNative already and should be fine for most key-value storage applications. If you want SQL, RocksDB won't help and you'll need to write a separate module (ideally following the WebSQL spec).  If you hit perf issues with AsyncStorage let me know and we'll be a RocksDB module up and running. \n. No, it's global within your app, i.e. all JS modules in your app will share it. iOS prevents apps from seeing each other's data so you don't have to worry about that.\n\nYou don't have to worry about loading anything from a text file, AsyncStorage handles everything for you, just like LocalStorage does on the web. Just do AsyncStorage.getItem('myKey', function(value) { ... });, etc. check out AsyncStorageExample.js\n\nOn Apr 1, 2015, at 10:33 AM, Chirag notifications@github.com wrote:\n@sahrens\nOnly more question: Asyncstorage docs says it global. Does it mean my app data is accessible to other apps also?\n\u2014\nReply to this email directly or view it on GitHub.\n. We can also just run all of the ReactNative JS in a WKWebView - would that make PouchDB happy?  We could potentially make the executor mode configurable per app so you could use that instead of JSC if you prefer that tradeoff (more latency, probably more memory, etc). \n. Thanks, this was definitely on my list :)\n. Another thought - what weirdness could happen if a client uses the promise and provides a callback?  Is there a way to protect against that, or do you think it should just be \"use at your own risk\"?\n\nFinally, we have been discussing which flavor of promises we want to use going forward - @amasad, @vjeux - what's the latest there?  Should we be using the global promise like this or requiring something else, like bluebird?\n. over to nick to decide if we want to do this and review or close it out as something we don't want.\n. cc @tadeuzagallo \n. cc @tadeuzagallo \n. Are there any errors?  The packager autorun is done as part of a build script in React.xcodeproj.\n. Are there any errors?  The packager autorun is done as part of a build script in React.xcodeproj.\n. We have geolocation support from CoreLocation (check out GeolocationExample.js), but not beacon support.\n. We have geolocation support from CoreLocation (check out GeolocationExample.js), but not beacon support.\n. We already have a fix for this that should get sync'd soon.\n. We already have a fix for this that should get sync'd soon.\n. One thing you can do is to expose a native API to create a new UIWindow and render the modal content views into that. One way to do this is with a custom native modal component that creates the UIWindow in reactAddSubview and stuffs the view into their instead of as a subview of it's self like it would be default.\nWhat happens if you put your react-native-modal component outside of (e.g. as a sibling to) the NavigatorIOS component?\n\nOn Apr 5, 2015, at 2:33 PM, Alexey notifications@github.com wrote:\n@kocyigityunus it'll help, if you'll migrate from NavigatorIOS to basic Navigator. You'll be able to build your own view with navbar and position it however you want. Then, you'll just need to make an overlay and implement your modal (or use very nice react-native-modal as has been mentioned before). Let me know if you'll have any issues with that.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ignore my last paragraph - I missed your example using the react-native-modal. \n. Ah yes, you'll need to attach the RCTTouchHander to the modal...something like\n\n[modalView addGestureRecognizer:[[RCTTouchHandler alloc] initWithBridge:_bridge]];\nSorry, I wish I had time to clean up what we have internally sooner, but it relies on some FB infra stuff :(\n\nOn Apr 6, 2015, at 8:51 PM, Brent Vatne notifications@github.com wrote:\nhttps://gist.github.com/brentvatne/5115e83d02027869ca83\n\u2014\nReply to this email directly or view it on GitHub.\n. The original motivation was to work with NavigatorIOS, right?\nOn Apr 9, 2015, at 10:42 AM, Jordan W notifications@github.com wrote:\nAwesome work!\nKeep in mind that this approach will require reimplementing the same concept in Android, whereas the standard Navigator will not since the scenes are controlled in JS.\nIt's about tradeoffs, and the approach you've taken has benefits as well: I believe that if you embed a ReactNative container inside of a larger (non-ReactNative) app, your modal will still work well.\n\u2014\nReply to this email directly or view it on GitHub.\n. landed internally, although it's disabled in OSS :(\n. We have a nice end-to-end test, so not sure if still relevant - @frantic: can you either close out or review if you want it?\n. Actually Tadeu's been looking at this stuff more lately and frantic is on vacation...\n. @nicklockwood\n. Ah, @a2 is already on it.\n. Oops, wrong PR.\n. @facebook-github-bot import\n. reassigning to nick (that's how we track who the internal owner is) but this still needs revision from @darylrowland based on @brentvatne's comments.\n. Can you squash your commits?\n. Can you add another selector thingy for assetType to CameraRollViewExample in a followup PR?\n. This will also let us bootstrap a .flowconfig once we get that working.\n. Sorry, bit of a holdup but will get it out soon. \n\n-Spencer\n\nOn Jun 22, 2015, at 3:06 PM, bogdantmm92 notifications@github.com wrote:\nWill this ever merge into the main repo?\n\u2014\nReply to this email directly or view it on GitHub.\n. Style should only be used for base-level style that applies to View, Image, and Text.  We are actually going to take resizeMode out of style and make it a plain prop on image. \n\nSo no, these new attributes should not go in style and should just be normal props.\nBut yes, we'll probably merge stuff like this in soon :)\n\nOn Apr 23, 2015, at 10:21 AM, Kelvin Luck notifications@github.com wrote:\nThanks for this - I need this functionality as well. In my app I additionally need thumbTintColor and am happy to add it in the same way (is it useful to somehow add it to this pull request?)...\nThe only question I would have is whether these values should be exposed via CSS (as they seem more style related)...\nAlso, is this likely to be merged into React Native? I can patch my local version but am just wondering what will happen in future updates...\n\u2014\nReply to this email directly or view it on GitHub.\n. Ooo, cool. \nOn Apr 10, 2015, at 7:45 PM, Alexander Kotliarskyi notifications@github.com wrote:\n@sahrens, @spicyj - what do you think?\n\u2014\nReply to this email directly or view it on GitHub.\n. Looks great!  Can you rebase, squash your commits, and re-record the TextExample snapshot test?  Set reRecord yes here and run with cmd+U:\n\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/UIExplorerTests/UIExplorerTests.m#L97\nAlso, assigning over to @a2 who is our Text master.\n. Yeah, this is not the right way to go. Also note that the UIExplorer app does do somewhat animated re-layout on rotation...\n. I landed a fix internally that should get sync'd out soon. \n\nOn Apr 23, 2015, at 11:54 PM, Roman Dubinin notifications@github.com wrote:\n+1\n..and any updates? it's impossible to use many of libraries right now (baobab and typology for example) without monkey patching it.\n\u2014\nReply to this email directly or view it on GitHub.\n. My fix just checks Array.isArray in deepDiffer and does the appropriate type of iteration. \nOn Apr 24, 2015, at 12:15 AM, James Ide notifications@github.com wrote:\n@sahrens is your fix to make the polyfilled methods non-enumerable? That's the cleanest solution I had in mind since RN is used only in ES5+ environments.\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm not sure this is doing what you think - the way TouchableHighlight works is that the underlay is solid black and the wrapped component is 80% opaque when active, which gives a 20% black highlight if the component is white (close to the 15% in your diff). You're making the underlay only 15% opaque which will barely have any appearance with 80% opaque components.\n\nIf you're seeing a fully black highlight in your app, you should make sure your wrapped component has an opaque background color, or set the underlayColor prop directly how you want it. \n. Note that we could have gone either way in the beginning, but we decided to go this way (I think, not sure) in order to work well with images by default, and now we're pretty locked in with existing code.  Since it's easily customized, it doesn't seem that valuable to change the default.\n. @yelled3 unfortunately we have some instability in our tests, so that is probably an unrelated failure :(\nI believe (but wasn't involved so not sure) the purpose of having both emitters is to provide namespacing and clarity.  Device events should only be emitted by the system, whereas app events should be used for whatever custom events you have in your app.  I'll merge this in soon.\n. We've had a couple ideas here but no time to implement them.\nOne idea was to predeclare what you want to measure, then native would populate the value after computing layout so you can access it synchronously in React.\nThe other idea (which also has other benefits), is to have JS make an explicit call to run the layout rather than native choosing when to do it (currently \"at the end\"). This would let us sequence the measure calls after the layout calls so you don't have to do the setTimeout in componentDidMount to get the right data. \n. If anyone wants to make either of these changes, let me know :)\n. Haven't really thought through the details yet, but on the fly: I think it would be ideal to bake it into the react core and build it in such a way that it would also work in web with DOM measure APIs, utilized via a prop on the component you want to measure (maybe pass it a function that is invoked with the new measure values, a la the new functional refs?  \nMaybe like\n this._dims = dims} />\nOr\n this.setState({dims})} />\nThe advantage here is that you don't have to wait for a ref\nAnother option is as an explicit subscription:\n ref.subscribeToLayout(dims => this.setState({dims}))}} />\nThen implement subscribeToLayout in NativeMethodsMixin to register the reactTag with native, which would then either emit one layout event for all registered views which JS infra would then de-multiplex to the right callbacks per reactTag/nodeHandle.\nIt might make sense to build the first API (does anyone prefer the second?), but in a way more like the second behind the scenes rather than emitting separate events for every view, like we do for normal onChange events - not sure if that would be a pre-mature optimization, but seems like batching all the updates from one layout run into one event would be good. \n\nOn Apr 23, 2015, at 9:02 PM, Brent Vatne notifications@github.com wrote:\n@sahrens - what kind of api did you have in mind for predeclaring what you want to measure?\n\u2014\nReply to this email directly or view it on GitHub.\n. I think the problem might be that you're mixing and matching.  Can you try either doing an array of arrays, or an object of objects, instead of the array of objects that you have there?  Here's the comment from ListViewDataSource:\n\n* The default extractor expects data of one of the following forms:\n   *\n   *      { sectionID_1: { rowID_1: <rowData1>, ... }, ... }\n   *\n   *    or\n   *\n   *      [ [ <rowData1>, <rowData2>, ... ], ... ]\n. If you want to keep your data structured the way it currently is (or if you can't get it working otherwise), you'll need to provide your own sectionIdentities, and rowIdentities arrays when you clone the datasource, and might want to provide your own extractors as well.\n. Let me know if this doesn't work for you.\n. Yeah, been meaning to write this for a while but wanted requireNativeComponent to land first ;)\n. Are you changing the image URL?  If so, then you can layer multiple images on top of each other with transparent backgrounds (and position: 'absolute') so the old image will remain visible until the new image loads on top of it.  If you're not changing the URL, then I'm not sure why this would happen - what does your code look like?\n. Why are you changing the key?  That could definitely cause flickering because it will bypass the react diffing algorithm and force the view to be destroyed and a fresh one replace it. Usually that will happen seamlessly within one frame, but it might not in all cases.  If you're doing it to refresh scroll position, I'd recommend using something like this.refs.scrollView.scrollTo(0, 0)\n\nOn Apr 28, 2015, at 7:27 PM, \u65af\u4eba notifications@github.com wrote:\nhi, @sahrens\nThere is a example, maybe re-render by key cause flickering, not sure.\n'use strict'\nvar React = require('react-native')\nvar {\n  AppRegistry,\n  ScrollView,\n  View,\n  Text,\n  StyleSheet,\n  Image,\n} = React\nvar test = React.createClass({\ngetInitialState() {\n    return {\n      i: 1\n    }\n  },\ncomponentDidMount() {\n    var that = this\n    setInterval(function () {\n      that.setState({\n        i: that.state.i + 1\n      })\n    }, 500)\n  },\nrender() {\n    var content = \n    return (\n      \n{content}\n\n    )\n  }\n})\nAppRegistry.registerComponent('swiper', () => test)\n\u2015\nReply to this email directly or view it on GitHub.\n. LayoutAnimation has some rough edges and needs some polish - it works as a global config for the next layout transaction, which will typically affect multiple views, so the callback should only be called once per transaction (that's just a bug), but also if you try to configure multiple conflicting LayoutAnimations for the same transaction, the callbacks might also get messed up and it's not completely clear what the right behavior is in that case. \n\ncc @nicklockwood as well. \n\nOn Apr 25, 2015, at 7:27 AM, Tadeu Zagallo notifications@github.com wrote:\nThis is an issue with the LayoutManager actually. /cc @a2 Apparently the - [RCTUIManager uiBlockWithLayoutUpdateForRootView:] calls the onComplete callback once per new view, when you added a second view, it was called twice, hence the error.\nOn the other hand, this error should not be possible after 0e67e33, so on the next update it shouldn't affect users anymore.\n\u2014\nReply to this email directly or view it on GitHub.\n. LayoutAnimation has some rough edges and needs some polish - it works as a global config for the next layout transaction, which will typically affect multiple views, so the callback should only be called once per transaction (that's just a bug), but also if you try to configure multiple conflicting LayoutAnimations for the same transaction, the callbacks might also get messed up and it's not completely clear what the right behavior is in that case. \n\ncc @nicklockwood as well. \n\nOn Apr 25, 2015, at 7:27 AM, Tadeu Zagallo notifications@github.com wrote:\nThis is an issue with the LayoutManager actually. /cc @a2 Apparently the - [RCTUIManager uiBlockWithLayoutUpdateForRootView:] calls the onComplete callback once per new view, when you added a second view, it was called twice, hence the error.\nOn the other hand, this error should not be possible after 0e67e33, so on the next update it shouldn't affect users anymore.\n\u2014\nReply to this email directly or view it on GitHub.\n. No reason we can't implement it on other platforms, even web. Fundamentally all it's doing is animating the frames computed by the layout algorithm.  We may want to change the way the animation curves are defined, but that's just a detail. \nOn Apr 25, 2015, at 12:41 PM, Nick Lockwood notifications@github.com wrote:\nLayoutAnimation is a neat feature, but until we work out what our overall animation strategy is, I don't really want to invest a lot of time in it. It feels like an iOS-specific hack, and I'm not sure if we'll be able to support it x-platform in its current form.\n\u2014\nReply to this email directly or view it on GitHub.\n. No reason we can't implement it on other platforms, even web. Fundamentally all it's doing is animating the frames computed by the layout algorithm.  We may want to change the way the animation curves are defined, but that's just a detail. \nOn Apr 25, 2015, at 12:41 PM, Nick Lockwood notifications@github.com wrote:\nLayoutAnimation is a neat feature, but until we work out what our overall animation strategy is, I don't really want to invest a lot of time in it. It feels like an iOS-specific hack, and I'm not sure if we'll be able to support it x-platform in its current form.\n\u2014\nReply to this email directly or view it on GitHub.\n. Weird, what version of Chrome are you running?  What is in tab 9?  It sounds like it found the url it was looking for open in tab 9, but chrome didn't accept the command to switch to that tab?\n. @ReadingSteiner: let us know if you need any help with that pull request.\n. I think RCT_EXPORT was supposed to be backwards compatible (but deprecated) but might have just broken - @a2 can you take a look and make sure the podfile is working?\n. @frantic Any idea what's going on here?\n. Are you referring to this text in the NavigatorIOSExample?\n\nthis.props.navigator.replace({\n              title: 'New Navigation',\n              component: EmptyPage,\n              rightButtonTitle: 'Undo',\n              onRightButtonPress: () => this.props.navigator.replace(prevRoute),\n              passProps: {\n                text: 'The component is replaced, but there is currently no ' +\n                  'way to change the right button or title of the current route',\n              }\n            });\nNavigatorIOS isn't really maintained by FB - maybe @eduardinni or @ide could help out?\n. We can't guarantee anything, but there are already several React Native apps in the App Store with no friction so far, and multiple companies are making big bets on this technology so there will be a lot of motivated folks doing their best to make sure that doesn't change going forward. \n. reply!\n. Not sure I understand your problem or analysis of the problem - react-native shouldn't be fundamentally slower at using dynamic/downloaded styles like this than any other platform. Can you do more caching/prefetching?  Ideally you would send a request as soon as the app is launched that would fetch all your style info and cache it for fast access.  Are the styles themselves particularly large and/or complex?  Did you confirm that this global object isn't being re-generated unnecessarily?\n\nOn Apr 25, 2015, at 6:55 PM, Nosh Ghazanfar notifications@github.com wrote:\nWe have multiple pages in our react-native app. In one of the subsequent pages(not the first two) we are trying to load the styles object dynamically. The way we are doing this is by making an ajax call in the previous page, and then passing the styles field as a string to the next page like so:\nthen(items =>\nthis.props.navigator.push({\n    title    : \u201cNextPage\",\n    component: ItemList,\n    passProps: {\n        ParentID: ParentId,\n        items    : items,\n        token   : tokenValue,\n        styles : items.styles\n    }\n})\n);\nthe style object is being dynamically combined with some default values and eventually loaded into a global variable like so:\nconstructor(props) {\n    super(props);\n```\nvar dataSource = new ListView.DataSource({\n    rowHasChanged: (r1, r2) => r1.guid !== r2.guid\n});\nthis.state = {\n    dataSource: dataSource.cloneWithRows(this.props.items)\n};\nstyleSheet = JSON.parse(this.props.styles);\nstyleSheet = this._customiseStyle(styleSheet);\n```\n}\ncustomiseStyle(styleSheet){\n    var combined = .extend(styles,styleSheet);\n    return StyleSheet.create(combined);\n}\nthe styleSheet variable is then used inline within the page components to display the styling. This however really slows down the initial pages and the transitions happen very slowly. What I suspect from looking at the documentation is (https://facebook.github.io/react-native/docs/style.html) that as the styles are loaded during the initialisation of the app, hence the app is consistently hitting the styleSheet variable as it encounters it inline, and hence slows down the UI until it actually resolves the variable on the actual page, then the speed becomes normal.\nI am looking for suggestions here as to what can we do to load the styles dynamically without impact on UI responsiveness, or is this currently not possible in the current version of react-native. Will it ever be?\nCustom styling is a major feature for us, hence if this doesn\u2019t work out we may have to switch from react-native all together, so help would be really appreciated.\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, many doc changes are essentially \"bug fixes\" which should go out immediately. Only pushing auto-gen docs from tagged releases but the rest from master seems like a good compromise. \nOn Apr 28, 2015, at 12:24 PM, Brent Vatne notifications@github.com wrote:\n@arthuralee - The tradeoff of generating from the most recent tagged commit is that we would have to create a new release every time we want to update docs. Version picker could be useful in the long run, at the moment but that could be tricky to implement properly - if you're up for that task feel free to give it a shot and open a PR!\nThis is not so hard to manage for docs that are generated from markdown files - we just only merge when the feature has been added - but for those that are automatically generated by comments it's a bit trickier.\nA couple of ideas:\nHave something like a /latest path that exposes the docs from the latest tagged release\nUpdate markdown docs at any time, generate component docs only from latest tagged commit\n\u2014\nReply to this email directly or view it on GitHub.\n. Did you use an event emitter?\nOn Apr 26, 2015, at 11:35 AM, Jay Garcia notifications@github.com wrote:\nFor those interested, here's the product of this effort:\nhttps://www.youtube.com/watch?v=VaZnJ-_R3rU\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, we need to support this. cc @a2\nOn Apr 26, 2015, at 2:04 PM, Vladimir Kurchatkin notifications@github.com wrote:\nI think it's not possible currently, but could be implement with NSLinkAttributeName\n\u2014\nReply to this email directly or view it on GitHub.\n. Nothing right now, but wouldn't be super tricky to build a module for it if you're so-inclined :)\nOn Apr 26, 2015, at 2:10 PM, Andrew Warner notifications@github.com wrote:\nJust wondering, do you have plans to add some kind of keychain API? If not, is there a suggested safe way to store user credentials (e.g. an auth token) or do I have to roll my own?\nThanks! Sorry if this is a repeat, I looked in the issues list and didn't find anything (did some googling around too / checked out React.parts and it doesn't seem like anyone else has built one).\n\u2014\nReply to this email directly or view it on GitHub.\n. using setState shouldn't be a big deal, and can work fine if you use componentShouldUpdate correctly to prevent excessive React re-rendering and reconciliation (and if the app is simple enough, you might not have to do anything at all to get adequate perf).\n\nIf it's still too slow, then one option is to set the state directly with this.state.top = top; then update the component manually with refs.theView.setNativeProps({style: {top: this.state.top}});.\n. Another option is to use a transformMatrix.\n. Hopefully a simple setState on top style works for you though ;)\n. Customizing this should be fine, and I don't have a strong opinion as to the exact semantics. It would also be nice to add some clearer asserts to avoid the negative delay cases etc.\n. @gabelevi: what's your plan here?  Tests failed so at least needs a rebase, or just close it out if it's out of date.\n. Yeah sure.\nOn Thu, Jun 11, 2015 at 7:26 PM Gabe Levi notifications@github.com wrote:\n\n@sahrens https://github.com/sahrens - I do still think this is a good\nidea. If I rebase & get the tests passing would you take this PR?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/1099#issuecomment-111330850\n.\n. This almost works, but mutating children is problematic.  Tracked internally as #6851970\n. @SellaRafaeli - can you rebase this and update?\n. FYI: we're deprecated the automatic style from require(image!... magic so please don't use it going forward ;)\n. @facebook-github-bot import\n. @facebook-github-bot import\n. Weird, I don't think I've ever seen a stack like that before.\n\nCan you quantify \"Occasionally\"?\n. @a2 based on RCTText. \n. Ping @a2, @nicklockwood, @tadeuzagallo\n. Did you have a repro case that failed 100% without this PR and 0% with it?  I'm afraid there might be something else going wrong.\n. ping @ide, @henter on my comment - am I missing something?\n. Cool, thanks - I'll bring this in. \n\nOn May 22, 2015, at 4:52 PM, James Ide notifications@github.com wrote:\n@sahrens My view on this is: covering up the retain cycle (if there is one) is bad and we should fix that. I do think the explicit -[invalidate] calls clarify the intent here, since we want to stop the timer whether or not the request is deallocated.\nI haven't profiled the code for leaks but it looks like there is a cycle between request.timer and timer.userInfo (which is the request object). A nice thing about calling -[NSTimer invalidate] is that it clears the strong references to the timer's target and userInfo properties, which should break the cycle.\n\u2014\nReply to this email directly or view it on GitHub.\n. Also cc @a2\n. Why would you want to hide the highlight while the component is still active?\n. Unhighlighting without performing the action seems very unlikely to be what anyone would want. If someone needs that they can fork their own custom version of the component?\n\nHaving the highlight delay parameterized seems reasonable though.\n\nOn May 13, 2015, at 5:07 PM, Jeff Stout notifications@github.com wrote:\n@sahrens \nI guess implementing that feature was mainly about giving people as many options as possible for how they want their interface to respond.\nI could see a case where you might want the highlight to appear and disappear before the touch is released as a way of informing the user that an action has been registered, even if they're still pressing the component. Communicating that, \"it's okay to stop pressing now, your input has been acknowledged\".\nLike I said previously, if you think the complexity this adds doesn't seem worth it, I can remove the delayHighlightShow and delayHighlightHide properties.\nYou do raise a good question, and I am really interested in what other folks think about this.\n\u2014\nReply to this email directly or view it on GitHub.\n. What's the usecase you have in mind for delaying onPress?  It seems pretty dubious to me, especially since there doesn't seem to be a way to cancel it while the delay timer is running.  I think we should probably kill delayPress unless you have a concrete use-case for it.\n\nIt seems like a fair bit of logic is repeated in the components - would be nice to simplify and/or consolidate somewhere (like in Touchable.js).\nCan you fix the flow errors that failed the travis build?\n. Awesome, thanks!\n-Spencer\n\nOn Jun 1, 2015, at 11:30 PM, Jeff Stout notifications@github.com wrote:\nI've addressed all of your comments, @sahrens.\nHopefully the changes are sufficient.\n\u2014\nReply to this email directly or view it on GitHub.\n. If you rebase and push it should re-run Travis tests. \nOn Jun 2, 2015, at 10:19 AM, Jeff Stout notifications@github.com wrote:\nIf I'm not mistaken, it seems like the travis build failed because of an issue connecting to the development server... mind rerunning it?\n\u2014\nReply to this email directly or view it on GitHub.\n. This is a lot cleaner than the original PR, but I'm still a little wary of adding the extra complexity to such a critical component - can you explain your specific use-case for how you want to use this in more detail?\n. Hmm, I thought it would fire for that I case - I'll check it out and add to the integration test.  The intention is that it should change any time the values it provides would be different. \n\nThe implementation is pretty simple - any time a frame is updated, we fire onLayout for that view (if a handler exists). Are you sure the handler is on the right component?\n. @ide is right - maybe change this PR to throw a more useful error?\n. > \"component.displayName\" in the verifyPropTypes code always be undefined\nLooks like for ES6 classes name works, but for React.createClass displayName works.\n@spicyj : any idea why this is inconsistent?  Is there a better mechanism than just checking both like\n'' + (component.name || component.displayName) + ' has no propTypes defined`'\n. import\n. Can you figure out the right way to include the component name in the error messages and make it consistent in the function?\n. @facebook-github-bot import\n. Thanks!  You can merge documentation changes yourself, no?  Feel free to do-so with obvious fixes like this.\n. Gonna merge #918 instead.\n. You could also fork ListView and rendering rows by appending to two different columns (assuming you need the perf and other features of ListView, otherwise just use a ScrollView). \n. @yelled3 Cool stuff - note that A) this would be much harder to do if ListView was backed by UITableView, and B) Pinterest layouts (re @syousif94) are a bit more complex since the elements are different heights, so you can't just use flex wrap.\n. The JS is still transformed to generate the bundle which is loaded by chrome. \n. Hopefully this will be fixed when we switch to babel soon. \n. @facebook-github-bot import\n. Thanks for the fix!\nIn the future, please make sure to clean up trailing spaces and any other lint.\n. code is code and lint is lint, whether it's a comment or not.\n. Some editors can be configured to automatically remove trailing whitespace which is nice. Does running lint pick up these issues for you?\n\nOn May 15, 2015, at 5:11 PM, Zhao Han notifications@github.com wrote:\nOK. I just noticed that there are trailing spaces. I didn't mean it and it's hard to find. Sorry.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks James!\n\nI don't think this qualifies as a \"workaround\" - I think it's straight up the right thing.  It will be a total non-issue once we get nice REM/react-native link/some other native dep magic fully up and running.\n. We should leave this out of the sample app permanently. Long term you should be able to just add the JS require, run react-native install or maybe npm install and it will auto-link the workspace and lib. \n\nOn May 15, 2015, at 4:42 PM, Christopher Chedeau notifications@github.com wrote:\nThis is a workaround until we have a good way to link it back :) Then, it's going to be the right thing to do :p\n\u2014\nReply to this email directly or view it on GitHub.\n. Maybe add it to your package.json\nOn May 15, 2015, at 4:42 PM, Christopher Chedeau notifications@github.com wrote:\nThis is a workaround until we have a good way to link it back :) Then, it's going to be the right thing to do :p\n\u2014\nReply to this email directly or view it on GitHub.\n. Transforms aren't part of layout, they are applied on top of it. You'll need to use a different animation mechanism.\n\nWe'd like to build a more general transactional animation mechanism that will animate all animatable properties including tranforms, but it's not built yet. Would be happy to see a PR :)\n. We'll have some better options for you soon ;)\n\nOn May 18, 2015, at 5:15 AM, Chris Smothers notifications@github.com wrote:\nThanks @sahrens. I ended up using kirkness/react-native-tween-animation. It's not 60fps, but it works as a band-aid.\n\u2014\nReply to this email directly or view it on GitHub.\n. The current TextInput is already basically semi-controlled because fully-controlled is janky due to async as you mention. If you don't update the value prop in js, the native value won't be overwritten, and if you continuously update the value, there is some buffering to try and reduce the jankiness by not overwriting the native value immediately.\n\nWould be nice to have a better solution, perhaps a mechanism to provide a js code snippet to run synchronously on the main thread?\n\nOn May 19, 2015, at 8:15 PM, Adam Miskiewicz notifications@github.com wrote:\nIt's urgent, but I don't mind keeping the fork.\nThanks for the feedback, and I look forward to seeing the new API!\n\u2014\nReply to this email directly or view it on GitHub.\n. I think the general fix is view recycling, but we might need to do Image caching differently as well.\n. @a2 I'm not sure we really want this - inputAccessoryView is probably the better way to go, but obviously more work than this...but putting in your queue to either ship it or close.\n. Vjeux new animation stuff doesn't replace LayoutAnimation at all - they are\nactually quite complimentary and both can do things the other cannot (for\nexample, animating flexWrap grid re-orderings).\nOn Thu, Jun 11, 2015 at 4:02 PM Nick Lockwood notifications@github.com\nwrote:\nI have some ideas for how inputAccessoryView can be implemented. If\nsomebody has some time to look at building it, I'm happy to discuss\nsolutions.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/1366#issuecomment-111301632\n.\n. @tadeuzagallo, @nicklockwood: what do you think about this?\n. Looks like the tests failed, so back to you.\n. @tadeuzagallo / @nicklockwood / @a2 : Is there a cleverer way we can fix the underlying issue?\n. You can also add a cache buster to the url from JS - not super elegant, but might work with no native changes?\nOn Jun 2, 2015, at 4:04 AM, Dmitry notifications@github.com wrote:\n@brentvatne it was my message on IRC. I use Image a lot in my app and hardly need to somehow control the cache. I've made a PR #1491 but it's a just silly concept. Any thoughts how it could be done without risks to broke something in  for others? I see these options:\n1) totally own component as an external library \n2) use new  feature \"displaying local files\". So the part responsible for downloading and caching goes to javascript side. \n3) react-native fork <- I'm here\n\u2014\nReply to this email directly or view it on GitHub.\n. The image bug is a separate issue - changing the url should change the image, that definitely needs to be fixed.  Closing this because I don't think we want to change the internals since a cache busting param in the url should solve this particular issue (you can change the URL whenever you want to refresh the image...once that bug is fixed of course.)\n. Looks like you have two totally different commits stacked in this PR - can you move your push notification change to new PR?\n. Can you move this out of core style stuff and just make it a plain prop with the API @ide suggested?  Also, can you add to the TextInput Example?\n. @facebook-github-bot import\n. Cool, thanks!\n. Hey @brentvatne: want to guide this along and merge it when it's ready?\n. @facebook-github-bot import\n. So I think the history is that we intentionally removed this when we found out that android doesn't support justified spacing (see http://stackoverflow.com/a/4314724 for lolz).\n\nI'm not sure that's the right call, though, and honestly I'd rather just land this than hamstring iOS capabilities.\nOne thing we also considered was naming it \"justifyIOS\" or something to make it clear it's IOS-only (although windows phone and other platforms probably support it?), or just put a comment in the code.  A redbox on Android might also be sufficient.  Thoughts?\n. Also, can you fix tests?  You need to re-record the snapshot:\n2015-06-02 00:42:56.318 UIExplorer[2473:7064] If you have Kaleidoscope installed you can run this command to see an image diff:\nksdiff \"/var/folders/vy/rcv48w3j4w79llzf_x6qnvw40000gn/T/Examples-UIExplorer-UIExplorerApp/reference_testTextExampleSnapshot_1@2x.png\" \"/var/folders/vy/rcv48w3j4w79llzf_x6qnvw40000gn/T/Examples-UIExplorer-UIExplorerApp/failed_testTextExampleSnapshot_1@2x.png\"\n2015-06-02 00:42:56.355 UIExplorer[2473:7064] * Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: '* Assertion failure in __32-[RCTTestModule verifySnapshot:]_block_invoke, /Users/travis/build/facebook/react-native/Libraries/RCTTest/RCTTestModule.m:55: Snapshot comparison failed: Error Domain=FBSnapshotTestControllerErrorDomain Code=4 \"Images different\" UserInfo=0x7abbe320 {NSLocalizedDescription=Images different}'\n. Yeah, let's go with the comment.\nOn Thu, Jun 11, 2015 at 5:01 PM James Ide notifications@github.com wrote:\n\nOne thing we also considered was naming it \"justifyIOS\" or something to\nmake it clear it's IOS-only (although windows phone and other platforms\nprobably support it?), or just put a comment in the code. A redbox on\nAndroid might also be sufficient. Thoughts?\nMy preference is to add a comment and document it because that's easiest\nand I can't test Android, and the failure mode on Android will have a sane\ndefault -- I expect it will either redbox because it doesn't know what to\ndo with the prop value, or it will fall back to left-aligned text which is\nstill totally usable and at worst a lo-pri bug in most cases.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/1486#issuecomment-111309574\n.\n. I fixed by re-recording locally, but did you do something funky to the snapshot images after recording them?  Our internal png crush script couldn't process them:\n\nCrushing Libraries/FBReactKit/js/react-native-github/Examples/UIExplorer/UIExplorerIntegrationTests/ReferenceImages/Examples-UIExplorer-UIExplorerApp.ios/testTextExampleSnapshot_1@2x.png\nTraceback (most recent call last):\n  File \"/Users/sahrens/src/fbobjc-hg/Tools/pngcrush/../IconStamp/png_meta.py\", line 80, in \n    parse_header(f)\n  File \"/Users/sahrens/src/fbobjc-hg/Tools/pngcrush/../IconStamp/png_meta.py\", line 17, in parse_header\n    if not all([ord(f.read(1)) == PNG_SIGNATURE[i] for i in xrange(0, len(PNG_SIGNATURE))]):\nTypeError: ord() expected a character, but string of length 0 found\nWhile measuring IDATs in /Users/sahrens/src/fbobjc-hg/Libraries/FBReactKit/js/react-native-github/Examples/UIExplorer/UIExplorerIntegrationTests/ReferenceImages/Examples-UIExplorer-UIExplorerApp.ios/testTextExampleSnapshot_1@2x.png pngcrush caught libpng error:\n   Read Error\nCould not find file: /Users/sahrens/src/fbobjc-hg/Libraries/FBReactKit/js/react-native-github/Examples/UIExplorer/UIExplorerIntegrationTests/ReferenceImages/Examples-UIExplorer-UIExplorerApp.ios/testTextExampleSnapshot_1@2x.png_tmp\nWe should probably just disable the crush lint for ReferenceImages...\n. I don't think this is the right approach - if you want the image to change, I think you should probably change the url - see my comment here: https://github.com/facebook/react-native/issues/1397#issuecomment-108079830\n. What do you think about this, @vjeux?  @brentvatne, @ide - any thoughts?\n. We compute this in js with the PanResponder, but it does seem useful to have the native value as well.\n. @facebook-github-bot import\n. I'm confused - what's broken exactly?\n. Text is weird - it has backgroundColor, which refers to the actual area where there is text, and backgroundContainerColor, which is the background color of the UIView that hosts the text...I'm thinking that might have been a poor naming choice and perhaps we should flip those names and change to \"textBackgroundColor\"?\n\nOn Jun 5, 2015, at 1:11 AM, James Ide notifications@github.com wrote:\n@nicklockwood OK, makes sense and is consistent with Text nodes if I'm not mistaken.\nI believe @jsierles has found a different bug here, where the Text node in Words is rendered with an opaque background.\n\u2014\nReply to this email directly or view it on GitHub.\n. Perhaps, but we want to be careful about adding too many magic special\nrules that are hard to reason about.  That might be an ok one though, what\ndo you think @nicklockwood?\n\nOn Fri, Jun 5, 2015 at 10:26 AM, James Ide notifications@github.com wrote:\n\nTo me it's more intuitive if backgroundColor sets the background behind\nthe glyph runs and not the containing box, so the current naming makes\nsense in that light.\nI think we want to disable the blending optimization on the container if\nthe text has a translucent background color, so as to maintain the illusion\nthat the container is transparent. So in the example above, the text's\ncontainer would have a transparent background because (a) the text's\nbackgroundColor is \"transparent\" and (b) containerBackgroundColor is\nnull/undefined.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1504#issuecomment-109369870\n.\n. That's a great point.\nOn Jun 5, 2015, at 4:40 PM, James Ide notifications@github.com wrote:\nMy reasoning is that CSS applies the background color to the glyph runs and not the bounding box. RN should produce that effect if it's the behavior we want (maintaining CSS compatibility is the strongest argument I can think of), and text with a translucent background color is a scenario that isn't eligible for the blending optimization. When I think of it that way, it's less a magic rule that users need to learn and more like code specialization that is applicable under certain conditions.\n\u2014\nReply to this email directly or view it on GitHub.\n. This seems ok to - @nicklockwood, you re-wrote this recently, any qualms?\n. Actually going to pass this one to nick to finish review and import.\n. @facebook-github-bot import\n. Can you rebase and make sure tests are passing?\n. This seems reasonable, but can you rebase and make sure tests are passing?\n. @facebook-github-bot import\n. Can you rebase and re-record the snapshot tests to get the travis build to pass?\n. The bot can't help here - you need to re-record for any change that will affect the snapshot tests.  Follow the instructions in the docs here, update your PR, and make sure your Travis build passes and then we'll merge it in:\n\nhttps://github.com/facebook/react-native/blob/master/docs/Testing.md#running-tests-and-contributing\n. @nicklockwood: what do you think of this?\n. Oh yeah, forgot about the color cache. Another approach is to maintain a frequency map of usage that is periodically periodically reset (never more than 10 entries or something). Then you only cache elements if they have multiple counts in the map.\n\nOn Jun 5, 2015, at 11:06 PM, James Ide notifications@github.com wrote:\nSee #1513. The issue is that animating a color quickly fills up the color cache. We probably want to:\nCap the size of the cache and implement a policy like Least Frequently Used or segmented LRU\nChange the caching policy when the color is animated (e.g. MRU, or don't cache at all. But if the animation repeats it could be helpful to have cached the values.)\ncc @sahrens @nicklockwood @vjeux for thoughts\n\u2014\nReply to this email directly or view it on GitHub.\n. Nick is oncall this week and I have no idea what this error is.\n. This is cool, but we have some changes planned with the source width/height that may need to coordinate here (although I think this is a better solution to the problems we've been seeing than we were planning).  Assigning to @frantic who has been working on that image stuff.\n. Also, can you rebase?  It might also give a passing test run.\n. > The problem is that if an image element was first configured without this, and then later on gets the source.width and source.height parameters, this aspect ratio behaviour would not get turned on.\n\nIn general, it's really important that the order of property changes not matter, just the final state - can you fix that?\n. Thanks for fixing this @ide!\n. Going to restart with a bunch of fixes...\n. It should be pretty straight-forward to just pass a URL to the native component via a new property.  If you specify the type of the property as UIImage, then RCTConvert will automatically parse the string and convert it into a UIImage, whether it's a network url or a local static image file path:\nhttps://github.com/facebook/react-native/blob/master/React/Base/RCTConvert.m#L613\nThen in the native code you can plug in the resulting UIImage object wherever you want.\n. I'm going to close this out assuming you'll put up a PR - if you have any more questions, feel free to ask here or reach out directly in the community group or IRC channel.\n. I'm definitely a fan of your second suggestion for initial data - for the comparison function, the thinking was that we wanted people to make sure they thought about the perf instead of just doing things blindly, but I don't think that's really working out since people just copy-pasta anyway, and it's usually not even that big a perf opportunity to customize that function anyway, so I say go for both.  Closing this assuming you'll put up a PR :)\n. Yeah, iOS n00bs might not realize that apps are sandboxed at the OS level...\n\nWhat's clients here?\n\nAny code that calls the AsyncStorage API.\n. @facebook-github-bot import\n. @facebook-github-bot import\n. I think this is an ios issue in the simulator.  Do you ever see this particular bug on device?\n. @facebook-github-bot import\n. yeah, you probably just don't want to mix these...but passing to Eric in case he's thought about this more.\n. @ide: want to stick something in the docs?\n. FYI: It's helpful if you include the stack trace with sourcemaps (a screenshot of the redbox should be sufficient).\nBut I think this is just from a breaking API change - replace usage of RCTScrollViewConsts.KeyboardDismissMode.None in your code with just the string 'none'\n. please re-open if there is something else going on.\n. That code is only in the \"if (Platform.OS === 'android')\" branch which\nisn't used in OSS yet...\nOn Sat, Jun 13, 2015 at 10:13 AM Chirag notifications@github.com wrote:\n\n@sahrens https://github.com/sahrens I'm not using keyboardDismissMode\nin my app at all. I'm using using ....\nAfter some debugging, this error seems to be coming from react-native code\nitself. Here:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollView.js#L323\nIt expects RCTScrollView.Constants to export KeyboardDismissMode. However\nonly DecelerationRate is exported. Hence the error.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1606#issuecomment-111730680\n.\n. Hmm, do the source maps ever work for you? Looks like they didn't load\nhere. cc @frantic, @amasad\n\nI'll dig into the actual failure...not sure how it could be so broken...\nOn Sat, Jun 13, 2015 at 11:56 AM Chirag notifications@github.com wrote:\n\nOk. I took the latest master. I have attached the screenshots.\nError seems to come from line 24289 in the bundle. I have attached the\nscreenshot of those lines in the bundle. Not where how are these constants\ncoming here.\nLet me know if you need more info.\n[image: ios simulator screen shot jun 13 2015 2 52 30 pm]\nhttps://cloud.githubusercontent.com/assets/954063/8145604/f9d4a3dc-11db-11e5-98ce-c9b50f0655c4.png\n[image: screen shot 2015-06-13 at 2 52 48 pm]\nhttps://cloud.githubusercontent.com/assets/954063/8145605/fc6bb996-11db-11e5-9d2f-eb301c0476f2.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1606#issuecomment-111740134\n.\n. I just tried react-native init, then upgraded to 0.6.0-rc and npm installed again, recompiled, and everything still works with scrollview and I don't see any references to KeyboardDismissMode outside of that android-gated code.\n\nYou should turn them back on in chrome so we can see what your stack trace is.  Also, not sure why they aren't working in the RedBox - separate issue, but your setup definitely has some breakage.\nDid you make sure to do a clean and recompile in Xcode (cmd+shift+K, cmd+R) after upgrading?  Also maybe try restarting the packager server with --reset-cache?\n. @amasad: Sounds like we're not properly clearing cache/restarting the server on upgrade - something you can fix?\n. nice find :)\n. @facebook-github-bot import\n. The tests were failing on master earlier but should be stable now, probably just needs a rebase. \n\nOn Jun 15, 2015, at 2:45 AM, Jan Monschke notifications@github.com wrote:\n@sahrens Do you need me to make the build green to merge this? I can hardly believe that an added sort() in that file would break the build :D\n\u2014\nReply to this email directly or view it on GitHub.\n. Yeah, you have to call measure manually to get the global or \"page\"\nposition. This is because we don't currently have an efficient/reliable way\nto provide events for this you can listen to (e.g. it would have to be\ncalled on every scroll event iff nested in a scroll view, and what if that\nScrollView was nested in a scrollview? We'd have to re-measure every view\nsubscribing to measure events in every frame to decide to send an event or\nnot.).\nOn Tue, Jun 16, 2015 at 3:20 PM jonslenkooyala notifications@github.com\nwrote:\nWith the grossness I mentioned above, I think maybe if I am lucky I am\ngetting the values I want in the px,py arguments to the callback?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1643#issuecomment-112586574\n.\n. I think @ide fixed this - does this still repro on master?\n. How does the lag manifest exactly?  While dragging the pan responder or trying to render something or?\n. There are a couple other fixes pending that might fix your issue once they get sync'd out. \n. Hmm, it's hard to say without more code. A quick optimization would be to only setState if scrollEnabled is actually changing rather than calling it on every single touch event once your gesture is active. Something like\n\nresponderMove={(gestureState) => {\n  if (Math.abs(gestureState.dx) > 10) {\n    if (this.state.scrollEnabled) {\n      this.setState({scrollEnabled: false});\n    }\n    ... // other gesture handling\n  }\nIf that doesn't fix it, you might need to add some componentShouldUpdate or similar optimization to your code to prevent the re-rendering, or perhaps use a better rowDidChange function. Another option is to use setNativeProps to update scrollEnabled to avoid the setState/render completely. \n\nOn Jun 23, 2015, at 10:26 AM, Philipp Krone notifications@github.com wrote:\n@sahrens to give you some background:\nI have a ListView with scrollEnabled={this.state.scrollEnabled}. Each row of this ListView has a panResponder and in the respective onPanResponderMove, I set the ListView to not being scrollEnabled via this.setState({scrollEnabled: false});\n```\n    <ListView\n      ref=\"listview\"\n      ...\n      scrollEnabled={this.state.scrollEnabled}\n      renderRow={this.renderActivity}\n      ...\n/>\n\n```\n...\nrenderActivity: function(item, sectionID, rowID) {\n        ...\n      return    {\n                    if (Math.abs(gestureState.dx) > 10) {\n                      this.setState({scrollEnabled: false});\n                    }\n                  }}\n   }\nAnd inside the SwipeableElement, I have:\nthis._panResponder = PanResponder.create({\n   ...\n  onPanResponderMove: this._handlePanResponderMove,\n   ...\n});\n_handlePanResponderMove: function(e, gestureState) {\n    this.props.responderMove(gestureState);\n  }\nThe issue now is that the line this.setState({scrollEnabled: false}); seems to induce the lag (its really slow in e.g. IPhone 4s), where as this was not the case before the mentioned commit.\n\u2014\nReply to this email directly or view it on GitHub.\n. What does this fix exactly?  Right now we solve this by only presenting the first error and then applying the source map stack trace just to that one. I guess it's possible for multiple errors to happen and update the stack with the wrong one?  I've never seen that happen though.\n\nAlso note - what really makes this tricky is compatibility with Android. We'll have to do some minor gymnastics on our side to make everything land cleanly. \n. Hooking up RCTLogError to fail tests sounds like a good idea. \n\nOn Jun 25, 2015, at 11:11 PM, James Ide notifications@github.com wrote:\n@brentvatne pointed out that the tests shouldn't have passed. Should RCTLogError calls mean automatic test failure (except in tests that expect intentional errors)?\n\u2014\nReply to this email directly or view it on GitHub.\n. @facebook-github-bot import\n. Is it normal for the podspec file to be outside of the project directory?  I (with no experience using CocoaPods) would expect this to live at:\n\nreact-native/ReactKit/ReactKit.podspec\n. Yeah, just rebased,  which also broke some stuff...updated.\n. Thoughts on baseURL support in the future?\n. This file was cleaned up in some other PRs, but your other changes are still valid - can you rebase?\n. This is going to get wiped by an internal sync but we have another diff that does the same thing so the change won't get lost.\n. Can you make this They also accept an array of styles. instead?\n. nit: the curly braces should be on the same line as the else:\n} else {\n. nit: no space between function name and opening paren:\nfunction statusPageMiddleware(req, res, next) {\n. accepts should be singular - They also accept an\n. We should migrate these out of RCTUIManager at some point - they should probably be regular event emitter stuff.\n. These should use RCT_CUSTOM_VIEW_PROPERTY in case we change the prefix in the future, which is likely, e.g. to add an rct_ prefix like you suggested ;).\n. @amasad / @frantic: when are we going to update documentation and examples for the new relative path hotness?  Would be good to do it earlier rather than later to reduce the amount of legacy people build up in their apps.\n. This is going to conflict with https://github.com/sahrens/react-native/commit/58a550fa0625f31108e06f32ebb2958e2ffefcf0#diff-27f88ff7e26d700f93b6d9791f3d408d\nCan you rebase when that lands?\n. I think you can do something like\nerror.framesToPop = 1;\n. Please use === or !== instead of their looser counterparts whenever possible. \n. Or just check truthiness without comparing to undefined. \n. The new invalidate calls shouldn't be necessary because this should be invalidating the timers because all the requests should be dealloc'd at this point.  If that's not happening, there is probably a retain cycle or something?  cc @nicklockwood \n. this should be on componentWillReceiveProps instead.\n. your touchableHandlePress functions look almost identical - can you share the implementation in Touchable?\n. Same with touchableHandleActivePressOut.  And I don't mean completely share the impl, but can you factor out the common logic into Touchable.js?\n. Why do you need to differentiate with _fromPressIn?  Seems like if press is ever triggered, we always want to show the highlighted state for at least 100/delayPressOut ms.\n. Make sure to remove the trailing whitespace.\n. onPressOut should be called after delayPressOut too, right?\n. Why || 0 on this one but not the others?\n. Oh actually, Touchable.js will handle that delay, right?\n. You could also change the type to ?number, no?\n. No reason to mark this as required since it has a default implementation.\n. Also, I agree that \"ScrollView\" is a little confusing here - renderScrollComponent might be better.  Can you update?\n. please don't change this - it looks like you have several commits stacked in this PR - can you move the unrelated ones to new PR's and squash the remaining ones into one commit for this PR?\n. nit: alphabetical \n. Actually, I don't think this should be in the core style stuff anyway - it should be a separate prop since it's so specific to TextInput.\n. /component is it too/component is too/\n. Is there somewhere we can just stick this into the codebase instead of suggesting folks re-write their own?\n. Definitely missing steps - I'd rather not merge this in until it's complete with an example jest setup, example jest test, etc., or at least a little more direction to other documentation to get people the rest of the way.\n. Oh, interesting, does flow even apply to non-es6 class-style propTypes?\nOn Thu, Jun 11, 2015 at 4:29 PM James Ide notifications@github.com wrote:\n\nIn Libraries/CustomComponents/ListView/ListView.js\nhttps://github.com/facebook/react-native/pull/785#discussion_r32279234:\n\n@@ -164,6 +164,13 @@ var ListView = React.createClass({\n      /\n     renderSectionHeader: PropTypes.func,\n     /\n-     * (props) => renderable\n-     \n-     * A function that returns the scroll view in which the list rows are\n-     * rendered. Defaults to returning a ScrollView with the given props.\n-     */\n-    renderScrollView: React.PropTypes.func.isRequired,\n\nWill update with a renamed version.\nRegarding isRequired, I understand it to mean that the type of\nthis.props.renderScrollView is Function instead of ?Function in\nFlow-speak. So because we're saying the prop is non-null (which is true\nbecause of the default value from getDefaultProps), Flow won't complain\nabout this.props.renderScrollView() needing a null check.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/785/files#r32279234.\n. Oh cool, maybe new flow goodness. But defining a default for the prop and\nleaving it not isRequired doesn't make the error go away? cc @glevi\nOn Thu, Jun 11, 2015 at 8:48 PM James Ide notifications@github.com wrote:\nIn Libraries/CustomComponents/ListView/ListView.js\nhttps://github.com/facebook/react-native/pull/785#discussion_r32288705:\n\n@@ -164,6 +164,13 @@ var ListView = React.createClass({\n      /\n     renderSectionHeader: PropTypes.func,\n     /\n-     * (props) => renderable\n-     \n-     * A function that returns the scroll view in which the list rows are\n-     * rendered. Defaults to returning a ScrollView with the given props.\n-     */\n-    renderScrollView: React.PropTypes.func.isRequired,\n\nYeah, here's a small example:\n/* * @flow /'use strict';\nvar React = require('react-native');var { PropTypes, Text } = React;\nvar App = React.createClass({\n  propTypes: {\n    getContent: PropTypes.func,\n  },\nrender() {\n    var content = this.props.getContent();\n    return {content};\n  },\n});\nFlow prints:\n/Users/ide/test/index.js:15:19,41: call of method getContent\nFunction cannot be called on possibly undefined value\n/Users/ide/test/index.js:11:17,30: undefined\nAdding isRequired makes the error go away.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/785/files#r32288705.\n. rm\n. Why not just add to RCTLocationOptions?\n. style for constants is \"RCTPermissionTypeAlways\"\n. the || {} isn't necessary?\n. should still need the semi since this is just a var assignment.\n. I think this is fairly safe, although things might get weird in a 2-axis scrolling situation...the JS component has a horizontal prop - maybe we should pass that through to native?\n. Can you also use StyleSheet here plz?\n. Can you fix the spacing?  Space should be after the comma, not before, and => should have space around it.\n. Formatting is off.  Make sure to use 2 space indents and curly braces should be on their own line.\n. Formatting is off.  Make sure to use 2 space indents and curly braces should be on their own line.\n. This isn't the worst thing in the world, but there isn't a better way to grab the shadow?\n. This isn't the worst thing in the world, but there isn't a better way to grab the shadow?\n. Formatting is off. Make sure to use 2 space indents and curly braces should be on their own line.\n. Formatting is off. Make sure to use 2 space indents and curly braces should be on their own line.\n. You should make sure to set hidden back to NO if this changes from true to false.\n. You should make sure to set hidden back to NO if this changes from true to false.\n. Why would we send a location event if location isn't being observed?\n. Why would we send a location event if location isn't being observed?\n. space after comma, and make sure your lines aren't longer than 80 chars.  I'd format this like so:\n\nstyle={[\n    styles.transitioner,\n    {backgroundColor: this.props.transitionBackgroundColor}\n  ]}\n. space after comma, and make sure your lines aren't longer than 80 chars.  I'd format this like so:\nstyle={[\n    styles.transitioner,\n    {backgroundColor: this.props.transitionBackgroundColor}\n  ]}\n. can you consolidate this with the enter logic into one if else chain?\n. can you consolidate this with the enter logic into one if else chain?\n. This does weird things with paste and auto-correct type stuff, sending full strings of characters.\n. This does weird things with paste and auto-correct type stuff, sending full strings of characters.\n. Same comment - one if else with this assignment in the final else block.\n. Same comment - one if else with this assignment in the final else block.\n. newline?\n. newline?\n. This also does weird things with paste.\n. This also does weird things with paste.\n. Won't this also detect pasting over single character selections?  Will that cause weird things to happen?\n. Won't this also detect pasting over single character selections?  Will that cause weird things to happen?\n. Can you also add a prev3 since more events are firing now?\n. Can you also add a prev3 since more events are firing now?\n. _shouldClamp would be a better name I think.\n. This also needs space after the comma.\n. Why use cloneElement instead of just creating an element like normal?\n. This is going to wrap every row in an extra unnecessary view, even if people don't want to use this new sectionStyle feature, which will hurt perf and probably break apps.  If we decide we want this as a feature, we'll need to make sure it doesn't change behavior when it's not used.\n. Please follow the style consistent with this file and put curly braces around all if blocks. \n. We don't want to warn if people pass true for enableEmptySections\n. We don't want to warn if people pass true for enableEmptySections\n. We shouldn't support false since we want to remove that behavior. You can use an invariant here to make sure, and include a helpful error message explaining that the prop will be deprecated. \n. We shouldn't support false since we want to remove that behavior. You can use an invariant here to make sure, and include a helpful error message explaining that the prop will be deprecated. \n. I don't see any code that's actually making this a controlled prop - if you set it in JS, then the user changes it, what's going to change it back to the JS value? Normally this is done with setNativeProps in a change handler - see line 563 below as an example.\n. I don't see any code that's actually making this a controlled prop - if you set it in JS, then the user changes it, what's going to change it back to the JS value? Normally this is done with setNativeProps in a change handler - see line 563 below as an example.\n. I'm worried about weird edge-cases that could happen if the user interacts with the app while this deletion animation is running. Perhaps we should make the view immediately non-interactable? Any other safeguards we could use? How much did you bang on the prototype?\n. I'm worried about weird edge-cases that could happen if the user interacts with the app while this deletion animation is running. Perhaps we should make the view immediately non-interactable? Any other safeguards we could use? How much did you bang on the prototype?\n. This is pretty sick how easy this is.\n. This is pretty sick how easy this is.\n. nit: no space after colons.\n. nit: no space after colons.\n. nit: use state function:\nthis.setState((state) => ({toggled: !state.toggled}));\n. nit: use state function:\nthis.setState((state) => ({toggled: !state.toggled}));\n. These should also use state mutation functions.\n. These should also use state mutation functions.\n. Another approach would be to add LayoutAnimat.easeInEaseOut() to componentWillUpdate().\n. Another approach would be to add LayoutAnimat.easeInEaseOut() to componentWillUpdate().\n. It's also more correct because another state update might be queued but not yet reflected in this.state, using the function makes sure you are operating on the latest state. \n. Can you pull this out into a reusable lib?\n. All requires should be at the top of the file.\n. nit: This should be before the constant values (_warningMap, _warningEmitter), but with an extra line between it and the other modules because it is a pure function rather than a class.\n. And if you stick with the duplication, might as well nuke the propTypes here in the mixin since it's not complete and could be confusing for people.\n. cc @vjeux: drunk lint? Or is this just github being stupid and showing old irrelevant comments?\n. Also, I somehow only just now realized that this whole thing only applies to createStrictShapeTypeChecker, not all warnings - can't you add const stack =  parseErrorStack(new Error()); inside updateWarningMap so we can always have the file/line?\nAlso, this is in invariant - doesn't it throw a redbox with a stack trace for you?\n. Why search for render rather than skip a fixed number of frames?\n. Oh sorry, I see - you don't want to report the line where the warning was fired since that's in the infra code...maybe we could just give the line of the warning by default, but have some custom logic for the props case you're focused on here - does that make sense? Basically if the stack looks like it comes from the strict prop type checker then we grab the render function, otherwise we just show the file/line of the actual warning.\nAlso, we could just include the entire parsed error stack at the bottom of the warning message.\n. Although this whole thing is weird because the strict prop checker invariant should throw an exception anyway, not a warning, not sure what's up with that...\n. So if renderFrame doesn't exist, let's just return the file/line where the console.warn is, and also include the pretty stack after the whole error message.\n. Yeah, we definitely want it optional. It's a pain to check before calling cancel.\n. @sebmarkbage: do you have any thoughts on this?\n. Is this necessary?\n. Why not just include AnimatedImplementation in the initial Object creation?. Why do you even need to create and export this?. _attachment is a non-intuitive name for me - something like _attachedEvent or _nativeEvent might be better?. nit: should stay on prev line. s/Indice/Index. All this interpolate range computation is pretty complicated and non-intuitive - can you add some comments, maybe a comment block, explaining the logic?. Anything less arbitrary/more robust you can do here?. Why not React.Children.map?\nhttps://facebook.github.io/react/docs/react-api.html#react.children.map. When is this getter accessed though? I don't see any code in this diff that would call it.. I meant as a field, like Animated.AnimatedImplementation.createAnimatedComponent. Not a big deal.. Is this bot drunk? Do you know who owns it? @vjeux or @mkonicek?. I think that is a limitation of createClass. Maybe because of createClass? Bummer. Would be nice to kill that mixin and switch this to es6 at some point.... Very helpful.. This is too fragile I think, unless we can come up with a robust way to detect if it's left out?. Should never call private functions outside the class.. The number is so small I doubt LinkedList would be better and might just use more memory in the common case, but not a big deal. . This extra arg will just get ignored if the binary has the old API right? I'd like this keep working if people update the JS ahead of the native code if possible. . Maybe like this?\n<Text>\n  {`JS Stall filtered: ${Math.round(this.state.filteredStall)}, `}\n  {`last: ${this.state.busyTime}`}\n</Text>. Is this what prettier prefers? :\\. Is this necessary?. Does it matter that you are re-ordering this before `[self updateOutputWithFrameOutput:finalValue.doubleValue]`?. same: necessary?. I wouldn't worry about duplicating these empty cases in FlatList and SectionList - just VirtualizedList should be fine. Adding to the \"bells and whistles\" cases is good though.. Should also test the rendered element case.. Thanks for adding these in - it was just an oversight that I left them out.. Can you add headers and footers here too? I want to make sure we test the logic of whether we show them in the empty case.. We should do this with the declaration on line 816.. Wut?. Why would the listRef ever be a ListView?. Why do you need to account for headerLength and paddingTop here?. Please run prettier as well.. Don't mutate in render - componentDidReceiveProps would be a better place for setting these.\n\n. I think you just need to add a style with flexDirection: 'row' when horizontal is true.. Can you add a check to only do this with __DEV__ and use warning instead of invariant?. Instead of copying the whole thing and then removing things you don't want to keep, can you explicitly copy just the props that we do want to keep?. should comparing key length consider exceptions?. Can you use deepEquals with a depth limit of 2 instead? That will do a shallow compare of all the props, including parentProps. Hopefully that works and you can get rid of your shallowEqual fork. If that doesn't work for some reason, could you at least rename to shallowEqualWithExceptions and put it in a util folder?. Based on this POP code, maybe we need to guard against 0 for some reason?\nhttps://github.com/facebook/pop/blob/master/pop/POPAnimationExtras.mm#L37. Nope. For some reason the value is 10 when testing...I'll fix it.. I think React.Children is preferred:\nsuggestion\n  children: React.Children,. suggestion\n  _subscription: ?EmitterSubscription = null;. Want to use a functional component with the useEvent hook?. I wonder if we should just bake this new root layout functionality into AppContainer since it already has subscriptions and context and state - that would reduce the \"wrapper hell\" we have going on. Ideally we could factor out the functionality into separate hook modules useRootLayoutProvider / useRootLayout?. What do you think about also dumping the content of the context to the screen with JSON.stringify? That can be really handy for seeing what's available and debugging in examples like this.. Change the check to != instead of !== to also check for undefined. why not use threashold for both?. ",
    "jaygarcia": "Supporting orientation change is crucial, especially for tablets.\nSomething like styles : { landscape : {}, portrait : {} } could work from the JS Implementation perspective.\n. Are the discussed items here obsolete? I grep'ed for RCTNativeModule and initWithJavaScriptExecutor across the entire repo and found nothing.\n. Should this be closed?\n@frantic , i think the article is pretty air tight for the moment :)\n. Still exists.\n2015-03-03 08:59:03.140 UIExplorer[59212:281803] *** Assertion failure in -[RCTNavigator reactBridgeDidFinishTransaction], /www/ios/react-native/ReactKit/Views/RCTNavigator.m:508\n2015-03-03 08:59:03.141 UIExplorer[59212:281803] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'JS has only made partial progress to catch up to UIKit'\n*** First throw call stack:\n(\n    0   CoreFoundation                      0x0000000108979f35 __exceptionPreprocess + 165\n    1   libobjc.A.dylib                     0x0000000108612bb7 objc_exception_throw + 45\n    2   CoreFoundation                      0x0000000108979d9a +[NSException raise:format:arguments:] + 106\n    3   Foundation                          0x000000010822f5df -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 195\n    4   UIExplorer                          0x000000010803c175 -[RCTNavigator reactBridgeDidFinishTransaction] + 1013\n    5   UIExplorer                          0x000000010804a7d0 __51-[RCTUIManager uiBlockWithLayoutUpdateForRootView:]_block_invoke326 + 96\n    6   UIExplorer                          0x0000000108046806 RCTTraverseViewNodes + 198\n    7   UIExplorer                          0x0000000108046936 RCTTraverseViewNodes + 502\n    8   UIExplorer                          0x0000000108046936 RCTTraverseViewNodes + 502\n    9   UIExplorer                          0x000000010804993a __51-[RCTUIManager uiBlockWithLayoutUpdateForRootView:]_block_invoke + 5466\n    10  UIExplorer                          0x000000010804724c __27-[RCTUIManager addUIBlock:]_block_invoke + 124\n    11  UIExplorer                          0x0000000108050986 __32-[RCTUIManager batchDidComplete]_block_invoke_2 + 342\n    12  libdispatch.dylib                   0x000000010bf25ba6 _dispatch_call_block_and_release + 12\n    13  libdispatch.dylib                   0x000000010bf437f4 _dispatch_client_callout + 8\n    14  libdispatch.dylib                   0x000000010bf2c8fb _dispatch_main_queue_callback_4CF + 949\n    15  CoreFoundation                      0x00000001088e1fe9 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\n    16  CoreFoundation                      0x00000001088a4eeb __CFRunLoopRun + 2043\n    17  CoreFoundation                      0x00000001088a4486 CFRunLoopRunSpecific + 470\n    18  GraphicsServices                    0x000000010d7279f0 GSEventRunModal + 161\n    19  UIKit                               0x0000000109f21420 UIApplicationMain + 1282\n    20  UIExplorer                          0x0000000107fde003 main + 115\n    21  libdyld.dylib                       0x000000010bf78145 start + 1\n    22  ???                                 0x0000000000000001 0x0 + 1\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\n. I've just begun looking @ how things are put together from Libraries/ and the React-Native ObjC code.\nAt this point, I imagine it's including your project so that its libraries could be included in the main application Xcode project and implemented.\nReactKit has ARC enabled, so I imagine it's a dependency on 3rd party libs, especially if you're compiling from source.\n. I've just begun looking @ how things are put together from Libraries/ and the React-Native ObjC code.\nAt this point, I imagine it's including your project so that its libraries could be included in the main application Xcode project and implemented.\nReactKit has ARC enabled, so I imagine it's a dependency on 3rd party libs, especially if you're compiling from source.\n. Thanks, but that doesn't work.  Say for example, you want to have the outer-most containing view automatically size to the iPhone's dimensions.  \nalignSelf doesn't seem to work in this case.\nHere's the JSX for the top-most view: https://gist.github.com/moduscreate/f9414970d5158da25036\nWhat i'm experiencing: http://www.screencast.com/t/sHOCgEJgqqi\n. Thanks, but that doesn't work.  Say for example, you want to have the outer-most containing view automatically size to the iPhone's dimensions.  \nalignSelf doesn't seem to work in this case.\nHere's the JSX for the top-most view: https://gist.github.com/moduscreate/f9414970d5158da25036\nWhat i'm experiencing: http://www.screencast.com/t/sHOCgEJgqqi\n. Fantastic.   Thank you.  \nI apologize for the new questions. I\"m learning react whilst learning this new iOS bridge.\n. Fantastic.   Thank you.  \nI apologize for the new questions. I\"m learning react whilst learning this new iOS bridge.\n. ^--- I cannot tell you how much this means to community members like myself and that this type of attitude will only nurture and help grow the use of this awesome tech.  I speak from experience of a once-leading community member in the Sencha community. =)\n. ^--- I cannot tell you how much this means to community members like myself and that this type of attitude will only nurture and help grow the use of this awesome tech.  I speak from experience of a once-leading community member in the Sencha community. =)\n. @coderdave do you mean the application itself?\n. @coderdave do you mean the application itself?\n. Thanks Dude! It took some studying of that example because the guide only spoke to native elements. \nI figured it out though =).\nAlmost done w/ my blog example.  Gotta get that auto-viewport-resize thing working.\n. Thanks Dude! It took some studying of that example because the guide only spoke to native elements. \nI figured it out though =).\nAlmost done w/ my blog example.  Gotta get that auto-viewport-resize thing working.\n. Thanks guys. I imagine people are going to want to do query the device as they are used to doing this with HTML5 apps :)\n. Thanks guys. I imagine people are going to want to do query the device as they are used to doing this with HTML5 apps :)\n. SHIFT + CMD + K to do an app clean. CMD + R to rebuild\n. not yet. My first introduction JSX is literally only a few weeks old.  I'm quite open to the fact that I may be doing things improperly.  I cannot help but think of web components as just that - components.\nI'd like to add a child to a parent. Or in this JSX paradigm an \"ownee\" to an an \"owner\".\nI cannot find an example where this is possible w/out doing a forceUpdate() when the \"owner's\" data representation of children is updated.\n. Example: http://www.screencast.com/t/bg4Hr5SoJ\n(Yes this is a crappy UI, don't laugh)\n. As in, the first \"Styles\" module that is imported is the one that lasts. The other ones are ignored.  \nExample: http://www.screencast.com/t/ZYhyfPWwQ\nI read somewhere that the CommonJS implementation is not fully-baked.  I don't agree that this is a good choice.  Having a half-baked implementation is going to cause adoption issues :(\n. Ah. I was only following the example code patterns =).\nI'll give your suggestion a shot and report any issues.\nFWIW, please don't ever feel the need to apologize.  I'm enjoying these deep dives and am doing my best to put myself in a position to help evangelize this tech.\nThank you so much for being attentive to these inquiries. I imagine they can get quite redundant.\n. That makes a lot of sense. I do agree that smaller components does help with organization.  I'm still learning how this is all put together and am drawing off of prior experiences.  \nI'll say that 15 years of web development, 10 of which are \"Ajax/web 2.0 apps\" (did I just date myself?) and at the moment, I cannot help but feel that separation of styles, component definitions is the right way.\nI'm not saying I'm right =). I'm saying that it \"feels right\" at this current time.  \nFWIW, I did a quick search and found the following files in Examples/ that contain the @providesModule flag\n./Movies/MoviesApp.js\n./TicTacToe/TicTacToeApp.js\n./UIExplorer/ActivityIndicatorExample.js\n./UIExplorer/createExamplePage.js\n./UIExplorer/ExpandingTextExample.js\n./UIExplorer/ImageCapInsetsExample.js\n./UIExplorer/ImageExample.js\n./UIExplorer/LayoutExample.js\n./UIExplorer/ListViewPagingExample.js\n./UIExplorer/NavigatorIOSExample.js\n./UIExplorer/PointerEventsExample.js\n./UIExplorer/ScrollViewExample.js\n./UIExplorer/StatusBarIOSExample.js\n./UIExplorer/TextExample.ios.js\n./UIExplorer/TextInputExample.js\n./UIExplorer/TouchableExample.js\n./UIExplorer/UIExplorerApp.js\n./UIExplorer/UIExplorerBlock.js\n./UIExplorer/UIExplorerPage.js\n./UIExplorer/UIExplorerTitle.js\n./UIExplorer/ViewExample.js\n. The one thing i'll say, @sahrens is that the idea of RCT_CUSTOM_VIEW_PROPERTY as a macro for managers to do things on views seems a little strange to me. :-\\\nMaybe i'm too accustomed to being able to execute methods directly on views. \n@joewood , here's how i've been able to get things to work (hard to know if this is a hack or not).  Keep a keen eye on the usage of RCT_CUSTOM_VIEW_PROPERTY\nVIEW header:\n```\nimport \"RCTView.h\"\nimport \"../../../../EZAudio/EZAudio/EZAudioPlotGL.h\"\n@interface RCEzPlotGlView : RCTView {\n    EZAudioPlotGL *plotter;\n}\n\n(void) update:(float[])data;\n(void) react_updateClippedSubviewsWithClipRect;\n@end\n```\n\nVIEW program:\n```\nimport \"RCEzPlotGlView.h\"\n@implementation RCEzPlotGlView\n\n\n(id)initWithFrame:(CGRect)frame {\n    NSLog(@\"%@ %@()\",  NSStringFromClass([self class]), NSStringFromSelector(_cmd));\n    self = [super initWithFrame:frame];\nself.backgroundColor = [UIColor colorWithRed:1 green:1 blue:0 alpha:1];\nreturn self;\n}\n\n\n// Called via manager\n- (void) update:(float[])data {\n    RCEzPlotGlView *myView = self;\nCGRect bounds = myView.bounds;\n\nif (! plotter) {\n    NSLog(@\"%@ created an EZAudioPlotGL\",  NSStringFromClass([self class]));\n    plotter = [[EZAudioPlotGL alloc] initWithFrame:self.bounds];\n    plotter.backgroundColor = [UIColor colorWithRed:1 green:1 blue:0 alpha:1];\n    plotter.plotType = EZPlotTypeBuffer;\n    [self addSubview:plotter];\n\n}\n[plotter updateBuffer:data withBufferSize:512];\n\n}\n@end\n```\nVIEW MANAGER header:\n```\nimport \"RCTViewManager.h\"\nimport \"RCEzPlotGlView.h\"\nimport \"RCGmePlayer.h\"\n@interface RCEzPlotGlViewManager : RCTViewManager\n@end\n```\nVIEW MANAGER program:\n```\nimport \"RCEzPlotGlViewManager.h\"\n@implementation RCEzPlotGlViewManager\n\n(UIView *)view {\n   NSLog(@\"%@ %@\",  NSStringFromClass([self class]),  NSStringFromSelector(_cmd));\n\nreturn [[RCEzPlotGlView alloc] init];\n}\nRCT_CUSTOM_VIEW_PROPERTY(doDraw, RCEzPlotGlView ) {\n    NSArray nsArrayData = [[RCGmePlayer sharedManager] getBufferData:(NSString *)json];\nint i = 0,\n    len = 512;\n\nfloat data[len];\n\nfor (; i < len; i++) {\n    NSNumber *number = nsArrayData[i];\n\n    data[i] = [number floatValue];\n}\n\n\n[view update:data];\n\n}\n@end\n```\nJavaScript view definition:\n```\n'use strict';\nvar NativeMethodsMixin     = require('NativeMethodsMixin'),\n    NativeModules          = require('NativeModules'),\n    PropTypes              = require('ReactPropTypes'),\n    React                  = require('React'),\n    ReactIOSViewAttributes = require('ReactIOSViewAttributes'),\n    StyleSheetPropType     = require('StyleSheetPropType'),\n    ViewStylePropTypes     = require('ViewStylePropTypes'),\n    merge = require('merge');\nvar StyleConstants = NativeModules.RKUIManager.StyleConstants;\nvar createReactIOSNativeComponentClass = require('createReactIOSNativeComponentClass');\nvar stylePropType = StyleSheetPropType(ViewStylePropTypes);\nvar CommonImageViewAttributes = merge(ReactIOSViewAttributes.UIView, {\n    SOMETHING : true // Ignore this. It was for testing.\n});\nvar View = React.createClass({\n    statics : {\n        pointerEvents: StyleConstants.PointerEventsValues,\n        stylePropType\n    },\nmixins: [NativeMethodsMixin],\n\nviewConfig: {\n    uiViewClassName: 'RCEzPlotGlView',\n    validAttributes: CommonImageViewAttributes\n},\n\nrender: function() {\n    return <RCEzPlotGlView {...this.props}/>;\n},\nsetDoDraw : function(channel) {        \n    this.setNativeProps({doDraw : channel});\n}\n\n});\nvar RCEzPlotGlView = createReactIOSNativeComponentClass({\n    validAttributes: CommonImageViewAttributes,\n    uiViewClassName: 'RCEzPlotGlView',\n});\nvar ViewToExport = RCEzPlotGlView;\nif (DEV) {\n  ViewToExport = View;\n}\nViewToExport.pointerEvents = View.pointerEvents;\nViewToExport.stylePropType = stylePropType;\nmodule.exports = ViewToExport;\n```\nVIEW JavaScript imp (truncated)l:\n```\n    return (\n        <View style={styles.container}>\n            <View style={styles.titleBar}>\n                <Text style={{fontSize: 20}}>{gameObj.game}</Text>\n            </View>\n\n            <ScrollView horizontal={true} style={styles.imageContainer} pagingEnabled={true} centerContent={true}>\n                {images}\n            </ScrollView>\n\n            <View style={styles.vizContainer}>\n                <RCEzAudioPlotGlView style={styles.vizItem}/>\n                <RCEzAudioPlotGlView style={styles.vizItem}/>\n            </View>\n\n            <View style={styles.controlsContainer}>\n                <Text style={styles.timeText}>\n                    Current Time : {state.currentTime}\n                </Text>\n                <Text style={styles.trackText}>\n                    {state.currentTrack + 1}  of {gameObj.trackCount + 1}\n                </Text>\n                <ControlButton onPress={this.onButtonPress} btnChar={\"prev\"} btnStyle={\"prevButton\"}/>\n                <ControlButton onPress={this.onButtonPress} btnChar={centerBtnChar} btnStyle={centerBtnStyle}/>\n                <ControlButton onPress={this.onButtonPress} btnChar={\"next\"} btnStyle={\"nextButton\"}/>\n            </View>                     \n        </View>\n    );\n\n... Listening to onButton press gives me an opportunity to cache the reference to the two instances of RCEzAudioPlotGlView classes:\n leftViz : null,\n rightViz : null,\n\nonButtonPress : function(buttonType) {\n    // var o = this._renderedComponent._renderedChildren['.3']._renderedChildren['.2'];\n    var viewContainer = this._reactInternalInstance._renderedComponent._renderedComponent._renderedChildren['.2'],\n        children      = viewContainer._renderedComponent._renderedChildren,\n        leftViz       = children['.0'],\n        rightViz      = children['.1'];\n\n    // leftViz._instance.something();\n    // rightViz._instance.something();\n\n    this.leftViz  = leftViz;\n    this.rightViz = rightViz;\n\n    var methodName = this.methodMap[buttonType];\n    this[methodName] && this[methodName]();\n},\n\n... Here's where you see the instance setDoDraw methods being called. This is where the manager's RCT_CUSTOM_VIEW_PROPERTY macro comes into play.\ngetSampleData : function() {\n    var me = this,\n        descriptors = this.sampleDataDescriptors;\n\n    this.leftViz._instance.setDoDraw('l');\n    this.rightViz._instance.setDoDraw('r');\n},\n\n```\n. Strangely enough, UI Explorer at least runs -- it doesn't seem to be using pods =)\n. fucking thank you!  =)\nI was going to get on a soapbox and explain how this was going to be problematic. \n/me gets off soapbox\n. Apologies. I've been looking at things and it might be my dyslexia with the \"RC\" prefix. :-\\\n. Ah sorry - No exceptions.  I'm trying this in the OOTB examples (Tic tac toe, UI Explorer, etc).\nClicking the \"Hit CMD +R to reload\" text works fine whenever i mess something up. Key strokes do not.\n. Damnit. apologies : For some reason my iOS Sim had \"Connect hardware Keyboard\" unchecked. (Shift + CMD + K). \nApologies for the waste of time :(\n. I will say that hitting CMD + D to allow a \"detach\" (or attach of the  per the docs) of RCTLog is extremely  helpful. \nMay I suggest that you guys add a log message to the console to instruct the developer to attach the debugger?\n[[RCTKeyCommands sharedInstance] registerKeyCommandWithInput:@\"d\"\n                                                 modifierFlags:UIKeyModifierCommand\n                                                        action:^(UIKeyCommand *command) {\n                                                          _globalExecutorClass = [RCTWebViewExecutor class];\n                                                          NSLog(@\"Attach Safari Debugger at this time.\");\n                                                          [self reloadAll];\n                                                        }];\n. Having this as a default configuration option for development would be great.  Lots of web developers are not familiar with Xcode and when they do a console.log(), they may not know to look @ Xcode. \n. ^--- \n```\n \u2584         \u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584            \u2584         \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c          \u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c          \u2590\u2591\u258c          \u2590\u2591\u258c        \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\n \u2580         \u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \n\u2584         \u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584  \u2584      \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c     \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2590\u2591\u258c\u2590\u2591\u258c     \n\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c          \u2590\u2591\u258c          \u2590\u2591\u258c\u2590\u2591\u258c     \n\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u258c\u2590\u2591\u258c     \n\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c     \n \u2580\u2580\u2580\u2580\u2588\u2591\u2588\u2580\u2580\u2580\u2580 \u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c     \n     \u2590\u2591\u258c     \u2590\u2591\u258c                    \u2590\u2591\u258c \u2580  \u2580      \n     \u2590\u2591\u258c     \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c \u2584  \u2584      \n     \u2590\u2591\u258c     \u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c     \n      \u2580       \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580  \u2580        \n```\n. Background:\nI'm building a React Native Videogame music player as a demo application.\nI'd like to be able to do things like disable/enable the rendering of Audio waveforms via tap of the waveform view instance. Rather than destroy the waveform view when tapped, i'd rather set a boolean that stops the waveform from rendering.\nMy thoughts is to bind a onPress event inside of the ReactJS implementation of the custom UI view, but UIView doesn't respond to taps natively. So, the only way to listen to taps using the React iOS API is to wrap my custom view w/ a Touchable component.\nI can setup onPress via Touchable, but I need to somehow get a reference to the child that Touchable is wrapping to disable the rendering of the waveform.\nNow, I could listen for tap events on the custom waveform UI view, but that feels like cheating :(\n. RCTNetworkImageView no longer has a manager, from what I can tell.\nWhat i'm trying to achieve:\nFrom the context of whatever class is the result of React.createClass(), where the render function returns below:\n```\n        return (\n            \n\n{gameObj.game}\n\n            <ScrollView horizontal={true} style={styles.imageContainer} pagingEnabled={true} centerContent={true}>\n                {images}\n            </ScrollView>\n\n            <View style={styles.vizContainer}>\n                <RCEzAudioPlotGlView style={styles.vizItem}/>\n                <RCEzAudioPlotGlView style={styles.vizItem}/>\n            </View>\n\n            <View style={styles.controlsContainer}>\n                <Text style={styles.timeText}>\n                    Current Time : {state.currentTime}\n                </Text>\n                <Text style={styles.trackText}>\n                    {state.currentTrack + 1}  of {gameObj.trackCount + 1}\n                </Text>\n                <ControlButton onPress={this.onButtonPress} btnChar={\"prev\"} btnStyle={\"prevButton\"}/>\n                <ControlButton onPress={this.onButtonPress} btnChar={centerBtnChar} btnStyle={centerBtnStyle}/>\n                <ControlButton onPress={this.onButtonPress} btnChar={\"next\"} btnStyle={\"nextButton\"}/>\n            </View>                     \n        </View>\n    );\n\n```\nI'd like to gain access to the RCEzAudioPlotGlView instances and send an array of floating points to them to render sound waves.\nNow, I've /kinda/ gotten a foothold of them via the following really ugly code.\n---side note, i've tried to use getNativeNode() or getNodeHandle() and those seem to return integers,  which confuses me :P\n```\n    onButtonPress : function(buttonType) {\n        // var o = this._renderedComponent._renderedChildren['.3']._renderedChildren['.2'];\n        var viewContainer = this._reactInternalInstance._renderedComponent._renderedComponent._renderedChildren['.2'],\n            children      = viewContainer._renderedComponent._renderedChildren,\n            leftViz       = children['.0'],\n            rightViz      = children['.1'];\n    leftViz._instance.something()\n    debugger;\n    var methodName = this.methodMap[buttonType];\n    this[methodName] && this[methodName]();\n},\n\n```\nthe leftViz & rightViz JS references basically put me within the context of the module in which i've defined RCEzPlotGlView (below).\n```\nvar View = React.createClass({\n    statics : {\n        pointerEvents: StyleConstants.PointerEventsValues,\n        stylePropType\n    },\nmixins: [NativeMethodsMixin],\n\n/**\n* `NativeMethodsMixin` will look for this when invoking `setNativeProps`. We\n* make `this` look like an actual native component class.\n*/\nviewConfig: {\n    uiViewClassName: 'RCEzPlotGlView',\n    validAttributes: ReactIOSViewAttributes.RKView\n},\n\nrender: function() {\n    return <RCEzPlotGlView {...this.props} />;\n},\nsomething : function() {\n    console.log('stopped')\n    debugger;\n}\n\n});\nvar RCEzPlotGlView = createReactIOSNativeComponentClass({\n    validAttributes: ReactIOSViewAttributes.RKView,\n    uiViewClassName: 'RCEzPlotGlView',\n});\n```\nWhat i'm missing is how to get from the ReactJS class to Objective C land for that particular instance.  Inspecting this.refs results in an empty object.\n\n. I believe that I've gotten a step closer by inspecting the RCStaticImageManager.m source:\nI suppose I was looking for directly calling functions like with what the RC_EXPORT() macro does for managers.\nThe RCT_CUSTOM_VIEW_PROPERTY macro seems to be the right way to go a la the example below:\nRCT_CUSTOM_VIEW_PROPERTY(imageTag, RCTStaticImage *)\n{\n  if (json) {\n    [RCTImageLoader loadImageWithTag:[RCTConvert NSString:json] callback:^(NSError *error, UIImage *image) {\n      if (error) {\n        RCTLogWarn(@\"%@\", error.localizedDescription);\n      } else {\n        view.image = image;\n      }\n    }];\n  } else {\n    view.image = defaultView.image;\n  }\n}\n. Thanks @sahrens. I've gotten tot he point where a view Mgr can execute methods on view instances.\nNow it's time to see how well this thing deals with 512 floating point audio samples =) per channel at 30fps.\n. ... slowly ... but ... surely ...\n(This is just random data)\n\n. Getting a lot closer.   Timing needs to be adjusted.  Seems that making the round trip from objc -> JS -> objc of 1024 floats was way too slow.  Now the visualizers actually query the singleton themselves for the buffer data so it's objc -> objc and lighting fast.\nhttp://youtu.be/lTqo0iAQ4Gc\n. I'm going to close this thread. The only thing I'm going to add before I close it is that this really needs to be documented =). I've gotten things to work but it's hard for me to know if what i've implemented are hacks or the right patterns. :P\n. @nick -- If the 'React way' isn't what's in the examples (or below), I don't know what is.\n@amccloud, the below gist is a /slightly/ modified version of the UIExplorer's \"ListViewSimpleExample.js\" file, removing the need for \"UIExplorerPage\"\nhttps://gist.githubusercontent.com/jaygarcia/e3e6dd0a2e71cf7ffd7b/raw/0f9ccee35448c1e6b0fc7374decc4b4bfddc019e/gistfile1.js\nThe following is the root view, implements \"ListView.js\" (above).\n```\n'use strict';\nvar React = require('react-native'),\n    styles = require('./Styles'),\n    MyListView = require('./ListView.js');\nvar {\n    AppRegistry,\n    View,\n    Text,\n    TouchableHighlight\n} = React;\nvar DemoApp = React.createClass({\n    render : function() {\n        var me = this;\n        return (\n            \n\n\n        );\n    }\n});\nAppRegistry.registerComponent('DemoApp', () => DemoApp);\nmodule.exports = DemoApp;\n```\n. Fantastic. Just noticed the following in the ListView.js file.\ngetDefaultProps: function() {\n    return {\n      initialListSize: DEFAULT_INITIAL_ROWS,\n      pageSize: DEFAULT_PAGE_SIZE,\n      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,\n      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,\n    };\n  },\n. Resolved via the following \n<ListView dataSource={this.state.dataSource} initialListSize={100} renderRow={this._renderRow}/>\nThough, DEFAULT_INITIAL_ROWS should probably be > 15 or so in Components/ListView/ListView.js\n. I no longer see this issue.  Thanks :)\n. I no longer see this issue.  Thanks :)\n. One thing that hit me was that this affects the ListView example. The delay is quite noticeable there too.  \nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 10, 2015, at 18:35, James Ide notifications@github.com wrote:\nUpdated w/splat syntax and tested.\n\u2014\nReply to this email directly or view it on GitHub.\n. Bloody hell man!!! There is a treasure trove of UI goodness in that app that would be a HUGE asset to ReactNative.\n\n\n. Thanks Chris.  I don't know how I missed the absolute positioning in the layout example. :( I hate bugging you guys w/ these trivial things.  I'll try to do a better job @ searching the code base before posting here.\n. Maybe this is an opportunity to make this feature more developer-friendly? I had no idea that something called \"pagination\" would be used as a carousel.   I'm used to pagination meaning \"pages of data queried and viewed\". :-\\\nI imagine there could be an extension to ScrollView called a Carousel that sets pagingEnabled to true by default and renders indicators.\nExamples (Sencha Touch) -- Common UI pattern.\n\n\n. One quick thought is I could remove nesting. Just realized that Text has onPress____ methods. Going to try that.\n. No, i do not.  \nThe strange thing is that switching components makes it lighting fast.  TouchableOpacity and TouchableWithoutFeedback are extremely fast responding, while TouchableHighlight is sluggish.\n. The culprit is the default HIGHLIGHT_DELAY_MS property, which is 130ms.  When I change the value (see below), it works as expected.\n```\n//Libraries/vendor/react_contrib/interactions/Touchable/Touchable.js:\n...\nvar HIGHLIGHT_DELAY_MS = 130;\n...\ntouchableHandleResponderGrant: function(e, dispatchID) {\n    // Since e is used in a callback invoked on another event loop\n    // (as in setTimeout etc), we need to call e.persist() on the\n    // event to make sure it doesn't get reused in the event object pool.\n    e.persist();\nthis.state.touchable.touchState = States.NOT_RESPONDER;\nthis.state.touchable.responderID = dispatchID;\nthis._receiveSignal(Signals.RESPONDER_GRANT, e);\nvar delayMS =\n  this.touchableGetHighlightDelayMS !== undefined ?\n  this.touchableGetHighlightDelayMS() : HIGHLIGHT_DELAY_MS;\nif (delayMS !== 0) {\n  this.touchableDelayTimeout = setTimeout(\n    this._handleDelay.bind(this, e),\n    delayMS\n  );\n} else {\n  this._handleDelay(e);\n}\n\nthis.longPressDelayTimeout = setTimeout(\n  this._handleLongDelay.bind(this, e),\n  LONG_PRESS_THRESHOLD - delayMS\n);\n\n},\n```\n\n. The obvious question is how does one override touchableGetHighlightDelayMS for a particular configuration of TouchableHighlight?  Perhaps it should be a property configuration? (Just thinking out loud) \n. It's worth noting that the only way I could figure out how to leverage the styling of a  and the speed of a Touchable is by nesting like so:\nreturn (\n                <View style={[styles.button, styles[props.btnStyle], btnPressedStyle]}>\n                    <TouchableWithoutFeedback \n                        onPress={this.onButtonPress}\n                        onPressIn={this.onButtonPressIn}\n                        onPressOut={this.onButtonPressOut}>\n                            <Text style={styles.buttonFont}>\n                                {this.buttonChars[btnChar]}\n                            </Text>\n                    </TouchableWithoutFeedback>\n                </View>\n            )\n. @sahrens ,\nIf i set the delay to zero in the following file, it works as desired, giving immediate feedback, which is what is expected.\n//Libraries/vendor/react_contrib/interactions/Touchable/Touchable.js:\nThe nesting above isn't required if we remove the delay.\nWhat about the other issues I surfaced, however?  The fact that the other Touchable____ views not conforming to , thus preventing layout controls, etc (see above animated gif)?\nAlso, please pardon the newb question, but PR as in \"Pull Request\"? Isn't that reserved for code changes?  I recall there being a Contrib's Lic. agreement that goes along with that, correct?\n(This is more of a generic react question :-)\nLastly, where would someone put said override? When I require TouchableHighlight, it's a factory, from what I can tell. When I implement  and place properties, those go int he props collection.\ntouchableGetHighlightDelayMS: function() {\n    return 0;\n  },\n. Allowing an override is going to be the best route, IMHO. \n. @jordwalke , I'd like to invite you to install the eBay app for iOS. Their \"ListView\" has a delay on highlight, but immediate feedback on tap.\nI believe that this level of feedback & interaction needs to be provided by react.\n. @jordwalke, it was not like that in a previous build. Today, it's working like a champ :) \n. Seems like there was a change to Libraries/Components/ScrollView/ScrollView.js that is somehow causing this.\nInvestigating...\n. Found yet another scrollview problem:\n``\n[RCTLog][tid:0x7fe82c914bb0][RCTScrollViewManager.m:28]>RCTScrollView does not have setter forpagingEnabled` property\n```\nHowever, if i comment out these configs in ScrollView.js, the view renders, but obviously loses some features:\n```\nvar validAttributes = {\n  ...ReactIOSViewAttributes.UIView,\n  // alwaysBounceHorizontal: true,\n  // alwaysBounceVertical: true,\n  automaticallyAdjustContentInsets: true,\n  centerContent: true,\n  contentInset: insetsDiffer,\n  contentOffset: pointsDiffer,\n  decelerationRate: true,\n  horizontal: true,\n  keyboardDismissMode: true,\n  keyboardShouldPersistTaps: true,\n  maximumZoomScale: true,\n  minimumZoomScale: true,\n  // pagingEnabled: true,\n  removeClippedSubviews: true,\n  scrollEnabled: true,\n  scrollIndicatorInsets: insetsDiffer,\n  scrollsToTop: true,\n  showsHorizontalScrollIndicator: true,\n  showsVerticalScrollIndicator: true,\n  stickyHeaderIndices: deepDiffer,\n  throttleScrollCallbackMS: true,\n  zoomScale: true,\n};\n```\n. Thanks @frantic. If my level of reporting issues is too frequent -- I.E. I need to be more patient, let me know.\n. @nicklockwood The latest updates have resolved the issue.  Many thanks.\n. Something to consider: swipe to reveal/delete/etc are features that people will want eventually. \nI guess the key is to have a \"good\" release but not try to solve for every UI pattern out of the gate. \nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 11, 2015, at 20:07, Christopher Chedeau notifications@github.com wrote:\nWe thought about it (the first version was called TableView) but there's a couple of downsides:\nIt doesn't have the same api, and works best with immutable data structures, so it would confuse iOS engineers.\nTableView is an horrible name since it's not a table but a list. Web developers would be confused. The equivalent on android is also called ListView\nThe implementation doesn't actually uses TableView but a scrollview behind the scenes.\nIt only implements out of view cell management, but doesn't have TableView features such as swipe to delete, reordering... We may want to have a component that wraps TableView more closely and have those features and call it TableViewIOS.\nWe're not 100% api with the component api and it'll likely receive more love in the future. Not set in stone yet\n\u2014\nReply to this email directly or view it on GitHub.\n. In my own project.\n\n\n. > FYI transferring data back and forth between JS and Obj-C is relatively slow \n\nI've found that React Native's bridge impl seems to be slower that cordova's :(\n\nI don't have specific bench marks, but if the queue is rapidly utilized, the UI becomes non-responsive whereas with a cordova app, the UI works fine.  \nI understand the mechanics of why a RN app would be come unresponsive, but I just had to add my experience.  \nJG\n:: sent from my mobile device ::\n\nOn Mar 25, 2015, at 20:47, James Ide notifications@github.com wrote:\nFYI transferring data back and forth between JS and Obj-C is relatively slow so you'll probably want to keep all of the image data in Obj-C. I don't have numbers but I expect you will see it takes a measurable amount of time to transfer several MB of data. It's a small compared to the amount of time it takes to upload the photo but it's a good idea to keep the JS <=> Obj-C message queue clear.\nYou could write a tiny bridge module that receives the asset URL and then performs the upload, reporting progress/error/success information back to JS.\n\u2014\nReply to this email directly or view it on GitHub.\n. What would be the advantage to doing this? I imagine it's possible to wrap the PhoneGap view, but I don't see why. \n\nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 15:09, Benjamin Gruenbaum notifications@github.com wrote:\nIt'd be really interesting to build a phonegap (and maybe an ionic) bridge to React-Native\n\u2014\nReply to this email directly or view it on GitHub.\n. I agree that react could use plugins. I am speaking to why you would want to migrate or bridge cordova with react native. \n\nThe whole purpose of using this framework is so that you can get away from the limitations of HTML5. \nLike I said, wrapping cordova might actually be trivial to do. I just can't see the \"why\" :)\nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 20:22, wootwoot1234 notifications@github.com wrote:\n@jaygarcia plugins or ionic? I think plugins could be really useful since currently react native is limited in how it can interact with the hardware. Ionic by itself is a very nice mobile html5 framework but I'm not sure how it would fit in with react native. They have have done a great job with ngCordova and it might be a good starting point for which plugins to port to react native.\nReact native could use some plugins, right? I'm not missing something am I?\n\u2014\nReply to this email directly or view it on GitHub.\n. I am  very well versed in the cordova universe and how plugins are made. I wrote a mod player app using cordova and Sencha touch in 2013 :). \n\nI can see porting of plugins. Just not bridging cordova as a library and react native. That's what I am getting at.  \nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 27, 2015, at 00:09, wootwoot1234 notifications@github.com wrote:\n@jaygarcia Cordova plugin don't use html, at least none that I can think of. They are purely javascript to native which is what react native plugins would be. I'm all about react native and not using a webviews but cordova plugins don't have anything to do with the webview. So to answer \"why\", because cordova has done 90% of the ground work, just need to change the bridge from cordova to react native. Maybe I don't understand what you mean or maybe you don't know what a cordova plugin is but, I can't think of why not.\n\u2014\nReply to this email directly or view it on GitHub.\n. I believe so. The one thing to think about is that with React Native, plugins / extensions are bound the React Native runloop. I was bit by this when writing a custom audio player.\n. @joewood, yes, that's what i'm saying. \n\nThe code is not yet open sourced. I have yet to fully understand how the Facebook team wants open-source modules to be released - that is the pattern to do this.  There is the ObjC code, and related JavaScript that needs to somehow be bundled.\nFor a preview of some code:\nhttps://github.com/facebook/react-native/issues/114#issuecomment-81659798\nDoes anyone know of patterns documented for sharing modules?\n. I'd like to add a note that the API for exposing ObjC to JS is volatile.\nI just got bit by a change to the RCT_CUSTOM_VIEW_PROPERTY macro :(\n. @vjeux , are there any plans on updating the Common JS implementation for this project to act more like the standard? It seems a fairly common thing (including myself) to want something like the above. \n. React native currently extends Cocoa Touch.  It would be cool to see a Cocoa desktop bound layer :). \nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 16:13, Timur Carpeev notifications@github.com wrote:\nIs it possible to use react native to target OS X apps? And if not are there plans to make it compatible?\n\u2014\nReply to this email directly or view it on GitHub.\n. I disagree that putting in a pre-built static library is a good thing.  I enjoy the ability to dive into the source code for RCT and I see it as a valuable asset.  \n\nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 19:42, Amjad Masad notifications@github.com wrote:\nI don't think that's the greatest solution. Having many npm packages will make versioning really hard. Unfortunately I don't have better ideas for now. But I'm sure we can come up with something better.\n\u2014\nReply to this email directly or view it on GitHub.\n. Can one of the repo owners re-open the issue if it's still an issue? ;)\n\nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn Apr 8, 2015, at 11:01, Christopher Chedeau notifications@github.com wrote:\nIf anyone in this thread has any idea how to solve this problem (not workaround by resetting) that would be awesome\n\u2014\nReply to this email directly or view it on GitHub.\n. @sahrens , what @TooBug is referring to is the props docs: http://facebook.github.io/react-native/docs/textinput.html#props\n\n```\nplaceholder string \nThe string that will be rendered before text input has been entered\nplaceholderTextColor string \nThe text color of the placeholder string\n```\n. This was a learning curve for me too.  React Native implements a light CSS -like system. Once you break your bond with CSS, it becomes easier to use RN's style sheets.  \nJG\n:: sent from my mobile device ::\n\nOn Mar 26, 2015, at 23:06, Marc Lundgren notifications@github.com wrote:\nvar styleSheet = StyleSheet.create({\n  container: {\n    display: 'inline-block'\n  }\n};\nI've used display as a propery in React projects before. Does React.native have an exception for display?\nI also couldn't use borderRadius, boxShadow, textShadow, transition.\n\u2014\nReply to this email directly or view it on GitHub.\n. +1 on @vjeux's suggestion. \n. +1.  This is something that should be seriously considered.\n. This was brought up a few times during the private beta.  @vjeux , have you guys given any more thought into this?\n. I agree that there could be some better documentation around this.   For example, the \"light\" implementation of the CommonJS module system, should be documented, if it's not already. \n\n(stuff is moving so quickly, it's hard for me to keep track of it all)\n. Works fine for me.  is that a JetBrains IDE?\n\n. I most likely used the Node installer DMG, not home-brew. \nEither way, this is a gotcha for folks who, like me did not use home-brew to install npm. \nMost of my /usr/local contents are owned by root, except where home-brew has stomped on. \nPerhaps this is an aside that can be added in the docs.  Simply running npm install -g on systems like mine will not work.\n. Fantastic @zetachang , perhaps this should be added to the docs as well. \n. General Availability.  :)\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 27, 2015, at 12:04, Christopher Chedeau notifications@github.com wrote:\nWhat is GA?\n\u2014\nReply to this email directly or view it on GitHub.\n. That's my point. 5 seconds on a cold start for packager is painfully slow.  It wasn't this way before :(\n\nJG\n:: sent from my mobile device ::\n\nOn Mar 27, 2015, at 13:19, Amjad Masad notifications@github.com wrote:\nActually just tried this on a couple of machines and it seems to be running ok, it's not taking more than 5 seconds. Can you try restarting your computer?\n\u2014\nReply to this email directly or view it on GitHub.\n. Not often :).  I just happened to notice it after a kernel panic (debugging core audio implementation). \n\nThis also surfaced another strange thing: while the first cold-boot request is made to the packager, hit cmd+r.  That induces a second request, causing your app to render twice.  \nThis is most noticeable in \"SampleApp\"\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 27, 2015, at 21:57, Spencer Ahrens notifications@github.com wrote:\nAgreed we can and should make it faster, but I'm curious: how often and for\nwhat reasons do you do cold starts of the packager?\nOn Fri, Mar 27, 2015 at 10:54 AM, Amjad Masad notifications@github.com\nwrote:\n\nYes, we should fix it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/341#issuecomment-87033588\n.\n\u2014\nReply to this email directly or view it on GitHub.\n. Did  pull this AM and if timed right, I can make > 2 show.  I also discovered if i am an ass and hammer CMD + R, I can make it cause an exception.  This second case is a much lower priority ;)\n\n\n\n. @jsierles DUDE! such a huge difference!!\nReact packager ready.\n[10:46:03 AM]  request:/jsx/index.ios.bundle\n[10:46:03 AM]  find dependencies\n[10:46:03 AM]    find dependencies (26ms)\n[10:46:03 AM]  transform\n[10:46:04 AM]    transform (50ms)\n[10:46:04 AM]    request:/jsx/index.ios.bundle (95ms)\nThanks :)\n. Please take the time to post reproducible steps and a stack trace if possible when reporting bugs.  \nJG\n:: sent from my mobile device ::\n\nOn Mar 28, 2015, at 09:40, luosong notifications@github.com wrote:\nHe \u2014\nReply to this email directly or view it on GitHub.\n. This is precisely the type of pattern I have been looking for :)\n\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 28, 2015, at 12:54, Joe Stanton notifications@github.com wrote:\nThis PR adds a react-native new-library  command to the CLI. It's a little rough at the moment, but works pretty well. It does the following:\nCreates a new directory under Libraries/LibraryName\nCopies the sample library from react-native core at Libraries/Sample into this dir. This includes an .xcodeproj file, an RCTLibraryName.h/m with bridging set up, an iOS implementation and an Android stub.\nReplaces sample with the appropriate module name.\nGenerates a package.json for the module, with a react-native keyword. Easing publishing to NPM.\nPrompts the user to link their new library in Xcode.\nIt's implemented using the same infrastructure as the new project scaffold, namely a ruby script that's invoked from cli.js. I'm not sure this is the right longer term approach, as we could drop the ruby dependency if this tool was rewritten in pure Node. That should be addressed in a separate PR though.\nHopefully this will make it quicker and easier to create small native libraries that can be published to NPM and used as discussed in #230. Any thoughts?\nQuestions\nShould third party plugins continue to use the RCT prefix, or is this reserved for core?\nDo all plugins need a .ios.js and .android.js implementation?\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/facebook/react-native/pull/405\nCommit Summary\nAdded initial new-library script\nWrapped command inside react-native\nFile Changes\nA Libraries/Sample/RCTSample.h (14)\nA Libraries/Sample/RCTSample.m (19)\nA Libraries/Sample/RCTSample.xcodeproj/project.pbxproj (256)\nA Libraries/Sample/Sample.android.js (24)\nA Libraries/Sample/Sample.ios.js (27)\nM cli.js (35)\nA new-library.sh (45)\nPatch Links:\nhttps://github.com/facebook/react-native/pull/405.patch\nhttps://github.com/facebook/react-native/pull/405.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. I can duplicate this as of this AM.  I've had no time to look @ it :(\n\n\n. I can duplicate this as of this AM.  I've had no time to look @ it :(\n\n. @drkibitz ,\nI've been able to implement a custom audio player and views.  The audio player implements a custom C library known as libGME.\nPlease see the below project for a very experimental implementation.   \nhttps://github.com/ModusCreateOrg/EZGmePlayer\nFeel free t ping with any questions.  The code is not documented very well, as i'm moving very fast and only doing this part-time. :(\n. @drkibitz ,\nI've been able to implement a custom audio player and views.  The audio player implements a custom C library known as libGME.\nPlease see the below project for a very experimental implementation.   \nhttps://github.com/ModusCreateOrg/EZGmePlayer\nFeel free t ping with any questions.  The code is not documented very well, as i'm moving very fast and only doing this part-time. :(\n. I've never seen this, even when i've done hideous things like tax the OBJC JS bridge in a 10ms endless loop, querying for 512 floats ;).\nCan you post code to replicate this?\nFWIW, I am on a 2012 15\" MBP Retina also.\n. I've still not had this issue :(.\n. @danawoodman Please close if this is no-longer a current issue. =)\n. It's worth noting that LP64 is set and means \"Leopard 64bit (and greater)\". \nThis apple code works across all recent Apple  systems without a hitch.  \nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Mar 29, 2015, at 12:43, Axel Hern\u00e1ndez Ferrera notifications@github.com wrote:\nI'm having problems with animation in 64 bits devices (iPhone 5s +)\nI think the problems is in the RCTAnimationManager.m:155\n[fromValue getValue:fromFields];\nThis code is trying to store a float into a CGFloat\nAnd CGFloat is defined as double for 64 bits architecture\nCGBase.h:228\nif defined(LP64) && LP64\ndefine CGFLOAT_TYPE double\ndefine CGFLOAT_IS_DOUBLE 1\ndefine CGFLOAT_MIN DBL_MIN\ndefine CGFLOAT_MAX DBL_MAX\nelse\ndefine CGFLOAT_TYPE float\ndefine CGFLOAT_IS_DOUBLE 0\ndefine CGFLOAT_MIN FLT_MIN\ndefine CGFLOAT_MAX FLT_MAX\nendif\n/* Definition of the CGFloat' type andCGFLOAT_DEFINED'. */\ntypedef CGFLOAT_TYPE CGFloat;\n\u2014\nReply to this email directly or view it on GitHub.\n. I've put a hack together locally:\n\n```\n...\n    onTextInputChange : function(event) {\n        this.textInputValue = event.nativeEvent.text;\n    },\n...\n                    \n...\n```\nWorks but i'm really not proud of it.\n. Thanks @frantic .  It seems that I was onto the correct path with onChange. :-\\ \nI'm used to the pattern of \"asking\" for the value, rather than it being constantly presented, so this feels a bit strange.\nMany thanks for the prompt response.\n. @blueken  If you fix your own problems, please close the issue.\nThanks :)\n. Fantastic. Thanks ;)\n. FTR,\nCode changed as such, works like an effing champ. \n```\nimport  \"RCTBridge.h\"\n@interface MCFileWriterUtil : NSObject \n```\n. OK. Turns out that the whole issue was the fact that I forgot to name main.m to main.mm.\n\n. For anyone wondering, \n.mm extension stands for Objective-C++\n. Awesome.  How are things registered? Manuall?\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Apr 4, 2015, at 12:21, wootwoot1234 notifications@github.com wrote:\nHey Guys,\nJust wanted to share a site I put together last night http://reactnativemodules.com. I was super impressed at how many react native modules have been built in such a short time and I thought it would be nice to have a community driven searchable directory. I could use your help with adding any I'm missing.\nAm I missing any?\n\u2014\nReply to this email directly or view it on GitHub.\n. Awesome.  How are things registered? Manuall?\n\nJG\n301.785.6030 :: @moduscreate\n:: sent from my mobile device ::\n\nOn Apr 4, 2015, at 12:21, wootwoot1234 notifications@github.com wrote:\nHey Guys,\nJust wanted to share a site I put together last night http://reactnativemodules.com. I was super impressed at how many react native modules have been built in such a short time and I thought it would be nice to have a community driven searchable directory. I could use your help with adding any I'm missing.\nAm I missing any?\n\u2014\nReply to this email directly or view it on GitHub.\n. From what I remember, you don't call methods on views.  You set properties via the view manager. \n\nI ran into this problem a month ago :(\nWhere I have trouble is finding particular instances of views via a view manager.  Is that a bad approach?\nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn Apr 7, 2015, at 18:15, kocyigityunus notifications@github.com wrote:\nyes. that what i am referring to. but how can i get reactTag from js side or how can i go to reactTag from nav object ?\nis there a way to calling a method on a particular view in \"more than one view to connect one manager\" ?\n\u2014\nReply to this email directly or view it on GitHub.\n. This happened to a colleague last week. :P \n. It would be beneficial to everyone here if you could post code to replicate issues like these :)\n\nJG\n:: @moduscreate\n:: sent from my mobile device ::\n\nOn Apr 7, 2015, at 18:54, andrewngu notifications@github.com wrote:\nOn inital rendering my element is appropriately resized by it's given stylesheet rule (Image.resizeMode.cover). When a change to my component's state occurs, causing a rerender the image then appears stretched (image.resizeMode.stretch). If I do a reload, the image renders fine.\n\u2014\nReply to this email directly or view it on GitHub.\n. For anyone at FB looking at this, what could I have done differently not to break the TravisCI build?\nThe log states:\n\n\"No output has been received in the last ... minutes, this potentially indicates a stalled build or something wrong with the build itself.\n\"```\n. @frantic , the use case is simple.\n1 Run my app\n2 Enable debug (key strokes, clicks, etc)\n3 Critical condition hit, App shits the bed\nThis PR simply pulls step 2 out of the loop, which is really 2 steps.\nThink about what life would be like if you were a web developer that had to reopen dev tools upon every page refresh.  This PR is synonymous to keeping the web debug tools open & on the ready on every page refresh.\n@ide,\nThis PR, in contrast to what you've posted, is end-developer friendly. It's configured so that developers can change a simple boolean without having to know what a WebSocketExecutor is =).   They can also do it from a higher-level of exposure (AppDelegate.m) instead of diving into the core React framework.\n. @frantic, that is probably the best idea/pattern, but we'd still need the #if DEBUG/#endif around it.  That way when it is shipped to the app store, and the developer forgets to turn it off, it will never be enabled.\nWant me to push that into the Info.plist? That's a trivial action. =)\n. @frantic gentle nudge. =)\n. I imagine that this code is very outdated, given lots of changes since this PR nearly two weeks ago.  I remain interested in making this happen, even if it requires refactoring on my part.  =)\n. I have no idea why you would want to do this.\n. I've had similar issues. I think it might have to be w/ the fact that the CommonJS implementation is not a full implementation for this framework.\n. That's because ScrollView is a beast!\n. OK, seriously, does it crash in the UI explorer example or is this just your implementation that's crashing?\n. I've never run into this. Does this occur with the out of the box examples from this repository?\n. ^-- Those are fantastic  questions. \nI've been reading the PRs , especially ones coming from the FB team that say \"Updates ....\"\nAnother point, i'd like to add to Colin's:\n- Can the repo owners make it a priority to update docs before pushing out such changes?\n. Can you please help us understand what you did to get this error? \n. @LeezQ \n\n. I imagine using a webview is the only way to do this.  You'd need to setup event and gesture handlers. \nJG\n:: sent from my mobile device ::\n\nOn Apr 12, 2015, at 11:23, Djkds notifications@github.com wrote:\nI wonder whether it is possible to embed a written-in-javascript component into the view created by Objective-C,if it is possible, how to do it?Thank you.\n\u2014\nReply to this email directly or view it on GitHub.\n. So you want to use JSX to write a custom component that is only configured by JSx and include it in your RN app?\n\nI really want to help you, but Your initial question confused me. \nJG\n:: sent from my mobile device ::\n\nOn Apr 12, 2015, at 12:29, Djkds notifications@github.com wrote:\nNo, actually I don't want to use a webview.\nReact Native allows js to call native ui components, what I want to do is opposite, which depends the ability of native code embeding a component declared and written in jsx side.\n\u2014\nReply to this email directly or view it on GitHub.\n. Is this something that you could make this issue a standalone project in GitHub so we can try to reproduce and help?\n. I don't think Apple would approve an app that fetches its logic from a web server. \n\nAlso, the reason the web server launches is because it's hard coded in the build process through scripting. \nJG\n:: sent from my mobile device ::\n\nOn Apr 20, 2015, at 15:20, Juan Manuel notifications@github.com wrote:\nHello,\nI've noticed that during development we use a development server.\n(JS_DIR=pwd/ReactComponent; cd Pods/React; npm run start -- --root $JS_DIR)\nHow can I set a production server?\nThanks!\nJM\nPS: In the Movies project I saw that you are starting a server when the app starts. How can I do that?\n\u2014\nReply to this email directly or view it on GitHub.\n. @nicklockwood thanks for the heads up.  I must be going by old rules. It's been a while since i've pushed a Hybrid app to the app store personally =)\n. I guess the one thing to remember (per @nicklockwood's comment), is that you can't deploy new ObjC dependencies (static libs, classes, etc) w/out rebuilding & resubmitting to the app store.\n\nQuestion for @nicklockwood: does FB's current implementation for this type of background-update fail silently? \n. ^-- Holy hell that looks awesome. \n. I started down that route but could not figure out how to inform the Ui of a state change. :-/\nReading through the source, I found that the only way to go from bridge > view is to route events via react tag.  \nI'm a newb. \nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn Apr 26, 2015, at 09:35, Nick Lockwood notifications@github.com wrote:\nAlthough, if your command center is a singelton, and doesn't have any UI of its own, should it perhaps just be a regular bridge module, rather than a view manager?\n\u2014\nReply to this email directly or view it on GitHub.\n. I have not looked at that source.  I will after I get home.  :)\n\nMany thanks. You guys flipping own for working on the weekends. \nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn Apr 26, 2015, at 09:42, Nick Lockwood notifications@github.com wrote:\nIt sounds like your problem is more similar to something like RCTReachability, or RCTLocationObserver, where the native module just has methods and sends events, but has no view of its own.\n\u2014\nReply to this email directly or view it on GitHub.\n. @nicklockwood !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nYou effing nailed it dude!  Thank you so much.\n\n. For those interested, here's the product of this effort: \nhttps://www.youtube.com/watch?v=VaZnJ-_R3rU\n. @sahrens eventDispatcher. It's working like a friggin champ. \n```\n [commandCenter.previousTrackCommand addTargetWithHandler:^MPRemoteCommandHandlerStatus(MPRemoteCommandEvent *event) {\n        //TODO: Handle previous track (have no idea what to do here atm);\n        NSLog(@\"previousTrackCommand\");\n   [_bridge.eventDispatcher sendDeviceEventWithName:@\"commandCenterEvent\" body:@{\n        @\"eventType\" : @\"previousTrack\"\n    }];\n    return MPRemoteCommandHandlerStatusSuccess;\n}];\n\n```\n. Are you trying to emit the event before your JavaScript code has a chance to actually bootstrap? \n. @watsonwu9,\nIf you look @ AppDelegate.m, you'll see where React Native's root view is initialized.\nThe question is: Are you firing the event before the root view is initialized?\n. I\"m very much looking forward to this dude.  I have asset requirements also, such as JSON files and potentially images that i'd like to pack in my app.\n. Awwwwwwww yeah!!!\nRuns sofaking well on iPhone6.\n\n. Call me crazy, but I think you want:\nvar EventEmitter = require('EventEmitter');\n. @terrence0488 , please close this issue =)\n. @vjeux  Yes i do.  I was half asleep when i posted this.\n/me slaps self with a large trout.\n. For the record, thousands of Cordova apps are shipped to the app stores with all resources unencrypted. \nJust saying...\nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn May 1, 2015, at 21:25, Shayne Sweeney notifications@github.com wrote:\nYou may want to test that the string in the binary is truly encrypted. I can't point to any mach-file docs (mobile atm), but in my experience large clobs are concatendated to the binary and are completely unencrypted. To test this download the App Store version of your app and run strings on the binary.\n\u2014\nReply to this email directly or view it on GitHub.\n. @frantic , i think @cxfeng1  is trying to invoke JS methods from Objective C and is having trouble doing that as @cxfeng1 cannot find a method to invoke an ObjC callback block.\n. Never mind. I think that this might be another issue. Investigating....\n. I think it's restricted to what IOS allows. \n\nI've used free TTF's in my react native project. \n. Duplicate attributes in *ML languages is technically invalid. =)\n. I've experienced this via command-center generated events.  However, my experience, when the device is locked, events publish fine when the phone is locked and the screen is on. However, when the phone is locked and the screen is off, events actually queue up. So, if i hit next next next, my player will move 3 songs forward in the playlist.\nThe flow is:\nCommand Center event -> my bridge impl class -> React JS code.\n. OK.  @mintuz @nicklockwood @ide \nSo in doing this testing, i can tell you that when events are generated via CommandCenter, they queue up. The runloop seems to freeze (to be expected) when the phone sleeps.\nCommand center implementation: https://github.com/ModusCreateOrg/react-native-mod-player/blob/master/kgmp/iOS/ModusCreate/MCModPlayerInterface.m#L196\nEvent listener: https://github.com/ModusCreateOrg/react-native-mod-player/blob/master/kgmp/jsx/player/RandomPlayer.js#L287\nExamples below\nregistering the event handler (JS)\n```\ncomponentWillMount : function() {\n    this.commandCenterEventHandler = RCTDeviceEventEmitter.addListener(\n        'commandCenterEvent',\n        this.onCommandCenterEvent\n    );\n},\n\n```\nonCommandCenterEvent\n```\n   onCommandCenterEvent : function(event) {\n    console.log('onCommandCenterEvent ' + event.eventType);\n            // debugger;\n\n    switch(event.eventType) {\n        case 'play' :\n           this.playTrack();\n        break;\n\n        case 'pause' :\n            this.pauseTrack();\n        break;\n\n        case 'nextTrack' :\n            this.nextTrack();\n        break;\n\n        case 'previousTrack' :\n            this.previousTrack();\n        break;\n\n        case 'seekBackward' : \n            // TODO\n        break;\n\n        case 'seekForward' : \n            // TODO\n        break;\n\n        default:\n\n        break; \n    }    \n},\n\n```\nXCode console *phone is awake*\n```\n2015-05-26 15:20:13.422 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:20:13.435 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:20:15.382 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:20:15.386 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:20:19.607 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:20:19.622 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:20:21.794 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:20:21.806 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n2015-05-26 15:20:23.645 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:20:23.657 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n2015-05-26 15:20:25.367 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:20:25.374 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n```\nXCode console *phone is sleeping*\n2015-05-26 15:18:29.914 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:18:30.907 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:18:32.044 KGMP[1982:589602] nextTrackCommand\n2015-05-26 15:18:33.361 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:18:34.623 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:18:35.717 KGMP[1982:589602] previousTrackCommand\n2015-05-26 15:18:37.054 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:18:37.055 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:18:37.055 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent nextTrack\"\n2015-05-26 15:18:37.056 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n2015-05-26 15:18:37.057 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n2015-05-26 15:18:37.057 [info][tid:com.facebook.React.JavaScript] \"onCommandCenterEvent previousTrack\"\n. Here's why this is an issue for the type of app I'm currently writing:\nAudio applications need to be able to:\n- run in the background\n- respond to command center events (Locked screen, command center drawer, USB remote control or even head phone remotes)\nThis application was designed, like many (if not all) RN applications, to have the controller logic inside of the JSX/JSCore layer.   \nCorrect me if i'm wrong, but I think unless this specific issue can get resolved, then any type of application that requires background responsiveness cannot use React Native unless the controller logic is duplicated in the Objective C layer.\n=)\n. Lastly, if anyone plans on cloning that repo, know that it's HUGE atm. It's got > 4.3K Mod files, which will be removed once i configure the code to auto-download a zip file.\n. A quick bump. this is still an issue.\n. \ud83d\udc4d\n. are those libraries listed in your sub-project dependencies?\n. I will say that this issue only seems to be a parsing error condition.  Logic errors seem to work fine =)\n. When this happens, can you guys fire up instruments and share the data?\nI've never run into this, but this is what I'd do if I did. \nJG\n@moduscreate\n:: sent from my mobile device ::\n\nOn May 21, 2015, at 10:24, Marc Shilling notifications@github.com wrote:\n2012 15\" Retina MacBook Pro\nLaunching my react native app on the iPhone 6 simulator immediately skyrockets the process to 130% CPU. The name of the process matches my app name (I bring this up because the iOS Simulator Process is 0% and XCode is 1%).\nLaunching a non-react native app on the same simulator, the process sits at 0.1%.\nI'm not experiencing any slowdowns or crashes, it's just annoying that my laptop's fans spin at high speed constantly. Curious what is causing this.\n\u2014\nReply to this email directly or view it on GitHub.\n. Good question @marcshilling :-\\\n\nI was hoping maybe there were some signals from the stack display that could help.\nI've recorded the following video demonstrating how my mid-2012 MBP displays CPU utilization for the iOS sim.  \nhttp://www.youtube.com/watch?v=91SurUNjkS4\nFor the record, this app is pushing the limits with React Native's Runloop and I still don't see issues with high CPU utilization like some of you are describing :(.\n. Ah! I See what you mean.  \nDuring idle, i'm < 5% :(\nSee below.\n\nI'll see if i can replicate with a vanilla project. Maybe there's something in there that is acting like a jerk :(\n. @alinz, makes a lot of sense. I guess the key here is to ensure that you're helping the tool help you ;).\nReminds me of this skit: https://youtu.be/OHXyVbxijko?t=19\n. I am using es6 classes with .4.4 and don't see that problem \nJG\n:: @moduscreate\n:: sent from my mobile device ::\n\nOn Jun 2, 2015, at 14:29, Stan Bershadskiy notifications@github.com wrote:\nI'm seeing a similar issue. I wonder if it has something to do with ES6 class usage?\n\u2014\nReply to this email directly or view it on GitHub.\n. Living on the edge with This project can cause bleeding sometimes. :)\n\nJohn, any idea when the next version of RN will be cut?\n@stan229, please feel free to close this issue. \n. @christopherdro  @brentvatne that worked. It feels pretty stupid to have to manually update package.json, but it works. =)\nThanks.\n. I am extending React.Component via ES6 style classes and am using 0.6.0 and do not have those exceptions :(\n. eeeeeh.... :-\\\nMaybe the real issue is \"Can this be configured for on-device debugging\"?\nThe following error makes complete and logical sense.\n\n. OK, the issue is that i was running from a JS bundle.  The docs should state how to get this done properly.  Currently there is no mention of updating AppDelegate.m also.\nTo debug on a real device: Open the file RCTWebSocketExecutor.m and change localhost to the IP address of your computer. Shake the device to open the development menu with the option to start debugging.\nHaving to update configuration strings in two different places really seems counterintuitive. \nI once published the idea of having end-developers update Info.plist.  What are your thoughts on leveraging Info.plist for these types of configs?\n. Hell yes. That's even a better solution than what I proposed.\n. Is it a bug or does your list view not buffer ahead of time enough? \n. Maybe i'm too old school, but Generic sublime text, Xcode, Google Debugger seem to work. just fine.\n[Edit] -- I just realized that my comment provided no value. Apologies ;)\n. Downgrading to     \"react-native\": \"^0.5.0\", everything works as expected =).\nLooking forward to a stable 0.6.0 and beyond.\n. I upgraded the mod player project I shared with you guys. GitHub master is working as expected.   \nI will create a .6.0 project from scratch and migrate things by hand.\nAnd yes, I mistyped. CTRL + CMD + Z is failing.  \n/me slaps self \n. !! is shorthand for absolute boolean.\n. It's absolutely not.  \nIt might be a typo, given the comment above. \n. Hah. i just did a scan for \" RK*\" and replaced accordingly.  I'll look to update this and the RCTScrollView soon.\nThanks @brentvatne  =)\n. ",
    "joewood": "I think it would be more generic to handle resize events, with an orientation hint. Some devices are likely to support side-by-side apps now or in the near future. Adaptive layout is key, and the flex system is good at supporting it.\n. Looks sensible. I like the general rule of avoiding string literals.\nWhat about non-event based non-visuals, like the NSKeyedArchiver? How would the serialization work for that? Maybe just send back JSON using JSONModel?\n. Would it better to package these together like Cordova does? Check out this simple example: cordova-facebook\nOtherwise I could imagine keeping the CocoaPod version inline with the npm version a challenge.\n. @vjeux totally agree. Why not use npm to pull the files from a single repo and then the build/package process would take the files out of the node_modules directory? \nIf the native package managers were to be used, it could soon become a dependency nightmare between maven, npm, nuget, cocoapods etc...\n. With npm, for the C++ part of any build node-gyp could be used too. Taking some of the pain out of the build environment set-up.\n. I think the above provides the best of both worlds. This makes npm the parent package manager, CocoaPod, Maven etc. subordinate. Most JS developers won't have to worry about the native modules, as long as the scripts keep the packages in sync.\n. :+1:  If the bridge and view registration could be described in the docs directory that would be really useful. I'm doing some rudimentary opengl tests and some guidance would help. May also be useful to #34.\n. Could somebody post a one sentence summary of what the problem would be?  It seemed to be quite an elegant solution of packaging the native parts from npm. I struggle with Cordova's plugin model and the impact on the native build part.\n. OK, sounds interesting. So the non-JS sources would be kept in npm, I guess something like node-gyp.\n. It may be simpler here to just regex replace backslash paths with forward slash, as either works in the node environment on Windows.  I'll give that a try to see if I can progress this further.\nAny reason why you didn't opt to just use browserify or webpack for the packager? This would open the door to other transforms and plugins, workflows around static and dynamic packages etc...\n. I fixed the issues with the output above by escaping out the paths in haste. That fixed that issue, but the packager doesn't seem to be able to locate the react-native/addons package. It also looks like watchman doesn't work on Windows (at least not properly), so this maybe a non-starter.  I may be better off re-implementing the packager server around browserify and use contrib_watch instead. \n. I'm trying to integrate the browserify packager into the workflow, but it looks like the react-native packager doesn't use the standard node.js like search algorithm.  Instead it seems to recurse down into the directories. This makes building anything with react-native more difficult. Is this a necessary part of the design?\n. So it looks like I need to run the packager to do the packaging stage using @providesModule before I use it in browserify. Is there a special URL to bundle up the library only (without a main entry point). When I run:\ncurl http://localhost:8081/Libraries/react-native/react-native.bundle -o react-native.js\nThe packager complains that there's no entry point.\n. How about adding this to react-native-cli as a command to add a Swift class to an existing app?\nreact-native addswift Foo\n. It would be great to see the react-native Bridge protocol documented so the community could take on the job of converting Cordova plugins to RN generically. Especially now both will be using npm.\n. I think porting should be fairly easy already, as extensibility is well documented.  The main difference would be that Cordova's native modules are running in a worker, where react-native is bridging to the UI thread. Right?\n. Just to understand what you mean, the native extensions are on the UI thread, so therefore should not be blocking? Is the port of your phonegap mod player plugin to an RN extension open-source?\n. I notice that @ide posted this #235 and there was this discussion we had when it was in private beta #60. npm being the master and seeding the xcode build through pod files. Not sure if that was the final agreement though.\n. That looks great. Any reason why it can't be npm -g installed, rather than cloned?\n. It may be tough to use without it being on the path. Although, now npm accepts script parameters I've seen more people use npm run using a locally installed package.\n. I think a prebuilt package solves a few problems:\n- Ability to use other transforms (Coffee, TypeScript etc..)\n- Ability to run on other platforms (currently watchman and the packager is OSX only)\n- Integrate with existing projects that already use WebPack or Browserify\nI can't see a downside, as there would only be one released version on npm. \n. This issue brought up previously, #146 and #133 \n. Just to confirm, the resolver is simply recursing down from root to locate the package/module, right? Then it would be just a matter of applying the JSXTransformer. I tried this a couple of weeks ago, but wasn't making much progress. I was hitting duplicate module problems from the root.\n. Sure, I'll put up what I did later. What I mean is that the require(\"xxx\") in the react-native code needs to locate the module, and it does that in a dir-layout agnostic way by recursively descending down the directory structure looking for JS files with the providesModule directive.  That's what I gleaned from the source code, so I could be completely on the wrong path.\n. @magus - this looks great. Suggest you add it to react.parts.\n. Isn't there still an issue with WKWebView in that it cannot load from a local resource, it has to load over http? Telerik included a mini-http server in the Cordova plugin to workaround this issue, as far as I remember. Just mentioning, as it may not be as simple as a drop-in replacement.\n. You could try adding the dev dependency paths to the blacklist (react-native/packager/blacklist.js - sharedBlacklist). In fact, the packager could check the root package.json for devDependencies, assuming these are just tools.\n. That, actually, probably won't help. The better fix would be to add a more elaborate glob pattern in the react-packager/src/service/index.js that lists the individual dirs ignoring the node_modules devDependencies.\n. There are plenty of options for editors like Atom, with TypeScript/Flow plugins and type annotations RN. That's what I'm currently using. I couldn't see any support for Emmet though. \n. I was thinking about this too. For example, configure the packager to use a TypeScript transformer for .ts files before it processes the regular transformer.  I think just a glob pattern would do, with a way of specifying a packager plugin.\n. It would be great to have a root level config file for the packager that included a callback to resolve the transform to apply.  This way it could require in transforms loaded from npm and maybe use webpack's loaders.\n. So, was there a final decision on the use of Cocoapods? I'm developing a couple of native libraries that have their own dependencies that are available as a pod.  Not a huge deal if the native side isn't expected to grow that much, probably best to avoid the complexity.\n. You have to kick this off with the initial build and deploy to the device using a Mac. But once the app is on there the packager can be running on the PC. I'll put together some PRs, maybe clean up the code a little.\n. Thanks @amasad I split the changes into two PRs - #807 and #893. Should have no impact on OSX.\n. Do you see any errors reported by the packager? It looks like that registerCompoent is never run. If you curl the output, do you see anything suspicious?\n. Hi Khang - I think you should look at modeling the toggle state through a property.\nThe Switch component is similar, in that events are hooked up and the component is re-rendered with new properties. \nThe SlideMenu\u2019s state would therefore be held at a higher level. Updating this state is how you explicitly toggle the menu.\n. @khanghoang you should always look to move your state management to a higher level.  So the state of your container will decide if the slider is open or not.  If you have a button on your slidemenu that toggles the state open/close state, you simply expose clicking of that toggle button as a property.  You can then propagate that property event up through the component hierarchy to where the state is, and call setState on the parent container.  This will in turn will cause a render, which will render the sideView and frontView with new properties reflecting that state.\nIf you want to animate your children of the container, you use keys on the child elements.\nI hope that helps.\n. Is automaticallyAdjustContentInsets documented anywhere? Why it's necessary etc...\n. Is automaticallyAdjustContentInsets documented anywhere? Why it's necessary etc...\n. I've been splitting out the changes and submitting as separate PRs. First one here: #807. \nAlso, ensuring this is a no-op on Linux, testing for the OS type. \n. Looks like the Travis CI server doesn't support os.type(). \n. The module names were inconsistent, the dependencies used \"\\\" and the defines used \"/\". The output was changed to make it all \"/\" to be consistent (it has no impact on Mac, as it never contains a backslash). This was the main problem with the packager.\nA better fix may be to convert to forward slash at the source. I tried that, but had no luck.\n. I can try this PR by changing the paths at source, so the output isn't modified. If you prefer - I'll give it another go this weekend. \n. Yes, this is still needed. I made a change to this PR to change the dir convention coming into the packager, rather than changing the packager output (as per @amasad suggestion).  I haven't looked at the test failures from the PR and need to rebase. \n. I still this issue in 0.4.4.  I don't see onLayout firing for device orientation changes.\nSaying that, I don't see this issue in UIExplorer using the same build and I can't see what UIExplorer is doing differently.\n. I'm trying to work through the best way of handling a lot of binary data. The best approach is to leave the binary data on the native side. Is the strategy here to use a tag, like how the camera roll refers to? Can fetch be set-up to return a 'blob tag' - equivalent to an 'image tag'?\n. I'm trying to work through the best way of handling a lot of binary data. The best approach is to leave the binary data on the native side. Is the strategy here to use a tag, like how the camera roll refers to? Can fetch be set-up to return a 'blob tag' - equivalent to an 'image tag'?\n. Having the same issue. I'm wondering if ShouldCapture events should return true if the movement is more horizontal than vertical. The documents are not great for the PanResponder API.\n. I've wrapped up AmazingAudioEngine as a react-native component. I'll push this up to a repo over the weekend. Right now it's just basic polyphonic playback, looping, volume and panning.  It was actually fairly straight forward to put together.\nI've avoided marshaling the audio data over the bridge. Audio data is loaded via a (local) URL only and once loaded, referenced using a proxy string from JavaScript. So there's no support for custom filters or any other JS side processing of the audio data. I'll add the stock filters supplied by The Amazing Audio Engine and possibly others so most of the WebAudio can be supported.\nNote, also I'm using a native side function to fetch (remote) audio data and persist it locally in the app's temp dir. From this you can use the local file URL that can be used by the audio engine. \n. Is the temporary UIView solution being tracked in a ticket? I'm doing some OpenGL work and the overhead is non-trivial. Would be good to know if a custom reconciler is possible.\n. Great, also noticed you fixed the NodeWatcher creation to pass an object with glob as a field, which seem to fix an issue where the glob pattern was being ignored.\n. ",
    "GertjanReynaert": "@sahrens Where in the UIExplorer example do you handle rotation? It seems like I can't find it. As I'm trying to add rotation detection support to my npm module this could be really usefull. \nPS: maybe the inline documentation in the Dimensions.js utility should be changed, because the width and height don't change on device rotation (Probably because they are set as constants here on application start?)\n. @Dharmoslap @kyledetella @droid-mind432 What external packages are you using? I had this issue when I was using an external npm-module that wasn't updated to React Native 0.4.0. After updating that module the issue was resolved for me.\nHope this helps.\n. @Dharmoslap I didn't meant your ReactNative version itself. I meant the ReactNative dependency of any of the npm modules you installed.\nHow I uncovered the issue: I created an npm module myself when RN was still in 0.3.x As I tried to update the RN version of my app (that uses my own npm module) I also got the white screen. When I updated my own npm module's RN dependency to 0.4.0 and reinstalled the module, the white screen was gone and the app was working fine. (I only found this out because I stumbled upon this comment: https://github.com/facebook/react-native/issues/917#issuecomment-94269441)\nSo my guess is that any of the modules in your node_modules folder still relies on RN 0.3.x\n. ",
    "paramaggarwal": "Unfortunately, the default back button of UINavigationController does not provide an event. The way to get around it is to either set your custom back button on the left side, or to implement - viewWillDisappear: in iOS. So I guess, this limitation is here to stay.\n. @liubko please look into Navigator instead, which is much more customisable. Docs are here: Navigator Comparison\n. +1 on @ide 's suggestion to use npm as parent package manager and CocoaPods/Maven as platform-specific installers.\n. Hop on to the module system discussion over at #235 if you want to hear about progress on the above suggestions.\n. I'm probably hitting this too. Both in simulator and device. I have a ListView of images and the images won't load many times. Doing a complete Reset on the Simulator seems to make it work for a while.\n. This thread is going nowhere. Definitely does not belong in the core, which is this repo. Maybe somebody can build a UITableView wrapper and share with the community. Let's close this issue?\n. This thread is going nowhere. Definitely does not belong in the core, which is this repo. Maybe somebody can build a UITableView wrapper and share with the community. Let's close this issue?\n. Here is the situation:\n1. The React Native Core team has already experimented with wrapping UITableView and as @vjeux mentions here, they had issues especially because of the asynchronous nature of React Native.\n2. The team does not foresee any use for specifically wrapping UITableView and hence would not be working on it. The community is free to build one.\n3. The team acknowledges above that ListView can do with some improvements - which they and the community will together work on.\nI do believe that a very simple UITableView wrapper that only provides the default styling would be very handy - but don't have a particular use case and hence won't be working on it soon.\n. Yes, this would be great. I would like to add this as an Xcode build phase, that simply creates a jsbundle to add into the app bundle when doing an Archive build. With a separate packager, I don't need to run the server, wait for it to be ready and then curl the bundle from it.\n. @jsierles Oh, that would be great. I'm seeing this error:\n$ npm install -g react-native-cli\n/usr/local/bin/react-native -> /usr/local/lib/node_modules/react-native-cli/index.js\nreact-native-cli@0.1.4 /usr/local/lib/node_modules/react-native-cli\n\u2514\u2500\u2500 prompt@0.2.14 (revalidator@0.1.8, pkginfo@0.3.0, read@1.0.6, winston@0.8.3, utile@0.2.1)\n$ react-native bundle\nCommand `bundle` unrecognized. Did you mean to run this inside a react-native project?\nI tried running it inside my project. I also don't see any mention of the bundle command inside the react-native-cli code here.\n. Ah, I see. Unfortunately that local-cli directory is not available when installed via Pods - it probably needs to be in preserve_paths in the pod spec. Will raise separate issue for that, thanks.\n. Same concern here. Is there a way to get the width of the parent view? Then I can do the math and set absolute height and width on the Image.\nThe parent view itself might be configured with alignSelf: 'stretch', so it would get its width during layout. Is there any way to access this computed width?\n. I was having a problem where my static image specified as <Image source={require('image!steve-bill-2')} /> was not actually showing up. I debugged and it turns out it is an Xcode problem.\nIf I add .jpg files to Xcode Images.xcassets, then using [UIImage imageNamed:path] will not return the correct image asset. While using .png assets works. I think this is because only for the special case of PNG files, Xcode does not need the file extension, but for jpg images it does need. We'll need to take care of this inside RCTConvert: + (UIImage *)UIImage:(id)json;.\n. I was hitting this issue. In your project and target build settings, search for 'Header Search Paths' and 'User Search Header Paths' and make sure that you are not making Xcode recurse over a very very very large set of files and folders recursively. In my case, I was overwriting the one that CocoaPods had added there, and hence it was recursing over an extremely large directory.\n. Good thought. If somebody searches the issues or Google with their error message 'Argument list too long', they'll hopefully land here. I went to the React Native documentation, and noticed that the sidebar does not link to the Troubleshooting page. That would be a great place to add stuff like this, that is gathered from the issues. What do you think?\n. @brentvatne I raised #1701 documenting this. Feel free to close this issue.\n. +1\n. Reminder to publish new version of react-native-cli - npm says latest was two months ago!\n. Hey @brentvatne, in my use-case I would like the entire image to show - hence would like that the height of the image vary so that it fit fully without any cropping nor bands. Now CSS does not support something like an aspectRatio style for something like this. In this issue I suggest an idea that does it out of the context of CSS with a very simple API by tagging the width and height in the image object itself.\n. Hey @brentvatne, in my use-case I would like the entire image to show - hence would like that the height of the image vary so that it fit fully without any cropping nor bands. Now CSS does not support something like an aspectRatio style for something like this. In this issue I suggest an idea that does it out of the context of CSS with a very simple API by tagging the width and height in the image object itself.\n. Hmm, I'm unable to explain my use case clearly, I'll give it another shot.\nImagine I wish to display a network image, whose width and height is 200x100. I already know its width and height before fetching it. Now when I do its layout I would like it to keep its aspect ratio. So if it happens to be in a parent that is 300px wide, then I would like this image view to be of 300x150 size. Hence the 150 comes automatically - I cannot say height: 150 in the CSS style because when the parent is 400px wide, I would like the image to be 400x200 - again maintain its aspect ratio. CSS does not provide a way to specify the height in this way for layout. Hence looking for a way outside CSS to be able to give such a relation between the height of the image with respect to its width.\nMy original post above suggests one such way to configure the Image component.\n. Hmm, I'm unable to explain my use case clearly, I'll give it another shot.\nImagine I wish to display a network image, whose width and height is 200x100. I already know its width and height before fetching it. Now when I do its layout I would like it to keep its aspect ratio. So if it happens to be in a parent that is 300px wide, then I would like this image view to be of 300x150 size. Hence the 150 comes automatically - I cannot say height: 150 in the CSS style because when the parent is 400px wide, I would like the image to be 400x200 - again maintain its aspect ratio. CSS does not provide a way to specify the height in this way for layout. Hence looking for a way outside CSS to be able to give such a relation between the height of the image with respect to its width.\nMy original post above suggests one such way to configure the Image component.\n. Sounds perfect. One question: If onLayout I set the height of the image, would it trigger a full layout again and hence trigger onLayout again?\n. Sounds perfect. One question: If onLayout I set the height of the image, would it trigger a full layout again and hence trigger onLayout again?\n. Sure, I'll also look at how I can specify the css_node->measure method that css-layout accepts where I can return a height based on a width parameter. Maybe I'm able to implement my original suggestion here myself. :stuck_out_tongue: \nWill share code/learnings here. Thanks @brentvatne!\n. Sure, I'll also look at how I can specify the css_node->measure method that css-layout accepts where I can return a height based on a width parameter. Maybe I'm able to implement my original suggestion here myself. :stuck_out_tongue: \nWill share code/learnings here. Thanks @brentvatne!\n. Alright based on onLayout this is what we have: (results in a flash of re-layout...)\n```\nvar ImageWithConstraints = React.createClass({\n  getInitialState: function () {\n    return {\n      style: {}\n    };\n  },\npropTypes: {\n    originalWidth: React.PropTypes.number.isRequired,\n    originalHeight: React.PropTypes.number.isRequired,\n  },\nonImageLayout: function (e) {\n    var layout = e.nativeEvent.layout;\n    var aspectRatio = this.props.originalWidth / this.props.originalHeight;\n    var measuredHeight = layout.width / aspectRatio;\n    var currentHeight = layout.height;\nif (measuredHeight != currentHeight) {\n  this.setState({\n    style: {\n      height: measuredHeight\n    }\n  });\n}\n\n},\nrender: function () {\n    return (\n      \n    );\n  }\n});\n``\n. Figured out how to do this withcss_node->measurefromcss-layout`. Please refer to pull request #1538. Will need a lot of feedback to bring this upto the standards of the rest of the repo...\n. That happens with any app running in the Simulator, because your Mac CPU is much more powerful than the mobile CPU on your phone.\n. In the production version of your app, you would bundle the JS into the app. You would not fetch from a development server, like the one used while in development. The development server is only to serve new versions of the JS without having to rebuild the entire app again.\nTo bundle the final JS file into your app, follow the instructions here: https://github.com/facebook/react-native/blob/master/Examples/Movies/Movies/AppDelegate.m#L26-L43\n. If a production version of the app were to fetch the JS from the server on launch, it would be incredibly slow. Ideally there should be a bundled version which would update in the background and be used on the next launch of the app - magically updating the app!\n. I have only copy pasted what @vjeux has said over at https://github.com/facebook/react-native/issues/499#issuecomment-87821298 while he explains why we currently don't have a UITableView wrapper. This is a common question from people I believe, and hence can be in the docs or if we have an FAQs section. :)\n. Yes, the issue is a duplicate, but this one causes a full app crash, so we need a nil check on cacheKey till a proper fix is in place.\n. I'm getting this as well.\n. This is the invariant violation being fired.\n. I feel it would be simpler if this resolution based image URL handling was done at a layer above React itself. This probably does not belong in the core. The application can decide what should be the correct image URL for the right resolution and then set source.uri.\n. This is very nice, thanks @brentvatne! I have a thought, should we move all the stuff that is going to move out of React Native core, like TouchableBounce and NavigatorIOS into a separate sidebar section called Third Party or Libraries or something like that?\n. This is awesome @tadeuzagallo, would be great to add to the documentation. Also, @brentvatne just published trace2html to Homebrew, so the CLI message can be now updated to say - Run brew install trace2html to see profile results.\n. Thanks @brentvatne and @ide. I have renamed originalHeight/originalWidth to intrinsicHeight/intrinsicWidth. I have also updated the calculated dimensions to be 0x0 when intrinsic dimensions are not provided instead of the previous assumption of a default aspectRatio of 4:3.\nFor the benefit of others, here is the flow of how the final dimensions of a network image are calculated in order of priority:\n1. Absolute height and width specified in style.\n2. Flex calculated height and width coming from style.\n3. Intrinsic height and width used from the dimensions passed to source.\nIn all of these scenarios, if it is not able to calculate the height from the given info, it will attempt to use the aspect ratio computed from the dimensions passed to source.\nTravis test is failing because of this failure on TEST_TYPE=build_website over here, and not in the obj-c, js tests.\n{ [Error: socket hang up] code: 'ECONNRESET' }\nAlso, should I extend this change to static images also? So that even static images would have the same behaviour in terms of calculating their height themselves given the intrinsic dimentions in source.\n. @sahrens Squashed commits into one, rebased to fix merge conflicts, removed redundant flattenStyle and tests now passing!\n. @frantic please share your thoughts.\nAlso, I noticed while using this, that setting a measure function on css_layout will not cause it to look for measurements based on child elements. So if you have an image with children, and you would like the image to get its dimension based on children, then this is a no-go.\nCurrently I do this:\n- (void)fillCSSNode:(css_node_t *)node\n{\n  [super fillCSSNode:node];\n  if (_intrinsicHeight && _intrinsicWidth) {\n    node->measure = RCTMeasure;\n  }\n}\nSo this works well. It works like an opt-in switch. Passing in source.width and source.height will mean that you want the image to size itself based on its aspect ratio than its children. The problem is that if an image element was first configured without this, and then later on gets the  source.width and source.height parameters, this aspect ratio behaviour would not get turned on. Thoughts?\nPinging @vjeux for thoughts regarding the use of css-layout measure here.\n. @sahrens, I thought of a way to do it conditionally - and updated the PR. Now only if an intrinsicHeight or intrinsicWidth are passed in, it will attempt to measure layout dynamically. So this is taken care of.\n@frantic @vjeux please do share your thoughts.\n. Isn't this the default behaviour on the web already? When an <img> is used on the web, the browser fetches the image, calculates the width and height and maintains the aspect ratio of the image automatically. See this JSBin, try resizing the output panel and note that when the width of the image is changing, the height is also changing. Hence the aspect ratio of the image is automatically maintained by the browser.\nNow in React Native, we do not load images and calculate dimensions, we expect the dimensions to be passed before-hand as part of style. But then we lose the capability of changing height of image in accordance with the width of the image.\nThis PR, helps us give the original intrinsicHeight and intrinsicWidth of the image (which a browser finds out after actually loading the image, while we provide beforehand) - and based on this, using the measure method of css-layout, we are able to maintain the aspect ratio of the image when it's width changes.\nIn much this way, the src attribute on the web, maps to the source attribute in React Native. Only that, in addition to the uri, we also need to give the width and height of the image - completely describing the remote resource.\n<Image source={{\n  uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/React.js_logo.svg/600px-React.js_logo.svg.png',\n  width: 600,\n  height: 600\n}} />\n. Thanks @frantic, the behaviour of static and remote images is now exactly the same after my latest changes (which I have squashed into a single commit). I've published an example to https://github.com/paramaggarwal/flex-image-demo to demonstrate this.\nThanks @ide, the behaviour you describe makes perfect sense, please try out the example I have published. Here is the index.ios.js file of the demo.\n. Thanks @frantic, the behaviour of static and remote images is now exactly the same after my latest changes (which I have squashed into a single commit). I've published an example to https://github.com/paramaggarwal/flex-image-demo to demonstrate this.\nThanks @ide, the behaviour you describe makes perfect sense, please try out the example I have published. Here is the index.ios.js file of the demo.\n. I am trying the test cases described by @ide above.\n\nIf the programmer uses flex and we know the rendered width of the image should be 375px wide but don't know its rendered height, then the layout engine should calculate rendered_height = rendered_width * intrinsic_height / intrinsic_width.\n\nThis works, but without having to explicitly use flex. More details below.\n\nIf the programmer specifies style={{width: 200}} but leaves off the height, then the layout engine should perform a similar calculation using the intrinsic aspect ratio to compute the rendered height.\n\nThis works as expected.\n\nIf the programmers doesn't specify any rendered dimensions (no flex, no width nor height in the style), then the image falls back to its intrinsic dimensions.\n\nThis does not work as expected. When no style dimensions are specified, it is picking width as the width of the parent.\nI attempted to fix this by trying these modifications in my code:\n- If the width of the image is smaller than the width of parent, then return the width of the image as is, with the height calculated in proportion.\nBut this still didn't work because css-layout uses only the height from the returned dimensions and not the width. It continues to use the width of the parent itself. The relevant snippet of code is here.\n- If there was a way to check if flex is being used on the node, then return intrinsic dimensions as is.\n  Doing this is hard from outside of css-layout, as detecting whether flex is being used can only be determined from inside the css-layout code. This is because flex could be cascading down the children.\n@vjeux please help with your thoughts here. Should this kind of layout be a method on css-layout instead? For example right now, we specify a measure function for css-layout, but instead if we could pass the intrinsic dimensions of the node to css-layout itself? That way this could be applied to any node, not just images. Please do share thoughts.\n. The measure method capability exposed by css-layout was originally intended only for text. This allows any node to define a function that is passed a width, and it is able to return a width and height at runtime. Hence RCTText nodes use this, and don't need explicit width height styles. Text simply takes up the amount of height that it needs. This is also how text layout works in the browser.\nNow to use this capability for images, and behave like how browsers treat images, we hit into the two following limitations of the measure method.\n1. It uses the width of the parent node, irrespective of flex being active or not.\n2. It uses the width of the parent node, irrespective of width returned from the measure method.\nThat is, it is very adamant about the width being equal to the parent node, unless explicitly defined in style. It does not even expect an alignSelf: 'stretch' on the node or alignItems: 'stretch' on the parent. This makes perfect sense for the original use case of a text node, but not for an image node.\nTo be able to do layout for image nodes, either we modify the above two behaviours. But I realised that the math we do for image layout is pretty simple, and does not depend on platform specific methods (how in measure we need to use platform specific APIs for text sizing.)\nHence, instead of defining a measure method, if one could set intrinsicDimensions of a css-node, then css-layout could automatically do the math, which would be as follows (from @ide's comment):\n1. If flex active, use parent width as child width, and calculate child height in proportion for flexDirection: 'column', and other way for flexDirection: 'row'.\n2. If width dimension specified in style, then calculate height using intrinsicDimensions.\n3. If no style, use intrinsicDimensions as is.\nThis was similar to the measure opt-in, this would give an intrinsicDimensions opt-in on css-layout specific to images, but also for nodes that wish to support custom aspectRatios. Also this is completely opt-in behaviour, would not break existing logic because nothing would change is intrinsicDimensions were not specified. Also, as none of this comes from style itself, this would not be against the CSS spec.\nPlease do let me know if this sounds correct - this would mean that we'll need to port these changes to css-layout, which I'm not very familiar with!\n. The measure method capability exposed by css-layout was originally intended only for text. This allows any node to define a function that is passed a width, and it is able to return a width and height at runtime. Hence RCTText nodes use this, and don't need explicit width height styles. Text simply takes up the amount of height that it needs. This is also how text layout works in the browser.\nNow to use this capability for images, and behave like how browsers treat images, we hit into the two following limitations of the measure method.\n1. It uses the width of the parent node, irrespective of flex being active or not.\n2. It uses the width of the parent node, irrespective of width returned from the measure method.\nThat is, it is very adamant about the width being equal to the parent node, unless explicitly defined in style. It does not even expect an alignSelf: 'stretch' on the node or alignItems: 'stretch' on the parent. This makes perfect sense for the original use case of a text node, but not for an image node.\nTo be able to do layout for image nodes, either we modify the above two behaviours. But I realised that the math we do for image layout is pretty simple, and does not depend on platform specific methods (how in measure we need to use platform specific APIs for text sizing.)\nHence, instead of defining a measure method, if one could set intrinsicDimensions of a css-node, then css-layout could automatically do the math, which would be as follows (from @ide's comment):\n1. If flex active, use parent width as child width, and calculate child height in proportion for flexDirection: 'column', and other way for flexDirection: 'row'.\n2. If width dimension specified in style, then calculate height using intrinsicDimensions.\n3. If no style, use intrinsicDimensions as is.\nThis was similar to the measure opt-in, this would give an intrinsicDimensions opt-in on css-layout specific to images, but also for nodes that wish to support custom aspectRatios. Also this is completely opt-in behaviour, would not break existing logic because nothing would change is intrinsicDimensions were not specified. Also, as none of this comes from style itself, this would not be against the CSS spec.\nPlease do let me know if this sounds correct - this would mean that we'll need to port these changes to css-layout, which I'm not very familiar with!\n. I just successfully tried out a standalone <AspectRatio /> component. It looks like this, and does not require any changes to the RCTImage module. It is also completely opt-in and for generic use on any component whatsoever. The way it works is that it takes the input dimensions and uses them to size itself into the constraints of the parent view. Hence always maintaining the specified aspect ratio.\n<AspectRatio dimensions={{width: 980, height: 480}}>\n  <Image style={{flex: 1}} source={{uri: \"http://example.com/image.jpg\"}} />\n</AspectRatio>\nUnfortunately, I cannot publish as it needs this change from css-layout imported into React Native: https://github.com/facebook/css-layout/pull/84.\n. It's probably just a download error, hence failure of checksum. Try deleting that cached file and try again.\n. I'm also seeing this on ListView. On a ListView if you press down and move up and down, but don't release the press for more than 2 seconds then this error is fired:\nInteractionManager: interaction handle not cleared within 2000 ms.\nError: InteractionManager: interaction handle not cleared within 2000 ms.\n    at Object.InteractionManager.createInteractionHandle (http://localhost:8081/index.ios.bundle:14430:11)\n    at Object.ReactNativeGlobalInteractionHandler.onChange (http://localhost:8081/index.ios.bundle:14326:40)\n    at Object.ResponderEventPlugin.extractEvents (http://localhost:8081/index.ios.bundle:17686:47)\n    at Object.EventPluginHub.extractEvents (http://localhost:8081/index.ios.bundle:12188:36)\n    at Object.ReactEventEmitterMixin.handleTopLevel (http://localhost:8081/index.ios.bundle:19867:27)\n    at Object.merge._receiveRootNodeIDEvent (http://localhost:8081/index.ios.bundle:19737:25)\n    at Object.merge.receiveTouches (http://localhost:8081/index.ios.bundle:19821:25)\n    at jsCall (http://localhost:8081/index.ios.bundle:7280:27)\n    at MessageQueueMixin._callFunction (http://localhost:8081/index.ios.bundle:7546:9)\n    at http://localhost:8081/index.ios.bundle:7575:20\nThe error is coming from InteractionManager.js. Just submitting it here so it can be tracked and discussed upon.\n. Please make sure you have something similar to AppRegistry.registerComponent('EventLentView', () => EventLentView); in your index.ios.js.\n. Ah I am also having an issue with this file when upgrading from 0.4.1 to 0.5.0. The error I get is that source.root.forEach is an undefined function - and on further analysis, source.root was coming as a boolean true, though it should be a string.\n@bimawa I think your problem is exactly same as mine. When you are trying to give --root parameter, it is actually taking its value as true and not the file path string. Hence it can't find index.ios.js. Will investigate further...\n. I confirm that using --root with the packager works again now in v0.6.0rc after previously working in v0.4.1 for me. Thanks for the fix @ide and for the note @threepointone. Specifically the packager is able to bundle without errors.\nBut now I'm hitting the original error in this PR - Error: Invariant Violation: Application ios-sample has not been registered. This is either due to a require() error during initialization or failure to call AppRegistry.registerComponent.\nI believe this must be because some require() call is failing and not because of the second part of registerComponent - as noted here.\n. Ok, everyone, this is the problem - when you update to v0.6.0rc, some of the require() methods have changed. For example require('createReactIOSNativeComponentClass'); is now var { requireNativeComponent } = require('react-native');. The packager is actually failing internally because some of the require() calls are failing. This will need further debugging as to why packaging errors are not bubbling up and showing up in the terminal.\n. @soliury by fixing all the require() calls. If a module that does not exist is inside require(), then it'll fail - otherwise it will work fine.\n. @alvaromb NavigatorIOS has a navigationBar and a view. When you nest Navigator inside it, it is being drawn into the view. Then NavigatorIOS draws the navigationBar on top of the view. Hence the view has no way to come on top of the navigationBar.\nPlease do try the suggestion by @ericvicenti and share here!\n. Here are all the places where Helvetica is mentioned in code. Currently, it creates a font by name if no family is provided, it should instead modify the fontDescriptor of the systemFont. See this highlighted code.\n. On iOS 7, on the device itself, running systemFontOfSize should give you Helvetica Neue, right? Maybe you tried it in Simulator, hence Mac, and hence got Helvetica? Just a thought.\nAnyways, it doesn't matter what font the system gives here. The point is to use systemFont by default, irrespective of what that font might actually be.\n. @nicklockwood @ide, great points. Linking to the WWDC talk for anyone interested in what all has changed: Introducing the New System Fonts\n. @dalinaum So I'm not sure what is the correct way, to do this - so can't suggest modifications but I did watch Introducing the New System Fonts, and in it they say that fetching familyName from systemFont is not the same as using the systemFont itself as all the other OS level stuff is lost. In the talk they mention using systemFont and then fetching the fontDescriptor and modifying it.\nAgain, sorry for giving feedback without being able to suggest code modifications. :smile: \n. @dalinaum This is nice and solves one part of the problem which is using systemFont as the default font. \nIn addition to this, in RCTConvert which allows you to create a new/different font - @ide's suggestion is to start with a base systemFont object and then modify the fontDescriptor. Currently, it creates a font by name if no family is provided. See this highlighted code.\nP.S. All the places where Helvetica is mentioned in code.\n. @nicklockwood :+1: \n. @dalinaum starting to take shape. :)\n. Checking... In that case we should document the same, and also remove the above comment in the code (I think).\n. Ah, I see it here. In that case we should document the same. (Once I learn how it works, maybe I can do this myself.)\nSo the comment has multiple parts:\n\nThese event types should be distributed among the modules that declare them.\n\nIs this too complicated to do? Maybe I can take a shot at attempting this.\n\nEvents should be registrable by any class that can call event handlers, not just UIViewManagers.\n\nThis the comment I misunderstood and which you clarify above. So the point here is that any Native Module should be able to define events, not just the ones that inherit from RCTViewManager?\n\nThis code also seems highly redundant - every event has the same properties.\n\nThis is the bit where I was suggesting why even specify event names. Why not just call the event and map it to corresponding event name in JS automatically. What are the challenges in doing so?\n. Also, what is the difference between customBubblingEventTypes and customDirectEventTypes?\n. Thanks @ide, I have incorporated your review comments.\n. You can leave this at RCT_EXPORT_VIEW_PROPERTY(mapType, MKMapType) as the implementation of RCT_EXPORT_VIEW_PROPERTY is anyways like this:\n``` objective-c\ndefine RCT_EXPORT_VIEW_PROPERTY(name, type) RCT_REMAP_VIEW_PROPERTY(name, name, type)\n``\n. Typo inthis.getWebWiewHandle(). Why not change in both places while we are on the subject ofWebViews. :smile: A search forgetWebWiewHandle` in the repo, returns these results.\n. fixed\n. fixed\n. fixed\n. fixed\n. ",
    "liubko": "@paramaggarwal is it possible to be notified when any rote changes? \nsomething like \n<NavigatorIOS onChange={...}\n              initialRoute={...} />\nI mean when someone do navigator.push(...)\n. +1\nreact-native v0.5.0 \n. navigationBarHidden works properly when I use navigator.push, but it doesn't work when I use navigator.replace or  navigator.resetTo\n. @jeroenbourgois I save isNavBarHidden status in parent component state.\n<NavigatorIOS navigationBarHidden={this.state.isNavBarHidden}\n              ref=\"nav\"\n              initialRoute={{...}}  />\nso then if I do smth like this:\nthis.refs.nav.push({...});\nthis.setState({\n  isNavBarHidden: ...\n});\nit works correctly. But it doesn't work when I use replace or resetTo\n. @eltoob when you change state in parent component you then pass it to NavigatorIOS \n<NavigatorIOS navigationBarHidden={this.state.isNavBarHidden} />\nthis will cause a re-render with new navigationBarHidden value\n. @alexrabarts you can pass a callback which will change state in parent component\nIf you are using flux you could trigger some action to update store's isNavBarHidden value, and you will need to listen for that store in parent component. \nActually I ended up using my own header component, to have more control on it\n. @eltoob not sure if we understand each other, I made a demo: https://rnplay.org/plays/L9v2wg\n. @ilansas hi, I'm getting the same error. Did you solve this issue?\n. It works now. Thanks\n. ok, then\n. backgroundColor: 'transparent'\nsaved me\n. backgroundColor: 'transparent'\nsaved me\n. make sense, thank you\n. @alinz does it look something like https://www.dropbox.com/s/xq522ywqsd16vqe/example.mov?dl=0\n. @JonasJonny totally agree. Maybe it is not a bug at all, but I think most people will expect to get circle in that case.\n. ",
    "arypurnomoz": "i think you can wrap the route component with a wrapper and listen to the wrapper's componentWillUnmount\n. +1\n. +1\n. ",
    "janmonschke": "It's not yet working for me (on 0.4.0)\n. Argh, nevermind, Apparently it is not activated for <Text /> nodes and I'm now wrapping a <View /> around them.\n. This has been fixed in https://github.com/facebook/react-native/commit/e2fc7d23628ab8162ae02e35a434dabb13b18968, issue can be closed.\n. Not sure why the build is failing, though ;)\n. @sahrens Do you need me to make the build green to merge this? I can hardly believe that an added sort() in that file would break the build :D\n. @sahrens That fixed it!\n. @VonD Did you try to clean project? XCode > Product > Clean. If that doesn't help, I also try to clean the build folder hold alt > Product > Clean. \n. ",
    "ericvicenti": "We have a responder system to handle this, but we didn't have much time to explain how it works at the conference. There are a number of handles that we use to negotiate touch handling. These are working well on View, but not everything has full support for this yet. (I'm not sure what 3D view you're using here)\nA view can become the touch responder by implementing the correct negotiation methods. There are two methods to ask the view if it wants to become responder:\nView.props.onStartShouldSetResponder: (evt) => true, - Does this view want to become responder on the first touch-down?\nView.props.onMoveShouldSetResponder: (evt) => true, - Called for every touch move on the View when not responder: does this view want to \"claim\" touch responsiveness?\nIf the View returns true and attempts to become the responder, one of the following will happen:\nView.props.onResponderGrant: (evt) => {} - The View is now responding for touch events. This would be a great time to highlight and show the user what is happening\nView.props.onResponderReject: (evt) => {} - Something else is the responder right now and will not release it\nIf the view is responding, the following handlers are used:\nView.props.onResponderMove: (moveEvt) => {} - The user is moving their finger\nView.props.onResponderRelease: (releaseEvt) => {} - Fired at the end of the touch, ie \"touchUp\"\nView.props.onResponderTerminationRequest: (evt) => true - Something else wants to become responder. Should this view release the responder? Returning true allows release\nView.props.onResponderTerminate: (evt) => {} - The responder has been taken from the View. Might be taken by other views after a call to onResponderTerminationRequest, or might be taken by the OS without asking (happens with control center/ notification center on iOS)\nThere are a few more features and facets to this system, which can be found in the highly documented ResponderEventPlugin.js\n. Correct- responder negotiation happens in JS. The 3D view should be expressed in your React component hierarchy to use the responder system. (There currently isn't good responder negotiation between the top-level ReactKit component and external iOS components.)\nI'll defer to @jordwalke, @sahrens, @frantic, and @nicklockwood to help explain the state-of-the-art when it comes to bridging new components.\n. Currently the best way to do that is to create an EventEmitter in the owner of the NavigatorIOS, then you can pass it down to children using route.passProps. The child can mix in Subscribable.Mixin and then in componentDidMount, you can this.addListenerOn(this.props.events, 'myRightBtnEvent', this._handleRightBtnPress);\nIt is clear that this API needs improvement. We are actively working the routing API in Relay, and hopefully react-router, but we want NavigatorIOS to be usable independently. Maybe we should add an event emitter inside the navigator object, so child components can subscribe to various navigator activity: this.addListenerOn(this.props.navigator.events, 'rightButtonPress', this._handleRightBtnPress);\nFeedback welcome!\n. Subscribable.Mixin is something we use internally to make sure nobody forgets to unsubscribe to an emitter from a component on unmount. The mixin will automatically remove subscriptions added with this.addListenerOn. We are currently phasing it out, though, because we will be transitioning to observables in an upcoming version of React.\nFor more info on the existing EventEmitter, see the github project here: https://github.com/facebook/emitter\n. We are working on a lightweight store for device APIs, which we call Subscribable. It comes with a mixin, and this is how you would use it in a component:\njavascript\nvar myComponent = React.createClass({\n  mixins: [Subscribable.Mixin],\n  getInitialState: function() {\n    return {\n      isConnected: AppState.networkReachability.get() !== 'none'\n    };\n  },\n  componentDidMount: function() {\n    this._reachSubscription = this.subscribeTo(\n      AppState.networkReachability,\n      (reachability) => {\n        this.setState({ isConnected: reachability !== 'none' })\n      }\n    );\n  },\n  render: function() {\n    return (\n      <Text>\n        {this.state.isConnected ? 'Network Connected' : 'No network'}\n        <Text onPress={() => this._reachSubscription.remove()}>\n          End reachability subscription\n        </Text>\n      </Text>\n    );\n  }\n});\nA subscribable is created with an event emitter. For device events, we wrap an internal EventEmitter called RCTDeviceEventEmitter which emits a 'reachabilityDidChange' event. We also provide the subscribable with a mapping function which you can use to transform the emitted value, and a function which subscribable can call to populate the initial data.\njavascript\nAppState.networkReachability = new Subscribable(\n  RCTDeviceEventEmitter,\n  'reachabilityDidChange',\n  (resp) => resp.network_reachability,\n  RCTReachability.getCurrentReachability\n);\nWhy are we wrapping EventEmitter with this new thing? A few reasons:\n1. It is very easy to use EventEmitter improperly and forget to remove the subscription on component unmounting. Subscribable and Subscribable.Mixin adds protection against this\n2. If we expose a public event emitter, anything can emit data from it\n3. EventEmitter requires a string name for each event, which would encourage hardcoded strings and make static analysis more difficult\nFeedback is welcome- this API isn't final!\nSubscribable will be available for you in a couple weeks. We will have a few device events exposed and the community can help add the rest. We're actively working on our code syncing process so we can release new things and upstream your pull requests.\n. http://facebook.github.io/react-native/docs/navigator.html\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigatorExample.js\nhttps://github.com/facebook/react-native/tree/master/Libraries/CustomComponents/Navigator\nFortunately we got this in for the open source release. Let me know what you think!\n. StaticContainer and StaticRenderer are both considered deprecated techniques.\nA more modern approach will do rendering early, and store the descriptor (the result of the render) in the component state, and get inlined in the render function.\n. The Android project isn't as mature as iOS, and it is still very tightly integrated with FB's Android codebase.\nWe plan on releasing on Android later this year, so stay tuned!\nhttp://facebook.github.io/react-native/\n. This looks quite important, but because we use Navigator internally (which still needs a lot of work), I can't spend much time fixing NavigatorIOS.\nIf anybody wants to look into this, here is where you would start:\nhttps://github.com/facebook/react-native/blob/72d3d724a3a0c6bc46981efd0dad8f7f61121a47/React/Views/RCTNavigator.m#L495\n. We definitely need this feature.\n@nicklockwood, is this on your radar? Do you have any advice for the community about how it should be implemented in RCTViewManager?\n. Thanks @igodzp \nThere is a new feature in Navigator that allows children to access the props.navigator object by calling Navigator.getContext(this). This can be used instead of manually passing the context around through props.\nIf somebody wants to look at how that works in Navigator and port it to NavigatorIOS, I'd be happy to review it and merge it in!\n. Thanks @igodzp \nThere is a new feature in Navigator that allows children to access the props.navigator object by calling Navigator.getContext(this). This can be used instead of manually passing the context around through props.\nIf somebody wants to look at how that works in Navigator and port it to NavigatorIOS, I'd be happy to review it and merge it in!\n. Sorry for the thrash. We've removed getContext in recent versions, and we are working on a better implementation.\nFor now, you can pass the reference to the navigator around using props or context.\n. One of the reasons we haven't added this yet is because Viewport size is not so simple. It changes when the call bar comes in, and also when the device rotates to landscape. We need a way to get the current Viewport dimensions, but also a way to subscribe to changes. I'm hesitant to add this until subscriptions are supported, because people will build apps on the bad assumption that Viewport size doesn't change.\nTake a look at NetInfo to see how we currently do subscriptions. (We currently use addEventListener, but the interface will be overhauled with observable when we get it in React 0.14. See ParseReact for a preview of this API.)\n. We need this in RN core. We have Dimensions internally, but it doesn't support subscriptions, so we haven't exposed it.\nMaybe it could look like this:\n```\n// get the current viewport size:\nvar {width, height} = ViewPort.getDimensions();\n// subscribe to viewport size changes:\nViewport.addEventListener('dimensionsChange', (newSize) => {\n  var {width, height} = newSize;\n}\n```\n@vjeux , what do you think?\nAlso, we shouldn't refer to Dimensions because we want to deprecate it. Instead, this module should directly access the lower-level NativeModules.UIManager.Dimensions and RCTDeviceEventEmitter\n. The JS-facing API looks quite good! Will this catch screen-size changes like the call bar appearing, or just re-orientation?\ncc @tadeuzagallo @nicklockwood to get some expert eyes on the ObjC\n. Yeah, it sounds like you are on the right track. If this is affecting you then I would see what you can do to fix it or work around it. We don't use NavigatorIOS internally, so we can't spend much time fixing things, but we are happy to accept any fixes that people contribute.\n. Yep, we only use the Navigator in our apps right now. It gives us a bit more flexibility over gestures and animations, and we're using it on Android as well, which helps us share code.\nWe don't have the bandwidth to support components which aren't used by our internal clients, so it is up to the community to maintain NavigatorIOS. We are happy to accept your PRs!\n. We don't need this internally, but we would be happy to accept a pull request for this. \nWhat do you think about this API:\n<NavigatorIOS\n  itemWrapperStyle={styles.nav}\n  initialRoute={{\n    component: NewsView\n  }}\n  renderTitle={(route) => <MyFancyTitleComponent title={route.title} />}\n/>\n. @spicyj If not a function, then how would you change the title for each new scene? Maybe we could put a title element on the new route object, but I'd like to make the API start to resemble the Navigator API\n. For Navigator, the reason we don't put the title or scene components directly on the route is because it takes extra computation and memory to load and render them before they need to be displayed.\nI think it would be nice if we could start making the API for NavigatorIOS more closely resemble Navigator. However, this is a community-maintained component, so I will let you all decide on the API. We are happy to accept additional features however you'd like to implement them.\n. So, I've thought about this, and I am concerned because this navState will sometimes appear to be incorrect in the renderScene prop.\nHere's the simplest example:\n- Initialize navigator with one scene\n- Push on a new scene\n- The navState and the routeStack that was passed to the first renderScene is now out-of-date, but we don't want to re-render it because it is going offscreen\nI think this would probably add more confusion. Instead, I want to add a method to Navigator that lets you get the current routeStack.\nIs there a reason you need to access the routeStack from inside the navigator? Maybe I could show you where you might run into some issues and help you find an alternative.\ncc @ide , we were talking about this earlier\n. I don't want to pollute renderScene's arguments. Thanks for adding it to the navigator! This looks good, I'll start merging this in.\nWe can come back to the navBar ordering issue later. Absolute positioning of the navBar is OK because it needs to appear over the scenes in most cases. You shouldn't need to apply position: absolute, top: 0, left: 0 to every scene; have you tried flex: 1?\n. Actually, there will be challenges if you try to put it on styles. It is kind of a special prop because we can't rely on it being an object (Stylesheet converts them into numbers for safety and optimization)\nIf we add transitionBackgroundColor as a special case here, then people will get confused and think it is a real style prop. Also, style validations will get confused.\nThis is the API we want:\n<Navigator style={{backgroundColor: '#000'}} />\nI haven't tried, but what if the default transitioner style is 'transparent'? Does that make this work?\n. Hmm, I wonder what is causing it to be white..\ncc @vjeux , this is one of those rare cases where we actually want the 'cascade' of CSS. What should we  do in these cases?\nAlthough it is a bit funky, this would probably be the most consistent with everything else we do:\n<Navigator\n  style={{flex: 1}} // style for the navigator container\n  transitionerStyle={{backgroundColor: 'black'}} // style applied to the scenes container\n ...\n. Oh, @jlevine22, I didn't see your edit. Great news!\n. I think this is the same as https://github.com/facebook/react-native/issues/406, but I haven't seen the Error: EISDIR, read error\n. Ah. I haven't seen this bug, but it is definitely something with the packager. cc @amasad \n. Yep, we're sticking to the web standards everywhere we can, but we don't want you to be restricted. Is there anything that you can do in Xcode that you can't do with the font-weight CSS spec?\nFeel free to send a PR to clarify the docs and link to the spec\n. Thanks for adding this functionality!\nIs there a reason you built an extra example instead of augmenting the existing NavigatorIOS example? It feels confusing to have two\n. zIndex can be controlled by re-arranging the components when you render. The later views will be drawn above the earlier ones.\nThis is easier for debugging because you only need to look at the render order, instead of needing to check the render order and the stylesheet.\n559, #131\n. @mcgsoftware, I'm not sure what you mean by \"wallpaper over the existing navbar, tabbar, etc\". Could you post a screenshot or video of what you want to accomplish?\nAll of the modals in the Ads Manager app (in the app store) are built with the Navigator component.  The UIExplorer sample is very similar:\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigatorExample.js\nIf you have specific questions about how to do things with Navigator, please file an issue an cc me\n. You can do this with Navigator, community components, or normal <View>s\n. This would be nice to support.\nInternally, we would just rename to .js and add a module.exports = to make it a normal JS module.\ncc @amasad \n. initialRoute only specifies the initial scene in the navigator.\nThe reason we don't do this is we don't want to re-render all of the scenes every time you re-render NavigatorIOS. This would make the app very slow once you have several scenes open. If your props are changing, you can call navigator.replace(newRoute), or use event emitters to communicate to inner scenes.\nNavigator handles this case a bit better. When you re-render, it will call renderScene again for the currently-visible scenes (unless you are mid-transition).\nI'm still trying to figure out the ideal pattern for re-rendering internal scenes. Feedback and ideas are welcome!\n. @mjw56, That code should work, the input prop would be updated when setState is called. Are you having difficulties when putting ChildComponent inside a Navigator or NavigatorIOS?\n@lazywei, I agree that it would be nicer to re-render the scene when the NavigatorIOS gets re-rendered. It would be great if somebody could implement Navigator's renderScene API for NavigatorIOS. That way the initial route would remain, but you could re-render the scene according to changing state outside the navigator.\nWhen it comes to slowness from re-rendering in Navigator, it shouldn't be a problem because Navigator is careful to only re-render scenes that are visible. This would also be important to do if somebody adds the renderScene API to NavigatorIOS.\nYou might run into issues if you want to re-render aggressively, but you could always improve the shouldComponentUpdate logic in your scenes.\n. Duplicate of https://github.com/facebook/react-native/issues/514\nNot possible right now and it is not something we are working on. A pull request for this would be appreciated\n. Ah, yes. Will fix\n. I have a feeling this is a general issue with resizing TabBarIOS, and is not specifically related to the device rotation.\n. Agreed, lets consolidate these! Also, @tadeuzagallo did most of the work on PushNotificationIOS :-)\n. Agreed, lets consolidate these! Also, @tadeuzagallo did most of the work on PushNotificationIOS :-)\n. Is that a normal ScrollView? I couldn't replicate this in the navbar example. Could you post a simplified code snippet that shows this bug?\n. Is that a normal ScrollView? I couldn't replicate this in the navbar example. Could you post a simplified code snippet that shows this bug?\n. Instead of using replace, use push to animate to b->c->d\nThen, instead of doing a pop on the back button press, do popToTop(), so pressing back will always take you to a\n. Have you tried popToRoute(route)?\nhttp://facebook.github.io/react-native/docs/navigator.html#navigation-methods\n. @Kureev, close, but that creates a new route object. The navigator will look in the route stack for that object but it cannot be found. You need a reference to the exact same route object, you cannot create a similar one.\n@chirag04, if you want an animation then you should use push. Replace will swap out the scene immediately.\nIf I understand correctly, then you want to make it easy to get back to the x scene. At some point you surely call navigator.push(xRoute) in order to load the x scene in the first place. You need to save a reference to xRoute so you can later call navigator.popToRoute(xRoute). Does that make sense?\nIf you put your code in a simplified gist, I can show you how to do that.\n. You could pass as a prop, or if you only want to render that scene once, you could put the route in a module.\n. I am hoping to move away from parentNavigator, because it is very confusing when child scenes have direct access to the parent hierarchy.\nOut of curiosity, why do you need to access parentRoute in the scene? In the mean time,  you can use parentNavigator.route for that?\n. We currently don't support animations on replace. The closest thing we have so far is the ability to put a Navigator inside of a Navigator and do a push on the inside one. Or you could simply do a push and then call popToRoute when you want to go back. This has worked fine for us so far, but I see why an animated replace would be easier to use.\nWe usually want to avoid the animations for replace, because it lets us re-configure the route and the scene without causing any movement. If replace animates then we would loose that ability.\nI'm happy to hear more thoughts on how this can be improved!\n. Looking pretty good! Few notes:\nIf you upgrade to 0.4.0, you will notice that the app can't run because of flow errors. It looks like you need to annotate the new properties in getInitialState\nAlso, do you know of any way to change the colors for one scene rather than changing the colors for the whole navigator?\n. I will look into this.\nWith typical usage, this shouldn't cause any noticeable bugs. But it will affect performance as you accumulate a lot of scenes and re-render all of them frequently.\n. I cannot reproduce this issue on the GitHub master. I added the following line to NavigatorExample.js:114:\nconsole.log('Rendering scene: ', route.message || route.id)\n\"Rendering scene: First Scene\" only appears once, even as I push on more scenes by tapping \"Push from right\"\n. Thanks, I'm glad it seems to be fixed!\n. The scene configs are objects with lots of overridable properties in them. If you want to start with FloatFromBottom and disable gestures, you can do this:\nconfigureScene={() => ({\n  ...Navigator.SceneConfigs.FloatFromBottom,\n  gestures: {}, // or null\n})\nThe component should unmount when dismissing with a pop gesture. That might be a bug\n. :+1:\n@mjw56 , Navigator should call componentWillUnmount on a scene after the pop transition completes. If that doesn't work, could you re-file as another issue?\n. This is a cool idea, and I would like to make sure the Navigator supports this. Ideally, this would be done through some advanced scene configuration that can be made accessible with a special scene configuration or configuration utility.\nIn a general sense, I think we should add gesture actions for jumpToTop and jumpToLast, and configure the first and last scenes accordingly, so the gesture causes the routes to loop.\nI am still making some big changes to the internals of the Navigator. (I hope to split the existing Navigator into two components). Once things settle down, I can add this feature or help walk you through the implementation.\nThanks for this idea! I will keep this use case in mind and make sure we can eventually support this.\n. Yep, you can write custom scene configs for Navigator in your app. If you think others would be interested in FloatFromLeft, you could send a pull request to the default configs file:\nhttps://github.com/facebook/react-native/blob/master/Libraries/CustomComponents/Navigator/NavigatorSceneConfigs.js\n. @christopherdro is right, the API is different. Sorry about that. The renderScene technique allows us to squeeze a bit of additional performance by not loading a component until we need it.\nThe renderScene={(route) => rendered} and navigationBar={<MyNavBar />} APIs in <Navigator> are here to stay. If somebody wants to update the API of <NavigatorIOS> to be more consistent, that would be greatly appreciated!\n. I don't understand exactly what is going wrong. Could you post a simplified gist that demonstrates this issue, and describe what you expect to happen vs what is actually happening?\n. Oops, sorry I missed this. Feel free to cc me next time so I get emailed.\nThis looks like a good idea to me!\n. This looks really useful. I'll start merging it in. I'm curious to see how your library works!\n. Ah, I see what the problem is. Right now you have two navigators directly inside one scene. The parent navigator does not know how to treat this situation properly.\nLong story short, you need to use a navigator to switch between the child navigators in each tab. If you look into the jumping nav sample, you can see how to do that with a tabs-like interface. Right now there is no way to disable the animation between the tabs, but I will fix that soon.\nThis is an issue we face internally, so we all need a more easy-to-use solution. I am working on it. I can update this issue when there is a better story here.\n. I've replicated this issue. I adding some code that logs the count of the route stack onDidFocus, and I've noticed that after swiping back, the count does not go down. I should be able to fix this today or tonight.\n. Sorry to see you're having troubles here!\nIf you post some example code, or modify the NavigatorExample to show the bug, I will be able to see exactly what is going wrong and help you find a fix\n. It will be easier to address these issues one at a time. We should have a more specific issue for each.\nI'll close this for now, but feel free to open specific issues (with example code!) and tag/assign me. Meanwhile, I am making it easier to use navigators within tabs.\n. I agree that it would be ideal if Navigator were more declarative. But I am pretty sure this would be problematic with the current system because any re-rendering outside of the navigator will cause the routes to be blown away by the initial routes.\nAn example: If I create a navigator with scene A, and then scene A causes scene B to be pushed, any re-render of the navigator would cause scene B to disappear!\nI'm happy to discuss this more, but I think this approach will be problematic without making some deeper changes.\n. Sorry for the delayed response here.\nWe have immediatelyResetRouteStack, which accepts an array, but it will not use an animation. If you need a form of resetTo that animates back and also accepts an array of routes, then you could submit a PR for that. The names for these actions are a bit confusing, so feedback is welcome on that as well.\n. Great! Let me know if you have an idea for a better name/naming convention.\nWe might want to have two sets of nav actions with consistent names. They would have the same effect on the stack, but one set of actions would happen instantly and the other set animates.\n. @facebook-github-bot import\n. Just tried to run this on the iPhone 6 simulator and it couldn't build. Looks like your enum is not compatible with iOS8 \n. @lazywei @andrewimm \nSorry for all the delay on this! I'm not very familiar with iOS notifs and I had to fix an issue with iOS7/8 notif registration types.\nGood news is it has landed internally and will be synced to GH tomorrow morning! Thanks for all your patience on this\n. This might be confusing because the callbacks will resolve before the animation completes in the case of push, but it will call back after the animation for pop, etc.\nCould you use the willFocus/didFocus API for this? \n. Ok, I see what you mean. This API does sound useful, even though we haven't needed it internally yet.\nIf you look at _transitionTo, it actually does accept a callback. You could pass it through and make it call back after the push transition. \n. Right now we're totally lacking tests for navigator, partially because it can be tricky to mock out the animations. I'm going to add some tests in the next week or two, and I can also add a few tests for the callbacks.\n. @facebook-github-bot import\nI'll test this manually for now and get it merged this week. Meanwhile, if you want to get going on the tests, I can point you in the right direction tomorrow.\n. Interesting.. Can you post a simplified gist that demonstrates this bug, or modify the NavigatorExample to demo the problem?\n. Ok, thanks. I'll investigate this\n. Lucky number 1337!\nCan you expand upon the tab bar example code to show this new functionality?\n. Ah, so the snapshot tests can be finicky. Things will look different based on the device in the simulator, 32 vs 64 bit, OS version, etc. Are you re-recording the snapshot on iPhone 5 (32-bit) and iOS 8.x?\nYou should be able to run the tests locally with ./scripts/objc-test.sh\n. @facebook-github-bot import\n. @facebook-github-bot import\n. Brilliant! This is why function refs are so much better. Thanks for fixing this, @ide\n@facebook-github-bot import\n. We had a failing test due to 1ed2542, so I disabled it for now. We should be good to merge in a few minutes. Thanks @ide!\n. Ohh, @ide, I didn't realize that it was your PR we reverted! Sorry about that.\nWe had to revert it because it was breaking the Android end-to-end tests for one of our products. We will try to get it back in ASAP\n. We had a hiccup yesterday with our export script, so #1505  replaces this\n. End-to-end test failures prevented me from landing this yesterday. Changes will land today in #1525 \n. Contextual navigation within the Navigator component was getting very complicated, so I removed it: https://github.com/facebook/react-native/commit/4690983c10a60d84a98a2a6f8bdf9a1c39d2ef74\nWe will be adding back contextual navigation pretty soon, but right now you can use nested navigators manually by referring to navigator.parentNavigator.\nSo I think this issue should be resolved on master. Let me know if its still problematic\n. Yep, the navigator currently blocks all touches on scenes during transitions\n. Is this a tap in the navbar or the scene itself? The navbar might have this issue, but tapping inside of a scene will be blocked once the transition begins, so a double tap should not be a problem.\nThis is a recent fix, so I would suggest cloning the repo and seeing if the master branch still suffers from this issue.\n. I think this is the same issue as #476\n. @magicismight It is difficult to see what the problem is based on your description. The navigator is able to animate views away, but you might be using it differently than we do. Can you show a simplified example of this bug on rnplay.org, and describe what you expect to happen compared to what is actually happening?\n@ardalann, that snippet is from RN's Navigator.js. This technique of setting state directly isn't recommended, but it can be used to mutate state while avoiding a re-render. Rendering/reconciliation can be very slow and interfere with the navigator animations/gestures. This \"updating range\" logic is old and we have better optimization techniques which we will switch to in the future.\n. Yeah, combining navigator with the native navigator is not very well supported. But I suspect it will work if you put the Navigator outside of NavigatorIOS\n. Sorry for the confusion. Right now they both have the FloatFromRight behavior.\nWe were intending to make the PushFromRight animation visually match the animation in NavigatorIOS. Unfortunately we never got around to it. For now, use FloatFromRight, and it won't change in the future.\nWe would accept a PR if anybody wants to re-configure PushFromRight to match the native navigation controller.\n. Hey! We're working on making this easier. In the next release (and in master), there is a new way to monitor navigation changes:\njavascript\nthis.currentRoute = this.props.navigator.navigationContext.currentRoute;\nthis.props.navigator.navigationContext.addListener('willfocus', (event) => {\n  // this.currentRoute will go away\n  // event.data.route will be focused\n  this.nextRoute = event.data.route;\n});\nthis.props.navigator.navigationContext.addListener('didfocus', (event) => {\n  // this.currentRoute has gone away\n  // event.data.route has been focused\n  this.currentRoute = event.data.route;\n  this.nextRoute = null;\n});\nIn the current release, you can get similar events by adding handlers to the navigator component: (keep in mind this will be deprecated)\njavascript\n<Navigator\n  ...\n  onWillFocus={(route) => {\n    // will switch to `route`\n  }}\n  onDidFocus={(route) => {\n    // did switch to `route`\n  }}\n/>\n. Hey! We're working on making this easier. In the next release (and in master), there is a new way to monitor navigation changes:\njavascript\nthis.currentRoute = this.props.navigator.navigationContext.currentRoute;\nthis.props.navigator.navigationContext.addListener('willfocus', (event) => {\n  // this.currentRoute will go away\n  // event.data.route will be focused\n  this.nextRoute = event.data.route;\n});\nthis.props.navigator.navigationContext.addListener('didfocus', (event) => {\n  // this.currentRoute has gone away\n  // event.data.route has been focused\n  this.currentRoute = event.data.route;\n  this.nextRoute = null;\n});\nIn the current release, you can get similar events by adding handlers to the navigator component: (keep in mind this will be deprecated)\njavascript\n<Navigator\n  ...\n  onWillFocus={(route) => {\n    // will switch to `route`\n  }}\n  onDidFocus={(route) => {\n    // did switch to `route`\n  }}\n/>\n. Agreed- a simplified example on RNPlay would be great to see\nCurrently, (and I agree that it's not ideal,) the Navigator will only remove the popped routes once the pop animation completes.\n. Because you return the static value here without listening to changes, getDimensions will not return an up-to-date dimension after it changes\n. Lets remove the StatusBarIOS code from here. There is already an example for that. If we keep every example as simple as possible, people will be able to learn faster.\nAlso, with our style conventions, this would look like this: StatusBarIOS.Style.lightContent\n. I probably wouldn't do it this way. This will theoretically start the transition twice, and _handlePop also sometimes calls pop on child navigators instead of itself\nI have refactored this code already and I think I have this issue fixed. The new code will land soon and we can double check\n. cb is the fourth argument in _transitionTo, so I don't think this will work\n. Maybe FromTheTop instead?\n. nit: spaces around else\n. Can you have a note that explains why you had to make this hack, or at least your best guess, and warn people that this is hacky to do?\nAlso, can we rename _handleOpenExample to _handleOpenInitialExample to avoid confusion?\n. Can we break these out into an independent module, instead of duplicating between .ios and .android?\n. Same notes as the .android file.\nCan we also rename the openExampleName prop to something that will make people know why we did it this way? Usually people can simply use the built-in linking code. We only need to do it this way to support appetize\n. Can we add this.props.applyAnimation in a followup, to allow people to customize it?\n. Can we add this.props.applyAnimation in a followup, to allow people to customize it?\n. Btw, it is possible to add a plain number with an animated value, but it looks kinda funny:\nheight: Animated.add(animatedHeight, new Animated.Value(5)),\n. Btw, it is possible to add a plain number with an animated value, but it looks kinda funny:\nheight: Animated.add(animatedHeight, new Animated.Value(5)),\n. To make this warning go away:\nresult && result.forEach(([key, value]) => { map[key] = value; return value; });\nPersonally I don't mind, but it apparently doesn't want you to assign in the return line.\n. To make this warning go away:\nresult && result.forEach(([key, value]) => { map[key] = value; return value; });\nPersonally I don't mind, but it apparently doesn't want you to assign in the return line.\n. Could you do this instead?\njavascript\ntype DimensionsEventName = 'change';\n// eventually maybe this:\ntype DimensionsEventName = 'change' | 'otherEvent';\n. Could you do this instead?\njavascript\ntype DimensionsEventName = 'change';\n// eventually maybe this:\ntype DimensionsEventName = 'change' | 'otherEvent';\n. please use === in cases like this\n. please use === in cases like this\n. this could be more consise if you do this on a previous line:\nconst {keyboardShouldPersistTaps} = this.props;\n. this could be more consise if you do this on a previous line:\nconst {keyboardShouldPersistTaps} = this.props;\n. Lets avoid commenting out lines and leaving them in here. Can we just remove them instead?\n. Lets avoid commenting out lines and leaving them in here. Can we just remove them instead?\n. It might be more conventional to call this one \"auto\"\n. It might be more conventional to call this one \"auto\"\n. Can you use invariant here? Because you already have checked for the error, please use invariant(false, ...\n. Can you use invariant here? Because you already have checked for the error, please use invariant(false, ...\n. Is this comment not true any longer, or is it only referring to the urls of require('d assets? Either way, we should update this comment and explain the intention. Not every app serves to WebViews so people may forget why this is the default.\n. Is this comment not true any longer, or is it only referring to the urls of require('d assets? Either way, we should update this comment and explain the intention. Not every app serves to WebViews so people may forget why this is the default.\n. Does this end support for iOS 7? Should this be documented somewhere?\n. I think it would be a nice consistency with overflow: auto in css, where the scroll bar only appear in cases where scrolling is possible. It also makes sense because it is the default option.\n. I think it would be a nice consistency with overflow: auto in css, where the scroll bar only appear in cases where scrolling is possible. It also makes sense because it is the default option.\n. I added this check because some transforms are(were?) not supported by main thread animations. So depending on the interpolator, we should still avoid native animation.. I added this check because some transforms are(were?) not supported by main thread animations. So depending on the interpolator, we should still avoid native animation.. We should use invariant here, for consistency. We should use invariant here, for consistency. Interesting name! Reminds me of nibbler from Futurama. Interesting name! Reminds me of nibbler from Futurama. This appears to be a change in behavior in the failure case. Is that intentional?. This appears to be a change in behavior in the failure case. Is that intentional?. Please clean up the old code! \ud83d\ude04 . Please clean up the old code! \ud83d\ude04 . cleanup. cleanup. Cleanup. Cleanup. AFAIK, the syntax is also changed:\n```\nimport \n```. AFAIK, the syntax is also changed:\n```\nimport \n``. What versions of node is the default syntax allowed in? Have you checked for regressions in older runtimes?. What versions of node is the default syntax allowed in? Have you checked for regressions in older runtimes?. I'll change it toA Monthly Release Cadence: .... I'll change it toA Monthly Release Cadence: .... Ok, will do. Ok, will do. Hmm ok I'll run it. Hmm ok I'll run it. I think the release is supposed to happen on the last day of the month, plus or minus a few days. And the new RC is supposed to be released on the first of the month, plus or minus a few days. How do you think I should say that?. I think the release is supposed to happen on the last day of the month, plus or minus a few days. And the new RC is supposed to be released on the first of the month, plus or minus a few days. How do you think I should say that?. Ok, no problem. Ok, no problem. Will fix. Will fix. \"Although it may vary a few days to avoid weekends or handle unforeseen issues, you can expect a given release to be available on the first day of the month, and released on the last.\". \"Although it may vary a few days to avoid weekends or handle unforeseen issues, you can expect a given release to be available on the first day of the month, and released on the last.\". Maybe that is because you have the cli installed globally? What @grabbou is saying makes sense. This is the display name so I wanted to make the replacement string very obvious. I'll rename it to \"Hello App Display Name\". Yep!. Oops, will put error code 1. Ok I'll explain that in the error message. ok. then we don't want to show this error because maybe the user just wants to generate one. Nope, because this is generated in the init step, where the name is all that exists.. Does it need to be checked in to the repo? Why can't the CI generate this?. Can you mention in the title that this is linux specific?. having pinned=false seems verbose. You could just leave it off unless it is actually pinned. having pinned=false seems verbose. You could just leave it off unless it is actually pinned. in other codebases we would want flow types, but nevermind here \ud83d\ude04 . in other codebases we would want flow types, but nevermind here \ud83d\ude04 . The formatting is inconsistent, should beif (`\nThe app icon should not be mandatory, we should have a fallback icon. Does this work on windows? I think this path separator may not work there.\nIts not great that the path is duplicated several times here. Maybe we could express this in a clearer data structure.\nconst ICON_SIZES = {\n  android_hdpi: {\n    path: 'android/app/src/main/res/mipmap-hdpi/ic_launcher.png'\n    size: 48,\n  },\n  ...\n];. Always use const when a variable doesn't get re-assigned.. should be const instead of var. Is this a typo? Does it cause any troubles?. Does this cause there to be 3 separate pages? Lets consolidate it so that all the BackHandler docs are on one page.. Does this cause there to be 3 separate pages? Lets consolidate it so that all the BackHandler docs are on one page.. Ok, fair enough. Ok, fair enough. What is SomeTest, and does it need to be hardcoded in this path?. What is SomeTest, and does it need to be hardcoded in this path?. can the log mention the platform of the icons being set up? Same with the iOS log. can the log mention the platform of the icons being set up? Same with the iOS log. can you remove it or add text around it to be more readable?. can you remove it or add text around it to be more readable?. Can we handle the default behavior up here?\nconst iconConfig = (typeof appConfig.icon === 'string' ? {default: appConfig.icon} : appConfig.icon  ) || {};\nconst appIconIOS = iconConfig.ios || iconConfig.defaultIcon;. Can we handle the default behavior up here?\nconst iconConfig = (typeof appConfig.icon === 'string' ? {default: appConfig.icon} : appConfig.icon  ) || {};\nconst appIconIOS = iconConfig.ios || iconConfig.defaultIcon;. Is this change necessary? If we don't need it with the current CI setup, why does it change when we run the tests in docker containers?. Is this change necessary? If we don't need it with the current CI setup, why does it change when we run the tests in docker containers?. I think it would be good to start by explaining that icon can be set to a path string, and that will be used as the icon on every platform\nFor the deep configuration, please create an indented sub-list of options.. I think it would be good to start by explaining that icon can be set to a path string, and that will be used as the icon on every platform\nFor the deep configuration, please create an indented sub-list of options.. I believe this should be changed to:\nconst iconConfig = (typeof appConfig.icon === 'string' ? {default: appConfig.icon} : appConfig.icon  ) || {};\nFor each PR to react native, we also expect to see a test plan, that would cover the edge cases of the changes you're making. This is one edge case that I would expect to be in the test plan, and hopefully it would help surface the issue sooner. I believe this should be changed to:\nconst iconConfig = (typeof appConfig.icon === 'string' ? {default: appConfig.icon} : appConfig.icon  ) || {};\nFor each PR to react native, we also expect to see a test plan, that would cover the edge cases of the changes you're making. This is one edge case that I would expect to be in the test plan, and hopefully it would help surface the issue sooner. It looks like this is duplicated with ICON_SIZES below. Can you refactor it so that these strings are not duplicated?. It looks like this is duplicated with ICON_SIZES below. Can you refactor it so that these strings are not duplicated?. wait, this looks like a typo. What is this function doing here? What happens when you run this?. wait, this looks like a typo. What is this function doing here? What happens when you run this?. ",
    "jordwalke": "@jlongster Yes, that should work, but I don't know why your other view is receiving touches that started on the buttons. Are your touch handlers for the camera on the outermost view that contains everything? If so, you could put your touch handlers (or gesture recognizers) on just the part of the screen that has the teapot.\n. I see. Then your approach of creating a custom 3d-scene component sounds good. (BTW, we're going to streamline making new bridged components, and we're also going to work on integrating the JS cross-platform responder system with each platform's gestures).\nAlso, where are your touch handlers? I think there's a way to make this work simply by making the buttons not under the place where your touch handlers are setup in iOS (regardless of geometry/how much space they take up).\n. @jlongster that sounds like the right approach (make sure the UI is really sitting on top of everything).\n. Great investigation, @jordanna. The information is very helpful. Scroll views in native know to stop scrolling if something that contains them becomes the responder in JS (like if you were dragging an outer modal view down - that should stop any scroll views from scrolling). My question is, why is the outer scroll view becoming the JS responder?  One thing that would cause this is an onScroll occurring on the outer scroll view.\n(This is why I just wish all the scroll views were implemented in JS - all these problems go away).\n. I'll look more into this in the coming week, but I believe the correct way to correctly integrate is to do all enabling/disabling of the scroll view completely from JS (it should start out disabled and then become enabled when JS determines it should become the JS responder). This is actually incredibly difficult because UIKit's scroll view doesn't like to work this way and it might involve some trickery.\n. @nicklockwood: Do you know of a way to have UIScrollViews be disabled by default and then reenabled?\n. I tried both of those options. In the former, you cannot reenable it after touches have began, which is what would allow this issue to be fixed (and all future scroll view conflicts). I also tried the later suggestion, but I believe the momentum has issues in that case.\n. @vjeux, this is the kind of troubles we're having with native scroll views. The responder system solves it and I don't know how to solve it while using the UIScrollViews.\n. :+1: \nThanks @ericvicenti\n@tadeuzagallo is working on getting hardware touches to be aligned with the screen refresh rate/cycle which is going to make it even better!\nCheck out the F8 app which uses this for all of its transitions/gestures.\n. Yeah, the delay was intentional to mimic touchable elements that exist within scroll views. On iOS, you don't want items highlighting immediately just in case a containing scroll view begins to scroll right after the touch start. So our delay values might be too large, which we can adjust, or we could also allow override values for certain instances of your choosing.\n. I thought that we did have immediate feedback on the release of a tap. You probably have to implement the onPress hook. If not, I believe that is a bug in Touchable. The real challenge which we don't yet support, is to immediately give feedback on touch start (not just release) if your button happens to not be in a scroll view.\n. If this only updates the guide to accurately reflect what is required, that seems fine but:\n1. Why do we need ruby? Can we not?\n2. Can whatever ruby does be ported to JS?\n. Please let us know if that group isn't meeting the needs of the community and we'll work something else out.\n. I totally agree. Feel free to link to gists from the Facebook group.\n. I observed memory corruption with JSExport on iOS7. It was very difficult to reproduce, but when I finally reproduced it I rewrote it in terms of serialized strings. If anything, we should eventually just use the raw JSC c API, but IIRC flushing/serializing is not the bottleneck (if you see otherwise, please let us know). In fact, in one benchmark @frantic and I found that just copying the entire data at once was faster than using micro-hooks to convert each piece of the data using the JSC c API - it might have something to do with crossing the JS/native boundary several times vs. in one batch.\n. We have tons of full screen modals with custom animations with the JS implemented navigator. (See the F8 app for an example). Would that work for you?\n. Awesome work!\nKeep in mind that this approach will require reimplementing the same concept in Android, whereas the standard Navigator will not since the scenes are controlled in JS.\nIt's about tradeoffs, and the approach you've taken has benefits as well: I believe that if you embed a ReactNative container inside of a larger (non-ReactNative) app, your modal will still work well.\n. Check out the FB Mobile Ads Manager app which has this same experience.  You can accomplish it via nested navigators. The outermost one is the full modal that typically only has one scene on its stack (the scene with the tab bar), but occasionally that outer navigator will push on another scenes which necessarily covers the inner navigator (the one with the tab bar).\n. ",
    "ReadingSteiner": "@ericvicenti \nWhy not use\njavascript\nthis.props.event.addListener('myRightBtnEvent',this._handleRightBtnPress)` ?\ndirectly in the componentDidMount?\nWhat is  Subscribable.Mixin's job here?\n. @ericvicenti\nThanks a lot for ur reply :)\n. It will be awesome if this feature is merged :)\n. Solved by \"Reset content and settings\".I was wondering if something wrong with the url.\n. @nicklockwood thanks a lot!\n. @nicklockwood thanks a lot!\n. Thanks a lot!\n. I found only obj-c solution :( . If I have to write obj-c , why should I  use react-native ?\n. Sorry :( , I know nothing about Objective-C. I found the obj-c solution here, answered by cmcewen\n. @ide  tried, but I found when 2 or more  Text in TouchableWithoutFeedback, an exception will be thrown.\n[tid:com.facebook.React.ShadowQueue][RCTBridge.m:1294] Exception thrown while invoking updateView on target <RCTUIManager: 0x7fc025b67010> with params (\n    \"<null>\",\n    RCTView,\n        {\n        opacity = \"0.9861111111111112\";\n    }\n): Invalid moduleName '(null)'\n. @ide   It works now, thank u :)\n. ",
    "benkomalo": "Ah, interesting. Thanks, @mfikes. If I manually install watchman that gets around that issue (though I'm now seeing Watcher took too long to load, but I can debug that a little more before filing a separate issue for it). \nIs there a reason watchman isn't listed in packages.json?\n. Cool. Thanks, again @mfikes. I'll assume there's a good reason for keeping it separate from packages.json then. Will close out for now.\n. ",
    "SanderSpies": "I'm working on a animation library, https://github.com/sanderspies/react-animation, which has a DSL where you can call React (e.g. React.findDOMNode). If I use this library inside React Native it complains about not being able to find React.js. So obviously, in this case I don't want to use React.js but React Native instead.\n. Solved this by not using React inside my animation library.\n. Is there a reason why Button is not on the list? (just curious :-))\n. What's the approach with non-UI libraries? How should I for instance expose something like UIDevice (which gives device information)? \nI could imagine something like: \n```\nvar Device = require('react-native/Device');\nconsole.log('orientation:', Device.currentDevice().orientation);\n```\n. Lol, I thought so - but it seemed too obvious :P.\n. @nick Great that worked! :-)\n. ",
    "cleercode": "I set throttleScrollCallbackMS={16} and the warning doesn't show but I seem to still only get one event fired. Also only seeing one event logged in the UIExplorer example.\n. +1. Need this for sizing things like subviews of a horizontal ScrollView or a position: absolute views to full width since flex: 1 doesn't cover these cases.\n. ",
    "ssssssssssss": "Don't work for listview\n. @orktes Where is the revised agreement? Is there any other none-FB app been approved by Apple?\n. Any chance to access the initalPropties in JS? \n. @nicklockwood Thanks for your reply, if addresses my concerns.\n1. Let me re-phase my questions. As we multiple RCTRootViews for different parts of the UI, so we'd like to make each RCTRootView backed by a JS component via \"registerComponent\". According to your previous answer, I think it's also feasible to do that.\n2. Any more documents about this?\n. Thank a lot, @nicklockwood\n. @brentvatne @finalquest I'm facing a more complex situation. We have a existing app that use a UITableView and would like to make each cell to be a RCTRootView, but how can we pass data to the JS module so it can initialize  with different content?\nThanks.\n. @ide But how to access the initialProperties in JS land? And as we are sharing a bridge via  \nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                      moduleName:@\"YourModuleName\"];\nand creating more cells using\nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                      moduleName:@\"CellRendererModule\"];\nWe'd expect 'dynamic' data passed to the module not the bridge.\nAny idea?\nBTW, why the poor performance? \nThank you .\n. @ide Thanks for the tip, rootView.initialProperties does work.\nWe've got customized UITableView working with cells backed by React Native. It's kinda slow as we recycle cells which are out of viewport. And we did try to use object pooling for the JS components to rescue, but failed. Any hint to create a CellComponentWithPool component?\nThanks.\n. Please see these two issues, it should address your previous question. \nBest practice to integrate existing app with React-Native #995\nForcing view refresh #1049\n. It's quite easy to reproduce while scrolling around in UIExplorer app. \n. > @soheil - aw man, sorry to hear that. Which animations are you having trouble with? When you say they don't feel native, is it because they feel janky or just don't seem like they are the correct animations?\n@brentvatne The animation of Navigator feels really janky and the animation is not identical to the NavigatorIOS. The interpolator of Navigator module should be \"RightToLeft\" if I remember correctly.\n. @robertjpayne Thanks, it's crystal clear now.\n. You should guard onLayout before calling it.\nthis.props.onLayout && this.props.onLayout(...args)\n. if (isNaN(index)) {\n  index = 0\n}\nMaybe you should check index before actually use it. \nthis._highestMeasuredFrameIndex = Math.max(\n         this._highestMeasuredFrameIndex,\n         index,  \n       );\nIf index is NaN, then _highestMeasuredFrameIndex will be also NaN, which may leads to crash.. ",
    "irvinebroque": "@jlongster - here's an example of a :hover pseudo-class with CSS in JS:\nhttps://gist.github.com/irvinebroque/a4530228bdab51fa3939\n. @jlongster - true, but you can render new DOM elements based on state, which covers the more general case, no? For example:\nhttps://gist.github.com/irvinebroque/520871ff44042b91b518 (scenario where you might otherwise use a pseudo element's content to render a tooltip)\nThe only pseudo selectors I've been unable to implement purely in React have been browser specific like ::-webkit-input-placeholder\n. Thank you so much for this and #405! When #114 came out, dealing with .xcodeproj and library linking was the thing that blocked me from extending native APIs. Coming from JS, having great documentation and tooling for the painful parts of working with Xcode means so much to me.\n. ",
    "jordanna": "Ok, I finally got around to looking more into this issue (was sidetracked by animation hacks!). During event extraction in the ResponderEventPlugin, I'm seeing JS responder being transferred from the inner scroller to the outer on a topScroll event. \n```\nfunction setResponderAndExtractTransfer(\n    topLevelType,\n    topLevelTargetID,\n    nativeEvent) {\n// topLevelType === 'topScroll'\n  // topLevelTargetID === ID of inner scroller\n  ...\n// bubbleShouldSetFrom is true here, responderID === topLevelTargetID\n  // i.e. current JS responder is still inner scroller\n  var bubbleShouldSetFrom = !responderID ?\n    topLevelTargetID :\n    ReactInstanceHandles._getFirstCommonAncestorID(responderID, topLevelTargetID);\n...\nif (skipOverBubbleShouldSetFrom) {\n    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n    // shouldSetEvent._dispatchIDs === outer scroller (skipped over inner scroller?),\n    // these were possibly from 'touchmove' that occurred immediately before this 'topScroll' event\n  } else {\n    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n  var wantsResponderID = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n// By the time it gets here, wantResponderID is for outer scroller\n```\nCould this be a timing issue with touch moves and scrolls? ScrollResponder.scrollResponderHandleTouchMove is consistently invoked for both inner and outer scrollers before ResponderEventPlugin.extractEvent for a scroll.\n. Thank you @vjeux for the fantastic summary! I've been hacking in some pre-baked animations like zoom-in/out using CoreAnimation (applied post-layout) for a small prototype I'm working on. I noticed interface stubs like RCTAnimationConfig while digging in the guts of ReactKit, so this answers what it could be used for :)\nRe: Declarative Animations\nAre there any plans to make this fire and let me know when animation is done (vs. fire and forget)? I'm thinking either through callbacks that perhaps can be specified as additional arguments in this.startAnimation, or better yet, have it return a promise or something similar.\nThe primary use case for this is view dismissal animations, i.e. animation needs to finish before component unmounts. I admit I wasn't too keen on using ReactTransitionGroup (for the web project), so I developed a mixin that applied CSS animations in a similar declarative manner and allowed you to specify a callback function:\n// zoom and fade out\nthis.animate({\n    target: 'myRef',\n    scale: 0.5,\n    opacity: 0,\n    duration: '250ms',\n    callback: function() {\n        // unmount\n    }\n});\nThis worked well for unmounting alone, but didn't nicely cover other use cases where other components or mixins were interested when the animation ends, e.g. logging. I'm looking to refactor it now with some RxJs, so this.animate returns an Rx Observable. \nIn any case, I'm going to hack in something similar in my ReactNative prototype for the time being. Definitely looking forward to trying out these animation APIs when they become available!\n. Just curious, is this a wrapper for UIVisualEffectView with a UIBlurEffect? \n. Just took a stab at it since I'm working on a prototype that needed the feature.\n. Sure not a problem, I can update docs/Image.md along with the other suggestions. Thanks!\n. Done!\n. Good point! Also I just remembered that mutating React events isn't a good idea since they're re-used from a pool and the values could be bogus by the time they're accessed.\n. ",
    "ericf": "I've also been running into this issue. The setup I have is an outer horizontal/paging <ScrollView> with several inner vertical <ListView>s. When the <ListView>s are nested in the outer <ScrollView> I'm seeing the following warning logged when dragging the inner one:\nWarning: ScrollView doesn't take rejection well - scrolls anyway\nThe adverse affects I'm seeing on the expected scrolling behavior of the inner <ScrollView>s is they're not respecting tapping the status bar to scroll to top, and scrolling is \"sticking\" to my finger when trying to continuously flick the list \u2014 the same issue that @jordanna is running into.\n. ",
    "milanvanschaik": "Any updates on this one?\n. +1 I would love to see support for horizontal ScrollViews as well.\n. @vjeux Sorry, I meant the pull-to-refresh to have support for horizontal scrollviews. The default one from Apple doesn't have that support.\n. ",
    "nicholasstephan": "Any movement on this one? I have a similar example up on stack overflow (http://stackoverflow.com/questions/29756217/react-native-nested-scrollview-locking-up) that nobody has been able to answer. \n. I'm seeing this too.\n. ",
    "Shuangzuan": "@nicholasstephan Modify node_modules/react-native/Libraries/Components/ScrollResponder.js: Line 136 (See UPDATE):\nscrollResponderHandleScrollShouldSetResponder: function(): boolean {\n  return this.state.isTouching;\n},\nUPDATE: I find if the scroll view is currently animating and wants to become the responder, then it will reject. Line 189 in ScrollResponder.js. So I modify Line 340 and it work for me:\nscrollResponderIsAnimating: function(): boolean {\n  // var now = Date.now();\n  // var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;\n  // var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS ||\n  //   this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;\n  // return isAnimating;\n    return false;\n},\n. @nicholasstephan Modify node_modules/react-native/Libraries/Components/ScrollResponder.js: Line 136 (See UPDATE):\nscrollResponderHandleScrollShouldSetResponder: function(): boolean {\n  return this.state.isTouching;\n},\nUPDATE: I find if the scroll view is currently animating and wants to become the responder, then it will reject. Line 189 in ScrollResponder.js. So I modify Line 340 and it work for me:\nscrollResponderIsAnimating: function(): boolean {\n  // var now = Date.now();\n  // var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;\n  // var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS ||\n  //   this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;\n  // return isAnimating;\n    return false;\n},\n. @sahrens \nOK. Finished.\n. ",
    "magicismight": "Is there any progress here?\n. same issue!\nfound in 0.3.7\n'NSRangeException', reason: '* NSRunStorage, _NSBlockNumberForIndex(): index (2) beyond array bounds (0)'\n* First throw call stack:\n(\n    0   CoreFoundation                      0x014ba466 exceptionPreprocess + 182\n    1   libobjc.A.dylib                     0x00973a97 objc_exception_throw + 44\n    2   CoreFoundation                      0x014ba38d +[NSException raise:format:] + 141\n    3   UIFoundation                        0x08d872c2 _NSBlockNumberForIndex + 89\n    4   UIFoundation                        0x08d40fe5 -[NSLayoutManager(NSPrivate) _invalidateGlyphsForExtendedCharacterRange:changeInLength:includeBlocks:] + 727\n    5   UIFoundation                        0x08d412d1 -[NSLayoutManager(NSPrivate) _invalidateGlyphsForExtendedCharacterRange:changeInLength:] + 64\n    6   UIFoundation                        0x08d71b34 -[NSLayoutManager _invalidateGlyphsForCharacterRange:editedCharacterRange:changeInLength:actualCharacterRange:] + 167\n    7   UIFoundation                        0x08d73c34 -[NSLayoutManager textStorage:edited:range:changeInLength:invalidatedRange:] + 221\n    8   UIFoundation                        0x08d73fce -[NSLayoutManager processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:] + 85\n    9   UIFoundation                        0x08d9e3db -[NSTextStorage _notifyEdited:range:changeInLength:invalidatedRange:] + 153\n    10  UIFoundation                        0x08d9defa -[NSTextStorage processEditing] + 458\n    11  UIFoundation                        0x08d9dcfd -[NSTextStorage edited:range:changeInLength:] + 353\n    12  UIFoundation                        0x08d9d2e8 -[NSConcreteNotifyingMutableAttributedString edited:range:changeInLength:] + 73\n    13  Foundation                          0x005652bb -[NSConcreteMutableAttributedString replaceCharactersInRange:withAttributedString:] + 441\n    14  UIFoundation                        0x08d9ff55 -[NSConcreteTextStorage replaceCharactersInRange:withAttributedString:] + 95\n    15  Foundation                          0x005ab60d -[NSMutableAttributedString setAttributedString:] + 91\n    16  zhuanla                             0x0014807d -[RCTText setAttributedText:] + 109\n    17  zhuanla                             0x0014724f __55-[RCTTextManager uiBlockToAmendWithShadowViewRegistry:]_block_invoke_2 + 191\n    18  zhuanla                             0x000dd4dd __45-[RCTSparseArray enumerateObjectsUsingBlock:]_block_invoke + 141\n    19  CoreFoundation                      0x013ea93a __65-[__NSDictionaryM enumerateKeysAndObjectsWithOptions:usingBlock:]_block_invoke + 106\n    20  CoreFoundation                      0x013ea83c -[__NSDictionaryM enumerateKeysAndObjectsWithOptions:usingBlock:] + 204\n    21  CoreFoundation                      0x013e1e95 -[NSDictionary enumerateKeysAndObjectsUsingBlock:] + 53\n    22  zhuanla                             0x000dd410 -[RCTSparseArray enumerateObjectsUsingBlock:] + 400\n    23  zhuanla                             0x0014713f __55-[RCTTextManager uiBlockToAmendWithShadowViewRegistry:]_block_invoke + 207\n    24  zhuanla                             0x0014754b __55-[RCTTextManager uiBlockToAmendWithShadowViewRegistry:]_block_invoke137 + 427\n    25  zhuanla                             0x0010d7c0 __27-[RCTUIManager addUIBlock:]_block_invoke + 112\n    26  zhuanla                             0x00116b4f __29-[RCTUIManager flushUIBlocks]_block_invoke + 335\n    27  libdispatch.dylib                   0x041635ea _dispatch_call_block_and_release + 15\n    28  libdispatch.dylib                   0x04185bef _dispatch_client_callout + 14\n    29  libdispatch.dylib                   0x0416b6bb _dispatch_main_queue_callback_4CF + 993\n    30  CoreFoundation                      0x0141413e __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE + 14\n    31  CoreFoundation                      0x013d2f10 __CFRunLoopRun + 2256\n    32  CoreFoundation                      0x013d237b CFRunLoopRunSpecific + 443\n    33  CoreFoundation                      0x013d21ab CFRunLoopRunInMode + 123\n    34  GraphicsServices                    0x04b792c1 GSEventRunModal + 192\n    35  GraphicsServices                    0x04b790fe GSEventRun + 104\n    36  UIKit                               0x02dbe9b6 UIApplicationMain + 1526\n    37  zhuanla                             0x0007c4ed main + 141\n    38  libdyld.dylib                       0x041b1ac9 start + 1\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\n. +1\nI hate the bounce in the browsers and WebViews!\nIt would be really wonderful I can disable the bounce.\n. It would be great\n. @frantic Thanks.\nThat is the problem.I didnt install subl.\nI will close this issue\n. This had been fixed in the latest version [#756](https://github.com/facebook/react-native/issues/756)\nTry update react-native \n. +1\nIt occurred when I updated the react native to the lastest version(0.4.0)\nMy code wasn't broken before I updated react native!\n. display:none would be very useful.\nIn some case I had to use transfom:translate() to move the element out of screen to hide it.\n. @checkraiser  I tried to create some component likeTabBarIOSwith customed button to toggle the content views without reset the contents state every time.\nIs there any way to achieve that?\n. @checkraiser  Thx!!!\n. It happens in ScrollView too.It should be a ScrollView bug.\n. @jaygarcia \nI think it is a bug,it happens in ScrollView too,not just in ListView.\nDrag quickly to make a momentum scroll and then stop drag but do not release the cursor. After a few seconds release the cursor.It will continue the momentum scroll.\n. If the outside container of this flexWrap: 'wrap' element doesn`t have a width.\nIt will crash.But if give the outside container a width style,It works fine.\n. a commit before have these errors,but fixed in the next commit.\nmy apology \n. ",
    "PhilippKrone": "@ide @sahrens Any movement on this issue? I think i have exactly the same problem.\n. @brentvatne Is there already an update concerning this feature? I'd love to use the css border-style as well :)\n. @brentvatne Is there already an update concerning this feature? I'd love to use the css border-style as well :)\n. Hi,\n@brentvatne: Thanks a lot!!\nOne question, purely out of curiosity: would it have been possible to include this directly via style={{borderStyle: ....}}? What are advantages // disadvantages of both solutions?\nRegards and again thanks!\nPhilipp\n. Hi,\n@brentvatne: Thanks a lot!!\nOne question, purely out of curiosity: would it have been possible to include this directly via style={{borderStyle: ....}}? What are advantages // disadvantages of both solutions?\nRegards and again thanks!\nPhilipp\n. @chirag04 Mhh, no really satisfied by this answer to be honest ;) I'm already using it as component, but that somehow does not \"feel right\", to be honest. Let's assume I want my view to have a dashed border and - in addition - some other stuff for which I will as well built such components. Then I do have a lot of nested components instead of having it in the style property.\n. @chirag04 Mhh, no really satisfied by this answer to be honest ;) I'm already using it as component, but that somehow does not \"feel right\", to be honest. Let's assume I want my view to have a dashed border and - in addition - some other stuff for which I will as well built such components. Then I do have a lot of nested components instead of having it in the style property.\n. Hi @brentvatne: Thanks for your answer! I totally understand the opinion of the RN team here concerning not wanting to have everything in the core due to the reasons mentioned by you. I don't really know whether the thing I'm now proposing makes sense at all (as I'm not really deep into how RN works \"behind the scene\"), but what about the following solution in Objective-C (using javascript pseudocode here, as I'm not that familiar with Objective-C out of my head - please assume the following code is written in Objective-C :smiley: ):\n``` javascript\n// register a new item for the style property\n// @param: name of style\n// @param: for which element\n// @param: handler function\nmyStyleHandler.register('borderStyle', RCTView, this.handleBorderStyle);\nhandleBorderStyle = function(prop) {\n  // copied from your code \n    _border = [CAShapeLayer layer];\n    _border.strokeColor = [UIColor colorWithRed:67/255.0f green:37/255.0f blue:83/255.0f alpha:1].CGColor;\n    _border.fillColor = nil;\n    _border.lineDashPattern = @[@4, @2];\n    [self.layer addSublayer:_border];\n}\n```\nWith such a way, it would still be \"out of the core\", and individual modules could be created (by different people) for different further CSS settings, but on the javascript side, you don't need to worry about that. \nDoes that make any sense?\nRegards\nPhilipp\nP.S. we can take this offline as well, if thats more appropriate. I'm \"eimood\" in #reactnative in IRC\n. Hi @brentvatne: Thanks for your answer! I totally understand the opinion of the RN team here concerning not wanting to have everything in the core due to the reasons mentioned by you. I don't really know whether the thing I'm now proposing makes sense at all (as I'm not really deep into how RN works \"behind the scene\"), but what about the following solution in Objective-C (using javascript pseudocode here, as I'm not that familiar with Objective-C out of my head - please assume the following code is written in Objective-C :smiley: ):\n``` javascript\n// register a new item for the style property\n// @param: name of style\n// @param: for which element\n// @param: handler function\nmyStyleHandler.register('borderStyle', RCTView, this.handleBorderStyle);\nhandleBorderStyle = function(prop) {\n  // copied from your code \n    _border = [CAShapeLayer layer];\n    _border.strokeColor = [UIColor colorWithRed:67/255.0f green:37/255.0f blue:83/255.0f alpha:1].CGColor;\n    _border.fillColor = nil;\n    _border.lineDashPattern = @[@4, @2];\n    [self.layer addSublayer:_border];\n}\n```\nWith such a way, it would still be \"out of the core\", and individual modules could be created (by different people) for different further CSS settings, but on the javascript side, you don't need to worry about that. \nDoes that make any sense?\nRegards\nPhilipp\nP.S. we can take this offline as well, if thats more appropriate. I'm \"eimood\" in #reactnative in IRC\n. @nicklockwood I can't think of a real use case as well at the moment, I just think that just because a certain CSS part is not implemented in the RN core should not mean to have it handled differently in the JS part, because basically, which parts are implemented in the core and which not was decided on specific use cases I think (at least thats what I was able to read from @brentvatne answer). So ideally, someone should just be able to write his styles in the standard View and just \"load the styles\", contrary to loading a lot of Views and somehow nest them etc.\nDoes that mean that borderStyle can/will get implemented in the core? :)\nRegards\nPhilipp\n. @nicklockwood I can't think of a real use case as well at the moment, I just think that just because a certain CSS part is not implemented in the RN core should not mean to have it handled differently in the JS part, because basically, which parts are implemented in the core and which not was decided on specific use cases I think (at least thats what I was able to read from @brentvatne answer). So ideally, someone should just be able to write his styles in the standard View and just \"load the styles\", contrary to loading a lot of Views and somehow nest them etc.\nDoes that mean that borderStyle can/will get implemented in the core? :)\nRegards\nPhilipp\n. @tadeuzagallo I have created a minimum example, thats why my response was taking a little longer. How I can reproduce it: open the app, refresh via cmd + R 2-3 times with a delay of approx 1sex. The error always occured for me, sometimes after the first refresh, sometimes after the third refresh.\nMyModule.m:\n``` javascript\nimport \"MyModule.h\"\nimport \"RCTConvert.h\"\nimport \n@implementation MyModule\nRCT_EXPORT_MODULE();\n\n(void)initImageSaving\n{\n  RCT_EXPORT();\n\nself.sessionQueue = dispatch_queue_create(\"ImageQueue\", DISPATCH_QUEUE_SERIAL);\nself.directory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];\nself.directory = [self.directory stringByAppendingPathComponent:@\"images\"];\nNSFileManager fm = [NSFileManager defaultManager];\n  NSError error = nil;\n  [fm removeItemAtPath:self.directory error:&error];\nBOOL isDirectory;\n  if (![fm fileExistsAtPath:self.directory isDirectory:&isDirectory] || !isDirectory) {\n    NSError error = nil;\n    NSDictionary attr = [NSDictionary dictionaryWithObject:NSFileProtectionComplete\n                                                     forKey:NSFileProtectionKey];\n    [fm createDirectoryAtPath:self.directory\n  withIntermediateDirectories:YES\n                   attributes:attr\n                        error:&error];\n    if (error)\n      NSLog(@\"Error creating directory path: %@\", [error localizedDescription]);\n  }\n}\n\n(void)saveImageToLocalFile:(NSString )url :(NSString )uid :(RCTResponseSenderBlock)callback\n{\n  RCT_EXPORT();\n\nNSString *pngFilePath = [self.directory stringByAppendingPathComponent:uid];\ndispatch_async(self.sessionQueue, ^{\n    UIImage *image = [[UIImage alloc] initWithData:[NSData dataWithContentsOfURL:[NSURL URLWithString:url]]];\nNSData *data1 = [NSData dataWithData:UIImagePNGRepresentation(image)];\n[data1 writeToFile:pngFilePath atomically:YES];\n\ncallback(@[pngFilePath]);\n\n});\n}\n@end\n```\nMyModule.h:\n``` javascript\nimport \"RCTBridgeModule.h\"\n@interface MyModule : NSObject \n@property (nonatomic) dispatch_queue_t sessionQueue;\n@property (nonatomic) NSString* directory;\n@end\n```\nindex.ios.js\n``` javascript\nvar TestProject = React.createClass({\nloadImage: function(url, name) {\n    console.log(url);\n    MyModule.saveImageToLocalFile(url, name, (filepath) => {\n      console.log(filepath);\n    });\n  },\ncomponentWillMount: function() {\n    MyModule.initImageSaving();\n      this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '1.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '2.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '3.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '4.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '5.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '6.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '7.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '8.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '9.png');\n    this.loadImage('http://www.logotypes101.com/logos/768/10DE8C77B2D70272024617C4E55D289F/Castle_Rock_Entertainment.png', '10.png');\n  },\nrender: function() {\n    return (\n      \n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js\n        \n\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+Control+Z for dev menu\n        \n\n    );\n  }\n});\n```\n. Thanks for your help, @brentvatne. I was already doing something similar (although not with an event listener, but just checking the current height in the componentDidMount method), but thought there might be something built in RN already, as this should be an issue for nearly every app, shouldnt it?\nRegards,\nPhilipp\n. @brentvatne Yes, it has worked. For the sake of documentation, I have done the following:\n1) around my \"Navigator\", I have added a view:\njavascript\n     <View style={[styles.flex1, this.getStatusBarHeight()]}>\n       <Navigator ....\n       />\n     </View>\n2) the method \"getStatusBarHeight()\" returns \"top: 20 - currentStatusBarHeight\":\njavascript\n  getStatusBarHeight: function() {\n    var t = 20 - this.state.currentStatusBarHeight;\n    return {\n      top: t,\n    }\n  },\n3) for the rest, I was following your minimal example @ https://github.com/brentvatne/react-native-status-bar-size\nSure, we can take a look at implementing something like that directly in RN!\nRegards\nPhilipp\n. Ok, weird.\n0.4.0:\n\n0.4.1:\n\nNo other changes done in the source code.\n. @brentvatne did not before, but just did - no success. I'll try to create a minimal example, let's see whether my weird behaviour can be localized. :-)\n. @brentvatne ok, I was able to figure it out, atleast to elimate the error, although I dont know the reason yet.\nOld stylesheet (working under 0.4.0 and not working under 0.4.1)\njavascript\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'stretch',\n    backgroundColor: '#ffffff',\n  },\nNew stylesheet (working under 0.4.0 and 0.4.1)\njavascript\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n  },\nSo it seems the interpretation of alignItems has changed from 0.4.0 to 0.4.1 - I can now fix the layout again for my app, but the root cause would be of interest for me anyway.\n. Mhh, I have to deep dive into this change - from a first look this might be what has caused my issue. Thanks for the hint!\n. Mhh, currently checking:\nhttps://github.com/facebook/react-native/commit/dd6f7743eb626a2b22e1d97130b3fea931f73b55\nAnyway, priority is rather low as a solid \"work around\" / fix can be used.\n. @brentvatne  Sure thing! :)\n1) Create a new RN project and add a static image in XCODE. I called it \"Test\" and added the following image: http://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/000080_Navy_Blue_Square.svg/2000px-000080_Navy_Blue_Square.svg.png\n2) use the following source code:\n``` javascript\n/*\n * Test app\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  Navigator,\n  Text,\n  Image,\n  View,\n  AlertIOS,\n  NetInfo,\n  TouchableHighlight,\n  AppRegistry,\n  StyleSheet,\n} = React;\nvar TestProject = React.createClass({\n  render: function() {\n    return (\n      \n\n\n\n\n                  SMIPE\n               \n\n\n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n  },\n    backdrop: {\n      flex: 1,\n      marginTop: 0,\n      alignItems: 'stretch',\n    },\n    backdropView: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      alignItems: 'stretch',\n      width: 250,\n    },\n    ClearBackground: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      flex: 1,\n      alignItems: 'center',\n      marginTop: 130,\n    },\n    appNameText: {\n      textAlign: 'center',\n      fontSize: 48,\n      fontFamily: 'Gill Sans',\n      color: '#ffffff',\n    },\n});\nAppRegistry.registerComponent('TestProject', () => TestProject);\n```\n3) Following behaviour:\n   RN 0.4.0. for both, \"alignItems: 'center',\" and \"alignItems: 'stretch'\" in the container style, it is working\n   RN 0.4.1. only for \"alignItems: 'center',\" it is working, for 'stretch', the text is not visible (I think it is moved somewhere out of the screen as the image has a higher width than the screen?)\n. Indeed setting the width and height works. I just figured out a case in which I'm only setting the height of an image (and no width, as I want to have the same aspect ratio as the original image) and this is not working correctly as well. I'm now calculating the width as well by just multiplying the calculated height with the (known) aspect ratio and it's working again.\nThanks a lot for all your support!\n. I was able to fix it by adding the following code in appdelegate.m - however, I wonder why it is not working in RCTPushNotificationManager.m: \njavascript\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo {\n    [[NSNotificationCenter defaultCenter] postNotificationName:@\"RemoteNotificationReceived\"\n                                                        object:self\n                                                      userInfo:userInfo];\n}\n. Hi binlaniua,\nwhat exactly do you mean? Can you give us your specific example (screenshot, code, etc.)?\nThanks!\nPhilipp\n. Hi amitverma,\nyour post is not showing correctly, as you are not using the markdown syntax correctly for code - could you fix that please?\nIf you want to disable a PanResponder, you can just set\n``` javascript\n  _handleStartShouldSetPanResponder: function() {\n    return false;\n  },\n_handleMoveShouldSetPanResponder: function() {\n    return false;\n  },\n```\nRegards\nPhilipp\n. I've tried to do the same thing as well some days ago and had no real luck. Some things a tried (which are kind of dirty though):\n- put everything in the datasource objects (as ide suggested)\n- re-create the datasource by changing a dummy value (so that the rows are re-rendered)\n- create a new datasource with the same content and pass it to the ListView\n- this.props.navigator.replace()\nI'm currently living with the last option, although it has probably some disadvantages. Had no time to investigate it any further.\n. Although I remember that option 3 (creating a new DS) did not work as well in some scenarios as the rows were not re-rendered (debugged a little bit into it and noticed that even with a new DS, the re-render method was not executed). Thats why I finally began to use option 4. I remember discussing with someone about that topic over there @ freenode about 2 or 3 days ago, but can't remember anymore. My context was adding a new item in a gridview (https://github.com/lucholaf/react-native-grid-view) on the same row, which did not make RN to re-render the row.\n. @brentvatne have you ever seen an error stack like this using your snippet?\n. @brentvatne I still have this issue, but am not able to make a runnable example.. Any chance to have a discussion, so I can focus my effort here? \n. Yea, its not working without the status bar code as well. It seems like a re-render (either triggered via setState or via forceUpdate()) is resulting in this error stack. \n. Small update: it seems to happen whenever I navigator.push() away from a certain (quite complex) screen. However, it does not happen when i push() towards this screen.\nDebugging shows it seems to be connected to the RCTImageDownloader (https://github.com/facebook/react-native/commit/fe4b4c2d83eebb9af05ce76b4337056d14cc30c4). When you draw an image with height only, not specifying a width (width e.g. given by parent container), this error occurs. If you specify the width, its not occuring.\n. Hi,\nis there any news on this topic? I get the same with 0.6.0-rc:\n2015-06-24 08:00:17.307 Yoloci[15250:17707298] * NSForwarding: warning: selector (0x0) for message '' does not match selector known to Objective C runtime (0x7fca9b385200)-- abort\n2015-06-24 08:00:17.308 Yoloci[15250:17707298] -[RCTExceptionsManager (null selector)]: unrecognized selector sent to instance 0x7fca9b15b660\n2015-06-24 08:00:17.311 Yoloci[15250:17707298] * Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[RCTExceptionsManager (null selector)]: unrecognized selector sent to instance 0x7fca9b15b660'\n* First throw call stack:\n(\n    0   CoreFoundation                      0x00000001077cec65 exceptionPreprocess + 165\n    1   libobjc.A.dylib                     0x0000000107463bb7 objc_exception_throw + 45\n    2   CoreFoundation                      0x00000001077d60ad -[NSObject(NSObject) doesNotRecognizeSelector:] + 205\n    3   CoreFoundation                      0x000000010772c13c forwarding** + 988\n    4   CoreFoundation                      0x000000010772bcd8 _CF_forwarding_prep_0 + 120\n    5   libobjc.A.dylib                     0x0000000107462448 _ZL27object_cxxDestructFromClassP11objc_objectP10objc_class + 127\n    6   libobjc.A.dylib                     0x00000001074709b1 objc_destructInstance + 96\n    7   libobjc.A.dylib                     0x00000001074709e4 object_dispose + 22\n    8   libobjc.A.dylib                     0x000000010747828e _ZN11objc_object17sidetable_releaseEb + 236\n    9   CoreFoundation                      0x00000001076a48eb CFRelease + 603\n    10  CoreFoundation                      0x00000001076c34de -[NSArrayI dealloc] + 78\n    11  libobjc.A.dylib                     0x000000010747828e _ZN11objc_object17sidetable_releaseEb + 236\n    12  libobjc.A.dylib                     0x00000001074788cd _ZN12_GLOBAL__N_119AutoreleasePoolPage3popEPv + 591\n    13  CoreFoundation                      0x00000001076c3f06 _CFAutoreleasePoolPop + 22\n    14  CoreFoundation                      0x00000001076f7dd3 __CFRunLoopRun + 2051\n    15  CoreFoundation                      0x00000001076f7366 CFRunLoopRunSpecific + 470\n    16  GraphicsServices                    0x0000000109107a3e GSEventRunModal + 161\n    17  UIKit                               0x000000010507c900 UIApplicationMain + 1282\n    18  Yoloci                              0x0000000102331edf main + 111\n    19  libdyld.dylib                       0x000000010956c145 start + 1\n    20  ???                                 0x0000000000000001 0x0 + 1\n. @sahrens I just tested that the lag does occur in the following version of ListView.js:\nhttps://github.com/facebook/react-native/commit/34cef28a10b7d44be453c072578b5b6c07a0dcd8#diff-b4c8e4c7b175f06ffa084d8dca28e86a\nbut not in the one before. Do you have any idea why your change here might result in a lag when updating a ListView by changing the value of scrollEnabled? \n. @sahrens to give you some background:\nI have a ListView with scrollEnabled={this.state.scrollEnabled}. Each row of this ListView has a panResponder and in the respective onPanResponderMove, I set the ListView to not being scrollEnabled via this.setState({scrollEnabled: false});\n``` javascript\n        <ListView\n          ref=\"listview\"\n          ...\n          scrollEnabled={this.state.scrollEnabled}\n          renderRow={this.renderActivity}\n          ...\n    />\n\n...\nrenderActivity: function(item, sectionID, rowID) {\n        ...\n      return    {\n                    if (Math.abs(gestureState.dx) > 10) {\n                      this.setState({scrollEnabled: false});\n                    }\n                  }}\n   }\n```\nAnd inside the SwipeableElement, I have:\n``` javascript\n    this._panResponder = PanResponder.create({\n       ...\n      onPanResponderMove: this._handlePanResponderMove,\n       ...\n    });\n_handlePanResponderMove: function(e, gestureState) {\n    this.props.responderMove(gestureState);\n  }\n```\nThe issue now is that the line this.setState({scrollEnabled: false}); seems to induce the lag (its really slow in e.g. IPhone 4s), where as this was not the case before the mentioned commit.\n. Hi @sahrens \nthanks for your help. I was already trying \njavascript\n                  responderMove={(gestureState) => {\n                    if (Math.abs(gestureState.dx) > 10 && this.state.scrollEnabled) {\n                      this.setState({scrollEnabled: false});\n                    }\n                  }}\nand this kind of helped, but there is a small lag the moment the one update occurs. I was just wondering as this has worked before without any lag and the one (small) change from your commit made it laggy, although I dont understand that at all, as your code is actually increasing the performance and not inducing lags. \nI was as well trying to use componentShouldUpdate, but its the same: one time (the moments its actually doing the re-rendering), there is a small lag. If i return false in componentShouldUpdate during the swiping of the rows completely, the ListView is not changing its \"scrollEnabled\" behaviour to false, resulting in a bad user experience due to a terminate of the swipe of the row once the ListView is moved.\nCan you tell me one sentence more about the setNativeProps way to update scrollEnabled? I currently use setNativeProps to set top/left/right etc., but not to set native features like scrollEnabled.\nThanks!\nPhilipp\n. Hi @sahrens \nthanks for your help. I was already trying \njavascript\n                  responderMove={(gestureState) => {\n                    if (Math.abs(gestureState.dx) > 10 && this.state.scrollEnabled) {\n                      this.setState({scrollEnabled: false});\n                    }\n                  }}\nand this kind of helped, but there is a small lag the moment the one update occurs. I was just wondering as this has worked before without any lag and the one (small) change from your commit made it laggy, although I dont understand that at all, as your code is actually increasing the performance and not inducing lags. \nI was as well trying to use componentShouldUpdate, but its the same: one time (the moments its actually doing the re-rendering), there is a small lag. If i return false in componentShouldUpdate during the swiping of the rows completely, the ListView is not changing its \"scrollEnabled\" behaviour to false, resulting in a bad user experience due to a terminate of the swipe of the row once the ListView is moved.\nCan you tell me one sentence more about the setNativeProps way to update scrollEnabled? I currently use setNativeProps to set top/left/right etc., but not to set native features like scrollEnabled.\nThanks!\nPhilipp\n. Update: just figured setNativeProps out. For reference:\n``` javascript\n                  responderMove={(gestureState) => {\n                    if (Math.abs(gestureState.dx) > 10 && this.state.scrollEnabled) {\n                    //  this.setState({scrollEnabled: false});\n                      this._listview.setNativeProps({scrollEnabled: false});\n                    }\n                  }}\n                  responderEnd={() => {\n                    this._listview.setNativeProps({scrollEnabled: true});\n                  }}\n...\n    <ListView\n      ref={component => this._listview = component}\n\n```\n. Update: just figured setNativeProps out. For reference:\n``` javascript\n                  responderMove={(gestureState) => {\n                    if (Math.abs(gestureState.dx) > 10 && this.state.scrollEnabled) {\n                    //  this.setState({scrollEnabled: false});\n                      this._listview.setNativeProps({scrollEnabled: false});\n                    }\n                  }}\n                  responderEnd={() => {\n                    this._listview.setNativeProps({scrollEnabled: true});\n                  }}\n...\n    <ListView\n      ref={component => this._listview = component}\n\n```\n. Hi @brentvatne I can happily close this topic, although I would still love to know the reason for the lag coming from the one commit. In case there is any explanation, feel free to reopen the topic and paste it in here for reference :)\n. ",
    "JoeStanton": "Thanks @vjeux. Good to know you're using a similar approach.\nIs exposing Facebook's Geolocation API near-future or does it make sense to keep working on mine for now? I don't plan to get it merged as my Obj-C is probably awful. ;)\nAlso, would this belong in React Core?\n. Hah no worries! I knew it wouldn't. Was just for the learning experience. Maybe I can assist with writing some docs when you start, and yeah I'll look at other API's as and when I need them.\n. You're right, sorry about that, I thought it would be something more specific to React. There seem to be no ill effects in doing this. Thanks!\n. Awesome, just checking :+1: \n. I've also been thinking about this, it seems like it would be best to rely heavily on npm to package both the JS and Obj-C code (for plugins) and have it integrate to the build process by scripts/convention. Most developers familiar with React will be used to npm but likely not have seen Cocoapods etc. before. Might reduce some friction and make contributing and versioning easier...\n. Not 100% sure if the require('moduleName') is driven entirely from @providesModule (I thought this was the case) or instead from the filename. I'm guessing they should be consistent anyway.\n. Makes sense. Thanks!\n. Submitted a PR fixing this earlier: https://github.com/facebook/react-native/pull/135\n. Fair enough - will wait for the real one to come out and keep this on my fork.\n. @vjeux Fixed up according to your comments. Not 100% sure if I got the docs in the right place so let me know if not.\nAlso:\n\n. :+1: Great thanks for all the feedback.\n. No probs! Done. Think the previous Travis build failed randomly as the xctool tests are running fine for me locally.\n. My bad, it was included inside the iOS folder as expected...\n. You can't just plug them in, but it's trivial to expose very similar Objective-C classes to the JS bridge (effectively you'd just need to implement the RCTBridgeModule protocol instead).\nDefinitely a lot of scope for to build on the work of Phonegap/Cordova.\n. Most likely they can be made available as NPM packages following the pattern of everything currently in /Libraries/. See my Vibration API example that was included in core: https://github.com/facebook/react-native/pull/154\nYou could imagine the same setup, but with a package.json in the library folder, of which it's contents could be published to NPM. These libraries can then be statically linked into your Xcode Project via the node_modules dir (which would be a manual step for now).\nI have some ideas for generating a react-native new-library command that would remove the need for some of this boilerplate and ease the creation of these libraries.\nAnd yes - We were referring to @frantic / @jordwalke's idea of adapting Cordova modules to something the bridge could consume. Thinking about it more I think it might not be worth the effort, but there is definitely some stuff we could learn/benefit from in Cordova plugins.\n. Closed by #440?\n. On the same sort of topic - I was going to have a stab at react-native new-library or similar, to generate a boilerplate XCode project to do Native bridging. Useful?\nI found this a bit difficult/time consuming when writing RCTVibration with my limited XCode experience and it could encourage consistency and best practices around exports, docs etc.\nIt would make each plugin nicely npm publish-able without too much effort, for features that don't belong in core.\n. Ok - removed the RCT prefix from everything :) Will wait for the docs to be merged around XCode linking instructions, and in the meantime attempt to port both Ruby scripts into Node.\n. Waiting on #440 first, as I have also ported this to Nodejs. Thanks @tadeuzagallo, Will link your documentation.\n. Planning to finish this off tomorrow if you're still interested in merging. cc/@vjeux\n. Pretty happy with this now, review away when you get time!\n. Ah that makes sense, global packages are annoying to update. Moved it back out.\n. Hey! My fault - Life got in the way for a few weeks. I can finish this up in the next couple of days if there's still the appetite for it?\n. Hey Guys - Finally had a little bit of time, can you take a look at this? AFAIK I can't put init.js inside the local-cli folder as @vjeux said previously. Does this still apply?\nSecondly, the init.js could be cleaned up nicely with some ES6 features, but I've targeted ES5 for the moment unless theres a way to run it through the packager (probably overkill).\n. Excellent - fixed that up.\n. I've also been playing around with this FYI. Might have something in a few days...\n. I've also been playing around with this FYI. Might have something in a few days...\n. Sure, I saw those issues but figured it was best to stay consistent initially. Let me have a stab at converting this stuff to node.\n. I think the latter sounds best. How about:\n- react-native new-library\n- react-native new-component\nBoth of which could take a --platform option, or just generate a .ios.js and a .android.js file you could delete as appropriate. I think in the spirit of keeping everything cross platform and not instacrashing, it might be better to just generate a stub every time.\n. Agreed, will remove.\n. Great, I'll wait for #300 to be merged and link to it. Much easier illustrated with some screenshots.\n. The only reason these are regex's is that I want to replace all occurrences of the token in each file. Really I need to escape the .'s though if I stick with this. I could instead use something like:\njs\nfunction replaceAll(str, search, replacement) {\n  return str.split(search).join(replacement);\n}\n. I think ImagePickerIOS.js should be ImagePickerIOS.ios.js (as referenced in extractDocs).\n. ",
    "steffenmllr": "I'm also trying to implement something like this with little to no knowledge of Objective-C :) \n@JoeStanton could you please share a working example on how to implement a UIImagePickerController ? \n. ",
    "ksokhan": "+1. Any chance of this? Would be a great to make this into a module.\n. ",
    "marcshilling": "@steffenmllr @ksokhan You can use mine https://github.com/marcshilling/react-native-image-picker\n. This is fixed in 0.7.0rc\nJust wanted to bring this up since I see some people doing it wrong here, textAlign is a prop directly on <TextInput>. Setting it as a style will not work. \n. Yeah like @shahbhavir said, this is all good for pushing new views, but does not take into account going backwards.\nI need view A (nav bar hidden) to push view B (with nav bar). And then be able to tap back and have the nav bar removed again. \nAlso take into account supporting the interactive pops by dragging edge of the screen. \nIn iOS world this is as simple as [self.navigationController setNavigationBarHidden:YES animated:animated]; in viewWillAppear of view A, and [self.navigationController setNavigationBarHidden:NO animated:animated]; in viewWillAppear of view B, but React Native doesn't have those concepts.\n. @brentvatne I'm working from the current master branch, and defaultSource is not working for me.\nHere's my code:\njavascript\n<Image style={styles.avatar}\n       source={{uri: 'http://cdn.macrumors.com/article-new/2015/06/Apple-Watch-Midnight-Blue-250x299-250x273.jpg?retina'}}\n       defaultSource={require('image!placeholder')} \n/>\nI use the network link conditioner tool to slow down my internet connection so that I can test this, and the image view remains blank until the URL is loaded, at which point it is displayed. I can confirm my \"placeholder\" image is working correctly because it is displayed fine when I do:\njavascript\n<Image style={styles.avatar}\n       source={require('image!placeholder')} \n/>\nDid this break again since 0.4.0?\n. Another thing I discovered - this for some reason works on the iPhone 4s simulator, but not any of the other ones...\n. @brentvatne Yeah, I am...and unlike last time, I can actually share a project as proof!\nhttps://github.com/marcshilling/ImageDefaultSourceExample\n. > update the navigation title from the current route component (ie, when something updates)\nI definitely have a need for this. And not just title - also the ability to dynamically update the left/right buttons from the current route component \n. I had custom fonts working in a native Android app. Trying to port it over to RN now and they aren't loading inside of <Text> components :(\n. @ccheever yes, exactly. I've tried putting the .ttf (and .otf) files in both /assets and /assets/fonts (I had to the do the latter on native). And then I declare text like so:\njavascript\n<Text style={{fontFamily: 'FuturaStd-ExtraBold'}}>Hello World</Text>\nAnd just for the record - I'm using the same exact font files and declaring <Text> the exact same way in an iOS React Native project and they are working.\n. @satya164 what if I need multiple, different custom fonts in my app? You approach seems to simply replace the default font with a single custom font.\n. @ide I don't really care about knowing when the JS has finished downloading, because as far as I can tell that when will never be fast enough.\nWhat you are suggesting is an interaction like this:\n1. User taps a table view cell\n2. Wait for the RCTJavaScriptDidLoadNotification to fire\n3. Push detail view controller\nTo me, this is unacceptable. A native iOS user would expect there to be no delay between steps 1 and 3. \n. @jaygarcia any particular instrument I should be monitoring? Nothing is really standing out other than my app being 130% CPU always like I said\n. I repeated your steps and actually am seeing an even lower React Native Runloop time than you.\n\nI do want to clarify - it's not the iOS Simulator process I'm having issues with. That is always around 0% like you show in your video. The process is the actual name of my app - Wego\n\n. @dvine-multimedia could you share your growing text input component? I have a similar need\n. I get this warning randomly even without nested ScrollViews. No clue what it means.\n. Closing this - weird behavior from my react fork\n. The image has a width and height. Like I said, the image loads on non-iPhone 4s devices. Also, using a non-.jpeg image source on the 4s displays an image - leading me to believe it is specific to the 4S and JPEG images.\n. This is annoying. Yes, you're right - in a fresh react-native init project that works. However I am having all sorts of issues with <Image> with my particular project setup, which unfortunately I can't easily share. See #1516 \n. So in a new react-native init project, the exact same code from my other project works. I guess I'll go set some breakpoints in Image.ios.js...\n. Yep - just discovered this myself.\n. The password prop is working for me now on 0.6.0.\n. @ide but, there are no other scroll views...the ListView is at the top level.\n. Aha! I found it - it was my slide out side menu that had a ScrollView in it. Setting scrollsToTop={false} on that did the trick. I also did not know this was default UIKit behavior! Thanks @ide\n. This is default iOS behavior since iOS 7 when they made the Navigation Bar translucent. Content is supposed to be able to visually scroll beneath the nav bar. \nAnyway, if you don't need that functionality, just set paddingTop: 64 on your container style which will start everything beneath the nav bar.\n. It should be on by default. Make a ScrollView with some colored views in it and scroll it up - you should see the colors bleed through a little bit.\n. I got this working by doing the following:\n1. Go to Build Settings in Xcode and under \"Header Search Paths\" add $(SRCROOT)/node_modules/react-native/Libraries/**\n2. At the top of AppDelegate: #import \"RCTPushNotificationManager.h\"\n3. Also in AppDelegate, add:\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n{\n  [RCTPushNotificationManager application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n}\n1. In RCTPushNotificationManager, around line 141, comment out the #if #else #endif and replace it with:\nif ([[UIApplication sharedApplication] respondsToSelector:@selector(registerUserNotificationSettings:)]) { // iOS 8\n    id notificationSettings = [UIUserNotificationSettings settingsForTypes:types categories:nil];\n    [[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];\n    [[UIApplication sharedApplication] registerForRemoteNotifications];\n  }\n  else {\n    [[UIApplication sharedApplication] registerForRemoteNotificationTypes:types];\n  }\nThe #if #else macro is checking the minimum supported version for your project. This is a bad check (obviously), because if you are supporting iOS 7 but running on iOS 8, it will call the wrong code. respondsToSelector is the correct way to handle this.\nAfter these steps, I finally got the push notifications popup when calling PushNotificationIOS.requestPermissions();\n. @jtremback SUPER frustratingly, this seems to work just the way I'd expect (https://rnplay.org/apps/nWGxtw)\nHowever, in my project, of course it does not work that way.\nSee my updated first post.\n. @jtremback I'm on the master branch...0.6.0\n. I'm having a similar issue. Trying to dynamically add items the beginning of my ListView, but when I call setState to update the DataSource, it doesn't work correctly. I do get a new row added (to the end), but it's just a duplicate of the last item.\nBefore insertion:\n[A]\n[B]\n[C]\nThen, after inserting [D] at the beginning of my DataSource array I get:\n[A]\n[B]\n[C]\n[C]\nIf I explicitly return true from rowHasChanged, I get the expected result:\n[D]\n[A]\n[B]\n[C]\n. You're right about the clear button - apologies for not looking into that first. UITextField's do have a rightView that can be set to a custom UIButton, but at that point it's probably easier to build a new react component.\nCursor tintColor should definitely be possible though!\n. @nicklockwood \nConsidered that, but it seemed like getCurrentPosition() was the only place that actually adds anything to the pendingRequests so I figured it wasn't necessary. Guess it doesn't hurt either way.\n. Good call...updated!\n. ",
    "skevy": "I just want to chime in here and say @vjeux's explanation of animations is one of the best ways I've ever seen animation code described. +1 and bookmarking this thread for later reference.\n. It's not documented yet...but here is what @vjeux mentioned above: https://github.com/facebook/react-native/tree/d20a6e9d2d92bfc6bc81cc828c4008af1c7a7760/Libraries/ART\n. cc @nickhudkins\n. cc @nickhudkins\n. @ericvicenti running into this issue as well...any updates on the refactor?\n. @ide any progress on this library? or any tips on how to do this?\n. This is iOS expected behavior - views with 0 opacity don't receive touches (react native or not)\n. FYI I refactored scrollTo and also allowed for custom easing. @ide @vjeux \n. @vjeux does the TimingAnimation, DecayAnimation, etc. stuff already exist somewhere? I can't find it. Or is it in FB's repo\n. I agree that the prop driven API is interesting...but obviously in order to really make it viable, I think it would need to become idiomatic React...as right now, idiomatic React (at least, the public facing version) seems to be using refs to perform events on components.\nI think @ide hits the nail on the head when he relates this API to making other components more usable and less imperative. I think there's a lot of power in that idea, and would be curious to see it explored further.\nThat being said...I think that keeping the scrollTo function and expanding on it is a good first step. I would love to add the animation stuff and agree it's better than passing in some weird options object...but I guess we'll just need to wait for what you come up with, @vjeux.\nShould we keep this open just to remind us that it's here? Or should I close and revisit the refactor once the animation API you're talking about lands?\n. It's urgent, but I don't mind keeping the fork. \nThanks for the feedback, and I look forward to seeing the new API!\n. @ericvicenti ran into this literally 1 hour ago. Already pulled this into my own fork. Thank you for fixing. :+1: \n. @ide do you have a link to that discussion?\n. Cool, so based on that, we should work on updating Navigator to use that new pattern, rather than the StaticContainer pattern\n. @ericvicenti I saw somewhere you were working on a refactor of Navigator...does it include this change?\n. @ide fwiw, doing view.window.screen.scale produces blurry results (as if it's not the right scale), where as [UIScreen mainScreen].scale does not. This is on an iPhone 6+. I didn't dig too much deeper (on a deadline), but I just wanted to let you know.\n. @ide fwiw, doing view.window.screen.scale produces blurry results (as if it's not the right scale), where as [UIScreen mainScreen].scale does not. This is on an iPhone 6+. I didn't dig too much deeper (on a deadline), but I just wanted to let you know.\n. @nicklockwood yep. view.window is indeed nil :+1: \n. @nicklockwood yep. view.window is indeed nil :+1: \n. Totally agree.\n. @cpojer followed your recco and added destructuring here\n. Sure np.\n. @martinbigio check out this explanation and let me know if that's good.\n. Reword: \"[rnpm](http://github.com/rnpm/rnpm)\" is a community project that allows linking of native dependencies automatically:\n. Reword: \"[rnpm](http://github.com/rnpm/rnpm)\" is a community project that allows linking of native dependencies automatically:\n. @vjeux just pointing out that I renamed this method as we discussed, as to allow for proper class inheritance and to not break due to babel-plugin-class-private-props.\ncc @martinbigio \n. We may not need to - I'd be happy to prune. But, I did see that CSSCore was blacklisted from downstream...so I thought there might be a place where you guys are using it internally...which is the only reason these stubs really exist anyway (otherwise we'd require from fbjs everywhere). But, I could be wrong. :)\n. We may not need to - I'd be happy to prune. But, I did see that CSSCore was blacklisted from downstream...so I thought there might be a place where you guys are using it internally...which is the only reason these stubs really exist anyway (otherwise we'd require from fbjs everywhere). But, I could be wrong. :)\n. This may cause an issue. For instance, I use Zsh as my shell...but I'm pretty sure my .bashrc file is sitting in my home folder.\n. nit: http --> HTTP\n. Perhaps we should write our own docs for fixing transport security, rather than linking to SO?\nThoughts @ide or @brentvatne?\n. @andrewsardone agreed wholeheartedly.\n@hfossli I think in the docs, we should recommend what Andrew says -- to register an exception for localhost.\n@andrewsardone or @hfossli - either of you want to work on another PR to add this to the CLI?\n. https://github.com/medikoo/es6-symbol/blob/master/index.js#L3\nAm I reading that wrong? It seems like it's checking for native, global Symbol before it polyfills.\nOr would you rather have that check in our code?\n. @davidaurelio np :) If you'd rather me move the check into RN so it's more clear, I'm happy to do that!\n. Thanks gentlemen!\n. I thought about that -- but what are your thoughts on if there are multiple project roots?\n. Let's default to the first project root, and I'll add a command line option to specify a babelrc path.\n. This is getting moved anyway @martinbigio in #5214\n. This is getting moved anyway @martinbigio in #5214\n. Use semicolons please :)\n. Use semicolons please :)\n. nit: space around curly braces\n. nit: space around curly braces\n. nit: space around braces\n. nit: space around braces\n. Don't use short version of if...use curly braces and put the return on a new line.\n. Don't use short version of if...use curly braces and put the return on a new line.\n. Thanks. Appreciate the help!\n. Thanks. Appreciate the help!\n. @astreet I followed the usage of addSynchronousHookWithName that's used throughout the rest of RCTJSCExecutor...I don't see any error tracking anywhere in the other call sites. Not sure if it's handled higher up the chain.\n. @astreet I followed the usage of addSynchronousHookWithName that's used throughout the rest of RCTJSCExecutor...I don't see any error tracking anywhere in the other call sites. Not sure if it's handled higher up the chain.\n. This is a great idea. I'll figure out a good way to do this.\n. This is a great idea. I'll figure out a good way to do this.\n. Ah. You're right.\n. Ah. You're right.\n. @ide I was just matching other places in the file. I guess I could update the whole file...are template strings supported everywhere now? (the local-cli isn't run through babel-register)\n. This was a remnant of testing in the middle of the night and me being tired. Will fix. :)\n. Nope...turns out that function takes an \"assetName\" param. So we're gonna leave it alone here, and change it where the script is executed in OnLoad.cpp\n. Of course it should! :)\n. :+1: \n. Yah, but I can remove them if you want. It just puts some images in there so you can see the effect. The images that are currently in this list are broken links.. Yes they were.. Hmm.\nx'' + (2[zeta][omega]_0)x' + [omega]^2x = 0?. Might want to put this in like, an \"oss-flow\" folder @hramos.. ",
    "NecoleYu": "+1\n. ",
    "wootwoot1234": "Thanks @vjeux.  I'm new to React Native and still trying to wrap my head around everything.  I just re-read this thread after playing around with animations and it's very helpful.\nI've been using AnimationExperimental, is that the same thing at Pop?  If not, is there a good example out there of using Pop in React Native?  If AnimationExperimental is an implementation of Pop, do you have an example of using the callback?  I would like to chain animations.\n. @brentvatne, you're all over the place!  :)  You've been really helpful to me today, thanks!  I'll check out the js animations and will look forward to the new animations api.\n@skevy thanks for the link, I'll check that out too.\n. @jaygarcia plugins or ionic?  I think plugins could be really useful since currently react native is limited in how it can interact with the hardware.  Ionic by itself is a very nice mobile html5 framework but I'm not sure how it would fit in with react native.  They have have done a great job with ngCordova and it might be a good starting point for which plugins to port to react native.\nReact native could use some plugins, right?  I'm not missing something am I?\n. @jaygarcia Cordova plugin don't use html, at least none that I can think of.  They are purely javascript to native which is what react native plugins would be.  I'm all about react native and not using a webviews but cordova plugins don't have anything to do with the webview.  So to answer \"why\", because cordova has done 90% of the ground work, just need to change the bridge from cordova to react native.  Maybe I don't understand what you mean or maybe you don't know what a cordova plugin is but I can't think of why not.\n. I think this could be really useful because it will allow the use of js libraries that generate base64 images.  For example, I'm currently wanting to generate a simple graph.\n. @jaygarcia  Modules can be added by anyone.  Right now I'm just keeping an eye on github for new repositories.  Let me know if you have any ideas on where else to look.\n. @jaygarcia  Modules can be added by anyone.  Right now I'm just keeping an eye on github for new repositories.  Let me know if you have any ideas on where else to look.\n. +1\n. @brentvatne  cool! links broken though.  ;)\n. @owais I figured that out as well just now.  Worked great.  Here is what I did (same thing as @owais just in different words incase someone is confused.):\nIt had to do with a component I was using, in my case react-native-device.  What I had to do to fix it was delete the /node_modules folder located in the component. AppName/node_modules/React-Native-Component/node_modules.\nI also updated the dependencies in the package.json file also located in the component folder AppName/node_modules/React-Native-Component/package.json and change the react-native dependency to (or something similar):\n\"peerDependencies\": {\n    \"react-native\": \">= 0.4.0 < 1\"\n  },\nWhy do components need to specify react native as dependency.  Seems like it's implied, right?  Can I just remove the dependency?\n. simulator\n. @jeanregisser Yup. :/  I'm not sure how but it was on.  Thanks!\n. ",
    "jimjeffers": "I'm running into the same issue here. Here are my local node and npm versions just for reference:\n\u2192 npm -v\n2.1.7\n\u2192 node -v\nv0.10.33\n. Yep, I'm running into this issue as well:\n```\n[TypeError: Object # has no method 'catalystMiddleware']\nTypeError: Object # has no method 'catalystMiddleware'\n    at getAppMiddleware (/Users/jim/Code/react-native/packager/packager.js:70:24)\n    at runServer (/Users/jim/Code/react-native/packager/packager.js:89:10)\n    at Object. (/Users/jim/Code/react-native/packager/packager.js:42:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:929:3\n\n\n\nERROR: could not create packager - please shut down any existing instances that are already running.\n```\n. Resolved!\n. \n\n\n",
    "ColinEberhardt": "Thanks @amasad - this is the strange thing, when I add a console.log ...\n.then(function(content) {\n        console.log(content);\n        var packageJson = JSON.parse(content);\nI observe the following:\n```\n--- snip lots of package.json output above ---\n{\n    \"main\" : \"./lib\"\n}\nSyntaxError: Unexpected end of input\n    at Object.parse (native)\n    at /Users/colineberhardt/Projects/react-native/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js:271:32\n    at _fulfilled (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:787:54)\n    at self.promiseDispatch.done (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:816:30)\n    at Promise.promise.promiseDispatch (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:749:13)\n    at /Users/colineberhardt/Projects/react-native/node_modules/q/q.js:557:44\n    at flush (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:442:13)\n[20:29:18]  find dependencies\n```\ni.e. it outputs lots of package.json output, all of which looks fine. Then it hits the error but I don't see content in the console log.\nI've added logging to try and determine which file is causing issues:\nif (packagePath != null) {\n      console.log('opening package: ' + packagePath);\n      return readFile(packagePath, 'utf8')\n        .then(function(content) {\n          console.log('opened package: ' + packagePath);\n          var packageJson = JSON.parse(content);\nOn npm start I see a whole lot of logging, ending as follows:\nopening package: /Users/colineberhardt/Projects/react-native/node_modules/react-tools/node_modules/commoner/node_modules/recast/node_modules/source-map/node_modules/amdefine/package.json\nopened package: /Users/colineberhardt/Projects/react-native/node_modules/react-tools/node_modules/commoner/node_modules/recast/node_modules/source-map/node_modules/amdefine/package.json\nopening package: /Users/colineberhardt/Projects/react-native/node_modules/module-deps/node_modules/browser-resolve/node_modules/resolve/test/resolver/biz/node_modules/garply/package.json\nopened package: /Users/colineberhardt/Projects/react-native/node_modules/module-deps/node_modules/browser-resolve/node_modules/resolve/test/resolver/biz/node_modules/garply/package.json\nThen as soon as I hit the URL in the browser, the following error is logged:\nSyntaxError: Unexpected end of input\n    at Object.parse (native)\n    at /Users/colineberhardt/Projects/react-native/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js:272:32\n    at _fulfilled (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:787:54)\n    at self.promiseDispatch.done (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:816:30)\n    at Promise.promise.promiseDispatch (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:749:13)\n    at /Users/colineberhardt/Projects/react-native/node_modules/q/q.js:557:44\n    at flush (/Users/colineberhardt/Projects/react-native/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:442:13)\n[20:34:18] <START> find dependencies\nI'm a bit baffled as i would have expected some logging before the error to indicate which package.json it was opening.\nConfused!\n. Thanks @amasad - here's the culprit:\nWARNING: malformed package.json:  /Users/colineberhardt/Projects/react-native/node_modules/npm/test/fixtures/config/package.json\n. Ahhhh!!! Found the issue - I mistakenly cut and paste the instructions from the README:\nnpm install npm start\nNote, the lack of line-break, which causes an npm install npm. Must have just been running on auto-pilot!\n. Fixes #156 \n. Arggh .. ignore me, I'm being an idiot. This fails:\nreturn React.createElement('Text', { style: styles.text }, 'Hello World!');\nWhere Text is passed as a string, but this works:\nreturn React.createElement(Text, { style: styles.text }, 'Hello World!');\n. I agree, the error message isn't great. As the react-native behaviour differs from react in this case, one option is to adapt the createElement function, and add the extra parameter type checking here:\nhttps://github.com/facebook/react-native/blob/master/Libraries/ReactIOS/ReactIOS.js#L32\nWhat do you think?\n. Thanks @ide - just tested your code and confirm that it fixes this issue.\n. Fixed by https://github.com/facebook/react-native/commit/06a87bec25d7184269ef95d5190ef63ce77f0942\n. ",
    "mrscobbler": "I restarted my computer and tried running npm start again, without any luck. I also changed MAX_WAIT_TIME = 30000; in the react-packager/src/FileWatcher/index.js file and didn't have any luck with that either.\nWhen I ran npm install this is the output I got:\nnpm WARN package.json punycode@1.2.4 punycode is also the name of a node core module.\nnpm WARN package.json stacktrace-parser@0.1.1 No repository field.\nnpm WARN prefer global npm@2.5.0 should be installed with -g\nSo I ran npm install -g. I'm not sure if that makes a difference or not.\n. Oh yes, I did type that. I did the rm -Rf node_modules and npm install, but I'm still seeing the watcher error happening. When I run the simulator, the app loads, and a red screen appears. This is what the terminal has:\nError: Watcher took too long to load.\n    at null._onTimeout (/Users/mrscobbler/Projects/react-native/packager/react-packager/src/FileWatcher/index.js:37:16)\n    at Timer.listOnTimeout as ontimeout\n[15:02:49]  request:/Examples/Movies/MoviesApp.includeRequire.runModule.bundle\n. Ok I think I fixed my problem! I had installed watchman on my computer and then upgraded my computer to Yosemite so I could get the latest version of Xcode. I uninstalled watchman and then reinstalled it. That fixed the problem. I'm guessing the version of watchman I had didn't work with Yosemite? Thanks for the help!\n. I think that would help. Thanks again!\n. ",
    "ghost": "@vjeux do you know if the CameraIOS component will be released anytime soon? I wanted to use the native camera but wasn't sure if I should implement something in the meanwhile or wait for the CameraIOS you mentioned. Thanks! \n. @vjeux Thanks for the heads up!  In that case, maybe I should go ahead and build a component and share it :) \n. +1\n. @larsvinter that totally worked. others may be able to bump to a version of react-native which supports jpg file types but I'm stuck on 0.4.2 at the moment and needed a clever solution. you're my hero.\n. @arunshan how about some env deets or a link to your source to make things\nconstructive?\nOn Tue, Jun 16, 2015 at 9:26 PM Josh Habdas jhabdas@gmail.com wrote:\n\nOn Tue, Jun 16, 2015 at 8:38 PM arunshan notifications@github.com wrote:\n\nUse this source={{ uri: \"google\", isStatic: true }} instead of\nrequire('image!google')\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/521#issuecomment-112620292\n.\n. @arunshan disregard. crossed threads\n. +1. That would be quite handy indeed.\n. Same problem here. I am not on a slow connection. It just seems like it never stops loading after\n\"This will walk you through creating a new React Native project in /Users/Name/AwesomeProject\"\n\n\nI have a 16mbit connection. It seems to create the node_modules and the package.json and that's it.\n. So, why was the bug closed? The bug is still there.\n. Ah ok, thanks.\n. Had the same issue after recently updating my OS X dotfiles and was able to resolve it using the method suggested by @cparmar82 with the --force flag on the uninstall.\n. breadcrumb https://github.com/facebook/react-native/issues/456 nom nom\n. ",
    "hinzundcode": "If you're looking for ideas, would be cool if I could open a share dialog (UIActivityViewController) using js.\n. I got the issue, too:\n```\nLaunching Dev Tools...\nFailed to run launchChromeDevTools.applescript { [Error: Command failed: /Users/chris/Projekte/AwesomeProject/node_modules/react-native/packager/launchChromeDevTools.applescript:668:671: script error: Expected class name but found property. (-2741)\n] killed: false, code: 1, signal: null }\n/Users/chris/Projekte/AwesomeProject/node_modules/react-native/packager/launchChromeDevTools.applescript:668:671: script error: Expected class name but found property. (-2741)\n```\nosx 10.10.2\nxcode 6.2\nchome 43.0.2349.0 canary (64-bit)\n. I changed \"Google Chrome\" to \"Google Chrome Canary\" in the applescript, now it works at least sporadic.\n. Sometimes I get this error:\nLaunching Dev Tools...\n[Error: not opened]\nError: not opened\n    at WebSocket.send (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/WebSocket.js:187:16)\n    at /Users/chris/Projekte/AwesomeProject/node_modules/react-native/packager/webSocketProxy.js:37:12\n    at Array.forEach (native)\n    at WebSocket.<anonymous> (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/packager/webSocketProxy.js:36:28)\n    at WebSocket.emit (events.js:98:17)\n    at Receiver.self._receiver.ontext (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/WebSocket.js:697:10)\n    at Receiver.opcodes.1.finish (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/Receiver.js:397:14)\n    at Receiver.expectHandler (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/Receiver.js:378:33)\n    at Receiver.add (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/Receiver.js:93:24)\n    at Socket.firstHandler (/Users/chris/Projekte/AwesomeProject/node_modules/react-native/node_modules/ws/lib/WebSocket.js:678:22)\n. You have to change \"Google Chrome\" to \"Google Chrome Canary\" in ./node_modules/react-native/packager/launchChromeDevTools.applescript\n. I tried, but I'm not very familiar with applescript\n. ",
    "danicomas": "+1 for CameraIOS\n. Conclusion: The more difficult things is the only that facebook don't want to do it xD Facebook engineers could do it in 1 hour :D @salutis For an API to develop mobile apps to have a list is required.\n. Of course not @kevindeleon . The ListView doesn't looks native! It is an horrible implementation! You know the official response. It is open source. Up to you xD\n. @sahrens I had problems in performance with a lot of rows. I have to try the latest version to verify again.\n. I agree with @kevindeleon.\n. I think that UITableView should include in the React core! @paramaggarwal\n@paramaggarwalIt a component makes with small contributors is not a cause to close this issue.\nIf people starts to create some examples with this is because it doesn't exist!!!!!!!!!!!!!!!!!!!!!!!!!!! :D\n. I think that UITableView should include in the React core! @paramaggarwal\n@paramaggarwalIt a component makes with small contributors is not a cause to close this issue.\nIf people starts to create some examples with this is because it doesn't exist!!!!!!!!!!!!!!!!!!!!!!!!!!! :D\n. OMG It is a basic component :S\n. Pull to refresh https://gist.github.com/jsdf/6930c0211e0dc5bf0227\n. Is it correct to use the event onEndReached for infinite scroll? I don't like because I need to have an array in js memory. :S\nA good example about how I can paginate the listview? @vjeux\n. If I use this onEndReached in iOS simulator works great but in iPhone 4 the scroll sometimes causes a lazy/strange effect. It is posible a memory problem? \nLook this video with simulator iphone 4S iOS 7.1:\nhttps://www.dropbox.com/s/101lfqwc0da9bir/VID_20150401_142655.mp4?dl=0\nAnd this with physical iphone 4 iOS 7.1:\nhttps://www.dropbox.com/s/ni8nwy5vxqbe58t/VID_20150401_144523.mp4?dl=0\nMy code is the following:\n``` js\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  ListView,\n  TextInput,\n  Image,\n  TouchableHighlight,\n  TabBarIOS,\n  SwitchIOS,\n  VibrationIOS,\n  DatePickerIOS,\n  SliderIOS\n} = React;\nvar AwesomeProject = React.createClass({\n  getInitialState: function() {\n    return {\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2\n      }),\n      movies: [],\n      loaded: false,\n      input: \"kk\",\n      selectedTab: \"Tab1\",\n      switchValue: false,\n      date: new Date(),\n      timeZoneOffsetInHours: (-1) * (new Date()).getTimezoneOffset() / 60,\n      sliderValue: 0\n    }\n  },\n  componentDidMount: function() {\n    this.fetchData();\n  },\n  fetchData: function() {\n    var movies = this.state.movies;\nfor (var i=0; i < 10; i++) {\n    var movie = {};\n    movie.name = \"name\" + i;\n    movie.detail = \"detail\" + i;\n    movies.push(movie);\n}\n\n this.setState({\n    dataSource: this.state.dataSource.cloneWithRows(movies),\n    movies: movies,\n    loaded: true,\n  });\n\n},\n  _onPressButton: function () {\n    VibrationIOS.vibrate();\n    alert(this.state.input);\n  },\n  onDateChange: function(date) {\n    this.setState({date: date});\n  },\n  onEndReached: function (argument) {\n    this.fetchData();\n  },\n  render: function() {\n    return (\n      \n {\n              this.setState({\n                  selectedTab: 'Tab1',\n              });\n          }}>\n          \n this.setState({input: text})}>\n            \n{'user input: ' + this.state.input}\n\n\n\n\n\n\n\n {\n              this.setState({\n                  selectedTab: 'Tab2',\n              });\n          }}>\n          \n\n              Tab2\n            \n this.setState({switchValue: value})}\n              style={{marginBottom: 10}}\n              value={this.state.switchValue}>\n            \n this.setState({sliderValue: value})}>\n            \n\n\n\n \n\n    );\n  },\n  renderMovie: function(movie) {\n    return (\n      \n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js{'\\n'}\n          Press Cmd+R to reload\n        \n\n          {movie.name}\n          {movie.detail}\n        \n\n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    paddingTop: 50\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n  },\n  listView: {\n    flex: 1,\n    paddingTop: 20,\n    backgroundColor: '#F5FCFF'\n  },\n});\nAppRegistry.registerComponent('AwesomeProject', () => AwesomeProject);\n```\nCould you reopen the issue? @vjeux\n. I have been disconnected in React the last month I can't help you sorry @bluemsn but I will try it again soon.\n. To send via WS is a good way using base64. What is your proposal @vkurchatkin?\n. If you have to send this image via WS you need to send this handle @vjeux?\n. Nice @vjeux We will need to wait for this.\n. ",
    "luigy": "This should do it if you're eager to try the latest as I am :)\n. ",
    "grgur": "Luigy's fix works. Thanks dude\n```\n$ npm start\n\nreact-native@0.0.1 start /Users/grgur/Projects/sdk/react-native-grgur\n./packager/packager.sh\n\n===============================================================\n |  Running packager on port 8081.     \n |  Keep this packager running while developing on any JS       \n |  projects. Feel free to close this tab and run your own    \n |  packager instance if you prefer.                            \n |                                                            \n |     https://github.com/facebook/react-native               \n |                                                            \n ===============================================================\nReact packager ready.\n``\n. It happened to me once. However a consecutivenpm start` ran just fine. \n. ",
    "galenandrew": "@vjeux sure thing! signed, and updated!\n. @nick not sure if this is what you were referring to but yes, we're able to \"sync\" our forks with any new commits made to the upstream (facebook) repo.\nHere's reference on how: https://help.github.com/articles/syncing-a-fork/\n. ",
    "jaisanth": "+1 for @ide 's suggestion. \n. ",
    "zetachang": "As an iOS developer, +1 on @ide 's suggestion.\n. Ctrl + Cmd+ Z in simulator to toggle the menu. You will find debug option there.\n. JavaScriptCore (which your react native code executed on) is officially supported only in iOS 7+, but according to this stackoverflow answer, it's possible to make JavaScriptCore linked correctly on iOS 6 with some hacks. \n. Looks like homebrewed npm needs sudo to install module globally. Relevant solution here\n. ",
    "Iragne": "i add this code and it solve the issue not sure if i introduce an other bug\nhttps://github.com/facebook/react-native/blob/1dba7e0a5a1553ee3a47cab8f753e980c4ab0aef/React/Views/RCTNavigator.m#L487-L495\n``` Objective-C\nBOOL jsGettingtooSlow =\n  //    --- previously not caught up --------          ------- no longer caught up ----------\n  viewControllerCount < previousReactCount && currentReactCount < previousReactCount;\nBOOL reactPushOne = jsGettingAhead && currentReactCount == previousReactCount + 1;\n  BOOL reactPopN = jsGettingAhead && currentReactCount < previousReactCount;\n// We can actually recover from this situation, but it would be nice to know\n  // when this error happens. This simply means that JS hasn't caught up to a\n  // back navigation before progressing. It's likely a bug in the JS code that\n  // catches up/schedules navigations.\n  if (!(jsGettingAhead ||\n        jsCatchingUp ||\n        jsMakingNoProgressButNeedsToCatchUp ||\n        jsMakingNoProgressAndDoesntNeedTo || \n        jsGettingtooSlow)) {\n    RCTLogError(@\"JS has only made partial progress to catch up to UIKit\");\n  }\n```\nFeel free to talk about it\n. yes  agree with you i would like to talk to @vjeux for that as soon he has time\n. hi every body \nI create the PR https://github.com/facebook/react-native/pull/1131\nMay be it will be better for everybody \n. You can close it the PR is validate \n. +1\ndo you create a PR ??\n@dvdhsu \n. +1\ndo you create a PR ??\n@dvdhsu \n. Hi all\ni create the PR https://github.com/facebook/react-native/pull/1406\nIt's solve for me the issue if you have a better idea to solve it feel free\nThanks\n. Hi all\ni create the PR https://github.com/facebook/react-native/pull/1406\nIt's solve for me the issue if you have a better idea to solve it feel free\nThanks\n. Well as far as i tests this issue it's an memory problem.\nIt's cause by the way to load the image.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Image/RCTImageLoader.m#L48\nObjective-c\nUIImage *image =  [UIImage imageWithCGImage:[representation fullResolutionImage] scale:1.0f orientation:(UIImageOrientation)orientation];\nI would like to propose an attribute to Image to suggest the loading of the asset Thumbail. but i'm not fan of that. I think the issue is more complex than that. I's an architecure one.\nfor thumb we need to use this method \nObjective-c\nUIImage *image = [UIImage imageWithCGImage:[asset thumbnail]];\nFeel free to talk about it\n@jaygarcia or @vjeux \n. Hi all\ni create the PR https://github.com/facebook/react-native/pull/1406\nIt's solve for me the issue if you have a better idea to solve it feel free\nThanks\n. @tjwudi The react is based on asyc and threads\nso image cannot block direcly the app.\ncan you provide more information about react version and your code thanks\n. may be this PR can solved your issue ?\nhttps://github.com/facebook/react-native/pull/1733\n. ... it should be this method ....\n``` Objective-c\n[[NSNotificationCenter defaultCenter] \n        postNotificationName:@\"Notificationname\" \n        object:self];\n```\n. sudo npm start\n. sudo npm start\n. it's cleary an issue with the size of the images.\nIt's a memory warning\n. As soon as you load big image in a list you get this problem i will investigate more.\nI solve in a way this issue on Library Asset https://github.com/facebook/react-native/pull/1406\n. yes if you want it will work.\nBut i think we should implement it in react \n. +1\n. https://github.com/Iragne/UIImage-ResizeMagick ;) it's a good start !!!\n. any news ?\n. Yes agree with you \nSorry for the error\n. ok @brentvatne \n. Hello sorry complex weekend for me and i didn't have time to work on it.\nI create a new PR Too mutch conflics with my version. https://github.com/facebook/react-native/pull/1704\n@bparadie I don't think it's good to not put the thumb in the queue you have a process to perform the thum creation. I correct the orrientation issue.\n. @bparadie thanks if you have other point please let me know.\n@brentvatne do you have time to validate it ?\n. ok good point ;)\n. The modification is done\n. ok\n. ok\n. How i can take the \"Nit\" word ?\n. ",
    "siuying": "@iragne patch worked for me, but I dont sure what reactBridgeDidFinishTransaction supposed to do when its jsGettingtooSlow.\n. package he shows same issue.\njavascript\n    // Some AMD build optimizers, like r.js, check for specific condition patterns\n    // like the following:\n    if (\n        typeof define == 'function' &&\n        typeof define.amd == 'object' &&\n        define.amd\n    ) {\n        define(function() {\n            return he;\n        });\n    }   else if (freeExports && !freeExports.nodeType) {\n        if (freeModule) { // in Node.js or RingoJS v0.8.0+\n            freeModule.exports = he;\n        } else { // in Narwhal or RingoJS v0.7.0-\n            for (var key in he) {\n                has(he, key) && (freeExports[key] = he[key]);\n            }\n        }\n    } else { // in Rhino or a web browser\n        root.he = he;\n    }\n. If you want to see what JXcore is capable of, check out this post. tl;dr, it run peerflix natively on iOS.\nThe benefit is that we run many native package (udp, http, openssl, leveldb, sqlite ...etc) out of the box, no need to stub them with fake library will bring many great nodejs stuff to mobile.\n. Yep this happens.\n. There is no document in React Native's JavaScriptContext, its not a web page. It might be easier to work to write a native module and bridge it.\n. If you are in China you might hit the GFW? \n. If you are in China you might hit the GFW? \n. @drkibitz Agreed! The actual fix should include figure out why the label is disappearing, properly relayout the views on rotate (#809), animate them, update view controllers so that layout guide work as expected ...etc.\n. ",
    "soheil": "+1\n. @magus magnificent! You should really do a pull request for this or add to http://react.parts/native-ios or this: http://www.reactnative.com/\n. I believe CLGeocoder does.\nOn Wed, Apr 1, 2015 at 2:00 PM, Tadeu Zagallo notifications@github.com\nwrote:\n\nWhat you need for that is Reverse Geocoding, iOS doesn't provide it,\nyou'll have to use 3rd party APIs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/594#issuecomment-88630388\n.\n. In the meanwhile I guess I'll be using NativeModules to access CLGeocoder,\nhope I don't have to be forced to keep doing that for many other things.\n\nOn Wed, Apr 1, 2015 at 2:39 PM, Brent Vatne notifications@github.com\nwrote:\n\nOh neat, CLGeocoder integration would be a nice addition\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/594#issuecomment-88638872\n.\n. I created a gist for those interested:\n\nobjectiveC code:\nhttps://gist.github.com/soheil/cfdb4cad068ac12d6142\njs code:\nhttps://gist.github.com/soheil/64e6ef71179c3de72822\n. Forgot #import \"RCTEventDispatcher.h\"\n. +1\n. I found wrapping everything in this fixes this issue:\n<View style={{flex: 0, height: require('Dimensions').get('window').height}}>\n. +1\n. Tested on device with the same results.\n. Just throwing a few ideas out there: 1. using an old version? 2. multiple\ndefinition for RCTReachability?\nOn Sun, Apr 19, 2015 at 10:30 PM, Brent Vatne notifications@github.com\nwrote:\n\ncc @tadeuzagallo https://github.com/tadeuzagallo - I stepped through\nRCTReachability and couldn't find the root cause of the issue -\nRCTReachabilityCallback always enters the RCTReachabilityStateNone block,\nany ideas?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/873#issuecomment-94359987\n.\n. Good stuff!\n\nOn Mon, Apr 20, 2015 at 9:58 AM, Brent Vatne notifications@github.com\nwrote:\n\nthanks @nicklockwood https://github.com/nicklockwood [image: :smile:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/873#issuecomment-94508426\n.\n. I can verify that the problem occurs on device as well.\n. @brendanv with the host change it works fine on device now!\n. I doubt he minds it. I always assumed github was smart enough to first show repo-related usernames in the auto-complete dropdown, but I guess I was WRONG!\n. beautiful!\n\nI also thought it'd be nice to be able to add an icon to NavigationIOS\ninstead of text:\nso in RCTWrapperViewController.m I added an image if there is no text\npassed (it'd be nice to add its own prop):\n```\n- (void)viewWillAppear:(BOOL)animated\n...\nself.navigationItem.title = _navItem.title;\n\nif (!_navItem.title) {\n  UIImage *image = [UIImage imageNamed:@\"logo.png\"];\n  self.navigationItem.titleView = [[UIImageView alloc]\n\ninitWithImage:image];\n    }\n```\ngood job though!\n. @brentvatne also this bug still occurs even with the StatusBar height known, I thought I could modify the height of the main view based on the StatusBar height but that didn't work. So I think we need another solution, but your StatusBar size is still a nice addition.\n. I haven't tried - margin, but increasing the height only worked when status\nbar got bigger but when it shrunk again decreasing the height oddly enough\nmade no effect.\nOn Wed, Apr 22, 2015 at 9:06 PM, Brent Vatne notifications@github.com\nwrote:\n\n@soheil https://github.com/soheil - you could add some negative margin\nwhen the status bar is larger to offset it\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/972#issuecomment-95421794\n.\n. There you go: https://gist.github.com/soheil/d96c86fa72b68317e73a\n\nAlso if you change the number of rows to less than 10 it won't refresh the rows after state changes.\n. yes it was because I had in inside a navigator except that it was one of\ntwo components in the navigator (split screen with map on top and list at\nthe bottom) so I guess it always assumes there will be a nav bar so it adds\na top padding regardless.\nOn Fri, May 29, 2015 at 11:13 AM, Christopher Dro notifications@github.com\nwrote:\n\n@soheil https://github.com/soheil Were you able to figure this one out?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1217#issuecomment-106893692\n.\n. sorry I stopped using react native\n\nOn Sun, Jun 7, 2015 at 8:31 PM, fxwan notifications@github.com wrote:\n\n@soheil https://github.com/soheil - aw man, sorry to hear that. Which\nanimations are you having trouble with? When you say they don't feel\nnative, is it because they feel janky or just don't seem like they are the\ncorrect animations?\n@brentvatne https://github.com/brentvatne The animation of Navigator\nfeels really janky and the animation is not identical to the NavigatorIOS.\nThe interpolator of Navigator module should be \"RightToLeft\" if I remember\ncorrectly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1219#issuecomment-109849728\n.\n. \n",
    "yanxi-me": "+1\n. ",
    "Duan112358": "+1\n. @lukasreichart\ntest example of react-native/Examples/Movies\n\nthe bug is sometimes unexpectable that I couldn't figure it out.\nthe stack log is below\n\nwhen test on a real device, the touch event doesn't respond on some list item after scrolling down to load more.\nIt is easy to reproduce\n-  scroll down to load more and scroll back\n-  random touch some list item\nIf some doesn't respond, then after a few seconds, the bug is appeared again.\n. ",
    "browniefed": "@brentvatne already solved with #207 and specifically https://github.com/facebook/react-native/commit/b72acc2313db90b414e53b4ede533071284de4c2\n. If you're interested refer to this post here. It looks like @SanderSpies is working on a WebSocket polyfill, maybe you could give him a hand. Also Firebase is looking into it so that's promising.\nhttps://groups.google.com/forum/#!topic/firebase-talk/aoPNvQQsVUE\n. If you're interested refer to this post here. It looks like @SanderSpies is working on a WebSocket polyfill, maybe you could give him a hand. Also Firebase is looking into it so that's promising.\nhttps://groups.google.com/forum/#!topic/firebase-talk/aoPNvQQsVUE\n. This would be super useful, especially if the loaded data got passed back on success in base64 encoded string or some workable format.\n. Shucks. I don't know ObjectiveC and this seems like a large thing.\nI guess no time like the present to learn. I'll see if I can get something working, no guarantees.\nI'll close this out for now. Thanks for the response.\n. @brentvatne thanks, I'm sure I will.\n@spicyj I think there needs to be some documentation around react-art. I've been writing a lot of it and would love to document it so it might get some more use by people.\nIs there a particular documentation style you would prefer, I imagine a clone of Jekyll style sites like react-native , flux, and flow?\n. A static analysis done to determine what images to include or not, so doing dynamic images is not supported. At least that is what I assume is going on here.\n. No it isn't, I'll remove it.\n. No it isn't, I'll remove it.\n. The state is an enum that indicates the state of the drag \"dragging\", \"canceled\" , \"drop\", etc. I'll get right on this.\n. The state is an enum that indicates the state of the drag \"dragging\", \"canceled\" , \"drop\", etc. I'll get right on this.\n. I don't think it is. Someone online in my googlings had said it was necessary to auto generate the getters and setters, but I will remove it.\n. I don't think it is. Someone online in my googlings had said it was necessary to auto generate the getters and setters, but I will remove it.\n. How does it work?. *1?. *1?. ",
    "coderdave": "@jaygarcia Do you mind sharing the final code to get this layout to work? Thanks.\n. @jaygarcia Do you mind sharing the final code to get this layout to work? Thanks.\n. @jaygarcia No, mainly just the style code... and maybe the basic components needed that represent the layout.\n. @jaygarcia No, mainly just the style code... and maybe the basic components needed that represent the layout.\n. @brendanv Great, thanks for the clarification!\n. This happened to me quite a bit also on versions less than v0.4.0.\nI noticed that if I click the \"Reload JS\" link on the bottom right of the red screen instead, it works fine.\n. I've tried both export EDITOR=atom and export REACT_EDITOR=atom in my .bashrc file but I still get the following error in the node terminal window when I click on one of the stack trace.\nOpening /Users/coderdave/Documents/apps/MyApp/index.ios.js with subl\nexecvp(): No such file or directory\n ERROR  spawn ENOENT\n{\"code\":\"ENOENT\",\"errno\":\"ENOENT\",\"syscall\":\"spawn\"}\nError: spawn ENOENT\n    at errnoException (child_process.js:988:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:779:34)\nThis then crashes the server and I have to restart.\nIt's still trying to open Sublime for some reason?\n. It's working now. I had to add it to my .bash_profile file instead. Both export EDITOR=atom and export REACT_EDITOR=atom works.\nMaybe the instructions need to be updated?\n. To anyone getting here because the debugger no longer works after upgrading react native, it's because as @brentvatne pointed out, RCTWebSocketDebugger.xcodeproj was renamed to RCTWebSocket.xcodeproj.\nTo fix this, I had to start a new react native project and copy the AwesomeProject.xcodeproj file to my project, rename it back to what I had, and the debugger worked again.\n. ",
    "RockyF": "Do you know Context on React-native!\n. ",
    "nmn": "+1 for normal commonJS instead of the @provides docblock. The node version of commonJS and custom JS build scripts would be the best case scenario.\n. +1 for normal commonJS instead of the @provides docblock. The node version of commonJS and custom JS build scripts would be the best case scenario.\n. ",
    "stefalda": "I think some sort of access to the device screen size and capabilities is badly needed.\n. I think some sort of access to the device screen size and capabilities is badly needed.\n. @brentvatne I didn't know about those methods, but I think they'd be enough for now.\nThank you for the clarification.\n. @brentvatne I didn't know about those methods, but I think they'd be enough for now.\nThank you for the clarification.\n. +1\n. Hi,\n I agree with @kinhunt: the current implementation is unable to deal with big amount of data, memory use increases and then crashes the app...\nI've made the same test with NativeScript's ListView (using the same data) and memory was always around 100Mb and the app didn't crash...\nStefano\n. ",
    "chirag04": "+1\n. +1\n. @brentvatne We only need width/height and pixel ratio and for now we are using Dimensions. \nBut as i read in github issues, dimensions is going to go and is a bad practice. Documented component/module for this would be helpful.\n. @brentvatne We only need width/height and pixel ratio and for now we are using Dimensions. \nBut as i read in github issues, dimensions is going to go and is a bad practice. Documented component/module for this would be helpful.\n. Seems like it can be useful to extend RCTTextField for tooltip. :)\n. Awesome work @vkurchatkin - I badly want to see this getting merged. \n. @ericvicenti Is it possible to set an image/logo instead of title in the navigation bar?\n. I feel like spicyj's suggestion of having a route property makes sense. I can try to explore this area if you agree @ericvicenti regarding this api.\n. I spend the past one hour to debug this issue. Images are not working for me either. I have tried all the suggestions here.\nI think docs can be made more clear about how to required images once the issue is resolved here.\n. @amasad  I'm on latest version and it's not working for me. \n@notduncansmith  I tried your command also. It's still not working.\n. @amasad I can confirm it works with 0.3.1 and requiring images like this: require('image!something');\nFor me it doesn't work because i have an image inside a listView. listView data is stored in the app instead of a network call. I want to host the images also in the app.\nDoesn't work when i do require('image!' + this.props.image)\n. I know thats a bad practice but how do you solve my usecase mentioned above?\n. @notduncansmith That totally works for me! Thanks :+1: \n. Ok. Cool. I figured rocksdb is the solution here. Thanks for the help.\n@sahrens  Can you give some more details about how to use rocksdb with react-native.\n. I want to embed data into the app.We want the app to run completely offline. Data is really small but changes based on user activity. I want the changes to persist. \nWith AsyncStorage, i guess everytime the app starts i have to load the data into the asynstorage from a text file i guess? Is there a better way to do it?\n. @sahrens \nOne more question: Asyncstorage docs says it's global. Does it mean my app data is accessible to other apps also?\n. @sahrens Thanks for info.\nI guess i have to load from file once though. When the user opens the app for first time. Asyncstorage will be empty that time. Subsequent loads can be from asyncstorage.\nThanks for all the help on this.\n. As a workaround, embed the text in a View and add border to the View.\n. As a workaround, embed the text in a View and add border to the View.\n. @vjeux \n. For those looking for this check: https://github.com/chirag04/react-native-tooltip\n. +1. Having the same issue. @vjeux \n. @brentvatne  Awesome. I look forward to you help. :)\n. @brentvatne  Awesome. I look forward to you help. :)\n. @brentvatne This is so awesome. Thank you so much for looking into this.\nLooking at the codebase, seems like i had all these lines in my codebase. Just that i din't have them at the place. :(\n:+1: :+1: \n. @brentvatne This is so awesome. Thank you so much for looking into this.\nLooking at the codebase, seems like i had all these lines in my codebase. Just that i din't have them at the place. :(\n:+1: :+1: \n. @PhilippKrone It won't be possible to have it in style property but you would be able to use it as a component. like: . I will modify brent's work and then publish it to npm.\n. @PhilippKrone It won't be possible to have it in style property but you would be able to use it as a component. like: . I will modify brent's work and then publish it to npm.\n. I published DashedBorder component here: https://github.com/chirag04/react-native-dashed-border\n. I published DashedBorder component here: https://github.com/chirag04/react-native-dashed-border\n. @ericvicenti a here was just for example and not the top of the stack. Actually there is one more view before a.\n. popToRoute give me Invariant Violation: Calling pop to route for a route that doesn't exist!\"\n. So here is the hierarchy: x -> a -> b -> c -> d.\nA back on b, c or d should take you back to a. b takes you to c though. I use replace in b to take you to c and so on for d\nI hope the context is clear.\n. nope. I'm not trying to create the same route. I just want that when you are on c and you press back it should jump to a instead of b. replace is doing the job here.\nInstead of push i use replace to go from b -> c. Just that animation is missing when i replace.\n. Codebase is too long for a gist etc. \nThis is what i do in b.js\nif(this.state.runNext) {\n      return this.props.navigator.replace({\n        component: require('./c'),\n        sceneConfig: Navigator.SceneConfigs.FloatFromRight,\n      });\n    }\n. @ericvicenti popToRoute makes sense and like you said i will need to store reference to the parent Scene. Is there a set way of keeping a reference to the parent Scene or should i just pass that as prop to the child scene.\n. Sure, That seems to work here. \nJust a suggestion: just like parentNavigator, can we support parentRoute in the navigator?\n. Ah i see. Makes sense. I din't try parentNavigator.route yet. Will let you know.\nThanks for taking the time out to help me. You guys are awesome.\n. @brentvatne  Seem like borderRadius is broken with latest version of react-native. I have backgroundColor set. \nI do something like this:\njs\n<View style={styles.runContainer}>\n          <TouchableOpacity onPress={this._handleRun}>\n            <Text style={styles.runButton}>{this.state.runText}</Text>\n          </TouchableOpacity>\n</View>\nIn style: \ncss\nrunContainer: {\n    position: 'absolute',\n    bottom: 20,\n    right: 20,\n    backgroundColor: 'green',\n    borderRadius: 50,\n  },\n  runButton: {\n    padding: 10,\n    color: 'white',\n  },\n. @brentvatne  Seems like it works fine when i use TouchableHighlight instead of TouchableOpacity\n. +1 I had the exact same problem today.\n. Yup. I expect to have about 50 routes also if the user keeps using the app without going back.\nThanks\n. Ok I can confirm updating to latest master, UIExplorer works fine. RenderScene is called once. I updated react-native in my app also and it seems to call renderScene once only now.\nNot sure what changed here. Closing it for now.\n. @tadeuzagallo +1 to what brent mentioned. I had a tough time understanding manager using custom class. I feel we can mentioned dashed border example by brent somewhere in the doc. \n. @brentvatne:\nI want to disable keyboard input altogether but still get change and focus events. blur in focus event will give a flicker of keyboard coming and going.\ncontrolled will open the keyboard.\neditable false will not open the keyboard but it will also disable focus and change events.\nIf there a way around? Happy to PR also if you point me to right direction.\n. @ide \nI did an extensive search and seems like textFieldShouldBeginEditing: in the UITextFieldDelegate is my answer. (See: https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextFieldDelegate_Protocol/index.html#//apple_ref/occ/intfm/UITextFieldDelegate/)\nI'm trying to add this to RCTTextField but seems like it is not responding to this event when i put a debugger here. Added the delegate to RCTTextField interface and `textFieldShouldBeginEditing in the implementation. I also added self.delegate = self which initializing RCTTextField.\nPS: I'm totally new to objective-c\n. How do i test this though? I cant get textFieldShouldBeginEditing to be triggered\n. sure\n. For those who don't want keyboard to pop when you tap on input:\n<TouchableWithoutFeedback onPress={this.handlePress} style={styles.labelContainer}>\n           <View style={styles.labelContainer} pointerEvents={'box-only'}>\n             {this.props.children}\n           </View>\n         </TouchableWithoutFeedback>\n. +1. Just got hit by this bug. need to explicitly give a height. \n. duplicate of https://github.com/facebook/react-native/issues/514.\n@meric426 @ericvicenti close this?\n. +1 for a standard/documented way. \n. @nicklockwood I tried your code but i still see a white flash. I created a launch image to set as the loading view. launch image is same as the launchScreen.xib.\nThis is the only thing holding the release of our app. Really appreciate any help on this.\n. @nicklockwood I tried to change the color between xib file and the launchScreen Image. I was still seeing that flash.\nMy code looks like this:\n``` js\n UIImageView *launchView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@\"launchScreen1\"]];\n rootView.loadingView = launchView;\nrootView.loadingViewFadeDelay = 0.0;\n rootView.loadingViewFadeDuration = 0.15;\n```\nI removed the last two line loadingViewFadeDelay and duration now and it seems the problem is solved. I don't see any flash. Nice smooth transition.\n. Ok. digging deeper it seems the flash maybe coz my app renders nothing until a value is loaded from asyncstore. \njs\nrender() {\n  if(!this.state.loaded) return (null);\n  return <View ...../>;\n}\nI think the loadingView thinks that the js finished rendering and hides the loadingView. However js just finished rendering with that return null\n@nicklockwood  @alinz  I'm just shooting in the air. may not be the actual reason. What do you guys think.\nAlso one thing i noticed is that if i set those loadingViewFadeDelay etc values to 0.30 or higher, the transition is very very smooth. the defaults are 0.25 which is also smooth. \n. Cool. I think i have the solution.\nWhat do you guys think about having 3 components all being the same. \n1) launchScreen.xib\n2) loadingView\n3) return null in render to actually render a view which is like loadingView and launchScreen.xib?\nNot sure how point 3 will scale on different devices though. Would you guys even suggest that?\n. depends on asyncstorage. no network\n. I can consistently replicate this by touching any touchable* for a longer time.\neg: Keep the list view row touched for some time before releasing. You would see the warning.\n. @sahrens I was able to get the static image working by adding image option. \n[RCTConvert UIImage: image]\nHowever when i pass image as url string, RCTConvert is not able to convert it to an UIImage. eg: \nimage: 'https://www.facebook.com/images/fb_icon_325x325.png'\nSeems like it expects a data: prefix to fetch network image. Not sure if this is a bug.\nhttps://github.com/facebook/react-native/blob/master/React/Base/RCTConvert.m#L633\n. So, we should support two options like image and imageUrl?\nThis is what we do exactly here: https://github.com/naoufal/react-native-activity-view\n. @tadeuzagallo That makes sense. I was reading through the code of RCTImageDownloader which seems to be using blocks(async). I'm new to ios and this seems to get little complicated here.\nMind reopening this issue?\n. I'm getting the exact same error after update. @brentvatne: seems to be related to #1578 \n. @sahrens  I'm not using keyboardDismissMode in my app at all. I'm using using <ScrollView>....</ScrollView>\nAfter some debugging, this error seems to be coming from react-native code itself. Here:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollView.js#L323\nIt expects RCTScrollView.Constants to export KeyboardDismissMode. However only DecelerationRate is exported. Hence the error.\nre-open ?\n. Ok. I took the latest master. I have attached the screenshots.\nError seems to come from line 24289 in the bundle. I have attached the screenshot of those lines in the bundle. Not where how are these constants coming here.\nLet me know if you need more info.\n\n\n. As a matter of fact, the project was generated before react-native 0.4 i guess. Not sure if that has got anything to do here.\n. yes. I have it turned off in chrome.\n. I think  --reset-cache did it.\n. This thing is not vertically centered, which i think it should be. I was hit by this bug too. Not sure whats the problem is here.\n. was transitionType ever supported? Shouldn't it be sceneConfig/configureScene below component?\n. saw this warning today. \n. I think callback is not called when you swipe back. it is only called when you press the back button.\n@ericvicenti  can help you better.\n. @yamill  Try componentWillUnmount in your component where you play the video. Stop the video there maybe?\n. @yamill  Cool. Going by the comments seems like that fix will never land on master. @ericvicenti  made a better fix it seems and will be released in the next version.\nAnyway, glad you could figure it out.\n. @yamill  Cool. Going by the comments seems like that fix will never land on master. @ericvicenti  made a better fix it seems and will be released in the next version.\nAnyway, glad you could figure it out.\n. @ericvicenti can help here. Can be a serious bug for performance.\n. I just did a small test can't get to replicate this though. Mind sharing a fiddle on rnplay?\n. I think @brentvatne sorted it alphabetically. So keep it consistent?\n. I think @brentvatne sorted it alphabetically. So keep it consistent?\n. This can be helpful. Somewhere i saw compositePackage.\nNot sure what is the best way to register packages: \n1) chain addPackages function calls\n2) use compositePackage(Not sure)\n. This can be helpful. Somewhere i saw compositePackage.\nNot sure what is the best way to register packages: \n1) chain addPackages function calls\n2) use compositePackage(Not sure)\n. we should keep it just perspective, just like ios. I see some perspective code already in decomposed matrix. you can pass perspective from js like:\ntransform: { perspective: 1280 }\n. we should keep it just perspective, just like ios. I see some perspective code already in decomposed matrix. you can pass perspective from js like:\ntransform: { perspective: 1280 }\n. keep it only perspective\n. keep it only perspective\n. @kmagiera can we take out deprecated ones just like ios?\n. @kmagiera can we take out deprecated ones just like ios?\n. https://github.com/facebook/react-native/blob/62e8ddc20561a39c3c839ab9f83c95493df117c0/ReactAndroid/src/main/java/com/facebook/react/uimanager/PixelUtil.java#L57\n. https://github.com/facebook/react-native/blob/62e8ddc20561a39c3c839ab9f83c95493df117c0/ReactAndroid/src/main/java/com/facebook/react/uimanager/PixelUtil.java#L57\n. Is the bot linting against my PR branch or master?\n. Is the bot linting against my PR branch or master?\n. it will be easy to reason out and maintain in future to have the number test in perspective rather than falling through default.\n. it will be easy to reason out and maintain in future to have the number test in perspective rather than falling through default.\n. stringifySafe the transform here\n. stringifySafe the transform here\n. you can be more clear here. Something like To change the scheme navigate to ....... in Xcode and change ........\n. you can be more clear here. Something like To change the scheme navigate to ....... in Xcode and change ........\n. you need to use link key if it's just one store. linkPlayStore is used when you have ios and android both\n. seems like you swapped the icon link. \n. use link key instead of linkAppStore. linkAppStore is when you have android and ios both.\n. use link key instead of linkAppStore. linkAppStore is when you have android and ios both.\n. use link key here. linkPlayStore is when you have both android and ios.\n. use link key here\n. use link key here\n. needs to change linkPlayStore key to be link key.\nlinkPlayStore is used to differentiate ios and android links.\n. needs to change linkPlayStore key to be link key.\nlinkPlayStore is used to differentiate ios and android links.\n. we should keep the list alphabetically sorted and use link key\n. If resetTo will now push the route first and then update the stack then y not reuse push function that can take a callback which is called after the transition.\nSomething like:\npush: function(route, cb) {\n    ....\n    this._transitionTo(destIndex, null, null, cb);\n}\nresetTo: function(route) {\n   this.push(route, () => {\n       this.setState(.....)\n   }):\n}\n. Will this not break if someone is passing style={styles.drawerBackgroundColor} where drawerbackgroundColor is a number?\nwe can explicitly use a prop for the backgroundColor something like contentBackgroundColor or implement this like scrollview's contentContainerStyle\n. what i meant was:\nconst styles = Stylesheet.create({\n   drawerBackgroundColor: {\n      backgroundColor: 'red',\n   },\n});\nthen passing style={styles.drawerBackgroundColor}. When you use Stylesheet.create styles.drawerbackgroundColor will be a number.\n. @davidaurelio @mroswald should the default be true for bundle command or atleast add this to react-native-xcode.sh?\n. yeah. react-native-xcode.sh sounds like a reasonable place. we should add it to android counterpart also then.\ncan you PR?\n. Early adopters of react native - has 200k+ users.\nNotable press among many others:\nhttp://www.businessinsider.com/lrn-coding-app-2015-7\nhttps://www.producthunt.com/tech/lrn\n. Early adopters of react native - has 200k+ users.\nNotable press among many others:\nhttp://www.businessinsider.com/lrn-coding-app-2015-7\nhttps://www.producthunt.com/tech/lrn\n. we are working on it part time. android version is taking more than expected hence the slow updates to the app. We did raise some money but ended up not taking it. We will ship an update soon.\nFeel free to skip us if it doesn't fit the criteria. :)\n. we are working on it part time. android version is taking more than expected hence the slow updates to the app. We did raise some money but ended up not taking it. We will ship an update soon.\nFeel free to skip us if it doesn't fit the criteria. :)\n. you don't need to conditionally set the RCTActivityIndicator. just setting the right sizeStyle variable should be enough \n. @janicduplessis @dustin-H isn't it going to be undefined instead of null when somebody forgets to pass in scrollEventThrottle\nwondering if there are any downsides to just defauting this to 16 and removing this warning.\n. @janicduplessis @dustin-H isn't it going to be undefined instead of null when somebody forgets to pass in scrollEventThrottle\nwondering if there are any downsides to just defauting this to 16 and removing this warning.\n. ah. missed the ==.   Yeah agree with not making a breaking change.\n. ah. missed the ==.   Yeah agree with not making a breaking change.\n. Ok. not a flow user but i have a _getMaxSwipeDistance which has the exact same signature. flow should ensure that always returns a number?\n. you don't need this here i guess.\n. can we fold onLoadingSslError into onLoadingError?. can we fold onLoadingSslError into onLoadingError?. there is no need to add any logic here. this is delegating to the scrollview and you already have a warning there. am i missing something?. there is no need to add any logic here. this is delegating to the scrollview and you already have a warning there. am i missing something?. i would rather add tests to scrollview for this. listiview is delegating to scrollview#scrollTo. nit: maybe const { checkPropTypes } = require('prop-types');. ColorPropType maybe? idk if it's too late. @hramos already imported.. ah damn! sorry. flow type for a prop type..so meta!. at this point, i'm wondering if it's better to just update the example to be navigator agnostic.\n@hramos . should we link directly to https://buckbuild.com/setup/getting_started.html?. I just thought that redirect might break in future. if you think it's not worth the trouble then sure, let's run with it.. cc @hramos. wondering if we can just check that permissions are already granted instead of a skip flag. react_native instead of react_native_oss?. these are probably not required or we should update the path to node_modules/react-native/danger .... should we keep this behind the DEV flag?. i would rather let it continue in prod than spectacularly failing at startup. idk. we probably want to update this as well: https://github.com/facebook/react-native/blob/master/local-cli/templates/HelloWorld/_flowconfig. also i think this only works for gradle 4 and up. RN is not using gradle 4 yet.. can we do this.props.onLayout to maintain equality?. maybe just go with @^5 instead of 5.0.0. there is an extra ). Testing are failing.. can we rather fix the lint errors? might be masking errors, no?. I gave it a quick run: https://github.com/facebook/react-native/pull/19743 CI is passing. i haven't worked with java that much. is /*package*/ required? @hramos @gengjiawen. ",
    "tadeuzagallo": "Fixed on 258c6b1b5455bf1ba32ede1c9cf5f041b5b2b20c\n. Fixed on 258c6b1b5455bf1ba32ede1c9cf5f041b5b2b20c\n. Hey @kennydee are you getting the exact same error message?\nBecause you mentioned you are using activityIndicatorIOS, I've pushed a commit yesterday dropping the size constants, it should replaced by strings, here are the changes on the example file.\n. This is a known bug, if you change your css to something like:\njs\n  container: {\n    flex: 1,\n    top: 50,\n    borderWidth: 1,\n    borderColor: 'blue',\n  },\n  subc: {\n    borderWidth: 1,\n    borderColor: 'red',\n  },\nYou'll see that your TextInput is out of the Veiw bounds, so you can't touch it.\n. I'm not sure, in plain css it wouldn't work, because you didn't set a position value and you're use top... If you set the position than it will be positioned out of the parent, just as css-layout.\nThe thing is that, in the HTML, even if you use position and leave the child of the parent, you can still touch it... What has to be decided is what is the desired behavior.\n/cc @nicklockwood that's the behavior I was trying to explain to you not so long ago.\n. @vjeux If we really want to make it work we're going to have to reimplement hitTest...\nbut if you don't have to hit the parent to hit the child, we'll basically have to search all views...\n. @joshaber Interesting... I hadn't seem it there lol\nMaybe for RCTPointerEventsUnspecified we could use basically the same, but instead of returning nil if it doesn't match any subview we return [super hitTest:withEvent:]\n. I've changed it recently, but I just cloned the repo, built it and it seems to be ok...\nCan you try pulling again and recompiling it?\n. Thanks for that, it was renamed but got lost on it's way to open source.\nAbout the file name/providesModule:\nrequire('file') is driven by @providesModule\nrequire('./file') is driven by the file name.\n. Fixed on #135\n. Could you also replace the error response with the actual status instead of the hardcoded @0?\n. Oops, sorry about that, totally makes sense, the connection was ok, the response just wasn't 200.\n. That's interesting, and I've talked about something similar with @nicklockwood before, but the problem that always comes up is that in most of the use cases the method would have to be sync...\n. I agree with you that it is better, but the thing is that it wouldn't be a definitive API as well, because we want something that will be compatible with React JS, so instead of creating a new API that wouldn't solve all the problems we're looking to solve, we decided to stick with something that the users are familiar with, and wait to change it when we have something concrete.\n. Closed by 6500ba7bfbdc2bd8e3301813b3cb606aeea35331\n. Once you perform Run action the server will start automatically if there isn't any instance running.\n. Someone already fixed, people are moving fast :) \n. @wez I ran into that on 10.10.2 as well. same thing...\nI tried everything, reinstalling, unloading and re-loading with launchctl, but just restarting fixed it. IIRC it was a fresh install, if that helps.\n. Sorry this is a duplicate of #265, the PR is newer but it's been rebase a couple times already.\n. Oh, I'll fix these docs right now!\n. Sounds good. Everything that is non-optional is exposed in this header, and one more header per subspec.\n. Landed internally, will be out on the next sync\n. Yes, it was synced on 9a4ee17adba756e676ea2585e13ca4e5884801a5\n. Hey @DanielMSchmidt, there isn't any api for that so far... but please, if you want to work on it, go ahead! :)\n. It's good to me, although I'm not the best for naming... if someone is against it, it should be fairly easy to rename the property later, so I'd say go for it!\n. Right now you still can set the class it will use, but not prior to running... You have to set it, and then reload, and it can't be at initialization time, or the bridge will ignore you.\nBut we can look into that... \n. Oh, I'll fix this typo, thanks!\nThe new-library might be a good idea! @frantic, what do you think?\n. I think the regex should be\njs\n/\\brequire\\s*?\\(\\s*?([\\'\"])([^\"\\']+)\\1\\s*?\\)/g\nand then\njs\ncode.replace(REL_REQUIRE_STMT, function(codeMatch, _, depName) {\nEven before this diff it already accepted require('module\")\nAnd \\s* has a very poor performance when you expect \\s to be very small, \\s*? should perform much better.\n. It's because it's for the website, if you go to: http://facebook.github.io/react-native/docs/gesture-responder-system.html it works.\n. You usually get this message when you already inside a React Native project, can you check it?\n. Is there any chance you have a /Users/orta/spiel/ios/node_modules/react-native folder?\nBecause react-native runs the script installed by the react-native-cli module, and then this script checks for the cli.js file inside the react-native module.\nThe init method is on the react-native-cli and the start is in the react-native, so this message is from the react-native module.\n. No problem, glad you got it working! :) \n. @amasad Couldn't do any harm... Maybe the first line outputted could be the context it's running.\n. The documentation (#300) is merged. Might be worthing integrating with #485 \n. LGTM\n/cc @vjeux on naming/structuring conventions.\nps: Viewport or ViewPort?\n. Yep, looks pretty good, just some nits...\nThe only things that I'm not sure are the flow annotations, have you seen that @ericvicenti? I don't think we usually explicit use void, and I haven't seen a definition of ChangeEventName, but I'm pretty new to flow, so better leave to you :)\n. Hum, it shouldn't happen, but you can fix it by adding libicucore.dylib to the build phases of your project.\n. /cc @a2 did you get to fix it?\n. @a2 Oh, that's true, you're going to fix the podspec... I was thinking about actually importing it on RCTWebSocket project.\n. @a2 don't update the podspec yet.\nI should probably add that to the docs as well. Adding libicucore on the RCTWebSocketDebugger project doesn't fix it. it has to be added to the main project :/\n. @nicklockwood I think you wrote the TODO, is that right?\nI don't think 0 should be the default value...\n. @sahrens it might have been my fault, I was talking @chrene on IRC and he said it was a bug, and I totally forgot that we needed to set the property for it to work.\nIf we set the property is working as expected? Because if it is maybe we should remove that comment.\n. I tested it and it's working as expected, but @sahrens I tried adding an invariant instead of the current warning, and during testing it on UIExplorer I just noticed that an invariant during a NavigatorIOS push crashes the objC... Any idea about that? Should we add the invariant anyways?\n. I've also created a gist, with 3 files:\n- the initial file, that Xcode generates,\n- a clean file, the same file file, after parsed and stringified\n- the final file, with the libraries added\nhttps://gist.github.com/tadeuzagallo/dd046e738f4c87edac4f\nI also added support for a libraries key, tu support the use case we have now, that is the debugger, but it should be pretty straightforward to add frameworks next.\nIt also tries to guess a lot of names, that should work well specially for the native libraries.\n. Well, there some things to consider in it, first is that #235 makes a whole environment around CocoaPods, and I didn't think we had settled for it.\nI do understand what are shared dependencies, and cocoapods does solve a lot more than these few lines of code, and I do not intend to create a node-pods. The thing is that it doesn't solve the problem for android and it depends on ruby, for that I do agree that BUCK is a better choice, but as far as I know it's not settled as well.\nBut for the sake of clarity, I didn't create a package manager, I wrote a couple lines of code that allow you to link projects via cli, it's not a fabulous module system, it's just so people that are not iOS developers don't have to keep dragging files around neither are required to use cocoapods and therefore ruby.\n\nInstead of inventing our own package.json schema, we might want to consider just using a BUCK file for the details, and package.json would just point to that.\n\nIt doesn't rely on package.json right now for the internal libraries, it was an idea.\n\nYou might also want to use the xcodeproj tool to modify the xcode files instead of regexes\n\nIt doesn't use any regex, and it would introduce a dependency on ruby all over again.\n. Oh, and something that might not be clear, where I mention libraries and frameworks I mean core .dylibs and .frameworks.\n. Honestly, I don't feel comfortable landing it, but thanks for reviewing.\n. @brentvatne Not yet. I'm on holidays and we'll be back next week. Feel free to jump in if you feel like helping!\n. Hey @jordanbyron, it's great that you want to tackle it, I really haven't had any time to get to it lately :/\nWe cannot simply move this code into another project for now, but we can move it into a separate folder inside cli, that may also contain the tests. Later on we can think about that.\nWhat really stopped me in first place is that \"linking two projects\" is a very vague thing, and we either end up assuming basically everything or we need some kind of configuration file, then we get back to the point of kinda creating a new package manager, that is totally not the idea.\nSomething that also has to be figured out is that currently we don't do any validations, things are just added to project, even if it's already there. But this one should be trivial, even if you have any issues I can fix it.\nSo, totally go for it, just give it a little bit of thought about what \"link\" in this context is going to mean: Can we specify a target? What if it's not a static library? What if it has a different name? Right now I add the headers path of the library being linked to the container library, but the library being linked will probably have to find React's headers as well. Just to be clear, we don't have to support everything, but it has to, at least, be flexible enough to handle the most common/basic cases.\nAnd let me know if you need any help with the pbxproj tweaking code :smiley: \n. Thanks for that, your diff has already been merged internally and should be out on the next sync.\n. Sounds like a valid use case to me...\n. I knew I had seen that before, it's so valid that it already works! ;)\nJust remove the file://:\nhtml\n<Image source={{uri: '/var/mobile/Containers/...'}} ... />\n. Hey, thanks for taking the time for doing it, but as we already talked IRC we can't merge it as is... @a2 should be working to bring the custom border to other elements soon.\n. Fair enough! ;)\nThanks\n. RCTViewManager is a view manager, as the name suggests...\nIf you just want to expose methods to JavaScript what you need is a RCTBridgeModule, that is a @protocol.\n. What you need for that is Reverse Geocoding, iOS doesn't provide it, you'll have to use 3rd party APIs.\n. Wow, I really didn't know that, thanks! (and sorry for the misleading reply)\nBut no, that hasn't been exposed yet...\n. When I started refactoring, it was on this very place, but when I finished it, there wasn't a single call site using it (like happens in your diff).\nIf you have an use case for that, I don't see any problem in having it, but please, create another initializer so we don't need to go through all the codebase adding a Nil param.\nI also think you should assign it to _globalExecutorClass, otherwise your executor will get erased when you try debugging your app.\n. > The call site is in my app's code. I create the RCTBridge with this new initializer method, and pass the bridge into the RCTRootView.\nSure, I know, I just meant it's really not used by us.\n\nI can do this -- are there are a lot of places in the FB codebase that create RCTBridge objects though? \n\nThere are quite some places, because moduleProvider is still used and falls into the same case, if you need it, you have to create the bridge.\nAbout the ivar, _globalExecutorClass doesn't seem right, it was more about recycling it, because I don't think it's ever used anymore. But might be better to get rid of it, if that's the case, and add a better suited ivar. Although I can't ever imagine an app, with two instances of the bridge, at the same time, running different executors, that shouldn't be a reason to not make it better. :)\n. Hey, sorry for taking so long...\nI don't know if you have seen but I brought back the RCTWebViewExecutor, so usingDebugExecutor won't work... Are you actually using custom debug executors as well? If so we'll probably need to make the RCTDevMenu aware of it to enable this option.\nAnd if you decide to keep it, I think we should fallback to the default ones on the new initialization method, instead of passing them in on the old method. That way you can just specify one or other when you create the bridge.\nAlso if you could rebase please... I'll try to keep it faster so you don't have to rebase again\n. I'm sorry for not replying sooner, I've been trying to address that with @nicklockwood but we haven't found a good enough solution yet, but I really don't think this is where we are going. I'm currently doing a lot of refactoring on the bridge, and we are trying not to keep changing user facing APIs.\nOn the mean time I tried to fallback to a previous workaround suggested by @ide (delaying the initialization for 1 frame), but due to some other changes it didn't really work out now, and generated some racing conditions that weren't worth fixing for a quick workaround.\n. Although I like this better than the initial proposal,\n\nI really don't think this is where we are going.\n\nThe idea is to executor to be converted in to bridge modules, we just didn't stick to an API that will address all the concerns we have yet.\nMost of this concerns are not addressed by this PR like removing the manual work done in RCTDevMenu, with this proposal you can create a new type of executor, but it'll never show up in the menu. It also introduces a lot of manual work in adding an executor, where it should be same as adding a module.\n. Hey, for the differ you can just use deepDiffer, because in your function color1 and color2 are actually arrays, so color1 !== color2 will always be true in that case.\nFor the callback, you can't simply convert js functions to RCTResponseSenderBlocks... since you already explained that this was just test a test, and the actual goal is to notify that a video has finished playing, you should use events. you can define new events with - customDirectEventTypes and - customBubblingEventTypes, for your case, the first should be more suitable, any way, you can check the descriptions on RCTViewManager.h. Then you just use the RCTEventDispatcher to emit the event with the name you have registered (as the key on the dictionary) and add a property to your native component, with the value you have registered.\nYou can look at RCTSwitch as a basic example, the change event is defined on RCTUIManager.m, the event is emitted in the RCTSwitchManager.m and the callback is registered on SwitchIOS.ios.js. Note the use of topChange and onChange according to the event definition.\n. That is pretty standard IMO... If you look at Xcode all the shortcuts are expressed with uppercase letters and none of them require that you hold shift as well, unless you see an explicit shift symbol.\n. yaytests\nTests are always relevant! :smile:\nJust re-triggering travis since a lot has changed in the mean time.\n. You just use an UIViewController with a RCTRootView as it's view.\n. Well, I wrote the comment, thought it was stupid, and deleted it, but now I think it might be relevant again :P\nIf you have react-native linked I think it will warn every time you create a new project (here's why I deleted it, I'm not sure, but I think so), anyway another way that it wouldn't happen would be:\nsh\nif [[ \"$(pwd | grep $(npm get prefix))\" != \"\" ]]; then\n  echo \"WARNING: ...\"\nfi\n. Last comment was from @ericvicenti:\n\nAgreed, lets consolidate these!\n\nIf you feel like updating the PR, that would be awesome! Otherwise I don't think anybody on the team is planning to work on it for now.\n. Last comment was from @ericvicenti:\n\nAgreed, lets consolidate these!\n\nIf you feel like updating the PR, that would be awesome! Otherwise I don't think anybody on the team is planning to work on it for now.\n. It's probably already been fixed on 75e4e124fa510577865766845fcd0ebd1b8e175a\nBefore that commit, timers were added to the runloop in NSDefaultRunLoopMode, which means it wouldn't fire during UI events, when it's in UITrackingRunLoopMode. Now we're running in NSRunLoopCommonModes which should still trigger it.\nThe old code is here: https://github.com/facebook/react-native/blob/8a57c4e9807cee5a4196cc50b40bc9e040c02398/React/Modules/RCTTiming.m\nCould you confirm if it fixed your problem?\n. It's probably already been fixed on 75e4e124fa510577865766845fcd0ebd1b8e175a\nBefore that commit, timers were added to the runloop in NSDefaultRunLoopMode, which means it wouldn't fire during UI events, when it's in UITrackingRunLoopMode. Now we're running in NSRunLoopCommonModes which should still trigger it.\nThe old code is here: https://github.com/facebook/react-native/blob/8a57c4e9807cee5a4196cc50b40bc9e040c02398/React/Modules/RCTTiming.m\nCould you confirm if it fixed your problem?\n. @frantic No... @PhilippKrone is there any change you're holding a strong reference to the bridge on your module?\nCan you please share the whole code so I can debug it better?\n. Thanks for taking the time to putting this example together!\nI figured it out, the call was being originated from one JavaScript context, and when the app was reloaded, the callback was being invoked on a different context, where this callback didn't exist.\nIt should be on master soon\n. @MartinMoizard It should be fixed on master since 0e67e33534e8f2e7652ad83f4395a64d955517d4 or 0.4.1. Are you still seeing that?\n. Sorry, I copied the wrong hash, it's actually 0e67e33534e8f2e7652ad83f4395a64d955517d4 but it's on 0.4.1. Cool, send the sample any time and ping me and we'll look into it.\n. Oops, thanks!\n. What about:\njs\n  touchableHandleActivePressOut: function() {\n    var childStyle = this.refs[CHILD_REF].props.style;\n    if (typeof childStyle === 'number') {\n      childStyle = StyleSheetRegistry.getStyleByID(childStyle);\n    }\n    this.setOpacityTo(childStyle && childStyle.opacity || 1);\n    this.props.onPressOut && this.props.onPressOut();\n  },\nAnd I don't think the opacity should be set on the onPress method (which already is).\n/cc @vjeux \n. Hey, it's really supposed to be there... if it's being triggered there's probably something really bad happening. Which version are you running? I have a commit that hasn't been synced yet that should make it almost impossible to happen...\nDo you ever call the same RCTResponseSenderBlock twice?\n. This is an issue with the LayoutManager actually. /cc @a2 Apparently the - [RCTUIManager uiBlockWithLayoutUpdateForRootView:] calls the onComplete callback once per new view, when you added a second view, it was called twice, hence the error.\nOn the other hand, this error should not be possible after 0e67e33534e8f2e7652ad83f4395a64d955517d4, so on the next update it shouldn't affect users anymore.\n. This is an issue with the LayoutManager actually. /cc @a2 Apparently the - [RCTUIManager uiBlockWithLayoutUpdateForRootView:] calls the onComplete callback once per new view, when you added a second view, it was called twice, hence the error.\nOn the other hand, this error should not be possible after 0e67e33534e8f2e7652ad83f4395a64d955517d4, so on the next update it shouldn't affect users anymore.\n. Please revert the files you didn't actually change and try to comply to the coding style.\nIt's very hard to review it like that.\n. Hum, the information is more relevant for JavaScript right now, I'll update that right away, but here's the link anyway: https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#style-guide\n. @bimawa I merged it. I changed it because there was a logic error. The way it was before, if you initialized a TextInput with a placeholder and a color, and later removed the color, it wouldn't update to the original color.\nThe fact of changing to a static C function is just because there's no need to be a function, it does not have any logic specific to the class, and as a static function the compiler can inline it if needed.\n. Removed on 5ce9fa4dda79bd925e075afcb552893acdc83628\n. @nicklockwood Every RCTContextExecutor has its own thread right now.\nIf I understand correctly the problem is that RCTBridge calls - [RCTContextExecutor init] instead of initWithJavaScriptThread:globalContextRef:, but that shouldn't really matter, because it's created internally by the bridge, you wouldn't have access to it anyway... What you really need is what we spoke about on the other thread, the ability to provide a custom executor.\nAs for the header note, I think it's perfectly correct. It says \"You probably don't want to use this; use -init instead\", what I believe is true, most of the people won't create their own thread.\n. @nicklockwood Every RCTContextExecutor has its own thread right now.\nIf I understand correctly the problem is that RCTBridge calls - [RCTContextExecutor init] instead of initWithJavaScriptThread:globalContextRef:, but that shouldn't really matter, because it's created internally by the bridge, you wouldn't have access to it anyway... What you really need is what we spoke about on the other thread, the ability to provide a custom executor.\nAs for the header note, I think it's perfectly correct. It says \"You probably don't want to use this; use -init instead\", what I believe is true, most of the people won't create their own thread.\n. @jwyld -init is not the designated initializer. There's no designated initializer actually, you can override and just call - [super initWithJavaScriptThread:globalContextRef]. You'd indeed have to override - init as well. I'll look into it though.\n. @jwyld -init is not the designated initializer. There's no designated initializer actually, you can override and just call - [super initWithJavaScriptThread:globalContextRef]. You'd indeed have to override - init as well. I'll look into it though.\n. Thanks for raising this other issue, I'll look into it, totally makes sense. We're really not ready to support multiple instances of the bridge running concurrently, the design in theory supports, but it's very likely that you'll find some more issues like that, since it haven't really been used like that yet. But we've been looking into that issues, and most of my time I've been spending in fixing multithreading issues, so feel free to ping me when you hit those issues and we'll look into it.\n. Thanks for raising this other issue, I'll look into it, totally makes sense. We're really not ready to support multiple instances of the bridge running concurrently, the design in theory supports, but it's very likely that you'll find some more issues like that, since it haven't really been used like that yet. But we've been looking into that issues, and most of my time I've been spending in fixing multithreading issues, so feel free to ping me when you hit those issues and we'll look into it.\n. Sure, I totally agree, I'll update that. As for how the context is initialized, that's part of the issue of how to provide custom executors, that has to basically solve how you can provide N custom executors, that might have custom initializers, and need to show up in the dev menu (and still be able to use the core executors)\n. Sure, I totally agree, I'll update that. As for how the context is initialized, that's part of the issue of how to provide custom executors, that has to basically solve how you can provide N custom executors, that might have custom initializers, and need to show up in the dev menu (and still be able to use the core executors)\n. I'm sorry, just going back a little bit, @nicklockwood was right, by default, if you just call -init, all the instances will share the same thread. What I meant is that they're not forced to share the same thread, since you can pass it into the initializer, but since it's created internally by the bridge, the end result is that they share the same thread indeed.\n. This is pretty fragile... What if the person renames the file? or the folder? or move the library? This would also break any example app...\nWhen I wrote it I tried swizzling as well, but it doesn't work because we don't know the AppDelegate's class at load time, we thought about some other options, but none of them seemed to be good.\nSomething that I'm not sure (cc @nicklockwood in case you don't know as well) is whether didRegisterForRemoteNotificationsWithDeviceToken: gets called every time you call registerForRemoteNotifications, and if it behaves in the exact same way in iOS7 & 8. In case it does, you'll still have to cleanup the callbacks on the JavaScript side.\n. That's right, and practically it's closer to ~40%, since 99% of the calls are batched, and just have one argument (the array of calls to be executed).\nThe values of the result are in nanoseconds, so it'll be ~9 microseconds / call.\n. Sure, it was a lot of fun! Hehe\nThanks for doing that, I didn't mean to diminish it at all, it's great! Sorry if it sounded like that... I was just mentioning, because I noticed I dropped a lot of context-less values.\n. Yep, fixed!\n. It's actually related to require, you can test it by setting width and height on the image's style.\n/cc @amasad\n. The developer mode is because you're building your app in debug mode. You can edit your scheme on Xcode and build it for release instead. Also since 8e15a0d5e716ca63d0610e4b947ff2ab784e3ca2 you can:\n``` objc\ndefine RCT_DEV 0\n// You can also remove redbox errors with\ndefine RCT_DEBUG 0\n``\n. You can change your scheme on Xcode, change build configuration of Run to Release instead of Debug\n. @nicklockwood has already landed internally a slightly different version of it, usingNSUserDefaults`, it should be out on the next sync.\n. Yeah, @brentvatne is right, it's not possible yet... The bridge holds where to require the javascript bundle, the RootView just knows which module to require, but it has to be previously loaded by the bridge.\n. Yes, it was a regression, I'm sorry about the inconvenience. I'm working on fixing it right now.\n. Oh damn, I couldn't merge directly, sorry... \u00ac\u00ac\nMerging internally\n. Thanks @artemyarulin for raising that issue!\nI had moved the _loading already, but after your comment I figured out a way so we never ignore any call, so it should be alright now.\nThe commit hasn't landed internally yet, but I'm working on it, shouldn't take long now.\n. It's included, we talked about it on the issue instead of in the PR, but I believe it can be closed.\n. There's no problem in calling setState() more than once, although if it wasn't a test it'd be better to put then together.\nThe issue there is that setState() is async, and you're trying to access it on the next line. It doesn't mean it's not working, it means it wasn't evaluated yet. It'll just be evaluated at the end of the frame, when all the calls have been finished.\nhttps://facebook.github.io/react/docs/component-api.html#setstate\n. Oh, I see, renderRow is never called again...\nI had a look on the source, but I'm not sure what's the best solution here. /cc @vjeux \n. I tried the rowHasChanged trick, but it doesn't work. It's not called again either, since the row is already rendered and the data source hasn't change, it doesn't try to re-render.\n. Thanks, that has already been fixed. There was actually a big refactoring on the bridge, should be out on the next sync.\n. Sounds good to me! Thanks for helping make the documentation so much better! :D \n. @lazywei It's not supported yet, but should be pretty straight forward to implement. A pull request for that would be much appreciated! :)\n. Thanks, it was an issue, but has been fixed internally, should be out soon.\n. The reason some methods and properties were removed from the parent bridge is because I don't think they should be accessed from the top level. I might not be considering some use case though, can you explain yours?\n. Thanks, I missed that.\nAny reason not to just move the removeObserver to the RCTBridge's dealloc? I don't see any reason to keep adding and removing the observer since we no longer need to wait for the modules to be loaded in order to reload.\n. As I see it, removing the observer is not part of invalidating the bridge, so it should live in -[dealloc]. About not handling the notification when the bridge is invalid, I don't think we should worry about that. It basically just calls -[RCTBatchedBridge invalidate], and the first thing it does is check if it's valid, so it should be fine.\n. How would the bridge become valid on 2.? What 3. could cause?\nRemember that now every time you reload the bridge, you create a new BatchedBridge, so -isValid can never be NO, and then YES again on the same instance, so you can never invalidate the same instance twice.\n. That's something slightly more complicated, if we change it in a way that invalidating the bridge won't allow to reload anymore, then we should probably change the condition that determines whether RCTBridge is valid or not, and -reload probably shouldn't call -invalidate anymore.\nI'll merge it as is for now though, thanks!\n. Oops, I hadn't seen this PR yet and made some comments about it on the previous one, but will paste again here for future references.\nIf we change -invalidate in a way that the bridge won't allow to -reload anymore, then we should probably change the condition that determines whether RCTBridge is valid or not, and -reload probably shouldn't call -invalidate anymore.\nWhat I mean is actually having a _valid ivar on RCTBridge instead of relying on -[RCTBatchedBridge isValid]\nAlso going a little bit further on your use case, the inner bridge doesn't listen to the reload notification, is it a valid use case right now or something you are worried might become an issue? If it's valid right now, I'm not sure I follow it...\n. The use case seems a little crazy, but I agree with the overall behavior.\nBut I guess you have already figured it won't work for the keyboard commands, since only the last callback is stored, so probably the inner bridge will be the only listening to it.\n. I'll do a minor refactor on timers soon(ish) to address #1539, I'll try to look into it as well.\n. Keep in mind that WKWebView in only available on iOS 8.0 and later, and React Native supports iOS 7.\nAlso WKWebView, as far as I know, is not stable enough to replace UIWebView yet, so it might be a better idea to make it a npm module that replaces the built-in RCTWebView.\n. Can you reproduce that constantly?\n. EDIT: The UIManager methods actually runs on its _shadowQueue, and -[UIManager flushUIBlocks] dispatches to the main queue.\nThe issue is that when you call -[UIManager addUIBlock:] the block will later be called by -[UIManager flushUIBlocks]. That happens on -[UIManager batchDidComplete], that is called on -[RCTBridge _handleBuffer:], but that only happens when there was a call made from JS to objc.\n-[UIManager flushUIBlocks] will be dispatched on UIManager's _shadowQueue, so if your module is running on a different queue (the default is the bridge's _methodQueue) there's no way to be sure it'll finish before flushUIBlocks is called, and if it hasn't finished, it'll be called (as mentioned above) on the next time JS calls objc, that should be on the next time you interact with the app.\nHope that explains the behavior :smiley: \n. @ide Hum, not sure, it'd introduce a 1 frame delay, that's probably not desired in most cases.\nI think it'd make more sense to just allow accessing the UIManager on the main thread, but might be a little too much. What I believe makes more sense is to dispatch the blocks on the VSync, but that'd be a bigger change.\n/cc @nicklockwood\n. Yes, that makes sense, sorry about that. I read the answer and forgot to check the actual queue, but the chain I explained remains the same. I'll update the answer accordingly for future references. :)\n. Oops, sorry about the assign mess, I was trying to assign @a2... Damn buggy chrome.\n. The current approach to use the delegate is to pass it in through RCTBridgeModuleProviderBlock, e.g.:\nobjc\nRCTBridge *bridge = [[RCTBridge alloc] initWithBundleURL:_scriptURL\n                                          moduleProvider:^{\n                                            id<RCTExceptionsManagerDelegate> customDelegate = ...\n                                            return @[[RCTExceptionsManager initWithDelegate:customDelegate];\n                                          }\n                                           launchOptions:nil];\nEDIT: Sorry, I typed directly here and forgot to add the delegate instantiation, thanks @nicklockwood \n. I added a rule to the packager to ignore node_modules in order to unbreak the test builds on Travis, but I understand that's not ideal, sorry about that.\n. It's set in: https://github.com/facebook/react-native/blob/master/packager/react-packager/src/FileWatcher/index.js#L70, sorry about that, I already know how to fix it, just didn't have the time to do so yet.\n. Oops, this has already been fixed.\n. Oops, this has already been fixed.\n. I merged #1432 with the commits up to yesterday, these commits are today's, they don't have any commit in common. Be careful before closing things.\n. I merged #1432 with the commits up to yesterday, these commits are today's, they don't have any commit in common. Be careful before closing things.\n. Oh, I see. Closed it, Thanks!\n. @jessepollak What were you running? I just profiled running UIExplorer and my graph wasn't quite as impressive as yours. So it'd be nice to know what was happening during the profiling so I can have a better idea.\nBut what I can anticipate is that the profiler implementation (if you haven't looked into it) is the simplest possible, it has an array where it stores all the calls, the calls are represented as a dictionary containing a lot of strings and numbers (Thread Name, start & end, name, process id, category and all the args(!)).\nThe minimum you can have (even if you're application is doing nothing) is 3 events per frame: UI Thread VSync, JS Thread VSync and Dispatch Frame Update. The first 2 are immediate events (a little bit smaller memory-wise) and the other is a complete event. so it'd be 180 events per second. \nThe math kind of adds up, if you think that each event has at least 1 NSDictionary, 1 NSArray, 13 NSStrings, 4 NSNumbers (I measured a couple random events found ~200b/event average). so it's 200 * 180ev/s * 35s (your app ran) = 1,260,000b = 1.20mb (your profile shows ~1.60mb of memory shared between dictionaries, strings and numbers retained), and since after you stop the memory is released, I think it's plausible, but let me know if I assumed/calculated anything wrong (math is not my best skill...)\nAlso trace-viewer accepts another format, a text dump, where you can dump directly to a buffer, but I haven't looked into implementing that myself yet. You can find more information here in case you're interested.\n@ide thanks for the tag, always so fast! :)\n. @jessepollak When you finish a profile it'll convert all the data to JSON, following the format specified by trace-viewer, in the document I've linked above (https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/preview in case you missed).\nThen it saves this JSON dump on your /tmp folder, and will try to run trace-viewer's trace2html command, if it's in your path (or in a path you might have specified via the environment variable TRACE_VIEWER_PATH) it'll convert the data to a trace-viewer graph, and pop in your browser. If it can't find the trace2html, it'll output precise information (I think it is, any feedback is welcome) on the server console about where's your data, how to convert it manually (in case you don't want to lose the run), and how to get trace-viewer setup to next profiles.\nTo get it setup all you need to do is download it from https://github.com/google/trace-viewer and either add trace2html to your path, or setup the environment variable, either by export TRACE_VIEWER_PATH=/path/to/trace-viewer or by running the server with TRACE_VIEWER_PATH=/path/to/trace-viewer npm start\nIn case you wan't to check the code, you can have a look at RCTProfile.h and RCTProfile.m, and the server code that dumps the data is available in react-packager/src/Server/index.js.\nWhat you can expect if the profiler works is a graph like this:\n\nPlease note that the simulator is very unreliable for this kind of profile, the timing is not the same as in the device (this profile is from the simulator since I just took a quick screenshot to attach), but you can notice things like the VSync values on the UI thread and JS threads are completely different, what doesn't make any sense.\nThis wasn't documented yet because I just wrote it on a sort of hackathon of my own, but might be the time to do so (if any of you guys feel like doing it, the information from this thread should be enough, but feel free to ping me otherwise)\n. @paramaggarwal Thanks! This will be documented soon, @brentvatne adding it to Homebrew was part of his work helping us document it :)\n@brentvatne I'm not sure how it can vary, but I just profiled again and apparently yes, look at the screen shot and you'll see, the purple lines (the UI frame delimiter) are totally unaligned with the JS blocks that contain the JS thread tick.\n\n. There's indeed a memory leak, after letting the app run for ~90s I noticed an increase in the memory used of ~10mb (40%), but from what I profiled with Xcode, it seems that it's retained by JS. I can see the garbage collection is running but apparently it doesn't collect all the memory. I'll profile it on the chrome debugger soon and update it here.\n. You have to mark the generations, otherwise you're seeing the memory used by the whole app.\nSo you mark a generation when the app starts up, and other after a while, and sees the difference:\n\nThen you can check where was the memory allocated:\n\nAnd you'll see that it was allocated by JavaScriptCore.\nI ran the chrome debugger very quickly but haven't found the issue yet, will look deeper soon.\n. Well, it seems harmless, but I'm not an Xcode expert either, so I'll defer it to @nicklockwood \n. Looks good now, thanks! :smiley:\n@facebook-github-bot import\n. Thanks for doing it. LiveReload actually still works when there's an error, the redbox is just not dismissed (to verify that you may introduce a bug, dismiss the redbox first, and then fix the bug. It should reload as expected) so adding just line that dismisses the redbox should be fine.\n. @RubenSandwich it's better to listen to RCTJavaScriptDidFailToLoadNotification instead.\nRCTJavaScriptDidLoadNotification triggers other things that I'd prefer not to.\n. @facebook-github-bot import\n. @facebook-github-bot import\n. The data: prefix is for base64 encoded images. For network images you need to use RCTImageDownloader.\n. objc\n- (void)setImage:(NSString *)image\n{\n  _image = [RCTConvert UIImage:image];\n  if (!_image) {\n    // Download the image\n  }\n}\n. What it means is that the start date passed on the timer creation (Date.now() on JavaScript) is 800ms ahead of the current time on iOS ([NSDate now]), when you're running the app on the device and the executor on your computer it's very unlikely that the times will be the same at the millisecond level. So no, don't worry about it.\n. The warning is safe, but it has already been fixed.\n. This has already been fixed, upgrading should solve it. Feel free to ping me if you see any similar issue :)\n. Thanks, had just looked into it, should be able to work on it pretty soon :)\n. Can you submit a PR for that? :smiley: \n. Can you submit a PR for that? :smiley: \n. @facebook-github-bot import\n. It's been removed in: d3065fc2e78bc80af8231c977845f4bb23c987be\n. @facebook-github-bot import\n. @facebook-github-bot import\n. @facebook-github-bot import\n. I'm adding it to docs on #300, just making some images as @frantic suggested, maybe it could link to the docs.\n. It supports dictionaries. You could do something like:\njs\n<WebView html={string} baseURL={string} />\nAnd in WebView.ios.js\njs\n<RCTWebView html={{html: this.props.html, baseURL: this.props.baseURL}} />\n. Viewport instead of ViewPortDimensions\n. already instead of all ready\n. I don't think we need this check... this library should be always present since it's part of the core, and it doesn't call any method at initialization time anyway.\n. We don't use the eventName right now, but it's nice to add an invariant(eventName === 'dimensionsDidChange', ...) so if we need to use it, we are sure that people are listening to the right event.\n. objc\n@{\n  @\"width\": @(frameSize.width),\n  @\"height\": @(frameSize.height),\n}\n. Is there a reason for this error callback?\n. Can you please indent it with 2 spaces? :sweat_smile: \n. objc\nUIImage *image = [RCTConvert UIImage:imageTag];\nif (!image) { ... }\ncallback(nil, image);\n. objc\nsuper.placeholder = placeholder;\n. objc\nif (self.placeholder.length > 0 && self.placeholderTextColor) {\n  self.attributedPlaceholder = [[NSAttributedString alloc] initWithString:self.placeholder\n                                                               attributes:@{\n                                                                            NSForegroundColorAttributeName: self.placeholderTextColor\n                                                                           }];\n}\n. JavaScript :heart:\n. I'm thinking about changing the signature something more like react-native link MyProject[.xcodeproj] path/to/lib[.xcodeproj] so it doesn't rely on any magic, and if we decide to something easier, we can build on top of it.\n. Here it should be methodJSRef instead of moduleJSRef, since the context of apply is the actual function, not the module.\n. You don't need strongSelf here, it can be only:\n``` objc\n__weak RCTBridge* weakSelf = self;\ndispatch_async(dispatch_get_main_queue(), ^{\n  if (!weakSelf.isValid) {\n    return;\n  }\n[weakSelf invalidate];\n  [weakSelf setUp];\n});\n``\n. nit:__weak RCTBridge weakSelf = self;for consistency\n. I don't think we need it here. If there was an error, there's no JavaScript running, so we don't need the display link notifications. We also can't send a notification that JavaScript has been loaded, since it wasn't.\n. If it just callssuper, it's not needed.\n. UseRCT_EXTERNinstead\n. You can just changenewEventfromidtoRCTScrollEvent ` and something shorter, like:\n``` objc\nNSArray *updatedChildFrames = [_userData[@\"updatedChildFrames\"] arrayByAddingObjectsFromArray:newEvent->_userData[@\"updatedChildFrames\"]];\nif (updatedChildFrames) {\n  NSMutableDictionary *userData = [newEvent->_userData mutableCopy];\n  userData[@\"updatedChildFrames\"] = updatedChildFrames;\n  newEvent->_userData = userData;\n}\nreturn newEvent;\n```\nAlso, I changed so it doesn't replace the whole userData, so in case more information is added, it doesn't get erased.\n. From what I checked all of them can be removed, can you check?\n. This should be in the .m file\n. NSTimer *_usageMetricsTimer;\n. This timer is sad... It would probably be better to just include it on bridge calls, and set a longer timer in case the bridge is very idle. Also maybe a way to disable it? If you were profiling on chrome you probably wouldn't want it.\n. Can you just pass the memoryUsage dictionary as an arg here?\n. You need to define a void macro for the methods here, otherwise it might break in release mode (It won't in this case, since it's only used in RCTWebSocketExecutor and RCTProfile itself, and both will be stripped out in release, but since it's public anyone might decide to use it)\n. BOOL rather than bool\n. thread_array_t thread_list;\n. Inline the {\n. Why wrap it in a dictionary?\n. NO instead of false\n. The RCTWebSocketExecutor is a bridge module, you can simply add a method to it, and call it from JS to toggle the variable.\nAs for the frequency of the updates, I don't think it'd be a problem, but I'm ok with leaving as is for now :)\n. nit: NSNumber *RCTProfileGetCPUUsage(void);\n. I'd write it as:\nobjc\nvm_size_t vs = info.virtual_size;\nvm_size_t rs = info.resident_size;\nreturn @{\n  @\"suspend_count\": @(info.suspend_count),\n  @\"virtual_size\": raw ? @(vs) : RCTProfileMemory(vs),\n  @\"resident_size\": raw ? @(rs) : RCTProfileMemory(rs),\n};\n. nit: I think the sufix could simply be b.\n. ",
    "ckknight": "This is also reproducible with the following steps:\n1. Place index finger\n2. Place middle finger\n3. Lift index finger\n4. Place index finger\n5. Lift middle finger\n6. Place middle finger\n. This is also reproducible with the following steps:\n1. Place index finger\n2. Place middle finger\n3. Lift index finger\n4. Place index finger\n5. Lift middle finger\n6. Place middle finger\n. Wait, this is simply due to my misunderstanding of how the iOS simulator works. Sorry about that, everything works great if I scale the simulator to a lower zoom.\n. A means to execute javascript code with a callback would be wonderful.\n. ",
    "mrdanjl": "+1 - Occurs when you use two finger drag on a list or scroll view\n. +1 - Occurs when you use two finger drag on a list or scroll view\n. Seems to work after manually adding the RCTPushNotificationManager.* files into xcode\n. ",
    "dvdhsu": "+1. Also happens when you zoom on a ScrollView, but then lift one finger off.\nThis issue has been around for a while. Is there anybody interested in taking this up? I don't have the time right now, unfortunately.\nEdit: Okay, actually, looking at the source code, it looks like we should just delete a few lines. The invariant seems only to be causing trouble (and is only in dev mode, anyways), so I think removing it is fine. I'll make a pull request later tonight.\n. +1. Also happens when you zoom on a ScrollView, but then lift one finger off.\nThis issue has been around for a while. Is there anybody interested in taking this up? I don't have the time right now, unfortunately.\nEdit: Okay, actually, looking at the source code, it looks like we should just delete a few lines. The invariant seems only to be causing trouble (and is only in dev mode, anyways), so I think removing it is fine. I'll make a pull request later tonight.\n. Looking at the source code, this check only occurs when you're in dev mode. Seeing that it was working in production, I just ignored the problem. LMK if you still want me to make it?\n. Looking at the source code, this check only occurs when you're in dev mode. Seeing that it was working in production, I just ignored the problem. LMK if you still want me to make it?\n. Can the \"return\" key move to next text input field? Looking around the documentation, it seems like we can display the \"return\" key as a \"next\", but it won't actually move to the next input field -- it'll just dismiss the keyboard.\nAs @nicklockwood says, back/forward form navigation buttons aren't a native iOS app feature. Moving to the next field is, though. It'd probably be more important to implement that.\nEdit: remove incomplete sentence.\n. @ide - yep, that's the use case I was referring to. Your solution is fine, but like @brentvatne notes, it'd be better to have some sort of function s.t. we didn't need to hardcode the transitions in for longer forms.\nAlso -- onSubmitEditing forces the keyboard to \"jump\" when moving between fields, since the keyboard is being dismissed and brought up again on every \"submit\". \nIf I have time over the next week, I'll have a think about this, and implement something.\nThanks!\n. I was working on this a week or two ago. IIRC, you should import \"RCTPushNotificationManager.h\" in AppDelegate. Then:\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo     {\n  [PFPush handlePush:userInfo];\n  [RCTPushNotificationManager application:application didReceiveRemoteNotification:userInfo];\n}\n. Yes, can confirm this happens in 0.4.1.\n. I've also been having problems with this. For me, I was trying to render a list of notifications, each with a time associated. So, like like how tweets are labeled \"2m ago\". \nI initially tried calculating the relative times inside renderRow, but that didn't work. So, I ended up cloning notifications (via JSON.parse(JSON.stringify(notification)). That worked, but would spuriously cause some of my rows to become blank whenever the row changed enough (going from \"4s ago\" to \"5s ago\" was fine, but going from \"9s ago\" to \"10s ago\" wasn't). \nSo, I then tried removing the time from my renderRow function, so it'd just render the notification. The time was still being updated in the background, it just wasn't being displayed. This, indeed, would make my rows more stable, and they no longer disappear randomly.\nAfter reading @ide's suggestion above, then set put all my times into state, but still caused my rows to spuriously become blank. Once again, removing the times fixed the issue. I'm still not sure why this is. Have you encountered these problems, @PhilippKrone?\nEdit: nevermind the blank text problem. @ide graciously debugged with me over IRC, and it was mentioned / fixed in #813. Thanks again, @ide! \n. ",
    "jessepollak": "+1 for this occurring in dev mode\n. +1 for this occurring in dev mode\n. I'm having a similar issue, but I see nothing in either the packager logs or the XCode logs. One other thing: when I open the developer options and click \"Enable Chrome Debugging,\" the View refreshes, but nothing happens. Then, if I open up the developer options again, it still says \"Enable Chrome Debugging\" (rather than \"Disable Chrome Debugging\").\nEDIT: In Safari, when I try to use the debugger, I get DOM Exception 18.\n\n. @frantic logs are clean - it just is showing the app starting every time I try to enable Chrome Debugging.\n\nI set it up with Cocoapods in an existing app.\n/cc @tadeuzagallo \n. @frantic awesome, linked and getting closer. Now I'm getting a permission denied error on the file inside. I actually saw this with the packager.sh file when I was starting and I chmod g+x'd it and things started working. I can do the same here, but it obviously points to something bigger.\n\n. :+1: \n. +1 this would be rad.\n. +1 for this, thanks!\n. Just a +1 that borderRadius stopped working as expected somewhere between 0.4.1 and 0.4.4 with the overflow property. Anything I can do to help debug?\n. Downgrading to 0.4.1 fixed it for me as well.\n. Tried upgrading to 0.4.4 and the issue persisted. Checked if I had those files and I didn't. Looked at my Podfile.lock and it had React at 0.4.1. Changed my Podfile from pod 'React' to pod 'React', '~> 0.4.4' and it worked. I guess it's not surprising that we need to keep the Pod and JS in sync, sorry about the trouble. Hope this helps someone else!\n. :+1: \n. That makes total sense to me.\nI'm running a component inside of an already existing app. There are no long running animations or anything like that going on in the JS (I've disabled the one that is causing #1454). The only animating thing is a native UIView that I'm using which uses UIView animations, but I don't think that should affect the JS profiler.\nCan you give me a little more depth/direction on trace-viewer (or a resource to go read)? To be honest, I'm not even sure where the React Native profiler is exposed (I just enabled it because I've been trying to track down another memory leak, but haven't figured out how to actually use it).\n. One other note: all of the memory gets cleared when you do \"Stop Profiler\", so that definitely points to it as the culprit.\n. NEVERMIND! I wasn't paying enough attention \u2014 the fix just throws an error.\n. How did you determine that it's being retained by JS? The primary culprits seem to be 4kb and 8.5kb mallocs, but to be honest I'm not really sure where those come from. Screenshot for me attached (running in a iPhone 6 simulator on my Macbook Pro).\n\n. Ah, that makes total sense to me. Generations are so cool, didn't know about them before. \nI know that this sort of recursive animation is a common memory issue in JS, but that the JS VM in the browser automatically frees the memory after a while (though it can still consume some while it's waiting to be freed). Could the Apple VM not implement that freeing (seems like a big flaw, but figured I'd suggest)?\n. ",
    "kennydee": "Got exactly the same issue this morning, on all the example project (after trying to use the activityIndicatorIOS).\nForced to use a copy on another path too.\nI'm not familiar with Xcode so how can i clean the cache on the previous one which has the same bug than this issue ?\nThanks\n. Thanks for the tips, but it didn't fix the red screen of this issue, even after exiting Xcode, \u00b4rm -rf \u00b4 and git clone and npm install again on the same folder name :)\n. Yes, exactly the same (both screenshot and log error). Even after removing the line of the activityIndicatorIOS, the problem is still there.\nThe only way i found was to get a fresh copy in another folder.\n. Any other people here having the same troubles than me ? (the red screen of this issue when running exemples). Thanks \n. Thanks for suggestion.\nI tried Reset Content and Setting multiple times and it did not fix the issue.\nI even tried to rm -rf all the folder and do a new git clone in the same folder, clean cache, and having the same red screen than the screenshot.\n. Thanks @vjeux :+1: \n. @amasad this is what mentionned here : https://github.com/facebook/react-native/blob/master/website/README.md\n. @fkling yes, thanks, that's what i figured in my point n\u00b01. I could make a PR to improve the readme on this if you want ?\nOh glad you repro, it's not me :)\nThanks again.\n. Yes, the website is now running ! Huge thanks :)\n. The CLA is now signed. Thanks\n. :+1: \n. it seems it is now fixed with the latest version .Thanks\n. Got the same problem, and it confused me, also because i can't find a good way to deal with the icon field.\nThe example in the UIExplorer project is pretty strange with the _ix_DEPRECATED function call :)\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/TabBarExample.js\nSo i also think, a quick fix + clarification on this example should help new users.\nThanks\n. I think the main point of this issue is not valid anymore because of all the evolution made on the TabBarIOS and UIExplorer project. so this issue can be closed\nI also think, as @danawoodman did, that this first example of the website lack a lot of things to not confuse new users: see this other issue #759 \n. Great ! Thanks all :)\nWil look at That and reopen later if needed.\nI think a tutorial would help a lot of people on this ;)\n. haha :) this is related to my demand on your github project : https://github.com/iSimar/HackerNews-React-Native/issues/2 ?\nI'm also interested in knowing how to achieve something like that :)\n. :+1:\nThanks all ! ;)\n. Got the same problem here with a simpler version maybe : \nJust replace the index.ios.js of a new project by this : \n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  TabBarIOS,\n  NavigatorIOS,\n  View,\n  Text,\n} = React;\nvar myPage = React.createClass({\n  render: function () {\n    return (\n      \nHello\nWorld\n\n    )\n  }\n})\nvar tabBar = React.createClass({\n  render: function() {\n    return (\n       \n\n\n\n\n    );\n  }\n});\nAppRegistry.registerComponent('tabBar', () => tabBar);\n```\nThanks\n. @nickhudkins Good catch. Thanks !\nNow this works : \n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  TabBarIOS,\n  NavigatorIOS,\n  View,\n  Text,\n  StyleSheet\n} = React;\nvar myPage = React.createClass({\n  render: function () {\n    return (\n      \nHello\nWorld\n\n    )\n  }\n})\nvar tabBar = React.createClass({\n  render: function() {\n    return (\n       \n\n\n\n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  nav: {\n    flex: 1\n  },\n  myPage: {\n    flex: 1,\n    backgroundColor: 'orange',\n    paddingTop: 64\n  }\n});\nAppRegistry.registerComponent('tabBar', () => tabBar);\n```\nI think this is a little tricky anyway, and before closing this issue, maybe we can improve this ?\nMaybe with a little bit of clarification in the docs ? or better, maybe do something in NavigatorIOS as what @tjwudi said ?\nThis is problematic i think for new users, because, this is basically the first example of React Native code you will see on the http://facebook.github.io/react-native/ website :) !\nthanks all\n. ",
    "chengyin": "Oops, thank you @facebook-github-bot, I signed up.\n. ",
    "jchris": "Maybe keep a around to make a smooth transition to b, but with a timeout where it transitions to a loading / can't load indicator if it hangs around too long?\n. ",
    "plredmond": "@vjeux I've tried using <Image defaultSource=... /> to show some kind of a loading placeholder image, but it shows the old image indefinitely. I'll get a minimal repro set up for you.\nMeanwhile is there workaround we can use to blank the image and force loading the correct one?\n. workaround\n``` es6\n/ @flow /\n'use strict';\nvar React = require('react-native');\nvar { Image } = React;\n// Hack to work around https://github.com/facebook/react-native/issues/89\n//\n// Render an  normally.\n// When react reuses the component with a new url, force react to render a\n// blank image once before rendering the correct url later.\nvar DelayedImage = React.createClass({\n  propTypes: Image.propTypes,\n  getInitialState(): { showImage: boolean } {\n    return { showImage: true };\n  },\n  componentWillReceiveProps: function(nextProps: any) {\n    if(this.props.source.uri != nextProps.source.uri) {\n      this.setState({ showImage: false });\n      setTimeout(() => this.setState({ showImage: true }), 0);\n    }\n  },\n  render: function(): React.Component {\n    return \n  },\n});\nmodule.exports = DelayedImage;\n``\n. possibly related xcode logging aboutassetsd`?\n2015-04-30 11:39:42.464 ...[1274:189831] Connection to assetsd was interrupted or assetsd died\n2015-04-30 11:39:42.637 ...[1274:190017] Communications error: <OS_xpc_error: <error: 0x19caaba80> { count = 1, contents =\n    \"XPCErrorDescription\" => <string: 0x19caabe78> { length = 22, contents = \"Connection interrupted\" }\n}>\n. @arthuralee yep. same issue, i just wanted to provide a quick example-based repro.. we can close this as a dup if desired\n. ",
    "db": "I have the exact same question for my organization.\n. ",
    "joshaber": "If I understand this correctly, React Native is doing the right thing here.\ntop, I assume, is measured relative to the parent element. So in https://github.com/boopathi/textinputbug/blob/5cc5eb455dcb8d5843451cf9b93ea6720d9439c7/index.ios.js#L19 it ends up with top: 100 and top: 150. Both of which will be well outside their parent element.\n. > So, I guess the fix for this would be to not style(top, etc...) the textinputs and manually add height to parent.\nSeems likely it'd work by putting the top on the containing views instead of the inputs themselves.\n\nThe thing is that, in the HTML, even if you use position and leave the child of the parent, you can still touch it... What has to be decided is what is the desired behavior.\n\nYeah the combination of it being visible but untouchable sucks :( Maybe views should clip to bounds by default?\n. So interestingly the work's already been done to support this. RCTView will hit test its subviews regardless of whether they're in its bounds iff pointerEvents is box-none: https://github.com/facebook/react-native/blob/f3cd27cf483671b8821e4f50bfa7bb370893e59a/React/Views/RCTView.m#L126-136\nAnd indeed, if we use the original example in https://github.com/boopathi/textinputbug/blob/326362e5d39588682048bccda281d6bb2701d04a/index.ios.js with pointerEvents='box-none' on the problem parent views, it works as expected :boom: \nSo making this \"just work\" seems to only be a matter of changing the default pointerEvents, or changing the behavior of RCTPointerEventsUnspecified to fallback to searching its subviews.\n. Yup, I think that makes sense :+1: \n. flex can be used for this. For example:\n``` js\n// In render:\nreturn (\n  \n    // The width will be split evenly between the two views.\n    \n\n\n)\n// Or:\nreturn (\n  \n    // The second view will be double the width of the first.\n    \n\n\n)\n```\n. > it seems like some default styles (like a switch) hard code the width\nIndeed: https://github.com/facebook/react-native/blob/af9f0972b63167912696e59eaecc58fb840147f0/Libraries/Components/SwitchIOS/SwitchIOS.ios.js#L112-113\n. The push notification example might be a good one to draw inspiration from: https://github.com/facebook/react-native/tree/master/Libraries/PushNotificationIOS\nLooks like implementing RCTBridgeModule is the way to go.\n. The version dropped or was this a typo?\n. ",
    "sunify": "+1 I try to do this with normal ListView, but it did not work properly.\nSample code:\nif(this.refs.list) {\n    var metrics = this.refs.list.getMetrics();\n    this.refs.list.refs.listviewscroll.scrollTo(metrics.contentHeight - this.refs.list.scrollProperties.visibleHeight);\n}\ncontentHeight calculates without last item and scroll stop before them. Here is short video showing this issue.\nAlso, IMO, ListView should have scrollTo method like in ScrollView.\n. See AppDelegate.m file in project folder\n. ",
    "jasalo": "Hey @Sunify , does ScrollView have a scrollTo method? I can't seem to find it! And I'm also implementing a Chat view.\n. ",
    "stirman": "Still not able to programmatically scroll to the bottom of a ScrollView or a ListView, has anyone found a way to do this successfully?\n. Ahh, good call @erikthedeveloper. Hopefully this behavior will be baked in soon! \n. :) Been waiting on this one!\n. ",
    "awingla": "Same here. I did the same thing as @Sunify did and got the same result. contentHeight value is calculated without last item so that it won't scroll to bottom. Does anyone know the solution to this?\n. ",
    "dvine-multimedia": "@Sunify @awingla \nDo you call getMetrics() directly in componentDidUpdate()? I don't use the list view but the ScrollView directly to solve the \"chat problem\" and ran into the same issue. I think the problem is, that the layout recalculation is not completed at that point. Try to wrap the call in requestAnimationFrame timer.\nMy current, somewhat hacky implementation of a jump to bottom function uses the measure method of RCTUIManager directly.\n``` javascript\n_jumpToEnd: function() {\n    this.requestAnimationFrame(\n        () => {\n            RCTUIManager.measure(\n                this.refs.scroller.getInnerViewNode(),\n                (x,y,width,inner_height) => {\n                    RCTUIManager.measure(\n                        React.findNodeHandle(this.refs.scroller),\n                        (x,y,width,outer_height) => {\n                            if (inner_height > outer_height) {\n                                var scrollTop = inner_height - outer_height;\n                            //do some additional logic here if we really want to jump down\n\n                            this.refs.scroller.scrollWithoutAnimationTo(scrollTop, 0)\n                        }\n                    }\n                )\n            }\n        );\n    }\n);\n\n},\n``\n. @larsvinter \n+1. Works like a charm.\n. I have the same issue with 0.4.4\n. @ide Hi. I would very much appreciate such an API. In the mean time is there a way to prevent an production app from crashing on any random JavaScript exception?\n. @lazywei Being a total Objectiv-C n00b I struggled with the headers.  To get it to work one needs to#import \"RCTPushNotificationManager.h\"in AppDelegate.m. You also need to make sure, that  \n_$(SRCROOT)/node_modules/react-native/Libraries (recursive)_  \nis part of your projects header search path.\n. @ericvicenti \nGreat news. Thanks!\n. @brentvatne I didn't realize thatsetNativePropsactually is the mutation API I was looking for. Thanks a lot. Maybe there could be some more documentation on that? But I don't know if react really want's to encourrage the usage ofsetNativeProps`except for a few special cases. \n. @marcshilling Sorry, I abandoned my original approach because it was not working properly. I still haven't figured out, how to access the \"onLayoutChange\" event of the underlying scroll view for a multi-line input. In addition to that I would also need access to some scrolling functionality to keep the text in the correct position after re-sizing the input. I when with a fixed height input for now but surely will re-evaluate the issue in the not so distant future.\n. Curtesy of http://stackoverflow.com/a/29115477/255765 I ended up with this:\nobjective-c\nfor (NSString *imgName in allPngImageNames){\n    // Find launch images\n    if ([imgName containsString:@\"LaunchImage\"]){\n      UIImage *img = [UIImage imageNamed:imgName]; //-- this is a launch image\n      // Has image same scale and dimensions as our current device's screen?\n      if (img.scale == [UIScreen mainScreen].scale && CGSizeEqualToSize(img.size, [UIScreen mainScreen].bounds.size)) {\n        NSLog(@\"Found launch image for current device %@\", img.description);\n        UIImageView *launchView = [[UIImageView alloc] initWithImage: img];\n        rootView.loadingView = launchView;\n      }\n    }\n  }\nSeems to work.\n. @nicklockwood Actually they do very much the same thing. When I started to look into this I probably didn't understand what to do with your snipped for pure lack of any xcode experience. When I finally got to the point where I understood what to do, I didn't realize, that you already had been there. Beside that, I personally find \"my\" solution a bit more readable. But that pure aesthetics.\n. @nicklockwood \nThat is an interesting decision to make. Coming from the web I operated under the assumption that a box is a box is a box. This is a very simple and intuitive paradigm.  The question is, if it's to difficult or cumbersome to enforce that for every component. React composite components shouldn't be a problem, because they always will have an outer View. So it's the native ones that could cause a headache. Unfortunately I know to little about iOS development to be able to say anything about that.\nThe other thing is documentation. The TextInput documentation states it includes all Text component style properties. And the Text documentation in turn says it supports the View style properties.\nAnd also the different behavior between multiline and no multiline is odd. I guess it's because one has an outer View and the other hasn't. But it's still a bit confusing.\nThat all said, I wouldn't mind having to use a composite for borders. If splitting a BorderView out doesn't bring a substantial benefit in performance or maintainability I would prefer to keep it simple (and Web like) and just use view. Even though the above mentioned documentation issue is probably easier solved with a BorderView. ... It's hard :)\n. ",
    "jawadrehman": "@ide I am using the https://github.com/exponentjs/react-native-invertible-scroll-view .\ni can easily add new content to the top , by pushing entries to the array. how do i add new entries to the bottom ? \nthe only solution i have in mind is to force an update by settting the array to be empty and then resetting it to an old one. but there has to be a better way ?\nlooking forward to a response. thanks\n. @brentvatne the app crashed when running on the simulator ... I had to work around it by wrapping the code around \nif TARGET_IPHONE_SIMULATOR\nNSLog(@\"This is simulator mode....\");\nelse\n//REST OF THE CODE FROM ABOVE\nendif\n. @brentvatne is there a way to do this without using flex : 1, in my case i have multiple components stacked across a view with flexDirection : 'row'\nwhat i want is each component to render to its full width, and if it overflows then go to the next line. \nUsing flex : 1, means that each component has the same width , which is not what i want, which means there's a lot of unwanted blank space. \nin the screenshot you can see that the first row has less space between the emoticon and the space character,  whereas the third row has far more spacing since other components aren't there\n\nthanks for any help that you provide :) \n. ping @vjeux ? any ideas on this... i have to use webviews atm to get around this, and the performance isnt really great. \n. @abhoopathy Why didnt you try hooking that up directly in the RCTTextView.m or something like that ... wouldn't that make it much easier ? Plus also save computation on creating the unnecessary UILabel  ?\n. can we scroll to using a rowID ?\n. @brentvatne so what parameters would i send to the function ? \nThanks\n. @brentvatne thanks for that... \nI have one more problem, how do i use this.refs.mySpecialRow from a listview, i can't seem to access it if its defined in the renderRow function. \n. Comparing with 0.5 , I did this and it worked.. \nsecureTextEntry={this.props.password || this.props.secureTextEntry} on line 435 of Components/TextInput/TextInput.js \n. after successfully updating my packages, i was able to start the app... but I get this warning in \nXCode\n\ninstance method 'eventDispatcher' in category from >/Users/jawad/Library/Developer/Xcode/DerivedData/VoxIosApp->azaijsjijhyvgacmwwmnuorswkql/Build/Products/Debug->iphonesimulator/libReact.a(RCTEventDispatcher.o) overrides method from class in >/Users/jawad/Library/Developer/Xcode/DerivedData/VoxIosApp->azaijsjijhyvgacmwwmnuorswkql/Build/Products/Debug-iphonesimulator/libReact.a(RCTBridge.o)\n\nOn trying to validate the app ...\n\n. @brentvatne even the first message on xCode isn't going to cause problems ?\n. My bad, I should have said prepend instead of append. \nsince its something to do with the history of messages, I first remove an item if it exists and then unshift it so that its at the top. Here's a small snippet\nvar chatMessages = main.state.chatMessages;\nvar id = messageKeys[jid];\nchatMessages.splice(id, 1);\nchatMessages.unshift(item);\n//this is the code I am not too fond of, and would like it to be simpler\nfor(var i = 0, j = id; i<= j  ; i++){\n          messageKeys[chatMessages[i].jid_id] = i ;\n          main.refs.ListMessageHistory.refs.listMessages.props.dataSource._dirtyRows[0][i] = true;\n        }\n main.setState({chatMessages : chatMessages, messageKeys : messageKeys }, function(){\n          main.refs.ListMessageHistory._renderRows();\n        });\nINSIDE MY _RENDERROWS function\nthis.setState({dataSource: this.state.dataSource.cloneWithRows(\n        this.props.chatMessages\n      )});\n. ",
    "bootstraponline": ":+1: \n. Cool! I think for the secure text field, there needs to be a way to enable the secureTextEntry\n  trait on the existing react-native TextInput component.\n. My use case is having a user type in their password to the secure textinput (regular textinput isn't desirable for this) as part of logging into the app. I see secureTextEntry in that PR, it's just not exported as a view property. It'd be great if this feature was added.\n. :+1: for \"What are we working on\"\n. :+1: Please make it open source. \n. What does Facebook gain by relicensing the examples so they're no longer open source? It's a shame regressive licensing (starting as open then restricting rights) is overshadowing the actual technology in terms of the community reception.\nIt doesn't inspire confidence that Facebook randomly relicenses previously open sourced code.\n. Facebook updated the patent grant. :+1: \n. ",
    "arunv": "Ah formatting bug. Basically I can hit this by scrolling really fast down the Paging ListView. \nI can fix it by locking the dictionary between changes, but that might hurt performance. \n. Added a pull request if you guys want to comment on it. \nhttps://github.com/facebook/react-native/pull/117\n. ",
    "caridy": "@ide this is somehow related to https://github.com/facebook/react-native/issues/116, which we have discussed briefly with @amasad and co last week.\n. @amasad from the spec, no, you don't have access to the source from the runtime. this process has to happen in the native layer. There are many npm packages to deal with source map, like https://github.com/lydell/source-map-url, hope that help to get the idea of how to pick up the source map from the blob after reading it from disk. Of course, we will have to implement it in native :)\n. awesome, thanks @frantic\n. ",
    "dhrrgn": "@brentvatne I came up with a simple solution for this internally where I wrote a component that essentially just extends UIView and blurs all of the subviews on touch.  Here is the guts of it:\n``` objc\n@implementation KBCloserView\n\n\n(void)didMoveToSuperview\n{\n    self.userInteractionEnabled = TRUE;\n    [super didMoveToSuperview];\n}\n\n\n(void)touchesBegan:(NSSet )touches withEvent:(UIEvent )event{\n    for (UIView *subview in self.subviews) {\n        [subview endEditing:YES];\n    }\n}\n\n\n@end\n```\nSo I just convert my container View's to <KBCloserView> components, and :boom: tap anywhere in the view to close the keyboard.\nI share this because I think adding a closeKeyboardOnPress type property to the RN View component, which just does the above, would be simple and solve this problem entirely without having to go through the effort of changing how blur works (I personally like that it only blurs the specific input).\n. @brentvatne I will do that tomorrow...right after I figure out how to create an Xcode project people can just add to their's (bit of an Xcode \"noob\") haha. (Side note: it would be awesome if their was a \"Creating Distributable Native Components\" section of the docs for this sort of thing).\n. @brentvatne Awesome, thanks. \n. @syousif94 Here is a nice blog post I found earlier today actually about using section headers: http://moduscreate.com/react-native-listview-with-section-headers/\n. ",
    "grabbou": "Any updates on that? Calling blur on a view should act like endEditing as per @ide suggestion. If not, maybe worth adding another method.\nMy use case:\nUsing @brentvatne modal with click backdrop to dismiss feature. When the keyboard is opened, I'd prefer closing the keyboard instead of dismissing the modal so user has the ability to continue editing. Not all keyboard types are provided done button as of now (e.g. numpad) so it gets tricky.\n. Yeah, can do. Just need to dig into the source code as I haven't contributed yet but would love to.\nAnother thing worth noticing is that the method signature is actually endEditing:force instead of mentioned :animated. \nAfter doing a couple of more tests it looks like the this.refs.mainView.blur() blurs all the child TextViews (including TextInputs that are inside another view).\nSample structure returned from render:\n<View ref='modal'>\n    <View style={styles.container}>\n          <TextInput .... />\n          <TextInput .... />\n    </View>\n</View>\nand the invocation:\nthis.refs.modal.blur();\n. What I am doing in my current project (highly inspired by React source code) is...\njs\nimport {paragraphBase} from '../app/app.style.js';\nexport default Stylesheet.create({\n   container: {\n        ...paragraphBase,\n        fontSize: 20\n   }\n});\nFunction expressions are definitely something worth exploring, especially when we consider writing media-query like stylesheets that export different properties depending on the device width. \n. Still an issue here...\nNo livereload: CPU 1.0%\nWith livereload 10 seconds after: CPU 150%. \nHavent even refreshed the code nor started interacting with the app. \nThe process is called este (the name of the app I am working on) and when killed, closes the debugging session in Xcode, so surely it's something related to this process.\n. Currently I've just put all the stuff into a separate routing factory that has all the possible components defined upfront so displaying a new route is as easy as calling this.navigateTo('route'), but I am happy to work on few improvements on NavigatorIOS to bring more UINavigationController goodies. The issue seems to be somewhere at the bottom of the priority list, so let's talk about this during react conf and try to figure out what we can do about that ;) \nCC: @vjeux \n. @vjeux React Europe deadline? :dart: \n. On a side note - having something with a POP similar API would be very beneficial to those who are already familiar with your animation library when writing native apps in the old way!\n. Haven't seen any notes about blur and other methods available on a given component, is this something we would be interested in describing as well?\n. Yeah, can add in some descriptions, any hints what's the appropriate place for them speaking docs structure wise?\n. Ah, nice! Will send over later today.\n. @brentvatne what about keeping the structure inside OSSLibraries somehow similar to the Libraries so it's easier to just move around instead of investigating the whole folder from scratch? \n. @brentvatne - Yes. This kind of stuff. So it's possible to move other bits as well (currently there are none, but who knows ;) ). Anyway, will send over something by the end of the week and then we can discuss the structure further.\n. Doesn't matter who's the owner of the repo?\n. One step closer to join Facebook organisation :8ball: Ok, will dig into that.\n. Might be related to #1561\n. I am not sure if anything can be injected here, apart from printing ENV vars after ';'. I wasn't able to execute any other command like ls, but since this is usually run by user on it's own, I am not sure if extra protection is needed in such case. (he can print $USER anyway from terminal)\n. Sure! Always looking forward to security tips from FB team!\n. Can we then remove the udid from fullName then? I think that's more than we need to print on line 56\n. That's true, but on the other hand - since we launch simulators based on the string (name), not its udid, I am not sure if it helps that much on regular basis. If you have say naming conflict, I am pretty sure the first device from the list will get selected.\n. I think it should be project-dir instead since it's not really a path? Apart from that, looks good. \n. It would be nice to have flow types here for the function arguments & maybe instead of a switch case, just define a constant:\n``` js\nconst REPEAT_INTERVAL = {\n   year: 4,\n   month: 8,\n   week: 8192,\n};\ndetails.repeatInterval = REPEAT_INTERVAL[details.repeatInterval] || 0;\n``\n. Since we are overriding the error in else block, maybe it's better to includeHot loading isn't working because it cannot connect to the development serve...here as well and just make itconst error = Platform.OS ? '' : ''?\n. Can we make eslint either ignore these by/ eslint-ignore quotes:0 /or updating?\n. Red screen withJSON value '' of type NSNull cannot be converted to NSNumber`. \nHowever I don't think details is optional here (no ? in type). If it can be empty, then definitely we have to check for that with something like this:\nobj-c\nNSNumber *repeatInterval = details[@\"repeatInterval\"];\nif (repeatInterval) {\n  notification.repeatInterval = [RCTConvert NSInteger:repeatInterval];\n}\nor use ?: inline.\n. Good idea! Will send soon :)\n. Done, thanks!\n. Thanks! Shall we update the YellowBox.js docs? That was a straight copy\n. There is no native code living in Linking folder. Everything is in LinkingIOS.\n. I think we don't need ! here\n. There's no such property as ios/android. Please check this out for reference https://github.com/mozillo/react-native/blob/patch-1/website/src/react-native/showcase.js#L24-L25\n. Maybe we should also update React occurrence here as well?\n. My commit msg is wrong actually - I assumed systemFontOfSize was iOS8+ which in fact only applies to systemFontOfSize:weight. However I still think it might be easier to just call the method again without fontFamily.\n. Ah ok - then probably something to remember for other files :) thanks.\n. Can you leave them unquoted? Should be name desc etc., instead of \"name\"\n. I know I am being boring here, but did you notice that the indent level is not the same as few lines above?\n\nHopefully that's the last thing and we can ship it :)\n. @ide was there any reason you used _bridge.imageLoader instead of self in this context? I can revert that change and probably do the same for my method, just not sure what was the reason.\nPS. Shouldn't we add [error localizedDescription] on line 649 as well? :)\n. I believe the name change is just the git diff displaying improperly. The method itself was moved few lines below to be exported (as there's no other place in the codebase using it except the ImageViewManager that no longer has it).\n. That's true, however the good thing is it can be used with non-style values and also at any level of StyleSheet object.\nThat means it's tricky to return a default value when Platform key is missing, like in the below example:\njs\n// will throw on Android, we can return an `{}` as a default, but then, the next example wont' work\nStylesheet.create({\n   ...Platform.select({ \n      ios: {} \n   }) \n})\nand\njs\n// here it might work, but it might be unexpected\nStyleSheet.create({\n   container: { \n     marginTop: Platform.select({\n        ios: 5,\n     })\n   } \n})\nand forgot to specify another platform.\nMy initial reasoning was that this is intended to be used when you have values for both platforms to support - otherwise you can just supply an empty object.\nPS. I have just noticed that it's going to also throw when value is falsy (e.g. 0 given for marginTop, so that will have to be handled as well) \n. Oh, nice! Didn't know that - then it makes 100% sense :) (that invariant was only to prevent that case)\n. Oh, nice! Didn't know that - then it makes 100% sense :) (that invariant was only to prevent that case)\n. We could probably annotate it like select<T>(obj: {ios: T}): T if that's something useful\n. We could probably annotate it like select<T>(obj: {ios: T}): T if that's something useful\n. Would you mind clarifying? (Is the PR update allowed when shipping in progress?)\n. Would you mind clarifying? (Is the PR update allowed when shipping in progress?)\n. I will play around internally tomorrow when we start integrating that and see how Flow behaves. Just started using it recently, so I'd better check first.\n. I will play around internally tomorrow when we start integrating that and see how Flow behaves. Just started using it recently, so I'd better check first.\n. What if we just remove that mapping, pass the string value directly to Objc (no need to check the details on JS side) and define something like this (note - you have to check proper enum names):\n``` objc\n@implementation RCTConvert (NSCalendarUnit)\nRCT_ENUM_CONVERTER(NSCalendarUnit, (@{\n  @\"era\": @(NSCalendarUnitEra),\n  @\"week\": @(NSCalendarUnitWeekday)\n}), 0, integerValue)\n@end\n```\nThat means we can just:\nobjc\nnotification.repeatInterval = [RCTConvert NSCalendarUnit:details[@\"repeatInterval\"]];\nwhich defaults to 0 when given null, undefined, and non-matching strings.\nHere's an example where to put it -> https://github.com/grabbou/react-native/blob/feature/tab-bar-position/React/Views/RCTTabBarManager.m#L17-L21\n. What if we just remove that mapping, pass the string value directly to Objc (no need to check the details on JS side) and define something like this (note - you have to check proper enum names):\n``` objc\n@implementation RCTConvert (NSCalendarUnit)\nRCT_ENUM_CONVERTER(NSCalendarUnit, (@{\n  @\"era\": @(NSCalendarUnitEra),\n  @\"week\": @(NSCalendarUnitWeekday)\n}), 0, integerValue)\n@end\n```\nThat means we can just:\nobjc\nnotification.repeatInterval = [RCTConvert NSCalendarUnit:details[@\"repeatInterval\"]];\nwhich defaults to 0 when given null, undefined, and non-matching strings.\nHere's an example where to put it -> https://github.com/grabbou/react-native/blob/feature/tab-bar-position/React/Views/RCTTabBarManager.m#L17-L21\n. @dsibiski unrelated to this PR, but if I am not wrong, we forgot to check that with the previous app (see line 870). Maybe we can set up eslint to run here as well? @bestander \n. This introduction is great, but I'd suggest splitting it into smaller sentences to make it easier to read, what do you think? \n. This introduction is great, but I'd suggest splitting it into smaller sentences to make it easier to read, what do you think? \n. We could probably link here to a document describing namespacing issues and why that's important? RN is good, however it may produce some conflicts, I usually name it with the domain, e.g. MGR (which is my first name and last name shortcut)\n. We could probably link here to a document describing namespacing issues and why that's important? RN is good, however it may produce some conflicts, I usually name it with the domain, e.g. MGR (which is my first name and last name shortcut)\n. Instead of a gif we can link to the linking-ios docs?\n. Instead of a gif we can link to the linking-ios docs?\n. I don't think rem is being actively work on? (cc: @ide) \n. I don't think rem is being actively work on? (cc: @ide) \n. Check out the set-up I made here https://github.com/react-native-fellowship/react-native-side-menu/pull/174 (cc: @brentvatne). That allows us to modify the component as you are working on it w/o copying & pasting (however requires a viable Example in the project)\n. Check out the set-up I made here https://github.com/react-native-fellowship/react-native-side-menu/pull/174 (cc: @brentvatne). That allows us to modify the component as you are working on it w/o copying & pasting (however requires a viable Example in the project)\n. Isn't the most-up-to-date approach to just specify peerDependencies: { \"react-native\": \"*\" }?\n. Isn't the most-up-to-date approach to just specify peerDependencies: { \"react-native\": \"*\" }?\n. No, but I am assuming if one will be upgrading to 0.27 we will provide a new version of rnpm-plugin-upgrade to make it consistent (rnpm-plugin-upgrade@0.27) and easier to work with (or maybe change it completely? I am not settled on the interface yet to be honest)\n. Ideally I'd like to reject promises with an error, not a plain string. But since this is a common catch-all handler, it should support both.\n. Ideally I'd like to reject promises with an error, not a plain string. But since this is a common catch-all handler, it should support both.\n. cc: @Kureev I can see lots of things for rnpm to do here :)\n. cc: @Kureev I can see lots of things for rnpm to do here :)\n. @mkonicek btw isn't that a bug? Why do we push installDebug value here? Wasn't that meant to be an extra arguments only when installDebug is used? (as defined on line 68?) Otherwise we are passing installDebug option to another variant.\n. @mkonicek btw isn't that a bug? Why do we push installDebug value here? Wasn't that meant to be an extra arguments only when installDebug is used? (as defined on line 68?) Otherwise we are passing installDebug option to another variant.\n. commander camel cases the flags anyway, so regardless whether it's reset-cache or resetCache that we allow to be passed, it's always accessible the same way.\n. commander camel cases the flags anyway, so regardless whether it's reset-cache or resetCache that we allow to be passed, it's always accessible the same way.\n. @mkonicek in next PR, what I would like to see is to move these all chalk.red calls (errors) to be just Promise.reject / throw new Error so that we have a centralised error reported in the cliEntry.js file. That would also stay consistent with other commands (like runIOS) where we throw errors instead of logging & swallowing them. Might be also a bit easier to work with in case one is debugging and doesn't know where the error is coming from. What you think? :) Was there any specific motivation for doing it that way?\n. @mkonicek in next PR, what I would like to see is to move these all chalk.red calls (errors) to be just Promise.reject / throw new Error so that we have a centralised error reported in the cliEntry.js file. That would also stay consistent with other commands (like runIOS) where we throw errors instead of logging & swallowing them. Might be also a bit easier to work with in case one is debugging and doesn't know where the error is coming from. What you think? :) Was there any specific motivation for doing it that way?\n. Do we need this line? I don't think it's needed. Commander will always take process.argv here.\n. Do we need this line? I don't think it's needed. Commander will always take process.argv here.\n. Ah that search & replace.\n. Ah that search & replace.\n. I believe you should add @platform android to the doc block along with selectableAndroid (kind of thing) so it's clear it's not supported on the iOS.\n. @Kureev we need to replace rewire and mock-require right after that, are you up to giving it a go?\n. @Kureev we need to replace rewire and mock-require right after that, are you up to giving it a go?\n. Why command line args are comma separated? Shouldn't be --entry-file /path/SomeAppBundle.js --platform ios etc? Looks like master branch doesn't handle that format either\n. When called like this:\nbash\n$ node local-cli/cli.js bundle --entry-file /path/SomeAppBundle.js --platform ios --dev --bundle-output /path/buck-out/gen/__SomeAppJS#dev_js__/main.jsbundle --assets-dest /path/buck-out/gen/Libraries/SomeApp#dev_res__ --sourcemap-output /path/buck-out/gen/Libraries/SomeAppJS#dev_source_map__/source.map\nthe args object is:\njs\n{ \n  entryFile: '/path/SomeAppBundle.js',\n  platform: 'ios',\n  transformer: '/Users/grabbou/Repositories/grabbou-react-native/packager/transformer.js',\n  dev: true,\n  prepack: undefined,\n  bridgeConfig: undefined,\n  bundleOutput: '/path/buck-out/gen/__SomeAppJS#dev_js__/main.jsbundle',\n  bundleEncoding: 'utf8',\n  sourcemapOutput: '/path/buck-out/gen/Libraries/SomeAppJS#dev_source_map__/source.map',\n  assetsDest: '/path/buck-out/gen/Libraries/SomeApp#dev_res__',\n  verbose: undefined,\n  resetCache: undefined\n}\nThe names of parameters didn't change at all as far as I am aware.\n. Looks like this might be breaking all usages of link ABCD with the RC? If yes, that has to be cherry-picked into stable release.\n. Looks like this might be breaking all usages of link ABCD with the RC? If yes, that has to be cherry-picked into stable release.\n. Yeah, actually @rozele submitted a PR fixing that particular thing, mind rebasing in like an hour once the merge finishes?\n. Yeah, actually @rozele submitted a PR fixing that particular thing, mind rebasing in like an hour once the merge finishes?\n. I am pretty sure I've seen similar PR in the past and there was discussion that you can pass json flag?\n. Yeah, but we have already merged a fix for that here: https://github.com/facebook/react-native/blob/master/local-cli/cliEntry.js#L161\n. pathToCommands can be react-native-windows/cli/commands.js - since we want to read the package.json we need to split.\nNote, scoped modules are not considered since all plugins here have to follow strict naming conventions (either rnpm-plugin-* or react-native-*).\n. FYI . as in regex matches any character except a space. Author probably meant a dot.\n. FYI . as in regex matches any character except a space. Author probably meant a dot.\n. Ah, fair.\n. Aren't we like including that piece of functionality in many places? Wouldn't it be easier to just have a spawnSync util, called callYarnOrNpm that abstracts that? There are few other places where its going to be needed and so I'd like to keep it as minimal as possible.. nit: empty line. Please fix formatting, also make sure to follow alphabetical order. Thanks for mentioning :) That's what gives the motivation :rocket: Good job on the article!. How that could work in practice? I mean not sure how category could be used to export method. If possible - that's great and quite reasonable as long as we assume Blob is opt-in module.. That would introduce two places where the string is defined, one on native side (we need to refer to BLOB_URI_SCHEME and second on the Javascript side). Also, on Android it has a different value. \n@satya164 ?. Correct.. Since this is just a port of existing work, haven't looked into that before that comment. Thanks for bringing it up. Certainly these methods are not only executed by the JS calls, but also from within the Websocket module. \nI think wrapping entire method in a synchronized(_blobs) would do the trick?. I think it's just a convenience. If you will look at the caller, it's -resolve: blob that refers to it. And that method is just a proxy, that extracts arguments from a passed dictionary and applies default parameters. \nSince both offset and size can be optional, I cannot think of a better alternative to that.. Any difference over just obj.android || obj.default ?\n. @satya164 true! You are right, all in all value can be literally anything!. nit: double quotes around \"iOS\" in the entire file, should be single quote. nit: spaces around *. Can this be module.exports = makeRunCommand(opts) instead of a class and makeExports()? \nI believe a simple closure that returns an object would be enough:\n``js\nfunction makeRunCommand(opts: Options) {\n   return (argv, config, args) => {\n      // stuff here\n   };\n}. Can we change it from function arguments to an object and useflowto type it? . nit: UsecamelCaseinstead of sneak_case. That should beconstrather than a function I believe. That should beconstrather than a function I believe. Rather than having those methods on prototype, prefer to keep them asfunctionsor even in separate files for better testability (where it makes sense).. Rather than having those methods on prototype, prefer to keep them asfunctionsor even in separate files for better testability (where it makes sense).. nit: Prefer string templates over string concatenation, e.g.No ${osType} devices connected. nit: Prefer string templates over string concatenation, e.g.No ${osType} devices connected. nit: space before{. nit: space before{`. Again, I believe all these should go out of prototype to normal functions.\nSomething like:\n```\nfunction runOnDeviceByUdid() {}\nfunction runOnDevice() {}\nfunction matchingDeviceByUdid() {}\nmodule.exports = function makeRunCommand() {\n   return () => {\n     // this function runs command\n   };\n}\n```. Again, I believe all these should go out of prototype to normal functions.\nSomething like:\n```\nfunction runOnDeviceByUdid() {}\nfunction runOnDevice() {}\nfunction matchingDeviceByUdid() {}\nmodule.exports = function makeRunCommand() {\n   return () => {\n     // this function runs command\n   };\n}\n``. That is big enough to go to sep. file and be tested :). That is big enough to go to sep. file and be tested :). nit: space before?. nit: space before?. nit: usearrowfunctions where possible over functions like that (also applies to other places in the code). nit: usearrowfunctions where possible over functions like that (also applies to other places in the code). nit: use multi-line comment as that one exceeds 80 chars. nit: use multi-line comment as that one exceeds 80 chars. Can we useenv` variable for consistency with other places where we already use it? \nExample: https://github.com/facebook/react-native/blob/dfaa03e1cb12b349152ca10f997ac198ab995d1e/local-cli/server/util/launchEditor.js#L84\nREACT_TERMINAL or something might be a good idea for future scripts. Can we use env variable for consistency with other places where we already use it? \nExample: https://github.com/facebook/react-native/blob/dfaa03e1cb12b349152ca10f997ac198ab995d1e/local-cli/server/util/launchEditor.js#L84\nREACT_TERMINAL or something might be a good idea for future scripts. We've been using workflows with separate images (in particular, testing on different Node versions, just like Travis does by default) and it's been working well. Not sure about performance disadvantages though.. I believe empty line here and on line 14 is not intended? (nitpick). After removing, shall we also call pod install to sync the project? What happens right now after you unlink? . nit: typo in definition. nit: typo in definition. nit: typo in target. nit: typo in target. Same here: no need to include an empty line :). Same here: no need to include an empty line :). Shouldn't this return an array? What if user has few targets in a single pod file, one e.g. for iOS and second for e.g. tvOS? Same issue is happening right now in standard link - we just link to first target rather than to all that include React. I am currently rewriting this approach.\nHere, I believe we should find all targets that have pod React inside (they consume React Native via CocoaPods) and assume that if they already use React Native inside that target, they want to use linked module as well.. Shouldn't this return an array? What if user has few targets in a single pod file, one e.g. for iOS and second for e.g. tvOS? Same issue is happening right now in standard link - we just link to first target rather than to all that include React. I am currently rewriting this approach.\nHere, I believe we should find all targets that have pod React inside (they consume React Native via CocoaPods) and assume that if they already use React Native inside that target, they want to use linked module as well.. You can check what Mobile Azure team has done - when you attemp to link one of their native libraries, they ask you to include special comment in Podfile. It's a marker after which pods are inserted. That comment of course can be placed multiple times so that they link each target. \nUsecase proposed here is a bit too complex for us, but I guess checking for pod React and inserting after it is a good starting point. Just like we insert projects to gradle files.\nCC: @Kureev . You can check what Mobile Azure team has done - when you attemp to link one of their native libraries, they ask you to include special comment in Podfile. It's a marker after which pods are inserted. That comment of course can be placed multiple times so that they link each target. \nUsecase proposed here is a bit too complex for us, but I guess checking for pod React and inserting after it is a good starting point. Just like we insert projects to gradle files.\nCC: @Kureev . Wish there was a way to run on pull request builds only in a more declarative way. This will publish ALWAYS from stable regardless of the tests. We should either wait for other workflows programatically to complete (no API yet that I am aware that allows it - you can only queue up jobs within particular workflow) or make this job \"manual\", meaning that I have to go to CircleCI and manually click \"Deploy\" . I actually believe that would be better approach. Many times, CI builds fail because of Flow, flakiness or something. Having manual way to approve build regardless of the failure would make it easier to avoid such issues in the future.. js is more concise?. js is more concise?. Can we make a common step for npm install just like we did for cache restoration and use it like this? We seem to be repeating that over and over in many places.. Can we make a common step for npm install just like we did for cache restoration and use it like this? We seem to be repeating that over and over in many places.. I think js is more concise?. I think js is more concise?. Okay. I think write access might be needed. If I need to undergo special security constraints here or something (like use a separate account), happy to comply with it. I think given my past experience, ti would be great to not wait for FB since you guys are pretty busy anyway!. Discussion here: https://github.com/facebook/react-native/pull/16348#discussion_r144476728. Discussion here: https://github.com/facebook/react-native/pull/16348#discussion_r144476728. Ah, true, will play around :). Ah, true, will play around :). This is re-added in @hramos PR as a separate job.. This file has wrong indentation. Try running prettier for all the files in your PR (not sure if you have it integrated already). This file has wrong indentation. Try running prettier for all the files in your PR (not sure if you have it integrated already). AFAIK we can use type: EmitterSubscription and return StatusBarManagerEventEmitter.addListener directly? That way, we don't have to hold _subscriptions and removeEventListener at all. I feel like add/removeListener is the old pattern in RN and the newest APIs are leaning towards the subscription oriented approach. . Same here, feels like repeated action. These 3 all are defined anyway, so it might be worth to just directly call them.. Shouldn't be needed with UseCGroupMemoryLimitForHeap flag. As per Twitter discussion, we tried different combinations and none of them ended up working.\nDecided to increase the container size for Android as an alternative (and free) approach. CircleCI support turned it on for our repository after my request.. I don't think this is the right place for this change. First and foremost thing is that it mutates dependency object making this function no longer pure. \nAnother thing is that I can't tell where the new value with / replaced to _ should be used. In your comment you said that it breaks include statement in Gradle. \nMaybe you should do this replacement directly inside the function that puts include statement into Gradle file?. E.g. here https://github.com/vekerdyb/react-native/blob/e9e841628fc77faa9bd271c86a031d0518d5e7e6/local-cli/link/android/patches/makeSettingsPatch.js#L22, make const escapedName = name.replace() and done :) (hopefully). > Mmm, that will only work if this name isn't re-used anywhere else\nYup, and that way it's explicit where we sanitize the name. Doing it globally on a dependency can have side effects as the name field is supposed to be the name of the package. \nFunction is a great idea that plays well with our design. I think I've seen it already in generator subfolder where they do the same for react-native init (sanitize the name when creating Android main application). We could potentially reuse that as well :). That makes sense, although I would be much more in favor of having it use the same signature. \nCC: @Kureev . @rozele that looks like a major regression - can you check what's failing and whether we can get this fixed quite easily?. To be defined. Did it really quick to demonstrate it on the CI. Since I don't plan on releasing CLI exactly at the time of the new React Native release (in fact, I would like to do it more often to fix critical issues faster and ship new improvements), it will be really hard to keep up the same number and not to cause confusion.\nI guess we can start with 1.0.0 when the migration is over and the PR is ready.. This file is now duplicated between React Native and React Native CLI. Shall we consider making it a separate package, e.g. react-native-cli-path-utils and publish to npm?\nCC: @TheSavior . Don't think it's needed at the beginning since React Native contains a dependency on CLI for now. It is similar to the way we handle Metro - it also doesn't have compatibility table on React Native.\nHowever, I do think keeping a peerDependency is going to be the right choice to make it easier to sync CLI and React Native versions together.. FYI I already published 1.0.0-alpha.0 version and updated this PR.. Yeah. For now, I think we can ship the copy and figure out this as a next PR. Problem with this one is that I need to update local-cli folder every time something changes which is very hard. Hopefully, we can get this reviewed ASAP.. Yeah, I think this is a good suggestion. . Then I'd leave it as is. I think it might be for historical reasons. @TheSavior do you happen to know the answer to this? . I guess the intent here is to implement missing functionality on per request basis, when we get an issue?. Looks good!\nI would consider adding a note about the new npm package, similar to what Navigator is doing: https://github.com/facebook/react-native/blob/ff329801edbd7bbfd52716f8e236d13cd46b04a1/Libraries/react-native/react-native-implementation.js#L357. We have kept this behaviour, but made react-native-local-cli to have \"bin\" property instead. So just declaring in a different npm module (since React Native itself doesn't have an executable anymore). Nope, this only affects projects that run React Native from source. RNTester uses react-native from source (../ folder). All other apps get react-native from node_modules/react-native. I think it shouldn't. This was added 2 weeks ago for me \"as a workaround\" and I reverted the format of config to what it's there already.\nhttps://github.com/facebook/react-native/commit/1af390be19000b2756fc646e72f152dd383a0bb1#diff-41fdc10e1b5862877e4afa7e9176ee09. ",
    "admmasters": "Not working for me either - an outstanding issue I'm afraid.\n. @nicklockwood late to the party here - but that sounds like a happy balance. Any ETA on this?\n. FWIW - you lose the translucency when scrolling content under the navigation bar - which makes sense when you think of how automaticallyAdjustContentInsets works.\n. This is also occurring for me... intermittently while scrolling in the simulator in my own app.\n. I had this issue as well. Was unaware that brew had to be updated to determine the most recent flow version.\n. Not sure if this is related but have also discovered the following: EXC_BAD_ACCESS: RCTText line 90 - crashed with [_textStorage addLayoutManager:_layoutManager].\n. Stack trace ends at: [NSLayoutManager(NSPrivate) _recalculateUsageForTextContainerAtIndex] - The main thread.\n. Created a PR for this - changed tick to onTick.\n. This is occurring on the 0.6.0 release version. Can be reproduced by creating a brand new project and adding at least one TextInput field to the render method. \n. This is related to line 422 of TextInput.js:\nprops.style = [styles.input, this.props.style]\nYou are mutating props within the render method - which obviously is not good practice.\n. Sure - I was just looking at it now :)\n. @brentvatne - the experience is indeed not very nice and seems a little bit hacky - having worked with native keyboard handling I've seen the multitude of issues that people come up against when trying to write this kind of code. I've even seen production apps where the attempts to move the screen to cope with the keyboard appearing have resulted in fails. For pure native iOS there are libraries like this one:  https://github.com/hackiftekhar/IQKeyboardManager - without really delving deeply into the issue it would be nice to be able to have this sort of functionality built into React Native as we are going to end up having to write lots of boilerplate specific to iOS as Android has much better methods out of the box of handling this sort of scenario: http://stackoverflow.com/questions/3295672/android-soft-keyboard-covers-edittext-field\n. I'd imagine we could base something off: https://github.com/johanneslumpe/react-native-keyboardevents - but absolutely animation would be necessary, to achieve the native experience that I'm sure drew the majority of the developers using it to React-Native. Would be absolutely essential to recreate that Apple Bezier curve animation and it would be nice - not to have to jump into native code. Just having the discussion I guess at this stage.\n. Thanks - had a play around with it, looks good - the issues with some of the approaches like this are that the best implementations on iOS only move the keyboard up when necessary as oppose to all the time, for instance opening a textfield at the top of the page should not move the frame up etc. Interestingly - IQKeyboardManager seems to work well with React Native now, might be worth a look for an out of the box solution for iOS. Would prefer if we had a purely native solution though, frankly. :-)\n. No problem - sorry, been away for a few days, will look at doing this shortly.\n. No problem - sorry, been away for a few days, will look at doing this shortly.\n. ",
    "fkling": "You have to run npm install inside website/react-dcogen first. This is only temporary until react-docgen is available as npm module.\nI will check what's up with the second error.\n. I can repro the second the error with a fresh npm install. Will investigate.\n. > I could make a PR to improve the readme on this if you want ?\nThat would be great! Thanks!\n. This was definitely a bug from my side, which is now fixed. However, there is also a bug in ExpandingText.js I believe. PropTypes should be propTypes. https://github.com/facebook/react-native/blob/master/Libraries/Text/ExpandingText.js#L35\n. Sure!\n. I had Header before but it didn't seemed weird to link \"inside\" a prop. But sure, if this is desired, then yes :)\n. I had Header before but it didn't seemed weird to link \"inside\" a prop. But sure, if this is desired, then yes :)\n. (name) could be just name (not sure what the style conventions are).\n. (name) could be just name (not sure what the style conventions are).\n. ",
    "ppong": "@nick the Carousel sounds awesome. Unfortunately https://github.com/nick/react-native/blob/master/Examples/Weather/js/components/Carousel.js leads to a 404.\n. @nick thanks! it works now :+1: \n. ",
    "jmstout": "Has this been addressed? I'm experiencing the same delay, regardless of whether the TouchableHighlight component is in a ScrollView or just a View.\nIt's not the biggest deal, since an easy workaround is to just extend the component and override the delay:\njavascript\nclass TouchableButton extends TouchableHighlight {\n  touchableGetHighlightDelayMS() {\n    return 0;\n  }\n}\nHowever, I am wondering if there could be a better implementation. Currently, the stock TouchableHighlight component is noticeably unresponsive.\n. Any news on this?\n. @sahrens \nI guess implementing that feature was mainly about giving people as many options as possible for how they want their interface to respond.\nI could see a case where you might want the highlight to appear and disappear before the touch is released as a way of informing the user that an action has been registered, even if they're still pressing the component. Communicating that, \"it's okay to stop pressing now, your input has been acknowledged\".\nLike I said previously, if you think the complexity this adds doesn't seem worth it, I can remove the delayHighlightShow and delayHighlightHide properties.\nYou do raise a good question, and I am really interested in what other folks think about this.\n. @brentvatne thanks for the feedback!\n- Adding examples is a good idea and something I'll tackle once we get the api finalized.\n- I'll definitely remove the delayHighlightShow and delayHighlightHide props, I suppose they did add more complexity than it was worth - you make a good point about keeping the API surface area smaller.\n- You've both mentioned clearer asserts to avoid negative delay cases. Forgive my ignorance, but what exactly does this mean? In areas where negative delay props would cause issues I've made sure Touchable will only accept a minimum of 0, and in other areas, passing a negative value to setTimeout just returns the function immediately. Should we be throwing an error if a negative value is set? Or when you say asserts, do you mean testing? Any guidance would be much appreciated.\n- As far as condensing the properties into one delay prop that takes an object - I don't really have a preference one way or the other. I considered this initially but opted for the individual props as it seemed more in line with the style of existing React apis. (If we're going this route, could all of the onPress props also be defined in an object behind one interaction property?) Maybe @vjeux can weigh in here?\nAgain, thank you for taking the time to help me figure all of this out! :+1:\n. @brentvatne thanks for getting back to me. Definitely still interested in pushing this through.\nI have addressed the issues we discussed so it should be good to go.\nQuick review of the changes I made:\n- Removed the delayHighlightShow and delayHighlightHide props.\n- Removed 'On' from the delay props name, so delayOnPress becomes delayPress and so on.\n- Added an example:\n  \n- Also an invariant violation for negative cases, as you suggested:\n  \nThanks again! I really appreciate you taking the reins here and helping move this forward.\n. I've addressed all of your comments, @sahrens.\nHopefully the changes are sufficient.\n. If I'm not mistaken, the travis build failed because of an issue connecting to the development server... mind rerunning it?\n. :white_check_mark: \n. The way I have been using this is for customizing the responsiveness of touchable components based on their context in an app.\nIf I have a Touchable component inside a ScrollView, I'm going to want to have a substantial delay before the onPressIn event fires to avoid presses when the intention was a scroll (as is the default). But, if it isn't inside a ScrollView, the added delay is unnecessary and just makes the component feel unresponsive.\nI also don't believe that all Touchable component's inside ScrollViews should be created equally - meaning that a component located in a position that is less likely to yield an accidental press when the intent is a scroll should have a delay commensurate to this position. Small buttons located at the edges of the screen, for example, are far less likely to be accidentally pressed on scroll than large buttons in the center of the screen.\nUsing the delayPressOut is useful in scenarios where you want the highlight to last longer than the default 100ms. Personally, I've been using it in situations where I make a network request with onPress and want to give it a little bit of extra lead time before I transition the view.\nYou might say that I should just be transitioning the view after the request has completed, but given the unpredictability of the network, I wouldn't want the component to be stuck on a highlight for a, potentially, lengthy time - where the user might think the app has frozen. Instead, I want to be able to, visually, split the load time between the button's interaction and the content's transition, rather than having the 'loading' state of one or the other be exceptionally long.\nI initially rolled my own component to handle some of this functionality, but was finding that I needed this granularity of control nearly every time I employed a Touchable component. I can't imagine that I'm the only one, especially given the discussion in #134.\nI understand not wanting to add complexity, but would argue that one extra timer in Touchable and the interface to expose the properties is a small ask given what it adds, functionality wise, for the end user.\n. I think trying to foresee every scenario where Touchable components should have different timings is a noble cause, though, in reality, an impractical one.\nIf you're suggesting that we provide sensible defaults on top of the ability to customize the delays, then I'm in support of this and I think the two you've mentioned are a great starting point.\nBut, correct me if I'm wrong, it seems that you're opposed to exposing the delay props to developers.\nIf that's the case, I would emphasize one of the use cases I discussed earlier - Touchable components within a ScrollView where the ideal interaction would require different delayPressIn values depending on their differing sizes and positions. (Imagine small buttons in a toolbar at the top of the screen needing a 50ms delay vs a list of large buttons that run through the middle of the screen needing the default 130ms delay).\nHow could we possibly cover this case with defaults alone (while keeping complexity reasonable)?\nRestricting a developer to only the functionality of the use cases we're able to conceive, rather than allowing for precise control feels incredibly limiting to me.\nDo you really want a world where every Touchable component in every React Native app looks and feels the same and interacts in the same way?\n. > Do you know of an example on stock iOS apps or apps that are shipped on the app store where there is a different timer for touch down based on the size of the element?\nThe following example is not based on size, but priority.\nIn the iOS Control Center > AirDrop there's a list of options and a Cancel button.\nThe touch downs for the options are ~200ms each, where as the Cancel button is more like ~30-40ms.\nI've taken a screen cap and slowed it to 1/2x speed for clarity's sake:\n\n( You can download original the 1x .mov file here )\n. > I hope that you don't feel put off by this pull request and that you can help us make react native better\n@vjeux Thank you for your last comment. To be honest I was starting to feel a little negative about the whole thing and your acknowledgement of that really makes a world of difference :)\nThis experience has helped me to better understand where you all are coming from and in the future  I will make sure to provide a clearer context from the start.\n\nthere are two things we need to do:\n1) Provide the ability to tweak the timers and document the various use cases as comments so that people know when to use them.\n2) Have better defaults for timers so that your learnings can be applied to every app written in react native without people even thinking about them.\n\nAre these things you want addressed in this PR, or should we handle them in a new issue?\n. I would imagine part of the reason the navbar is rendered after the scene is so it appears on top of the scene, rather than below it.\nAs far as I understand it, the component order is basically equivalent to z-index in css.\n. You're trying to return a component from the onPress handler. This isn't how onPress properties work. They're simpler than that and pretty much just run whatever standard function they're passed.\nYou need to have a Navigator component already rendered and then pass it the route you want to transition to.\nI have had success creating an interaction similar to what you mentioned by rendering Navigator as the root component of my app. Your TouchableHighlight and even NavigatorIOS components should be contained within a route being rendered by the Navigator.\nI would recommend playing with some of the Navigator examples in the UIExplorer project to get a better handle on exactly how Navigator should be implemented:\nhttps://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator\nNavigator is really powerful, in part because you can decide how you want the renderScene function to handle routes.\nJust taking a quick look at the example you posted, though, it should be more along the lines of this:\n``` javascript\nvar NewDeck = React.createClass({\n  render() {\n    return (\n      \nWOW IT WORKS!\n\n    );\n  }\n});\nvar NewDeckIcon = React.createClass({\n  nextPage() {\n    this.props.nav.push({component: NewDeck});\n  },\n  render() {\n    return (\n      \n\n\n    );\n  }\n});\nvar App = React.createClass({\n  renderSceneMethod(route, navigator) {\n    if (route.component) {\n      return ;\n    } else {\n      return (\n        \n\n            This is the default renderScene view, when no route.component is provided.\n          \n\n      );\n    }\n  },\n  render() {\n    return (\n       {\n          return Navigator.SceneConfigs.FloatFromBottom;\n        }}\n        renderScene={this.renderSceneMethod}\n      />\n    );\n  }\n});\n```\nHope this helps!\n. Nesting Navigator components is definitely possible. You do have to take special care to make sure you're pushing routes to the intended Navigator.\nI've found that explicitly passing down the navigator object with properties (parentNav={navigator} and childNav={navigator}) helps clarify things.\nMind posting some code so we can see exactly where you're having trouble?\n. yep, delayPressOut is now handled in Touchable, per your recommendations.\n. This is just to make flow happy. You can't return undefined when the type is a number without it getting angry.\nThe others are not typed, so I figured it unnecessary.\n. Didn't realize this was an option, will update and resubmit, thanks!\n. ",
    "nathanborror": "Makes sense.\n. ",
    "benjamingr": "\nbut doesn't have TableView features such as swipe to delete, reordering... We may want to have a component that wraps TableView more closely and have those features and call it TableViewIOS. \n\nAre there any plans for such a component?\n. It'd be really interesting to build a phonegap (and maybe an ionic) bridge to React-Native \n. @vjeux I think you really want to have long stack traces, unhandled rejection detection and better aggregation methods in your promises. You can always just use a special build of bluebird.\nFacebook already has groups using bluebird internally (namely WhatsApp Web), I think having a robust promise implementation would be really nice for react native. (That said, things like a TableView would matter a lot more to me as a user :P)\n. @vjeux you can remove extensions if you really want to beyond the most partial build (or just not use them) but why? Stuff like .finally will eventually get included in ES, the only reason it was not already included is because they didn't have tie (I can dig up the thread if you'd like).\nYou can get bluebird down in a partial build to ~5kb but to be fair the extra stuff that makes bluebird bigger has huge usability gains.\n. @petkaantonov well, the general idea is to get the wins from bluebird like long stack traces and more debuggable and faster promises in react-native I think.\n. So what? React is not world renowned for sticking to strict ES6 it's known for making pragmatic choices in order to make developer life easier. Adding long stack traces and enabling debuggable promises would be a huge deal. \n. Nice work +1 was definitely looking for this.\n. ",
    "zpao": "The site is up now at index.html so this can be closed.\n. Well, I set the size wrong for that breakpoint image AND I forgot about retina displays, so it's blurry...\n. Almost, need to also set overflow: auto on .prism (code).\nI'm going to drop the image resizing and just optim them and add the prism fix.\n. Alright, all better.\n\n. This is a bug in jstransform (I have a fix). But @amasad, why are we using the reserved words transform at all in react-native? Surely we don't need to support any runtimes that depend on that.\n. Ah, because you're just including all the visitors from react-tools. We should do #518 and target es5.\n. Yea, I closed my PR to actually switch to jstransform so lets close this too.\n. I don't like it. I also think Flow special casing invariant is silly (I'll assume there was a reason). There's a copy of invariant already published to npm by somebody else if you really want to be able to require it (we'll eventually publish it in a more standalone way at some point, working on that now).\n. No. Node's algo doesn't descend to look for modules, only up.\n.\n\u251c\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 react-docgen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 recast\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 something-else\n\u2514\u2500\u2500 server\n    \u2514\u2500\u2500 docgenHelpers.js\ndocgenHelpers will first look for server/node_modules (nope), then $PWD/node_modules (yay) then look for recast in that directory (nope). It won't go looking recursively down from there there. Then it goes and continues walking up the filesystem (I think? I forget how this part works).\n. No. Node's algo doesn't descend to look for modules, only up.\n.\n\u251c\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 react-docgen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 recast\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 something-else\n\u2514\u2500\u2500 server\n    \u2514\u2500\u2500 docgenHelpers.js\ndocgenHelpers will first look for server/node_modules (nope), then $PWD/node_modules (yay) then look for recast in that directory (nope). It won't go looking recursively down from there there. Then it goes and continues walking up the filesystem (I think? I forget how this part works).\n. That would probably be the better option :) I didn't actually look at any of the code here to figure out why it is like this, just made it run. #lazy\nBut now that I'm actually looking at the rest of this, we can just remove this whole require. recast is getting passed into the APIs below (you can see b get pulled off there so this one isn't even getting used).\n. That would probably be the better option :) I didn't actually look at any of the code here to figure out why it is like this, just made it run. #lazy\nBut now that I'm actually looking at the rest of this, we can just remove this whole require. recast is getting passed into the APIs below (you can see b get pulled off there so this one isn't even getting used).\n. ",
    "andrewimm": "In case of an error, would the client even receive a status code? I was under the impression that an error object is only passed in the case of a network navigation error. In my experiments, 4xx and 5xx server errors were still passed to the JS side with my changes.\n. Squashed and rebased\n. @ericvicenti I'm assuming your comment was a typo, since I was having no trouble running on iOS 8 in the simulator or on device, but there were linker & enum errors with iOS 7.1. I made some adjustments to get the linker to cooperate again, things are working now on 7 and 8.\n@lazywei you're right, you need to call the public didRegisterForRemoteNotificationsWithDeviceToken from the method of the same name in your AppDelegate.m. This is by design -- there is no way to have a linked library automatically provide this method for your AppDelegate without overriding AppDelegate itself. My personal recommendation is to add the following definition to AppDelegate.m:\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n  [RCTPushNotificationManager application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n}\nYou'll need to do the same thing if you want to respond to didReceiveRemoteNotification\n. ",
    "ccheever": "This no longer happens. Closing the issue.\n. Any thoughts on this? @vjeux \n. I'm going to resubmit this pull request because:\n(a) The Travis CI build failing looks bad even though I believe that the diff is fine and the repo was just in a bad state when I submitted the PR\n(b) The switchover from react-native being private to public has broken connection to my fork.\n. @amasad @nicklockwood thanks. If I have lots of free time, I'll maybe make some sort of lint checker that could be integrated into the packager that would verify that everything matches up, but I probably won't bother. Closing this issue.\n. @brentvatne are you able to merge code under Examples/ or does that have to be done by FB folks? Seems like there is consensus here and @vjeux has blessed it.\n. @brentvatne are you able to merge code under Examples/ or does that have to be done by FB folks? Seems like there is consensus here and @vjeux has blessed it.\n. I think the code for this looks good but @lvyile you should probably squash your commits.\nSomeone from Facebook or more of a decision maker on the project probably needs to say whether \njs\nvar AdSupportIOS = require('AdSupportIOS');\nor \njs\nvar React = require('react-native');\nvar {\n  //...\n  AdSupportIOS,\n  //...\n} = React;\nis preferred. @brentvatne ?\n. I think the code for this looks good but @lvyile you should probably squash your commits.\nSomeone from Facebook or more of a decision maker on the project probably needs to say whether \njs\nvar AdSupportIOS = require('AdSupportIOS');\nor \njs\nvar React = require('react-native');\nvar {\n  //...\n  AdSupportIOS,\n  //...\n} = React;\nis preferred. @brentvatne ?\n. Looks like the link on https://facebook.github.io/react-native/docs/getting-started.html#content appears fixed. PR can be closed @brentvatne \n. Looks like the link on https://facebook.github.io/react-native/docs/getting-started.html#content appears fixed. PR can be closed @brentvatne \n. If you run brew doctor without having brew updated in the last 24 hours, you get this warning:\ntext\nWarning: Your Homebrew is outdated\nYou haven't updated for at least 24 hours, this is a long time in brewland!\nso I think running brew update frequently is recommended strongly by brew.\n. If you run brew doctor without having brew updated in the last 24 hours, you get this warning:\ntext\nWarning: Your Homebrew is outdated\nYou haven't updated for at least 24 hours, this is a long time in brewland!\nso I think running brew update frequently is recommended strongly by brew.\n. :+1: \n. I can imagine some applications where applications have more than one RCTRootView and more than one JSContext. (Working on one right now...)\nOne way it comes up is when you connect a debugger to it, ex. the Safari debugger, it's quite useful to know which one is which.\nBeing able to set it to any string would be quite nice.\n. Isolation, expose different native capabilities to diff contexts/rootviews.\n. Good enough for me. Thanks!\n. the packager now uses babel and the linter uses babel-eslint. is there anything else that needs to be done with this?\n. EDIT: Striking comment because I put it on the wrong issue :/\n~~I think this can be closed because a superset of commits was merged in~~ ~~https://github.com/facebook/react-native/pull/1432~~\n~~@brentvatne - I don't have sufficient permissions to close but I know you're triaging today?~~\n. @tadeuzagallo sorry my mistake -- i posted my comment to the wrong tab in my browser, and it should have gone to this page.\nhttps://github.com/facebook/react-native/pull/1392\n(Will note this on my earlier comment.)\n. @tadeuzagallo sorry my mistake -- i posted my comment to the wrong tab in my browser, and it should have gone to this page.\nhttps://github.com/facebook/react-native/pull/1392\n(Will note this on my earlier comment.)\n. Random nitpick:\nmight change \"(avoid a render pass, useful with continuous animations)\"\nto \"(to avoid a render pass, which is useful with continuous animations)\" or something like that.\nAt a higher level, I would change the framing of \"Only use this if you really need to\" to more of a \"When to use this and when not to and why not\". I generally agree with @ide that performance is the main reason to use it, and that you are trading off complexity of implementation for small -- but sometimes critically important -- gains in UI smoothness, etc.\nOverall, I think this is awesome! I think that this will go along way to making bits of React Native less mysterious and get more people building good stuff on it.\n. ",
    "necolas": "The core components in general are really great building blocks, which is why I started implementing bits of them for our web stack.\nHow much of the API's do you imagine being necessary (or different) for web? For example:\n- control over what DOM element is rendered\n- removal of iOS/Android-specific props\n- removal of non-standard style props (e.g., shadow props)\n- addition of web features / styles not currently available in react-native (e.g. full flexbox spec? is flex in RN equivalent to flex-grow in CSS?)\n- is Stylesheet necessary?\nI wanted to avoid the need for Stylesheet and use plain objects. But I'm fumbling my way into this interesting work and don't have enough knowledge of the problems to understand if it would be necessary for web.\n. ",
    "hugohua": "react native to web.  We have tried.  but performance is slow for android.   my blog http://www.ghugo.com/react-native-to-web/\n\n. Our implementation approach\uff1a\n- component\n  - <View> => <div>\n  - <Text> => <div className=\"text\">\n    - Text style is display:block\n    - Text in Text style is .text > .text {display:inline-block}\n  - <touchabl*> => base on react-tappable\n  - <ScrollView>\u3001<ListView /> => base on xScroll\n  - <Image> => <img /> and <div style=\"background-url:();background-size:...\">\n  - ....\n- api\n  - fetch => base on fetch and support jsonp\n  - LayoutAnimation : use css3 transition \n  - ...\n- style\n  - reset all style : *{display:flex;box-sizing: border-box;position: relative;\n    margin : 0;\n    padding : 0;\n    border-style: solid;\n    border-width : 0;}\n  - support array style ,[object,object] use flattenStyle to object\n  - transform flex:1 to flex: 1;-webkit-box-flex: 1-webkit-flex: 1;-ms-flex: 1;\n    - div style={transformStyle(flattenStyle(style))} />\n  - ....\n- packager\n  - base on react-native packager\n@ide  @vjeux  We don't know how is the progress on Facebook side and whether their direction and thinking are consistent with ours?\n. @brentvatne  thanks\n. ",
    "joshbedo": "\nThe problem with image sizing is that it's not trivial to know from an arbitrary URL what the size is. So, if you give the developer a way to get away with not knowing the size, by paying the cost of a reflow, he will take it in a whim (my long experience in the fb codebase).\nThen, once you have an entire codebase that has no idea what sizes the images it display are, but sometimes you do need to know them, you are screwed. You add all sorts of hacks, threading them down, having all sorts of heuristics to figure them out, parsing the URI attempting to recover it...\nWhat you need is to ask the image size when you get the URI, and then always keep this metadata around. By forcing the developer to know the image size to render it, I hope that it's going to lead them to fall into the pit of success by implementing that pattern by themselves. While this is a pretty sneaky technique, this is the best I got.\n\n@vjeux i also thought this was a little annoying but after reading that explanation i can totally understand where you're coming from. I've seen many people add 500x500 images and then resize them to 50x50 through the interwebs. It also encourages like you said creating design patterns.. I could have a Icon react class which sets default width and height to 50px as well as other properties and i can specify other props like rightCorner, leftCorner etc.\n. I was playing around with this over the weekend and noticed the memory leak issue that was mentioned above. The memory use would increase slowly every minute or so. So this morning i had the idea of implementing ImmutableJS to see if it would fix the memory leak and it did. Not only was the memory usage reduced by 10mb but the memory leak also vanishes. I did something similar to this for the chat messages being sent back and forth.\njavascript\n  var { Map, List } = require('immutable');\n  getInitialState: function() {\n    return {\n      data: Map({ input: '', messages: List() })\n    }\n  },\n  componentDidMount: function() {\n    this.socket = io('http://localhost:5000', { jsonp:false });\n    this.socket.on('chat message', (msg) => {\n      // this.state.messages.push(msg);\n      this.setState(prev => ({\n        data: prev.data.update('messages', list => list.push(msg))\n      }))\n      this.forceUpdate();\n    });\n  },\n  render: function() {\n    return (\n        <ScrollView\n          style={styles.scrollView}\n          scrollEventThrottle={200}\n          bounces={false}\n          contentInset={{top: 0}}\n          >\n          {this.state.data.get('messages').map(m => {\n            return <Text style={styles.message}>Josh: {m}</Text>\n          })}\n        </ScrollView>\n    );\n. @brentvatne awesome, i actually solved it by changing the container styles around. alignItems:'center' was causing the child image element to not show for some reason.\n. Adding a catch solved this issue for me, thanks! :)\n. I'm using <Image source={{uri: 'http://randomimageurl' }}  style={{width:20, height:20}} /> so i shouldn't need to worry about Images.xcassets unless i'm using require('image!imagename'), right?\n. @brentvatne Yup, I'm using React Native Router - https://github.com/t4t5/react-native-router\n. So i recreated the application and it doesn't happen anymore.. I guess someone happened with the xcodeproj or some other area that broke images.\n. ",
    "jnak": "@ide I know it s not awesome. But I just need to upload one picture for now. I just want a quick way to get it done. I will optimize later :)\n@vjeux it seems that the request is empty. When I pass in a string though, I do get the params passed as url params. \nWhat's my best move to get that pic on a server while waiting for xhr.send to be updated ? \nThx!\n. @nicklockwood do you know how I can read the binary data of the image in JS ? It's dirty but it will do the job :)\nThx guys!\n. I d be down implementing this in objective c, but since I know you guys are\nabout to release the internal fb component, I d rather spend my time doing\nsomething else :)\nOn Thu, Mar 26, 2015 at 8:43 PM Jay Garcia notifications@github.com wrote:\n\n\nFYI transferring data back and forth between JS and Obj-C is relatively\nslow\nI've found that React Native's bridge impl seems to be slower that\ncordova's :(\n\nI don't have specific bench marks, but if the queue is rapidly utilized,\nthe UI becomes non-responsive whereas with a cordova app, the UI works\nfine.\nI understand the mechanics of why a RN app would be come unresponsive, but\nI just had to add my experience.\nJG\n:: sent from my mobile device ::\n\nOn Mar 25, 2015, at 20:47, James Ide notifications@github.com wrote:\nFYI transferring data back and forth between JS and Obj-C is relatively\nslow so you'll probably want to keep all of the image data in Obj-C. I\ndon't have numbers but I expect you will see it takes a measurable amount\nof time to transfer several MB of data. It's a small compared to the amount\nof time it takes to upload the photo but it's a good idea to keep the JS\n<=> Obj-C message queue clear.\nYou could write a tiny bridge module that receives the asset URL and\nthen performs the upload, reporting progress/error/success information back\nto JS.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/201#issuecomment-86773682\n.\n. awesome!\n. Hey @amasad \n\nAt the react conf, some fb employee showed me a hidden drawer in the fb group app where you could see all the bundles built and download / run any old version of the app. So yes it is possible. \nThough I doubt Apple is ok with over the air updates that do not go through their vetting process. I'm sure some people do that, but they are probably staying under the radar for this reason. \nThoughts ?\n. ",
    "scottdixon": "~~I faced the same issue. Here's a naive work around for the time being:~~\n~~https://medium.com/@scottdixon/react-native-posting-uploading-ios-camera-roll-images-to-a-server-6c74766154cd~~\n~~@ide is correct, it's really slow transferring data back and forth. Thumbnails seem to hold up OK.~~\nHere's a better way to read and then upload camera roll/image component data:\nhttps://medium.com/@scottdixon/react-native-creating-a-custom-module-to-upload-camera-roll-images-7a3c26bac309\n. +1 @rt2zz \n. Here's a work-around: http://stackoverflow.com/a/29903737/2313477\n. ",
    "kamilkp": "Check out my react-native-file-transfer. It makes the request directly from Obj-C which is faster.\n. Same problem\n. ",
    "tjwudi": "I don't think it is necessary to send it to Safari debugger. It will make it complicated, when Windows support is released. I think it can send to the development server, which will somehow keep consistency among different platforms.\n. @vjeux Thanks. I restarted the simulator, rebuild the app but it does not work :( Any approach I can inspect the internet status?\n. @ide Resetting does work, thanks a lot! I wonder how come the issue, though.\n. Well, thanks @ide . Really hard to find :) But I believe this is not a comprehensive list, because there is no color, borderColor etc.\n. Thanks @jrowny , I think I can send in a PR enhancing documenting that.\n. Closed, see #469 \n. Run npm start on local machine to start the development server. React Native relies on a development server to communicate with the app running in the simulator.\n. It works fine for me. Make sure to use the latest stable version of XCode, and install XCode Command Line Tools. \n. Could you give us an example @erikthedeveloper , I can't get this work :( Thanks!\n. Could you give us an example @erikthedeveloper , I can't get this work :( Thanks!\n. Any follow up for this PR? :)\n. @vjeux Sorry I didn't notice there was doc for that, changed :)\n. I figured this out. \nI was using <Text> as root element, which will cause this issue.\nVery simple solution will be wrap the <Text> with a container view, like ScrollView.\n. This is discussed in #483, which allows us to present own view controller.\n. @vkurchatkin \"Reacty\" is somehow a relative and flexible term. In the context of iOS application, modal view controller can be a very important part.\nSome ideas around making it easy to communicate between components, and also keep it \"Reacty\", we can provide some level of encapsulation. Maybe a standalone component.\n. I wrote following code to implement a simple ModalViewController. When I open it using WBModal.presentModal in JS, the screen displayed the right view for a little while, and then turns black. Anybody know why?\nWBModal.m\n```\n@import UIKit;\nimport \"WBModal.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\nimport \"RCTRootView.h\"\n@interface WBModal()\n@end\n@implementation WBModal\n@synthesize bridge = _bridge;\n\n\n(void)presentModalWithTitle:(NSDictionary*)options {\n    RCT_EXPORT(presentModal);\nUIViewController *modalViewController = [[UIViewController alloc] init];\nmodalViewController.modalPresentationStyle = UIModalPresentationFullScreen;\nmodalViewController.title = options[@\"title\"];\ndispatch_async(dispatch_get_main_queue(), ^{\n    UIWindow keyWindow = [[UIApplication sharedApplication] keyWindow];\n    UIViewController rootViewController = keyWindow.rootViewController;\n// Init RCTRootView\nNSString *urlString = [NSString stringWithFormat:@\"http://localhost:8081/%@\", options[@\"path\"]];\nNSURL *jsCodeLocation = [NSURL URLWithString:urlString];\nRCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                        moduleName:options[@\"registerName\"]\n                                                launchOptions:nil];\n\n[rootViewController setView: rootView];\n\n[rootViewController presentViewController:modalViewController animated:YES completion: nil];\n\n});\n}\n\n\n@end\n```\n. I made a mistake here.\n[rootViewController setView: rootView];\nThis line should be\n[modalViewController setView: rootView];\nAnd it works now. \n. Further thought on this. This will not break the component thinking of React. We can organize code in different ViewController as standalone app. It is fully decoupled and can absolutely be reused. :)\n. Closed. See #483 \n. @vkurchatkin Very helpful comment! It also can be applied when you want to manually add a view controller like a modal view controller.\n. @kennydee I also provide sample code of doing this in #473, if you are interested.\n. @kennydee I wrote a tutorial here.\n@vjeux Any thoughts on this post? Or can we add it to Guides docs?\n. @mudetroit Yeah, now it works! Thanks!\n. @iamdustan Opps! Look how naughty my fingers were. Will correct the typo soon.\n. @vjeux @iamdustan Fixed. See 4040295 and 35bea5f\n. Thanks! It looks wonderful :) To be honest, I am a iOS newbie. So thanks for your update, learnt a lot!\n. This is awesome. One further suggestion, I think it would be better with documentation updated all at once :)\n. @spicyj Maybe react-native/img/EmbeddedAppExample.png works.\n. @spicyj Maybe react-native/img/EmbeddedAppExample.png works.\n. @nickhudkins Good solution, thanks! I am facing this issue too. But the paddingTop: 64 appears to be a magic number, somehow. Is there any way to automatically inset view inside NavigatorIOS?\n. @yuanyan I don't think this is not necessary. Native and web are totally different experiences. You can port your app code into React.js app, but that would be a tremendous work.\n. seems very similar to #749 so cc @a2 @nicklockwood \n. upgraded to latest 0.4.0 and it fixed itself :) \n. Now fixed in b873fd6\n. Of course. Just a sec ;)\n. ",
    "frankbolviken": "Dissapointing..\n. ",
    "robertjpayne": "It is possible to utilise Swift without too much work. Because you solely need to generate some metadata for React Native you can get away with just creating nearly blank categories, though it does require at least 1 Objective-C implementation file per Swift class. ( No header or #import necessary! )\n@ide @mhart @brentvatne @randomer @frankbolviken \nSee my gist here with example how-to:\nhttps://gist.github.com/robertjpayne/855fdb15d5ceca12f6c5\nNote that this implementation is pretty fragile and relies on a bit of knowledge about how react-native currently generates it's metadata for the bridging.\n@nicklockwood is there any chance you'd be open to maintaining a set of Swift compatible macros? I'm just not sure how much of a moving target you expect the current macros to be.\n. Yea I thought about a repo but given it's only the single header file it seems excessive. I'll wait and see if @nicklockwood chimes in about the moving target.\n. @nicklockwood the first interface is solely there to declare to Objective-C that the class exists since it's implemented in Swift. It's essentially just the public header file.\nTo add the protocol conformance it has to be done inside the category. Though theoretically the user could add the protocol in Swift.\n. @nicklockwood right! I agree about the macros, since there's less interface boilerplate it may not be necessary to have the PUSH/POP but just make the user define the interface, category and then add the export methods inside the category definition.\n. @ide I've never had good luck with the generated headers, the tooling for them is buggy, it's much more reliable to generate the a small interface stub to work with.\n. @ide yup, with my simple example I've tried just now and it refuses to generate a header for the class (Xcode 6.3.1). I think probably because the class is not referenced -anywhere- so the Swift compiler is probably stripping it.\n. @nicklockwood I'll work on cleaning this up best I can so we don't use more macro magic than necessary.\nIt's going to look something like:\n``` objc\n@interface MySwiftModule : NSObject \n@end\n@implementation MySwiftModule (RCTBridgeModuleExterns)\nRCT_EXTERN_MODULE(MySwiftModule)\nRCT_EXTERN_METHOD(printMessage:(NSString )message)\nRCT_EXTERN_REMAP_METHOD(printMessage, printMessage:(NSString )message)\n@end\n```\nWe could deduce this entirely into just the interface declaration if we're ok asking users to add @objc class func moduleName() -> String { return \"MyJSModuleName\" } to their Swift files if they want a custom name and creating macros that don't generate function implementations as they're not necessary anyways.\n. Yup I like that idea I'll try and get something working in the next few hours.\n\nOn 23/04/2015, at 12:11 pm, Nick Lockwood notifications@github.com wrote:\nThis would have the benefit of generating all the boilerplate for you, and it feels a bit less magical than the push/pop to me. That may be purely subjective on my part though.\nWhat do you think?\n\u2014\nReply to this email directly or view it on GitHub.\n. Only thing is we still have to get the user to specify superclass for the stubbed interface. I can't find a way around that unless I can reliably get generated headers to work.\nOn 23/04/2015, at 12:11 pm, Nick Lockwood notifications@github.com wrote:\nThis would have the benefit of generating all the boilerplate for you, and it feels a bit less magical than the push/pop to me. That may be purely subjective on my part though.\nWhat do you think?\n\u2014\nReply to this email directly or view it on GitHub.\n. @nicklockwood how does this look?\n\n``` objc\ndefine RCT_EXTERN_MODULE(objc_name, objc_supername) \\\nRCT_EXTERN_REMAP_MODULE(objc_name, objc_name, objc_supername)\ndefine RCT_EXTERN_REMAP_MODULE(js_name, objc_name, objc_supername) \\\nobjc_name : objc_supername \\\n  @end \\\n  @interface objc_name (RCTExternModule)  \\\n  @end \\\n  @implementation objc_name (RCTExternModule) \\\n  RCT_EXPORT_MODULE(js_name)\ndefine RCT_EXTERN_METHOD(method) \\\nRCT_EXTERN_REMAP_METHOD(, method)\ndefine RCT_EXTERN_REMAP_METHOD(js_name, method) \\\n\n(void)rct_export##method { \\\n  attribute((used, section(\"DATA,RCTExport\"))) \\\n  __attribute((aligned(1))) \\\n    static const char *rct_export_entry[] = { func, #method, #js_name }; \\\n```\n\nAllows two ways to make them:\nCustom Module/Method Name:\n``` objc\n@interface RCT_EXTERN_REMAP_MODULE(AwesomeJS, SwiftReactModule, NSObject)\nRCT_EXTERN_REMAP_METHOD(doAwesome, printMessage:(NSString *)message)\n@end\n```\njavascript\nvar AwesomeJS = require('NativeModules').AwesomeJS;\nAwesomeJS.doAwesome(\"Hello World\");\nInferred Module/Method Name:\n``` objc\n@interface RCT_EXTERN_MODULE(SwiftReactModule, NSObject)\nRCT_EXTERN_METHOD(printMessage:(NSString *)message)\n@end\n```\njavascript\nvar SwiftReactModule = require('NativeModules').SwiftReactModule;\nSwiftReactModule.printMessage(\"Hello World\");\n. @nicklockwood unfortunately we have to redefine the method macro contents because the current RCT_REMAP_METHOD macro currently starts the concrete method's implementation which, because it's a category, overrides the swift method.\nBest option would be to have these extern method macro contain the \"header logic\" and the non-extern methods macro contain the extern macro + implementation logic.\n. @nicklockwood cool, well if you're happy with this I'll go ahead and whip up a PR and remap RCT_EXPORT_METHOD to use RCT_EXTERN_METHOD.\n. @nicklockwood in reference to #207. I was adding some tests but can't add Swift files to the project because it's a static lib. Any recommendations on how to best write tests? Maybe just an external Objective-C module?\n. @nicklockwood yeah, I managed to kind of hack a small test together with Objective-C but it does't really validate much other than the fact the small macro works. Testing Swift integration is much more key as it's way more likely to break.\nLet me know if I can help with anything else.\n. @vjeux ok, I'll get the docs going for NativeModules, I missed getting Native UI Components via Swift support which would be awesome too.\n. @vjeux documentation added via #1021. It's brief but gets it done and the Objective-C documentation is still very relevant.\n. @ide I had looked into it but saw a previous issue ticket that stated the Objective-C API was avoided due to corrupted memory issues.\nMind elaborating on the thisObject bug?\n. @ide I'm looking at the thisObject stuff, because I'm pretty sure I tried what you're mentioning and found the behavior to be unexpected ( the C API seemed to be acting up ) but I'll double check.\nAs for the Objective-C API, it would presumably work just fine, but it'll be less performant due to how JSC internally maps objects and stuff. Since this method is executed every frame would it be best to keep it as performant as possible? I suppose the slowest bit really is the JSON conversion that will need to remain either way.\n. @ide tidied up the thisObject, doesn't seem to affect anything but it's at least correct now.\n. @vjeux The 10-15% was very rudimentary profiling:\nI added:\n``` objc\nstatic CFTimeInterval lowInterval = CGFLOAT_MAX;\nstatic CFTimeInterval avgInterval = 0;\nstatic CFTimeInterval highInterval = CGFLOAT_MIN;\nCFTimeInterval before = CACurrentMediaTime();\n.... bridge code ....\nCFTimeInterval after = CACurrentMediaTime();\nCFTimeInterval elapsed = after - before;\nlowInterval = MIN(lowInterval, elapsed);\navgInterval = (avgInterval + elapsed) / 2.0;\nhighInterval = MAX(highInterval, elapsed);\nprintf(\"%f, %f, %f\\n\", lowInterval, avgInterval, highInterval);\n```\nRunning on device I was looking mostly at the lowInterval and it's \"idle\" performance was 10-15% lower than it's counter part. I should probably look the interval markers only when payloads are being passed (such as scroll events).\n. It's actually pretty hard to formulate a good test plan to profile this in a \"fair\" way. I think mostly what I was going off was the fastest execution time marked by the low interval. Since a lot of the messages going over the bridge are nearly identical ( scroll events for instance ) it was a decent mark to play around for awhile.\nI've tested it again only measuring messages that have more than 300 JSON characters in length and it's still measuring 10-15% faster on my 4S\n. @vjeux here's the code I have in place now, trying to formulate how I could make this more predictable / comparable but the nature of the bridge is hard.\n``` objc\n    static CFTimeInterval lowInterval = CGFLOAT_MAX;\n    static CFTimeInterval totalInterval = 0;\n    static NSUInteger totalIntervalCount = 0;\n    static CFTimeInterval highInterval = CGFLOAT_MIN;\nCFTimeInterval before = CACurrentMediaTime();\n\nJSValueRef errorJSRef = NULL;\nJSValueRef resultJSRef = NULL;\nJSGlobalContextRef contextJSRef = JSContextGetGlobalContext(strongSelf->_context.ctx);\nJSObjectRef globalObjectJSRef = JSContextGetGlobalObject(strongSelf->_context.ctx);\n\npragma mark - C API\n//    NSError error;\n//    NSString argsString = (arguments.count == 1) ? RCTJSONStringify(arguments[0], &error) : RCTJSONStringify(arguments, &error);\n//    if (!argsString) {\n//      RCTLogError(@\"Cannot convert argument to string: %@\", error);\n//      onComplete(nil, error);\n//      return;\n//    }\n//  \n//    // get require\n//    JSStringRef requireNameJSStringRef = JSStringCreateWithUTF8CString(\"require\");\n//    JSValueRef requireJSRef = JSObjectGetProperty(contextJSRef, globalObjectJSRef, requireNameJSStringRef, &errorJSRef);\n//    JSStringRelease(requireNameJSStringRef);\n//  \n//    if (requireJSRef != NULL && errorJSRef == NULL) {\n//    \n//      // get module\n//      JSStringRef moduleNameJSStringRef = JSStringCreateWithCFString((__bridge CFStringRef)name);\n//      JSValueRef moduleNameJSRef = JSValueMakeString(contextJSRef, moduleNameJSStringRef);\n//      JSValueRef moduleJSRef = JSObjectCallAsFunction(contextJSRef, (JSObjectRef)requireJSRef, NULL, 1, (const JSValueRef *)&moduleNameJSRef, &errorJSRef);\n//      JSStringRelease(moduleNameJSStringRef);\n//    \n//      if (moduleJSRef != NULL && errorJSRef == NULL) {\n//      \n//        // get method\n//        JSStringRef methodNameJSStringRef = JSStringCreateWithCFString((__bridge CFStringRef)method);\n//        JSValueRef methodJSRef = JSObjectGetProperty(contextJSRef, (JSObjectRef)moduleJSRef, methodNameJSStringRef, &errorJSRef);\n//        JSStringRelease(methodNameJSStringRef);\n//      \n//        if (methodJSRef != NULL && errorJSRef == NULL) {\n//        \n//          // direct method invoke with no arguments\n//          if (arguments.count == 0) {\n//            resultJSRef = JSObjectCallAsFunction(contextJSRef, (JSObjectRef)methodJSRef, (JSObjectRef)moduleJSRef, 0, NULL, &errorJSRef);\n//          }\n//          // direct method invoke with 1 argument\n//          else if(arguments.count == 1) {\n//            JSStringRef argsJSStringRef = JSStringCreateWithCFString((__bridge CFStringRef)argsString);\n//            JSValueRef argsJSRef = JSValueMakeFromJSONString(contextJSRef, argsJSStringRef);\n//            resultJSRef = JSObjectCallAsFunction(contextJSRef, (JSObjectRef)methodJSRef, (JSObjectRef)moduleJSRef, 1, &argsJSRef, &errorJSRef);\n//            JSStringRelease(argsJSStringRef);\n//          }\n//          // apply invoke with array of arguments\n//          else {\n//            // get apply\n//            JSStringRef applyNameJSStringRef = JSStringCreateWithUTF8CString(\"apply\");\n//            JSValueRef applyJSRef = JSObjectGetProperty(contextJSRef, (JSObjectRef)methodJSRef, applyNameJSStringRef, &errorJSRef);\n//            JSStringRelease(applyNameJSStringRef);\n//          \n//            if (applyJSRef != NULL && errorJSRef == NULL) {\n//              // invoke apply\n//              JSStringRef argsJSStringRef = JSStringCreateWithCFString((__bridge CFStringRef)argsString);\n//              JSValueRef argsJSRef = JSValueMakeFromJSONString(contextJSRef, argsJSStringRef);\n//            \n//              JSValueRef args[2];\n//              args[0] = JSValueMakeNull(contextJSRef);\n//              args[1] = argsJSRef;\n//            \n//              resultJSRef = JSObjectCallAsFunction(contextJSRef, (JSObjectRef)applyJSRef, (JSObjectRef)moduleJSRef, 2, args, &errorJSRef);\n//              JSStringRelease(argsJSStringRef);\n//            }\n//          }\n//        }\n//      }\n//    \n//    }\npragma mark - EVALUATE SCRIPT\n  NSError *error;\n  NSString *argsString = RCTJSONStringify(arguments, &error);\n  if (!argsString) {\n    RCTLogError(@\"Cannot convert argument to string: %@\", error);\n    onComplete(nil, error);\n    return;\n  }\n\nNSString *script = [NSString stringWithFormat:@\"require('%@').%@.apply(null, %@);\", name, method, argsString];\nJSStringRef scriptJSStringRef = JSStringCreateWithCFString((__bridge CFStringRef)script);\nresultJSRef = JSEvaluateScript(contextJSRef, scriptJSStringRef, globalObjectJSRef, NULL, 1, &errorJSRef);\nJSStringRelease(scriptJSStringRef);\n\nif(argsString.length > 300) {\n  CFTimeInterval after = CACurrentMediaTime();\n  CFTimeInterval elapsed = after - before;\n\n  lowInterval = MIN(lowInterval, elapsed);\n  totalInterval += elapsed;\n  highInterval = MAX(highInterval, elapsed);\n\n  totalIntervalCount++;\n\n  printf(\"%f, %f, %f, %f\\n\", lowInterval, totalInterval, highInterval, elapsed);\n}\n\n```\n. @ide hmm really need to get some proper profiling in place. I implemented the Objective-C API locally ( though managing errors is a bit unfortunate as it's a global catch all rather than a per-function catch ) and the performance is worse than JSEvaluateScript.\nThe internals of JSC do a lot of weak ref and value mapping for JSValue ontop of the raw C-api.\nI'm going to try and get something setup that can properly profile communication over the bridge at different payload sizes.\n. @tadeuzagallo that looks awesome, so your tests indicating a 32-45% faster rate?\nThanks for the fix ups too, I'm not a JS dev so the module vs method context was a bit of naivety there.\n. That's still awesome though :+1: 9 microseconds adds up quite quickly at 60fps! Thanks again for profiling this properly.\n. @7ynk3r why don't you set the button to position: absolute and snap it to the bottom of the screen? Does it need to be inside the scroll view?\n. Chiming in here as I've done quite a bit of work around license key protection and sorts. Please realise no matter how much effort you put in to \"securing\" your JS code or secrets in an iOS client app a determined attacker will always get what they want. From what I've read from other developers it's about a 10:1 effort. That is for every 10 hours you spend \"protecting\" your stuff it takes an attacker approx 1 hour to reverse your efforts.\nTrying to keep the source private is pretty moot-point since it's very easy to monitor some of the Objective-C code that react-native uses.\nThe best thing I recommend to anyone is to ensure your jsbundle has a signature and you verify that signature before you let it be loaded into the bridge. This is especially important for anyone delivering updates over HTTP/HTTPS.\nIf you are heavily worried about code protection use heavy obfuscation and RSA public/private keys to encrypt the source. Again anyone with a jailbroken device and a bit of time can easily latch LLDB onto the RCTBridge methods and snag your code.\n. @ide I'd say go for the more verbose but declarative macro approach. Macros that begin to automagically make scoped variables available start to erode clarity and make debugging harder.\n. I should note that SpiderMonkey integration itself will be a separate project apart from react-native. I just need a few tweaks to the core to allow an integration to even happen.\n. Actually a lot of these things are either poor or not suitable for what I'm after:\n- JSC's remote debugging via Safari is poor, and doesn't support source maps well so it's difficult to to debug properly. Also JSC's remote debugging cannot be attached from the beginning of the program like Chrome's debugger can.\n- Unless we compile JSC from source we still have to write some things inefficiently ( string copies for example ).\n- JSC wont be the default for Android, and though it's probably easy enough to cross compile it it would again be nice to have a single C/C++ API and single debugger to deal with across all platforms/debugging environments.\nReally though just looking at how we could decouple the executor from the main project so there isn't symbol conflicts.\n. @nicklockwood cool -- when you do try and keep the built in ones out of the project \"unless included\" to avoid symbol conflicts if I can ask. \nSpiderMonkey and JSC don't play well, or someone may want to compile their own copy of JSC into it to get access to low level internals.\n. I'm going to close this -- I experimented with SpiderMonkey and while it provides some benefits it's not worth the hassle and it's a huge performance hit compared to JSC.\n. @ide @vkurchatkin please see attached screenshots of the issue. The last trailing issue is also having the kern added thus resulting in a bit extra width.\nIt was causing centre alignment to look just every so slightly off.\nThe background color here is to illustrate the issue.\nBefore:\n\nAfter:\n\n. @vkurchatkin I can't really post the whole thing, what bit are you after? Just a working sample?\n. @vkurchatkin run this index.ios.js example, it's very easy to reproduce and see the issue the larger letter spacing is.\n``` javascript\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar TextLetterSpacing = React.createClass({\n  render: function() {\n    return (\n      \n\n          WELCOME\n        \n\n          To get started, edit index.ios.js\n        \n\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+D or shake for dev menu\n        \n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n    letterSpacing: 30,\n    backgroundColor: '#FF0000',\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\nAppRegistry.registerComponent('TextLetterSpacing', () => TextLetterSpacing);\n```\n\n. @ide @nicklockwood know you two are super busy but just want to bump this one to see thoughts\n. @nicklockwood actually good point too I didn't catch that the first line isn't fixed.\nAnd @vkurchatkin wasn't aware this is behaviour of the web as well.\nClosing this because it's probably not easy to fix and matches the web behaviour anyways.\n. @nicklockwood so the solution would probably be altering the frame based on the known kerning size. AFAIK kern is a fixed point value and independent of the font itself.\nThe hard thing while experimenting with it is that if you shrink the frame size you'll actually get truncated characters. So we'll need to solely offset the frame's origin.\n. @nicklockwood the other really hard part -- what if we only have kern applied to part of the text? This is where it gets really tricky.\n. The best way to find the view controller for a react component is walk up the nextResponder chain from the UIView you want.\nHere's some code I've used:\n``` objc\n- (UIViewController )sceneBackingViewController {\n    RCTRootView rootView = [self sceneReactRootView];\n    if([rootView.nextResponder isKindOfClass:[UIViewController class]]) {\n        return (UIViewController *)rootView.nextResponder;\n    }\n    return nil;\n}\n\n(RCTRootView )sceneReactRootView {\n    UIView parent = (UIView )self.reactSuperview;\n    while(parent != nil) {\n        if([parent isReactRootView] && [parent.nextResponder isKindOfClass:[RCTRootView class]]) {\n            return (RCTRootView )parent.nextResponder;\n        }\n        parent = (UIView *)self.reactSuperview;\n    }\n    return nil;\n}\n```\n. I think the idea is that the obfuscation will prevent rejected apps from people that are not using the identifier.\n\nHowever the app will still then be linked to the AdSupport.framework which may raise some eyebrows.\n. ",
    "mhart": "@robertjpayne Very cool! Would be great to have a better home for this for people to follow if you do indeed want to keep it up to date (like a dedicated repo). I'm sure that would get quite popular :smile: But totally get that might be too much work if things are shifting rapidly.\nI mean, ideally, Facebook would just add this sort of thing to their docs somewhere.\n. @robertjpayne I feel ya \u2013 I think the README would be larger than the actual code :smiley:, but that's what people would be interested in I'd say. I'd be fine with a gist if GitHub actually made them easy to follow and manage comments...\n. Nice work ppl! :tada: So I guess this can be closed now thanks to https://github.com/facebook/react-native/commit/b72acc2313db90b414e53b4ede533071284de4c2 ?\n. Tracked at a high level over at #207 \n. ",
    "joewalnes": "@robertjpayne Nice! :+1: \n. I've validated your fix and confirm it works for me\n. @clayallsopp The API looks like a good start. My concern would be the race condition due to the async nature of ReactNative.\nFor example, in between reading the initial device rotation and registering a change listener, the rotation may have been changed on the main thread so an event would be missed.\n. ",
    "krashidov": "Ahh okay. My mistake!\n. ",
    "stevelacy": "@a2 Updated\n. :smile: \n. ",
    "tvararu": "I did the exact same thing. :monkey:\n. ",
    "imaffett": "v0.11.14\n. Thanks for the fast response.\n. Hey @brentvatne - The fix is easy, but I'm currently not permitted to contribute to React Native (by Intel), only React.js .\n. ",
    "lvyile": "I upgraded node from v0.11.14 to v0.12.1, it works!\n. cla signed up.\n. I'm learning 'git rebase' via SourceTree.app ( #549 is my first rebase in my life, lol )\nNow I'm done.\nHope everything goes well. \nThx guys.\n\n. new one is #658 \n. Why I test succeed on my device, but  build failed on Travis CI ?\n\n. Why I test succeed on my device, but  build failed on Travis CI ?\n\n. How to revision via CocoPods ? Please give me a hand.\nYes, I saw the latest version on github is 0.3.4\nBut I use pod search result is 0.2.1\n-> React (0.2.1)\n   Build high quality mobile apps using React.\n   pod 'React', '~> 0.2.1'\n   - Homepage: http://facebook.github.io/react-native/\n   - Source:   https://github.com/facebook/react-native.git\n   - Versions: 0.2.1, 0.2.0, 0.1.0 [master repo]\n. ",
    "sosoyososo": "The same problem on v0.13.0-pre .\n. ",
    "rimunroe": "Yes, it was my mistake.\n. I don't believe so, because that one appears to have to do with requiring modules not working, whereas this bug happens even if the module isn't required at all. Also, the requires work fine once the packager is restarted.\n. I think this can also be called by adding any folder to node_modules/. I just ran $ mkdir node_modules/bloop and encountered the same problem.\n. ",
    "murugan-pandian": "Any update about this #222\n. ",
    "qingfeng": "@brentvatne I am now doing ~\n. @chadobado how to use POPAnimation? thanks\n. ```\nclass indexContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabIndex: 1,\n    };\n  }\ncomponentWillMount() {\n    PushNotificationIOS.addEventListener('notification', this._onNotification);\n  }\ncomponentWillUnmount() {\n    PushNotificationIOS.removeEventListener('notification', this._onNotification);\n  }\nrender() {\n    PushNotificationIOS.requestPermissions();\n    return (\n      \n        <TabBarIOS.Item\n    .......\n```\n. Resolved. . .\nlook please, The document did not write\n\n\n. cool, guys :beer: \n. Resolved\n. ",
    "mdauner": "@brentvatne @qingfeng \nany news about it?\n. ",
    "ileonovdima": "I have the same error, node 0.12 \nhttps://www.dropbox.com/s/cqi58uvltkppv3c/Screenshot%202015-03-26%2021.42.20.png?dl=0\n. this my debug.log file\nhttps://www.dropbox.com/s/kog4vctcz7lakja/npm-debug.log?dl=0\n. https://www.dropbox.com/s/kog4vctcz7lakja/npm-debug.log?dl=0\n. thank you\n. ",
    "imserhii": "Github don't like a too long comment :-) See in my Dropbox \u2014 https://www.dropbox.com/s/sts6bc2jr577kcm/npm-debug.log?dl=0\n. Yep! Thank you!\nAll who have same error write in terminal this:\nsudo chown -R $USER ~/.npm\nsudo chown -R $USER /usr/local/lib/node_modules\n. ",
    "Palgrover": "http://stackoverflow.com/questions/22152162/npm-cannot-install-dependencies-attempt-to-unlock-something-which-hasnt-been#\ntry this\n. :)\n. Did anyone face the error \n[Error: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html]\nError: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html\n    at null._onTimeout (/Users/WhackyApps/AwesomeProject/node_modules/react-native/packager/react-packager/src/FileWatcher/index.js:71:16)\n    at Timer.listOnTimeout (timers.js:110:15)\nbecause of this i cannot reload my simulator after changes\n. Sorry for that i have new issue guys lets discuss there\n. @amasad sure we can keep this open for sometime so that more people can solve it easily\n. Yes i did the brew install\n. @amasad  i increased the time so the thing that changed was this error came when project was starting in simulator but now it starts fine without error but after that when i change in my index.js and reload the simulator by cmd+R it gives the same error\n. ",
    "mteece": "Confirming that:\n$ sudo chown -R $USER ~/.npm\n$ sudo chown -R $USER /usr/local/lib/node_modules\nWorked on my side.\n. I needed to chown the AwesomeProject folder after it was scaffolded by init.\n. ",
    "misuba": "@amasad It Happened To Me. The chown fix worked great. I wonder if there is a commonality with people who have this issue maybe not having installed node with brew? (I didn't, I don't think.)\n. ",
    "ClemMakesApps": "The extra $ sudo chown helped fix my issue as well\n. @yuanyan I don't think react-native web browser compatibility is coming anytime soon. As mentioned by the Facebook Team, they are not following the write once, run everywhere paradigm.\n. ",
    "svenanders": "Yeah, can confirm you will run into problems when you somtimes install dependencies as root (and thus end up with mixed ownership in the /usr/local/lib/node_modules folder and sometimes other /usr/local folders). It's the first thing I look at when people come to me with npm dependency problems. \n. Seeing this too. Setting options to 'null' bypasses the problem, but of course it would be nice to use options.\n. Also, it doesn't seem to respect custom locations, giving Apple's Cupertino address in the simulator no matter which Location you choose from the Debug menu.\nOn a physical device, it works as intended, so it's not a showstopper.\n. The problem with the existing code is that once you have called a getLocation, you will only get that location for subsequent calls.\nThis PR makes sure you get a current location. Yes, you can observe, but maybe you don't want to do that  (to conserve battery for instance), but occasionally get an updated location event.\n. ",
    "lucamezzalira": "it works for me too :D\n. I agree with you, having percentage will help a lot on styling the components\n. ",
    "Gardencoder": "Nice , It `s fixed\n\n$ sudo chown -R $USER ~/.npm \n\n\n$ sudo chown -R $USER /usr/local/lib/node_modules\n\n. ",
    "clauderic": "+1\n. I had the same issue. Tried running watchman shutdown-server (to no avail). Restarting my computer fixed the problem for me.\n. I'm running OS X Mavericks (10.9)\n. That didn't seem to do the trick unfortunately. Any other ideas of things I might have missed?\n. The above fix worked, thanks!\n. I also think this would be a must-have component for a lot of applications out there\n. ",
    "jcgertig": "+1\n. Yes I think that both are needed as soon as possible.\n. Or how can I add an example? and is is just by adding a AnimationExample.js to the Examples\\UIExplorer folder?\n. ",
    "sherodtaylor": "+1\n. ",
    "vishnevskiy": "CMD+D\n. JSON would probably fix most issues.\nAn example library I was trying to use was.\nhttps://github.com/markdown-it/markdown-it\nIt depends on an NPM module https://www.npmjs.com/package/entities which has an entities.json and due to that fails to work.\n. I managed to swap in babel and it works 95%.\nFor some reason even though it transforms import statements to requires they don't seem to work. Does react-native crawl the requires BEFORE the transform occurs?\n. No problem.\nI just installed babel-core and replaced transformer.js in packager with.\n``` js\n'use strict';\nvar babel = require('babel-core');\nmodule.exports = function(data, callback) {\n  var result;\n  try {\n    result = babel.transform(data.sourceCode, {\n      filename: data.filename,\n      // Remove the interopRequire\n      modules: 'commonStrict'\n    });\n    result = {\n      // Removing interopRequire causes it to try to get default.\n      // Not nessessary for react-native so strip it.\n      code: result.code.replace(/)[\"default\"]/g, ')')\n    };\n  } catch (e) {\n    return callback(null, {\n      error: {\n        lineNumber: e.loc.line,\n        column: e.loc.column,\n        message: e.message,\n        stack: e.stack,\n        description: e.description\n      }\n    });\n  }\ncallback(null, result);\n};\n```\nI don't seem to see how to provide the source map but it works otherwise.\nI would really love advise how where I might be able to mod code to fix import statements because that is blocking me from using existing Flux stores and action creators from another react project.\n. @sebmck For some reason the packager does not like the _interopRequire\n. There is already a PR #265 that does this :)\n. I actually tried importing superagent/lib/client directly and it resulted in the same problem.\n. @tadeuzagallo Thanks I will try that out soon :) \n. Awesome thx :) I just reimplemented the API and it worked for me but this is more complete than mine.\n. @tadeuzagallo So I added this to my module.\n``` objc\n\n(dispatch_queue_t)methodQueue {\n  return dispatch_get_main_queue();\n}\n```\n\nThe end result is the same. The weirder part is some of my animations do multiple invokes to addAnimation some of them play instantly and others wait till next interaction or just after sometime.\nAn example is fading in a backdrop and transforming a modal upwards.\n. Actually using this from the FB implementation.\nobjc\n- (dispatch_queue_t)methodQueue {\n  return _bridge.uiManager.methodQueue;\n}\nSolved the problem\n. Honestly I am not sure if there are other ones. This is the only one I have ever used. Would be awesome if someone else could comment on this issue with more experience with the matter.\n. Honestly I am not sure if there are other ones. This is the only one I have ever used. Would be awesome if someone else could comment on this issue with more experience with the matter.\n. @a2 Without such an animation available how do you plan to make it possible to animate at the same rate as the keyboard? Normally people just take the animation curve from the Keyboard events.\n. I guess the problem is the animation currently takes an enum, prob should be extended to support an arbitrary value as well. That would be a better approach so feel free to close this :)\n. @a2 Sorry about that no idea how those diffs got into this pull request. Will fix.\n. So looks like to reproduce this is.\n- Make 2 data sets. One that fits on the screen without scrolling and one that does not.\n- Load up the small one first. \n- Then switch it to the long data set and scroll all the way down.\n- Then switch back to small one and then instantly back again to big one.\n- It will now not render properly until you scroll.\nUsing a unique key for the ListView per dataset will fix it. So remounting works.\n. ",
    "khanghoang": "@vishnevskiy thanks, somehow i missed it\n. Do you have Chrome open?\n. @danicomas check it out, it may help you https://github.com/facebook/react-native/issues/499 \n. Let me illustrate to make it simple.\n``` javascript\nvar App = React.createClass({\n  render: function () {\n    return (\n      \n} \n        sideView={} />\n      \n    );\n  }\n})\n```\nThen how can I expose the sideMenu instance that I can you at any places of the app. Sorry I'm new with React/React Native, I just re-implement basic stuff on iOS https://github.com/khanghoang/RNSideMenu\n. @checkraiser then can i expose SideMenu from its parent? \njavascript\nAppRegistry.registerComponent('SideMenu', () => App);\nAnd how can I get the the App instance?\n. @Kureev, @checkraiser thanks for quick answers. \n@Kureev ya, i tried it\njavascript\nvar SideMenu = <SideMenu .../>;\nBut when I tried to debug it, I can't see its functions :sob: \nHere is my code https://github.com/khanghoang/RNSideMenu/blob/master/index.ios.js#L47-L58\nI wanna make the SideMenu as global variable so I can call its function (sth like SideMenu.toggle()) at any places, but i can see its function.\nFYI here is the implementation of SideMenu https://github.com/khanghoang/RNSideMenu/blob/master/SideMenu.js\n. @joewood you're right about using the state. But in my case, i think it is little bit different, the child view of the SideMenu may have a button to change the state of SideMenu, so how can we update the parent's state when we're in the child? And in the real case the child view maybe at the very deep of the hierarchy.\n. @Kureev @joewood & @checkraiser thanks guys, I think I get it. :beers: \n. ",
    "marynate": "That happened to me when deploying to iOS 6 device, fixed by manually linking JavaScriptCore framework (http://stackoverflow.com/questions/23514579/javascriptcore-framework-availability-on-ios)\nPlease be noted if you want to target iOS 6, you have to also replace/wrap all iOS 7 api calls in the source.\n. Log out and re-log in fixed it for me.\n. OS X 10.8.5, XCode 5.1.1, iOS SDK 8.2\n(yes, I'm told it's time to upgrade, but still...)\n. But how to reload on device? Maybe also a good idea mention that in the doc?\n. My iOS game is targeting iOS 6+ devices now, never publish non-game app before, not sure if now it's the time to drop iOS 6 support totally. ( Last time I checked there're about 5% or so devices on iOS 6, probably not quite worth the effort to support? )\n. When I run packager on windows after apply this PR and the blacklist.js PR, I got this error in Xcode output (running simulator on Mac, requesting bundle on windows):\n\n2015-04-24 18:09:00.367 [info][tid:com.facebook.React.JavaScript] \"Failed to print error: \", \"Requiring module \"Promise\" which threw an exception\"\n2015-04-24 18:09:00.372 [info][tid:com.facebook.React.JavaScript] \"Failed to print error: \", \"Requiring module \"ExceptionsManager\" which threw an exception\"\n. \n",
    "jsdf": "A temporary workaround for existing npm packages is to use browserify --standalone (or wzrd.in) or similar to generate a UMD bundle for the particular package you want to use, vendor it in to your project and then just require that file. I used this workaround successfully with htmlparser2.\nHowever, ideally .json requires would be supported as they are supported out of the box in node, browserify and webpack, and that's the standard a lot of npm JS is written to.\n. A temporary workaround for existing npm packages is to use browserify --standalone (or wzrd.in) or similar to generate a UMD bundle for the particular package you want to use, vendor it in to your project and then just require that file. I used this workaround successfully with htmlparser2.\nHowever, ideally .json requires would be supported as they are supported out of the box in node, browserify and webpack, and that's the standard a lot of npm JS is written to.\n. ",
    "sthomp": "@jsdf Thanks for the browserify --standalone workaround. This also worked for me.\n. Im still having issues getting flow to run without errors. After I react-native init hello I can see there is a .flowconfig provided. But when I run flow I see errors. Currently using flow 0.9.2.\n{  \n   \"status\":500,\n   \"message\":\"Flow found type errors.  If you think these are wrong, make sure your flow bin and .flowconfig are up to date, or disable with --skipflow.\",\n   \"type\":\"FlowError\",\n   \"errors\":[  \n      {  \n         \"description\":\"E1: function call\\nCallable signature not found in\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/AppRegistry/AppRegistry.js\",\n         \"lineNumber\":57,\n         \"column\":9\n      },\n      {  \n         \"description\":\"  E1: exports\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/ReactIOS/renderApplication.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E2: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/ActivityIndicatorIOS/ActivityIndicatorIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E3: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E4: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/MapView/MapView.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E5: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/Navigation/NavigatorIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E6: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E7: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/SliderIOS/SliderIOS.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E8: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/StaticRenderer.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E9: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/SwitchIOS/SwitchIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E10: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E11: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E12: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/TextInput/TextInput.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E13: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/Touchable/TouchableBounce.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E14: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E15: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/View/View.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E16: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/WebView/WebView.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E17: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Image/Image.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E18: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/ReactIOS/renderApplication.ios.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E19: property propTypes\\nProperty not found in\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/ReactIOS/verifyPropTypes.js\",\n         \"lineNumber\":28,\n         \"column\":10\n      },\n      {  \n         \"description\":\"  E19: exports\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Components/View/View.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E20: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/Text/Text.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      },\n      {  \n         \"description\":\"E21: \\nFailure(\\\"internal error: package /Users/thompsons/node_modules/React/package.json not found\\\")\",\n         \"filename\":\"/Users/thompsons/Code/reactjs/hello/node_modules/react-native/Libraries/react-native/react-native.js\",\n         \"lineNumber\":0,\n         \"column\":0\n      }\n   ]\n}\n. Here is the .flowconfig that react-native generated which matches the comments above:\n```\n[ignore]\nWe fork some components by platform.\n./.web.js\n./.android.js\nSome modules have their own node_modules with overlap\n./node_modules/node-haste/.\nIgnore react-tools where there are overlaps, but don't ignore anything that\nreact-native relies on\n./node_modules/react-tools/src/vendor/core/ExecutionEnvironment.js\n./node_modules/react-tools/src/browser/eventPlugins/ResponderEventPlugin.js\n./node_modules/react-tools/src/browser/ui/React.js\n./node_modules/react-tools/src/core/ReactInstanceHandles.js\n.*/node_modules/react-tools/src/event/EventPropagators.js\nIgnore jest\n./react-native/node_modules/jest-cli/.\n[include]\n[libs]\nnode_modules/react-native/Libraries/react-native/react-native-interface.js\n[options]\nmodule.system=haste\n```\n. ",
    "asamiller": "@jsdf Could you provide a little more info about how you got it to work? I tried running htmlparser2 through wzrd.in and saving the result to htmlparser2.js then var htmlparser  = require('./htmlparser2.js'); and I get an Requiring unknown module \"../maps/decode.json\" error.\n. +1\n. ",
    "tommymchugh": "I'll definitely take a stab at this. Something to think about is whether there should be a value for react-module in its package.json to let the manager know that it is a react module. That way, if a node module includes a podfile for other reasons, the react package manager won't try to add it as a dependency.\n. You can take a look at what I have right now: https://github.com/TomMcHugh/react-native/tree/extension-manager/react-extension-manager\nPretty rough and just threw it together in the past couple of hours, but so far it has the basic functionality.\n. One thing that I found was that Podfiles aren't very friendly to using require. Might have to look into that. Because of that, I just inject the dependencies straight into the users Podfile.\n. Yeah, it's important it doesn't mess up a users Podfile. Thats why I have the rem init function create a commented out section where the package manager will look to inject the depenedency. It's a little hacky, but until we solidify whether we can do require on podfiles, it works.\n. Eval is what we're looking for. Just pushed it with some code restructuring changes to my forked branch. We now have a separate Podfile that is managed by the manager.\n. @ide @corymsmith Yep, just pushed the package manager source with an example that includes Vibrations and Text modules. Here it is: https://github.com/ReactExtensionManager/ReactExtensionManager\nYou can read about using the example project in the instructions.md. Basically just using npm link, installing dependencies and then using this new package manager, but its always good to have in case anyone finds anything confusing.\n. Just beefed up the documentation and showed how to get the package manager installed threw npm install.\n. @joewood just published it, updating the readme now\n. @vjeux good thinking. For now installing global is hidden from docs, but supported. Instead I have created bash script that links to the cli and recommend using that as a local module.\n. @frantic I agree bringing it into the react-native-cli would be best. In my original project before using eval I had it directly injecting the dependencies. Whether we should have it inline or through an eval method is just up to whether we want just one podfile and everything is editable in one place, or whether the system should not interfere at all with the user's podfile and is managed in a single file separate from the regular podfile.\n. Just finished implementing a little bit skimmed down version of ReactExtensionManager and brought it into the react-native-cli. Now react-native install command searches for React Components to install from package.json and installs them through Podfile.\nhttps://github.com/TomMcHugh/react-native\nWould love comments and feedback.\n. @frantic Just push it in.\n. @frantic oops, looked like it got dropped in a commit or something like that. Pushing them back in now.\n. #727 \n. @frantic Ahh that makes sense, some of it was failing in Travis CI, but working when doing npm test, so I'll figure that out and commit.\n. @frantic Yep that looks like it. All is well with Travis.\n. ",
    "corymsmith": "I'm working on taking a crack at this right now, agree on a entry in package.json, was thinking about that as well.\n. Looks great, pretty much what I was just writing! Good call on injecting right into the podfile.\n. I was wondering the same thing, want to publish my react-native-icons project and also add support for using icons in a tab bar item :)\n. Duplicate of #344 \n. @pedro The fix for this is #344 \n. @furkankinyas Did you run npm install? Or was this project created via react-native init? \n. Glad you got it working.\n. @josephtsng What styling are you trying to do? I added a custom tab bar that uses icon fonts and also uses tintColor and barTintColor to https://github.com/corymsmith/react-native-icons\n. This is a duplicate of #65 \n. No, the default is false. That just specifies that those attributes are valid\n. ",
    "neonichu": "I'm thinking it might be nicer to have a corresponding CocoaPods plugin which automatically sources all Pods from node_modules\n. @ide I was thinking that it could replace the modifications to the user's Podfile.\n. ",
    "ligaz": "It is good to consider how this might work for Android as well.\n. ",
    "johanneslumpe": "Instead of having two commands to call - e.g. npm install x and cool_tool - wouldn't it be more user friendly if it were possible to just run cool_tool install x? Under the hood it would then install x and after a successful install it would do its own additional thing.\nAnd if somebody doesn't like that, they could just go with npm install x and cool_tool separately. (cool_tool would just resolve the pod files, when called without arguments. @brentvatne No that didn't help at all. Actually in my screenshot above my own components are already named correctly. I just tried it in another project - the \"Unknown\" components are not the components I created. Those must be something else.\n. @nicklockwood Nope not doing anything of that kind. I just dofetch('someurl')` and that's it. It happens with a vanilla 0.3.11 pulled from npm. Also I'm not the only person who has this issue. At least one other person on IRC had the same issue.\n. Local queryData looks like this:\njavascript\nRCTDataManager.queryData(\n      'http',\n      {\n        method: method,\n        url: url,\n        data: data,\n        headers: headers,\n      },\n      // TODO: Do we need this? is it used anywhere?\n      'h' + crc32(method + '|' + url + '|' + data),\n      (result) => {\n        result = JSON.parse(result);\n        this.callback(result.status, result.responseHeaders, result.responseText);\n      }\n    );\n. @nicklockwood Solved it. Thanks for the hint with the stale copy. Turns out I had a module installed, which had its own react-native copy in node_modules. Weird though that that version was used and not my top-level one.\n. react-native-video because I was developing on it. Was my own fault because I npm installed in the module, while i was deving on it. But I do not understand why the packager chose the nested react-native over the top level one. Maybe it has something to do with node's resolve algorithm.\n. That'S a ListView inside the JS Navigator. Interestingly I also cannot reproduce it in the UIExplorer examples. I'll dig a little deeper and report back when I found something!\n. That'S a ListView inside the JS Navigator. Interestingly I also cannot reproduce it in the UIExplorer examples. I'll dig a little deeper and report back when I found something!\n. I was actually able to confirm the same behavior in the UIExplorer, after adding a timeout, which would call navigator.pop() after 1 second. As long as I was scrolling, or the scrollview was moving, the timeout function did not fire. Only ever after the scrolling stopped, the view would be popped. I'll see that I get a basic example done as soon as possible.\n. I was actually able to confirm the same behavior in the UIExplorer, after adding a timeout, which would call navigator.pop() after 1 second. As long as I was scrolling, or the scrollview was moving, the timeout function did not fire. Only ever after the scrolling stopped, the view would be popped. I'll see that I get a basic example done as soon as possible.\n. @tadeuzagallo yeah it's fixed now in 0.4 :)\n. @tadeuzagallo yeah it's fixed now in 0.4 :)\n. @nicklockwood got something here? If not I can write a module for it.\n. This should fix #809\n. Here is a gist which shows the issue: https://gist.github.com/johanneslumpe/e6e6e2152b96663db4a9\nWithout the fix, when being rotated, the view will not be properly resized. Here are two gifs:\nBefore:\n\nAfter:\n\n. @nicklockwood Yeah I agree that the fix isn't optimal. topLayoutGuide and bottomLayoutGuide are usually used with auto layout and return the min/max positions on the screen which aren't covered by a toolbar or similar items. The weird thing is though that they trigger - as you already pointed out - some type of constraint internally. Maybe instead of just querying them, we could apply them to the view?\n. Anyway I updated the PR to remove those two queries instead - but if those are indeed not needed, then  the RKCustomTabBarController subclass becomes obsolete I guess.\nOne thing I've noticed - but it was even present before this fix - is that when we start the app in landscape mode and then rotate it to portrait the navigation bar is below the status bar. I think this is due to the topLayoutGuide not being applied to the subview as a constraint in order to push it down.\nSo this fix is really just half of a fix - because it fixes one thing, but not the other one.\n. @nicklockwood any updates here? :)\n. Ok cool! Thanks for the feedback :)\n. This would be nice to get merged! :)\n. Published as react-native-browser-polyfill!\n. So how should we read the .babelrc file? babel-core already provides a tool to read and parse the file, but unfortunately it's not exposed. And since react-native requires babel but not babel-core directly, it might be very ugly to do a nested require into babel/node_modules/babel-core.\nBut copying the file does not seem like the right solution. Would be nice to figure out a way to get a hold of that function so we could just require it. Thoughts?\n. @ide i believe so, but now we have @jtremback's PR. I wanted to make use of the internal function, and avoid writing custom code, as babel's resolve-rc function is a bit more involved that just loading a single file. It allows multiple .babel-rc files etc. But that might actually not be needed here.\n. @ide I thought this might be interesting in addition to .babelrc - in case someone wants to use a different transpiler or do other stuff during transpilation (who knows?)\n. Yeah that would be possible. I didn't do that yet because I wanted to keep the default value from the options. If we make the path relative to the cwd and the user would use ./transformer as path, then that would be the same as the default, even though the user would want to use their own file. I guess the default path would then have to be relative to cwd too, so that we can use the same codepath. So instead of ./transformer.js the default would be ./node_modules/react-native/packager/transformer.js. Does that make sense to anybody else than me?\n. @amasad Your suggestion did not quite work as it didn't allow the user to use a cwd-relative path after all. I've added a check now whether we are being given an absolute path as option. That works quite well. Unfortunately I deleted my fork, while cleaning up my account... I tried to restore everything to be able to push to this branch again, but it didn't work properly. That's why I had to open up a new PR over at #1497. Sorry for the mess :/\n/cc @ide  @amasad \n. I don't think it's a good idea to have babel config in either .babel.rc or package.json. I'd just go for one to make it more explicit how to configure babel.\n. @jtremback fair enough :)\n. @amasad done!\n. @amasad are those docs fine?\n. @amasad updated the docs. I actually didn't write those texts, but they're changed the way you wanted now :)\n. Oh that's odd. If we have to support older version, we might add\npath.resolve(transformerPath) === path.normalize(transformerPath)\n. Oh that's odd. If we have to support older version, we might add\npath.resolve(transformerPath) === path.normalize(transformerPath)\n. ",
    "epaga": "Re-installing node.js fixed this issue for me, it looks like it was due to this older node.js bug: https://github.com/npm/npm/issues/4984\n. ",
    "pborreli": "rebased\n. yes indeed, it has been fixed by #850 \nThis policy of merging is wrong, it's not the first time.\nHad to rebase twice because other PR were merged while mine was not.\nThanks :pray: \n. duplicate of #238 \n. it was duplicate of #238 \n. respondible -> responsible (the GitHub diff editor doesn't show it)\n. done\n. ",
    "nuno": "Same issue with me.\n$ watchman\n{\n    \"error\": \"invalid command (expected an array with some elements!)\",\n    \"cli_validated\": true,\n    \"version\": \"3.0.0\"\n}\n. ```\nvar MAX_WAIT_TIME = 30000;\n```\n```\n|  Running packager on port 8081.     \n |  Keep this packager running while developing on any JS       \n |  projects. Feel free to close this tab and run your own    \n |  packager instance if you prefer.                            \n |                                                            \n |     https://github.com/facebook/react-native               \n |                                                            \n ===============================================================\nLooking for JS files in\n   /Users/nuno/Development/reactNative/AwesomeProject2\nReact packager ready.\n[Error: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html]\nError: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html\n    at null._onTimeout (/Users/nuno/Development/reactNative/AwesomeProject2/node_modules/react-native/packager/react-packager/src/FileWatcher/index.js:71:16)\n    at Timer.listOnTimeout [as ontimeout] (timers.js:112:15)\n\n\n\nERROR: could not create packager - please shut down any existing instances that are already running.\n\n\n\n[Error: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html]\nError: Watcher took too long to load\nTry running watchman from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html\n    at null._onTimeout (/Users/nuno/Development/reactNative/AwesomeProject2/node_modules/react-native/packager/react-packager/src/FileWatcher/index.js:71:16)\n    at Timer.listOnTimeout [as ontimeout] (timers.js:112:15)\n\n\n\nERROR: could not create packager - please shut down any existing instances that are already running.\n```\n. \n\n\n",
    "kangguru": "@amasad no not really, doubled it to 6000 and then 30000 but it still times out\n. please see https://gist.github.com/kangguru/cdebd0615e883b324a03\nbut since i clear out the log file no new one was generated\n. https://gist.github.com/kangguru/030fedcc477452debc3f\nsomewhere i saw an attempt to open /usr/local/Cellar/watchman/HEAD/var/run/watchman/ which was not created. but still after creating the directory its not working\ni'll try the reboot then :dancers: \n. had the same issue with 3.0.0, but now i switched back, ran watchman manually (with the flags from the plist) and it worked\nthen unloaded/loaded the plist and it keeps workign fingers crossed :)\n. 10.9.5\n. yea. i stumbled upon the same.\n. ",
    "wez": "Would be great to see what's in your watchman logs.\nhttps://facebook.github.io/watchman/docs/troubleshooting.html#where-are-the-logs\ntells you where to find them; can you put them up in a gist?\n. That log shows:\nlaunchd checkin failed Operation not permitted\nwhich is something I've not seen before.  It also shows that no watches were ever established.\nCan you attach the output of these commands:\nuname -a\nwatchman watch-list\ncat ~/Library/LaunchAgents/com.github.facebook.watchman.plist\n/bin/ps -Awwx | grep watchman\n. Hmm, did you do a HEAD install?\n/usr/local/Cellar/watchman/HEAD/var/run/watchman should be a directory that is writable to everyone, or at the very least, writable to you.\n. Can everyone that has had this issue comment here with the version of OS X that they are running?\n. If you've landed here and have this issue, please don't just reboot; while that will fix it for you, it won't help us get to the bottom of what isn't working.  We'd like to fix it so that you don't need to reboot.\nhttps://github.com/facebook/watchman/issues/90#issuecomment-87427749 has the current set of steps that will help us figure this out.\nThanks!\n. Quick update from https://github.com/facebook/watchman/issues/90, this is looking like an issue related to your umask that prevents launchd from starting the watchman service.  I've pushed an update to watchman HEAD that will force the permissions on the plist to be correct.\nThe TL;DR is looking like we should update the docs to indicate that the user do a HEAD install of watchman (brew install --HEAD watchman) until we push a 3.0.1 recipe to homebrew.\n. Yep, sounds good to me; thanks!\n. @amasad Can we edit the description of this issue to tell folks to:\nwatchman shutdown-server\nbrew update\nbrew upgrade watchman\nAnd then check the output of watchman version and make sure that they are running version 3.1 or later.\nWatchman 3.1 is now available in homebrew, so the various docs around this can be changed back from suggesting a HEAD install.\nWhile a reboot fixes the immediate problem, upgrading to watchman 3.1 is strongly recommended to resolve a couple of launchd related issues.\n. @pcottle Yep, I'll add that to the troubleshooting guide.  Can you fix up that \"Try running watchman from your terminal\" message so that it says \"Try running watchman version from your terminal\"?\nJust running watchman on its own outputs an error because it expects arguments, and this has confused a couple of people.\n. @frantic can you have your travis build bits cat (or at least tail a decent amount of) the watchman log?\nIt will be available as /usr/local/Cellar/watchman/3.1/var/run/watchman/$USER.log for watchman version 3.1 (the 3.1 comes from the brew version number).\n. if the path XXX is on filesystem bit is not in the log, it implies that no watches were ever established.  Are you sure that there isn't something else getting in the way of this?\nHow long is too long?  Is it long enough that it will have a reasonable amount of time to run in a CI environment?\n. I found out about this fsevents bug today:\nhttp://feedback.livereload.com/knowledgebase/articles/86239-os-x-fsevents-bug-may-prevent-monitoring-of-certai\nwonder if this might be a factor?\n. The watchman issue I just cross linked is a perf bug that should only hit very long running instances.  I wouldn't expect it to apply in the Travis environment, but in any case, I'd recommend that you bookend your test run with pkill -9 watchman to kill any pre-existing watchman that might be running at the start of the run, and make sure that it isn't left running at the end. \n. I'd be happy to help you figure out how to consume watchman from chokidar.  For large trees and multiple tools wanting to consume file notifications, using watchman as a consolidation point will reduce overall resource utilization and avoid node-process startup time overheads (particularly if you restart your node process).\n. I'd be happy to help you figure out how to consume watchman from chokidar.  For large trees and multiple tools wanting to consume file notifications, using watchman as a consolidation point will reduce overall resource utilization and avoid node-process startup time overheads (particularly if you restart your node process).\n. Strongly recommend that you use the new (just landed) watch-project command for your integration to get the best consolidation:\nhttps://facebook.github.io/watchman/docs/cmd/watch-project.html\ndon't hesitate to ask me if you have questions; you can find me on the #watchman IRC channel on freenode if you have more realtime questions (although I'm not always at my desk)\n. I'll probably submit the PR to brew this weekend (I want to get in a change that will remove a launchd subscription when you watchman shutdown-server) and it will take however long for the brew folks to review and ship.\nAt that point we should probably suggest that the minimum recommended watchman version to use is 3.1, so maybe we can tweak this PR to indicate that instead of the HEAD install?\n. ",
    "bumaociyuan": "sudo brew uninstall watchman\nchown root:wheel /usr/local/bin/brew\nsudo brew link pcre\nsudo brew install watchman\n. ",
    "jaichandra": "restarting my computer fixed the problem.\n. I see this error even after running 'npm start'. Do I need to make any changes to AppDelegate.m file?\n. OK. fixed the issue. I had to change the port from 8081 to 8881 as the default port is used by another process on my mac. Modifying AppDelegate.m to point to the new port worked.\n// OPTION 1\n  // Load from development server. Start the server from the repository root:\n  //\n  // $ npm start\n  //\n  // To run on device, change `localhost` to the IP address of your computer, and make sure your computer and\n  // iOS device are on the same Wi-Fi network.\n  jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8881/index.ios.bundle\"];\n. ",
    "dbergey": "10.10.2. Rebooting fixed it. I didn't try the other things.\n. ",
    "JrSchild": "10.9.5, I'm not sure how, but I fixed it without re-logging in or restarting. I think I force quit Xcode, iOS Simulator, iTerm and the process com.apple.CoreSimulator.CoreSimulatorService (don't know if it's even related to the simulator, but it wasn't quitting automatically when stopping the simulator).\n. ",
    "foolyoghurt": "@jaichandra Thank you! Reboot just solved the problem!\n. ",
    "levi6717": "on 10.9.5\ninstalled watchman\nrestart the system. The errors gone~\n. ",
    "pcottle": "@wez Would it be appropriate to also list this from https://facebook.github.io/watchman/docs/troubleshooting.html? I know we link to the react native troubleshooting guide later in the error message, but it's easy to see this one first:\nERROR  Watcher took too long to load\nTry running `watchman` from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html\nNot a huge deal, just worried people won't end up looking at both.\n. ",
    "stolemotion": "Thanks man, I was wondering why it wouldn't run. For anyone else seeking an answer to \"Could not connect to development server\" look here.\n. ",
    "magus": "I dug around and got all the way to the last step before I had to start sifting through issues, thanks for outlining the steps, now it can actually find the bundle file :+1: \n. It'd be great to verify whether a remote hosted bundle would work or not. It seems like it should work, you ship one version with the app, and save/update the local bundle based on some remote bundle. Updates to any wrapped native modules would still require an app store update though.\n. I've just finished working on a wrapper for the native Facebook button. Hooked up to various events as well, in addition to exposing native methods to the React component. I imagine what I've done is similar to what they used for the F8 app and would be interested to see how it compares.\nhttps://github.com/magus/react-native-fb-login\n. Only setting the height and width and removing absolute positioning in the react component implementation seems to have solved the issue. It behaves as expected, in views and out. Going to close this issue.\n. Good call, changed it\n. Good call, changed it\n. ",
    "drkibitz": "Just noting here, nothing is requiring you to run a node server, could also just serve a static bundle. Could also make the URL a debug app setting.\n. Have experienced the same problem on device, but have not looked into it, assumed it might be a problem with caching a failed download.\n. It looks like TextInout.js assumes placeholderTextColor is handled on the native side, when it is clearly not. placeholder is a one to one mapping of the property on UITextField, but placeholderTextColor does not, most likely needs to be implmented using UITextField's attributedPlaceholder.\n. Although the verbiage is important...\nWhat would prevent us from having an off screen WKWebView, and a JSContext within that, doing the exact same thing the JSContext in JSCore is doing here?\n. It also comes with problems. Would like to differentiate between the 2 as separate components.\n. @chadobado do you have a similar example by chance, for animating on componentDidMount? I've tried and it seems that starting the animation here is too soon, before the current layout is actually set. Is this known behavior?\n. @chadobado in your Animation example is the scaleXY actually scaling from a 200x200 layer, or something smaller? What I saw was that it appears to work, but was always scaling from no layout rather than the dimensions specified in the styles, that is until a timeout was used.\nEdit: My description is from a previous example of my own, not running your example here just yet.\n. @chadobado and thank you!\n. Something doesn't seem to be working as intended just yet. After scrolling a very long list view with images, and 4 rows visible in vertical ipad air 2, everything seems to be working as @vjeux describes, except the memory just keeps climbing and climbing. And the most alarming thing is that scrolling (after scrolling to the bottom), can cause main thread to easily eat over 100-130% of cpu, while the JSCore thread stays quiet. This is very different to the 1-3% taken by just JSCore when scrolling from the top after the initial render. It is very apparent that the app is unstable while the listview's rows all remain in memory, and the main thread is blocked for about a second give or take while a listview in this state is unmounted, and can even result in a crash. Just a reminder, this is all on an iPad Air 2.\nI also tried the \"experimental feature\" of removeClippedSubviews for ListView. This initially did seem to help with memory, but it was causing a crash. I assumed this was the \"experimental\" part, and haven't dug in there just yet ;)\nWhat I'm wondering is if I am just missing something? Do I have the capability to remove images myself using onChangeVisibleRows, should I consider this? Would it be worth more getting removeClippedSubviews stable, or should I start contemplating a new version of list view with recycling?\n. @ide I'm a noob at instruments profiler... So here's brief summary from me taking a look at it.\ncpu profile looks like most of the time is spent here (recursing through subviews), in RCTView.m :\nobjc\n- (void)react_updateClippedSubviewsWithClipRect:(CGRect)clipRect relativeToView:(UIView *)clipView\nIn memory profile major causes of persisted memory (645 MB total) are:\n- VM: CG Graphics Data (410 MB)\n- VM: CoreAnimation (141 MB)\n- VM: JS Garbage Collector (61 MB)\n- ...\nUnmount the ListView component, and total persisted memory drops to 74 MB total:\n- VM: JS Garbage Collector 58 MB\n- VM: CoreUI image data\n- ...\nI have to think I'm doing something wrong, or maybe the ListView just isn't prepared for what I'm throwing at it.\n. Those profiles were from attaching to iPad Air simulator.\n. @vjeux What would make this actionable? I asked a few questions in this thread that was answered by closing the issue? I've also still been digging through the innards of the ListView implementation, as well as the crash caused by removeClippedSubviews: true. The title \"ListView renders all rows?\" seems appropriate based on memory consumption no?\n. @vjeux No worries, and thanks ;)\nWhat I've found so far regarding the removeClippedSubviews: true crash\nI'm seeing it happen on line 217 of RCTScrollView:\nobj\n  UIView *nextHeader = nextDockedIndex >= 0 ? contentView.subviews[nextDockedIndex] : nil;\nWhen I change the data source to contain only one section (same amount of rows), this crash does not occur, and I can see that the views are being clipped.\nIn this case, the memory is lowered to about 1/2-2/3 what is was before, but still very high, and cpu is not spiking as it did on minimal scroll, also about 1/2-2/3 of what is was before.\n. @vjeux No worries, and thanks ;)\nWhat I've found so far regarding the removeClippedSubviews: true crash\nI'm seeing it happen on line 217 of RCTScrollView:\nobj\n  UIView *nextHeader = nextDockedIndex >= 0 ? contentView.subviews[nextDockedIndex] : nil;\nWhen I change the data source to contain only one section (same amount of rows), this crash does not occur, and I can see that the views are being clipped.\nIn this case, the memory is lowered to about 1/2-2/3 what is was before, but still very high, and cpu is not spiking as it did on minimal scroll, also about 1/2-2/3 of what is was before.\n. @jamesfzhang funny you should say that, and an FYI to the RN team. This issue, this component, and the initial comments on this thread, were a huge reason why we did not go with RN. Yes most of the framework was pretty awesome, but this particular component is a huge misfire, and it was disappointing to see the debate that seemed to favor its implementation.\n. @nicklockwood Thanks. I appreciate the thorough, timely, and very open response to my comment. Just to make sure you and the team knows it, whenever I make a comment like that, it's always meant as constructive criticism, I know you took it like that, so thank you. Just because we decided against RN for our needs, does not mean it isn't impressive piece of open source software. So keep up the good work, and I'll look forward to seeing the direction this component goes!\n. Not exactly sure I am following this issue, but I'm interested. Is the question if you can add a new Framework that utilizes react native and exposes functionality?\n. Whoops, this one: https://github.com/facebook/react-native/blob/master/React/Views/RCTScrollView.m#L227\n. Ok sorry, might not have anything to do with zPosition, still digging.\n. This is inherent behavior of UIKit :/\n. Seeing this in my own layout:\ncontentContainer: position: 'absolute', left: 50, right: 50, top: 0, bottom: 0\ncontentColumns: flexDirection: 'row'\ncontentColumn: flexDirection: 'column', flex: 1\ncontentColumnText: ...text styles...\nIf I give contentContainer an explicit width disallowing anything to reflow, text remains visible.\nAlso if I give contentColumn the style of alignItems: 'flex-start' it allows the containers to reflow, but also prevents the text from wrapping, therefore the text remains visible here as well. This points to something specific in the text view...\nMaybe is has to do specifically with alignItems: 'stretch' and the text view, because with this style the text continues to disappear? Just not sure though, these are all just assumptions at this point.\n. Also an important note:\nThis issue is not related to ListView, or ScrollView, it can be reproduced easily in any View.\n. Tracing things back to this commit https://github.com/facebook/react-native/commit/3f6943c9abc90592c7f2e36abda0a98cb435aaf0, related to changes in Libraries/Text\n. Did some more digging, it looks like it is related to the NSLayoutManager losing it's reference to the NSTextStorage which results in NSLayoutManager returning an empty glyphRange in RCTText's drawRect method.\nWhat's weird is when I compare _textStorage.layoutManagers[0] == _layoutManager I get true. But, _layerManager.textStorage is indeed nil. So the _layoutManager is added to _textStorage, but it does not have a reference back to the receiver, but I'm not sure how this happened.\nNSLayoutManager.h says not to set layerManager.textStorage directly, but the funny thing is, when I do   this exactly, e.g. _layoutManager.textStorage = _textStorage; inside drawRect, everything seems to work.\nThis seems like unexpected UIKit behavior to me, what does everyone else think?\n. Finally, I think I've got a fix, we were causing this error in RCTShadowText RCTMeasure function here https://github.com/facebook/react-native/blob/master/Libraries/Text/RCTShadowText.m#L28\nTurns out, an NSLayoutManager allows, but does not work correctly when adding to more than one NSTextStorage receiver.\nI think I've got a PR brewing I should make shortly.\n. I appreciate this, but IMO I wouldn't call it a \"fix\" for #813.  This behavior would not be acceptable in any app of mine. Especially wouldn't want this to be the default behavior. Another stopgap for that issue would be to set alignItems on any single line text, or explicit width if you can manage. There isn't a solution for multiline that I can find now though.\n. @siuying Please take a look at https://github.com/facebook/react-native/pull/857\nDon't think it fixes #809, but it should fix #813\n. Suggestion:\njs\nhttp.get(options, function(res) {\n    var stream = fs.createWriteStream(OUT_PATH);\n    res.pipe(stream);\n});\n. 1st impression :+1:  :+1:  :+1:\n2nd, any measurable impact with the 2nd loop?\n. @brentvatne Thanks, it's really nothing special I never intended to share, I'll see if I can get it into an archive.\n. I haven't been keeping as close of an eye on things as I was a month ago, was there anything added for orientation event support?\n. @brentvatne, here you go https://github.com/drkibitz/react-native-device-state\nbe kind :wink: \n. When experimenting  with an earlier version of react-native I made an implementation of placeholder that was different than this, but find it useful. Basically placeholder propType is an object with shape of {text: string, style: {color: string, fontSize: number, fontStyle: string, fontWeight: number, fontFamily: string}. This way it's a unified prop. Then on the UIKit side, all font attributes default to properties in self.font or defaultView.font.\nIf anyone is interested in this, happy to make a PR.\n. ",
    "AgtLucas": "Thanks!\n. @jonaswindey \nAs far as I know, this is impossible, Apple doesn't allow this.\n. @mmmulani If I do that, then we lose the italicized text. :)\n. :)\n. ",
    "jonaswindey": "Does this mean that we can host the whole bundle on a remote nodejs server, and always load the bundle (the react part) over http from the client? This would be great to deploy new features without having to rebuild the ios app. Is this realistic or doesn't Apple allow dynamic app functionality like that?\n. https://www.meteor.com/blog/2014/10/02/Apple-hot-code-push-mobile\nThis could be great if we could update all our React logic dynamically without the clients having to be updated.\n. Same issue here, dropping /Libraries/PushNotifcationIOS/RCTPushNotificationManager.* works. \nOr otherwise you can drop RCTPushNotification.xcodeproj to /Libraries in your project.\n. Did you manage to get it working? I have everything up and running (Parse back-end to send push notifications) but 'PushNotificationIOS.addEventListener('notification', this._onNotification);' is never triggered.\nI get the notification from iOS but not the event in the React native part. I've added a breakpoint in didReceiveRemoteNotification in RCTPushNotificationManager.m but it never halts.\n. I was looking for the exact same issue at the same time. \nThanks for your tip, I'm also clueless why that method isn't called in RCTPushNotificationManager.m, but needs to be included in AppDelegate. Method signature is identical, and for instance initWithInitialNotification is called correctly (in RCTPushNotificationManager.m)\n. ",
    "jordpo": "Awesome- thank you!\n. ",
    "bradoyler": "FYI. The instructions are \"available\" @ https://github.com/facebook/react-native/blob/master/Examples/SampleApp/iOS/AppDelegate.m#L31\nBut I def had to add the step:\n- In XCode, right click on your project directory and click Add Files to \"Project Name Here\" \n- choose the main.jsbundle file that you generated via curl command.\n. ",
    "erinjerri": "\nI get the same error when I run npm start. Not sure what I'm doing wrong in the app.m file? Where do I change my IP address? run curl? I can't seem to get the packager running.\n. Nevermind, I realized I didn't add in the main.jsbundle \nreferenced here: http://stackoverflow.com/questions/29374410/how-to-build-react-native-app-for-iphone/29468098#29468098\n. Yup, I did that this morning too. Still not working unfortunately. \n. Finally got it to work, plus the curl thing I couldn't do. I had to recomment out things and do a fresh restart since I think OSX was locking up everything. \n. ",
    "loringdodge": "Rebase completed. Should be good to go.\n. ",
    "jlmitch5": "+1 on a roadmap\n. @wski looks like that prop is not being rendered...placeholderTextColor is not found in the render step.\nhttps://github.com/facebook/react-native/blob/f3cd27cf483671b8821e4f50bfa7bb370893e59a/Libraries/Components/TextInput/TextInput.ios.js#L329-L346\n. @wski PR submitted https://github.com/facebook/react-native/pull/467\n. psych this doesn't fix it...closing PR :(\n. Thanks for filing this issue.  I am attempting to combine the flux todomvc tutorial with react-native, and I ran into this issue.  +1 for including modules from node core...somehow :)\n. (PR doesn't work :red_circle:)\n. ",
    "holoed": ":+1: for \"What are we working on\"\n. ",
    "diegolaciar": "https://www.youtube.com/watch?v=OPFf53fdUmQ\nOn Thu, Mar 26, 2015 at 5:05 PM, Forrest Oliphant notifications@github.com\nwrote:\n\nIn the f8 presentation, Tom Occhino noted that the animated header of the\nf8 app was driven by js. Are there any canvas examples?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/246.\n\n\nThe information contained in this e-mail may be confidential. It has been \nsent for the sole use of the intended recipient(s). If the reader of this \nmessage is not an intended recipient, you are hereby notified that any \nunauthorized review, use, disclosure, dissemination, distribution or \ncopying of this communication, or any of its contents, \nis strictly prohibited. If you have received it by mistake please let us \nknow by e-mail immediately and delete it from your system. Many thanks.\nLa informaci\u00f3n contenida en este mensaje puede ser confidencial. Ha sido \nenviada para el uso exclusivo del destinatario(s) previsto. Si el lector de \neste mensaje no fuera el destinatario previsto, por el presente queda Ud. \nnotificado que cualquier lectura, uso, publicaci\u00f3n, diseminaci\u00f3n, \ndistribuci\u00f3n o copiado de esta comunicaci\u00f3n o su contenido est\u00e1 \nestrictamente prohibido. En caso de que Ud. hubiera recibido este mensaje \npor error le agradeceremos notificarnos por e-mail inmediatamente y \neliminarlo de su sistema. Muchas gracias.\n. ",
    "forresto": "Nice demo! Specifically, I'm thinking about my dataflow editor bezier paths:\n\n. ",
    "simonlast": "I'd love to see that open sourced!\n. ",
    "KendallPark": "+1 I'd like to see this as well.\n. ",
    "zoomclub": "I just got the gitbook Beginning React-Native and the first chapter that caught my eye was \"Drawing Canvas on React-Native\". I abruptly found out that it was the shortest chapter in the book, only a few lines! It basically says that I'm S*** out of luck except for using the internal Webview to render canvas calls.\nIs there any thing more direct in the works? It would seem that something as essential as drawing could be directly mapped over to iOS? I just need the raw HTML5 canvas not a scenegraph like React-Art.\n. Thanks and great! A straight canvas still works out best for me as I just need to render lines and glyphs and have no need for a graphic scene graph. Will it be possible to use Opentype.js in React-Native?\nhttp://nodebox.github.io/opentype.js\n. Looking further at React-ART it looks like it handles paths, etc. Maybe it is just the essentials and not to much extra now, like a full blown scene graph. Still very much interested in if Opentype.js can be supported.\n. This is great progress! Thanks, will watch for your repo...\n. ",
    "lenage": "Great! any plans?\n. if you can't wait to try React on Android, give a reapp.io try. :)\n. I think it's not good to run command with sudo when run npm command.\nsudo is not required in most of time if user use homebrew\nyou can check your global npm node_modules folder by below command:\nls -dl $(dirname $(which npm))/../lib/node_modules\n. Thanks @wootwoot1234 Great work!\n. Thanks @wootwoot1234 Great work!\n. Thanks, I will try it out :)\n. Thanks, I will try it out :)\n. Yes, i'm closing it :)\n. Yes, i'm closing it :)\n. ",
    "Glavin001": "I would love to be able to develop both Mobile (iOS/Android) and Desktop (Mac OSX, Windows) apps with React Native! @sahrens would that engineer be able to publish their progress? It would be great to get started on this development. Thanks!\n. @sahrens would that Facebook engineer be able to publish their progress? It would be great to get started on this development. Thanks!\n. I am also experiencing this issue, when I have a space in my path.\nJust a quick thought: would this be fixable by escaping the path at https://github.com/facebook/react-native/blob/862d9fba09046b6ca82bcc75197de69cbfb8fa41/packager/packager.js#L171 ? I will have to take a look at this tomorrow. Hopefully this can be resolved for good.\nAlso, why is this issue closed? The workaround by @kkganesan definitely works for me (thanks!), however it is a workaround not a fix / solution and not a sufficient reason to close this issue.\n. ",
    "raelmiu": "Oh god I would more than love this.\n. ",
    "pointcom": ":heart: \n. ",
    "elyase": "This would be a great addition.\n. ",
    "AlesJiranek": "+1\n. ",
    "kwbock": ":+1: \n. ",
    "hansonkd": "+1\n. @brentvatne Hmm. Yes it appears to be happening on native object-c. I am on a maxed out new 17\" macbook pro, so my only guess is that it is El Capitan that is the problem.  I will close this issue. \n. ",
    "gcox": "+1\n. ",
    "euclides-jr": "+1\n. ",
    "massanchik": "+1\n. ",
    "jaeyeun97": "+1\n. ",
    "mhuusko5": ":+1:\n. ",
    "jondot": "Just signed the CLA.\n. This good?\n. Sure, I had the dilemma myself since I didn't see any concrete 'getting started' type wording there, I figured it belonged in the /docs folder. I'll add it as a separate pull request and then you can just close this one and accept the other one :)\n. This is an amendment for https://github.com/facebook/react-native/pull/250\n. Yes!\nI'm thinking perhaps a default 'spy' implementation, that you can use and is built-in.\nSomething like I did with this and this.\nThe ergonomics would look like this:\njavascript\nMessageQueue.spy()\nsets the default logging strategy in place.\nThen clearing a spy, disables tracing, and would have to be done like so\njavascript\nMessageQueue.spy(null)\nWDYT?\n. sounds even better, thanks for the idea!\n. Changes are in!\n. yup!\n. \ud83d\udc4d \n. \ud83d\udc4d \n. Yup, thanks!\n. ",
    "lwansbrough": "+1\nUse contentInset's value in place of automaticallyAdjustContentInsets's value for now. Obviously this will break once this is fixed though, only use this if you need to adjust the content inset right now.\n. So is the expected behaviour or a bug? I can't seem to get a project working with the provided code for ReactNavigator.\n. Ah, found it. The docs are wrong - the component name is Navigator not ReactNavigator.\n. Gracias.\n. @iostalk The method that @colinramsay describes is probably what you're looking for. The caveat is that it makes use of a native module which must be communicated with asynchronously. If you can provide a better explanation as to why you need the app's root directory, perhaps you'd get an answer sooner. I had the same problem, but realized I didn't actually need to reference the root directory.\n. @sahrens I think he wants to do RCE which is not allowed on the App Store \n. Signed the CLA.\n. I really have no preferences as to how it's implemented :P I just did it the way it makes sense to me. I used underlayColor so that it isn't confused with the backgroundColor style attribute.\n. @nicklockwood Yeah I regret changing that. I see now also that backgroundColor is probably already manipulated through the React style prop, so adding backgroundColor (and especially (!) underlayColor under a different name than the actual property it's editing) is completely redundant.\nI agree with your initial comment: hiding the opaque property behind the backgroundColor setter is best. Just check if the color has opacity and if it does, set opaque = false.\n. Changes discussed above have been made. Also added props for disabling scrolling and/or scroll bounce.\n. :+1: This is super annoying. I know we're still in very early development but I'm having to fix breaking changes for every single patch version that's released. Would be great if the docs were updated whenever breaking changes are introduced.\n. Thanks for this Brent!\n. Well, based on what I've seen in my own app, this should do it: https://gist.github.com/lwansbrough/03a459e59fdc5cf39091\nThe only thing that's changed is I added sceneStyle={{}}. You'll need the other files from that example directory.\nJust checking myself now..\n. Yes it's reproducible. \n. Great thanks @ericvicenti\n. @ide Very interesting! I will definitely have a use for this in my own app. But it's going to need file protocol support before it can be used by the camera module.\n. @brentvatne Best course of action is probably to check any changes made to facebook/css-layout as that was the original source of the issue. \n. @brentvatne Yeah I can take a look in a bit\n. Nice work @jsierles, hopefully we can get this sorted for good.\n. Yup!\n. ",
    "code-artisan": "Good job! I get a problem, I don't know how to use NavigatorIOS and Navigator, It's not working... \njavascript\n'use strict';\nvar React = require('react-native');\nvar {\n  NavigatorIOS,\n  AppRegistry,\n  StyleSheet,\n  ScrollView,\n  TextInput,\n  Navigator,\n  SwitchIOS,\n  SliderIOS,\n  DatePickerIOS,\n  TouchableHighlight,\n  View,\n  Text\n} = React;\nvar HelloWorldView = React.createClass({\n  render: function() {\n    return (\n      \n Hello world... \n\n    );\n  }\n});\nvar HomePage = React.createClass({\n  getInitialState: function () {\n    return {\n      input: '',\n      seleted: false\n    };\n  },\nrender: function() {\n    return (\n\n);\n  }\n});\nvar styles = StyleSheet.create({\n  emptyPage: {\n    color: 'red'\n  },\n  container: {\n    paddingTop: 30,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: '#FFF'\n  },\n  welcome: {\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    fontSize: 100,\n    color: '#000'\n  },\n});\nAppRegistry.registerComponent('HomePage', () => HomePage);\n```\n\n. Thank you very much\uff01 : )\n. ",
    "rudimk": "Hate to sound pushy, but I'd ask the same thing, seeing that we'd probably plan some of our experiments with React Native accordingly. Atleast, I would.\n. ",
    "Timopheym": ":+1: me too.\nmay be there can be a branch to follow, and contribute?)\n. ",
    "calvinlai": "I would love to find out more about the timeline too. Will be interested to see a branch to follow and contribute. Thanks!\n. ",
    "dowsanjack": "I would like to know the same please.\n. ",
    "richardsabow": "+1\n. Maybe an issue with iOS 7? Can it be solved somehow?\n. ",
    "vuhung": "(y) +1\n. ",
    "Rudolph-Miller": "+1\n. can't wait! :smile:\n. :laughing: \n. ",
    "shochdoerfer": "+1\n. ",
    "madlotus": ":+1:\n. ",
    "bltnico": ":+1: \n. ",
    "haoqoo": "+1\n. ",
    "christianstrang": ":+1:\n. ",
    "syy": "+1\n. ",
    "manV": "+1\n. ",
    "ElijahLynn": "\"later this year\" -> https://github.com/facebook/react-native/issues/309#issuecomment-86879861\n. Gotta love SPAs with shitty path managment. source has moved to 'page2'. \nhttp://facebook.github.io/react/blog/page2/#when-is-react-native-android-coming\n. @iamdustan Cool, thanks for the permalink!\n. \"later this year\" -> https://github.com/facebook/react-native/issues/309#issuecomment-86879861\n. ",
    "whatsdis": "so another 3 months?\n. so another 3 months?\n. ",
    "iamdustan": "Except it\u2019s not an SPA. That was an inline link to an element that is part of a specific blog post. Source has always been at http://facebook.github.io/react/blog/2015/03/30/community-roundup-26.html#when-is-react-native-android-coming. \n. Trying to understand this.\nInitially the whole thing errors. Removing things and going step by step my first issue is:\nexecution error: plugin-container got an error: every window doesn\u2019t understand the \u201ccount\u201d message. (-1708)\nthis is referring to\nif (count every window) = 0 then\n  make new window\nend if\nI\u2019m assuming that Fx doesn\u2019t have every window or it is done in a different way... do you have any good Applescript references?\n. Firefox has poor (relatively no) applescript support. I\u2019m exploring other options for this.\n. Stepping it up to a slightly larger discussion, does it make sense to change the applescript approach to something with Webdriver for Windows (and Linux) support?\n. WIP incomplete support: https://github.com/facebook/react-native/compare/master...iamdustan:fx-dev-tools?expand=1\n1. It assumes Firefox Developer Edition is already open.\n2. It blindly opens more tabs (there isn\u2019t a good way to view and grab active tabs that I\u2019m aware of)\n. @vjeux by everything runs from there I assume that the node server just pipes the JS back and forth between the browser and native processes? Or is the js running on the node instance and having it\u2019s results piped to the browser and native processes?\n. The ruby dependency will be gone soonish. #440\n. Great idea, @frantic. I\u2019ll explore that over the next day or two.\n. @frantic this was a bit of a hack, but there is already a comment saying \u201cthis is hacky, refresh the browser window to reattach\u201d.\nOriginally the chrome already open or not is happened in AppleScript. This just sets a local variable on initial browser connection and then bails out in the future.\nI've tested it in chrome and fx dev edition on my bus ride and it was working well for me.\n. @nicklockwood is this something that has changed over the past month since I opened this? At the time simply having it open my default browser worked fine.\nStill need to work in some time to come revisit this and finish it.\nIgnore the [GH Review: review-needed] label and set it back to needs-revision. I\u2019ve only rebased master, haven\u2019t done any additional work yet.\n. @brentvatne I am interested, but am currently on 3 projects at work so my time is a bit scarce. :/\nFeel free to close for now to get it off the backlog and someday I\u2019ll make it back around to this.\n. Could we change the file name from EmbededApps to EmbeddedApps?\n. @tjwudi ;) I have a few coworkers who have corrected my spelling plenty. I\u2019ve gotten to be extra careful.\n. :clap::clap:\n. :clap: I\u2019m all for this!\n. @vkurchatkin I agree with @colinramsay that Base64 images should just work.\nWe\u2019re using google drive spreadsheets to power a few internal tools. Images are often inserted as base64 images to guarantee their presence.\n. I\u2019d be happy to explore this on #510.\n. Also, es6 React.Component has a different signature. See: https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html#es6-classes\n```\nexport default class extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {index: 0};\n  }\nrender() {\n    return (\n      \n\n    )\n  }\n}\n``\n. Not 100% on this, but from when I started this over the weekend as well, I think that ruby\u2019sFILEreturns just the filename (init.sh), while node\u2019s__filenameincludes the full path resolution (/Users/user/path/to/react-native/init.sh`).\n. Yeah, but that\u2019s same as it is currently (as far as I could tell).\nE.g. Once you open and attempt to close or refresh the browser tab it says, \u201cif you do this you\u2019ll break the bridge\u201d\n. Yeah, but that\u2019s same as it is currently (as far as I could tell).\nE.g. Once you open and attempt to close or refresh the browser tab it says, \u201cif you do this you\u2019ll break the bridge\u201d\n. So the two use cases I\u2019m currently missing are:\n1. Cmd+Ctrl+Z switches back to running js on the device. This should reset the connected state so future Cmd+D can reconnect to a browser tab.\n2. Restarting the simulator from XCode without closing the window should be able to reconnect.\nAm I missing anything else?\n. So the two use cases I\u2019m currently missing are:\n1. Cmd+Ctrl+Z switches back to running js on the device. This should reset the connected state so future Cmd+D can reconnect to a browser tab.\n2. Restarting the simulator from XCode without closing the window should be able to reconnect.\nAm I missing anything else?\n. ",
    "josebalius": "@ide While this waits to be merged, how do you set the background to transparent at the moment?\n. @brentvatne For some reason that doesn't seem to work for me :/ It works on almost everything but <Text>\n. Sure\nStylesheet:\n```\nconst PAGE_BG = \"#118ac2\";\nlet styles = StyleSheet.create({\n    mainContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: PAGE_BG\n    },\n    buttonText: {\n        fontSize: 15,\n        color: '#111',\n        alignSelf: 'center',\n        fontWeight: 'bold'\n    },\n    button: {\n        height: 45,\n        flexDirection: 'row',\n        backgroundColor: 'white',\n        borderColor: 'white',\n        borderWidth: 1,\n        borderRadius: 3,\n        marginBottom: 10,\n        marginTop: 20,\n        alignSelf: 'stretch',\n        justifyContent: 'center'\n    },\n    line: {height: 0, borderColor: \"#FFF\", borderWidth: 0.5, backgroundColor: PAGE_BG},\n    input: {height: 40, color: \"#FFF\", marginTop: 0, backgroundColor: 'transparent'},\n    inputPass: {height: 40, color: \"#FFF\", marginTop: 20, backgroundColor: 'transparent'},\n    account: {alignSelf: 'center', color: '#FFF', backgroundColor: 'transparent'},\n    create: {alignSelf: 'center', color: '#FFF', marginTop: 10, fontWeight: 'bold', backgroundColor: 'transparent'}\n});\n```\nComponent's render:\n```\n\n            <Image source={require('image!login_bg')} height=\"670\" width={Dimensions.get('window').width} style={{padding: 30, marginTop: (Dimensions.get('window').height / 2 + 100)}}>\n\n                <TextInput style={styles.input} placeholder=\"Username\" placeholderTextColor=\"#FFFFFF\" />\n\n                <View style={styles.line} />\n\n                <TextInput style={styles.inputPass} placeholder=\"Password\" placeholderTextColor=\"#FFFFFF\" password={true} />\n\n                <View style={styles.line} />\n\n                <TouchableHighlight onPress={(e) => this.login()} style={styles.button}>\n                    <Text style={styles.buttonText}>Sign In</Text>\n                </TouchableHighlight>\n\n                <Text style={styles.account}>Don't have an account?</Text>\n\n                <Text style={styles.create}>Create one here!</Text>\n\n            </Image>\n\n\n        </View>\n\n```\nstyles.create / styles.account are the ones not working, the other two with transparent properties are fine.\n. @amasad Nvm I had padding on the Image element which was invalid (although it worked). Removed the padding and added an inner view layer with the padding and the text component's transparency started to work.\n. I am also facing this problem, can't seem to get it to work, any ideas?\n. @amasad I am getting the error at the title of the thread. I did a bit more reading and named the image set the same as the file name of the image, and that seems to have fixed it.\n. @SatanWoo make sure you use the same name of the original filename as the name of your image set. That seemed to work for me.\n. @spicyj @dvbportal so guys is this still a bug or is there a proper way to do this? I am having the same error with ListView.\n. Works great, thanks @brentvatne .\n. Would love to see this get merged!\n. @ide how do you call scrollTo() on a ScrollView?\n. @ide ah of course! Just not used to it yet in RN....still in the \"holycrap this all really works\" stage lol thanks i'll give that a try.\n. @ide Happy to say this worked perfectly. Thank you.\n. @dimoreira sure here is what I did\n<ScrollView ref=\"scrollView\">\n   <TextInput onFocus={() => this.refs.scrollView.scrollTo(100)} onBlur={() => this.refs.scrollView.scrollTo(0)} />\n</ScrollView>\nHope this helps\n. @ide do you know if any changes have gone into the scrollview animation? This same functionality that I implemented now scrolls really slow, before it was fluid but after updating to 0.4.4 it is pretty slow (almost 2 seconds when it used to take 0.5 at most)\n. @ide nvm :( it was this: http://stackoverflow.com/questions/8624519/simulator-slow-motion-animations-are-now-on somehow I had toggled that on....sorry about that. What gave me the clue was the keyboard was slow to come up everywhere.\n. Looking for to this getting merged guys! Great job.\n. @DaZzz I did and no luck, it still renders with square corners. Any other ideas?\n. Guys.....so what would be the proper way to use this? I am not sure if this is what I am looking for, but essentially I want a field to animate up with the same speed as the keyboard....is this possible with these commits?\n. @amasad I will try to get a test case for you.\n. @ide Makes perfect sense, i'll make the changes, test and commit.\n. ",
    "JustinCarmony": "Looks like it is the nginx welcome screen?\n``` html\n<!DOCTYPE html>\n\n\nWelcome to nginx!\n\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n\n\n\nWelcome to nginx!\nIf you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.\nFor online documentation and support please refer to\nnginx.org.\nCommercial support is available at\nnginx.com.\nThank you for using nginx.\n\n\n```\n. Let me hunt down what is using that port.\n. Ok, so I have a Vagrant project running that had opened 8081. When I turned it off, I could validate that I was appropriately getting the bundle file, but I would still get the error. I tried doing a \"clean\" before running again, same issue. \nI had to delete the app from my simulator, run, and then it worked. :)\nIt appears that packager was failing silently to run. I didn't know I should see a command terminal pop open, so I had no idea.\nSo thoughts on how to avoiding in the future:\n1) Have packager, if it can't open the port, do something other than silently fail. Would have clued me in much sooner.\n2) Allow the user to configure what port to use.\nThanks for the quick response! I'm super excited to build something! :)\nI'll leave this open for now and let you close it incase you wanted to make any other issues about the silently failing packager or configuring the ports. :)\n. @amasad want me to re-name the title of the Issue to \"Port Already In Use Fails Silently\" and we can figure out how to fix that?\n. @amasad Ok, so I found a snag, not sure how to best solve this.\nReact/React.xcodeproj/project.pbxproj on Line 448, it checks to see if packager is running or not by checking port 8081 (since people can run the packager on their own). So if you have something else running on 8081, it won't run the packager.\nSo the question is, how do we check to make sure whatever is running on 8081 is valid?\nSome ideas:\n1) On react-native-cli when calling init, it could check to see if 8081 is already in use and emit a warning. It wouldn't help if sometime down the road another app listens to 8081, but it could help a brand new user.\n2) Put some notice in the Xcode console log that it is not launching packager because 8081 is in use. This would make users aware something is wrong if they are not running packager on their own.\n3) Have the react-native somehow validate that it is listening to a proper packager instance (i.e. searching for a string from http://localhost:8081/index.ios.bundle)\nI'm not sure which, if any, are the best approach. Any thoughts?\n. @amasad I made a simple pull request with it. Feel free to give any feedback on it.\n. @amasad @vjeux I'd agree. Given how the port is hard coded in several spots, it would mitigate collisions. We can still keep the checking in #308, just change the port.\n. @amasad Done. :)\n. Done. Is there a linter I can run? :P \n. @vjeux @amasad Anthing that I can do for this PR? I've had a few co-workers get bitten by this the other day.\nThanks!\n. @vjeux should I close this PR then?\n. @sahrens done.\n. ",
    "pfeilbr": "Ran into the same issue.  An a mac with McAfee installed and a process named cma was using 8081\nUsed the following to find it.\n$ sudo lsof -n -i4TCP:8081 | grep LISTEN\nthen\n$ kill -9 <cma process id>\n. ",
    "jaredly": "Thanks!\nI had to make some changes to get this to work for both open source and internal, and will show up at the next sync.\n. @pwmckenna the base issue is that NavigatorIOS doesn't have the logic for updating nav items in-place see source\n. Yeah replace & friends (that modify the stack in-place) are fairly broken at the moment :/ but I'm looking into fixing them.\nLet me know if you can reproduce this, preferably by modifying the UIExplorer example in Examples/UIExplorer/Navigator\n. Yeah... That's probably going to be difficult with the current devtools.\nWe're looking at rearchitecting things though, in which case this would be\neasier\nOn Mon, Jun 15, 2015 at 2:10 PM Dan Oved notifications@github.com wrote:\n\n@spicyj https://github.com/spicyj On second look - the React tab is now\ngone from chrome when running the code in a worker, and using the debugger.\nAny suggestion on how to get it back?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1473#issuecomment-112212944\n.\n. react-native gh-pages doesn't use jekyll -- there's custom script that downloads the html from the localhost docs server :) it wouldn't be too hard to hack it https://github.com/facebook/react-native/blob/master/website/server/generate.js\n. Was this intentional?\n. Was this intentional?\n. why was this removed?\n. why was this removed?\n. Good to know! However, it looks like this still shouldn't be disabled. The jsx-uses-vars docs say:\n\nThis rule has no effect if the no-unused-vars rule is not enabled.\n. Good to know! However, it looks like this still shouldn't be disabled. The jsx-uses-vars docs say:\nThis rule has no effect if the no-unused-vars rule is not enabled.\n. the commit message says \"2048\". But here it's 204\n. the commit message says \"2048\". But here it's 204\n. Yeah, that seems like a decent way to do it\n. ",
    "mrtom": "@ide, @a2 any idea when this will be in a released version of reactive-native?\n. But that's not been pushed out via NPM, right?\n. Ignore me, I'm being a muppet... Sorry!\n. ",
    "hyusetiawan": "@amasad it works now, what I had to do was kill the terminal that xcode started. Unfortunately, I forgot to get the console output of the terminal window before killing it.\nAnd to answer my own question for the code signing, if you kill xcode and then open it again with your project, for some reason, it will set the target automatically to your phone (maybe because I have my iphone connected..) if that is the case, change it back to the simulator.\n. @vjeux out of curiosity, what do you guys use for the navigation? And why not use NavigatorIOS?\n. @igodzp https://github.com/facebook/react-native/blob/master/Examples/UIExplorer/Navigator/NavigatorExample.js\n. ",
    "SOSANA": "Epic! \n. ",
    "ragnraok": "Excited! \n. And I found a similar project: https://github.com/NativeScript/NativeScript , but for android, it seem that when app launch, it will load the v8 engine, and it cost so many time, in my Nexus 5, it use 4s to launch a simple HelloWorld project, and the size of apk is so large, a HelloWorld project consume 8.4M. I'm pretty curious about how react-native solve this problem\n. ",
    "yasoob": "I can not wait. BTW what would this mean for ionic framework :/ \n. ",
    "PawelOwczarekFalcon": "Cordova will die :) imho \n. ",
    "xu6148152": "nice\n. ",
    "Daniel15": "@vjeux Thanks. That's still not mentioned in the readme or on the site though. Could we please add it?\n. @vjeux Thanks. That's still not mentioned in the readme or on the site though. Could we please add it?\n. ",
    "vohof": "heavy breathing\n. ",
    "zhangxiaang": "excited\n. ",
    "marconi": "3 months to go! :D\n. ",
    "daviskoh": "I guess there is already an issue opened addressing this...\n. Came across this issue as well :/ It seems that the id arg passed into the require func defined in require.js is incorrect when spaces are used in calling the require func. \nrequire( \"react-native\" )\n\nrequire(\"react-native\")\n\n. +1\n. :+1: updated\n. Hmm. Maybe I am missing something, but I am facing some issues when I try to export the requireRe regex from DependencyGraph and into DependencyResolver. \nI changed the requireRe in the DependencyGraph to\nvar requireRe = /\\brequire\\s*?\\(\\s*?([\\'\"])([^\"\\']+)\\1\\s*?\\)/g;\nThen changed the exports\nexports.requireRe = requireRe;\nexports.graph = DependecyGraph;\nThen in the DependencyResolver/index.js\nvar DependencyGraph = require('./DependencyGraph').graph;\nvar requireRe = require('./DependencyGraph').requireRe;\nconsole.log(requireRe);\nJest output\n\nThe requireRe regex does not seem to be importing properly as you can see in the Jest output. I will keep digging into this. Any help would be appreciated as well!\n. I changed the requireRe in the DependencyGraph to match REL_REQUIRE_STMT.\nAs noted above, I was having issues when I tried to import regex into the DependencyResolver. As @amasad said, ideally we would export the const, however in the meantime this should provide a fix for the whitespace issues.\nI can submit another PR later exporting the requireRe when I can look at this code more objectively than I can now. What do you think?\n. This is the output from DependencyResolver/index.js:\n\nIt does not seem limited to importing from DependencyGraph either. I tried creating a dummy file that exports only that regex and I get the same issue. I also tried exporting some simple regex:\n/\\s+/g\nbut it seems to get imported as \n/(?:)/\nas well. T.T\n. It does not seem to be an issue w/ the console.log of jest because when I\nconsole.log(requireRe);\nright after it is declared within DependencyGraph, the output is:\n\n. The issue was related to how Jest seems to auto-mock its dependencies (though I am not too familiar w/ Jest). When I tried to export the regex, jest would try to mock it and resulting in that strange looking regex that broke unit tests (even when I tried mocking it as a function that returns the regex). However, I tested the regex exporting manually and it was working just fine.\nI decided that the regex value should not be mocked in the unit tests. However, keeping this value inside the DependencyGraph/index.js was problematic as we still want to mock the rest of the DependencyGraph when testing the HasteDependencyResolver. Thus, I decided to move the regex value into a separate file that gets imported by both DependencyGraph/index.js & DependencyResolver/index.js allowing me to prevent the value from being mocked using jest.dontMock.\nI named it regex.js as I thought there may be other regex where sharing across files is desired. The shared regex is now successfully exported and the unit tests are now passing.\n@amasad thoughts?\n. :+1: \n. Hmm...that explains the merge conflicts lol. I guess there must be a problem w/ Legal when taking PR's from random internet guys :umbrella: hehe\n. Just throwing some ideas out there:\n- Assuming that this type of merge strategy is temporary...add a section in a readme somewhere w/ contributors and their contributions, essentially a copy-paste of your 1st comment except w/ the real authors (fairly simple)\n- Alter the authors of commits via rebase (a bit more involved)\nYou could create a new github issue asking for authors to identity their branches from above. \n. ",
    "go1t": "I would love to see the example of implementing an app using Navigation component. NavigationIOS has so many limitations. :sob: \n. @hyusetiawan Thank you so much! Can't believe I missed that one haha\n. I believe you need to use NavigationIOS to be able to access this.props.navigator. Do you have that somewhere else by any chance? since in the code you showed, there isn't anything of that sort.\n. I believe you need to use NavigationIOS to be able to access this.props.navigator. Do you have that somewhere else by any chance? since in the code you showed, there isn't anything of that sort.\n. I'm not sure, but my understanding of NavigatorIOS is:  In order for your component to be able to access the prop navigator, you have to push it as a route's component (see that SearchScreen component). Can you check if you push your LoginOverlay as a route? \nIf by any chance you don't want to push it to the navigator directly, you can probably pass that navigator prop down when you create your LoginOverlay class.\nThis is my guess haha. I think it would worth trying xD\n. I'm not sure, but my understanding of NavigatorIOS is:  In order for your component to be able to access the prop navigator, you have to push it as a route's component (see that SearchScreen component). Can you check if you push your LoginOverlay as a route? \nIf by any chance you don't want to push it to the navigator directly, you can probably pass that navigator prop down when you create your LoginOverlay class.\nThis is my guess haha. I think it would worth trying xD\n. Let's say you are rendering a LoginOverlay component from some class with an access to navigator prop. You might be able to do this:\n<LoginOverlay\n      navigator={this.props.navigator}\n/>\nThis should work if my understanding of things is correct. :confused: \n. Let's say you are rendering a LoginOverlay component from some class with an access to navigator prop. You might be able to do this:\n<LoginOverlay\n      navigator={this.props.navigator}\n/>\nThis should work if my understanding of things is correct. :confused: \n. You're welcome! :D\n. You're welcome! :D\n. my rowHasChanged was the same as the documentation:\nrowHasChanged: (r1, r2) => r1 !== r2\n. I doubt it would make anything faster, since r1 !== r2 does the reference checking, which should be more optimal than r1.item.id !== r2.item.id where you have to reference the object for the id, and compare them.\n. ",
    "kittens": "Why are you using commonStrict?\n. @amasad Yup, through the optional minfication.deadCodeElimination and minification.inlineExpression transformers. Babel actually implements a JavaScript interpreter for expressions which I'm hoping to extend to statements in the future to allow some extremely awesome constant folding.\n. @amasad \nWhat I really want to do is statically execute functions so turning:\n``` javascript\nfunction square(num) {\n  return num * num;\n}\nvar a = square(4);\nvar b = square(2);\n```\ninto:\njavascript\nvar a = 16;\nvar b = 4;\nSimilarly, I've got this currently working in a Babel branch:\njavascript\nvar a = 30;\nvar b = 9 - (a / 5);\nvar c;\nc = b * 4;\nif (c > 10) {\n  c = c - 10;\n}\nconsole.log(c * (60 / a));\nto\njavascript\nconsole.log(4);\nBut it's pretty naive and there are a lot of edgecases that aren't handled which is why it's turned off.\n. It shouldn't work and there's probably no real way to make it work.\nOn Wednesday, 20 May 2015, Roger Gilliar notifications@github.com wrote:\n\nStill confused. Should it work ?\n\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1280#issuecomment-103952695\n.\n\n\nSebastian McKenzie\n. @ide Oh right. Sorry for speaking out of turn. I thought he was referring to the dev tools console.\n. I can expose that method if you want.\n. Actually, as long as this variable is an absolute path then the .babelrc files will be resolved and merged into the input options.\n. Yep.\n. @amasad Babel actually has it's own cache here for performance. So changes to .babelrc wont be reflect without a complete restart. There's currently no way to override specific options. The current .babelrc behaviour is pretty weird, it merges all parent configs which is kinda nasty. Hoping to make it more inline with other config files in the future with an extends property instead of doing the word directory inheritance stuff.\n. The .babelrc lookup and merging behaviour in this PR is not consistent with how Babel does it. Babel can already resolve .babelrc files itself by just specifying an absolute filename to babel.transform. Ref #1451.\n. This comma is unnecessary.\n. This comma is unnecessary.\n. This is only available on very recent node (0.12) and io.js versions. What's the supported version for the packager?\n. This is only available on very recent node (0.12) and io.js versions. What's the supported version for the packager?\n. The result of the path.parse call is constant and this is being evaluated on each iteration so it makes sense to hoist this.\n. Yep... At least for one of them.\n. Yep... At least for one of them.\n. GLOBAL is valid in Node so removing it will probably break some third party npm modules.\n. Not sure if you care but with Yarn you can run any script in node_modules/.bin by just running yarn <script-name>. So for example with Yarn all you need to do is yarn add react-devtools; yarn react-devtools.. Not sure if you care but with Yarn you can run any script in node_modules/.bin by just running yarn <script-name>. So for example with Yarn all you need to do is yarn add react-devtools; yarn react-devtools.. ",
    "jonrh": "Yes please! I spent about an hour trying to find this documentation, what ES6 features I could use and what not. Thanx @tadeuzagallo for pointing me to this issue.\n. ",
    "jsierles": "Working on a PR for documentation.\n. Here's a README:\nUse react-native-cli to initialize a working starter React Native app using the latest react-native version in npm. This package should be installed globally.\nUsage:\n% npm install -g react-native-cli\n% react-native init myApplication\n. #1444 \n. Stylesheets are light wrappers around basic objects, and there's no standard way to tell if a key exists in one.\nIf this is a big problem, you might call your stylesheet from a wrapper method to check for the keys existence, or keep styles short and close to your component for reference.\n. Follow the discussion on configuring IP/port here: #1429\n. Follow the discussion on configuring IP/port here: #1429\n. This is npm's tool for compiling native code at install time. This command will report build errors to a file. So, nothing out of the ordinary.\n. This is possible using the Dimensions class to calculate the width of the box from the viewport dimensions.\nSee https://rnplay.org/plays/Gg4F2w\nHowever, the vjeux's solution scales across devices and orientations. Here's a more realistic example of how to code a grid view using this method.\n. For the React Native Playground, we're running the packager along side different versions of React Native. Having the packager separate would make it easier to test changes there without having to upgrade react-native itself, and vice-versa.\n. Been looking at this. It looks like the packager is already setup to be published as a module. A few doubts:\n- Should it be split out to a separate repository?\n- Do we need to change anything besides the RN sample app?\n. @paramaggarwal By the way, you can bundle that way today using 'react-native bundle' at the root of your project.\n. It needs to be run from inside your project. The global cli loads a local cli which provides the bundle command.\nhttps://github.com/facebook/react-native/blob/master/local-cli/cli.js\n. Working example of both centered image and transparent text backrground here: https://rnplay.org/plays/PCqivA\n. We have changelogs now here: https://github.com/facebook/react-native/releases\n. Better changelogs are on the way with the upcoming 2 week release process.\n. @amasad yep they do. I think what jhdxr meant was loading an whole new app bundle, replacing the current one. I tried this by evaluating fetched javascript in a simple test in React Native and nothing happened. No console output, nor did the app reload. It was not a very good test, I'll admit, so might be worth looking into more.\nThat said, loading a new js context works pretty well for us. Here's a more involved example where we switch between RCTRootViews which have their own JS context.\n. I see the shadow now on the iPhone 5s simulator: https://rnplay.org/plays/6_nkSA\nAlso see the shadow on the iPhone 6 device.\n@oisinlavery Still seeing this issue?\n. The latest commit makes Photos the default, fixes the propTypes, and adds support for this property to CameraRollView.\n. it crashes the UIExplorer on the device. On the simulator, I haven't tested with more than a handful of images. I'll do that now though.\n. So far, testing in the simulator with 10 images generates the same warnings, but no memory error or crash. The scrolling is pretty jerky: https://www.youtube.com/watch?v=YSMo1-2b1Qw\n. Also saw this - it seems related to a regression in css-layout as mentioned above. I haven't had time yet  to debug the specific issue, but testing with a newer version of Layout.c against master fixes this issue:\nhttps://raw.githubusercontent.com/facebook/css-layout/fca176109d84a7b583bc091f91109d8c359ac1fc/src/Layout.c\nI didn't try css-layout master which changes some core method signatures.\n. Also this commit, which went into 0.4.3, could be the source of the issue:\nhttps://github.com/facebook/react-native/commit/6c812c8124650a81b4f3e15148971d8a6e49601e\n. Should this also include configuring the IP address (replacing localhost)?\n. Should this also include configuring the IP address (replacing localhost)?\n. This seems like a good approach. Easy to point people here, and plist files are easy to edit programatically. What about the IPs/ports for non-websocket?\n. Looks good @bparadie!\n. For a text element, even with 'transparent' set, the background on master is white.\nWorking on 0.4.4: https://rnplay.org/apps/pIEhKg\nmaster: https://rnplay.org/plays/PCqivA\n. What about a separate repository?\n. Sounds good!\nEl jue., 11 jun. 2015 a las 19:43, Brent Vatne (notifications@github.com)\nescribi\u00f3:\n\n@jsierles https://github.com/jsierles - @ide https://github.com/ide\n@vjeux https://github.com/vjeux and I discussed this and it may happen\neventually but at the moment it would complicate things a bit too much on\nthe Facebook end, so this is a step towards that\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1519#issuecomment-111218687\n.\n. Duplicate of #1378 \n\nHopefully this will be fixed soon with a new import of the css-layout package.\n. This happens because the packager is looking for react-native's dependencies in its own node_modules directory. In npm 3, all dependencies install flat in the top level node_modules.\nhttps://github.com/facebook/react-native/blob/master/packager/packager.js#L18\nI'd love to start using npm3 - will look into a PR.\n. We can use this or import qs.\n. ",
    "dbanck": ":+1: \n. Use flexbox for the surrounding view:\ncontainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\nThis will center any content.\n. Found your commit 0a5967dbfe8629074297f8ec5d85dd5d70a91a79 from 6 days ago.\nBut the reference has been removed from package.json 4 days ago: https://github.com/facebook/react-native/commit/0686b0147c8c8084e4a226b7ea04585362eccea8#diff-b9cfc7f2cdf78a7f4b91a753d10865a2L42\nSo maybe call wrong-react-native.js on postinstall, too?\n. Hi,\nthere is already a PR regarding this issue, see #828 \n. ",
    "DanielMSchmidt": "Great, I will do so ;)\n. @tadeuzagallo Would this syntax be okay?\n<MapView pins={this.state.pins} />\n. The current status is, that it's possible to add pins to the map, but after some seconds the map freezes. I haven't updated any documentation yet, nor written any tests. As I am (unfortunately) on vacation, I won't have time to fix this, but I could and likely will write the documentation and some tests. \nI would be really happy if you would take a look at the current status and fix the freezing. My hint would be, that I simply added the annotations at the wrong time of the maps lifecycle or in a method that gets called too often. I added you as collaborator to my fork and if you need an example implementation, see here. Thanks for your help!\n. Update: the code is working now, I will soon add the documentation and tests and then I will open a PR\n. Pins seem to be implemented as annotaions while I have been working on this PR, just FYI.\n. I checked it, they are the same, I was simply too slow implementing this. Thanks for your help\n. There are two spaces after the dot :) . ",
    "lloydh6": ":+1:\n. ",
    "BenHall": "@DanielMSchmidt What's the latest on this? Anything I can do to help as I need it for my app?\n. ",
    "naartjie": "@amasad have you managed to get ws working at all? I would like to use it for Firebase.\nAlso, have you seen these: #579 #619 and this project: https://github.com/tptee/RCTWebSocket\n. ah, gotcha, doh. thanks ;-)\nOn Tue, Apr 7, 2015 at 8:23 PM, Amjad Masad notifications@github.com\nwrote:\n\nThis is about the server use of WS (for debugging). When you npm install\nit installs native extensions which slows down the install.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/277#issuecomment-90688990\n.\n. I believe these are related, and both look promising:\nissue #579 and RCTWebSocket (@badfortrains how does this differ from your implementation?)\n. > @vjeux is there any documentation on the plugin api, or a specific place in the code I should look?\n\n@badfortrains is it not the Native Modules docs?\n. > I believe the App Store will reject anything using SocketRocket until this issue is resolved: square/SocketRocket#226\n@tptee any particular version of SocketRocket? I just had an app accepted which is using SocketRocket 0.2.0\n. ",
    "vkurchatkin": "\nws package requires native modules\n\nIt doesn't, actually. Native deps are optional\n. I don't think we can. Being optional dependency means that if npm fails to install it, it still proceeds.\n. +1 on keeping it. It could be a way to reuse 3rd party JavaScriptCore code unaware of React Native\n. I'm not sure it's a good idea though. RCTRootViews are supposed to be independent, ideally one per app (hence root), so it would be hard to communicate between components. Also using view controller infrastructure is not really \"reacty\", I think it's better to implement modals in terms of React components. (I might be wrong, first day using ReactNative :-) )\n. @a2 thank you, fixed the nit\n. @vjeux here is what I get:\n\nThe code: \n``` javascript\nreturn (\n      \n\n\n              This is a text with a lot of spaces\n            \n\n    <View style={{ flex: 1, backgroundColor: 'blue' }}>\n      <WebView url=\"http://localhost:8082/\" renderLoading={() => <View/>} renderError={() => <View/>}/>\n    </View>\n\n  </View>\n);\n\n}\n```\nHtml:\nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title></title>\n</head>\n<body style=\"padding: 0; margin: 0\">\n  <span style=\"font-family: Copperplate; letter-spacing: 5px; font-size: 10px;\">\n      This is <span style=\"letter-spacing:0\">a text with a lot</span> of spaces\n  </span>\n</body>\n</html>\n. For -3px I get the following:\n\nPretty close\n. There is the last nasty problem: width calculation. One the web letter spacing affects width, both positive and negative. Negative letter spacing makes width less than required to display text, but it is not clipped according to this width (even with all kinds of overflow and text-overflow properties). On iOS, on the contrary, it is clipped.\n. Pushed a fix for this problem, now behaves exactly the same way\n. @vjeux all done\n. @vjeux ping\n. @kennydee as far as I know, you can instantiate RCTRootView class and add it as a subview to any existing view\n. This works just fine:\njavascript\nvar text = ['aaaa', 'bbbb', 'cccc'];\n    return (\n      <View style={styles.container}>\n        {text.map(t => <Text>{t}</Text>)}\n      </View>\n    );\n. What's the point of having base64 representation? seems just a waste of CPU\n. Transferring images as base64 is a waste of both CPU and traffic (~33.3%)\n. I wonder, what is the use case for this?\n. What I mean is storing/transferring images in base64 is pretty wasteful \n. One option is to use Couchbase Lite. It can expose local CouchDB compatible REST interface that can be consumed via XHR or fetch API\n. I think this is the way it is for compatibility with CSS: https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n. +1. shouldn't be that hard. Until then you could try xhr polling transport for socket.io\n. +1. shouldn't be that hard. Until then you could try xhr polling transport for socket.io\n. https://github.com/facebook/react-native/issues/5#issuecomment-72341589\n. This could be trivially added the same way as in https://github.com/facebook/react-native/pull/482 with NSStrikethroughStyleAttributeName attribute\n. I think it's not possible currently, but could be implement with NSLinkAttributeName\n. When you create components as ES6 classes methods are not bound to instance automatically. Try this:\njavascript\nclass MyView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editMyData = this.editMyData.bind(this);\n    this.state = {};\n  }\n...\n. I think the answer is no, since everything is asynchronous and when you receive onChange event native view has already accepted new value, so it's too late to prevent it.\n. I think you can achieve most of these things with JSC, but still it would be nice to have means to customize executor\n. > The remote debugger support sounds interesting though.\nThis works with Safari and JSC out of the box\n. @robertjpayne can you make a screenshot which demonstrates the problem?\n. Can you also post the code?\n. @nicklockwood actually current behaviour with positive letter spacing matches web: http://jsfiddle.net/tuo37tq9/\nThe behaviour with negative letter spacing would be different because of this workaround: \"dangling\" part of the string is not clipped on the web, but doesn't contribute to width of the block:\nhttp://jsfiddle.net/9absfuu3/ \n. @nicklockwood that's what @vjeux told me to do. to be honest, most of web behaviour related to layout is wrong or weird :-)\n. I think what @nicklockwood proposed is enough and actually makes perfect sense\n. We can have a separate ArrayBuffer  implementation that is just a handle for raw memory. They can be produced and consumed by some APIs and behave just as usual array buffers, except no direct access to bytes via typed arrays (maybe DataView is also possible).\n. ",
    "yaru22": "I do also use webpack and it would be great to have an option to build the bundle using webpack. As @pilwon mentioned, if you can include pre-built JS for webpack to resolve modules properly, that would help webpack community a lot!\n. ",
    "minizatic": "@sahrens Do you have an approximate time frame for when we can expect this feature? And thanks for all the hard work you and the React Native team have already done on this!\n. ",
    "boyswan": "+1\n. Could I ask how you are adding fonts?\n. ",
    "mattds": "+1 as well :) I got a version with minimal functionality working on my side, by creating a custom view/manager, might be useful in the interim. \n``` objective-c\nimport \"RCTViewManager.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\nimport \"UIView+React.h\"\n@class RCTEventDispatcher;\n@interface RCTUITextView : UITextView\n- (instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher NS_DESIGNATED_INITIALIZER;\n@end\n@implementation RCTUITextView\nRCTEventDispatcher *_eventDispatcher;\n\n\n(instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher\n{\n  if ((self = [super initWithFrame:CGRectZero])) {\n    _eventDispatcher = eventDispatcher;\n    [self setDelegate:self];\n  }\n  return self;\n}\n\n\n(void)textViewDidEndEditing:(UITextView *)textView\n{\n  [_eventDispatcher sendTextEventWithType:RCTTextEventTypeEnd\n                                 reactTag:self.reactTag\n                                     text:self.text];\n}\n\n\n(void)textViewDidChange:(UITextView *)textView\n{\n  [_eventDispatcher sendTextEventWithType:RCTTextEventTypeChange\n                                 reactTag:self.reactTag\n                                     text:self.text];\n}\n@end\n\n\n@interface UITextViewManager : RCTViewManager\n@end\n@implementation UITextViewManager\n\n(UIView *)view\n{\n  return [[RCTUITextView alloc] initWithEventDispatcher:self.bridge.eventDispatcher];\n}\n\nRCT_EXPORT_VIEW_PROPERTY(text, NSString)\n@end\n```\nUITextView.js\n``` javascript\n'use strict'\nvar createReactIOSNativeComponentClass = require('createReactIOSNativeComponentClass');\nmodule.exports = createReactIOSNativeComponentClass({\n  validAttributes: { text: true },\n  uiViewClassName: 'UITextView',\n});\n```\njavascript\n  <UITextView onChange={(de) => console.log(de.nativeEvent.text)} onEndEditing={(de) => console.log(\"end: \",de.nativeEvent.text)}/>\n. Thanks @JonasJonny. The issue seems to be one and the same. I would add to the original issue that this wasn't an issue as of version 0.3.4, which was the version I recently upgraded from. I think this is quite a common use case, so I'm hesitant to use a workaround if a fix is possible, hopefully there is one in the pipeline :)\n. @ericvicenti, I tested this now on master, and can confirm the issue is resolved, many thanks.\n. ",
    "cloudify": "+1\n. thanks @nicklockwood !\n. ",
    "lukasreichart": "+1\n. @spicyj Thanks you directed me on the right path :+1: \nThis worked for me:\njavascript\nrender: function() {\n  return (\n    <ListView\n      dataSource={this.state.dataSource}\n      renderRow={(rowData, sec, i) =>\n        <Text ref={(row) => this.rows[sec][i] = row}>{rowData}</Text>\n      }\n    />\n  );\n},\n. The error message is correct: it seems that the trackedTouchCount  isn't incremented, when the touch starts, but when the touch ends the ResponderEventPlugin tries to decrement, it which results in trackedTouchCount beeing -1. \nJust an theory: Maybe this error occurs because gestures are handled differently on the ListView and the ListView's elements:\nListView uses ScrollView which is a separate native class and uses a UIScrollView. The ListView's \nelements on the other hand use the JS Gesture Responder System. \nImagine the situation: The touch is first handled by the UIScrollView but as the touch changes it's also tracked by the JS Responder System. In this case the touch would never have been started (from the JS perspective) and therefore trackedTouchCount, wasn't incremented.\nBut maybe someone who understands more of the react-native gesture responder system could take a look? @vjeux @nicklockwood @ide ??\n. @jtremback any leads on how to fix this?\n. @meric426 The bug also occurs in the simulator, but is more difficult to reproduce ... :/\n. @iostalk that would be?\n. @sjmueller I am waiting for the review of @a2 ....\n. @brentvatne @ide @a2 @nicklockwood any progress here? :+1: \n. ",
    "aaronksaunders": "+1\n. I would settle for a deployment script that could do this for me? I know xcode project provide hooks for when running projects that could be utilized to automate this whole process a little more cleanly.\n. At this point I am just looking for local device builds\n. Nope, no update, feedback or comment... Are you seeing this issue?\n. ",
    "gilchenzion": "@brentvatne :+1: Thanks for the link, sounds like a great work around for now. Definitely would love to hear from the FB team still regarding standard implementation\n. ",
    "jimmyhmiller": "I don't know what is causing this issue, but ide in the irc told me to manually run: \nbash\n$ node_modules/react-native/packager/packager.sh --assetRoots path/to/Images.xcassets\nAnd that seems to work.\n. ",
    "pedro": "@amasad it seems like the fix in #286 was later reverted by 31c4ff0?\nbut fwiw I applied that diff manually to my packager and still couldn't get images to work. Inspecting the ReactPackager middleware to see if I can debug this further.\n. Odd, still having issues here too. I have the react-native package installed locally with my app (under node_modules in the root folder).\n. ah, doh, was just using it wrong.\nNot familiar with Images.xcassets, thought I needed to refer to images by the name of the group I defined in Xcode. But debugging the react-native packager I saw it still adds assets by the original image name, so using these instead works.\n. sweet, works now! thanks\n. Ah! Sweet, I'll probably leave this for cli.js then. Thanks, will close/reopen against it.\n. Updated in #651.\n. Interesting \u2013 I just went with Commander because of the nice interface and how it wraps stuff like the help view. Looked at minimist too, but it's pretty raw so we'd still have to do validation/help screen/etc.\nAnd just found argparse, thoughts on it?\n. For sure, sounds good! I'll bring it in in another pull.\nThanks folks!\n. ",
    "syrnick": "That patch worked for me. @pedro did you do npm install react-native -g instead of npm install react-native -s by any chance?\n@amasad It's a bit fragile, because node_modules can be pretty much anywhere relative to the xcode project. \n. ",
    "JonathanMatthey": "@amasad has this bug definitely been closed ?\nit originally didn't work, then worked for 2 days and now i've tried importing different images, on 3 different projects, and none work, even in the examples projects... \ntried both launching default packager.sh and the command line where you specify assetRoots\nalways RED SCREEN: requiring unknown module...\n. placeholderTextColor doesn't work :( \nalso you can see that they're not used in the Movies or UIExplorer examples:\n\n. ",
    "dickyj": "Hi,\nNow I seem to be facing the same issue, referring to the images by the image name does not work. E.g.\nI have Avatar.png, Avatar@2x.png, Avatar@3x.png in my Images.xcassets, and I use require('image!Avatar') does not work.\nAny clues? \nI also used this to launch, also does not work...\n$ node_modules/react-native/packager/packager.sh --assetRoots path/to/Images.xcassets\n. Mine seems to work now. Thanks. Apparently I was trying to make it dynamic:\nvar icon = 'Avatar';\nrequire('image!'+icon)\nThat does not work.\n. @vjeux its the same error message as the one here:\nhttp://stackoverflow.com/questions/29308937/trouble-requiring-image-module-in-react-native\nIts actually very misleading error message, since it says it cannot find \"image!Avatar\" but when I hard coded it, it works. \n. ",
    "SatanWoo": "Face the same problem....\n. In v0.4.0, seems running command above not solve the problem? Can someone give me a hint?\n. ",
    "fkilaiwi": "same.. its not working. When you talk about \nnode_modules/react-native/packager/packager.sh --assetRoots path/to/Images.xcassets\nwhere should u run it from ?\n. happened with me today ! crashed when I opened the UIExplorer app. \n. ",
    "TylerYang": "@josebalius  Amazing!!! I face the same issue 5 mins ago, then I saw your comment, instead of click + button to add a new image, I just dragged it to Images.xcassets.(Didn't change the name). It's working now. \nThx!!!\n. @christopherdro  Get it, thx!\n. @christopherdro  It's working. Close it now. : )\n. ",
    "stefanopiovesan": "Same for me. Images.xcassets + with Import didn't worked, drag'n'drop solved the issue.\n. ",
    "goddyZhao": "Ok, got it, thanks so much @vjeux \n. ",
    "hemanth": ":+1:\n. ",
    "chuyik": "It's coming soon, see:\nhttps://github.com/facebook/react-native/pull/271\nDuplicated questions:\nhttps://github.com/facebook/react-native/issues/255\n. So why this is closed if it's still not solved?\nSeams like we don't have any existing solutions if we want to approach reuse cells on Android.. ",
    "t4t5": "I had the same problem, and was quite confused for many minutes, but solved it by doing \"Reset content and settings\".\nNot sure if this is the Simulator's fault or React's, but it should probably be fixed soon in order not to scare new people away, it is after all the very first tutorial in the official docs. :)\n. ",
    "SizeSeeker": "Just experienced the issue. Resetting still works. @t4t5 has a great point about it being a bug in step 2 of the tutorial.\n. ",
    "mondras": "Same here\n. ",
    "asamoon": "Same problem on device\uff5e\n. ",
    "raphamorim": "Not only this file. I would like to promisify tasks as extractDocs and generate, as would work better without depending on callbacks. What do you think?\n. Gotcha, you're right. Valid only commits to log repair :)\n. ",
    "UberMouse": "A thought occurred to me that it might the rbenv bundler plugin. I ran rbenv bundler off to disable it and I was able to execute the init.sh script directly. Turning it back on with rbenv bundler on didn't cause the issue to come back so it might have just been rbenv in a bad state.\nI'll close this issue now.\n. ",
    "TooBug": "Thanks for explanation!\nIn my understanding, what you mean is: If I use something that is unsupported now, react-native may not give out a warning or an error.\nBut, both placeholderTextColor and textAlign are in the docs, but has no effect. So I'm not sure whether I have missed something. Quite confused.\n. Exactly! But has no effect.\n. ",
    "RetroPronghorn": "I'm getting issues with placeholderTextColor as well \n\n. @darylrowland I suspect anything listed under props here should work: http://facebook.github.io/react-native/docs/textinput.html#props but I'm not sure. If that is the case I hope more is added later. It would be super nice to be able to only have a bottom border on inputs instead of a solid full wrapped border. \nI assume there are things that can be styled outside of the normal props but i can't really find good documentation other than the error message you get when you put a bad style.\n. Was just reading http://stackoverflow.com/questions/29308937/trouble-requiring-image-module-in-react-native apparently a recent update reverted the fix :disappointed: \n. @amasad Restarting the server doesn't seem to help. I've tried for a few hours to attempt different methods but had no success. \n. @amasad I'm on the latest commit and it's not working, I figured I'd pull from GitHub vs the NPM release since there are a lot of PR's I'm hoping get merged soon :) \nThough it's worth noting I have tried 0.3.1 and it does not work there either for me. \nAlso in OP:\n```\ntried all the suggested solutions\nupdating global react-native 0.3.1\nupdating local react-native 0.3.1\n```\n. @notduncansmith Not that I remember, I think it gave me a packager error; I'll give it another shot though. \n. Can confirm it works if you revert to v0.3.1 (I was running the latest commit vs the NPM module) :+1: \nSteps I took:\n(obvious but might help others)\nChange version in package.json \n\n\"react-native\": \"0.3.1\",\n\nClean up old version \n\nrm -rf node_modules/\n\nReinstall\n\nnpm install\n\nAdd image to images.xcassets.\n\nAdd the require code\n<Image\n              style={loginStyles.logo}\n              source={require('image!tweetbucket')}\n              />\nRun @notduncansmith's command to override / set assetRoots,\n\nnode_modules/react-native/packager/packager.sh --root=./ --assetRoots=./iOS/Images.xcassets\n\n\u2318R in xcode\n\nYay it worked!\nI still think this should be considered an issue though since it was apparently working out of the box in previous versions. \nAlso odd little bug it actually rendered the view twice at one point which was weird but I couldn't reproduce it. \n. @amasad sorry should note I was using commit hash instead of npm hosted version\nIt'd be really helpful if you can tell me it this work: Can you follow the standard project creation flow in the getting started guide? Add an image and report back if this works?\nI tried that before (last night 9PM EST) and without running a special command to define the assets location it does not work, I get a message something similar to could not find module require(image!someimagename) if you are sure it is there restart the PM\n. > Doesn't work when i do require('image!' + this.props.image)\n@chirag04 I don't belive you should not use concatenation as outlined here: \n// BAD\nvar icon = this.props.active ? 'my-icon-active' : 'my-icon-inactive';\n<Image source={require('image!' + icon)} />\nhttp://facebook.github.io/react-native/docs/image.html#static-assets\n. @chirag04 That I'm not sure about, I read on SO that version 0.3.0 might work. Have you given that version a try? \n. ",
    "darylrowland": "Should textAlign: 'center' work on a TextInput? It doesn't seem to be working for me?\n. And same for centering, that doesn't seem to work either on TextInput. I'm probably doing something wrong!\nLoving the rest of the framework though, it is awesome!\n. I've just fixed this in a much better way in a new pull request - https://github.com/facebook/react-native/pull/772\nTurns out that all that was wrong was that the textAlign css property needed remapping to textAlignment. So luckily a one line change fixes it... nice :)\n. I'm trying to figure this out too. Feels like when you register you should get a token back?\n. Anyone got any ideas on this? Really need to be able to pull the token back in the app I'm creating.\n. In case anyone is interested, I ended up writing a custom module for this (had to make quite a few changes). I've put the code up on github here: https://github.com/darylrowland/react-native-remote-push\n. I've started building a basic Contacts API for a project I'm working on. I'll try and pop it on Github this afternoon or tomorrow if it would be useful for people.\nEDIT: the code I'm using is here: https://gist.github.com/darylrowland/62a5f12981c4669394a8\n. Think I've exposed it now in RCTTextViewAttributes. Let me know if that's not correct. Thanks.\n. ",
    "jamalneufeld": "I'm also experiencing placeholderTextColor having no effect. It doesn't work in any of the scenarios below: \n<TextInput\n    autoCapitalize=\"none\"\n    autoCorrect={false}\n    onSubmitEditing={this.props.onSearch}\n    placeholder=\"Search...\"\n    placeholderTextColor=\"#ffffff\"\n    style={styles.searchBarInput}\n/>\n<TextInput\n    autoCapitalize=\"none\"\n    autoCorrect={false}\n    onSubmitEditing={this.props.onSearch}\n    placeholder=\"Search...\"\n    placeholderTextColor=\"white\"\n    style={styles.searchBarInput}\n/>\n<TextInput\n    autoCapitalize=\"none\"\n    autoCorrect={false}\n    onSubmitEditing={this.props.onSearch}\n    placeholder=\"Search...\"\n    placeholderTextColor={styles.placeholder}\n    style={styles.searchBarInput}\n/>\n...\nvar styles = StyleSheet.create({\n...\n    placeholder: {\n        color: '#ffffff'\n    }\n...\n});\nNothing seems to work.\n. ",
    "noahlu": "I encounter the same problem, but it runs ok on iphone6.\n. ",
    "tundrax": "The constants are defined staring on line 456. But the condition #ifndef __IPHONE_8_2 is not fulfilled.\n. ",
    "internet5": "How to resolve it?\n. ",
    "jasonslyvia": "Sure I have, I have Chrome open, I even have the devtool open.\n. ",
    "weixiyen": "CMD+D\n. ",
    "jiyinyiyong": "Anyone ran into this error after pressing Command+D?\nRCTJSLog> \"Running application \"Game2048\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\"\n[RCTLog][tid:0x7f8eeb417640][RCTRootView.m:68]>WebSocket debugger is not available. Did you forget to include RCTWebSocketExecutor?\nRCTJSLog> \"Running application \"Game2048\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\"\n. ",
    "micksabox": "I had this same issue \"Do you have chrome open?\" I found that it worked by moving my project to a file path which did not have a space in it.\n. ",
    "lancy": "I got the same issue.\nThen I look into the source code of that applescript, found it just open the chrome and jump to http://localhost:8081/debugger-ui, nothing else.\nSo you can remove that code and do it by yourself.\n. ",
    "kkganesan": "It does work with the following steps,\n1) With simulator opened, Press CMD + D once and the node console would output \n\"Launching Dev Tools...\"\n[22:27:49]  request:/index.ios.bundle\n[22:27:50]  find dependencies\n2) open chrome http://localhost:8081/debugger-ui  (if chrome was not launched in the first step)\n\"Status: Waiting for simulator\" will be displayed \n3) CMD + D again on the simulator will display the following message in the console\nStatus: Debugger session #15826 active\n. ",
    "skyming": "just as @kkganesan  you say ,but the node console not find output \"Launching Dev Tools...\"\njust  as the following\n\"[19:42:48]  request:/Examples/Movies/MoviesApp.includeRequire.runModule.bundle\n[19:42:48]    request:/Examples/Movies/MoviesApp.includeRequire.runModule.bundle(15ms)\"\n. it seams not to be work, also just like \n\"React Native JS code runs inside this Chrome tab\nPress \u2318\u2325J to open Developer Tools. Enable Pause On Caught Exceptions for a better debugging experience.\nStatus: Waiting for simulator\"\n. ",
    "dwilt": "UPDATE: The tutorial and initial tab opened by React says to check off the \"Pause on Caught Exceptions\" - this was taking me to some line inside of jquery and not to the debugger; line that I mentioned before. Unchecking it and refreshing worked and brought me to the line where I could inspect.\nI'm still getting this red screen while doing the tutorial - trying to refresh to see my changes:\n\n\n@kkganesan instructions don't seem to be working for me at the moment.\nI'm running through the Egghead \"React Native: Up and Running\" tutorial. When I run the project, it fires up the simulator and I can enable Live Reload and make changes to the JS file that is provided and I can see my changes work. Great.\nFollowing the tutorial, when I put debugger; in the index.ios.js and hit CMD-D in the simulator like @kkganesan suggests in the first step, a Chrome tab does in fact launch at http://localhost:8081/debugger-ui but it doesn't say Status: Waiting for simulator - it shows Status: Debugger session #15826 active. I hit CMD-R to refresh and I get this:\n\n. This is happening to me as well.\n. @brentvatne I can't figure out exactly what I did but it seemed to stop happening. Sorry I couldn't be more help.\n. ",
    "mydearxym": "why is this issue closed?  i have the same problem \nOS X 10.9.5\nChrome 41\nXcode 6.2 (6C131e)\ni get \"Runtime is not ready. Do you have Chrome open?\"\n. @vjeux @frantic  i fellow the #1101 which change the \"Google Chrome \" to \"Chrome\" in applescript  and problem solved!\n. +1   I use Semantic-ui  to build my mobile app on iOS , and it kind of slow , maybe the WKWebView will speed it up\n. @nicklockwood i use the method <WebView url=\"test.html\" />  and it show :\njavascript\nError setting property 'url' of RCTWebView with tag #507: The file 'test.html -- file:///Users/xieyiming/Library/Developer/CoreSimulator/Devices/283F4434-57\u2026rs/Bundle/Application/72594A59-1805-4D5C-B8AB-AB79958D08B6/phone_side.app/' does not exist\nand i tried html option too , not work either~\n. +1\n. ",
    "strefethen": "@mydearxym I changed it back from \"Chrome\" to \"Google Chrome\" and it fixed my problem. Go figure.\n. @ide it sounds a little arbitrary considering deeplinking is a pretty core functionality on mobile. We use it in our app for push and geo notifications and to allow the RN portion of our app to navigate to other features within the app for those of us working to leverage RN despite not having a fully RN built app. The implication here isn't \"all\" subspecs be pulled in but that one which seems  quite core to mobile be included for simplicity. We are maintaining a full copy of the repo for our purposes because of this one issue.\nI do think consideration of specific modules should be weighed independently from an \"all\" or nothing approach.\n. @ide btw, I'm specifically referring to LinkingiOS and not the original subject of the thread asking for \"all\" subspecs since I agree not all of them should be included.\n. ",
    "ohadperry": "thanks!\n. ",
    "marclundgren": "thanks @ide :)\n. ",
    "jrowny": "Yea, that's just the styles for Flexbox, but the styles are pretty succint.\nImage styles: https://github.com/facebook/react-native/blob/72d3d724a3a0c6bc46981efd0dad8f7f61121a47/Libraries/Image/ImageStylePropTypes.js\nText styles: https://github.com/facebook/react-native/blob/72d3d724a3a0c6bc46981efd0dad8f7f61121a47/Libraries/Text/TextStylePropTypes.js\nView styles: https://github.com/facebook/react-native/blob/72d3d724a3a0c6bc46981efd0dad8f7f61121a47/Libraries/Components/View/ViewStylePropTypes.js\n. ",
    "tehfailsafe": "I get this error as well when I try to run on real ios device through xcode. Is that expected? \n. I restarted a few times, uninstalled/reinstalled node and watcher, and now reinstalling xcode. \n. Installing xcode from the app store, should I grab a different one?\n. I was running npm start from react-native root, but even starting it deeper in still pacakages from the main directory.\n```\n\nreact-native@0.2.1 start /Users/me/react/react-native\n./packager/packager.sh\n\n```\n. Also watching some others on youtube and it seems there's a blink or flash in the simulator on the reload. When I hit Cmd-R there's no blink or anything, nothing happens at all.\n. When I make a change in the editor I see this in the terminal:\n[21:46:15] <START> find dependencies\n[21:46:15] <END>   find dependencies(5ms)\n[21:46:15] <START> transform\n[21:46:15] <END>   transform(189ms)\nBut that is when I save from the editor, before attempting to hit Cmd-R\n. hitting Cmd-R in the simulator produces no logs in the terminal or in xcode console.\n. I am spamming it 50 times, doubt that's the problem... :)\n. Fun note, learned from @jordwalke on twitter to use the shake gesture to bring up the dev dialog, and reloading from there works great. Also enabling live reload now works by just saving the JS file without touching Cmd-R. \n. Turns out it's a simple hardware keyboard setting in the simulator menu. Never would have thought to check that, especially since things like alt-drag work for multi-touch emulation without this setting enabled. \n\n. Sure first thing in the morning!\nOn Thu, Mar 26, 2015 at 10:45 PM Spencer Ahrens notifications@github.com\nwrote:\n\nGlad you could figure it out. What to send a PR with the tip?\n\nOn Mar 26, 2015, at 10:41 PM, tehfailsafe notifications@github.com\nwrote:\nTurns out it's a simple hardware keyboard setting in the simulator menu.\nNever would have thought to check that, especially since things like\nalt-drag work for multi-touch emulation without this setting enabled.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/306#issuecomment-86834621\n.\n. updated to add the watchman permissions fix.\nhttps://github.com/facebook/react-native/pull/585\n. Does disabling the menu item Hardware > Keyboard > iOS uses same layout as OSX fix it while keeping the layout?\n. Added more detail, I would have missed this. Pull https://github.com/facebook/react-native/pull/347\n. Good idea, adding it now.\n. Wasn't sure if I should do that or you guys need to. \n. \n",
    "lealife": "Ok, I will try it, I see the AppDelegate.m :\n```\n // Loading JavaScript code - uncomment the one you want.\n// OPTION 1\n  // Load from development server. Start the server from the repository root:\n  //\n  // $ npm start\n  //\n  // To run on device, change localhost to the IP address of your computer, and make sure your computer and\n  // iOS device are on the same Wi-Fi network.\n```\nMaybe you should write it in a wiki(How to run examples ?). It's easy to freshman. \n. ",
    "ikallen": "where is react-native directory? \n. ",
    "brownieboy": "@ikallen \nThe \"react-native directory\" refers to the folder where your own source-code is located.\n. ",
    "tischler": "+1 -- I've even deleted the folder, re-created a new folder, run the app, and I'm still seeing my changes from before the delete. \nxcode - Version 6.2 (6C131e)\nyosemite - 10.10.1\nnode 0.12.0\n. ",
    "montogeek": "You have to hit Cmd+R twice, every time :)\n. ",
    "imWildCat": "@tehfailsafe Fixed, thanks!\n. @LinusU Oh sorry, I didn't know that. Thank you very much for your suggestion!\n. @marciok , Thanks a lot. I apologise for my careless.\n. @LinusU Sorry, I forgot to add a space.\n. ",
    "rywhee": "Unfortunately, the keyboard toggle does not fix the issue for me. Have tried that as well as uninstalls and reboots. Two near identical machines:\nYosemite 10.10.2\nXcode 6.2\niOS Simulator 8.2\nnode v0.12.1\nFirst run of the project:\n[12:26:54 AM] <START> request:/index.ios.bundle\n[12:26:54 AM] <START> find dependencies\n[12:27:00 AM] <END>   find dependencies(6496ms)\n[12:27:00 AM] <START> transform\n[12:27:00 AM] <END>   transform(202ms)\nCmd-R (2x) in the simulator causes a screen flash, as if a reload is happening; but new content is not pulled in.\n. @amasad my bad, I snipped it!\n[12:39:38 AM] <START> request:/index.ios.bundle\n[12:39:38 AM] <START> find dependencies\n[12:39:44 AM] <END>   find dependencies(5888ms)\n[12:39:44 AM] <START> transform\n[12:39:45 AM] <END>   transform(234ms)\n[12:39:45 AM] <END>   request:/index.ios.bundle(6140ms)\n. Thanks @amasad. Unfortunately, a manual start does not resolve the issue for me.\nFYI - I have had to bump MAX_WAIT_TIME in FileWatcher to avoid the 'Watcher took too long to load' error...\n. @amasad yep, when stopping then re-starting the packager; changes are picked up fine. It's just the live reload that's not happening.\n. My issue refresh issue was related to watchman permissions.... solved here\nfacebook/watchman#90\n. My issue refresh issue was related to watchman permissions.... solved here\nfacebook/watchman#90\n. ",
    "jordanfloyd": "@rywhee are you using sublime text 3? I had to disable atomic save for refresh to work properly.\n. ",
    "eyaleizenberg": "@rywhee Thanks dude! Solved all my issues!\n. ",
    "mickshu": "expect\n. ",
    "ieugen": "+1, I hope it comes out soon :)\n. ",
    "pwnsdx": "No problem! ;)\n. While looking in PRs, I just saw that there is already one about this: https://github.com/facebook/react-native/pull/292 so you just have to accept it\n. Hey @ide, thanks for helping me. I tried and unfortunately it didn't worked.\nHere is the code I've done:\n```\n            \n\n                <Text style={{backgroundColor: 'transparent'}}>Inside{'\\n'}Test</Text>\n            </Image>\n        </View>\n\n```\nI have another problem, I'm also trying to get Background Image via Nesting ( https://facebook.github.io/react-native/docs/image.html#background-image-via-nesting ): it works but the text erase the image. Here is an screenshot of what is happening:\n\nThanks for helping :)\n. Hm. Looks like I found where was the problem. I had 2 master views:\n```\n      \n\n\n\n                <Text style={{backgroundColor: 'transparent'}}>Inside{'\\n'}Test</Text>\n            </Image>\n        </View>\n\n\u2026\u2026\n```\nand the style.display didn't had \"flex:1\"\u2026 Without this everything inside the View looks weird, however the 2nd problem is still present, the text is still on the image.\n. :)\nHere's an example:\n\nLe 28 mars 2015 \u00e0 11:49, Djkds notifications@github.com a \u00e9crit :\nI wanna do this\n\u2014\nReply to this email directly or view it on GitHub.\n. Oops, I sent attachment via e-mail. It looks like GitHub do not accept it. Here is it:\n\n\n@nim23: Both does not works :/\n. Sounds good!\n. #318 looks accepted! Problem fixed.\n. ",
    "AbeEstrada": ":+1: I hope this get merged soon.\n. :+1: \n. Duplicate of https://github.com/facebook/react-native/pull/520\n. ",
    "nim23": "Just a heads up, for some reason providing the barTintColor, void's the tintColor and is always blue. I made the same changes as this commit to my local copy of react-native and as soon as I provide a barTintColor, tintColor is always blue.\n. I can only see the tintColor being passed around and not barTintColor so not sure if it is doable at the moment.\n. Pull request #318 pending for the bug.\n. Another pull request pending #318 with more stuff.\n. ",
    "harrywincup": "tintColor seems to be intentionally disabled if barTintColor is present, though i'm not sure why? https://github.com/facebook/react-native/blob/72d3d724a3a0c6bc46981efd0dad8f7f61121a47/React/Views/RCTWrapperViewController.m#L80\n. ",
    "torifat": "The alpha value on barTintColor doesn't have any effect on the navigation bar. It seems using a transparent image as background is the current solution. I'm naive to iOS development. So, any expert can correct me if I'm wrong. But, I believe they have not implemented it intentionally - https://github.com/facebook/react-native/blob/master/Libraries/Components/Navigation/NavigatorIOS.ios.js#L47\n. ",
    "eduardinni": "I completed this pull request, based on all your comments here. I include one working example.\nI don't know if it is possible to merge pull requests, but mine is #695 \n. I submitted another pull request to complete this one (sorry, I did a mistake with my forked repo). I include the example in the same view as @ericvicenti comments. The new pull request is #943 \n. Do you have module.exports in FlightList.js?\n. I tried to change the colors only for one scene but the example gets more complex. Hidden the main nav bar and adding another NavigatorIOS component or adding an external example like in Navigator maybe confuse and I think it's not necessary.\nMaybe we can achieve this with 'pop' events like didPopItem or something (ok, this is another case :P)\n. I think you can achieve this behavior using a state var on the main route, and then play with rightButtonTitle and onRightButtonPress through props when push/replace new routes.\nIf you pass null to rightButtonTitle the button will not render.\n. StatusBarIOS style switch removed, I changed the color of barTintColor to get better contrast (another blue, from React Native website :P)\n. StatusBarIOS style switch removed, I changed the color of barTintColor to get better contrast (another blue, from React Native website :P)\n. Hello @shergin , I'm having troubles to call RCTConvert in the returned value, can you help me, please?\nThe setup:\nRCT_ENUM_CONVERTER(UIInterfaceOrientation, (@{\n  @\"portrait\": @(UIInterfaceOrientationPortrait),\n  @\"portrait-upside-down\": @(UIInterfaceOrientationPortraitUpsideDown),\n  @\"landscape-left\": @(UIInterfaceOrientationLandscapeLeft),\n  @\"landscape-Right\": @(UIInterfaceOrientationLandscapeRight),\n}), UIInterfaceOrientationUnknown, integerValue);\nRCT_EXPORT_METHOD(getInterfaceOrientation:(RCTResponseSenderBlock)callback)\n{\n  callback(@[@{\n    @\"orientation\": @([[UIApplication sharedApplication] statusBarOrientation]),\n  }]);\n}\nI've seen many examples inside the source code of other components where converting input args, but none for converting returned values, how can I call the converter? For example:\nConvert UIInterfaceOrientationPortrait --> \"portrait\"\nThanks. Thanks. I think RCTConvert is only helpful for setter methods. I could't use it to reverse convert without re-declaring a dictionary.. ",
    "orktes": "It's the latest revision I could find. Hopefully you are able to provide this information soon before people start submitting/designing apps that require the JS to be loaded from a remote server.\nEDIT: Seems that apple has revised their agreement to include JavascriptCore. So we should be fine.\n. @tobyhughes Yep but the api doesn't limit you to do so. The ability to update code (without the user updating the app and you going thought the release process) on the fly is something that is a powerful feature that people doing web are used to.\n. Imagine pushing a bug fix to your CDN and having a push server to notify the clients to download and reload. And compare that to a two week release process and then waiting for the users to update the app.\n. Seems that apple has revised their agreement to include JavascriptCore some time ago. So we should be fine.\n. @ssssssssssss you can see it in your apple developer portal. I don't currently have any knowledge about apps that are doing this.\n. ",
    "rebeccahughes": "I imagine that the JS will be bundled into the application when you submit it to the App Store, not running on a remote server.\n. Will do :) I'll update the PR tonight.\n. Cleaned up version in #1307 without the stray merge commit\n. I wasn't sure about this because there is no other way to get this information. If a new device pops up that it doesn't recognise it will fall back to the product family e.g. iPad.\n. ",
    "mikemintz": "@orktes That is awesome. Do you know of any examples or documentation relevant for updating JS code on the fly? I'm not familiar with how react native stores and loads JS assets.\n. ",
    "LinusU": "@drkibitz What kinds of problem? The only thing I can think of is that it requires iOS 8. Maybe we can choose UIWebView when on iOS 7 and lower, otherwise use WKWebKit.\n. @imWildCat You don't need to open another PQ to fix this, simple push the same branch and the new commits will show up here.\n. Space between change and (Make?\n. I think that the intention is to maintain backward compatibility. Some existing projects currently extends from ReactFragmentActivity.. ",
    "gabro": "WKWebView is known to be \"broken\" or at least unfinished. Here's a relevant thread about why (for instance) Google Chrome for iOS still uses UIWebView: https://code.google.com/p/chromium/issues/detail?id=423444\nA relevant fragment of the discussion:\n\nA partial list of regressions relative to UIWebView that we\u2019re currently aware of:\n- There is no cookie management API, which means there is no obvious way to clear/manage cookies\n- Protocol handlers no longer work, which breaks several very important features\n- POST bodies are missing from delegate callbacks, which breaks certain aspects of form handling\n. Thanks for the feedback.\nDo you guys think similar functionalities could be provided by working on the ListView API?\n\nMy point was also to raise a warning: the drill-down application where you add/delete/sort rows and see details of each one is for iOS development what a ToDo app is for JS, i.e. it's pretty much the first non-trivial app anyone approaching native development will try to build.\nRight now this is slightly cumbersome, hence my concern.\n@sahrens, any chance to take a look at the original UITableView wrapper? I might look into this as soon as I have time, and starting from some previous work would definitely help.\nThank you again guys for the great work!\n. > Definitely does not belong in the core, which is this repo\nThat's the point of discussion. I, together with many others here, think otherwise.\n. Some discussion going on in #342 \n. I believe the what @thewei is talking about is the hidesBottomBarWhenPushed property of of the native UIViewController.\nhttps://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/#//apple_ref/occ/instp/UIViewController/hidesBottomBarWhenPushed\n. I'm interested in this as well.\nEspecially when dealing with Images (that do not autosize) I would need to manually set a size according the computed \"box size\" of the container.\nThis is tightly related to https://github.com/facebook/react-native/issues/494\n. Thank you @brentvatne, that really helps!\nStill, I haven't figured out which is the proper way of hooking into the layout events.\nFor instance, if I need to dynamically position a View after another has rendered, when should I perform the measure?\nI tried in componentDidMount but it gives 0 for each measure...\n. Ok, I managed to achieve my goal by measuring the view asynchronously (with a setTimeout)\n```\n  componentDidMount() {\n    setTimeout(this.measureHeader);\n  },\nmeasureHeader() {\n    this.refs.header.measure((ox, oy, width, height) => {\n      this.setState({headerHeight: height});\n    });\n  },\n```\nthen I use this.state.headerHeight in my render method to computer another element's position.\nStill feels like a hack though...\n. Fair enough, thank you for the clarification @vjeux ;)\n. Actually, I noticed the locationX is correct given the target.\nIf inside handleGrant I log this.getNativeNode(), I get 2, while e.target is a number between 3 and 7 (i.e. the subviews)\n. @brentvatne are you sure? I just tested it on my star-rating project and I can reproduce the exact same behavior on version 0.5.0-rc1\nSee this branch of my project for an example: https://github.com/buildo/react-native-rating/pull/3\n. Sorry, ambiguous comment. What I meant is that the location is correct given the target, but the target is wrong, as it's one of the subviews instead of the view.\n. This is intended behavior when using ES6 classes. See https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html#autobinding\ntl; dr\nES6 Component class does not autobind this like React.createClass does.\n. ",
    "chandlervdw": "While still buggy, it looks like Telerik has implemented a WKWebView plugin for Cordova that gracefully degrades to UIWebView in <= iOS 7. I agree with @vjeux that we could go ahead and split the components, setting the stage for a working WKWebView.\n. This is already logged at https://github.com/facebook/react-native/issues/251\n. ",
    "koenbok": "Does anyone happen to know if the JIT is enabled in JSContext on desktop?\n. ",
    "oveddan": "I second @joewood concern about the WKWebView being buggy. You can't load html from a local resource, nor does it support the html5 app cache, so pages cannot work offline.  This is not an issue with standard WebView.\n. Agreed @brentvatne it would be nice as a separate component.  Also, FYI in IOS9 there will be a SFSafariViewController\n. @brentvatne I'll work on creating WKWebView component - I think it could be useful with something like what @joewood mentioned Telerik did, with some sort of min-http server, that serves a local file over an http server.  If the packager can serve html, then someone can build something similar for these static files. That mini-file-server would probably be a separate project.\n. @amasad  I'm still having this issue, when using react-native 0.4.4.  Here is a very simplified example which reproduces the error:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  NativeModules,\n  AppRegistry,\n  StyleSheet,\n  Text,\n  ListView,\n  View,\n} = React;\ndocument.createElement('div');\n```\nWhen I run this in the chrome, debugger, I get the error: document.createElement is not a function\nWhat am I doing wrong?\n. Thanks for the clarification @spicyj \nMy actual use case is to use jQuery to parse/scrape some downloaded html.  I'm not using it with the intention of creating any dom nodes or elements.\nWhen I require('jquery') without the chrome debugger it works fine, but when opening the chrome debugger, I get the error: \"document.createElement is undefined\"\nSimple example:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  NativeModules,\n  AppRegistry,\n  StyleSheet,\n  Text,\n  ListView,\n  View,\n} = React;\nvar jquery = require('jquery');\n```\nSomething in jQuery is doing some testing to make sure document.createElement works, and for some reason this breaks in chrome debugger but not without it.\n. @spicyj  I ended up getting jquery to work within react-native for scraping/parsing with a slight modification to it.  See the issue I created within jquery here.  let me know your thoughts!\n. @olivierlesnicki can you please provide a code sample?\n. @mikelehen can you link to the code that fixes this in the firebase library, just for reference for a fix for jquery?\n. @mikelehen  If you want to see the temporary solution I came up with for jquery - check this out: https://github.com/jquery/jquery/issues/2349\nThe issue exists because these libraries believe there is a fully functioning document available, since it's attached to window.document in the chrome or safari debugger. I'm working on a possible solution that will remove document from the global window.\nYou can see more on that here: #1473\n. @spicyj @ide I have doubts that attaching something to the navigator will work in the chrome debugger,  if we go ahead with the decision to run the chrome debugger in a worker (#1632 and #1473).  The code within the worker doesn't have access to window, but just to the worker's own scope, which has I believe a different navigator. See the web worker's context api.\n. I can't see how it would work without the HTML property being publicly exposed via the interface https://github.com/facebook/react-native/blob/6500ba7bfbdc2bd8e3301813b3cb606aeea35331/React/Views/RCTWebView.h#L14\n. Sure I can work on it.\n. @tadeuzagallo yeah in an ideal world we would be able to build this around WKWebView, but it's only supported in IOS8, and it's not really production ready - for example, loading html from the local file system doesn't work, nor does leveraging the html5 appcache to make a page loaded from a remote server available offline.  Those two things two work with a standard WebView.\nI'd want to follow a similar pattern to WebViewJavascriptBridge, which is built on top of a WebView, and as you suggested @brentvatne leverages stringByEvaluatingJavasScriptFromString here\nMy main concern is that this would add a lot of bloat to the RCTWebView - maybe this should be done as a separate github repo.  What do you think? \n. @brentvatne Thanks for noticing #1191 - I believe this issue will be resolved when that is merged. \n. @vjeux I have some time to work on this.  Want me to take a stab?\n. :+1: \n. @vjeux I believe I figured out why this was happening in my repo case - I need to specify the height of the wrapper element.  When I do, the views within that view do get stretched vertically to fit.  \nSee the react-playground here - where all I changed was setting the height of the row element.\nNot sure if this is really a bug then!\n. @brentvatne you're totally right - that is what's going on.\n. @vjeux sure I will look into this.\n. @vjeux @spicyj I dug around for a while - we don't set GLOBAL or window.document anywhere, even in InitializeJavaScriptAppEngine.js\nAll that we do with global.document is set createElement to null\nI tried running window.document = undefined; but it doesn't work. This is because window.document is a read method.\nIf you try in the chrome or safari console to run the code:\njavascript\nwindow.document = undefined;\nwindow.document;\nYou will see that window.document still returns the document.\nThe better solution would not to override document.createElement to be null.\n. @spicyj good point - for consistency it would be best for document not to exist.  @vjeux  If you're not working on it yet, I'll take a stab at making it run in the web worker and see what the debugging experience is like.\n. @vjeux @spicyj Take a look at the PR and let me know what you think.  Debugging doesn't seem to be adversely affected in chrome.\n. @spicyj On second look - the React tab is now gone from chrome when running the code in a worker, and using the debugger.  Any suggestion on how to get it back?\n. Couple more things:\n- This would need to somehow be done for safari debugging as well.\n- If we go ahead with this, should we remove the document polyfill that sets createElement to null, since there will no longer be a document?\n. Does this belong here? The goal is to just serve a static js file.\n. Does this belong here? The goal is to just serve a static js file.\n. ",
    "Rudimental": "Sure! Fixing git things, making a new pull request.\n. -fix a few typos\n-edit grammar on a few sentences, adjusting punctuation or rewriting part of sentence\n. No worries! I had some issues rebasing. I resubmitted these and another batch of changes in another pr, but the build is failing for it- even though I only altered the docs. Should I close this PR?\n. You're welcome! :)\n. Cool, thanks!\n. This PR fails the tests, but I'm not sure why- I only touched the docs.\n. ",
    "KJlmfe": "justifyContent: 'center', \nalignItems: 'center'\nIt's works!\n. thanks @zetachang \n. @vjeux In your way is ok, but I have to make every three children in one row. \nI want to put all 33% children in one parent View and it can auto flow layout, is there a way?\n. I change the this.state.currentCatindex in other place, but the below listView's renderRow not redraw.\n``` javascript\nrenderSider: function(item) {\n    var me = this;\n    var viewStyle = [styles.catItem];\n    var textStyle = [styles.catItemText];\nif(item._index == this.state.currentCatIndex) {\n  viewStyle.push(styles.currentCatItem);\n  textStyle.push(styles.currentCatItemText)\n}\nreturn (\n    <View style={viewStyle} onTouchStart={(event) => me.handleCatItemClick.call(me,item._index)} >\n      <Text style={textStyle}>\n        {item.title} \n      </Text>\n    </View>\n);\n\n},\n```\n. I contribute the code  and made a pull request https://github.com/facebook/react-native/pull/845#\nWait for FB merge.\n. @vjeux I changed the property name to follow the text-decoration-style, such as \"solid\", \"double\", \"dashed\", \"dotted\".\nAnd, text-decoration-style is only support on firefox. So the jsfiddle web demo is not really needed.\n. @vjeux  I rewrite the code and change the pull request title and content. Now it follows the CSS naming convention and using method is same with CSS.\nAnd here is working on web demo: https://jsfiddle.net/kjlmfe/a1zvL6s8/1/ (Only for firefox)\n. @sahrens I had merge branch 'facebook/react-native/master' into my master and resolve the conflicts.\n. ",
    "alisnic": "@tehfailsafe nope, but shake gesture as a workaround is pretty nice, since its shortcut (cmd-ctrl-z) works on any layout\n. Same here, saw the debugger on the main site screenshots, but was unable to find how to setup it.\n. ",
    "toxicFork": "I guess I should have done a PR from a branch, now I can't push anything to my master until it's merged :smile: \n. ",
    "danharper": "Didn't know about that menu - thanks.\nCmd + D will open debugger too.\n. ",
    "xiongjiabin": "please check http://stackoverflow.com/questions/29314839/cant-launch-chrome-devtools-in-ios-simulator,\nfix my debug problem.\n. ",
    "galoppa": "+1 Why have all the examples been changed from BSD to a non-free license (just 19 hours ago)?\n. ",
    "zackp30": ":+1: Please consider open-sourcing the examples.\n. ",
    "yosit": "I think collection views addition would be awesome and it is easily deprecating table views on ios.\n\u2014\nSent from Mailbox\nOn Fri, Mar 27, 2015 at 7:20 PM, Gabriele Petronella\nnotifications@github.com wrote:\n\nThanks for the feedback.\nDo you guys think similar functionalities could be provided by working on the ListView API?\nMy point was also to raise a warning: the drill-down application where you add/delete/sort rows and see details of each one is for iOS development what a ToDo app is for JS, i.e. it's pretty much the first non-trivial app anyone approaching native development will try to build.\nRight now this is slightly cumbersome, hence my concern.\n@sahrens, any chance to take a look at the original UITableView wrapper? I might look into this as soon as I have time, and starting from some previous work would definitely help.\nThank you again guys for the great work!\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/332#issuecomment-86993471\n. \n",
    "salutis": "@yosit As for now, table views are way more powerful for one-dimensional lists than collection views. Editing, reordering, etc. There's no comparison.\n. ",
    "umhan35": "What I thought was actually the native table cell view. Reimplementing the table view seems not necessary.\n. Is this a bug or not?\n. Is this a bug or not?\n. Oh, I see. I understand that better now. Thanks\n. \ud83d\ude00 I was trying to find that file but couldn't, so I directly created this issue. I'll definitely take a look. It'd be an easy fix after all.\n. Some native components are using ComponentHeight provided from Obj-C code.\nBefore anyone comes here, you can search ComponentHeight in this repo. The height for DatePicker and SegmentedControl is explicitly set just like what you did.\n. It will be something looks like this:\nIn your Obj-C code:\nobjc\n- (NSDictionary *)constantsToExport\n{\n  RCTSearchBar *view = [[RCTSearchBar alloc] init];\n  return @{\n           @\"ComponentHeight\": @(view.intrinsicContentSize.height),\n           };\n}\nJS:\n``` javascript\nNativeModules = require('NativeModules');\n...\nstyle={{height: NativeModules.SearchBarManager.ComponentHeight}}\n...\n```\n. Try my one. Mine works before I post it. Try to use the dirty inline style.\n. It's not a bug. I've been using the solution I provided in my project.\nHere are the obj-c and JS files. Check out the last method in RCTSearchBarManager.m. I thought I will open source this, but there are a lot of features provided by a search bar and I only use part of them.\nRCTSearchBar.h\n``` ObjectiveC\nimport \n@class RCTEventDispatcher;\n@interface RCTSearchBar : UISearchBar\n\n(instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher NS_DESIGNATED_INITIALIZER;\n\n@end\n```\nRCTSearchBar.m\n``` ObjectiveC\nimport \"RCTSearchBar.h\"\nimport \"UIView+React.h\"\nimport \"RCTEventDispatcher.h\"\n@interface RCTSearchBar() \n@end\n@implementation RCTSearchBar\n{\n  RCTEventDispatcher *_eventDispatcher;\n}\n\n\n(instancetype)initWithEventDispatcher:(RCTEventDispatcher *)eventDispatcher\n{\n  if ((self = [super initWithFrame:CGRectMake(0, 0, 1000, 44)])) {\n    _eventDispatcher = eventDispatcher;\n    self.delegate = self;\n  }\n  return self;\n}\n\n\n(void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar\n{\n  [self setShowsCancelButton:YES animated:YES];\n\n\n[_eventDispatcher sendTextEventWithType:RCTTextEventTypeFocus\n                                 reactTag:self.reactTag\n                                     text:searchBar.text];\n}\n\n\n(void)searchBar:(UISearchBar )searchBar textDidChange:(NSString )searchText\n{\n  [_eventDispatcher sendTextEventWithType:RCTTextEventTypeChange\n                                 reactTag:self.reactTag\n                                     text:searchText];\n}\n\n\n(void)searchBarSearchButtonClicked:(UISearchBar )searchBar\n{\n  NSDictionary event = @{\n                          @\"target\": self.reactTag,\n                          @\"button\": @\"search\",\n                          @\"searchText\": searchBar.text\n                          };\n\n\n[_eventDispatcher sendInputEventWithName:@\"topTap\" body:event];\n}\n\n(void)searchBarCancelButtonClicked:(UISearchBar *)searchBar\n{\n  self.text = @\"\";\n  [self resignFirstResponder];\n  [self setShowsCancelButton:NO animated:YES];\n\nNSDictionary *event = @{\n                          @\"target\": self.reactTag,\n                          @\"button\": @\"cancel\"\n                          };\n[_eventDispatcher sendInputEventWithName:@\"topTap\" body:event];\n}\n@end\n```\nRCTSearchBarManager.h\n``` ObjectiveC\nimport \"RCTViewManager.h\"\n@interface RCTSearchBarManager : RCTViewManager\n@end\n```\nRCTSearchBarManager.m\n``` ObjectiveC\nimport \"RCTSearchBarManager.h\"\nimport \"RCTSearchBar.h\"\nimport \"RCTBridge.h\"\n@implementation RCTSearchBarManager\nRCT_EXPORT_MODULE()\n\n(UIView )view\n{\n//  RCTSearchBar searchBar = [[RCTSearchBar alloc] initWithFrame:CGRectMake(0, 0, 1000, 44)];\n\nRCTSearchBar searchBar = [[RCTSearchBar alloc] initWithEventDispatcher:self.bridge.eventDispatcher];\n//  RCTSearchBar searchBar = [[RCTSearchBar alloc] init];\n//[[  UISearchDisplayController alloc] initWithSearchBar:searchBar contentsController:(UIViewController *)]\nreturn searchBar;\n}\nRCT_EXPORT_VIEW_PROPERTY(placeholder, NSString)\nRCT_EXPORT_VIEW_PROPERTY(showsCancelButton, BOOL)\n\n(NSDictionary *)constantsToExport\n{\n  return @{\n           @\"ComponentHeight\": @([self view].intrinsicContentSize.height),\n           };\n}\n\n@end\n```\nsearch_bar.js\n``` JS\nvar NativeModules, PropTypes, RCTSearchBar, React, SearchBar;\nReact = require('react-native');\nRCTSearchBar = React.requireNativeComponent('RCTSearchBar', null);\nPropTypes = require('ReactPropTypes');\nNativeModules = require('NativeModules');\nSearchBar = React.createClass({\n  propTypes: {\n    placeholder: PropTypes.string,\n    showsCancelButton: PropTypes.bool,\n    onChange: PropTypes.func,\n    onChangeText: PropTypes.func,\n    onFocus: PropTypes.func,\n    onSearchButtonPress: PropTypes.func,\n    onCancelButtonPress: PropTypes.func\n  },\n  _onChange: function(e) {\n    var base, base1;\n    if (typeof (base = this.props).onChange === \"function\") {\n      base.onChange(e);\n    }\n    return typeof (base1 = this.props).onChangeText === \"function\" ? base1.onChangeText(e.nativeEvent.text) : void 0;\n  },\n  _onPress: function(e) {\n    var base, base1, button;\n    button = e.nativeEvent.button;\n    if (button === 'search') {\n      return typeof (base = this.props).onSearchButtonPress === \"function\" ? base.onSearchButtonPress(e.nativeEvent.searchText) : void 0;\n    } else if (button === 'cancel') {\n      return typeof (base1 = this.props).onCancelButtonPress === \"function\" ? base1.onCancelButtonPress() : void 0;\n    }\n  },\n  render: function() {\n    return ;\n  }\n});\nmodule.exports = SearchBar;\n//# sourceMappingURL=search_bar.js.map\n```\n. @bolasblack I just open sourced react-native-search-bar on npm. Check it out on GitHub.\n. Sorry, I just added something in the comment. Why do we need to clean up trailing spaces and any other lint in this context?\n. OK. I just noticed that there are trailing spaces. I didn't mean it and it's hard to find. Sorry.\n. Oh, I edited the file using GitHub's edit button because I think the change is minor... (My IDE, WebStorm, for my react native project has the automatic trailing space removal feature.)\nI'm new to node.js and lint is also new to me. I just figured out myself: the ESLint project (http://eslint.org/). But how do you run it? I tried several commands and they don't work.\n. Thank you @sahrens! Just saw the update of CONTRIBUTING.md\n. It's not actually my server. I'm showing a satellite image from other source: weather.gc.ca/data/satellite/goes_nam_1070x_100.jpg\nI can proxy the url but it doesn't make sense that cache never expires and there is no way to clear the cache from js code.\n. Thanks @JohnyDays. That should work. But now when the image is downloaded and I want to refresh the file, the obj-c code doesn't update the image... \ud83d\ude13\n. @ide thank you! There is key to rescue. It works.\nSo, in addition to the bug that the title says, <Image> doesn't refresh itself after loaded.\n. @brentvatne when Image is rendered, assign its uri to another image url doesn't make it show the new image.\n. Or try set height to 0\n. @alinz Without JSX, it can be declarative too in CoffeeScript. It's just an alternative. Thanks for the points in second paragraph.\n. cc @vjeux because of this post: http://blog.vjeux.com/2013/javascript/react-coffeescript.html\n. Because I don't need to create short-hand factory functions for each component when I want to use them declaratively without JSX.\nThe name of DOM is questionable.\n. @vjeux As you said, it's not pretty... As you have more components, the clutter c adds up.\n@ide The built-in components are used far more often than third-party components. So, it's very convenient to have React.DOM. Third-party components should usually be used in one place (if a third party component is used everywhere, probably we should incorporate in core), so using React.createFactory is ok.\n. @ide Sorry, I don't quite understand. Why would adding React.DOM makes it \"confusing if core components behave differently even though they otherwise look the same as third-party components\". If a third-party component has the same look as a built-in view, their different names can help differentiate them. I also didn't catch this: \"the majority of the other components in this repo aren't very different from third-party components\" and the last sentence...\nI don't see much problem with the namespace thing: React.DOM. It's simply that we enjoy the elegance and readability given by JSX without using JSX that natively uses JS. It's more of an alternative to JSX. \ud83d\ude09\n. > Take a handful of components: View, Image, Camera, ListView. It's not intuitive to identify which ones let you write Component({style: ...}, child1, child2).\nUm... Mixing JSX and non-JSX is a bad practice. When requireing them (either from React or React.dom), we already know how to use them (either <Component> or Component style: ...).\n\nMy point is that I wouldn't be able to tell you that ListView or Navigator are first-party components while Camera or Video are third-party components without background knowledge. There's nothing intrinsic to these components that warrants a different syntax for constructing them.\n\nAgain, mixing JSX and non-JSX is a bad practice. If someone sticks to JSX, all components should be imported from React rather than React.DOM. If someone sticks to non-JSX and want to import third-party components, always call React.createFactory. And if multiple React.createFactorys are called for a component, you can opt to put it somewhere or wrap it (with adaptor pattern?) to promote DRY principle.\nAs the title of this issue says, it's about using react native without JSX. And also having React.DOM is being consistent with React.js which has the non-JSX support since first release. Using react native without JSX is a big alternative and there should be an option for this. In React.js's doc (http://facebook.github.io/react/docs/displaying-data.html#react-without-jsx), this has been repeatedly emphasized.\nFor the use cases, providing React.DOM is more like providing tooling support. Not providing React.DOM discourage people from using RN without JSX and this partly leads to the rare cases. If there is no IDE for Java, I think some people will be reluctant to write Java anymore.\n. ",
    "kevindeleon": "@brentvatne Should this have been closed?  I still think that UITableView is an important feature of iOS that users are accustomed to (swiping to delete, re-ordering, etc), and at the moment ListView just isn't the same thing. This would definitely be a nice feature to have.\n. @brentvatne thanks.\n@sahrens For me, the need is less about performance issues in ListView and more about being able to provide features that are available in UITableView that aren't readily available in ListView (like swipe to delete, reordering, etc...). ListView is nice, but it's just not the same thing, and it would be nice to have the ability to use either.\n. Yeah, I agree that it needs to be in core as well. I think they probably realize that...but I imagine it's a hard issue to tackle...otherwise, I would think it would have been one of the first UI elements to be bridged over considering the prevalence of UITableView in iOS apps.\n@gavinkwoe I'm not sure this is the place to promote another project...all that does is clutter the issue here.\n. @ide Yes, I did try that, but it then bombs on the count() call because fileName is nil -- due to it being passed as null initially from index.ios.js.\nI suppose I could write a more complex if statement checking for nil before checking for count(), but in reality...the Swift function expects a String, and it should get a String (because that param is really not optional...it has to have a fileName to work)...but there are a lot of people who are accustomed to initiating a JS var as null and then going onto making it a string (for better or worse) as Jay did in his example. Obviously we should pass what the method expects (which is how I fixed it).\nWhat's confusing is why @jaygarcia's example using Objective C seems not to balk at all. Maybe it's how the RCTBridge passes the value, or perhaps it's just how Objective C handles the nil value when checking length? Again, I'm def not a Swift/Object C ninja.\n. Thanks @ide \nIs that the more appropriate way of doing it, rather than setting the state of textInputValue to an empty string initially in the JS? I guess using String? and checking for nil in the Swift method makes things a bit more bulletproof on the back-end?\n. Sounds good @ide, and thanks for the explanation.  Going to close this as it seems to be a syntax/convention issue and not so much a problem in React or Swift.\n. @olivierlesnicki No, it was a native module using Swift. I basically ported over a module Jay Garcia had created as a proof of concept in Objective C...I just wanted to see how difficult it would be in Swift.  You can read more about the process or view the code on github.\nAnd if it's a common practice that most Swift developers would just know, then maybe it doesn't need a line in the documentation. I'd like a few more opinions before I close it. As a web guy coming over to the Swift/ObjC world...it was a bit confusing, and I assume most folks using RN will have the same background as I do (web guys coming over to the \"native\" world).\n. @olivierlesnicki I went ahead and created a pull request with some proposed documentation changes.  I'll let the team decide if it's worthwhile.\n. ",
    "gavinkwoe": "look at this guys, another react-native like hybrid UI solution for iOS, written in Objective-C/C.\nhttps://github.com/hackers-painters/samurai-native\nhere is an UICollectionView example (also support UITableView and all the other UIKit native components), it's amazing and really can works on your phone and iOS-simulator:\n``` html\n<!DOCTYPE html>\n\n<head>\n\n    <title>Shot</title>\n\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n\n    <meta name=\"description\" content=\"\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n\n    <meta name=\"navbar-bg-color\" content=\"#e5508c\"/>\n    <meta name=\"navbar-tint-color\" content=\"white\"/>\n    <meta name=\"navbar-text-color\" content=\"white\"/>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/reset.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/main.css\"/>\n\n</head>\n\n<body>\n\n    <RefreshCollectionView id=\"list\" name=\"shot\" class=\"list\" columns=\"1\" is-vertical>\n\n        <UICollectionViewCell name=\"author\" is-static is-row>\n            <div class=\"author-wrapper\" onclick=\"@selector(viewProfile:)\">\n                <img class=\"author-avatar\" name=\"avatar\"/>\n                <div class=\"author-attribution\">\n                    <div class=\"author-title\" name=\"title\">Portfolio concept</div>\n                    <div class=\"author-subtitle\">by <span class=\"author-name\" name=\"name\">Vadim Sherbakov</span></div>\n                </div>\n            </div>\n        </UICollectionViewCell>\n\n        <UICollectionViewCell name=\"shot\" is-static is-row>\n            <div class=\"shot-wrapper\">\n                <img name=\"img\" class=\"shot-img\" src=\"http://img.hb.aicdn.com/90b96d207b752453ca2cef1d29af382637342086f507-9rHNhW_fw658\"\n                 onclick=\"@selector(viewPhoto:)\" />\n            </div>\n        </UICollectionViewCell>\n\n        <UICollectionViewCell name=\"attr\" is-static is-row stick-top>\n            <div class=\"shot-attribution-wrapper\">\n                <div class=\"shot-attribution\">\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"views\">6770</span>\n                            <span class=\"shot-segment-suffix\">Views</span>\n                        </div>\n                    </div>\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"comments\">19</span>\n                            <span class=\"shot-segment-suffix\">Comments</span>\n                        </div>\n                    </div>\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"likes\">591</span>\n                            <span class=\"shot-segment-suffix\">Likes</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </UICollectionViewCell>\n\n        <!--\n        <UICollectionViewCell is-row stick-top>\n            <div class=\"comment-header\">\n                <img class=\"comment-icon\" src=\"icon-views.png\"/>\n                <span class=\"comment-text\">COMMENTS</span>\n            </div>\n        </UICollectionViewCell>\n         -->\n\n        <UICollectionViewCell name=\"comments\" class=\"comment-cell\" is-row onclick=\"@selector(viewComments:)\">\n            <img class=\"comment-avatar-img\" name=\"avatar\"/>\n            <div class=\"comment-attribution\">\n                <p class=\"comment-name\" name=\"name\">Eddy Gann</p>\n                <p class=\"comment-body\" name=\"text\">Just a suggestion for a feature that means a lot to me: In-app web browser (so we can add the shot to buckets and like it.) Just adding a button to show it as it would appear in a mobile browser so we have access to the like button.</p>\n            </div>\n        </UICollectionViewCell>\n\n    </RefreshCollectionView>\n\n    <style>\n\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            background-color: #e5508c;\n        }\n\n        .list {\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n\n        .author-wrapper {\n            display: block;\n            width: 100%;\n            height: 54px;\n        }\n\n        .author-avatar {\n            display: block;\n            margin-top: 8px;\n            margin-left: 12px;\n            float: left;\n            width: 32px;\n            height: 32px;\n            border-radius: 18px;\n            border-width: 2px;\n            border-color: white;\n            background-color: #999;\n        }\n\n        .author-attribution {\n            display: block;\n            margin-top: 10px;\n            margin-left: 12px;\n            float: left;\n            width: auto;\n            height: 32px;\n        }\n\n        .author-title {\n            display: block;\n            width: auto;\n            height: 50%;\n            line-height: 16px;\n            color: #fff;\n            text-align: left;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .author-subtitle {\n            display: block;\n            width: auto;\n            height: 50%;\n            line-height: 22px;\n            color: rgba( 255, 255, 255, 0.5 );\n            text-align: left;\n            font-size: 12px;\n            font-weight: lighter;\n        }\n\n        .author-name {\n            margin-left: 4px;\n            height: 100%;\n            line-height: 22px;\n            color: #fff;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .shot-wrapper {\n            display: block;\n            width: 100%;\n            height: auto;\n            margin-bottom: 2px;\n        }\n\n        .shot-img {\n            display: block;\n            margin: 0 auto;\n            width: 98%;\n            height: equals(width);\n            background-color: #eee;\n            border-radius: 2px;\n            border-width: 2px;\n            border-color: white;\n            content-mode: fill;\n        }\n\n        .shot-attribution-wrapper {\n            display: block;\n            width: 100%;\n            height: auto;\n            margin-bottom: 5px;\n        }\n\n        .shot-attribution {\n            display: block;\n            width: 100%;\n            height: 34px;\n            background-color: #e34383;\n        }\n\n        .shot-segment {\n            display: inline-block;\n            float: left;\n            width: 33.3%;\n            height: 100%;\n        }\n\n        .shot-segment-wrapper {\n            display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 100px;\n            height: 100%;\n        }\n\n        .shot-segment-icon {\n            display: inline-block;\n            margin-top: 6px;\n            width: 18px;\n            height: 18px;\n            content-mode: center;\n        }\n\n        .shot-segment-count {\n            display: inline-block;\n            margin-left: 4px;\n            width: auto;\n            height: 100%;\n            line-height: 34px;\n            color: #fff;\n            text-align: center;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .shot-segment-suffix {\n            display: inline-block;\n            margin-left: 4px;\n            width: auto;\n            height: 100%;\n            line-height: 34px;\n            color: rgba( 255, 255, 255, 0.6 );\n            text-align: center;\n            font-size: 12px;\n            font-weight: lighter;\n        }\n\n        .comment-header {\n            display: block;\n            width: 100%;\n            height: 30px;\n            background-color: #fff;\n            /*box-shadow: 0px 1px 2px #eee;*/\n        }\n\n        .comment-icon {\n            display: inline-block;\n            margin-top: 6px;\n            margin-left: 15px;\n            width: 18px;\n            height: 18px;\n            content-mode: center;\n        }\n\n        .comment-text {\n            display: inline-block;\n            margin-top: 6px;\n            margin-left: 6px;\n            width: auto;\n            height: 18px;\n            line-height: 18px;\n            color: #666;\n            text-align: center;\n            font-size: 10px;\n            font-weight: bold;\n        }\n\n        .comment-cell {\n            display: block;\n            width: 100%;\n            height: auto;\n        }\n\n        .comment-avatar-img {\n            display: block;\n            float: left;\n            margin-top: 4px;\n            margin-left: 12px;\n            width: 30%;\n            max-width: 32px;\n            height: 32px;\n            border-radius: 18px;\n            border-width: 2px;\n            border-color: #f0f0f0;\n            background-color: #999;\n        }\n\n        .comment-attribution {\n            display: block;\n            margin-left: 12px;\n            margin-top: 4px;\n            margin-bottom: 10px;\n            width: 60%;\n            height: auto;\n        }\n\n        .comment-name {\n            width: 100%;\n            height: auto;\n            font-weight: lighter;\n            font-size: 14px;\n            color: rgba( 255, 255, 255, 0.5 );\n        }\n\n        .comment-body {\n            width: 100%;\n            height: auto;\n            font-size: 12px;\n            color: #fff;\n        }\n\n    </style>\n\n</body>\n\n\n```\n. look at this guys, another react-native like hybrid UI solution for iOS, written in Objective-C/C.\nhttps://github.com/hackers-painters/samurai-native\nhere is an UICollectionView example (also support UITableView and all the other UIKit native components), it's amazing and really can works on your phone and iOS-simulator:\n``` html\n<!DOCTYPE html>\n\n<head>\n\n    <title>Shot</title>\n\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n\n    <meta name=\"description\" content=\"\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n\n    <meta name=\"navbar-bg-color\" content=\"#e5508c\"/>\n    <meta name=\"navbar-tint-color\" content=\"white\"/>\n    <meta name=\"navbar-text-color\" content=\"white\"/>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/reset.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/main.css\"/>\n\n</head>\n\n<body>\n\n    <RefreshCollectionView id=\"list\" name=\"shot\" class=\"list\" columns=\"1\" is-vertical>\n\n        <UICollectionViewCell name=\"author\" is-static is-row>\n            <div class=\"author-wrapper\" onclick=\"@selector(viewProfile:)\">\n                <img class=\"author-avatar\" name=\"avatar\"/>\n                <div class=\"author-attribution\">\n                    <div class=\"author-title\" name=\"title\">Portfolio concept</div>\n                    <div class=\"author-subtitle\">by <span class=\"author-name\" name=\"name\">Vadim Sherbakov</span></div>\n                </div>\n            </div>\n        </UICollectionViewCell>\n\n        <UICollectionViewCell name=\"shot\" is-static is-row>\n            <div class=\"shot-wrapper\">\n                <img name=\"img\" class=\"shot-img\" src=\"http://img.hb.aicdn.com/90b96d207b752453ca2cef1d29af382637342086f507-9rHNhW_fw658\"\n                 onclick=\"@selector(viewPhoto:)\" />\n            </div>\n        </UICollectionViewCell>\n\n        <UICollectionViewCell name=\"attr\" is-static is-row stick-top>\n            <div class=\"shot-attribution-wrapper\">\n                <div class=\"shot-attribution\">\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"views\">6770</span>\n                            <span class=\"shot-segment-suffix\">Views</span>\n                        </div>\n                    </div>\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"comments\">19</span>\n                            <span class=\"shot-segment-suffix\">Comments</span>\n                        </div>\n                    </div>\n                    <div class=\"shot-segment\">\n                        <div class=\"shot-segment-wrapper\">\n                            <!-- <img class=\"shot-segment-icon\" src=\"icon-views.png\"/> -->\n                            <span class=\"shot-segment-count\" name=\"likes\">591</span>\n                            <span class=\"shot-segment-suffix\">Likes</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </UICollectionViewCell>\n\n        <!--\n        <UICollectionViewCell is-row stick-top>\n            <div class=\"comment-header\">\n                <img class=\"comment-icon\" src=\"icon-views.png\"/>\n                <span class=\"comment-text\">COMMENTS</span>\n            </div>\n        </UICollectionViewCell>\n         -->\n\n        <UICollectionViewCell name=\"comments\" class=\"comment-cell\" is-row onclick=\"@selector(viewComments:)\">\n            <img class=\"comment-avatar-img\" name=\"avatar\"/>\n            <div class=\"comment-attribution\">\n                <p class=\"comment-name\" name=\"name\">Eddy Gann</p>\n                <p class=\"comment-body\" name=\"text\">Just a suggestion for a feature that means a lot to me: In-app web browser (so we can add the shot to buckets and like it.) Just adding a button to show it as it would appear in a mobile browser so we have access to the like button.</p>\n            </div>\n        </UICollectionViewCell>\n\n    </RefreshCollectionView>\n\n    <style>\n\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            background-color: #e5508c;\n        }\n\n        .list {\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n\n        .author-wrapper {\n            display: block;\n            width: 100%;\n            height: 54px;\n        }\n\n        .author-avatar {\n            display: block;\n            margin-top: 8px;\n            margin-left: 12px;\n            float: left;\n            width: 32px;\n            height: 32px;\n            border-radius: 18px;\n            border-width: 2px;\n            border-color: white;\n            background-color: #999;\n        }\n\n        .author-attribution {\n            display: block;\n            margin-top: 10px;\n            margin-left: 12px;\n            float: left;\n            width: auto;\n            height: 32px;\n        }\n\n        .author-title {\n            display: block;\n            width: auto;\n            height: 50%;\n            line-height: 16px;\n            color: #fff;\n            text-align: left;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .author-subtitle {\n            display: block;\n            width: auto;\n            height: 50%;\n            line-height: 22px;\n            color: rgba( 255, 255, 255, 0.5 );\n            text-align: left;\n            font-size: 12px;\n            font-weight: lighter;\n        }\n\n        .author-name {\n            margin-left: 4px;\n            height: 100%;\n            line-height: 22px;\n            color: #fff;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .shot-wrapper {\n            display: block;\n            width: 100%;\n            height: auto;\n            margin-bottom: 2px;\n        }\n\n        .shot-img {\n            display: block;\n            margin: 0 auto;\n            width: 98%;\n            height: equals(width);\n            background-color: #eee;\n            border-radius: 2px;\n            border-width: 2px;\n            border-color: white;\n            content-mode: fill;\n        }\n\n        .shot-attribution-wrapper {\n            display: block;\n            width: 100%;\n            height: auto;\n            margin-bottom: 5px;\n        }\n\n        .shot-attribution {\n            display: block;\n            width: 100%;\n            height: 34px;\n            background-color: #e34383;\n        }\n\n        .shot-segment {\n            display: inline-block;\n            float: left;\n            width: 33.3%;\n            height: 100%;\n        }\n\n        .shot-segment-wrapper {\n            display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 100px;\n            height: 100%;\n        }\n\n        .shot-segment-icon {\n            display: inline-block;\n            margin-top: 6px;\n            width: 18px;\n            height: 18px;\n            content-mode: center;\n        }\n\n        .shot-segment-count {\n            display: inline-block;\n            margin-left: 4px;\n            width: auto;\n            height: 100%;\n            line-height: 34px;\n            color: #fff;\n            text-align: center;\n            font-size: 14px;\n            font-weight: lighter;\n        }\n\n        .shot-segment-suffix {\n            display: inline-block;\n            margin-left: 4px;\n            width: auto;\n            height: 100%;\n            line-height: 34px;\n            color: rgba( 255, 255, 255, 0.6 );\n            text-align: center;\n            font-size: 12px;\n            font-weight: lighter;\n        }\n\n        .comment-header {\n            display: block;\n            width: 100%;\n            height: 30px;\n            background-color: #fff;\n            /*box-shadow: 0px 1px 2px #eee;*/\n        }\n\n        .comment-icon {\n            display: inline-block;\n            margin-top: 6px;\n            margin-left: 15px;\n            width: 18px;\n            height: 18px;\n            content-mode: center;\n        }\n\n        .comment-text {\n            display: inline-block;\n            margin-top: 6px;\n            margin-left: 6px;\n            width: auto;\n            height: 18px;\n            line-height: 18px;\n            color: #666;\n            text-align: center;\n            font-size: 10px;\n            font-weight: bold;\n        }\n\n        .comment-cell {\n            display: block;\n            width: 100%;\n            height: auto;\n        }\n\n        .comment-avatar-img {\n            display: block;\n            float: left;\n            margin-top: 4px;\n            margin-left: 12px;\n            width: 30%;\n            max-width: 32px;\n            height: 32px;\n            border-radius: 18px;\n            border-width: 2px;\n            border-color: #f0f0f0;\n            background-color: #999;\n        }\n\n        .comment-attribution {\n            display: block;\n            margin-left: 12px;\n            margin-top: 4px;\n            margin-bottom: 10px;\n            width: 60%;\n            height: auto;\n        }\n\n        .comment-name {\n            width: 100%;\n            height: auto;\n            font-weight: lighter;\n            font-size: 14px;\n            color: rgba( 255, 255, 255, 0.5 );\n        }\n\n        .comment-body {\n            width: 100%;\n            height: auto;\n            font-size: 12px;\n            color: #fff;\n        }\n\n    </style>\n\n</body>\n\n\n```\n. ",
    "mattapperson": "Coming from the world of Titanium development, I can say that yes this is very much needed, but even without the async/sync issues, getting a solid uitableview implementation took appcelerator years of tweaking and refactoring to get right. UITableView is just a nasty API to wrap\n. Env vars are nice because they can be controlled from the cli, that's my real goal here\n. While I don't think that's bad, I would ideally like to override almost any config item via the cli\n. @brentvatne si, I actually know Christian the maker of that tool, and plan to contribute... But having it in core would be nice \ud83d\ude0a \n. @ide I agree mostly. I think the issue comes into play more when you become cross platform. Having a CLI tool to interface with for your pipeline gives one interface point vs iOS, Android and whatever else... \n. @2upmedia yes. As stated in the comments I am waiting on a final API decision to update the PR\n. ",
    "marciok": "You can extend PNChart for example, did you check https://github.com/facebook/react-native#extensibility ? \n. ",
    "aackerman": "I can give more detailed info about the issue with bluebird later tonight, but in the mean time, having installed bluebird with npm install bluebird and var Promise = require('bluebird'); in index.ios.js will throw and error.\n. It looks like a clear issue with bluebird from what I can tell. \n\n\nThe block in bluebird looks like this.\n} else if (typeof MutationObserver !== \"undefined\") {\n    schedule = function(fn) {\n        var div = document.createElement(\"div\");\n        var observer = new MutationObserver(fn);\n        observer.observe(div, {attributes: true});\n        return function() { div.classList.toggle(\"foo\"); };\n    };\n    schedule.isStatic = true;\n} else if (typeof setTimeout !== \"undefined\") {\nIt's clearly throwing an error because the DOM is not available, but it's interesting that MutationObserver is available, otherwise it could not have made it into the block. The authors of bluebird probably didn't expect to be running in an environment that is neither node nor the browser.\n@vjeux as you said a Promise implementation does exist already, and what I really wanted just simply fetch, so the bluebird issue is completely secondary to understanding the host environment.\nI'll make a ticket on the bluebird repo to let them know about this particular issue, but at this point I don't think it needs to be a priority for anybody.\n. The warnings about uncaught promise rejections are the number 1 reason to use bluebird over the specced ES6 promises. Trying to find silently swallowed errors is developer hell.\n. If I was intent on finding out more about the JS host environment is here the best place to look?\n. Awesome thanks, I'll do some reading and see if I can distill some of the information.\n. It appears to be an issue with the debug module dependency of superagent. The module has incorrectly determined that it is running in a node environment and is throwing an error.\nBut you're right, I'm seeing the same error.\n. For this specific case you'll likely want to use the fetch API which is provided by the environment. React Native does not run inside of the node runtime.\n. ",
    "petkaantonov": "MutationObserver is supposed to observe DOM elements, it doesn't make sense to expose one without the other. Also, there is not a single mention of MutationObserver in this entire repo so I am not sure how I would even fix it - what am I supposed to observe with it?\n. I can add setImmediate check after the MutationObserver check, np :)\n. setImmediate check published in 2.9.16\n. yea the upside of lone cowboy projects :p\n. Well I don't personally find the pure ES6 api enough for application development, I find stuff like .finally, predicated catches, long stack traces, unhandled rejection reporting  etc essential. Also in 3.0 bluebird debuggability is going to be turbo boosted by warnings that non-seasoned promise users commonly make, e.g. https://twitter.com/PetkaAntonov/status/565899315613540352\n. btw I checked the finally implementation - just a note that .finally in bluebird doesn't behave like .then(cb, cb); instead it behaves like this\n. I'm not sure I see the point of such a build - there is literally thousands of es6-promise shims available already\n. Those are not compliant with es6- spec\n. The benchmark isn't really relevant as it runs with N=10000 and (I assume) packager is always N=1 - if you run the benchmark with N=1 you will hopefully not see any difference between implementations as anything is fast for a small N.\n. That's surprising that so many promises are being created that there is actually a difference. It would be interesting to know how many. The bluebird sequential benchmark creates 80000 promises with N=10000 and 8 promises with N=1, hence why you wouldn't see any difference with N=1.\n. @pilwon In bluebird I have just ad hoc edited the promise constructor code by doing Promise.promisesCreated++ (Initialize it to 0 somewhere first) inside the constructor and then reading it out at the end of the benchmark.\nAlso results for 3.0 would be interesting too as it provides some significant performance improvements to Promise.all and promisify\n. @pilwon Yes it is\n. Ok, that's shocking and my earlier point doesn't make sense any more.. I was expecting more like 10-100 promises being created\n. ",
    "jparishy": ":+1: \n. I don't see any exported property for rotation in the code, but there's one for transformMatrix though that isn't quite as friendly.\nIf you add the following to RCTViewManager.m it will work as expected:\n```\nRCT_CUSTOM_VIEW_PROPERTY(rotation, CGFloat, RCTView)\n{\n    CGFloat angle = [RCTConvert CGFloat:json];\n    CGAffineTransform transform = CGAffineTransformRotate(view.transform, angle);\nview.transform = transform;\n\n}\n```\nI'll add a PR for this\n. See #421 \n. Fair enough, thanks for letting me know!\n. Fixed \u2014 FB's style is much different from my own, takes some getting used to\n. Personally I think it would be nice to take radians by default and provide degrees() and radians() functions in JavaScript to do the appropriate conversions \n. @fisherwebdev it might not be needed, I suppose. My understanding was that it would reset the transform in the case where rotation: null is found in the JSON, which I picked up from the convention of the other custom view properties. I could be wrong though, in which case I can remove it. \n. ",
    "dalinaum": "@jaygarcia Right. That is Appcode, a JetBrains IDE.\n. @frantic Should this issue be closed?\n. It was fixed.\nhttps://github.com/facebook/react-native/commit/31c4ff0dd62ee705353c2b4de916a151f89410d4\n. :+1:\n. Oops. I had a mistake. Please remove my reference.\n. Oh. I had a mistake. I thought jest is needed. I have to remove jest on package.json. Thanks @ide \n. I know how can I get Helvetica from system (systemFontOfSize). But I don't know how can I get Helvetica Neue font from system. Please show me how.\n. :+1: I just pushed the new commit that supports a virtual fontName System. #1635 \n. I have to modify [RCTConvert_UIFontTests testSize] and [RCTConvert_UIFontTests testStyle].\n. @ide How can it go futher? Do you have any idea? \n. Well. I got diffrent images.\n\n. I reduce my aim. I don't know how can I get Helvetica Neue programmatically. systemFontOfSize returns Helvetica.\nI agree your idea. But it looks to me like It's beyond my limit now.\n. When I used [UIFont boldSystemFontOfSize:14], I got Helvetica NeueUI. \nWhen I used [UIFont boldSystemFontOfSize:0], I got Helvetica.\n. Because 98fa688 generates different snapshot images, it breaks all snapshot tests. How can I pass thoses tests? (I added @ide @nicklockwood @paramaggarwal on my fork. If you want to modify my fork, you can modify my fork.)\n. I modified snapshot images.\n. It generates the System font including some attributes(fontWeight, italic and condensed) now. \n. https://travis-ci.org/facebook/react-native/jobs/67305503\n/Users/travis/build/facebook/react-native/Examples/UIExplorer/UIExplorerIntegrationTests/IntegrationTestsTests.m:82: failed: caught \"NSInternalInconsistencyException\", \"*** Assertion failure in -[RCTTestRunner runTest:module:initialProps:expectErrorBlock:], /Users/travis/build/facebook/react-native/Libraries/RCTTest/RCTTestRunner.m:108: RedBox error: Could not connect to development server. Ensure node server is running and available on the same network - run 'npm start' from react-native root\nCould not connect to development server.\nIt looks to me like that this error is not relevant to my commit.\n. Travis works well now.\n@nicklockwood I pushed another commit that uses fontDescriptor. Unfortunately, it looks like dynamic weight change is not supported in iOS.\n. Pushed a modified commit again :)\n. How about introducing [[UIDevice currentDevice] systemVersion]? This will protect fontWeight suppor fot the system font on iOS 8.2 and later. And we will use the soulution of enumerating fonts to find the closest match too on iOS 8.1 and earlier.\nSome codes use __IPHONE_OS_VERSION_MIN_REQUIRED including RCTConvert. I think it would be another solution.\nPS: The last commit(3ca2f73) is not relevant to this comment. I have had a mistake. I fixed it. That's it.\n. I thought Images was not relevant to Libraries/Image. Because d0d774d had modified RCTConvert.m. It seems my mistake. I have to delete Images too.\n. I thought Images was not relevant to Libraries/Image. Because d0d774d had modified RCTConvert.m. It seems my mistake. I have to delete Images too.\n. Oh. I see. I have to modify that line.\n. Oh. I see. I have to modify that line.\n. ",
    "moduscreate": "copy that. =) I'll do that.\n. Thanks Robert!!\nJG\n:: sent from my mobile device ::\n\nOn May 3, 2015, at 05:05, Robert Payne notifications@github.com wrote:\nChiming in here as I've done quite a bit of work around license key protection and sorts. Please realise no matter how much effort you put in to \"securing\" your JS code or secrets in an iOS client app a determined attacker will always get what they want. From what I've read from other developers it's about a 10:1 effort. That is for every 10 hours you spend \"protecting\" your stuff it takes an attacker approx 1 hour to reverse your efforts.\nTrying to keep the source private is pretty moot-point since it's very easy to monitor some of the Objective-C code that react-native uses.\nThe best thing I recommend to anyone is to ensure your jsbundle has a signature and you verify that signature before you let it be loaded into the bridge. This is especially important for anyone delivering updates over HTTP/HTTPS.\nIf you are heavily worried about code protection use heavy obfuscation and RSA public/private keys to encrypt the source. Again anyone with a jailbroken device and a bit of time can easily latch LLDB onto the RCTBridge methods and snag your code.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "hapasa": "There appears to be code looking for accessiblityLabel from the UIView.\nIs there a way to set that from javascript?\n. ",
    "cmnstmntmn": "soon it's own editor http://nuclide.io/\nOn Fri, Mar 27, 2015 at 5:33 PM, Joe Wood notifications@github.com wrote:\n\nThere are plenty of options for editors like Atom, with TypeScript/Flow\nplugins and type annotations RN. That's what I'm currently using. I\ncouldn't see any support for Emmet though.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/345#issuecomment-86976346\n.\n. @nav i know that, and it works, by changing the IP\nbut the problem i am facing with, occurs after i unplug the phone from computer\n. \n",
    "blim8183": ":+1: \n. ",
    "rickyc": "Updated to use execFile instead of the quotes as suggested. \n. ",
    "abarth": "Looks like this bug is fixed by #512.  Should we close this issue?\n. ",
    "donyu": "Yup thanks for catching this! I forgot to close it after the PR.\n. Made a quick PR to fix this if you guys want to try it out. Thanks!\n. @brentvatne Thanks for catching the interplay issue!\n. I think using ActivityIndicatorIOS as the default loading view is fine since it's part of WebView.ios.js and not WebView.android.js. Not sure if I should make a similar change for the Android version of WebView though.\n. This seems to be an issue with ScrollView also.\n. You'll want to add a period after this last comment.\n. You'll want to add a period after this last comment.\n. Importing this module should be obvious.\n. Importing this module should be obvious.\n. super nit: extra space between nearby and exclamation point.\n. super nit: extra space between nearby and exclamation point.\n. ",
    "danawoodman": "Looks like I answered my own question, I just set flex values, like the following:\njs\n  memberItem: { // Container\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginVertical: 5,\n  },\n  avatar: { // First, left aligned item\n    flex: 1,\n    height: 50,\n    marginRight: 20,\n    width: 50,\n  },\n  name: { // Stretched middle component\n    flex: 3,\n    fontWeight: 'bold',\n  },\n  activeToggle: {  // Last, right aligned item\n    flex: 1,\n  }\n. @vjeux gotcha, still trying to wrap my head around flexbox. Do the components need to be <View>s? I'm assuming not. Thanks for your quick reply!\n. Also, what if the last element doen't have a fixed width (eg. a <SwitchIOS> component)?\n. Awesome, thanks so much for the info, cheers @vjeux!\n. I'm really excited to pick it up. Cheers @vjeux and team for all your hard work on React Native!\n. Not able to reproduce, if I am, I'll reopen with details!\n. Whoops, thought I did. Thanks!\n. ",
    "rmcvey": "Great, thank you!\n. > Thanks, this was definitely on my list :)\nMy pleasure, glad to contribute to the project! \nRegarding your question about any potential weirdness from using promises and callbacks, it is currently being handled the same way jQuery does (not that they are the model for using Promises), the callback runs first then the promise is resolved or rejected:\n$.get('/', function(resp) { \n  console.log('callback'); \n}).then(function(data) { \n  console.log('promise');\n});\nI suppose there could potentially be a problem if both were utilized and both called setState but I think most developers would choose one or the other. Totally your call though. I suppose I could check for the existence of a callback prior to returning a Promise but the flow return types would probably have to go back to any.\nAlso, I'm not sure why the Travis build failed on this push (the error was pretty vague), I tested it locally and it is working fine.\n. Done. I hadn't run flow to verify no errors were introduced, but I did prior to my latest commit (9b571fb0119b3cf1b9dd960fb5875205c33c5c1f) and received no warnings/errors.\n. Fixed in commit 9b571fb0119b3cf1b9dd960fb5875205c33c5c1f\n. I ran some tests and it seems to work fine without calling done():\n```\nnew Promise((res, rej) => { throw new Error(\"SimulatedException\"); })\n.then((msg)  => console.log('uncaught: ' + msg))\n.catch((msg) => console.warn('caught: ' + msg)); // outputs caught: SimulatedException\nnew Promise((res, rej) => { rej(\"REJECTED\"); })\n.then((msg)  => console.log('uncaught: ' + msg))\n.catch((msg) => console.warn('caught: ' + msg)); // outputs caught: REJECTED\n```\n~~That being said, I'm happy to add the done() at the end of the promise chain if you'd prefer it be in there.~~ I went ahead and added the done() call to the AsyncStorageExample.\n. Also fixed in commit 9b571fb0119b3cf1b9dd960fb5875205c33c5c1f\n. ",
    "mkonicek": "@rmcvey: #265 has been merged, you can close this issue.\n. This has been done in #265.\n. This has been fixed in the meantime, AnimationUtils will be updated on the next export to github.\n. Please use Stack Overflow for questions: http://stackoverflow.com/questions/tagged/react-native\nPost your question with the code sample there and close this issue.\n. Looks good!\n@vjeux, @sahrens does React Native aim for backwards compatibility before version 1.0? If not, you could simply do secureTextEntry={this.props.password}.\n. Looks good!\n@vjeux, @sahrens does React Native aim for backwards compatibility before version 1.0? If not, you could simply do secureTextEntry={this.props.password}.\n. @joewood Thanks for flagging this! Would you be up for sending a PR to update the docs?\n. Whoops, just noticed the props are not sorted alphabetically (although this code looks good).\nhttps://facebook.github.io/react-native/docs/image.html#content\n. Thanks!\n. Nice! The package grew a bit because of the iOS template, right? I'm surprised it grew significantly enough to cause an upload issue.\n. Thanks!\n. From: http://flowtype.org/docs/advanced-configuration.html\n\"set this to true to have Flow treat underscore-prefixed class properties and methods as private\"\nSounds good!\n. We don't have a consistent naming convention for modules but the module is not really a \"manager\". Can you please name it \"WebSocketsModule\" and name the variable RCTWebSocketModule or similar?\n. nit: Please add  a newline before this line. It's just a convention we use.\n. This should be mReactContext. No need for the blank line above.\n. nit: Remove blank line\n. nit: These 2 lines should be indented by 4 spaces (double the normal indentation)\n. We don't have a consistent naming convention for modules but the module is not really a \"manager\".\n. Are you fine with the default timeouts this provides? Check out:\nhttps://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/JSDebuggerWebSocketClient.java\n. nit: Please remove extra newlines.\n. nit: You can probably fit both arguments on one line (under 100 characters is fine).\n. nit: forward\n. nit: it is very prone to\n. :+1: \n. This paragraph repeats what has been said above but fine if you want to make this message super duper scary :)\n. I removed this empty line to make this render correctly: http://imgur.com/IDu30rX\nTo test rendering locally:\n$ cd website\n$ npm start\n...\nOpen http://localhost:8079/react-native/index.html\n. nit: load -> loaded\n. Thanks for adding the awesome docs!\n. :+1: \n. Could be mTouchTargeView. I understand you wanted to make it consistent with mTargetTag.\nSince you're adding mTargetTag do you still need both?\n. onScreen\nallocation\n. Is it necessary to recompute this for every touch event?\n. getViewOffsetRelativeToRootView?\n. This is the only call site of getOffsetOfView, why a separate method? Inline it.\n. Doing almost the same work as findTargetViewForTouch above.\n. to implement three methods: (note the colon)\nWhat is a \"Module registry class\"? It's called the \"package\" or a \"package class\".\n. Whole method body can be simplified to:\nreturn Arrays.asList(new ToastModule(reactContext));\ncomment is unnecessary\n. return Collections.emptyList();\n. return Collections.emptyList();\n. With the comments below you can remove this import (import java.util.Arrays and java.util.Collections) instead.\n. Why are the changes in this file needed? What's your test plan to make sure it doesn't break existing iOS behavior?\n. Why are the changes in this file needed? What's your test plan to make sure it doesn't break existing iOS behavior?\n. Why Deprecated? You've just added this code.\n. Why Deprecated? You've just added this code.\n. Should this be prefixed with an underscore?\n. Should this be prefixed with an underscore?\n. Sorry forgot the generic argument, you can do it like this:\nhttps://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java#L47\n. Is this transform enabled by default both on iOS and Android? If not people will find this example confusing because it won't work.\n. Is this transform enabled by default both on iOS and Android? If not people will find this example confusing because it won't work.\n. nit: animated -> animate\n. nit: animated -> animate\n. Why is this needed? I'm not very familiar with the ViewPager API. Can you add a comment?\n. Why is this needed? I'm not very familiar with the ViewPager API. Can you add a comment?\n. This has a hidden side effect of setting animatePageTransition for all future updates of selectedPage.\nHow about making this explicit and exposing a animateSetPage prop? (Feel free to come up with a better name :))\n. This has a hidden side effect of setting animatePageTransition for all future updates of selectedPage.\nHow about making this explicit and exposing a animateSetPage prop? (Feel free to come up with a better name :))\n. Is the comment above this line still valid? The task only has a link to this file :) It was added by Krzysztof.\n. Is the comment above this line still valid? The task only has a link to this file :) It was added by Krzysztof.\n. Sorry I noticed just now I don't understand this paragraph at all. By packaging class (should be package) do you mean AnExampleReactPackage? \nThere is MainActivity.java in AnExampleReactPackage.\n. Probably want to rewrite this comment, explaining why this is OK to ignore and explain when this could happen and why.\n. Cool, just wasn't sure whether ES7 was enabled in the Babel config by default.\nJust found it :)\nhttps://github.com/facebook/react-native/blob/master/packager/react-packager/.babelrc#L18\n. Cool, just wasn't sure whether ES7 was enabled in the Babel config by default.\nJust found it :)\nhttps://github.com/facebook/react-native/blob/master/packager/react-packager/.babelrc#L18\n. I'm not very familiar with DeviceEventEmitter - is the listener get automatically unregistered when the component is unmounted?\n. nit: component\n. Added a link to Getting Started and published react-native-cli 0.1.6. Another change is 'npm start' is now simply an alias for 'react-native start', therefore it will work on Windows (used to call packager.sh).\n. Added a link to Getting Started and published react-native-cli 0.1.6. Another change is 'npm start' is now simply an alias for 'react-native start', therefore it will work on Windows (used to call packager.sh).\n. I think Windows is not an issue as this is iOS-only but agree with the argument about other shell environments.\n. I think Windows is not an issue as this is iOS-only but agree with the argument about other shell environments.\n. Why do you need the arrayOf here? Looks like the line above already has all the combinations?\nCan you provide examples where you'd use on or the other?\n. Related to my other question: What's the semantic difference between a string with space-separated values and an array with the same values? Why support both?\n. OK that makes sense but doesn't supporting both make this code more complicated and harder to maintain? You need React.PropTypes.oneOf and the custom type in Java. I'd be fine with supporting only one (Space-separated is easier to type? No strong opinion though). Making breaking changes occasionally is still fine too as long as we document them in breaking-chages.md, the APIs are still evolving a lot.\n. Good question. Try Array<ReactElement> and run flow from the root of the repo and see if that works.\nDoesn't look like the React codebase uses Flow and not sure how the Flow handles the boundaries between code that uses Flow and code that doesn't.\nIf Array<ReactElement> doesn't work I'd go for Array or Array<Object>. It's a private function you're using just in this file.\n. Good question. Try Array<ReactElement> and run flow from the root of the repo and see if that works.\nDoesn't look like the React codebase uses Flow and not sure how the Flow handles the boundaries between code that uses Flow and code that doesn't.\nIf Array<ReactElement> doesn't work I'd go for Array or Array<Object>. It's a private function you're using just in this file.\n. nit: spaces around ===\n. Why let?\n. Are forward slashes not allowed in paths on Windows? Consider adding a short comment explaining these two lines.\n. Is \\\\.\\pipe\\ some special path on Windows? Can you add a comment explaining this?\n. nit: might be nice to document these are comma-separated\n. nit: might be nice to document these are comma-separated\n. @kmagiera It's a good point and looked into doing that when open sourcing the view pager but decided not to (don't remember the exact reason anymore). I think changing this is outside the scope of Brent's PR though. I'll pull this in as it looks good otherwise.\n. It's used now :) Better to specify the policy explicitly.\n. Why 1280? Can you add a comment explaining this?\n. Why 1280? Can you add a comment?\n. Oh OK, is it rotationDegrees, rather than rotate on iOS as well?\n. Can you please add a comment explaining why this is needed? Why is it needed? Isn't setting elevation enough?\n. Can you please add a comment explaining why this is needed? Why is it needed? Isn't setting elevation enough?\n. nit: spaces around +\n. nit: spaces around +\n. Why not check API level and call View.setElevation? http://developer.android.com/reference/android/view/View.html#setElevation(float)\n. Why not check API level and call View.setElevation? http://developer.android.com/reference/android/view/View.html#setElevation(float)\n. You're right. OK, let's keep this one.\nhttp://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/android/support/v4/view/ViewCompat.java#ViewCompat.setElevation%28android.view.View%2Cfloat%29\ne.g. the JellyBean implementation is empty:\nhttp://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/android/support/v4/view/ViewCompat.java#698\n. You're right. OK, let's keep this one.\nhttp://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/android/support/v4/view/ViewCompat.java#ViewCompat.setElevation%28android.view.View%2Cfloat%29\ne.g. the JellyBean implementation is empty:\nhttp://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.1_r1/android/support/v4/view/ViewCompat.java#698\n. Is this needed? How does the shadow look without it? Maybe we just need higher elevation?\n. Is this needed? How does the shadow look without it? Maybe we just need higher elevation?\n. What if there's only the bottom border for example?\n. What if there's only the bottom border for example?\n. nit: you can probably fit these on one line\n. nit: you can probably fit these on one line\n. nit: you can probably fit these on one line\n. nit: you can probably fit these on one line\n. nit: you can probably fit these on one line\n. nit: you can probably fit these on one line\n. nit: remove extra line\n. nit: remove extra line\n. nit: call super.getOutline: https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/graphics/java/android/graphics/drawable/Drawable.java#989\n. nit: call super.getOutline: https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/graphics/java/android/graphics/drawable/Drawable.java#989\n. What's this number? Should we use some well-known international one maybe?\n. Why are these three needed?\n. Why add these these?\n. Why add these these?\n. What number is this?\n. This change is unrelated, can you remove it please?\n. I have a diff out to open source the Dialog module which does something similar. Should land it soon-ish and you'll be able to rebase on top of it.\n. I have a diff out to open source the Dialog module which does something similar. Should land it soon-ish and you'll be able to rebase on top of it.\n. We need to keep the current constructor around too for backwards-compatibility, otherwise apps won't compile after upgrading.\nHave an idea how to get rid of this issue by introducing a base Activity for React apps. Stay tuned :)\n. We need to keep the current constructor around too for backwards-compatibility, otherwise apps won't compile after upgrading.\nHave an idea how to get rid of this issue by introducing a base Activity for React apps. Stay tuned :)\n. Can you add a link to Android docs that explain how this works?\nThanks for making the API consistent with LinkingIOS!\n. Can you add a link to Android docs that explain how this works?\nThanks for making the API consistent with LinkingIOS!\n. What is LxsameerToolbar?\n. Please remove all the empty lines in method bodies :)\n. We have to use Flog in React Native because of integration with other code at fb. Also, the tag needs to be consistent with the rest of the codebase. See:\nhttps://github.com/facebook/react-native/search?utf8=%E2%9C%93&q=flog\n. Consider logging.\n. Consider logging.\n. Please add Javadoc.\n. Please add Javadoc.\n. nit: space after every :\n. nit: space after every :\n. Why are you adding this between \"title\" and \"titleColor\"?\n. Sort alphabetically\n. nit: \"in your MainActivity onCreate method\"\n. Not sure why this list doesn't render as a list.\nIt works here:\nhttps://facebook.github.io/react-native/docs/navigator.html#navigator-methods (source: https://github.com/facebook/react-native/blob/master/Libraries/CustomComponents/Navigator/Navigator.js)\nMaybe just needs to be indented by 1 extra space.\n. Might want to leave this out while you're iterating on it.\n. nit: name this prefetchedSource\n. space before this line\n. nit: for later use. Start with a capital letter. Add more docs to explain how this works. Where are the images stored? Is there any limit on the memory this uses (at runtime, on the SD card)?\n. This seems reasonable - the process could be started by an intent.\n. This seems reasonable - the process could be started by an intent.\n. @foghina What do you think? You're more familiar with how this works.\n. @foghina What do you think? You're more familiar with how this works.\n. The description of this PR talks about overriding origin. The branch above does that. How is this branch related?\n. The description of this PR talks about overriding origin. The branch above does that. How is this branch related?\n. Could you please keep the PR focused on the origin? In my experience, more code always means more code to review, maintain, and fix bugs in.\n. Could you please keep the PR focused on the origin? In my experience, more code always means more code to review, maintain, and fix bugs in.\n. > stored in local file\n\"stored locally\"\nThe way it's stored might change, making this message out of date.\n. shouldUseCachedBundle for consistency with getShouldUseCachedBundle\n. Please add an explanation like you did on this PR. Reading this I don't know what it does. Many people using RN are not Android developers.\n. nit: IMAGE_PREFETCH_URL\n. nit: space after : (everywhere)\n. nit: space before ?\n. nit\n. spaces\n. same line\n. for later use\n. for later use\n. Why rewrite all of this? Is it just indentation? Can you keep it focused only on the actual changes? Doesn't look like you're changing onFailure.\n. This is technically a module name, see https://github.com/facebook/react-native/blob/7377fdcc70b25eb023e7c6d1b37eeae2a700cb88/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java#L321\nAn example is \"MoviesApp\". Can you add the example here please?\n. Doesn't need to be abstract - we can provide a default implementation that returns \"index.android.bundle\".\n. Nice! :+1: \n. This default value can be defined by the base class.\n. Can be defined by the base class.\n. Can be defined by the base class.\n. > In that case a subclass should return a {@link com.facebook.react.CompositeReactPackage} of  this ReactPackage and its own.\nIf we expose a method like this:\nList<NativeModule> getAdditionalPackages()\nThe developers won't have to deal with CompositeReactPackage.\n. I think you might have to call setJSBundleFile first? This way we'd revert it back to null after calling setBundleAssetName: https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManager.java#L183\n. nit: No need to save this to a variable and then return it.\n. Can you replace this with something like myapp? Is \"RKJSModules\" important?\n. nit: might be nice to add a comment explaining this is for double-tap-R-to-reload\n. nit: in cases the bundle should be loaded from a custom path\n. nit: What does it mean \"the app will only work with dev support\"? I'm not sure if it means that getUseDeveloperSupport must be true? We might also change that constraint in the future. Maybe leave it out? Up to you.\n. If any of this fails (getSystemService returns null, the result is not of type WindowManager etc.) we probably don't want to crash the whole UIManagerModule. Can you wrap all of this in a try-catch block and log the exception using FLog (check other call sites of FLog for examples).\n. Can you do reactContext.getSystemService? See e.g.\nhttps://github.com/facebook/react-native/blob/90c7ad112f9e53dc6c71c8f47ea2a31b41d06141/ReactAndroid/src/main/java/com/facebook/react/modules/clipboard/ClipboardModule.java#L47\n. Thanks for adding the comment!\n. What happens if timeout is undefined in JS?\n. What happens if timeout is undefined in JS?\n. Should this be _timeout, same like _headers etc.?\n. Should this be _timeout, same like _headers etc.?\n. Why an array instead of a Set?\n. Why an array instead of a Set?\n. typeface on new line\n. spaces around !=\n. spacing around ,\n. What if getScrollResponder() returns undefined?\n. Here's a shorter URL: http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Variants\n. nit: Can you make these examples something like \"free\", \"paid\"? I got confused by what \"stage alpha\" was when I first saw the PR.\n. Is this cmd /c npm install --save react-native? I've never seen that syntax, can you add some comment explaining what it does?\n. > reset(): reset the list of ABIs to be included to an empty string (this allows, in conjunctions with include, to indicate which one to use rather than which ones to ignore)\nFrom http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits\n. Also explained here: http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits\nVery good point about the comment, will add it.\n. Looks like we use mostly process.platform throughout the codebase.\n. nit: The common case is react-native run-android (without --open) so you probably want:\nif (!yargV.open) {\n   return ...\n}\nreturn ...\n. nit: The common case is react-native run-android (without --open) so you probably want:\nif (!yargV.open) {\n   return ...\n}\nreturn ...\n. Looks like this should work although I don't have a Linux machine to test it either :)\nSame nit as above.\n. Looks like this should work although I don't have a Linux machine to test it either :)\nSame nit as above.\n. OK, can you declare the property to get rid of the lint warning?\n. OK, can you declare the property to get rid of the lint warning?\n. same here\n. same here\n. Looks like 0 means no timeout, that's good: https://square.github.io/okhttp/2.x/okhttp/com/squareup/okhttp/OkHttpClient.html#setConnectTimeout-long-java.util.concurrent.TimeUnit-\nPlease remove the commented out line.\n. Looks like 0 means no timeout, that's good: https://square.github.io/okhttp/2.x/okhttp/com/squareup/okhttp/OkHttpClient.html#setConnectTimeout-long-java.util.concurrent.TimeUnit-\nPlease remove the commented out line.\n. nit: add a license header please\n. nit: add a license header please\n. nit: add the BSD license header please\n. nit: add the BSD license header please\n. nit: add the BSC license header please\n. nit: add the BSC license header please\n. Agree\n. Agree\n. It's camelCase in JS.\n. This was for convenience on iOS. How can people pass the type / style with this change?\n. This was for convenience on iOS. How can people pass the type / style with this change?\n. >  All functionality available through AlertIOS.alert is also available in the cross-platform Alert.alert\nIs this true for the prompt function?\n. >  All functionality available through AlertIOS.alert is also available in the cross-platform Alert.alert\nIs this true for the prompt function?\n. Is this Android-only? Please add extensive documentation on what this does.\n. Is this Android-only? Please add extensive documentation on what this does.\n. Default state should be \"uninitialized\" as per the internal module: https://gist.github.com/mkonicek/039f35748c0a073dd1b5\nWhat's the rationale for setting it to \"active\"?\n. nit: Please use constants like in https://gist.github.com/mkonicek/039f35748c0a073dd1b5\n. Please add the comment from https://gist.github.com/mkonicek/039f35748c0a073dd1b5\n. nit: sendAppStateChangeEvent would be clearer.\n. nit: I like the emphasis for the names but not sure it's a convention in the docs. Check other files. Would rather keep it consistent with docs for other files and then migrate all at once.\n. I believe this is what generates the docs: https://github.com/facebook/react-native/tree/master/website/jsdocs\nAgree we shouldn't put getSize into props because it's not a prop.\nI don't think the generator can parse statics (yet)? I'd put the docs to getSize where they belong and hopefully we can improve the generator later, it's definitely not perfect. I often see people put all the API docs at the top, e.g. https://github.com/facebook/react-native/blob/master/Libraries/Utilities/Alert.js\n. Add Javadoc explaining what the reason this class exist is please.\n. Add Javadoc with a short explanation this shows/hides the HMR menu please.\n. nit: typo in exprimental\nsmall nit: Could say \"exposes a way for app developers to enable/disable...\" or similar - to make it clear this is public API intended to be called by the apps, not just by the framework.\n. nit: please remove this new line\n. Nice!\n. nit: typo\n. It's a matter of personal preference but these three methods have so clear names they probably don't require Javadoc. If you prefer keep it but please remove the @param experiment - these don't add meaning to what's already in the code.\n. Please add a line with @platform android at the end. This has effect on how the docs render on the website (grouped by platform). See e.g.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollView.js#L178\nhttps://facebook.github.io/react-native/docs/scrollview.html#content\n. Sorry I just meant flipping the condition (and made a typo in the last comment :)):\nif (yargV.open) {\n   return ...\n}\nreturn ...   // The \"default\" case at the end\n. nice!\n. What is a lock mode? Can you add documentation understandable for someone who doesn't know anything about the Android Drawer?\n. All of these should be already pulled in via the ...View.propTypes above (see View.js). Is there a need to duplicate the props here?\n. I think we want to keep the version here to make it clear we're on master?\n. Does this respect the declared version of React via peerDependencies (0.14.5)?\n. Can you give some examples of valid values for REACT_DEBUGGER? Reading this I wouldn't know what to put in the environment variable.\n. nit: Override the root directory to be used to start the packager.\n. This is new, correct? Why is this needed?\n. This is new, correct? Why is this needed?\n. Wow, nicest shell lib ever!\n. Is this indentation correct?\n. Does this mean we'll break everyone still using callbacks? We could give people a bit more time.\n. Thanks for adding the example. Sorry about the back and forth - why is there the 200kB limit?\n. Can you add a short example here showing how I would extend the area by n pixels in each direction? What's a reasonable number?\n. If I show many toasts and never call cancel, this map will grow indefinitely, holding references to the Android Toast classes which might consume quite a bit of memory. Is that right?\n. I was thinking of a WeakHashMap with keys being the Toasts and values being the ids. You'd have to loop over it's entrySet to find the Toast for the id but there won't be many Toasts.\nThere's a real chance the garbage collector will remove entries from the HashMap before you call dismiss though: http://stackoverflow.com/questions/3243215/how-to-use-weakreference-in-java-and-android-development\nThe solution with the timer seems OK.\n. Can udid be empty?\n. Is this --term? The PR says the argument is --open and the Mac OS branch above uses --open too. Should this be --open for consistency?\n. nit: Use single quotes for consistency with the rest of the file.\n. nit: if the value is true / If true, disable all interactions for this component.\n. Should name be in quotes as it's a JSON file?\n. What if any of these return null?\n. nit: Please keep the original indentation of 4 spaces.\n. nit: Split this to multiple lines to keep under 100 characters.\n. nit: Split this to multiple lines to keep under 100 characters.\n. Follow consistency :)\n. Sorry for the back and forth.\n. nit: highlight\n. nit: highlight\n. nit: highlight\n. nit: highlight\n. Is this relevant to this PR (adding support for elevation)?\n. Can you please explain what setting a default origin means?\n. nit: space after if\n. Please add a comment at the beginning of the else branch saying that we fall back to a simple 'shell am start' in case we couldn't get the list of devices from adb for some reason.\n. Can getSettings return null? Should this code be checking for that?\n. nit: ... start playing. The default value is false.\n. nit: ... start playing. The default value is false.\n. Can this match fail?\n. Can this match fail (e.g. spaces around \"=\")?\n. nit: space after if (everywhere, for consistency with the rest of this file and the codebase)\n. nit: space after ) (everywhere, for consistency with the rest of this file and the codebase)\n. Please add a comment explaining what the function does, what the arguments are and an example way someone would call it (including example arguments).\n. Ah, nice trick with the --json, no need for parseIOSSimulatorsList. Cool!\n. cool :)\n. Whoa didn't know you could write Python in a .sh file! Nice :)\n. Super cool!\n. > I don't think getSettings does return null\nCan you check the source code to be 100% sure? Also the behavior can change across Android versions. It's better to always check for null to be safe. \nSee https://en.wikipedia.org/wiki/Defensive_programming\n. nit: \"The default value is false.\" is a sentence. Please add a period at the end. Sorry if I've missed that in the previous review.\n. Ah now I see what you meant by those established instances. OK you've convinced me :)\n. Please stick to the conventions used across the project, for example \"Simulator to use, for example 'iPhone 6'.\"\nAlso, is this only a simulator, or also possibly a physical device?\nSee e.g. https://github.com/facebook/react-native/blob/3a92f2017fc2e51c2a915f0e535397cb3937d412/local-cli/generate/generate.js\n. Please stick to the conventions used across the project, for example \"Simulator to use, for example 'iPhone 6'.\"\nAlso, is this only a simulator, or also possibly a physical device?\nSee e.g. https://github.com/facebook/react-native/blob/3a92f2017fc2e51c2a915f0e535397cb3937d412/local-cli/generate/generate.js\n. I'm fine with ios-project-path, it makes it clear it's the path where the XCode project lives.\nRegarding the \"path\" vs \"dir\" terminology - if you look at other places in the CLI, we mostly use \"path\" so let's use that.\nWe should also add this for Android, can you add that to this PR please or send a separate PR?\nreact-native run-android --android-project-path Examples/Movies/\n. I'm fine with ios-project-path, it makes it clear it's the path where the XCode project lives.\nRegarding the \"path\" vs \"dir\" terminology - if you look at other places in the CLI, we mostly use \"path\" so let's use that.\nWe should also add this for Android, can you add that to this PR please or send a separate PR?\nreact-native run-android --android-project-path Examples/Movies/\n. nit: \"Path relative to project root where the Xcode project (.xcodeproj) lives. The default is 'ios'.\"\n. nit: \"Path relative to project root where the Xcode project (.xcodeproj) lives. The default is 'ios'.\"\n. That's even better, will add it. Pasting code to GitHub is sometimes sufficient.\n. Cool, has to be a public post though (outside the secret group).\n. They should add an example to the UIExplorer.\n. #6039 also contained fbjs here but it's gone on master.\n. David tells me this is for Jest and we should keep the format here.\n. fastpath should not be mocked, otherwise the test fails.\n. Can getTopLevelDrawable return null?\nWhat is true, true?\nWhy does this work? Can you add a comment explaining what the line does?\n. Ah so uri being null in a previous call makes this invisible?\n. Agree.\n. Please add a comment what it's used for.\n. > What is true, true?\nSorry for not being clear. I meant there should be a comment in the code explaining this.\n. Is this correct? The file name is reserved-words.js.\n. This needs to be in a finally section, check out some tutorials or just look for \"outputstream\" across the RN codebase to see examples. Found e.g. http://www.quepublishing.com/articles/article.aspx?p=26067\n. Is this a common pattern across the codebase? Do we usually pass the Java exception to JS?\n. Can you add a short Javadoc comment explaining this takes a screenshot? The name \"snapshot\" wasn't very obvious to me.\n. Can you split this into a separate PR? PRs that change package.json are not easy to merge: a fb employee needs to update the internal fb npm cache manually.\n. I don't know Objective-C but do you need to deallocate this? #noob :)\n. I'm not sure we can use Java 7 when building the fb Android app.\nDo we use this pattern anywhere else in React Native? You might want to stick to Java 6 just to make merging this easier.\n. I'm not sure \"Remotely\" add clarity here, especially since Chrome is running locally. Can you keep just \"Debug JS\", \"Stop JS Debugging\"?\n. Debug JS\n. Debug JS\nnit: use backticks:\nREACT_DEBUGGER=\"node /path/to/launchDebugger.js --port 2345 --type ReactNative\"\n\nshort-lived processes, and they shouldn't produce more than 200 kilobytes of output\n\nPlease add a short explanation why this is.\n. nit: JS\nremove \"Remotely\"\n. nit: space after //\n. space after ,\nUse \"Invalid prefetch image url: \" + url - helps with debugging.\n. Is anyone working on a debugger that talks directly to JSC? That would be awesome!\n. This does not compile, you're missing a semicolon.\n. Good point, logging an error is better than just debug in this case.\n. Pool request :)\n. nit: extra '\n\"Thanks for opening the issue, however it looks like a feature request. As noted in the Issue template we'd like to use the GitHub issues to track bugs only. Can you implement the feature as a standalone npm module? If not consider sending a pull request or a create an entry ...\"\n\"Closing this now due to the explanation above, thanks for understanding!\"\n. This should be \"close\".\n. Consider adding \"Closing this issue.\" as a last sentence.\n. nit: like in the following cases / like the following cases?\n. Cool! Likes like the original one has a broken link in the readme: https://github.com/tjwudi/EmbededReactNativeExample\n. What's the convention for env variables used elsewhere? Should it be REACT_NATIVE_APP_ROOT? Not sure, just checking.\n. Should this be in a finally block just in case the code above throws an exception?\n. Should this be in a finally block just in case the code above throws an exception?\n. What if details.repeatInterval is undefined?\n. Would Buck fails if the tests don't compile? Can you remove this step completely now?\n. \ud83d\udc4d \n. nit: Hot Module reloading and Chrome debugging work\n. Why is this called meth?\n. Did this run the packager test with npm2? Why remove it?\n. Why kill the packager tests? Because the Android test already covers it?\n. Why is this needed in the iOS test but not Android?\n. nit: react-native init\n. Typo: remove listener\n. IMHO if someone does <Image source={...} src={...} /> we should still warn, the code is not correct.\n. Same here, we should always warn if someone specifies src.\n. I find this condition a bit hard to read. Can you add brackets to show how this logically belongs together or maybe split it into two return statements?\n. Same here.\n. nit: Please always add braces to keep the formatting consistent with the rest of the codebase:\nif (foo) {\n  oneLiner();\n}\nIt's just a coding convention.\n. Same here, please add braces.\n. nit: I personally find TNF a bit unclear. Can you use TouchableNativeFeedback?\n. Why remove the border radius from the example?\n. I find the condition a bit long and hard to read now. The first line says \"there is a border radius set\". What does the second line say? Can you extract the new condition into a variable with a clear name for better readability please?\n. This relies on someone setting a variable before calling this method. What do you think about passing the mPathEffectForBorderStyle as a second argument to this method, just for clarity?\n. Can you add a short comment explaining what this does? Is it to draw e.g. dashed or dotted borders?\n. typo: synopia\n. This message is gone now, is there other code that prints it?\n. Whoa this is a lot of duplication in all the methods but I see it's already there in the rest of the file :/\n. Cool, thanks!\n. Does this have impact on performance in the common case (rectangle)?\n. Is this Javadoc correct?\n. Since these are related to the text shadow offset, can you name them e.g. as follows (for clarity)?\nPROP_SHADOW_OFFSET_WIDTH\nPROP_SHADOW_OFFSET_HEIGHT\n. Can you add Javadoc explaining why this is needed? When someone sees this code later they won't see the description of this pull request anymore. The same comment as in ReactInstanceManager is good \ud83d\udc4d \n. nit: Can you remove the comment \"Utils\" here? I find the code self explanatory.\n. Please add the app under H (the list is ordered alphabetically).\n. nit: space after if\n. nit: Maybe exitCode? For a while I thought code was a function, not sure why I thought that ..\n. The docs are good!\nShould this be called emitNewIntentReceived for clarity? By looking at the name itself I can't tell whether this creates a new intent somehow or whether it notifies JS the intent was received.\n. Why is this called \"openURL\"? If all of this logic works with generic URIs and Intents, this should be \"intentReceived\". Otherwise the Java method should be called emitOpenURL or similar.\n. nit: remove ? - if we commit this we've made that decision to swallow it :)\n. nit: refer -> refer to\n. Engineers at Facebook can actually use the internal Android implementation and could get confused by this. Might be better to keep as is, given there's a big warning in the docs at the top (thanks for adding it!).\n. Idea: make this optional, that way it's still possible to not pass this argument an execute all tests locally (for easy local testing of the whole suite).\n. Actually undefined && foo evaluates to undefined so seems better to explicitly return true, false just to be safe.\n. This is called on iOS as well as Android. Is that intentional?\n. nit: remove space before ) please\n. nit: alphasort please :)\n. Should we throw here?\n. The idea is that we make rnpm a core part of React Native and eventually stop publishing the standalone rnpm module, basically merging the projects - contributions will be done in the RN repo, etc.\nWhat would be the advantage of using dev-dependencies? Would it help with bundle size?\nIn general, we have dependencies in React Native's package.json (e.g. yeoman) that are only needed by the CLI and not the apps. But since the apps don't require these, we don't bundle and ship them as part of the apps, right?\n. Yes definitely, this PR is just a first step to get this to work :) The plan is to keep iterating on this.\n. nit: ;;\n. This is quite a bit of non-trivial code, please add a comment above. People won't see your pull request summary when reading this code.\nThe pull request summary talks about the y coordinate only. Why do this for the x coordinate too?\n. Not sure the trick with declaring two variables is worth it. Might be more readable to compute each separately: the line below is very long and it's not immediately clear what [0, 0] does. Also, are element width and height actually 0 if there is no pressInLocation? Should the variables be named differently?\n. typo: react-natvie\n. > if the pressInLocation is present\nThis comment just repeats the same information as in if (this.pressInLocation).\nWhen is it present? Is it always present? The old version didn't check for it.\nDoes checking for it mean we only show the hotspot sometimes?\n. nit: typo in calcuclated, typo: The element's\n. nit: space after if please\n. I'm not sure how this will render on the website. Can you try using cd website; npm install; npm start and post a screenshot please? It might not render well, in that case it's fine to explain this in the doc block above.\n. Same here.\n. Same here.\n. Please remove, don't think we use <p> in comments across the codebase.\n. In theory the <p> are good here for rendering HTML docs but don't think we use them across the codebase - can you check? It's more important to stay consistent.\n. Thanks!\n. remove empty lines please\n. Would something like \"slider_icon_uri\" work here? It's more descriptive. Or does iOS pass \"uri\"?\n. Minor thing: can you add an empty line after } please?\n. Do we use _ for private helper functions in this file? Should this be _getAdbPath?\n. Suggestion:\nRuns 'adb reverse' to allow loading the JS bundle from the packager when using a physical device\n- adb is usually spelled in lower case: https://developer.android.com/studio/command-line/adb.html\n- JS bundle is the usual spelling\n- we should say the purpose of this function is running on physical devices (on emulators it's not needed)\n. We can fix that in a followup commit, let's shipit :)\n. nit: packager\n. You can probably remove these lines (copied from run-android, mentions gradle).\n. nit: Please check that Xcode is installed.\n. Please use const instead of var.\n. Where is this list copied from? Can you add a comment with a link please?\n. What is BarButton? Should this be something like NavBarButtonSystemIcon? or just SystemIconButton or similar? In comments below you called it \"header button\".\n. I was thinking the same but then I thought - adding vars is just going to increase the work for people migrating later. We might as well introduce const gradually.\n. ok :)\n. I think you understand the context better than I do to name it. With my limited understanding. How about SystemButtonType since it's an enum?\n. nit: Please remove the word \"therefore\" here.\n. Looks like this is now present twice?\n// whether to bundle JS and assets in release mode\n bundleInRelease: true,\n. nit: childern -> children\n. I might be mistaken but I think we only look at *.ios.js when generating docs for the website: http://facebook.github.io/react-native/docs/image.html\nYou can verify locally using:\ncd react-native/website\nnpm install\nnpm start\n(prints a localhost URL)\n(later rm -rm website/node_modules - take up space and I think when you run Flow it will analyze the folder which is not really needed)\nBy adding @platform android as the last line of the comment the prop will be displayed with an Android flag in the docs.\nnit: Could you please explain what the difference between resize and scale is? I don't actually remember which one does the downsampling by skipping pixels.\n. Can you please add a comment why this is needed so people reading the code in the future understand why it's needed to reset the transform here?\n. Small nit: only two spaces of indentation please.\n. Why is this needed?\n. nit: space after if\n. nit: space after //\n. Where does this formula come from - e.g. Android docs?\n. Where is this used? Could you add a comment what the purpose of this one is please? If people see a Position.js file in a top level folder it might not be clear what it does.\n. Does this variable exist on TouchableOpacity or are you introducing a new one?\n. Why is this needed?\n. Makes sense, thanks!\n. Looks reasonable and simple that I think I can merge this. Just one question - why remove the default here? Could it break any code relying on the default?\n. nit: Consider adding a comment saying why this is needed.\n. Can self.pinchGestureRecognizer be null, causing a crash?\n. Can self.pinchGestureRecognizer be null, causing a crash?\n. What is the current behavior? Is it always enabled so you need to disable it here?\n. What is the current behavior? Is it always enabled so you need to disable it here?\n. What is the current behavior? Is this a breaking change for apps?\n. What is the current behavior? Is this a breaking change for apps?\n. nit: e.g.\n. nit: e.g.\n. nit: something -> login_button  for clarity what the \"something\" represents\n. nit: something -> login_button  for clarity what the \"something\" represents\n. nit: e.g.\n. nit: e.g.\n. Should this be reactTagFor or just getReactTag?\nIt returns a tag for a view, not a tag from a view, correct?\n. Should this be reactTagFor or just getReactTag?\nIt returns a tag for a view, not a tag from a view, correct?\n. ViewHelpers or ViewUtils. Can you check which naming is more common in the codebase? Also, is there an existing class where this could live?\n. ViewHelpers or ViewUtils. Can you check which naming is more common in the codebase? Also, is there an existing class where this could live?\n. Please remove unused param and return.\n. Please remove unused param and return.\n. Comment doesn't add any value, it has the same meaning as \"test id util\", please remove.\n. Comment doesn't add any value, it has the same meaning as \"test id util\", please remove.\n. Does this mean \"not found\"? If yes add a boolean found to make it easily readable?\n. Does this mean \"not found\"? If yes add a boolean found to make it easily readable?\n. Remove unused params.\n. Remove unused params.\n. Why do the resource lookup? If you remove this branch and just use the map, there's no need to define ids in the xml file, correct?\n. Why do the resource lookup? If you remove this branch and just use the map, there's no need to define ids in the xml file, correct?\n. Remove unused param and return.\n. Remove unused param and return.\n. nit: resetStateInTest, no Javadoc needed. Alternatively, just create a new instance of this class in each test?\n. nit: resetStateInTest, no Javadoc needed. Alternatively, just create a new instance of this class in each test?\n. nit: Shouldn't be ALL_CAPS because it's not a constant.\n. nit: Shouldn't be ALL_CAPS because it's not a constant.\n. Also not really a constant.\n. Also not really a constant.\n. Why 10?\n. Why 10?\n. Please remove unused params.\n. Please remove unused params.\n. Please no wildcard imports.\n. Please no wildcard imports.\n. Why not go with 0?\n. Why not go with 0?\n. nit: The existing comment might be useful to keep around:\nSince we don't need Android tags for anything else, reuse the field instead of creating another (potentially much more expensive) mapping from view to React tag.\n. nit: The existing comment might be useful to keep around:\nSince we don't need Android tags for anything else, reuse the field instead of creating another (potentially much more expensive) mapping from view to React tag.\n. nit: resetStateInTest might be more accurate. It resets state and is intended to be used only in tests.\nResetting test state has a different meaning - what is a test state?\n. nit: resetStateInTest might be more accurate. It resets state and is intended to be used only in tests.\nResetting test state has a different meaning - what is a test state?\n. Comment repeats the name of the class method without adding info. Please delete.\n. Comment repeats the name of the class method without adding info. Please delete.\n. nit: ViewUtil. The fact that a class contains methods is implied.\n. nit: ViewUtil. The fact that a class contains methods is implied.\n. I'm thinking getReactTag might actually be more obvious. Somehow when I see reactTagFor I'm assuming it's going to do a lookup in a map. On the other hand \"get\" implies a simple (cheap) getter.\n. I'm thinking getReactTag might actually be more obvious. Somehow when I see reactTagFor I'm assuming it's going to do a lookup in a map. On the other hand \"get\" implies a simple (cheap) getter.\n. Should this be reactTagFor like everywhere else in this PR?\n. Should this be reactTagFor like everywhere else in this PR?\n. Should this be reactTagFor like everywhere else in this PR?\n. Should this be reactTagFor like everywhere else in this PR?\n. Why \"original\"? reactTag should be sufficient.\n. Why \"original\"? reactTag should be sufficient.\n. What does this comment mean? Does it mean this should return the id (View.getID) but in fact it doesn't?\n. What does this comment mean? Does it mean this should return the id (View.getID) but in fact it doesn't?\n. What does internal mean? Maybe we could leave that word out?\n. What does internal mean? Maybe we could leave that word out?\n. nit: great in value -> large\nWhy do they need to be greater than 0 to be useful?\nHow about using 1 then (first integer after 0)?\n. nit: great in value -> large\nWhy do they need to be greater than 0 to be useful?\nHow about using 1 then (first integer after 0)?\n. nit: Doesn't always create a {@link View}, it could be a ScrollView for example.\n. nit: Doesn't always create a {@link View}, it could be a ScrollView for example.\n. nit: saved with -> stored using\n. nit: saved with -> stored using\n. If any of the code above fails, will the queue promise be silently unresolved and the generate.js script continues?\nIs that desired or do you want to fail the whole script when RSS feed generation fails?\n. I see, should have just looked below, sorry!\n. Yup \ud83d\ude28 \n. Yup \ud83d\ude28 \n. Good point!\n. Good point!\n. getInstallPackage() can return \"react-native\" so better to keep --exact I think?\n. getInstallPackage() can return \"react-native\" so better to keep --exact I think?\n. Nope, I don't have a Windows machine. A contributor should implement this.\n. Nope, I don't have a Windows machine. A contributor should implement this.\n. Good to know, thanks! Wanted to be safe in case some future node versions start returning 'win64' or  something else, even though they shouldn't as that would be a breaking change.\n. Good to know, thanks! Wanted to be safe in case some future node versions start returning 'win64' or  something else, even though they shouldn't as that would be a breaking change.\n. It's not good catch!\n. Will fix this, thanks for the reminder!\n. The args is for example ['AwesomeApp', '--verbose'].\nDo you mean supporting --verbose is not needed? It was added by the community to debug when 'npm install' helps, I'd keep it.\n. Interesting, let's talk about so I understand how it should work. \nI think this PR is getting very large - can it be done as a separate commit?\n. Good point that typing \"keep\" or \"replace\" is boring. Can make it \"do you want to overwrite the file? y/n\"?\n. Good catch about ==, thanks!\nIf people make a mistake and keep files they wanted to overwrite, they can run 'react-native upgrade' again to start over.\n. Awesome, thank you!\n. I prefer to default to 'n' - overwriting the files throws away the changes people made in them.\n. nit: hasPermission\n. Why check ACCESS_FINE_LOCATION here?\n. nit: Space after ,\n. nit: Space after ,\n. Plan remove it in a separate celebratory commit :)\n. Idea: Would it make sense to call the parameter context to make it clear what should be passed in?. Idea: Would it make sense to call the parameter context to make it clear what should be passed in?. Nit: Would it make sense to use double quotes so there's no need to escape the single quotes in many places?. Nit: Would it make sense to use double quotes so there's no need to escape the single quotes in many places?. nit: \\n at the end probably not needed\nI wonder if we should start mentioning 'yarn' in error messages.. nit: \\n at the end probably not needed\nI wonder if we should start mentioning 'yarn' in error messages.. nit: I wonder if we should start mentioning yarn in error messages. \"Try running 'npm install' or yarn to fix the issue\"?. nit: I wonder if we should start mentioning yarn in error messages. \"Try running 'npm install' or yarn to fix the issue\"?. nit: No need for \"heavily\". Idea: \"react-native-git-upgrade requires git to be available in path. Please install git (https://git-scm.com)\".. nit: No need for \"heavily\". Idea: \"react-native-git-upgrade requires git to be available in path. Please install git (https://git-scm.com)\".. nit: With an existing version of what exactly?. nit: With an existing version of what exactly?. What is cliVersion? Is this the version of the CLI before the upgrade or after the upgrade? From the name itself I can't tell.. What is cliVersion? Is this the version of the CLI before the upgrade or after the upgrade? From the name itself I can't tell.. nit: Consider fetching the version from npm here rather than passing in the npmRegistryVersion, especially since it's always based on the first argument?\nexec(context, 'npm view react-native@' + (context.cliVersion || 'latest') + ' version'). You could say: \"for example 'react-native-git-upgrade --version 0.38.0'\".. nit: without arguments. nit: Empty line probably not needed since this function is quite short?. Is this for async & await? Since we'll also be merging the code in react-native-git-upgrade directly into the RN CLI we'd have to add this preset there as well, correct?\n\nDo we transpile the CLI code with Babel at all currently? If not I'd prefer to keep things simple (run it with node as-is) and would prefer to use Promises rather than async await. The code becomes a bit more verbose but hopefully not that much, chaining Promises with then?. I'm not familiar with how \"only\" works in babel-register. Could you add a comment above this line saying what it does and why it's needed please?\nDoes this enable Babel presets in react-native/local-cli/generator?. Could you add a comment for each of these lines saying what they do and why please? I'm not very familiar with Babel, and other readers of this code might not be familiar with Babel either.. Seems like we use require everywhere else in the CLI code. Could you use it please for consistency since we'll be adding this code to the CLI too? The reason to add this code to the CLI is people will just need to run 'react-native upgrade' without installing packages to get the awesome git-based upgrades.\nconst chalk = require('chalk');. nit: Remove unused @param and @returns unless you want to add docs. Looks like the function below doesn't have the opts argument.. Would it make sense to compare `code === 0` or do you expect it to be non-numeric?. What are descriptors? Is this standard npm terminology for package.json files?. What are descriptors? Is this standard npm terminology for package.json files?\n\nHow about the following? Unable to find files ${rnPakPath} and ${pakPath}. Make sure you ran .... nit: inside a React Native project. The name of project is React Native, spelled react-native only as the name of the npm package, GitHub repo etc.. Cool, looks like we already use rimraf so this won't add a new dependency to the CLI once we merge the code into the CLI: https://github.com/facebook/react-native/blob/master/package.json#L196. nit: Semicolon. Why set up these two environment variables? Do they have a special meaning for git and what is the meaning? Please add a comment.. Since you're only using the tmpDir from the context, why not only pass a string? In general a function should only ask for what it requires.. Since you're only using the tmpDir from the context, why not only pass a string? In general a function should only ask for what it requires.. Since you're only using the verbose flag from the context, why not only pass a boolean? In general a function should only ask for what it requires.. Since you're only using the generatorDir from the context, why not only pass a string?. The comment says \"try requiring\" but the code here doesn't require it - rather it checks for its existence.\nnit: Generator could mean the old generator, or the new one. Consider naming this yeomanGeneratorEntryPoint.. Only using context.generatorDir and context.appName. Making this explicit as two arguments makes it clear what this function requires to run, makes refactoring easier.. Does this work even though the file name is copyProjectTemplateAndReplace.js?. What does \"can be required twice\" mean? Can you explain a bit more in the comment please?. What is require.cache?. Is cliVersion the old or the new version? Any ideas for a name to make this immediately obvious to the reader what this variable represents?. small nit: Consider a trailing comma. This helps with 'git blame' - when people add a new line they don't have to change the last one.. nit: Write the patch to a file. Why save the patchPath into the context rather than simply creating a variable here? It will be accessible below in 'git apply'.. nit: The React Native upgrade tool. Are there any tests? If not leave this out. If there will be tests they should be using Jest as the code will be merged to the RN CLI which uses Jest for testing.. I wonder if it would be possible to simply call into the CLI using require('node_modules/react-native/upgrade') or similar and calling it. That way you might not need these few lines to use the Yeoman API directly?\nNot a big deal.. I wonder if it would be possible to simply call into the CLI using require('node_modules/react-native/upgrade') or similar and calling it. That way you might not need to declare this dependency here since react-native already depends on it?. \"Setter\" doesn't add much information.. Why '//'?. Why '//'?. Why not just:\n@[(NSString *)kUTTypeMovie];\n\nSince we're in video mode, why also enable the image media type?. Why !editText.getBlurOnSubmit()?. nit: except if the action is called twice for same user interaction. Why not name this method setAccessibilityElementsHidden?. Would it make sense to extract convertOverscrollMode(String value) (or similar name) to ReactScrollViewHelper? The three possible values are already defined there so the code would live close to them, and there would be no need to copy&paste these few lines in two places. I know it's just a bit of code but when someone's changing it (especially someone unfamiliar with the codebase) they might forget to do it in both places.. nit: Remove extra space.. nit: Two space indentation. Why do noting if self.gradientStroke.count is 0?\nWhat if self.gradientStroke is undefined or null? Will this crash?. nit: Space after (). nit: Space after (). nit: Space after (). nit: Space after :. content of the clipboard. Please remove the docs from here, and add the functions addListener and removeListener to the Clipboard class below, and there add the example with 'clipboardChanged'.\nThat way those methods will be documented properly in the docs: http://facebook.github.io/react-native/docs/clipboard.html. Why add the ctor, with comment \"do not use\"?. Will this block the ClipboardModule from being garbage collected?. Who calls this method?. Who calls this method?. Please use 2 spaces for indentation to be consistent with the rest of the codebase.. Controlled might not be the best name as this also means something else: https://facebook.github.io/react/docs/forms.html#controlled-components. Please remove extra whitespace.. Please remove extra whitespace.. nit: When WebView navigation is blocked.. nit: When WebView navigation is blocked.. This header should be at the top of the file.. spaces around +. space after //. space after //. single line. This comment doesn't add any info to the name onUrlSchemeRejected below.\nCan you please explain what \"rejected\" means?. This comment doesn't add any info to the name rejectedUrlSchemes below.\nCan you please explain what \"rejected\" means?. I'm pretty sure there's a method for this in the SDK.. nit: extra spaces. nit: Understanding the CLI. nit: Understanding the CLI. nit: exists. nit: exists. nit: says folder but links to a file. nit: says folder but links to a file. How about using link here since it's used as an example above, to keep it simple and not to confuse people?. How about using link here since it's used as an example above, to keep it simple and not to confuse people?. How about 'Command definitions'? It's not really a protocol in the sense of a communication protocol.. How about 'Command definitions'? It's not really a protocol in the sense of a communication protocol.. What does 'and import' mean here? How about 'The Local CLI', or 'Global vs local CLI'?. What does 'and import' mean here? How about 'The Local CLI', or 'Global vs local CLI'?. This adds complexity for some readers - \"if you are using\" - those who don't will need to parse and skip this sentence. Also the line number 32 could change and no one will remember to update this Tutorial.\nIMHO this would be better to document directly in the Getting Started tutorial because it will be relevant to the people reading that.. This looks like some fragile code we had here.. This looks like some fragile code we had here.. I'm not sure a regex is necessary here. I find regexes hard to read - e.g. I had to look up just now whether this means \"equals\" or \"contains\". __dirname.indexOf('node_modules') > -1  is definitely more ugly and verbose but probably more obvious?. I'm not sure a regex is necessary here. I find regexes hard to read - e.g. I had to look up just now whether this means \"equals\" or \"contains\". __dirname.indexOf('node_modules') > -1  is definitely more ugly and verbose but probably more obvious?. From the docs:\nThe path.resolve() method resolves a sequence of paths or path segments into an absolute path.\n...\nIf after processing all given path segments an absolute path has not yet been generated, the current working directory is used.\n\nThis is good but don't think very obvious to anyone reading this code. Has to look up the docs. Could you add a comment?. From the docs:\nThe path.resolve() method resolves a sequence of paths or path segments into an absolute path.\n...\nIf after processing all given path segments an absolute path has not yet been generated, the current working directory is used.\n\nThis is good but don't think very obvious to anyone reading this code. Has to look up the docs. Could you add a comment?. Use const.. Use const.. Would you find using path.relative here more readable that trimming using replace?\nhttps://nodejs.org/api/path.html#path_path_relative_from_to\nSimilar to https://github.com/facebook/react-native/blob/3aa25f79172159e3079568d0131623054916fb59/local-cli/generator/copyProjectTemplateAndReplace.js#L41. Would you find using path.relative here more readable that trimming using replace?\nhttps://nodejs.org/api/path.html#path_path_relative_from_to\nSimilar to https://github.com/facebook/react-native/blob/3aa25f79172159e3079568d0131623054916fb59/local-cli/generator/copyProjectTemplateAndReplace.js#L41. It's printed in the shell window.. It's printed in the shell window.. @ncuillery Interesting point. If npm 3 prints a warning about say react@15.4.1, and npm2 fails with an error about react@15.4.1, I would always want to run 'npm install --save react@15.4.1, because my version of React Native requires it, wouldn't it?\nWhen would I want to run a different command than 'npm install --save react@15.4.1'?. @ncuillery Interesting point. If npm 3 prints a warning about say react@15.4.1, and npm2 fails with an error about react@15.4.1, I would always want to run 'npm install --save react@15.4.1, because my version of React Native requires it, wouldn't it?\nWhen would I want to run a different command than 'npm install --save react@15.4.1'?. @NoelBroda Good idea, thanks!. @NoelBroda Good idea, thanks!. nit: Probably not required since it's not used in this file.. nit: Probably not required since it's not used in this file.. nit: You could use let here.. nit: You could use let here.. Is config.getProjectRoots() guaranteed to return an array with at least one element? What if it doesn't, or what if it starts returning undefined under some circumstances in the future? Better check for it just to be safe.\nIs this the standard way we use to get the current project dir everywhere else in the CLI, or are there other ways that might be more reliable? Is it possible that people override getProjectRoots in their config to return something else than the folder you'd actually want to use here in the isGlobalCliUsingYarn check? The projectDir here should always be something like ~/MyApp, the same folder where package.json lives, correct?\nJust asking some basic questions, I'm not familiar with how the config works.. Is config.getProjectRoots() guaranteed to return an array with at least one element? What if it doesn't, or what if it starts returning undefined under some circumstances in the future? Better check for it just to be safe.\nIs this the standard way we use to get the current project dir everywhere else in the CLI, or are there other ways that might be more reliable? Is it possible that people override getProjectRoots in their config to return something else than the folder you'd actually want to use here in the isGlobalCliUsingYarn check? The projectDir here should always be something like ~/MyApp, the same folder where package.json lives, correct?\nJust asking some basic questions, I'm not familiar with how the config works.. Here are the possible types:\nhttps://developer.apple.com/reference/uikit/uitextautocorrectiontype?language=objc\n@javache Is changing the line above to the following what you meant?\nif (textField.autocorrectionType != UITextAutocorrectionTypeNo). Some info on what \"default\" means:\n\nOne possible example of auto-correction being disabled is when\na UITextField instance (which conforms to UITextInputTraits by default)\nis used for secure entering.\n\nhttp://stackoverflow.com/questions/24309845/when-does-uitextautocorrectiontypedefault-not-result-in-autocorrection-being-ena. Some info on what \"default\" means:\nOne possible example of auto-correction being disabled is when\na UITextField instance (which conforms to UITextInputTraits by default)\nis used for secure entering.\n\nhttp://stackoverflow.com/questions/24309845/when-does-uitextautocorrectiontypedefault-not-result-in-autocorrection-being-ena. What I'm confused about: \nThe name of this function is shouldChangeCharactersInRange and based on that name I'd expect it to return a YES or NO and have no side effects. But here we override the text: textField.text = (side effect), and then return NO (note we also do that in the code below).. What I'm confused about: \nThe name of this function is shouldChangeCharactersInRange and based on that name I'd expect it to return a YES or NO and have no side effects. But here we override the text: textField.text = (side effect), and then return NO (note we also do that in the code below).. Good catch, thanks!. Good catch, thanks!. Rather than talk about deprecation of this new tool when it's announced, mention how this new hotness is going to be integrated the React Native CLI.\n(Positive wording). Rather than talk about deprecation of this new tool when it's announced, mention how this new hotness is going to be integrated the React Native CLI.\n(Positive wording). Changed the wording slightly to specify what we mean by \"User has their own runtime environment\".. Changed the wording slightly to specify what we mean by \"User has their own runtime environment\".. Kept this, just changed the wording.. Kept this, just changed the wording.. Made this a bit shorter without going to the details (leaving details for the How it works section).. Made this a bit shorter without going to the details (leaving details for the How it works section).. Explain what problem react-native-git-upgrade solves using an example, inspired by the original blogpost: https://medium.com/@ncuillery/easier-react-native-upgrades-with-rn-diff-5020b5c3de2d#.wuv996x14. Explain what problem react-native-git-upgrade solves using an example, inspired by the original blogpost: https://medium.com/@ncuillery/easier-react-native-upgrades-with-rn-diff-5020b5c3de2d#.wuv996x14. Leave out the part Git is the most popular. It probably is but I'm not 100% sure and it's not important in this blogpost.. Leave out the part Git is the most popular. It probably is but I'm not 100% sure and it's not important in this blogpost.. w00t, good catch!. If process.cwd() works and it's what the rest of the CLI uses I think it sounds good.. The word after \"no\" doesn't always have to be singular. Google returns a similar number of results for \"no argument\" and \"no arguments\".. The word after \"no\" doesn't always have to be singular. Google returns a similar number of results for \"no argument\" and \"no arguments\".. Good catch, thanks!. Good catch, thanks!. Oops, sorry I didn't explain that clearly!. Oops, sorry I didn't explain that clearly!. Nice! Thank you.. Nice! Thank you.. I believe \"make sth work\" is more common?\nhttp://www.phrasemix.com/phrases/make-something-work. I believe \"make sth work\" is more common?\nhttp://www.phrasemix.com/phrases/make-something-work. Please pass this in using the constructor rather than using a global mutable variable. You should be able to override the module in getNativeModules of your app.\nnit: extra space. Please pass this in using the constructor rather than using a global mutable variable. You should be able to override the module in getNativeModules of your app.\nnit: extra space. space before (. space before (. which leads. which leads. space before (\njs -> JS. This code is in the constructor. How do you make sure the public static field is set before the ctor runs?. This should be called renderCustomLogin, or ideally should be a small component.. This should be called renderCustomLogin, or ideally should be a small component.. Add docs. What is currentURL. What is url?. Add docs. What is currentURL. What is url?. Use const. Use const. Why is there navigationType only on iOS? What are the possible values? Add docs please.. Why is there navigationType only on iOS? What are the possible values? Add docs please.. What if sourceURL is nil?. What if sourceURL is nil?. Can request be nil?. Can request be nil?. This large block of code that deal with blocking should be extracted to a private method for readability, not inlined into shouldStartLoadWithRequest.. This large block of code that deal with blocking should be extracted to a private method for readability, not inlined into shouldStartLoadWithRequest.. WebView is spelled like this.. WebView is spelled like this.. The comment should explain why skip blocking in these cases.\nComments start with a capital letter.. The comment should explain why skip blocking in these cases.\nComments start with a capital letter.. Why change this to _event?. Is this the code moved from above? Looks like you also refactored it but from the GitHub UI I can't tell what changes you made exactly. Would be helpful to add some inline comments on this PR.. Is all this above the code that was previously in fling()? What changes did you make to it? The way it's moved and changed it's hard to tell if the code still works as before is paging is disabled (no test plan on this PR either).. nit: period. nit: built. Can this return null?. Can this return null?. This is just to fix formatting. Before:\n\nAfter:\n\n. Thanks!. The advantage of doing this is we don't need to add and maintain any native code - the Android ScrollView essentially supports scrolling to the end using the native method scrollTo that's already implemented.. options && options.animated === true evaluates to undefined when no options object is passed. This causes a crash in native because native expects a boolean. Will add an explanatory comment.. I like that the user can call scrollTo and scrollToEnd directly on the ListView though, without having to reach into its internal scroll component. It also encapsulates the functionality and we could change the implementation of these methods without breaking clients in the future.. RecyclerViewBackedScrollView is not needed anymore and deprecated.. Better verify this always works - most people will want to enable removeClippedSubviews for perf reasons. If removeClippedSubviews doesn't work our example should be broken.. Nice! Thank you. Trying to merge it again.. Didn't know it was enabled by default, thanks! I'll remove it from here then - keep it simple.. Spencer probably knows.. RecyclerViewBackedScrollView has been unused and deprecated for a long time. Messaged him just in case.. Actually we need a break or return statement here, otherwise control flow will fall-through: https://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html. Should this be called transforms now?. Does this change the public API? Now people have to pass:\n[{scale: 2}, {translateX: 10}]\nIs it the same API as before? I'm confused because the Flow type changed from Object to Array<Object> but the PR description says this is only a breaking change because of stricter validation, not an API change.\nAnd why not pass:\n{scale: 2, translateX: 10}\nI guess it's because the array defines the order of transforms?\n. We should handle the error close to the place where it occurs - either prevent it from happening or log it. Never swallow exceptions.\nPlease use 2 spaces for indentation.. What's the type of asset? Is it Image? Is it OK to use an Image object as a React key? Probably best to use its path or something else?. > Add a Signed-off-by: line to the commit message, using the committer identity of yourself.\nDo we want this and why?. Why use an older version here?. Can you please add a comment saying what a test project is?. From the docs above (line 55) it looks like this is actually the opposite? When false, the modal can't be closed by tapping outside.. Why delete them?. What about the other methods such as getAllKeys?. #sending-events-to-javascript seems to be invalid? I can't find it in the project.. Might be easier to inline all of these conditions directly into the styles below? That way there's no need to add the extra lines.. Might be easier to inline all of these conditions directly into the styles below? That way there's no need to add the extra lines.. What will this do on iOS and Android? Will it do nothing, or crash?. Consider adding a comment, when reading this code it's not obvious to me why the translation has to be subtracted.. This variable should not be called photos anymore since it's either photos or vides, correct? How about media?. Why is dataIndex needed when it wasn't needed previously. Please add a comment above this line explaining what dataIndex is and why it's needed.. nit: Space after if. space after if. Remove @Nullable from here because your code below expects it's always \"Photos\" or \"Videos\".. Validation: Throw a NPE if nullor an empty string is passed.. Remove @Nullable.. This can't be empty - correct? Otherwise the code below won't filter photos or videos. What would the method return then?. Why get rid of the EXTERNAL_CONTENT_URI here and not use MediaStore.Files.getContentUri(\"external\") like above?. What is this for?. What is this for?. What is this for?. What is this for?. This line seems to be the only change needed to achieve what's in your pull request description?. This line seems to be the only change needed to achieve what's in your pull request description?. A numeric keyboard will probably be opened regardless of secureTextEntry?. A numeric keyboard will probably be opened regardless of secureTextEntry?. Should this TODO be removed?. Should this TODO be removed?. Why is 1 a linear gradient? Can you use some constant instead or add a comment with link to docs explaining why 1 should be a linear gradient? This is very non-obvious.. Why is 1 a linear gradient? Can you use some constant instead or add a comment with link to docs explaining why 1 should be a linear gradient? This is very non-obvious.. nit: Space after for. nit: Space after for. What are these 4 variables? Add a comment explaining what they represent. Are they the coordinates of the start and end of the gradient? If yes, why not name them gradientStartX etc.?. What are these 4 variables? Add a comment explaining what they represent. Are they the coordinates of the start and end of the gradient? If yes, why not name them gradientStartX etc.?. Can you add some comment explaining what this does? People reading this code won't see the commit message from this pull request.. What if just one exists?. nit: doesIOSFolderExist, doesAndroidFolderExist. nit: in your app root directory.\nIt would also be very helpful to print the absolute path (path.resolve('app.json')) as part of the error message to make it clear what you mean by app root directory. . What's the error code? Should not be 0?. Consider explaining in this message what name and displayName are - if they are missing I get this message and want to fill them in. I understand an app needs a name but have no idea what a displayName is - is it a label displayed under the icon on my home screen? Not sure.. Exit code?. Is this { displayName: displayName }? I always get confused by this syntax.. ok nice. Should this be \"Hello World\"?. Maybe better use \"Hello World\"? Is this what's displayed on the home screen? I wouldn't get what \"Hello App Name\" means.. Should this be \"Hello World\"?. Can you revert the unrelated changes to spacing in this file please?. Can you revert the unrelated changes to spacing in this file please?. This is a breaking change. Where people passed a type in their apps, this will be now treated as the tintColor and fail. Even though type is deprecated lots of people might still be using it.. This is a breaking change. Where people passed a type in their apps, this will be now treated as the tintColor and fail. Even though type is deprecated lots of people might still be using it.. Add a copyright header please.. Add a copyright header please.. Why is this needed? Can you add a comment please?. Why is this needed? Can you add a comment please?. Why are these needed? Can you add a comment?. Why are these needed? Can you add a comment?. Used for what? Redbox? Please add a comment explaining why it's needed.. Used for what? Redbox? Please add a comment explaining why it's needed.. But why is this method needed at all? Why receive a result from an activity? What activity? The parent?. But why is this method needed at all? Why receive a result from an activity? What activity? The parent?. This looks like copy & paste? Can you extract it to a shared helper rather than copy & pasting?. This looks like copy & paste? Can you extract it to a shared helper rather than copy & pasting?. Thanks, this is a very good point. I'll add support for using templates from local folders.. Why start the packager? I thought we didn't need it?. Please make this the last entry. We now use fast_finish: true (see above). If the objc-ios test or any other test fail before the tvOS tests finishes we should cancel the tvOS test (this is because of the capacity crisis on Travis, if there was enough capacity we'd let all tests finish).. Ah cool, thanks for explaining it!. Looks like this method is unused? I don't see it called in this PR. Why would people want to disable this feature?. Looks like this method is unused? I don't see it called in this PR. Why would people want to disable this feature?. If setDevLoadingEnabled is unused this might not be needed.. If setDevLoadingEnabled is unused this might not be needed.. nit: Might be worth extracting the Color.parseColor(\"#035900\") to a private constant in this class? If people modify this file later they might forget to update the color in both places in this file.. nit: Might be worth extracting the Color.parseColor(\"#035900\") to a private constant in this class? If people modify this file later they might forget to update the color in both places in this file.. If setDevLoadingEnabled is unused this might not be needed.. If setDevLoadingEnabled is unused this might not be needed.. nit: Add a comment this is a \"...\" character. I couldn't tell what this is for when reading the code and had to look at the GIF.. nit: Add a comment this is a \"...\" character. I couldn't tell what this is for when reading the code and had to look at the GIF.. Is there some utility in OkHttp that could help with this, e.g. https://square.github.io/okhttp/3.x/okhttp/okhttp3/MultipartBody.html?\nI'm wondering if there's a need to implement multipart response parsing from scratch.. Is there some utility in OkHttp that could help with this, e.g. https://square.github.io/okhttp/3.x/okhttp/okhttp3/MultipartBody.html?\nI'm wondering if there's a need to implement multipart response parsing from scratch.. If the line separator \"\\r\\n\" also when running the packager on Mac and Linux? If yes, can you add a comment explaining why this is always the line separator on all platforms?. If the line separator \"\\r\\n\" also when running the packager on Mac and Linux? If yes, can you add a comment explaining why this is always the line separator on all platforms?. Thanks for adding this comment, very clear and helps me understand the code.. Thanks for adding this comment, very clear and helps me understand the code.. \ud83d\udc4d . \ud83d\udc4d . Why read the HTTP status then (given the comment just above)?. Why read the HTTP status then (given the comment just above)?. This can throw. Should we crash or handle the exception?. This can throw. Should we crash or handle the exception?. The packager is guaranteed to send UTF-8 strings, right? Seems fine.. The packager is guaranteed to send UTF-8 strings, right? Seems fine.. This gets displayed in the UI, right?. This gets displayed in the UI, right?. Nice!. Nice!. What is IME_NULL and why call getBlurOnSubmit? Can you please add a comment explaining what this does? That way other people reading the code will know why the code is here.. What is IME_NULL and why call getBlurOnSubmit? Can you please add a comment explaining what this does? That way other people reading the code will know why the code is here.. Is this actually needed? Do the in-app settings not work?. Is this actually needed? Do the in-app settings not work?. Hmm if it's used in the other example I'm OK with it although didn't know that keys could be objects.. Hmm if it's used in the other example I'm OK with it although didn't know that keys could be objects.. From React docs: \"A key is a string\": https://facebook.github.io/react/docs/lists-and-keys.html\nCould you use the path please just to make this 100% legit?\nThe other example might be using the key wrong.. From React docs: \"A key is a string\": https://facebook.github.io/react/docs/lists-and-keys.html\nCould you use the path please just to make this 100% legit?\nThe other example might be using the key wrong.. This should return a boolean:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Linking/Linking.js#L164. nit: Remove extra whitespace please.. nit: Remove extra whitespace please.. nit: Remove extra whitespace please.. nit: Remove extra whitespace please.. Why is this iOS only? Looks like a JS change. Does it not work on Android?. I don't understand this comment. Could you extend it please explaining how and why someone would want to use this prop?\nEDIT: I understand it now but only after reading the summary in this PR. Without it people will probably not know what this doc block means.. What do you mean by:\n\nused COARSE but not FINE permissions\n\nDoes this mean declaring them in the manifest?\n\n\"new FINE permission\" that RN sometimes triggers accidentally\n\nWhy does RN accidentally need a new permission? That seems like a bug.\n\nIf they are trying to use the GPS, but they don't have a FINE permission enabled, then pretend like we don't have a GPS\n\nHowever, if we don't have the fine permission, we may still use Geolocation, correct?\n. > There is no way to access the in app settings if the port is already in use.\nI didn't know this. Why is that?. > There is no way to access the in app settings if the port is already in use.\nI didn't know this. Why is that?. Could you add a comment please? The PR description is good but when people read the code they won't see the PR description and to me it would be very non-obvious why we subtract RESPOND_THRESHOLD here.. Could you add a comment please? The PR description is good but when people read the code they won't see the PR description and to me it would be very non-obvious why we subtract RESPOND_THRESHOLD here.. Nice trick!. Nice trick!. These are probably for AsyncStorage so we should keep them? Not sure.. These are probably for AsyncStorage so we should keep them? Not sure.. Nice trick!. Is there a tiny npm module you could use for this? Is the implementation copied from somewhere?. How are the parts used? Are they concatenated? Would be worth documenting the parts argument.. Would it make sense to throw if it's not a number?. Would it make sense to throw if it's not a number?. What are the semantics of start and end? A short doc block of what these are could be helpful.. Is end the index of the last byte, or the number of bytes? Seems common to pass a count to methods like this?. Good comment!. I'd love to keep the header here actually but probably should have the fb header :( Not sure how licensing works for RN.. I'd love to keep the header here actually but probably should have the fb header :( Not sure how licensing works for RN.. Header.. nit: Remove extra line.. What JS code is calling this? I can't find references in this PR, maybe I'm just looking wrong.. Why is it static rather than an instance variable on this module? Might be OK, just curious about the reasoning.. Are are three guaranteed to be present? If not, please add error handling.. Why remove it? From the name of this method it looks like it should just return the data.. This module holds static data and has public static methods called by the ContentProvider. What if the module is not included in the app?. nit: Please keep the 2 spaces indentation in this file.. What if they are not strings? Is that an expected state or an error? If it's an error consider logging an error rather than failing silently.. OK makes sense to include it in all open source apps by default - this adds just very little to app size (it has no huge extra dependencies) even if people don't use it but we do that for all \"standard\" modules already.. Is this a mapping from websocket id to boolean? Could you add a comment please? Same with variable above. Probably one comment for both is sufficient.. I'm wondering if this can cause OOMs quite easily if the data is large. But the blob does have to be copied and held in memory probably anyway... Why are blobs not automatically enabled for any web socket if the data type is \"binary\"?. This means data type can be \"binary\" but blobs can be disabled for this websocket so we pass all the data to JS as a huge Base64 string. Is there still any use case for this Base64 encoding of binary data once this PR lands? If we remove it it's a breaking change. But other than that, can blobs replace the API in all cases?\nWhy are blobs not automatically enabled when data type is \"binary\".. In any app that doesn't use the MainReactPackage but declares its own completely custom set of modules, e.g. Instagram. Actually any app should be declaring its own set of modules because of app size but in open source we allow people to be lazy and include everything. Also that way it works with Expo and OTA - no need to update native code to add some features in JS.\nBut I think it's OK, people using their own custom set of modules will include the BlobModule if they want to use blobs.. Thanks!. If fetching images should not be affected by the HTTP provider from MainPackageConfig we should document the MainPackageConfig only affects the fetch API.\nIt's probably easier, however, to just use the HTTP client configured in MainPackageConfig also here (for fetching images) to avoid confusion.. Just a stylistic thing but I could you make this into a Javadoc please?. Also the method should be private - it's not used anywhere outside this class. I see it was public and just moved - so it was wrong previously but now is a good opportunity to make it private.. nit: Please name this variable e - another opportunity to fix existing code a bit.. This should be Flog.e(ReactConstants.TAG, \"Error while enabling TLS 1.2\", e); so it's easy to see all React Native related messages in logcat.\nAgain I realise this is just moved code but good opportunity for minor fixes.. nit: Empty line not really needed.. Yes good idea - makes the API clearer to users.. I agree with both. Maybe httpClientProvider.. minor nit: No need for comma before \"that\".. IMHO mHttpClientProvider would be as clear as it's shorter.. Should be @Nullable.. Awesome, thanks for adding this! \ud83d\udcaf . OK sounds good, someone else can do that separately and we can keep this pull request simpler.. nit: The following method enables it. -> This method enables it.. Small nit but this should be @Nullable right?. nit: Wording:\nAllows to provide a custom OkHttp client provider that will be used for networking calls from JavaScript (especially the fetch API). This can be useful for example in hybrid apps which have their own OkHttp client configured with custom headers, logging, etc.\nThis does not configure the networking client the Image JavaScript component uses when fetching images.. ",
    "colinramsay": "I'm going to link to the StackOverflow answer I gave you here:\nhttp://stackoverflow.com/a/29301756/125680\nAnd my blog post on the same thing:\nhttp://colinramsay.co.uk/2015/03/27/react-native-simple-native-module.html\nI think this is a straightforward approach that probably gives you more flexibility than actually having __dirname anyway.\n. Looks like the conversion just checks for a hash (#) and then assumes it'll be a six-character string:\nhttps://github.com/facebook/react-native/blob/master/React/Base/RCTConvert.m#L360\nShould be fairly easy to add a length check in there too and behave accordingly.\n. Do you have something else running on port 8081? The packager needs that to be free so it can do its thing.\n. With new data? Or with the same data? If with the same data, why do you need to redraw it?\nHelp us help you - we need more detail here!\n. I wonder if this is related to the default value of scrollRenderAheadDistance:\nhttp://facebook.github.io/react-native/docs/listview.html#scrollrenderaheaddistance\nIt defaults to 2000 pixels unless you override it and with 15 rows it might not go above that and so will render everything when you scroll? This is just a guess but it might be worth tweaking the props for this component to see if you can affect this behaviour.\n. I wonder if this is related to the default value of scrollRenderAheadDistance:\nhttp://facebook.github.io/react-native/docs/listview.html#scrollrenderaheaddistance\nIt defaults to 2000 pixels unless you override it and with 15 rows it might not go above that and so will render everything when you scroll? This is just a guess but it might be worth tweaking the props for this component to see if you can affect this behaviour.\n. This is the same issue as this one on Stack Overflow that seems to have multiple potential solutions:\nhttp://stackoverflow.com/questions/29287987/\nSuggest giving each of those a go and commenting/voting on the one (if any) that works for you.\n. This is the same issue as this one on Stack Overflow that seems to have multiple potential solutions:\nhttp://stackoverflow.com/questions/29287987/\nSuggest giving each of those a go and commenting/voting on the one (if any) that works for you.\n. I believe the answer is NO :disappointed: \nPossible duplicate of: #121 ?\n. Which is open source and available for improvement!\n. I haven't tried it, and it's pretty clunky, but could you now use the new html prop to pass in a script tag to WebView?\n. It came up from this question on SO:\nhttp://stackoverflow.com/questions/29380265/does-react-native-support-base64-encoded-images\nI think it's one of those things that's expected to just work.\n. That's interesting. I'm 90% certain I tried this without NSTimer though and just calling the method from AppDelegate though and it didn't work. Could it be something to do with starting it all up in AppDelegate rather than the timer?\nOn Sun, Apr 5, 2015 at 7:21 PM, Brent Vatne notifications@github.com\nwrote:\n\n@colinramsay - this appears to be an issue with using NSTimer, I'll look into it further - I was able to get a single notification through in your example by moving the initialization out of AppDelegate, exporting the startSending function and calling it from JS:\n``` objc\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender\n@synthesize bridge = _bridge;\n- (void)doSomeSending:(NSTimer *)timer\n{\n    RCT_EXPORT();\n    NSLog(@\"Doing some sending\");\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n}\n-(void)startSending\n{\n    RCT_EXPORT();\n    NSLog(@\"Start sending!\");\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n    [NSTimer scheduledTimerWithTimeInterval:1.0f\n                                     target:self selector:@selector(doSomeSending:) userInfo:nil repeats:YES];\n}\n@end\n```\njavascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Animation,\n  Text,\n  TouchableHighlight,\n  View,\n  DeviceEventEmitter,\n  AlertIOS,\n} = React;\nvar EventSender = require('NativeModules').EventSender;\nvar WebViewApp = React.createClass({\n    componentDidMount() {\n        console.log('Mounted');\n        var subscription = DeviceEventEmitter.addListener(\n            'MyCustomEvent',\n            (info) => { AlertIOS.alert('Incoming!') }\n        );\n        EventSender.startSending();\n    },\n    componentDidUmnount() {\n      subscription.remove();\n    },\n    render() {\n        return <Text style={{backgroundColor: 'white', padding: 20}}>hi</Text>\n    }\n});\nAppRegistry.registerComponent('RCTTest', () => WebViewApp);\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/681#issuecomment-89825952\n. Is that to do with NSTimer specifically or my initial approach of setting all up in AppDelagate do you think? Like many new RN developers I'm a very average Obj-C person :)\n\nOn Sun, Apr 5, 2015 at 8:33 PM, Brent Vatne notifications@github.com\nwrote:\n\n@colinramsay - this works, sending a message every 5 seconds:\n``` objc\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender {\n  id _timer;\n  int _delay;\n  NSDate *_prevRun;\n}\n@synthesize bridge = _bridge;\n- (void)update\n{\n  if (_prevRun != nil) {\n    int interval = (int) [[NSDate date] timeIntervalSinceDate: _prevRun];\n    NSLog(@\"Time since: %d\", interval);\n  }\n  if (_prevRun == nil || ((int) [[NSDate date] timeIntervalSinceDate: _prevRun]) >= _delay) {\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n    _prevRun = [NSDate date];\n  }\n}\n-(void)startSending\n{\n    RCT_EXPORT();\n    NSLog(@\"Start sending!\");\n    _delay = 5;\n    _prevRun = nil;\n    _timer = [CADisplayLink displayLinkWithTarget:self selector:@selector(update)];\n    [_timer addToRunLoop:[NSRunLoop mainRunLoop] forMode:NSDefaultRunLoopMode];\n}\n-(void)stopSending\n{\n  [_timer invalidate];\n}\n@end\n```\n``` objc\n// EventSender.h\nimport \"RCTBridgeModule.h\"\n@interface EventSender : NSObject\n- (void)update;\n- (void)startSending;\n@end\n```\njavascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Animation,\n  Text,\n  TouchableHighlight,\n  View,\n  DeviceEventEmitter,\n  AlertIOS,\n} = React;\nvar EventSender = require('NativeModules').EventSender;\nvar WebViewApp = React.createClass({\n    componentDidMount() {\n        console.log('Mounted');\n        var subscription = DeviceEventEmitter.addListener(\n            'MyCustomEvent',\n            (info) => { AlertIOS.alert('Incoming!') }\n        );\n        EventSender.startSending();\n    },\n    componentDidUmnount() {\n      subscription.remove();\n    },\n    render() {\n        return <Text style={{backgroundColor: 'white', padding: 20}}>hi</Text>\n    }\n});\nAppRegistry.registerComponent('RCTTest', () => WebViewApp);\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/681#issuecomment-89838303\n. Cool! I'm just glad it didn't turn out to be an obvious mistake on my part!\n\nOn Sun, Apr 5, 2015 at 9:21 PM, Brent Vatne notifications@github.com\nwrote:\n\n@colinramsay - I'm not entirely sure, my Obj-C skills are only a couple of weeks old so I pinged a couple of more experienced people in the last comment ;)\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/681#issuecomment-89846785\n. Update! This code allows the original version to work:\n\n```\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender\n@synthesize bridge = _bridge;\n\n\n(id)allocWithZone:(NSZone ) zone\n{\n    static EventSender sharedInstance = nil;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        sharedInstance = [super allocWithZone:zone];\n    });\n    return sharedInstance;\n}\n\n\n(void)doSomeSending:(NSTimer *)timer\n{\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n}\n\n\n-(void)startSending\n{\n    [NSTimer scheduledTimerWithTimeInterval:1.0f\n                                     target:self selector:@selector(doSomeSending:) userInfo:nil repeats:YES];\n}\n@end\n```\nMy understanding is that this makes the class a singleton; the question remains as to whether this is something that's necessary because NSTimer is being used. \n. Update! This code allows the original version to work:\n```\n// EventSender.m\nimport \"EventSender.h\"\nimport \"RCTBridge.h\"\nimport \"RCTEventDispatcher.h\"\n@implementation EventSender\n@synthesize bridge = _bridge;\n\n\n(id)allocWithZone:(NSZone ) zone\n{\n    static EventSender sharedInstance = nil;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        sharedInstance = [super allocWithZone:zone];\n    });\n    return sharedInstance;\n}\n\n\n(void)doSomeSending:(NSTimer *)timer\n{\n    [self.bridge.eventDispatcher sendDeviceEventWithName:@\"MyCustomEvent\" body:@{@\"name\": @\"eventName\"}];\n}\n\n\n-(void)startSending\n{\n    [NSTimer scheduledTimerWithTimeInterval:1.0f\n                                     target:self selector:@selector(doSomeSending:) userInfo:nil repeats:YES];\n}\n@end\n```\nMy understanding is that this makes the class a singleton; the question remains as to whether this is something that's necessary because NSTimer is being used. \n. In AppDelegate.m, after the RCTRootView alloc, you can set initialProperties:\nrootView.initialProperties = myNSDictionary;\n. I generated a new app which is running 0.3.7 and I see this too. This works:\n```\nvar issue749 = React.createClass({\n    getInitialState() {\n        return {\n            score: 0\n        }\n    },\ncomponentDidMount() {\n\n    this.setState({\n        score: 6\n    })\n\n},\n\nrender() {\n    return (\n        <View>\n            <Text style={styles.label}>{this.state.score}</Text>\n        </View>\n    );\n}\n\n});\n```\nHowever this doesn't - it causes a crash:\n```\nvar issue749 = React.createClass({\n    getInitialState() {\n        return {\n            score: 0\n        }\n    },\ncomponentDidMount() {\n\n    setInterval(() => {\n        this.setState({\n            score: 6\n        });\n    }, 500);\n\n\n},\n\nrender() {\n    return (\n        <View>\n            <Text style={styles.label}>{this.state.score}</Text>\n        </View>\n    );\n}\n\n});\n```\n. Splendid, thanks!\nOn Fri, Apr 10, 2015 at 10:38 PM, Brent Vatne notifications@github.com\nwrote:\n\n@colinramsay - fixed in #801\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/793#issuecomment-91699287\n. The old approach doesn't seem to work, I tried it myself yesterday with the same result.\u00a0\n\nhttp://stackoverflow.com/q/29552377/125680\nOn Sat, Apr 11, 2015 at 9:08 AM, Nick Lockwood notifications@github.com\nwrote:\n\n@lwansbrough I understand that this is frustrating, and we'll try to do better, particularly with the docs updates.\nRelease notes are problematic due to the way that fixes are landed internally and then pushed to github in batches. Again, we're actively working to improve that process.\nI would like to reassure you that there is some method to the madness though. We're aware that breaking changes are painful, and we'll do our best to a) avoid making them, and b) when we do make them, ensure that we break things in an obvious way, rather than having things silently fail.\nFor example, in the change to module registration, we left the class scanning feature enabled in debug mode, purely so we could detect modules that have not yet been converted, and provide a useful error message.\nSimilarly, for the RCT_EXPORT -> RCT_EXPORT_METHOD change, we've left in full support for the old system so that you can make the upgrades at your convenience instead of immediately breaking the apps.\nI'm pretty happy with the technical approach we've taken here, but we'll try to improve on the communication and documentation side too.\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/793#issuecomment-91793758\n. This question was asked on SO too: \n\nhttp://stackoverflow.com/questions/29426537/what-is-unknown-in-react-native/29439395#29439395\nI speculated (and I'm not 100% certain) that it might be due to text nodes in your code, specifically white space like tabs and newlines. Please see this issue from the react dev tools:\nhttps://github.com/facebook/react-devtools/issues/44\nThere are several such issues on the devtools tracker, sometimes related to a lack of displayName on components but I don't see how that applies here.\nIn my SO answer I said that it might be worth opening an issue on this as I don't think it's desirable behaviour. The person from SO never did (or at least I can't find it) so if this is a bug then it might get picked up here.\n. Looks like a possible dupe of the issue discussed in #749 so you might just have to update React Native.\n. Could just add it as another prop I guess.\u00a0\nMy only issue is that I don't think baseURL makes sense without the HTML prop, just in the same way I think it would be good to require the HTML prop OR the URL prop. I'm not sure React supports this kind of \"dependent\" prop validation?\nOn Tue, Mar 31, 2015 at 6:02 PM, Spencer Ahrens notifications@github.com\nwrote:\n\n\n@@ -73,6 +73,11 @@ - (void)setURL:(NSURL *)URL\n   [_webView loadRequest:[NSURLRequest requestWithURL:URL]];\n }\n+- (void)setHTML:(NSString *)HTML\n+{\n-  [_webView loadHTMLString:HTML baseURL:nil];\n  Thoughts on baseURL support in the future?\n\nReply to this email directly or view it on GitHub:\n  https://github.com/facebook/react-native/pull/542/files#r27499311\n. \n\n",
    "bakso": "Thank you very much, but I want to get current script's dirname, and I didn't understand your method\n. Where is the script path?I cannot find it\n. I want to download or load some online scripts to execute, so I need to know the script root path and how can I download and execute in it\n. And I am very curious because I cannot find out where ReactNative framework puts our scripts and how them being executed ?\n. Yes I want to do something that not allowed by App Store\n. @sahrens Thank u ,are u the core team member of RN ?\n. I get you!That's awesome!\nIt' s very nice of you, my English is such poor and sorry for that.\n. I wanna do this\n. Where\n. Production use, because my product managers hope publish every week\n. Help!Help!\n. Wei shen me  the me zuo\n. Help!Help!\n. I don't know\n. No, actually I don't want to use a webview.\nReact Native allows js to call native ui components, what I want to do is opposite, which depends the ability of native code embeding a component declared and written in jsx side.\n. Sorry, my initial question is such an asshole...\nExactly what I want to do is embed a defined-in-jsx view within the Objective-C code.The defined-in-jsx view's logics maybe is independent and it is just contained in a uiview.\nI imagine this can help separate the frequently changed business from the permanent business, which is like webview do in the app store app.\n. One word is how to embed a written-in-jsx-native-view into a written-in-objc-view?\n. OK, I see see...\n. That's awesome!\nI desire this feature for a long time!\n. That's awesome!\nI desire this feature for a long time!\n. You can just write a node.js static server to archieve it: https://github.com/koajs/static, you can use a nginx server too.\nBefore you upload your scripts to the static file folder of server, you have to combine the scripts into one bundle file first: \ncurl -4 http://localhost:8081/Examples/2048/Game2048.includeRequire.runModule.bundle -o main.jsbundle\nAnd then you access the script bundle through the online url, just modify the AppDelegate.m file.\n. So we can embed the js-bundle in the app when being submitted to review, and when published, we can download some new js-bunlde in the background, then we don't need to submit for review any more.\n. This is awesome!\u9177\u6bd9\u4e86\n. Yes, please\n. Watch\n. Watch \n. I have a good idea\n. A pull request would be appreciate \n. Watch\n. Maybe \n. Watch\n. Could you describe more detail information ?\n. I don't need a changlog\n. Sorry I don't know\n. Doc no good\n. Yeah, a little puzzle\n. Congratulations !\n. How to get the cookie in client?\n. I guest you should create a model view and place a navigator on it\n. watch\n. It's an awesome job! A pull request would be appreciated!\n. But how to add the popular menu dynamic?\n. I wonder know too.\n. help! help!\n. In MainController.m, I set a ReactRootView instance as a root view, and I have a navigation Controller already in objective-c side:\nobjective-c\nUIViewController *myViewController = [[MyViewController alloc] init];\nnavigationController = [[UINavigationController alloc]\n                                initWithRootViewController:myViewController];\nwindow = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\nwindow.rootViewController = navigationController;\nRCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                    moduleName: @\"SimpleApp\"\n                                                 launchOptions:nil];\nmyViewController.view = rootView;\n[window makeKeyAndVisible];\nIn jsx:\n``` jsx\nrender: function() {\n  return (\n    \n  );\n},\n...\nthis.props.navigator.push(nextRoute); \n```\nMy question is, can I get the navigator in the js side?\n. ",
    "urvashi01": "I am facing similar problems. 'keyboardWillOpenTo' remains null throughtout the lifetime, preventing the Scroll Responder from calculating the y offset to scroll to. Any updates on how to go about this?\n. ",
    "zahhakrnch": "Indeed\n. ",
    "pjjanak": "Forgot to make a branch and ended up adding in some extra docs to this PR too...however their getting rendered depends on the original commit (03a562f). Just an FYI about the second and third commits.\n. Also, I did complete the CLA.\n. Would be resolve by PR #360 \n. @tadeuzagallo @vjeux Names are easy to fix. Just lemme know. It's all ViewPort in the code right now (as you can see).\n. @ericvicenti Would it make sense to re-implement what I've got here and add some Listeners like in NetInfo? I imagine that we could make the emitter let us know if orientation or sizing changes.\nOr would that just make more work for the eventual overhaul? \nOr, alternatively, would it make sense to make a separate npm package for this? I'm hesitant since it seems like Dimensions is sort of an internal API that you were intentionally leaving unexposed.\n. @ericvicenti I think I've got something together that conforms to that API. I've got some more work to do on it tomorrow to make sure everything works, but I could'nt use NativeModules.UIManager.Dimensions as that's just a NSDictionary of values. So I am writing RCTDimensionManager.\nWe'll see how it goes.\n. @ericvicenti, How's this look for a first pass at this? I'm listening for when the device emits an orientation change and then firing off the new dimensions to any listeners. Figured I'd just add that even for now to see what you thought before digging into all instances where the dimensions might change.\nLet me know what you think.\n. @ericvicenti I swapped out that method for the callback paradigm so you can get up to date information from that method now. And for the time being it's just orientation changes. I'd need to figure out what other events to listen to for sizing updates. But I figured I'd get something going first before I went down that path to make sure I was headed in the right direction.\n. @vjeux, @nicklockwood \nViewport it is. I had been changing it all to be that anway.\nAs per what is actual being measured, I am currently using the actual [UIScreen mainScreen].applicationFrame. As I understand it this measures only the area which your application is allowed to take up. I took that to mean the Viewport as it is the space available to your whole app, not just individual components (which would be a whole different beast).\nThis size does not take into account the notification pane being opened or keyboards or anything of the sort because those don't affect the application's available space. The content still renders beneath them as expected.\nThis could attach itself to the RCTRootView instead of the applicationFrame, but I don't think that's exactly right. If anything there should probably be two things here. One, which is something like what I'm making here, would only tell you about the space available to your application. Another could then be the space available to components within any particular view. Trying to cram them  both into one utility could be difficult and confusing for users.\nLet me know what you guys think.\n. So I feel like the direction we're heading in with this topic is to have the contents of this PR (or something like them) to get viewport dimensions and updates and then a second PR which would deal with listening for changes to RCTRootView.\nDoes that make sense?\nWhat other considerations might we want to put in place with the current Viewport implementation/does it do a useful job?\nThoughts?\n. After talking in the IRC chat I've decided to move the contents of this PR into an npm module. As a result I'm going to close this guy out. Thanks for all the feedback guys!\n. Dups #292 \n. This duplicates #383, FYI.\n. Try giving your NavigatorIOS a style of flex=1:\n...\n<NavigatorIOS\n    ref=\"nav\"\n    style={{\n        flex:1,\n    }}\n   initialRoute={{\n       ...\n   }}\n/>\n...\n. Oh, that would make things much easier for implementation.\n. I'll change, but 'all ready' is a real thing! 'already' is just a bastardization! haha\n. I had it like that at first but it wouldn't compile. frameSize.width/height are floats and apparently you can't put floats in an NSDictionary. So I had to convert them to NSNumbers.\n. Was just basing it off of AppState's handlers. If I can remove it without issue I will. \n. Derp...will do.\n. Ah, gotcha. I'll switch that out then.\n. ",
    "hansonw": "Looks good to me! Leaving the rest to you, @vjeux.\n. ",
    "fnky": "It just seems weird to me to substitute width with flex for things like progressbars, sliders, etc.\u2014this makes it not so trivial to reuse components on the web that uses percentage-based values for dynamic behaviors.\n. ",
    "despairblue": "Also this won't work for images. \n. Nope, to be honest I've never developed for iOS.\n. Adding libicucore.dylib did fix it. Thanks, and sorry for taking that long, I'm not used to getting responses that quickly :smile: \n. @brentvatne I just found the this solution only works if flex: 1 is apllied to the view immediately beneath the one where flexDirection: 'row' is being applied to.\nExample: https://rnplay.org/apps/B8mUMw\nIf one removes the second view or applies flex: 1 to it it works, otherwise it won't.\nIs this intended behaviour? \n. @brentvatne right, it's a contrived example, by not using row in the first place this does not happen, but let's assume I need to use row because I want to do something like @michalraska. I've updated the example above and made a drawing to elaborate on it: \n\nIt seems in row 1 the view with the question mark simply keeps growing to the right, thus the containing view never wraps. That's what I meant by the view immediately beneath the one where flexDirection: 'row' is applied needs to have flexDirection: 'column' applied. Knowing this it's perfectly fine to avoid it, though finding this out took me some time, I just wonder if this is intended behaviour?\n. Nevermind, the iOS Simulator was unable to start any app. Restarting the simulator fixed it.\n. ",
    "a-botermans": "+1 this would really make styling components so much easier.\n. ",
    "tommcgurl": "This would definitely be nice to have for images as @despairblue mentioned. +1\n. Thanks @brentvatne, I'll definitely check that out :+1: \n. ",
    "jakeboone02": "Thanks.  Closing this one in favor of #543.\n. ",
    "Kureev": "If somebody is interested, I can also add setNavigationBarHidden\n. @dengjiuhong you're welcome! Hope this small PR will be accepted :)\n. Adding flag --assetRoots solved my issue:\nbash\n\"scripts\": {\n  \"start\": \"node_modules/react-native/packager/packager.sh --root=./ --assetRoots=./iOS/Images.xcassets\"\n}\n. It's totally insane: my iPhone 5c crashes after 700 list items. If I'm going to write a chat - it's blocking for me.\nAlso I got a lot of \"Cannot find single active touch\"\n. It's totally insane: my iPhone 5c crashes after 700 list items. If I'm going to write a chat - it's blocking for me.\nAlso I got a lot of \"Cannot find single active touch\"\n. Okay, it's good to know that it's comming :)\n. @ericvicenti Thanks for your feedback! Yeah, I have a use-case for that: for example, I created a navbar component I wanna use with Navigator. As far as I'm not sure how navigationBar property supposed to work (position at the bottom in the render stack is really confusing me. I don't wanna add position: absolute, top: 0, left: 0 to every view). You can check the stub I made in my component to support this. Probably, it's a good idea to expose getRouteStack()-like endpoint as third parameter for renderScene?\n. Is it going to be merged some day?\n. @khanghoang Okay, I'm not sure that I understood your question correctly, but if I did, then you can use something like this:\njavascript\nvar SideMenu = <SideMenu .../>;\nand use SideMenu wherever you want. Also as @vjeux said, it's possible to do it with refs. There's a good article about it.\nP.S. You don't need to use AppRegistry for your child components. This object is only for the main entry point in your application.\n. @khanghoang the best way to solve it in your case - use context, but it hasn't been introduced yet. \nUPD: But you can check this amaizing article about it.\n. :+1: I tried to implement custom component with backgroundColor and I always got it overriden by white color. How and why? I'm not passing any style attribute to the component.\n. :+1: I tried to implement custom component with backgroundColor and I always got it overriden by white color. How and why? I'm not passing any style attribute to the component.\n. @kocyigityunus it'll help, if you'll migrate from NavigatorIOS to basic Navigator. You'll be able to build your own view with navbar and position it however you want. Then, you'll just need to make an overlay and implement your modal (or use very nice react-native-modal as has been mentioned before). Let me know if you'll have any issues with that.\n. There is a nice plugin for that. Of course if you want, you can use <Navigator> and configure each route \"by hand\" (but as you mentioned, it's about <Navigator> and you don't want it).\n. I'm not sure, but it seems you're trying to re-create the same route, when you need to pass exactly the same route (otherwise it couldn't be found in the stack). So maybe storing a link to the route object and using it may help.\nP.S. It's just a suggestion, not sure.\n. Yeah, I got your case. Could you provide gist with example or smth?\n. javascript\nif(this.state.runNext) {\n  this.props.navigator.popToRoute({\n    component: require('./c'),\n    sceneConfig: Navigator.SceneConfigs.FloatFromRight,\n  });\n}\nDoesn't work?\n. can we also stick to the current style rules? (e.g. { on the same line). Then I believe the diff would be a way more tiny.\n. :laughing: \n. Maybe we don't need a \"reopen\" here?\n. Oh, right \ud83d\ude0a \n. There should be no callback (it's Sync):\njs\ntry {\n  fs.accessSync(mainApplicationPath, fs.F_OK);\n} catch (e) {\n  //...error\n}\n//...success\n. I'd rename it from MainActivity/MainApplication to something more generic like mainFilePath or whatever is better. Don't like the idea of having mainApplicationPath along with mainActivityPath.\n. nit: maybe direct assign would fit better?\njs\nlet mainFilePath = path.join(...);\n. nit: space between { and AppRegistry.\nI'd rather add AppRegistry in the places where it's used (it's not used in the code snippet where you added it)\n. for link - yes, for unlink it's mandatory\n. Why not\njs\nwhile (fs.lstatSync(nextSymlink).isSymbolicLink()) {...}\n?\n. Will be really great if we can throw an error with the whole sequence that leads to the recursion. Like \"Symlink recursion detected: A -> B -> C -> B\"\n. Can you explain this assignment to me?\n. js\nmanager.add('some-package') // translates to `yarn add some-package` with yarn & `npm install some-package --save` with npm. and init manager with \njs\nconst manager = new Manager({engine: isYarnInstalled ? 'yarn' : 'npm'});. What's the purpose of this extra flag? I believe it's possible to check sectionHeaderIndices length instead. something like \njs\nif (sectionHeaderIndices.length) {\n  stickyHeaderIndices.concat(sectionHeaderIndices);\n}\nDoes it make any sense?. I just checked the code (sorry for not doing it before writing my previous comment): it seems you can flag stickySectionHeadersEnabled (as @satya164 suggested) on line 419 and increment an index only if it's enabled. Then 479-484 won't be needed.. Thanks for the helpful insight, @nihgwu. It seems you knows more about this issue. I saw the last update on the followup PR has been made 28 days ago. Is there any work in progress?. AFAIK it's ../server/findSymlinksPaths. Can you please double-check if your code works, @harshil07?. Ah, I see. Missed this line. IIRC it'll be inlined automatically by JSXTransform/worker/inline.js script. Sorry, for some reason thought you return result of this call. No idea why \ud83d\ude10 . Based on what I see as an outcome of new File([\"\"], \"\");, lastModified is set to Date.now() by default. So if I understand this code correctly, if newState is DONE, you always dispatch two events: load and loadend. Is it a correct behavour?. I was also thinking about rewriting the way we inject dependencies to gradle files (it is quite corky now). Although, this implies writing a parser for gradle files which is a bit too much for me. If I'd work on this full time, I'd say it'll take me a couple of weeks to make it properly, so I doubt if it will be worth it. At the same moment of time I completely agree about multiple targets. \nAre you aware of any projects that are capable of constructing / traversing an AST for a Podfile?. Mmm, that will only work if this name isn't re-used anywhere else. IIRC, we use it in many places, so we need to have a consistent name across different functions. As a compromise, we can introduce a new function, something like sanitizeName or similar that only transforms a given dependency name into a version that will be understandable by Grade and other parts of the react-native link.. ",
    "dengjiuhong": "it's useful for us, thanks kureev!\n. ",
    "markthethomas": "Yeah, had a major \"doh\" moment after posting. But superagent and most browser friendly modules should work, no?\n. ",
    "chetstone": "I'm having this issue trying to require fluxxor. After doing npm install fluxxor\n\n. ",
    "arthuralee": "Yep. Thanks for the code reference. I've submitted a potential fix at #455.\n. Pull request merged internally.\n. Trailing commas are optional, and there doesn't seem to be consistency across the repo. I wonder what the preferred style is?\n. Trailing commas are optional, and there doesn't seem to be consistency across the repo. I wonder what the preferred style is?\n. Ignore the mention of a fix above - it was wrong.\nIt seems like react-native-cli needs to be updated. It doesn't come straight from the repo so I guess it got out of sync in light of recent changes to the paths. \nhttps://www.npmjs.com/package/react-native-cli\ncc @spicyj as he was the last one who updated it.\n. Nevermind! Wrong fix.\n. I got confused and I thought the issue was with react-native-cli. Glad it's fixed though!\n. I see. Makes sense!\n. window gets assigned here: https://github.com/facebook/react-native/blob/master/Libraries/JavaScriptAppEngine/Initialization/InitializeJavaScriptAppEngine.js#L33\nTracing back, the code above is triggered by calling require('react-native'), so not being able to window.React = require('react-native') makes sense. But it seems like window should be available after requiring require('react-native').\nFrom what I've seen, global seems to be preferred over window, but I could be wrong.\n. I just tried it in Chrome and it seems to work. I think the global variable is available at the highest level (index.ios.bundle).\n. ~~The DatePicker~~ Both problems seem to be related to #749, #756 \n. Have a feeling it's related to #749 \n. @romanonthego I gave your idea a try at #851!\n. Thanks @drkibitz, took your suggestion.\n. I've updated the patch. It now uses ReactPackager and does not need the server running.\nSome todos:\n- [ ] Take care of ulimit problem (Is this only a problem on some computers? Mine seems to be unlimited and I don't remember ever changing it)\n- [ ] Add a command to choose platform (blacklist)\n- [ ] Add a command line argument for output path\n. Thanks @frantic, sounds good. I've added error handling to fs.writeFile. \nMaybe we should address the ulimit problem in a separate issue. I can open one if there isn't one yet.\n. Makes sense, updated. I also updated the website docs.\n. Great to see this merged! Will look into e2e tests. :)\n. Good point. It's already been merged so its available on master, but not on @latest/@0.4.0 which is what people will get over npm install. Maybe at some point we'll need to versioning in the documentation...\n. Thanks @romanonthego. I will look into this today. There have been a lot of new changes since this has been merged, so it might have broken something. Looks like I should've gone into e2e tests earlier! In the meantime, feel free to create an open issue for this.\nAs far as I know, @latest installs the latest tagged version, which is currently 0.4.1.\n. @romanonthego I could not repro the error. I tested both an empty project and an existing project. To further verify this, the file in question (/node_modules/react-native/node_modules/react-tools/src/browser/ui/dom/ViewportMetrics.js) seems to be bundled correctly and in main.jsbundle. Could you perhaps produce a minimal example of the bug?\n. This issue is already being tracked at #415 \n. Sounds like a good compromise. I initially brought this up because of issues like #1027. @sahrens' suggestion wouldn't fix those issues, but not being able to publish \"bug fixes\" of the doc is quite a significant tradeoff.\nWould be happy to work on this over the next week :)\n. +1. Related to #930?\n. I don't think this is possible at the moment, but it seems like it's something that could be added to RCTWebView pretty easily.\n. I agree that the docs on the site should reflect whats on npm. We do, however, lose the ability to make quick bugfixes to the documentation, as discussed in #1022. I still think a version picker would be very useful in the long term. However, for now, we could just have links to stable, RC, and maybe master.\nYes, the site is generated as @jaredly mentioned, and Travis runs the script (see https://github.com/facebook/react-native/blob/master/.travis.yml#L39-L49). Right now, publish.sh seems to clear out the site and regenerate it. As a starting point we could checkout the latest stable and RC and generate those into subfolders.\n. Good catch! I was actually debating build vs bundle\n. Good catch! I was actually debating build vs bundle\n. ",
    "csarsam": "@mkonicek Great, thank you!\n. ",
    "naoufal": "@roman01la Try killing your terminal.\n. @nicklockwood Have you had a chance to work on this? If not, any chance you can share your solution so that we can modify @jparishy's PR?\n. Thanks for the update @nicklockwood.  Does that imply that other transform functions would land in the solution you're exploring?\n. I'm actually still getting errors after using the jestSupport/package.json setup.  But it seems to be because I'm requiring a React component in my jest test.\nI haven't seen any of the tests in this repo do that yet, so I'm assuming it isn't supported yet.  \n@amasad can you confirm?\n. @brentvatne I'd be glad to help if you guys think the approach here is satisfactory. naoufal/react-native-progress-hud#1\n. Sure \u2014 I'll try and submit a PR tomorrow.\n. @brentvatne PR submitted #1477.  Can you review/leave feedback?\n. ",
    "RobinQu": "+1 \nI started my project using CocoaPod and manually started the packager.\n``\nRobinQus-iMac:GrimmLaundryApp robin$ (JS_DIR=pwd`/ReactComponent; cd Pods/React; npm run start -- --root $JS_DIR)\n\nreact-native@0.3.11 start /Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/Pods/React\n./packager/packager.sh --root /Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/ReactComponent\n\n===============================================================\n |  Running packager on port 8081.     \n |  Keep this packager running while developing on any JS       \n |  projects. Feel free to close this tab and run your own    \n |  packager instance if you prefer.                            \n |                                                            \n |     https://github.com/facebook/react-native               \n |                                                            \n ===============================================================\nLooking for JS files in\n   /Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/Pods/React\n   /Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/ReactComponent \nReact packager ready.\nflow: No suitable root\n{ [NotFoundError: Cannot find entry file index.ios.js in any of the roots: [\"/Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/Pods/React\",\"/Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/ReactComponent\"]]\n  message: 'Cannot find entry file index.ios.js in any of the roots: [\"/Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/Pods/React\",\"/Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/ReactComponent\"]',\n  name: 'NotFoundError',\n  type: 'NotFoundError',\n  status: 404,\n  errors: \n   [ { description: undefined,\n       filename: undefined,\n       lineNumber: undefined } ] }\n[2:44:23 PM]  request:/index.ios.bundle\n[2:44:23 PM]  find dependencies\n^CRobinQus-iMac:GrimmLaundryApp robin$ ls /Volumes/Workspace/Projects/GrimmLaundry/pico/GrimmLaundryApp/ReactCompont\nindex.io.js\n```\nHowever, the packager is working all right with projects created with CLI tool.\n. ",
    "mikedriver": "Didn't notice that getAllResponseHeaders() should return a string.  According to MDN it should also return null if no headers rather than a blank string.  However I left it as a blank string instead because I noticed that the fetch library is doing xhr.getAllResponseHeaders().trim().split('\\n')  which would otherwise throw.\n. ",
    "crockeo": "@vjeux any update on merging this pull request?\n. ",
    "leecade": ":+1: \n. :+1: \n. yes, need a way to Style for TabBarIOS / TabBarIOS.Item\nI trid icon={require('image!icon')} not works\n. yes, need a way to Style for TabBarIOS / TabBarIOS.Item\nI trid icon={require('image!icon')} not works\n. ok thanks @iamdustan \n. hi, @sahrens\nThere is a example, maybe re-render by key cause flickering, not sure.\n``` jsx\n'use strict'\nvar React = require('react-native')\nvar {\n  AppRegistry,\n  ScrollView,\n  View,\n  Text,\n  StyleSheet,\n  Image,\n} = React\nvar test = React.createClass({\ngetInitialState() {\n    return {\n      i: 1\n    }\n  },\ncomponentDidMount() {\n    var that = this\n    setInterval(function () {\n      that.setState({\n        i: that.state.i + 1\n      })\n    }, 500)\n  },\nrender() {\n    var content = \n    return (\n      \n{content}\n\n    )\n  }\n})\nAppRegistry.registerComponent('swiper', () => test)\n``\n. thanks @sahrens I see,key` cause a overall refresh\n. :+1: \n. ",
    "jgable": "Does this just work for import blah from 'blah';?  Would it work for all the proper import syntaxes?\n. I've also had a hard time getting some modules to work.  I was able to get lodash to work by using the lodash-node version. But, things like Backbone are not.\nIt looks like the packager thinks the exported function is a factory for creating the module, but the factory (in lodash) is not actually detecting a node environment and instead the export ends up being undefined.\nI'll keep digging in the bundle and report if I find anything useful.\n. It looks like, at least in the case of backbone (and probably regular underscore/lodash), that it checks for a define && define.amd to determine whether to use AMD versus commonJS style exports.\nWhy does the packager set define.amd if it's preferring commonJS exports?  Is it just because that's what the polyfill had initially?  Can we remove that?\nI guess, the follow up question would be, if we do allow AMD style defines, why aren't they working for lodash, et. al.\n. @nicinabox The lodash-node package on npm should work for you without making a custom build; at least it has for me so far.  npm install lodash-node --save and then var _ = require('lodash-node');.\n. When I comment out this define.amd = {} I am able to load lodash and backbone (well, backbone is a little trickier because it depends on underscore) without a problem.\n. Updated to remove references of global.define and _register('define', define).  \nStill works in my app, and the jests pass.  Totally legit test plan right?\n. I had a feeling something with static_upstream was gonna eff this up.  It looks like you are doing some custom stuff in your define method that the rest of the AMD world doesn't do.  Also, the npm modules would call that define function from different path roots that you would have to keep track of.\nIt seems like a huge pain to support proper define usage for npm modules.  In the meantime, this fix would allow a great swatch of npm modules to be used as expected.\n. On a whim, I messed around with seeing if the NodeDependencyResolver would work, but it looks like it's a non-starter.  It doesn't export a class that the createDependencyResolver function is expecting.  Even after hacking it into a class there is another error, not sure that it's a fruitful path.\n. :+1: thanks for verifying and closing, you're awesome.\n. ",
    "jhdxr": "@amasad , is there any possibility to execute another js in main.jsbundle now? \n. ",
    "revskill10": "I've edited liks this:\n```\n// admob.js\n'use strict';\nvar createNative = require('createReactIOSNativeComponentClass');\nmodule.exports = createNative({\n    validAttributes: {adUnitID: \"ca...},\n    uiViewClassName: 'GADBannerView'\n})\n// GADBannerViewManager.m\n- (UIView)view\n{\n    GADBannerView bannerView = [[GADBannerView alloc].....\n    UIViewController rootViewController = [UIAPplication sharedApplication].delegate.window.rootViewController;\n    bannerView.rootViewController = rootViewController;\n    GADRequest request = [GADRequest request];\n    request.testDevices = ...\n    [bannerView loadRequest:request];\n    return bannerView;\n}\nRCT_EXPORT_VIEW_PROPERTY(adUnitID, NSString)\n```\nand finally, use the admob module in index.ios.js:\nvar GADBannerView = require('./admob');\nvar AdmobTest = React.createClass({\n    render: function(){\n        <GADBannerView adUnitID=\"ca....\" />\n    }\n}\nWhen running, the debugger doesn't make any admob request, and nothing to show.\nWhat's wrong here?\n. Ref is used to reference child component.\nSo if your SideMenu is used as a child component, it can be accessed by parent by ref.\n. As far as i know, you don't need to register child component. You just need to require('SideMenu') to use it.\nRead more about here: https://facebook.github.io/react/docs/more-about-refs.html\n. The strange thing is there is no code at all! I just put an TextInput to render:\n<View><TextInput /></View>\nand it throws that error.\nTested on my simulator: iPhone 5.\nThank you for quick response.\n. Yes, it's a new project created with react-native init. I use version 0.3.1 of react-native. My code use bridge module, but in fact, i just test to render a TextInput before using anything special, and i got that error.\n. Hi, i put the gist at TextInput bug\nThere is an external module here but it's not important.\n. Hm, i really don't understand what's going on here. If i remove that TextInput, the project runs fine. If i put it in, it shows error (specifically to the TextInput component). Thank you for support. I will try to get through.\n. I put the project here: https://github.com/checkraiser/onlineetymology.\nFirstly, download GoogleAdmobSDK and link to project.\nTo test, please create sqlite with table ety, 3 columns Id, origin and definition. Both are string types.\nLink the ety.db with Xcode and see.\nThank you for taking time with me.\n. Yes, you're free to design your application any way you want. I 've written an article here to show how to integrate ReactView as a subview:\nhttps://github.com/checkraiser/beginning-react-native\n. As @JohnyDays  said, in React, you should change your View based on your current State.\n. Yes, i still not try, but i think you can wrap your view into a Custom View, then use the property subView.hidden=YES in your View Manager.\nGood luck.\n. Jest uses contextify, i install jest with npm install -g jest-cli . How to run the test with react-native ?\n. Please upgrade Nodejs and npm to use the latest React Native.\n. ",
    "powerje": "I think I just realized that react-native itself is different from react-native-cli.. I will see myself out.\n. Ah I see, that makes sense! Thanks for the explanation :)\n. ",
    "svdoever": "Hi @amasad, I created a project as follows:\nreact-native init ReactNativeTypescriptSourcemapIssue\nThen I go into the folder:\ncd ReactNativeTypescriptSourcemapIssue\nNow create a simple typescript file TestClass.ts that can be compiled as a commonjs module:\nclass TestClass {\n  doit(): string {\n    return \"Hello world!\";\n  }\n}\nexport=TestClass\nNow compile this file as follows, without sourcemap information:\ntsc --module commonjs TestClass.ts\nThis results in a JavaScript file TestClass.js:\nvar TestClass = (function () {\n    function TestClass() {\n    }\n    TestClass.prototype.doit = function () {\n        return \"Hello world!\";\n    };\n    return TestClass;\n})();\nmodule.exports = TestClass;\nReference this file in index.io.js:\n/*\n     * Sample React Native App\n     * https://github.com/facebook/react-native\n     /\n    'use strict';\n```\nvar React = require('react-native');\nvar TestClass = require(\"./TestClass\"); // Require\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar ReactNativeTypescriptSourcemapIssue = React.createClass({\n  render: function() {\n    var testClass = new TestClass(); // Usage\n    return (\n      \n\n          Welcome to React Native and say: {testClass.doit()}\n        \n\n          To get started, edit index.ios.js{'\\n'}\n          Press Cmd+R to reload\n        \n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n  },\n});\nAppRegistry.registerComponent('ReactNativeTypescriptSourcemapIssue', () => ReactNativeTypescriptSourcemapIssue);\n```\nThis results into a working app:\n\nNow compile the TypeScript file with sourcemap information:\ntsc --module commonjs --sourcemap TestClass.ts\nThis results in a JavaScript file TestClass.js:\nvar TestClass = (function () {\n    function TestClass() {\n    }\n    TestClass.prototype.doit = function () {\n        return \"Hello world!\";\n    };\n    return TestClass;\n})();\nmodule.exports = TestClass;\n//# sourceMappingURL=TestClass.js.map\nThe result is an app with the following error:\n\nWhere can I find the generated bundle?\n. I don't think so too:-) No problem, I can live without it (for now). Is there a way to include generators like TypeScript or CoffeeScrip into the auto-build process, or is this something that should be handled by custom build scripts (grunt, gulp), or the often built-in watch commands of the compilers (tsc -watch ...)?\n. Good news, timing is no problem, it all works if we don't use sourcemap with TypeScript. TypeScript is easy enough to read in compiled form. Good luck with all the work!\n. ",
    "Thegaram": "I'd also like to use Typescript for React Native (with sourcemaps). As far as I understand, the solution recommended by @amasad is to create a new transformer that returns a map property and pass it to the packager. Is there a way to use sourcemaps generated prior to starting the packager?\n@svdoever Could you please share the solution you ended up using?\n. ",
    "qimingweng": "@amasad How do we make sure we pass the .map property? I'm not sure which interface this is talking about.\n. ",
    "hfutrell": "@amasad I am working with Typescript and have found some success with a custom transformer based on work in the boot-react-native project. But I've encountered a few problems. \n1. The first issue, which boot-react-native also ran into, is that once you return the .map property for a module, RN starts to expect that property for all modules. It is not clear to me what the custom transformer should return for the map property when no source map is available. But if it simply calls into the built-in transformer implementation then Google Chrome will error parsing the source maps. How do we arrive at the default RN behavior for files for which we do not have source maps?\n2. the built-in transformer transforms the source code using babel. We need this because we do not babelify during our typescript compilation. However, if we call into the default transformer implementation it is not clear to me how to pass our source maps so that they are composed correctly with those generated by babel.  \nHere is my code snippet for a test project that uses a single typescript file for its iOS index index.ios.tsx that has an accompanying source map in index.ios.js.map.\n``` javascript\nconst fs = require('fs');\nconst transformer = require('react-native/packager/transformer');\nmodule.exports = function (data, callback) {\n    if (data.sourceCode && data.filename.indexOf('index.ios.js') > -1) {\n            fs.readFile('index.ios.js.map', function (err, map) {\n                    var sourceMap = JSON.parse(map.toString());\n                    sourceMap.sourceRoot = './';\n                    sourceMap.moduleName = ['index.ios.tsx']\n                    var results = { code: data.sourceCode, map: sourceMap };\n                    callback(null, results); // no babelify :(\n        });\n    } else {\n        var cb = function(err, mod) {\n            // callback wrapping to pass fake source map needed or Google Chrome will fail to parse source maps\n            mod.map = getBasicSourceMap(data.filename, mod.code);\n            return callback(err,  mod);\n        };\n        transformer(data, cb);\n    }\n};\n```\n. ",
    "frogcjn": "@hfutrell \nAlso refer to these two issues\nhttps://github.com/Microsoft/vscode-react-native/issues/240\nhttps://github.com/facebook/react-native/issues/7083\n. @hfutrell, @scttnlsn\nHere is my post to explain how to debug ReactNative project in VSCode with typescript:\nmake_VSCode_debug_RN_TS.md\n\n. @webzepter\nYou can just skip the steps on Problem 3 and 4 \nmake_VSCode_debug_RN_TS.md\nI think you just need a .babelrc file with sourceMaps set to true in your ReactNative project.\n. ",
    "mhzed": "Take a look at this:\nhttps://github.com/mhzed/react-native-sm-transformer\n. ",
    "SergeyKorochansky": "@frogcjn could you please provide instructions for non-VSCode environment?\n. ",
    "olegdeezus": "Hi, @alloy! Can you explain how to use this solution?\n. Thanks! I'll try it later.. @alloy, okay. Do you added a PR to react-native repo? I want to vote for =). ",
    "tptee": ":+1: sendDeviceEventWithName works for me as well\n. :+1: sendDeviceEventWithName works for me as well\n. Cool, thanks for the heads-up!\n\nOn Mar 29, 2015, at 6:15 PM, Spencer Ahrens notifications@github.com wrote:\nSocketRocket is only needed for debugging - you shouldn't have to include it in your final app submission if you run into any issues with this. \n\nOn Mar 29, 2015, at 3:01 PM, Tyler Paul Thompson notifications@github.com wrote:\nThere's reports on SocketRocket's repo that the _connect method in SocketRocket resembles a private API method and doesn't pass iTunes Connect validation:r\nsquare/SocketRocket#226\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/459#issuecomment-87487758.\n. :+1: this is the last thing blocking my WebSockets native extension: https://github.com/tptee/RCTWebSocket\n\n\nThis'll help distribution/CocoaPods interop immensely.\n. https://github.com/facebook/react-native/pull/982 is done, which is awesome, but I'm not sure frameworks  work yet. When CocoaPods builds a framework, it spits all of the project's headers into one folder, and a few headers in React Native reference relative paths. This breaks clang modules, which CocoaPods framework support depends on. So while we can write extensions in Swift, we can't deliver them in a clean way yet :/\n. \ud83d\udc4d\n. As of 0.4.1 I can successfully build a framework linked to React with the new Swift export macros. However, when I import the framework module into a React Native app target, I get the following:\nClass WebSocketManager was not exported. Did you forget to use RCT_EXPORT_MODULE()?\nAny ideas? Looks like RCT_EXTERN_MODULE didn't export the class from the framework correctly.\n. Cool, thanks for the update!\n\nOn Apr 29, 2015, at 7:47 PM, Nick Lockwood notifications@github.com wrote:\nThat's correct, we still don't support modules linked from dynamic libraries yet. That's coming soon.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/579#issuecomment-97615511.\n. Hi, author of RCTWebSocket here. I didn't originally see the library as a polyfill, but would be more than happy to write a wrapper that overrides window.WebSocket according to spec. I'm using the Starscream library as a POC for Swift code in native extensions, but it's likely more trouble than it's worth for now. Starscream has a sister library in Objective-C we could use. I'd consider SocketRocket once https://github.com/square/SocketRocket/issues/226 is resolved.\n\nOf course, the whole project won't work until https://github.com/facebook/react-native/issues/579 gets resolved. It'd be even more interesting if we could export functions without a macro to enable Swift support...\n. Hi, author of RCTWebSocket here. I didn't originally see the library as a polyfill, but would be more than happy to write a wrapper that overrides window.WebSocket according to spec. I'm using the Starscream library as a POC for Swift code in native extensions, but it's likely more trouble than it's worth for now. Starscream has a sister library in Objective-C we could use. I'd consider SocketRocket once https://github.com/square/SocketRocket/issues/226 is resolved.\nOf course, the whole project won't work until https://github.com/facebook/react-native/issues/579 gets resolved. It'd be even more interesting if we could export functions without a macro to enable Swift support...\n. @vjeux Could react-native link use CocoaPods under the covers for the native code?\n. @vjeux Could react-native link use CocoaPods under the covers for the native code?\n. Looks like I've got a new project :)\n\nOn Apr 10, 2015, at 1:13 PM, Christopher Chedeau notifications@github.com wrote:\n@tptee https://github.com/tptee the idea has been thrown around yeah. Right now we know the ideal vision but the specifics are up in the air. Also, no one at Facebook is actively working on this, we're kind of hoping that someone from the community will make something that works great :)\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/619#issuecomment-91624949.\n. Looks like I've got a new project :)\nOn Apr 10, 2015, at 1:13 PM, Christopher Chedeau notifications@github.com wrote:\n@tptee https://github.com/tptee the idea has been thrown around yeah. Right now we know the ideal vision but the specifics are up in the air. Also, no one at Facebook is actively working on this, we're kind of hoping that someone from the community will make something that works great :)\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/619#issuecomment-91624949.\n. Do these changes resolve https://github.com/facebook/react-native/issues/579 in any way?\n. Beautiful. Closing!\n. :+1: super excited for this\n. \n",
    "vitch": "Seems like #918 is a fix so you can still RCTAppEventEmitter but for now I'm also using the DeviceEventEmitter. It would be good to know what the purpose of the two separate emitters is meant to be...\n. Seems like #918 is a fix so you can still RCTAppEventEmitter but for now I'm also using the DeviceEventEmitter. It would be good to know what the purpose of the two separate emitters is meant to be...\n. Thanks for this - I need this functionality as well. In my app I additionally need thumbTintColor and am happy to add it in the same way (is it useful to somehow add it to this pull request?)...\nThe only question I would have is whether these values should be exposed via CSS (as they seem more style related)...\nAlso, is this likely to be merged into React Native? I can patch my local version but am just wondering what will happen in future updates...\n. Thanks for the quick responses :smile: \nI'm just looking into setting the thumbTintColor but it seems there is a bit of a weird bug in iOS regarding this property. If I can get the workaround to work then I'll submit a PR...\n. The workaround works if I set it to an actual image in my Images.xcassets e.g. \n[slider setThumbImage:[UIImage imageNamed:@\"BackArrow\"] forState:UIControlStateNormal];\nSo it seems the problem is related to slider.currentThumbImage not returning a valid image...\n. The workaround works if I set it to an actual image in my Images.xcassets e.g. \n[slider setThumbImage:[UIImage imageNamed:@\"BackArrow\"] forState:UIControlStateNormal];\nSo it seems the problem is related to slider.currentThumbImage not returning a valid image...\n. (ignore this message - I got it wrong!)\n\nAnd after a bit more digging it is timing related. If I return to a view then the thumbTintColor is set correctly. So I guess we are initially accessing slider.currentThumbImage too early in its lifecycle before it has been set...\n. (ignore this message - I got it wrong!)\nAnd after a bit more digging it is timing related. If I return to a view then the thumbTintColor is set correctly. So I guess we are initially accessing slider.currentThumbImage too early in its lifecycle before it has been set...\n. Thanks for the comment @brentvatne but I'm not sure I understand.\n\nThe problem isn't with when the user sets the value, it's seems to be within UIKit - as shown in this SO post. \nThe issue I had with timing is that the workaround suggested in that post doesn't seem to work for me (see aff48abd8c5f6b4b11c33c0db5bdedd74fb9d5da) - my guess is that this is because slider.currentThumbImage isn't initialised at the time view is called but I'm a complete beginner at Objective C so I may be off the mark...\n. Thanks for the comment @brentvatne but I'm not sure I understand.\nThe problem isn't with when the user sets the value, it's seems to be within UIKit - as shown in this SO post. \nThe issue I had with timing is that the workaround suggested in that post doesn't seem to work for me (see aff48abd8c5f6b4b11c33c0db5bdedd74fb9d5da) - my guess is that this is because slider.currentThumbImage isn't initialised at the time view is called but I'm a complete beginner at Objective C so I may be off the mark...\n. I've just run into the same problem. Any ETA on when the refactored code will land?\nAlso, #1025 can probably be closed along with this?\n. ",
    "watsonwu9": "sendDeviceEventWithName works for me too. thanks\n. sendDeviceEventWithName works for me too. thanks\n. @christopherdro that fixed my error. thanks!\n. @jasongonzales23  fixed my problem. thx\n. I had the same issue even after flow upgrade.\nthe error msg is \nflow: Error running command cd \"/Users/IAN/Desktop/yiqixie/yiqixie\" && flow --json --timeout 20:\n{\"status\":500,\"message\":\"Flow found type errors.  If you think these are wrong, make sure your flow bin and .flowconfig are up to date, or disable with --skipflow.\",\"type\":\"FlowError\",\"errors\":[{\"description\":\"E1: invariant\\nDuplicate module provider\",\"filename\":\"/Users/IAN/Desktop/yiqixie/yiqixie/node_modules/react-native/node_modules/react-tools/src/vendor/core/invariant.js\",\"lineNumber\":0,\"column\":0},{\"description\":\"  E1: current provider\",\"filename\":\"/Users/IAN/Desktop/yiqixie/yiqixie/node_modules/flux/lib/invariant.js\",\"lineNumber\":0,\"column\":0\n. @lelandrichardson on thanks. Yes, the overlapping issue might where the problem lies. But I did add a \nmarginTop value and nothing there.\n\n\n. i also post the question at http://stackoverflow.com/questions/29884741/react-native-senddeviceevent-not-working-in-appdelegate\nthx!\n. @jaygarcia ,can you be more specific? i am a newbie in react native.\n. @jaygarcia \nthis is my appDelegate.m file. I have changed (BOOL)application:(UIApplication *)application handleOpenURL: and OpenURL methods and move all data processing methods into the weixinLogin\nManager.m file. \n\n\n\n\n\n.  @nicklockwood hi, man. to make flow clear, I have moved all data processing methods to the weixinLoginManager.m file. And what strikes me is that\nif i call -(void)SendDataToJS from RCT_EXPORT_METHOD(sendAuthReqToWX) method [_bridge.eventDispatcher sendDeviceEventWithName executes and the data did pass to \njs; all are doing great.\nif i call -(void)SendDataToJS from -(void) onResp:(BaseResp*)resp ( a 3rd party API callback delegate method provided by wechat). the [_bridge.eventDispatcher sendDeviceEventWithName: method is not responding and nothing passes to the js.\n\n. @nicklockwood thx! \nAs you said,how can i  have a reference to the bridge somewhere in your app delegate? \nShould I set up the reference in the WeixinLoginManager.m file?\n. @nicklockwood Should I set it up? it is a library file provided by react-native... what should i do with it?\nsorry I am very newbie into react native.\n\n. @nicklockwood \uff0cit works! Many thanks!\n. ",
    "mjohnston": "react-native-webpack-server basically fronts the react-native packager with webpack. The react-native code is complied with the built-in React packager, and your app code is compiled with webpack. There's a simple build phase that combines the 2 and concats source maps. The nice thing about this setup is that it opens the door for things like react hot loader.\nOne thing that might be worth exploring for react-native is concat'ing source maps for code from an external complier (babel, typescript, etc.). I think a fairly common use case is people who want to reuse some of their existing code in a react native app, but that code requires transforms not currently supported by jstransform (let/const and property initializers come to mind).\n. Sounds good @amasad. I'll try and stay in the loop with regards to the packager.\nI imagine that once react packager supports custom transformers (or when you switch to babel) that will satisfy the majority of webpack users.\n. Sounds good @amasad. I'll try and stay in the loop with regards to the packager.\nI imagine that once react packager supports custom transformers (or when you switch to babel) that will satisfy the majority of webpack users.\n. @amccloud I believe you're talking about the example project which excludes node_modules from the babel loader in the webpack config. It's there in the example so babel doesn't spend time processing all of your npm installed packages, but you can either remove the exclude directive or add an include for your sources plus the ES6 modules you have installed.\n. @amccloud Moving the discussion over to https://github.com/mjohnston/react-native-webpack-server/issues/13\n. ",
    "luosong": "I use iPhone 6 plus.\nStep\uff1a\n1\u3001Clone UIExplorer source code .\n2\u3001Build & run app in my IP6.\n3\u3001Run CameraRollExample keep drag up & drag down many times.\n4\u3001You will see memory keep increase, sometime up 200M !\n. ",
    "bluemsn": "@luosong I use simulator \u3010iphone6\u3011, and also get crash , the memory keep 120MB. \n. +1 , @danicomas  I also found the problem. and did you fix it  ?\n. @amasad Thanks for you answer ~ but  since you last answer already more than a month has passed?  Did you had  solved ?\n. ",
    "stevenpetryk": "To add to this, if one goes into Exoskeleton's source, and adds the following (at the top of the file, starting at line 10):\n``` js\n(function(root, factory) {\n  // Set up Backbone appropriately for the environment.\n  if (typeof define === 'function' && define.amd) {\nconsole.log('Using AMD'); // <----------------- ADD THIS\n\ndefine(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n  root.Backbone = root.Exoskeleton = factory(root, exports, _, $);\n});\n\n} else if (typeof exports !== 'undefined') {\n    var , $;\n    try { _ = require('underscore'); } catch(e) { }\n    try { $ = require('jquery'); } catch(e) { }\n    factory(root, exports, , $);\n  } else {\n    root.Backbone = root.Exoskeleton = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n```\nYou will see Using AMD! logged to the console.\n. ",
    "NovaDev94": "This also happens with lodash. Using the same test method by @stevenpetryk. Insert console.log('Using AMD'); to line 11776 of lodash/index.js:\n``` javascript\n  // Export lodash.\n  var _ = runInContext();\n// Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    console.log('Using AMD');\n``\n. I think it's probably related to https://github.com/facebook/react-native/issues/406\n. I can't get it work withlodash` too.\nvar _ = require('lodash'); and var lodash = require('lodash'); both return an empty object.\nTake a look at the bundle file generated by packager, the code for lodash is there.\n. We don't have the tests for require polyfill at the moment, afaik. And I\nalso think that it's necessary to make a test for that case.\nOn Monday, March 30, 2015, Jacob Gable notifications@github.com wrote:\n\nUpdated to remove references of global.define and _register('define',\ndefine).\nStill works in my app, and the jests pass. Totally legit test plan right?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/427#issuecomment-87474424.\n\n\nRegards,\nTruong Ngoc Dai\n. Maybe it's about 64-bit architecture, if that then it's related to: #448 \nSome images for this, the shadows is rendered fine on 4s, 5 but not 5s and 6:\n\n\n\n\n. The problem is the shadow properties only work on old devices, not the new\nones.\nOn Monday, March 30, 2015, Spencer Ahrens notifications@github.com wrote:\n\nOur GPU fill-rate gating was only for some specific product code, and was\nno longer necessary after we switched to assets for shadows instead of the\nlayer properties. There shouldn't be anything in the infra intentionally\ndisabling shadows, probably just some sort of bug - cc @a2, @nicklockwood\nThat said, I would recommend using assets instead of the shadow properties\nin general - they tend to perform much better on older devices.\n\nOn Mar 29, 2015, at 12:27 PM, Oisin Lavery notifications@github.com\n<javascript:_e(%7B%7D,'cvml','notifications@github.com');> wrote:\nShadow is NOT visible on iPhone 6\nShadow is visible on:\niPhone 5 Simulator\niPad Retina Simulator\niPad 2 Simulator\nShadow is NOT visible on\niPhone 5s Simulator\niPhone 6 Simulator\niPhone 6+ Simulator\niPad Air Simulator\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/449#issuecomment-87484660\n.\n\n\nRegards,\nTruong Ngoc Dai\n. ",
    "ryanflorence": "js\n        <TextInput\n          style={styles.input}\n          value={this.state.inputValue}\n          controlled={true}\n          onChangeText={(text) => this.setState({ inputValue: text })}\n          onSubmitEditing={this.handleSubmitEditing.bind(this)}\n        />\nI've got that, and it works, but it is a really, really, really terrible ux.\n\nIf you really want this to behave as a controlled component, you can set this true, but you will probably see flickering, dropped keystrokes, and/or laggy typing, depending on how you process onChange events.\n\nhttp://facebook.github.io/react-native/docs/textinput.html#controlled\nHow else can I process an onChange event?\n. huh ... I closed the chrome debugger and now the UI is nice and responsive, where before it dropped characters and flickered a lot.\n. oh, turns out removing controlled is what fixed it, not the debugger, I didn't realize I'd removed it, sorry for the noise :)\n. ",
    "martco": "Mine shows full-view. I had to add a latitude and longitude props. I also am just rendering the MapView without its parent. My MapView has the container styles.\n. Cool thanks. I was able to build to device (I think), but I didn't know about cmd+d twice in the simulator. Would you happen to know how that works on device?\n. It had to do a with a firewall issue. I was blocking access to my laptop from other devices. Thanks!\n. I am having so much fun :+1: \n. I'll take a stab at it.\n. @mjw56 @chrisalexander55 you, sirs, are gentlemen and scholars\n. @ide:\nI see it in my libraries and in my Link Binary With Libraries:\n\n\nIs the red text supposed to tell me something?\n. I'm an idiot. I was linking in the build phase of RCTAnimationExperimental, not of my app target. thanks @ide!\n. @spicyj yes but it still grows, not shrinks. I thought it was because I absolutely positioned the node, but I removed that and it still doesn't work.\n. @ide  thanks!@!!! i was able to change the bgColor, can I change it to my image, instead? Can you point me to how to do that? thanks you're awesome@!\n. self.window.rootViewController.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@\"Splash.png\"]];\n. I'm so happy right now, thanks @ide!!\n. @brentvatne thanks, that explains it. \n. ",
    "antonshevchenko": "@martco Thanks! Remove the <View> fixed it.\n. ",
    "orta": "This is totally reasonable then :+1: \n. Nope, I'm inside a project container folder /Users/orta/spiel/ios \n. I do, how strange, thanks for the explanation. I'm still extremely new to using NPM, thanks for the patient walk though :+1: \n. After a rm -rf node_modules and a re-run of npm install -g react-native-cli I got it working perfectly:\n~/s/ios  $ react-native\nYou did not pass any commands, did you mean to run `react-native init`?\n. ( done )\n. ",
    "nicinabox": "I had to use the lodash-cli to build a node version for React: lodash exports=node\n. I think it's been deprecated though.\n. Np. I'll send a PR with those references updated as well.\n. That works!\n. :+1: Thanks guys\n. @jeroenbourgois navigationBarHidden is a prop on NavigatorIOS itself. Passing it in push won't work because those are options for the route. I'm not sure about setting it like this.props.navigator.navigationBarHidden = false.\n. I have this issue with 0.5.0 when including lodash. One of my dependencies uses an older version (2.4.1) and I have 3.9.3 in node_modules/lodash. Using require('lodash') the older version gets included. The intended version was unrecognized unless I specified require('lodash/index') or a specific module from it.\n. :boom: items:(id)items does the trick. Thanks for the tip @nicklockwood!\n. ",
    "OlivierFortin": "I have the same issue with async,\nvar async = require('async');\nconsole.log(_);// {}\n. ",
    "oaleynik": "@vjeux Chrome Canary works for me like a charm\n. @brentvatne I'm able to reproduce this issue when Live Reload is enabled. Here is some steps to reproduce:\n1. Build and run app in emulator\n2. Enable live reload\n3. Enable debugging with Chrome (doesn't matter will it be latest stable release or Chrome Canary)\n4. Change something in the source code and save\n. ",
    "allenhartwig": "@sahrens starting packager.sh with --root does work. @amasad thoughts on starting packager with npm run start -- <project dir>  rather than npm start and have package.sh relay the parameter as --root to packager.js? This way nothing is inferred and allows react-native's location to be completely independent of the app project.\n. I've resolved this issue by creating a start.sh file in my app root, changing my package.json in my app root to utilize it for npm start and in start.sh I have the following:\nbash\nTHIS_DIR=$(dirname \"$0\")\nnode_modules/react-native/packager/packager.sh --root $THIS_DIR\n. ",
    "mikehuebner": "Also, figured out that the issue is with the component item within the NavigatorIOS item.\nI fixed the issue I was having by putting a component with the NavigatorIOS tag, it can be anything. I was lost trying to figure this out by just having a Navigator with no View. It needs an inner view to exist in order to work? If that sounds right someone tell me. \nHere is my code:\n```\nvar MainView = require('./MainView');\n...\nrender: function() {\n    return (\n      \n    );\n  }\nMAINVIEW ITEM\nvar MainView = React.createClass({\n  render: function() {\n    return (\n      \n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js{'\\n'}\n          Press Cmd+R to reload\n        \n\n    );\n  }\n});\n```\nand of course some module.exports to get the component where the navigatorIOS tag is.\n. ",
    "wangii": "not being able to enable shadow with stylesheet settings:\njavascript\n        shadowOffset:{\n            width: 10,\n            height: 10,\n        },\n        shadowColor: 'black',\n        shadowOpacity: 1.0,\nanything missing in above code?\n. @oisinlavery could you shade some light?\n. forget it. it appears to be a bug in iOS simulator 5s and above that setShadowOpacity not processed.\n. as far as I get, setShadowOpacity not working inside of RCTSetProperty on iPhone simulator running iPhone 5s, iPhone 6, and iPhone 6 plus, probably due to the fact that the type of shadowOpacity is float instead of CGFloat, according to CALayer doc\n. Is it related to rowHasChanged? \n. assume each of your item has unique id:\nrowHasChanged:(r1, r2)=> r1.item.id !== r2.item.id\n. ",
    "oisinlavery": "Those shadow settings seem to only apply to Text elements right now.\n. My mistake! This is working as described. Here is precise documentation: \nhttp://facebook.github.io/react-native/docs/view.html#style\n. Shadow is NOT visible on iPhone 6\nShadow is visible on:\n- iPhone 5 Simulator\n- iPad Retina Simulator\n- iPad 2 Simulator\nShadow is NOT visible on\n- iPhone 5s Simulator\n- iPhone 6 Simulator\n- iPhone 6+ Simulator\n- iPad Air Simulator\n. ",
    "erikthedeveloper": ":+1: I've also been trying to find a work around for this in the meantime (i.e. something along the lines of onFocus={this._slideViewUpToShowInputElement(refName)}\n. Update :expressionless: should have updated before submitting, but updating react-native from 0.3.1 -> 0.3.4 resolved the returnKeyType issue.\nBefore update: returnKeyType property had no effect on the iOS keyboard.\nNow: it does :smile:\njavascript\n          <TextInput\n            // ...\n            returnKeyType='go'\n          />\n. I would love to take a stab at it, but I'm not convinced I'm quite up to the task of a PR into react-native core :sweat_smile: \nI'll be very interested to check out your work if you get a PR submitted @brentvatne :smile: \n. ",
    "bpeters": ":+1: \n. ",
    "ziyadparekh": ":+1: \n. ",
    "wangzhe1995": "@stirman how do you do , can show me show source\n. I have a good solution of http://stackoverflow.com/questions/29313244/how-to-auto-slide-the-window-out-from-behind-keyboard-when-textinput-has-focus\n. I have a good solution of http://stackoverflow.com/questions/29313244/how-to-auto-slide-the-window-out-from-behind-keyboard-when-textinput-has-focus\n. i have sample problem with u , and when i change the tarbar, the navigationbar title can't change\n. you will set width and height\n. @imochen The problem here is obviously not like this\uff0cIf the picture is not in Images.xcassets which then displays an error, instead of not displaying an error\n. but i can i get viewport size and content size ?\n. ",
    "alejomendoza": "It would be awesome to see a component/example of a messaging view where the keyboard slides up with the input field.  :+1: \n. Can't find a way to make the ListView component work well pulling data from Firebase javascript client. \nHere's what I'm trying to create:\n- Add data when the scroll reaches the bottom (infinite scroll functionality should be pretty easy to do)\nHere's how I'm doing it:\n- On componentDidMount call function that fetches the data. (./app/components/tabviews/home/homefeed.js)\n- I use blackbird to return a promise with data returned from Firebase.\n- When data gets returned setState for dataSource using cloneWithRows(data).\nSo far I was able to display some of the rows, in the first call the promise returns 50 items but only 25 rows are displayed. I can't reach the bottom! If someone wants to help me it would be great because I've pulling my hair out to make this work. Thank you!\nhttps://vid.me/SEYQ\nHere's my code:\nhttps://github.com/skyhitz/skyhitz-react-native-ios\n. thanks @paramaggarwal ! I debugged it and I get all the items but only 9 are rendered, saw this through adding console.log in renderRow, when I scroll to the bottom it renders the 50 items but it wouldn't let me scroll further down. Here is the video: https://vid.me/tJum https://github.com/skyhitz/skyhitz-react-native-ios\n. thanks @josebalius ! I tried adding flex:1 to all container views and it worked!\n. ",
    "comountainclimber": "As of React Native 0.29 you can use React Native's <KeyboardAvoidingView/>\nhttps://github.com/facebook/react-native/commit/8b78846a9501ef9c5ce9d1e18ee104bfae76af2e\n. ",
    "otoinsa": "KeyboardAvoidingView does not work...\nhttps://github.com/facebook/react-native/issues/8855. ",
    "mitesh1301": "Hi All,\ni just resolve this issue with alternative solution, by using the animation, Hope this will help\nimport { Animated, Keyboard} from 'react-native';\nconstructor(props) {\nsuper(props);\n//For the keyboard\nthis.keyboardHeight = new Animated.Value(0);\n\n}\n//For key board\ncomponentWillMount () {\nconsole.log(\"Keyboard componentWillMount\")\nthis.keyboardWillShowSub = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\nthis.keyboardWillHideSub = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\n}\ncomponentWillUnmount() {\n      console.log(\"Keyboard componentWillUnmount\")\n    this.keyboardWillShowSub.remove();\n    this.keyboardWillHideSub.remove();\n  }\nkeyboardWillShow = (event) => {\n    console.log(\"keyboardWillShow\")\n    Animated.parallel([\n        Animated.timing(this.keyboardHeight, {\n          duration: event.duration,\n          toValue: event.endCoordinates.height,\n        })\n      ]).start();\n  };\nkeyboardWillHide = (event) => {\n    console.log(\"keyboardWillHide\")\n    Animated.parallel([\n        Animated.timing(this.keyboardHeight, {\n          duration: event.duration,\n          toValue: 0,\n        })\n      ]).start();\n  };\nrender() {\n\n\n\n\n}\n. ",
    "vlonjatg": "Yes I have NaviationIOS on another class. I am modifying the Movies demo so everything works, but as soon as I remove the onSelect listener from the ListView row & set it to the button, it doesn't work.\n``` Javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  NavigatorIOS,\n  StyleSheet,\n} = React;\nvar SearchScreen = require('./MoviesApp');\nvar MoviesApp = React.createClass({\n  render: function() {\n    return (\n      \n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n});\nAppRegistry.registerComponent('hi', () => MoviesApp);\nmodule.exports = MoviesApp;\n```\n. Yes I have NaviationIOS on another class. I am modifying the Movies demo so everything works, but as soon as I remove the onSelect listener from the ListView row & set it to the button, it doesn't work.\n``` Javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  NavigatorIOS,\n  StyleSheet,\n} = React;\nvar SearchScreen = require('./MoviesApp');\nvar MoviesApp = React.createClass({\n  render: function() {\n    return (\n      \n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n});\nAppRegistry.registerComponent('hi', () => MoviesApp);\nmodule.exports = MoviesApp;\n``\n. Yes you are right, if I do module.export the other class it works. Now the question is how could I pass thenavigatorprop down?\n. Yes you are right, if I do module.export the other class it works. Now the question is how could I pass thenavigatorprop down?\n. Yeah, adding thenavigator={this.props.navigator}works great. Thank you :smile:\n. Yeah, adding thenavigator={this.props.navigator}` works great. Thank you :smile:\n. ",
    "ch1p55": "Where did you insert \nnavigator={this.props.navigator}\nin you code?\n. ",
    "pickhardt": "@ericvicenti About Navigator.getContext , that's interesting - is there something special I have to do in order to use this feature?\nI'm not seeing it...\n\n. OK. I definitely agree a better way then passing it around all the time would be nice.\n. ",
    "BochengLiu": "thank you! It really helped me.\n. ",
    "alirezavalizade": "@go1t tnxxx you save my life :)\n. ",
    "atinder": "Has anybody found better way than passing props around ?\n. ",
    "Caojunsheng": "\u6211\u60f3\u77e5\u9053navigator={this.props.navigator}\u8fd9\u6bb5\u4ee3\u7801\u52a0\u5230\u54ea\u91cc\uff1f. ",
    "maxiaochaos": "\u52a0\u5230\u7236\u7ec4\u4ef6\u5427\uff0c\u7136\u540e\u4e00\u5c42\u4e00\u5c42\u4f20\uff1f. ",
    "Desgard": "@Caojunsheng I have encountered the same question. Have you solved it?. ",
    "HyperSimon": "@maxiaochaos \u6211\u89c9\u5f97\u5e94\u8be5\u662f\u5427\n. ",
    "SHIRONGWANG": "I have solved it in  my *.js: add this two lines code:\n\nimport NavigationExperimental from 'react-native-deprecated-custom-components';\ngetDefaultProps(){\n        return{\n            navigator: NavigationExperimental.Navigator\n        };\n    },\n\nPS: Because Navigator is can't use on my project, so I use NavigationExperimental.Navigator, its work but still have Waring when run project, I dont know why ?\nNow, another question is coming: I use the same code as last .js in my another  *.js  ,  is show wrong\n///  the wrong is:  this.props.navigator.push is not a function.\nI dont know why???. Now its work, my example code is following :\n\nvar RenderNavBar = React.createClass({\n    getDefaultProps() {\n        return{\n            navigator: NavigationExperimental.Navigator\n        };\n    },\n    render() {\n        return (\n            \n                .....................\n            \n        );\n    },\n    popToHome(){\n        this.props.navigator.pop()\n},\n\nThen, when you want use this RenderNavBar, you use as < RenderNavBar />, after run is not work, its say : this.props.navigator.pop() is not a function.\nSo the important is: < RenderNavBar navigator={this.props.navigator} />\n// The problem of : this.props.navigator.push  is not a function. The way is same.\nNow, its  working, happyyyyy ;). ",
    "francoislaberge": "I created a PR implementing my suggestion: https://github.com/facebook/react-native/pull/420\n. I created a PR implementing my suggestion: https://github.com/facebook/react-native/pull/420\n. Awesome thanks. Noticed a small bug once it went live. I added a PR to fix it:\nhttps://github.com/facebook/react-native/pull/424\n. I ordered Debugging before Testing as one was user facing, and one was for contributors. I figure, you will generally use react before contributing. \n. I added a link to the Debugging doc right after the debugging capability is pitched. I'm not attached to this change, but I think it's a nice touch.\n. A deeper explanation of how the debugging proxying works would be awesome, but beyond my current knowledge. I've kept it simple for now. I hope that someone will add more information here eventually.\n. Without this change, when clicking on the link on mobile you get sent to the Debugging page but scrolled to the top of the page. Because the menu system goes first and is long, it can seem like the page is broken or the content is missing. \nUltimately the site just needs better mobile support and links shouldn't have to require #content everywhere. But alas, that's where we are now.\n. ",
    "chadobado": "Thanks to @jparishy for this.  \nFor anyone else interested, if you want to supply actual degrees (instead of radians) you will need to compensate for the conversion between them: 1 degree = 0.0174532925 radians\nI also needed to make this work with tweening for react-tween-state.\nEnded up here:\nRCT_CUSTOM_VIEW_PROPERTY(rotation, CGFloat, RCTView)\n{\n  CGFloat angle = [RCTConvert CGFloat:json];\n  angle = angle * 0.0174532925;\n  CGAffineTransform transform = CGAffineTransformIdentity;\n  transform = CGAffineTransformRotate(transform, angle);\n  view.transform = transform;\n}\n. Thanks @volkanunsal for taking a stab at it - that was my first suspicion, but react is now automatically binding scope AFAIK.   \nAfter digging further I realized RCTAnimationManager is not linked.  After adding RCTAnimationManager.h and RCTAnimationManager.m (and RCTAnimationManager.xcodeproj to Libraries) everything seems to be working.\nHopefully this helps someone else until the docs are more fully updated.\n. Hey @nextriot, source looks familiar so assuming you saw: https://github.com/facebook/react-native/issues/432\nAm still sorting through this myself, but It seems you may be mixing up the syntax for the declarative API and LayoutAnimation.  Your setState in toggleScale is firing render().  If you want to animate on a state change you will likely want to take advantage of LayoutAnimation to config the animation prior to changing your state, or remove the state change from toggleScale if you want to animate declaratively.\nThe example I linked above demonstrates the declarative Animation API, here's similar w/ LayoutAnimation:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  LayoutAnimation,\n  Text,\n  TouchableHighlight,\n  View,\n} = React;\nvar WebViewApp = React.createClass({\ngetInitialState: function() {\n    return {boxOpen:false}\n  },\n_onPress: function() {\n    console.log('starting animation');\n    // Animation.startAnimation(this.refs['this'], 800, 0, 'easeInOutQuad', {scaleXY: [5, 5]});\n    LayoutAnimation.configureNext(animations.layout.easeInEaseOut);\n    this.setState({boxOpen:!this.state.boxOpen})\n  },\nrender: function() {\n    var box =  this.state.boxOpen === true ? \n     :\n    \nreturn (\n\n      <TouchableHighlight style={styles.container} onPress={this._onPress}>\n        <View>\n          <Text style={styles.text}>\n            Click here to start animation!\n          </Text>\n         {box}\n        </View>\n      </TouchableHighlight>\n\n);\n\n}\n});\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    top:200,\n    width: 200,\n    height: 200,\n  },\n  text: {\n    fontSize: 16,\n  },\n  boxClosed:{\n    backgroundColor:'red', \n    width: 50, \n    height: 50,\n  },\n  boxOpen:{\n    backgroundColor:'red', \n    width: 550, \n    height: 550,\n  }\n});\nvar animations = {\n  layout: {\n    spring: {\n      duration: 0.75,\n      create: {\n        duration: 0.3,\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.opacity,\n      },\n      update: {\n        type: LayoutAnimation.Types.spring,\n        springDamping: 0.4,\n      },\n    },\n    easeInEaseOut: {\n      duration: 0.3,\n      create: {\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.scaleXY,\n      },\n      update: {\n        delay: 0.1,\n        type: LayoutAnimation.Types.easeInEaseOut,\n      },\n    },\n  },\n};\nAppRegistry.registerComponent('WebViewApp', () => WebViewApp);\n```\n. @drkibitz seems to work for me with both LayoutAnimation and Animation APIs.  \nI noticed in the 2048 example animations in componentDidMount are being wrapped with a timeout:\nhttps://github.com/facebook/react-native/blob/master/Examples/2048/Game2048.js#L86\nPerhaps due to the second paragraph of this:\nhttps://facebook.github.io/react/docs/component-specs.html#mounting-componentdidmount\nIn my tests the timeout was needed for LayoutAnimation but not Animation...\nLayoutAnimation:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  LayoutAnimation,\n  Text,\n  TouchableHighlight,\n  View,\n} = React;\nvar WebViewApp = React.createClass({\ngetInitialState: function() {\n    return {boxOpen:false}\n  },\n  componentDidMount: function() {\n    console.log('mounted');\n    setTimeout(() => {\n      LayoutAnimation.configureNext(animations.layout.easeInEaseOut);\n      this.setState({boxOpen:!this.state.boxOpen})\n    }, 0);\n  },\n  _onPress: function() {\n    console.log('starting animation');\n    // Animation.startAnimation(this.refs['this'], 800, 0, 'easeInOutQuad', {scaleXY: [5, 5]});\n    LayoutAnimation.configureNext(animations.layout.easeInEaseOut);\n    this.setState({boxOpen:!this.state.boxOpen})\n  },\nrender: function() {\n    var box =  this.state.boxOpen === true ? \n     :\n    \nreturn (\n\n      <TouchableHighlight style={styles.container} onPress={this._onPress}>\n        <View>\n          <Text style={styles.text}>\n            Click here to start animation!\n          </Text>\n         {box}\n        </View>              \n      </TouchableHighlight>\n\n);\n\n}\n});\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    top:200,\n    width: 200,\n    height: 200,\n  },\n  text: {\n    fontSize: 16,\n  },\n  boxClosed:{\n    backgroundColor:'red', \nwidth: 50, \nheight: 50,\nmargin: 5,\n\n},\n  boxOpen:{\n    backgroundColor:'red', \n    width: 550, \n    height: 550,\n  }\n});\nvar animations = {\n  layout: {\n    spring: {\n      duration: 0.75,\n      create: {\n        duration: 0.3,\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.opacity,\n      },\n      update: {\n        type: LayoutAnimation.Types.spring,\n        springDamping: 0.4,\n      },\n    },\n    easeInEaseOut: {\n      duration: 0.3,\n      create: {\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.scaleXY,\n      },\n      update: {\n        delay: 0.1,\n        type: LayoutAnimation.Types.easeInEaseOut,\n      },\n    },\n  },\n};\nAppRegistry.registerComponent('WebViewApp', () => WebViewApp);\n```\nAnimation:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Animation,\n  Text,\n  TouchableHighlight,\n  View,\n} = React;\nvar WebViewApp = React.createClass({\n  componentDidMount: function() {\n    // setTimeout(() => {\n      Animation.startAnimation(this.refs['this'], 300, 0, 'easeInOutQuad', {scaleXY: [5, 5]});\n    // }, 0);\n  },\n  getInitialState: function() {\n    return {}\n  },\n_onPress: function() {\n    console.log('starting animation');\n    Animation.startAnimation(this.refs['this'], 300, 0, 'easeInOutQuad', {scaleXY: [2.5, 2.5]});\n  },\nrender: function() {\n    return (\n      <TouchableHighlight style={styles.container} onPress={this._onPress}>\n        <View>\n          <Text style={styles.text}>\n            Click here to start animation!\n          </Text>\n          <View ref='this' style={styles.box}/>\n        </View>\n      </TouchableHighlight>\n\n);\n\n}\n});\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    top:200,\n    width: 200,\n    height: 200,\n  },\n  text: {\n    fontSize: 16,\n  },\n  box:{\n    backgroundColor:'red', \n    width: 50, \n    height: 50,\n  }\n});\nAppRegistry.registerComponent('WebViewApp', () => WebViewApp);\n```\n. @drkibitz the scaleXY is scaling from height/width defined in styles.box in the Animation example (which is 50x50).  It does not seem to care about the 200x200 parent container and will scale past it without clipping.  The LayoutAnimation example is not actually scaling in my example, it's tweening the size between the height/width of styles.boxClosed (50x50) and styles.boxOpen (550x550).\nAlso @nextriot positioning for LayoutAnimation can be defined with standard \"css styles\" as you might expect (possibly other ways?):\njavascript\n  boxClosed:{\n    backgroundColor:'red', \n    width: 50, \n    height: 50,\n    margin: 5,\n    opacity: 1,\n  },\n  boxOpen:{\n    backgroundColor:'red', \n    width: 550, \n    height: 550,\n    position: 'absolute',\n    top: 100,\n    left: 100,\n  }\nand with \"position\" using Animation (bound by parent):\njavascript\nAnimation.startAnimation(this.refs['this'], 300, 0, 'easeInOutQuad', {position:[100,0]});\nI'm not able to get rotations to work with either API currently.\n. ",
    "ee0pdt": "I tried this method, but when I re-render the component with a different value of rotation I don't think the component resets back to zero - it seems to just keep rotating it!\n. @phamhieu I think you need to use camel case here, i.e. textAlign: center;\n. ",
    "ilkka": "Can I just add this to the source under my project's node_modules folder, rebuild and it should work? I can't get it to do anything. Animating opacity does seem to work (partly; 0 to 1 is animated, 1 to 0 is instant for some reason) so the basics should probably be fine.\nDoes this work for any visual component?\n. ",
    "jlevine22": "+1. Would also be nice to control orientation on a per route basis in a Navigator\n. Good point @ide. On second thought it would seem to make more sense that way\n. @ericvicenti just tried and that didn't work. The transition background always ends up white.\nEdit: Ooops, on second look that does actually work. I'll update my PR\n. Now setting backgroundColor on the Navigator style will control the transition background color\n. ",
    "randomer": "Also, it would be nice to be able to \"lock\" the screen programatically.\n. Well, actually I meant locking the orientation, not the screen. Sorry for the confusion\n. ",
    "clayallsopp": "@joewalnes  Is this sort of API what you're looking for? (generally mirrors the UIDevice API)\n``` javascript\nDeviceIOS = {\n  Orientation : {\n    Unknown\n    Portrait\n    PortraitUpsideDown\n    LandscapeLeft\n    LandscapeRight\n    FaceUp\n    FaceDown\n  }\n  getCurrentOrientation\n  addChangeListener\n}\n// Flux-esque change callback:\nDeviceIOS.addChangeListener(() => {\n  var currentRotation = RotationStore.getCurrentRotation() // one of DeviceIOS.Orientation\n})\n```\n@jlevine22 you mean force certain routes to be either landscape or portrait?\n@randomer unfortunately locking the screen is a private API, can't be used in production apps: http://stackoverflow.com/questions/18388150/lock-screen-on-device-programmatically\n. @joewalnes is this a thing we're worried about? It looks like AppStateIOS has exactly the same problem (it is initially undefined, and at some async point it gets its value from the native code)\n. I started working on a diff, seems pretty doable (if the project wants it).\nis there precedent/example of how to handle default sizing of an element that usually sizes itself? The segmented control usually sizes its width to fit its items, plus whatever offsets you set (but it can be overriden), but it seems like some default styles (like a switch) hard code the width\nThanks!\n. @a2 @ashwinb I went back and forth on this; I figured that, on the JS side, people would be doing the index -> value conversion on every callback to make their logic not dependent on ordering, so we might as well do it for them. I.e.:\n_onSegmentValueChanged : (value) =>\n  // this is resilient to ordering changes\n  switch(value) {\n    case \"Profile\":\n      break;\n  }\nvs\n_onSegmentValueChanged : (selectedIndex) =>\n  value = this.props.segments[selectedIndex]\n  // now it is resilient to order changes\n  switch() {\n  }\nmaybe a compromise is to 1) allow selectedValue and selectedSegmentIndex as props, and prefer selectedIndex if given 2) pass both selectedSegmentIndex and selectedValue in the callback event, for raw onChange listeners, but keep onValueChange returning the segment value for the case above\nbut my opinion isn't terribly strong, so will defer to your judgement\n. I've updated the PR; check out the API examples\n. @vjeux done, np\n. Lovely, thanks!\n. The generated Xcode project's build step also relies on cwd, so (I think) it's a consistent assumption:\n\n. The generated Xcode project's build step also relies on cwd, so (I think) it's a consistent assumption:\n\n. ",
    "andoriyu": "@clayallsopp That said if you look into Stringwire app you will see that their streaming view is locked in landscape. However, I suspect they just rotated elements to look like it's landscape. (look at animation when you push/pop view from display)\n. ",
    "cgarvis": ":+1: \n. Just ran into this trying to develop a npm library locally using npm link\n. We've experienced something similar with text on iPhone 6s and the iPhone 6 simulator.  No issues on iPhone4s and iPhone 5s.  I'll see if I can start a new project and replicate.\n. Screenshots:\niPhone 5s\n\niPhone 6 Plus\n\nSeems that iPhone 6 is fine.\n. How should min/max height work on images?\n. ",
    "javierbyte": "Added a comment and merged. Closing the issue.\n. ",
    "fatuhoku": "Haha... very good to know indeed.\n. @fisherwebdev I'm confused. How is transform is actually used?\n. +1  I ran into this issue after having creating a new project with  react-native init. Not encouraging!  ~~What's the current workaround?~~ I clearly should have just read the message above.\n./node_modules/react-native/packager/packager.sh --reset-cache worked for me.\n. Upon inspecting the console log I got this message:\n\"Warning: getDefaultProps was defined on Blah, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\"\nWhat does that even mean? What's a static property? How do you 'define defaultProps'? An example is worth its weight in gold here.\nI've just learned that ES6 has the static keyword, but seriously, what's a static property?\n. ",
    "volkanunsal": "```\n\n\n```\n\nI'm not exactly sure, but passing _onPress directly might be changing the context of this. Try the fat arrow notation:\n```\n\n{ this._onPress() }}> \n```\n. \n",
    "danielkramer": "Found this post which describes how to link in that library for anyone who needs that info\nhttp://stackoverflow.com/questions/29311326/how-to-create-a-simple-animation-effect\nI also found that the animations don't work when using the iPhone 5 simulator.. but work in the iPhone6 simulator just fine. \n. ",
    "jdrydn": "That's awesome, thanks for getting back to me!\n\nBeware, you should NEVER change the runtime behavior of the code between dev in prod, otherwise you're going to have hell of a time trying to debug some super weird issues reported by your users.\n\nSo this style shouldn't be used to modify config files, for example? It should all be the same?\n. ",
    "davidgtonge": "+1 - found this also - min and max values don't work\n. ",
    "benigeri": "+1 thanks for fixing it @donyu, hopefully it will be merged soon. \n. ",
    "staltz": "Well, that works. :P\nFeel free to close this issue since I made also https://github.com/Reactive-Extensions/RxJS/issues/639, let's see how that one goes. \n. Thanks, that sounds like helpful pointers.\n. ",
    "axelhzf": "Yes, using CGFloat to do animations is the right thing to do. \nThe problem is to copy a float to a CGFloat. It doesn't get the right value and the animations doesn't work.\nI can make an example to illustrate the problem if you want.\n. This is the code\nhttps://github.com/axelhzf/AnimationProblem/blob/master/index.ios.js\nThe animation works on iPhone 5 simulator, but not on iPhone 5s simulator\n. ",
    "mbrgm": "What's the current state of this?\n. I found that the shadow disappears once I set overflow: 'hidden' in the view's style. Is this intended behavior?\n. I expected it to clip the overflowing content of the view (like when you have rounded corners), but not the shadow. Apparently this is a very subjective expectation and having a container view for the shadow properties works just as well.\n\nAm 15.06.2015 um 22:53 schrieb Spencer Ahrens notifications@github.com:\nThe shadow typically displays outside the bounds of the view, so if you set\noverflow hidden I would expect it to clip the shadow. If you really need\noverflow hidden, you could put the shadow properties on a wrapper view that\ndoesn't hide the overflow?\nOn Mon, Jun 15, 2015 at 1:10 PM Marius Bergmann notifications@github.com\nwrote:\n\nI found that the shadow disappears once I set overflow: 'hidden' in the\nview's style. Is this intended behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/449#issuecomment-112192402\n.\n\u2014\nReply to this email directly or view it on GitHub.\n. @vjeux As I expected, the shadow is visible.\n\n\nhttps://jsfiddle.net/L55drqzg/1/\n. @frantic Should I send a PR adding a hint about the EADDRINUSE error to the troubleshooting section of the docs?\n. @frantic Sorry, I missed that. This project is progressing so fast, I should've looked there before ;)\n. ",
    "chrene": "The only real bug was just that it was a double when it should have been a NSUInteger. Since it was a double it got a very very high number when set. Like 4 billion or something. Now it gets the real value. We can keep the check in the if statement such that the client needs to specify another value than 0. \n. ",
    "nav": "You will need to change the ip address in AppDelegate.m from localhost to your private ip.\nExample:\nFrom:\njsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.ios.bundle\"];\nTo:\njsCodeLocation = [NSURL URLWithString:@\"http://192.168.1.10:8081/index.ios.bundle\"];\n. ",
    "syousif94": "@chadobado rotation doesn't seem to work in stylesheets either\n. @ericvicenti thank you!\n. @mjw56 you can already extend objects like this (how I'm doing it)\nthis.props.navigator.push({\n  title: 'Search',\n  component: SearchList,\n  sceneConfig: {\n    ...Navigator.SceneConfigs.FloatFromBottom,\n    gestures: {}\n  }\n})\n. @mjw56 same as yours essentially\n. I know this isn't a complete replacement for ListView, but to make a Pinterest like grid (or any grid), you just render a bunch of items in a ScrollView with the style properties flexWrap set to wrap and flexDirection set to row. ScrollView has an onScroll prop that you can use to emulate most of the features of ListView if you need them.\n. @dhrrgn that's where I got those code snippets from. I have trouble following the manipulation of their data.\n. Ok I figured it out.\nFirst I put this in my constructor function:\njavascript\nvar getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n }\nvar getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[sectionID + ':' + rowID];\n}\nthis.ds = new ListView.DataSource({\n      getSectionData: getSectionData,\n      getRowData: getRowData,\n      rowHasChanged: (r1, r2) => r1 !== r2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2\n})\nThen you have to create a dataBlob object, an array of sectionIDs, and an array of rowID arrays with the following formats:\n``` javascript\nvar dataBlob = {\n     'sectionID1' : { ...section1 data },\n     'sectionID1:rowID1' : { ...row1 data },\n     'sectionID1:rowID2' : { ..row2 data },\n     'sectionID2' : { ...section2 data },\n     'sectionID2:rowID1' : { ...row1 data },\n     'sectionID2:rowID2' : { ..row2 data },\n     ...\n}\nvar sectionIDs = [ 'sectionID1', 'sectionID2', ... ]\nvar rowIDs = [ [ 'rowID1', 'rowID2' ], [ 'rowID1', 'rowID2' ], ... ]\n```\nFinally, you can create a valid dataSource for your list with:\njavascript\nthis.ds.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs)\nHope this helps someone else.\n. ",
    "alinz": "@brentvatne @chadobado Do you guys know why animation doesn't work for transition from opacity 1 to opacity 0. The interesting thing here is it works perfectly fine when you want to transit from opacity 0 to opacity 1. I just want to do fade in and fade out.\nEDIT: I found another related issue here #722 \n. +1\njust got into this problem. I hope this merge goes through. I really need it. Thanks @darylrowland\n. @voronianski, I think your component setup in javascript is incorrect. I think it should be like this:\n``` js\nvar EffectsView = React.createClass({\n  render() {\n    return ;\n  }\n});\nvar DVEffectsView = requireNativeComponent('DVEffectsView', EffectsView);\nmodule.exports = EffectsView;\n``\n. @voronianski, which component did you export as a module?EffectVieworDVEffectsView? Also, you have to setpropTypes` as an empty object as well.\n. @voronianski I will get back to you.\n. I don't like to call the javascript function from React-Native directly. So I ended up I ported WebViewJavascriptBridge to React Native as a separate component, which works fine :D\n. :+1: \n@brentvatne Any news on when it's going to be merged? #1191 is not merged yet so should I wait? \n. @brentvatne, I ended up porting one of the iOS javascript bridge to react-native. react-native-webview-bridge. I hope it can be useful for someone else.\n. @liubko Yes, this is exactly what I want to get rid of. I haven't applied the patch yet but I will do it tonight.\n. @ide I am using launchscreen xib. I see my lauchscreen view at the launch time but before my app boots up, I see a white view (flash).\n. Thanks @nicklockwood for clarification. That was my bad. :) \n. @chirag04 I just tried it with sample project and I didn't see the flash :(\nhere's what I did\n``` objective-c\n  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                      moduleName:@\"whiteFlash\"\n                                                   launchOptions:launchOptions];\n//here's what I did\n  UIImage image = [UIImage imageNamed:@\"LaunchImage\"];\n  if (image) {\n    UIImageView launchView = [[UIImageView alloc] initWithImage: image];\n    launchView.contentMode = UIViewContentModeBottom;\n    launchView.image = image;\n    rootView.loadingView = launchView;\n  }\n  ///////////////////////////\nself.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\n  UIViewController *rootViewController = [[UIViewController alloc] init];\n  rootViewController.view = rootView;\n  self.window.rootViewController = rootViewController;\n  [self.window makeKeyAndVisible];\n  return YES;\n```\n. I like @nicklockwood solution but you have to consider network latency which can not be predict. \nOne other solution is, set component state to some sort of default value to tell your component to display some sort of loading dialog.\n. Hmm... one of the benefit of using JSX is to write a very complex component in a declarative way. So I don't mind having a JSX compiler.\nReact and React-Native have other things in commons. Such as Component Life Cycle, triggering and registering events, and architecture. So in my point of view, having a DOM namespace make sense to differentiate the Web and Mobile devices. \nI'd love you hear from other people.\n. After some digging I found that JSX transformer is the root cause.\nHere's an example:\n``` js\nvar Test = require('react-native');\n...\nrender() {\n    return (\n        \n    );\n}\n```\nis compiles into\njs\nreturn (\n    React.createElement(View, null)\n);\neven though I required react-native to Test, JSX compiler doesn't really care and uses React object to create the View element.\n. @brentvatne I don't have any! I wish I had one! ;) \nI don't know whether this PR would be beneficial for anyone, but challenge accepted! :+1: \n. @euforic I rather modify packager/transformer.js and add 'es6.modules' into the whitelist than go through all these hacks. I wish we could override the whitelist with .babelrc. crossing finger to see this feature soon.\n@jtremback any news on your side? Do you think we might be able to override whitelist with .babelrc file?\n. Usually these warnings are very accurate. However if you export your component directly without setting it to a variable and also not set displayName of the component, debug information won't have enough information to point you to right component. Take a look at the warning code here. This code requires element object which contains displayName.\nHere are some examples:\n``` js\n//this is bad\nmodule.exports = React.createClass({ ... });\n//this is good\nmodule.exports = React.createClass({\n    displayName: 'MyAwesomeItem',\n    render() {\n    }\n});\n//This is good as well. As long as you are using JSX, since JSX automatically set displayName for you.\nvar MyAwesomeItem = React.createClass({ ... });\nmodule.exports = MyAwesomeItem\n```\nSo I guess, it comes down to the best practices when you writing React and React-Native applications. \n. You can also use the open source extension of Tab bar such as react-native-icons if you don't want to extend it yourself.\n. @srameshr can you provide more info. Such as what are your step to create a project,  which node version are you using? which version of react-native have you installed? Do you get any warnings or errors during creation of any react-native project?\nEDIT: the more info you provide the better solution you get from community. \n. @srameshr Is there any reason that you stick with old xcode?\nFYI, I'm using xcode 6.3.2\n. @bryanhelmig, I had the similar issue, so I started look into what has been changed for RCTTextField, nothing! weird!!! \nAND, I found that instead of using password property, you can use secureTextEntry.\nI think we should use different magic spell. :P\n. Well, I'm using my fork version of react-native which can be found here. \nI have only changes 2 things\n- added es6.modules to white list here\n- force the version to be 0.5.0 to by pass some npm errors. \nnow the regular TextInput component keeps sending me that warning. I'm not doing any fancy thing. It used to work but changes to latest code causes this warning.\nI needed the new version react-native because it has new methods for fixing this issue #1402\n. :+1: \n. Could it be if one of the module is using peerDependencies? Since in npm 2.x if you are using peerDependencies with range version, npm will show you this warning:\nbash\npeerDependencies in npm 3+. Your application will need to depend on it explicitly.\n. ",
    "lachlanjc": "@sahrens Do you mean iOS doesn\u2019t support it, or just that React Native doesn\u2019t yet support it?\n. Got it @sahrens. I will definitely check out adding it soon!\n. @vjeux  \ud83d\udc4dOk, thanks!\n. ",
    "arhoads76": "I'm running into the same problem.  I've tried react-native init for a custom project and also git clone on facebook/react-native followed by npm install.\n. looks like it was an old version of node.  updated node and nom and it's working fine now.\n. ",
    "gzm0": "So are you saying that this is actually a browserify issue (as in you are using browserify internally), or just that you are emulating the same behavior?\nHow desirable and how hard would allowing both syntaxes be to you guys? The issue we are facing is with code that is supports the Google Closure Compiler's advanced mode (generated by Scala.js) and must bracket select in this position if we don't want the call to be renamed. On the other hand, fully minimizing the file is not an option in the development cycle in the long run as it takes too long.\n. Yes, we could. However, the Scala.js compiler is (currently) not able to emit dot selects for anything but its internal code. Have a look at scala-js/scala-js#761 for a discussion on why supporting both is hard.\n. ",
    "joshhornby": "Really like the look of this :+1: \n. ",
    "grp": "Hey, this looks great but in the past I've noticed a few issues with MPMoviePlayerController \u2014 it often blocks the main thread (causing stutters) whenever you create one, and you can only have one of them on the screen at a time. Using AVPlayer directly can avoid that, although it's more complex to use.\nInternally, we have a wrapper around AVPlayer with a nice API. I'll see about open sourcing that: it might make a good core for a <Video> component.\n. Whoa, this is awesome. I had no idea you could set this in Xcode projects.\n. ",
    "shrugs": "Just realized that this might not be ideal because some of these keyboard types are iOS-specific. What's the correct way to implement these while separating platforms? Is it to subclass TextInput and make TextInputIOS that supports these different styles, along with the returnKeyType property?\n. ",
    "a-warner": "This is happening to me as well, pretty sure it's a bug, since pushing another route afterwards and then popping does change the title correctly to the title specified in resetTo\n. cool, thanks for the quick response\n. Awesome!!\nOn Monday, April 27, 2015, Nick Lockwood notifications@github.com wrote:\n\nI'm working on something now. Will keep you posted.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1032#issuecomment-96648803\n.\n\n\nAndrew Warner\nwwarner.andrew@gmail.com\n. ",
    "pwmckenna": "This seems to be a bug with any navigation that defers to replaceAtIndex, which doesn't do the locking that push/pop/etc do.\nThis might also have to do with the fact that the navigation containers are keyed by index, rather than some combination of the route+index. I haven't been able to change that key to something more unique without running into the locking issue mentioned above, but if the key has not changed, I wouldn't expect React to re-render the nav bar title. This also would explain why push/pop changes the title, because the container is briefly unmounted, so even though the key is reused, it must be mounted again causing a render.\n. @ericvicenti do you guys just use navigator internally?\n. I believe this is a duplicate of https://github.com/facebook/react-native/issues/476\n. are the docs auto generated? if so, how?\n. which navigation caused this? push/pop/replace/etc?\n. There are some less disastrous issues with NavigatorIOS that I believe are tied to the locking (or lack thereof) of several functions. I'm going to try to address this issue: https://github.com/facebook/react-native/issues/476#issuecomment-99501667. if you can repro your issue I'd love to see if it is solved by the same thing.\n. I can consistently reproduce this as well...here's an app that pushes 4 pages, and offers a back button that pops...it also renders the index and page count so you can see that after popping the list of current routes has not changed.\n``` js\n'use strict';\nvar React = require('react-native');\nvar {\n    AppRegistry,\n    Text,\n    Navigator,\n    TouchableOpacity\n} = React;\nvar Page = React.createClass({\n    render: function () { return null; }\n});\nvar App = React.createClass({\n    render: function () {\n        return (\n            \n                }}\n                navigationBar={\n                    {(index + 1) + '/' + navigator.getCurrentRoutes().length};\n                        },\n                        LeftButton: function (route, navigator, index, navbar) {\n                            var onPress = function () {\n                                navigator.pop();\n                            };\n                            return Back;\n                        },\n                        RightButton: function () {\n                            return null;\n                        }\n                    }}/>\n                } />\n        );\n    }\n});\nAppRegistry.registerComponent('Text', function () {\n    return App;\n});\n``\n. i'm believe this is related to the size ofinitialRouteStack. no matter how many pushes/pops i do,navigator.getCurrentRoutes().lengthis never less than the initial length provided...ie, if i provide 4 routes to start, i can push routes, and that will change the length ofgetCurrentRoutes, and it will correctly pop those off (and update the length ofgetCurrentRoutes), but no matter how many times i pop,getCurrentRoutes().length` never goes below the original count.\nUpdate: This counting issue is independent of the contents of the initialRouteStack contents...if you start with 4 routes, pop them all off, then push on 2 completely different routes...getCurrentRoutes will still return 4 routes.\nUpdate: False alarm on my end. getCurrentRoutes was returning the correct list. I was making an incorrect assumption that Title/LeftButton/RightButton would be called to update the values, but once a scene is on the stack, these aren't updated...hence the working behavior for new routes, but not ones that are already rendered.\n. @pukhalski I'm actually not able to repro your issue. My mistake was assuming that the navigation bar would be re-rendered when the view it was tied to was rendered. Ignore my contributions to this thread.\n. fair enough. thoughts on resetTo accepting an array of routes? perhaps a seperate name? I'd be happy to make a pull request.\n. ah! immediatelyResetRouteStack is perfect for my use case. thanks!\n. is the reason that it resolves before the animation completes for push because _transitionTo kicks something off (and doesn't accept a callback)? I could try to fix that. What the callbacks are good for (and where willFocus/didFocus would struggle i believe) is doing something like popping, waiting for that to finish, then pushing something else on. I could certainly write a wrapper around willFocus/didFocus that ties them to the most recent navigation and provides the same type of callback, but it would be much more complicated.\n. fantastic! i'll patch it up with the transitionTo callback. I have no idea how to write tests for this. suggestions?\n. @ericvicenti made the push change, and added cb arguments to the additional exposed methods that I missed initially. What is the process for getting things merged in for this project? Should I squash commits? Wait for the tests (which I'd be more than happy to help with btw)? Happy to help however.\n@ide Those lifecycle hooks sound super useful. I'd be happy to help with those as well, though I don't have any experience with UIViewController or Android fragments, and I'm not super in tune with what the long term goals of this project are as they pertain to android.\n. this may just be documentation error, so if this is expected I can make a PR for the doc update.\n. @brentvatne it doesn't say either way, but its pretty adamant about only using one in practice. I'm not sure how the styling is applied if you wrap everything in a View as @MossP suggests.\n. sure, i'll give it a go. I've been meaning to take a peak at that other doc issue as well. I'll see if I can't do both while I'm in there.\n. addresses https://github.com/facebook/react-native/issues/1354\n. Update: \n\n. First off, thanks for getting the testing ball rolling! :beer: \nI would kind of expect mocks like these to be automatically generated (by react-native cli or jest?). I wouldn't expect people to know that StyleSheet.create is converting styles to handles under the hood, and if you don't understand that, it's not clear why you'd need to c+p these mocks in. Regardless, this is super helpful and much needed. \n. good call. updated.\n. good call. updated.\n. ",
    "AdamBrodzinski": "+1 I'm having to same issue too.\n. +1 I think having an NPM based polyfill that other 3rd party modules (like Firebase, Meteor, etc..) can all use sounds like a fairly good solution!\n. @ide We've talked about it! Hopefully i'll have enough time in a few weeks to contribute :beers: \n. ",
    "mccambridge": "I seems as if replace suffers from the same issue.\n. ",
    "barrettcook": "Looks like a duplicate of https://github.com/facebook/react-native/issues/89\n. ",
    "jtremback": ":+1: \n. Is there any way I can help with this? I've got to debug on device because my app uses the camera, and this stuff is a pain.\n. @brentvatne wasn't there another PR where someone had written objC code to switch the IP?\n. I'm getting this sometimes when returning from a webpage using LinkingIOS.\n. What libraries are people using? I'm using react-native-camera, which has been a bit sketchy in general, so I wonder if it is related.\nAlso, React team- is there a preferred way that everyone can dump logs so that we can examine this issue in greater detail?\n. :+1: \n. :+1: \n. I feel like there was some way to add custom stuff to a basic nav bar when I was doing a little true native dev- would this be at all worth adding or is the functionality too hobbled?\n. I can set leftBarButtonItem from JS?\n. Why doesn't react-native just use babel?\n. Is this in RN5.0?\n. Phew! Those 2 hours setting up and debugging Babel in my project yesterday\nwere not wasted!\n. #1498\n. Sounds pretty drastic to be defining new top-level variables to support some library! \n. Getting into React Native right now, you should be expecting to write some native code, unfortunately. Write an adapter and share it with us!\n. What is @providesModule?\n. How about having the packager look for a .babelrc, or in package.json like the standalone Babel does? It could fall back to the existing settings if one is not found.\n. Is there any react-native specific reason not to use any of the experimental transforms?\n. https://github.com/facebook/react-native/pull/1469\n. So, filename is used for error messages, and to find .babelrc?\n. Here are my findings:\nThe packager will load .babelrc, IF resetCache is true: https://github.com/jtremback/rnTest3/blob/master/node_modules/react-native/packager/packager.js#L206\nI found this out by putting a syntax error in .babelrc. However, it will apparently not merge the whitelist. Adding and removing transforms has no effect.\n. I'm just going on how Babel itself can be configured. I think there are advantages to either one. I prefer putting any configuration I can in package.json, because then I can just copy n paste to start a new project.\n. Ooops. @johanneslumpe I was totally wrong. Am changing the PR to only look for .babelrc.\n. I need to investigate this further, will submit a PR if I pursue it.\n. :+1:\n. More detail: https://github.com/facebook/react-native/issues/1451\nI'm going to just use browserify + babelify before sending files to the packager to get around these issues. I'll post an example in an hour or so.\nEDIT: This doesn't work.\n. @euforic I tried that, had some other issues, specifically around Babel runtime. I could look into it more, but I'm just going to try to get some work done with the packager as-is for now. Having Browserify concatenate it doesn't work because of the native modules.\n@alinz see this: #1451\n. @euforic :clap: \n. Update: Adding some random characters, I see that this has to do with the size of the text contained. When the number of characters changes, the view updates.\n. IMO, it'd be nice to keep that config in package.json. I hate xcode's point and click configuration stuff. Takes longer, needs to be manually reproduced, and you need to put screenshots in tutorials.\n. Would it be possible to replicate this on https://rnplay.org?\n. @marcshilling What version of react-native are you running?\n@brentvatne What version of react-native is the simulator running?\n. I've found that reloading the web page works.\n. Yes, I too have this problem. Hasn't been a huge disruption. I now just always run it with npm start.\n. ",
    "jordanbyron": "Hi @tadeuzagallo!\nI was interested in pushing this forward and wanted to get your take on my path forward :smile: \n1. Pull all of the kick ass code you write to open up and modify .xcodeproj files and stash it in a dedicated project (xclink maybe?) independent of react-native. That way we can write some nice tests and the fine maintainers of this project don't have to take on the additional burden of maintaining that code. I'd imagine xclink wouldn't rely on any magic and expect target and source paths to specific XCode projects. \nxclink MyProject[.xcodeproj] path/to/lib[.xcodeproj]\n2. Finalize the api for react-native's link method and consider restoring some of that link react-native-video magic.\n3. Add an end-to-end test for the cli just to make sure our magic works. Since we'll already have plenty of tests for xclink these can get away with being pretty minimal.\n4. :money_with_wings: \nSo before I dive in head first, what do you think? :worried: \ncc/ @brentvatne\n. ",
    "sreejithr": "Simulator doesn't seem to work. This is the log from xcode:\nRCTJSLog> \"Running application \"AwesomeProject\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\"\nI'm seeing that the script in debugger.html isn't getting value for key sessionID from LocalStorage. Here's the line in debugger.html:\nvar sessionID = window.localStorage.getItem('sessionID');\nOn opening websocket connection, it checks whether this sessionID is present to start a debugging session:\nws.onopen = function() {\n  if (sessionID) {\n    setStatus('Debugger session #' + sessionID + ' active');\n    ws.send(JSON.stringify({replyID: parseInt(sessionID, 10)}));\n  } else {\n    setStatus('Waiting for simulator');\n  }\n}\nAny ideas?\n. I've found a solution for this. Press Cmd-D from the iOS Simulator. This will open a new Chrome window with debugger attached.\n. I've made a pull request #889. I put a WARNING: with red color and underline preceding the message. Please do check if it complies with the project's style.\nBtw, how about having a prompt where the user can opt to get react-native uninstalled from global?\n. This was not intentional. If you try linking libRCTAnimation.a in \"Build Phases\" and check your project's diff, you'll see that Xcode has done this automatically. Should I remove this?\n. This was not intentional. If you try linking libRCTAnimation.a in \"Build Phases\" and check your project's diff, you'll see that Xcode has done this automatically. Should I remove this?\n. ",
    "ksmithut": "From the docs try step 5:\n\nbrew install watchman. We recommend installing watchman, otherwise you might hit a node file watching bug.\n\nnote that brew is a Mac package. If you don't have that already and you're on a mac, see installation instructions here. If you're not on a mac, you'll need to find another way of getting ruby and watchman installed on your computer.\n. ",
    "LeezQ": "@amasad , yes , some of time ... and I think it's watchman's problem. because when I have no process to run watchman, it also tell me  please shut down any existing instances that are already running\n. @vjeux  yes!  it's ok now, thx.\n@brentvatne , I add style={{flex: 1}} on the text node ,then it's ok.\nso if I don't add style {flex:1} on text node or its parent node, react-native can't computing the size of the box. does it right ? \n. I have the same problem, mark this.\n. I have the same problem, mark this.\n. maybe you should set pageSize property in your listview,\n<ListView \n    dataSource={this.state.dataSource} \n    initialListSize={20} \n    scrollRenderAheadDistance={500} \n    renderRow={this._renderRow}\n    pageSize={10}\n/>\n. try running this command again as root/Administrator.\n. ",
    "cxfeng1": "same here\n. +1\n. @ide  if I want to invoke the response block more than once, how can I do?\n. Agree with @bhatti ,  using callback in JS may be more intuitive. @vjeux @nicklockwood \nFor some reason I'm using RCTRootView along with my native component(not a react one),  and I'm attempting to hook the native button from react. \nvar ButtonHooker = require(\"NativeModules\").ButtonHooker;\n    ButtonHooker.hook(function() {\n        // Do something\n    });\nOn native side I keep the response callback, and every time the button is clicked, I callback to JS.\nThis results in above error when the button is clicked twice: null is not an object (evaluating 'cb.apply')\nSo I have to change the code like this:\nvar ButtonHooker = require(\"NativeModules\").ButtonHooker;\n    ButtonHooker.hook();//prevent the default behaviour\n    DeviceEventEmitter.addListener('ButtonClicked', function (e) {\n    //Do something.\n    });\nMuch more unreadable.\n. Any news about this?\n. @vjeux Since RCTTabBarItem uses UITabBarItem which is not able to set custom UIImageView\uff0cI can not tell what size and content mode of the image should be. So the immediate solution may be to add scale support for base64-encoded image in case of similar situation that you can't change the size of view but just want the image to be scaled.\n. @vjeux Since RCTTabBarItem uses UITabBarItem which is not able to set custom UIImageView\uff0cI can not tell what size and content mode of the image should be. So the immediate solution may be to add scale support for base64-encoded image in case of similar situation that you can't change the size of view but just want the image to be scaled.\n. @frantic  Thanks for the merging, this issue will be closed.\n. @jaygarcia @nicklockwood When a native module event occurs, I just want to know whether JS has required a specific module or implemented a specific method, if YES, I will do some specific work.\nOf cource it can be implemented by sending an event to JS and adding listening code in JS, but maybe it is not so intuitive\uff0c it have to do a lot of work in JS which I don't want to.\n. @nicklockwood  Unfortunately the RCTBridge must be initialized on the main thread,  if I preload a bridge in my app delegate,  it will not only block my app's launch but also consume a lot of memory, any advice about this?\n. @nicklockwood Thanks for your advice, In my case,  the RCTRootView must be preloaded at app launch time, but my app is a pretty large app which is very sensitive about what can be done at  launch( RCTBridge's setup method now takes about 500ms,  it must be called on main thread, and if the bridge is not initialized, the JS can not be downloaded and loaded.)\nSo I'm looking forward to a setup API  which can be called  on a background thread completely, for example,   it can set up a context which have  downloaded and loaded the JS on the background thread , and when I come to main thread, I can initialize a bridge with the context, thus save a lot of time.\n. @ide  There are too many operations in bridge's initialization, which is not acceptable in my use case(initializing the bridge only when react native is used), will there be a mechanism that some of the operations are done lazily. For example, the UIDatePicker is allocated and exports constants only when the JS use date picker module.\n. Instead of making the converter accepting json only,  I just let the code be compatible with string value\uff0cmaybe the uri key can be removed?\n. Instead of making the converter accepting json only,  I just let the code be compatible with string value\uff0cmaybe the uri key can be removed?\n. @nicklockwood Thanks for your review and suggestion, the changes have been made.\n. ",
    "chucai": "I got the same error on my macbook. Is there any solution to fix it?\nI had install watchman in my book. \nAfter I run watchman in my terminal, I got\n{\n    \"error\": \"invalid command (expected an array with some elements!)\",\n    \"cli_validated\": true,\n    \"version\": \"3.0.0\"\n}\n. Hi @amasad, \nThe solution didn't fix my issue ... :sob: \n``\n[Error: Watcher took too long to load\nTry runningwatchmanfrom your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html]\nError: Watcher took too long to load\nTry runningwatchman` from your terminal\nhttps://facebook.github.io/watchman/docs/troubleshooting.html\n    at null._onTimeout (/Users/xdhe/Documents/projects/react/react-native/HackerNews-React-Native/node_modules/react-native/packager/react-packager/src/FileWatcher/index.js:71:16)\n    at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)\n\n\n\nERROR: could not create packager - please shut down any existing instances that are already running.\n\n\n\n```\nI got the message after I run the command watchman in my terminal. \n$ watchman\n{\n    \"error\": \"invalid command (expected an array with some elements!)\",\n    \"cli_validated\": true,\n    \"version\": \"3.1.0\"\n}\n. Hi @amasad  & @wez ,\nThanks for you comments. This is my debug log. \n1428027461: tid=2142380816 Using watcher mechanism fsevents\n1428027461: tid=2142380816 file limit is 256 kern.maxfilesperproc=10240\n1428027461: tid=2142380816 raised file limit to 10240\n1428027461: tid=2142380816 Using socket from launchd as listening socket\n1428027461: tid=2142380816 failed to parse json from /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: unable to open /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: No such file or directory\n1428046836: tid=2142380816 Using watcher mechanism fsevents\n1428046836: tid=2142380816 file limit is 256 kern.maxfilesperproc=10240\n1428046836: tid=2142380816 raised file limit to 10240\n1428046836: tid=2142380816 Using socket from launchd as listening socket\n1428046836: tid=2142380816 failed to parse json from /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: unable to open /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: No such file or directory\n1428047359: tid=2142380816 Using watcher mechanism fsevents\n1428047359: tid=2142380816 file limit is 256 kern.maxfilesperproc=20480\n1428047359: tid=2142380816 raised file limit to 20480\n1428047359: tid=2142380816 Using socket from launchd as listening socket\n1428047359: tid=2142380816 failed to parse json from /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: unable to open /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: No such file or directory\n1428047413: tid=2142380816 Using watcher mechanism fsevents\n1428047413: tid=2142380816 file limit is 256 kern.maxfilesperproc=20480\n1428047413: tid=2142380816 raised file limit to 20480\n1428047413: tid=2142380816 Using socket from launchd as listening socket\n1428047413: tid=2142380816 failed to parse json from /usr/local/Cellar/watchman/HEAD/var/run/watchman/xdhe.state: '[' or '{' expected near end of file\n1428047495: tid=2142380816 Using watcher mechanism fsevents\n1428047495: tid=2142380816 file limit is 256 kern.maxfilesperproc=20480\n1428047495: tid=2142380816 raised file limit to 20480\n1428047495: tid=2142380816 Using socket from launchd as listening socket\n1428047536: tid=2142380816 Using watcher mechanism fsevents\n1428047536: tid=2142380816 file limit is 256 kern.maxfilesperproc=20480\n1428047536: tid=2142380816 raised file limit to 20480\n1428047536: tid=2142380816 Using socket from launchd as listening socket\nThe xdhe.state file is created by myself. Its content is very simple:\n```\nxdhe.state\n{}\n```\n. I fixed my issue with the following commands.\n```\nbrew uninstall watchman\nbrew install --HEAD watchman \nwatchman watch-list \nsudo chmod +x /usr/local/Cellar/watchman/HEAD/bin/watchman\n```\nThanks @amasad .\n. ",
    "holyspectral": "I had the same issue, but later I found somehow /Users/XXX/Library/LaunchAgents/ is belonged to root.\nAfter chown, everything works.\n. ",
    "raichur": "Thanks, @chucai. That solved it for me.\n. ",
    "rpastorelle": "I have the same issue with fontFamily (and fontSize for that matter) on TextInput ... They work fine on regular Text\n. +1\nI've been using this for a while by manually making the update. Wondering when this will get merged into the main branch as well... \n. @frantic Thanks. The issue you mentioned should be taken care of with the latest commit.\n. ",
    "coryoso": "If possible, could you show your aspectRatio prototype implantation?\n. ",
    "iSimar": "Perfect, Thank you.\n. ",
    "cglantschnig": "Done. I joined it.\n. ",
    "trusktr": "This is an amazing idea.\n. ",
    "ilyabo": "Would be a game-changer for me!\n. ",
    "jbhatab": "+1\n. I found out that it was my requiring another component in my app,\n```\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  NavigatorIOS,\n  Text,\n  View,\n} = React;\nvar Dashboard = require('./app/components/dashboard');\nvar evueIOS = React.createClass({\n  render: function() {\n    return (\n      \n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F6F6EF',\n  },\n});\nAppRegistry.registerComponent('evueIOS', () => evueIOS);\nmodule.exports = evueIOS;\n```\nIt's the var Dashboard = require('./app/components/dashboard'); line that breaks it.\n. Ok so I figured out it had to do with the dashboard file itself. Only thing I could say is better error reporting. It told me I had an issue with some random dependency graph thing but it was really an error with a require in the dashboard file. You can close this if you guys know you need to improve that stuff. \n. It was super deep in the chain. It was in the dashboard which called another component which called another which called another which had a bad piece of code. \nDefinitely could use improved debugging for that in the long run. If this was a huge app that woulda been crazy hard to find.\nand more specifically it was related to a non react native element. I was testing out a div. That may be a weird scenario but I bet other weird things could trigger that same type of error. \nThanks for the response :)\n. I may get to that at some point. \n. ",
    "wlindner": "I thought it was a cool idea to put React (web) inside of a React Native WebView. It's not nearly as seamless as the original suggestion (I think that would require changes to JSX preprocessing?...) but maybe it will help somebody out:\ntutorial: http://wl3.me/2015/05/01/react-in-your-react-native-webview-so-you-can-react-while-you-react.html\nrepo: https://github.com/wlindner/ReactNativeReactWebview\n. ",
    "dvcrn": "Can you go a bit into detail how exactly you got it working? I am also trying to implement google maps into my native react app but have problems with passing parameters to it\n. I am looking for an example in how to implement the same code @ppong mentioned above. \n```\nimport \n@implementation GoogleMapManager\n- (UIView )view\n{\n    GMSCameraPosition camera = [GMSCameraPosition cameraWithLatitude:-33.86 longitude:151.20 zoom:15];\n    GMSMapView *mapView = [GMSMapView mapWithFrame:CGRectZero camera:camera];\n    return mapView;\n}\n```\nI'm trying to pass a latitude, longitude and zoom value from javascript into the mapmanager so the mapmanager can instantiate the camera and mapview correctly. I read through a few finished native react modules but couldn't quite find the important bits\n. @a2 ping :smile: \n. I am working a lot with mapview lately and found some more annoyances so why not squeeze them in here as well? \nI updated setAnnotations to now delta-update annotations rather than completely deleting all of them and setting them again. Why does it matter? Because this left very ugly jumpy effects on the map where all annotations suddenly disappear and re-appear. It becomes even more prominent when animateDrop from this change here is on, because it will cause all annotations to drop every time when the annotations change. \nI tried object comparison (as in [NSArray containsObject:annotation) but had cases where it would still delete the annotation even though it already existed. I assume the object either changed or a new one got generated but my objc skills are not sufficient to know the exact lifecycle of objects. So instead, I decided to use the identifier, since this change will force each annotation to have one. Because of that, there are a few more loops and comparisons than maybe necessary but the results are great and pins don't get re-dropped if they are already there. \nNow the problem: Working on this change made me realize that the identifier system I currently have in place is a bit flawed. If the user sets his own ID, the pins will not change. If the user does not do that and relies on the auto-id I am generating, it will re-add a new ID every time the annotation array changes since it will wipe the unique-id of that annotation and generate a new one. \nI decided to replace the unique uuid with a hash containing a JSON.stringify representation of the annotation object. I'd love to hear some feedback on this. The good thing about this solution is, that same objects have same hashes and it is no longer random. This allows for the same pin to have the same identifier through the entire app flow, even if the user replaces the object reference with a new one (e.g. on ajax fetch). No more jumpy pins! \nThe bad thing is, that if 2 pins are identical, the event system could fail and only 1 callback is getting executed. Though this can only happen if literally 2 pins are on the same lat, long with the same title and subtitle which... well... shouldn't happen. \nTODO is to base64 encode that hash, but btoa doesn't seem to be available and I didn't want to add a base64 encoder just for that. So right now it is a looong encodeURIComponent string. \n. Thanks for the feedback, I'll try to get the stuff fixed the next days\n. Ok I think I got them all\n. @JoeStanton ah, I wasn't sure about that. I had it on .ios.js before but felt that IOS.ios.js is a bit too much since the name implicates the OS already. \nAlertIOS.js for example is missing the ios.js which makes it even more confusing. \n. @machard good point and thanks for the comment. But since this PR is 'on hold', I am not sure whether it's worth changing the code now or just wait for react components in callouts\n. ",
    "luics": "@vjeux thx, it's really clear and useful.\n. fixed.\n. ",
    "samfriend": "my < ListView pagingEnabled={true} onEndReached={this.loadAnotherFiftyArticles} >\n50 rows/pages of < Image / > < Title/ > < Description/ >\n3rd Load append (total 150)\nReceived memory warning \nReceived memory warning \nReceived memory warning \nCrash Physical iPhone 6 Plus \nAlso I got a lot of \"Cannot find single active touch\" time to time\n. Adding the following to your Info.plist will disable ATS\n< key>NSAppTransportSecurity< / key>\n     < dict>\n          < key>NSAllowsArbitraryLoads< / key>< true/>\n     < / dict>\n. ",
    "NickJorgensen": "Hello\nJust an observation...\nWhen running @kinhunt 's sample I am noticing a large difference between the way memory is managed on actual hardware vs the simulator.  I guess this is to be expected because the simulation is just that, a simulation, however this seems to be really drastic.\nIn this test case I am using @kinhunt 's example code, and am scrolling approximately 1000 rows each for each test.  Memory values are from xcode's debug navigator panel.\n- Hardware Test Results - iphone 6\n  Memory usage goes from 54mb at the start of the scroll and climbs up to 163mb before leveling off at 135mb.\n- Simulation Test Results - iphone 6\n  Memory usage begins at around 54mb and only climbs to 66mb after scrolling 1000 rows.  \nShould this much of a difference be expected?  I can also confirm this same behavior on another app I am developing.\nNick\n. ",
    "jamesfzhang": "@sahrens That's awesome, looking forward to it.\n. My colleague is currently working on re-writing our RN ListView into a fully native view (we probably wouldn't have used RN at all had we initially known about this performance problem). In the tests I've seen him done, it's MUCH smoother. No promises, but I'll see if we can open source it.\n. @nicklockwood Thanks for offering more info on that, much appreciated. The truth is that we absolutely love RN and will look forward to seeing the performance improvements. Thanks and keep up the good work!\n. ",
    "ylquankai": "@sahrens +1\n. ",
    "tehong": "@sahrens +1\n. ",
    "aleclarson": "@sahrens @brentvatne Can we see the work-in-progress, and possibly help out? :wink:\nAlso, could any relevancy be gleaned from bvaughn/react-virtualized? I know it's not yet setup for React Native, but a lot of the modules seem useful (eg: VirtualScroll).\nThanks for all your work, guys! :+1:\n. In case the dataSource is empty, the contentLength is potentially less than the visibleLength.\nMaybe this should be in its own commit / pull request?\n. In case the dataSource is empty, the contentLength is potentially less than the visibleLength.\nMaybe this should be in its own commit / pull request?\n. Removed the comparison between this.state.curRenderedRowsCount and this.props.dataSource.getRowCount() since this._renderMoreRowsIfNeeded() already does the same comparison.\n. Removed the comparison between this.state.curRenderedRowsCount and this.props.dataSource.getRowCount() since this._renderMoreRowsIfNeeded() already does the same comparison.\n. Yeah I agree. Forgot to change the name after changing the function's purpose. :smile: \n. @mroswald I just copied that line from a commit linked by this comment. This has also been discussed in depth in #4245. It can't be ipconfig getifaddr en0 because you might change networks often (eg: you go to a coffee shop, or you use ethernet at work). I doubt what I have is the perfect solution; but as long as there is a way to override the automatic IP, we can use the current solution. If anyone finds a way to make it more robust, just submit a PR.\n. @mroswald I just copied that line from a commit linked by this comment. This has also been discussed in depth in #4245. It can't be ipconfig getifaddr en0 because you might change networks often (eg: you go to a coffee shop, or you use ethernet at work). I doubt what I have is the perfect solution; but as long as there is a way to override the automatic IP, we can use the current solution. If anyone finds a way to make it more robust, just submit a PR.\n. Sorry, I haven't tested that scenario. Maybe @christopherdro knows.\n. Sorry, I haven't tested that scenario. Maybe @christopherdro knows.\n. Inside local-cli/start_packager.sh, you want to use $TARGET_OS_SIMULATOR to save either localhost or the IP address into a file that will be loaded during runtime. Does that all sound right? Should it save the port in that file, too?\n. Inside local-cli/start_packager.sh, you want to use $TARGET_OS_SIMULATOR to save either localhost or the IP address into a file that will be loaded during runtime. Does that all sound right? Should it save the port in that file, too?\n. @javache \nAre you talking about destSize.width = destSize.width (which is used elsewhere so I just copied it)?\nOr do you mean I should be using the aspect ratios instead?\n. @javache \nAre you talking about destSize.width = destSize.width (which is used elsewhere so I just copied it)?\nOr do you mean I should be using the aspect ratios instead?\n. Note: Symlinks are now resolved relative to their parent directory. This is the correct behavior, because symlinks aren't aware of process.cwd() and thus could be resolved into the wrong path.\n. Note: Symlinks are now resolved relative to their parent directory. This is the correct behavior, because symlinks aren't aware of process.cwd() and thus could be resolved into the wrong path.\n. while (true) is used here because we know for a fact that symlink is a symlink.\nAt the end of each loop, !fs.lstatSync(nextSymlink).isSymbolicLink() determines when to stop.\n. while (true) is used here because we know for a fact that symlink is a symlink.\nAt the end of each loop, !fs.lstatSync(nextSymlink).isSymbolicLink() determines when to stop.\n. We can easily detect symlink recursion just by caching each resolved symlink.\nThough we could improve the error message by (1) keeping track of the resolution order and (2) printing the symlinks that were resolved in between the first & second appearances of the faulty symlink. This would help the end user fix the recursion.\n. We can easily detect symlink recursion just by caching each resolved symlink.\nThough we could improve the error message by (1) keeping track of the resolution order and (2) printing the symlinks that were resolved in between the first & second appearances of the faulty symlink. This would help the end user fix the recursion.\n. Seems redundant, no? We already do the filter call to make sure only symlinks are present.\n. Seems redundant, no? We already do the filter call to make sure only symlinks are present.\n. Just realized prevSymlink isnt even necessary. \ud83d\ude1b \n. Just realized prevSymlink isnt even necessary. \ud83d\ude1b \n. Truth. I'll just switch to using an Array and then use slice to get the relevant sequence.\nThough it could get a little messy if the sequence is long.\n. Truth. I'll just switch to using an Array and then use slice to get the relevant sequence.\nThough it could get a little messy if the sequence is long.\n. Since we no longer call folders.filter to guarantee each item is a symlink, we need to protect against while (fs.lstatSync(symlink).isSymbolicLink()) doing zero loops.\n. Since we no longer call folders.filter to guarantee each item is a symlink, we need to protect against while (fs.lstatSync(symlink).isSymbolicLink()) doing zero loops.\n. Note: This prints the symlink sequence in order, as opposed to being reversed. \nNot sure which way is optimal, though.\n. Note: This prints the symlink sequence in order, as opposed to being reversed. \nNot sure which way is optimal, though.\n. Shouldn't this be ..\njs\nconst roots = args.projectRoots.concat(args.root);\nargs.projectRoots = roots.concat(findSymlinksPaths(NODE_MODULES, roots));\n.. to ensure that args.root is deduped too?\nedit: I fixed this over in #9792 (just need to get it merged)\n. Shouldn't this be ..\njs\nconst roots = args.projectRoots.concat(args.root);\nargs.projectRoots = roots.concat(findSymlinksPaths(NODE_MODULES, roots));\n.. to ensure that args.root is deduped too?\nedit: I fixed this over in #9792 (just need to get it merged)\n. So should I just copy-paste the previous advice?\n`` js\nthrow new UnableToResolveError(\n  fromModule,\n  toModuleName,Module does not exist in the module map or as these directories:\n     ${searchQueue.join('\\n  ')}\nThis might be related to https://github.com/facebook/react-native/issues/4968\n   To resolve try the following:\n     1. Clear watchman watches: `watchman watch-del-all`.\n     2. Delete the `node_modules` folder: `rm -rf node_modules && npm install`.\n     3. Reset packager cache: `rm -fr $TMPDIR/react-*` or `npm start -- --reset-cache`.`\n);\n```\n. So should I just copy-paste the previous advice?\n`` js\nthrow new UnableToResolveError(\n  fromModule,\n  toModuleName,Module does not exist in the module map or as these directories:\n     ${searchQueue.join('\\n  ')}\nThis might be related to https://github.com/facebook/react-native/issues/4968\n   To resolve try the following:\n     1. Clear watchman watches: `watchman watch-del-all`.\n     2. Delete the `node_modules` folder: `rm -rf node_modules && npm install`.\n     3. Reset packager cache: `rm -fr $TMPDIR/react-*` or `npm start -- --reset-cache`.);\n```\n. ThesearchQueuecontains the full path, not just the parent directories.\nShould I dosearchQueue.mapwithpath.dirnameand then use \"in these\"?\n. ThesearchQueuecontains the full path, not just the parent directories.\nShould I dosearchQueue.mapwithpath.dirnameand then use \"in these\"?\n. @davidaurelio Actually I usepath.dirnamewithsearchQueue.mapto ensure that each line is the parent directory. So \"in these directories\" makes perfect sense. \ud83d\ude04 \n. @davidaurelio Actually I usepath.dirnamewithsearchQueue.map` to ensure that each line is the parent directory. So \"in these directories\" makes perfect sense. \ud83d\ude04 \n. ",
    "skleest": "+1\nExcited to see the WindowedListView, thanks @sahrens!\n. ",
    "x4080": "Hi, i wondered if the issue is the same in the android part? And android part is using recyclerview right? And it is not using the recycle part? \nAnd I think maybe for best is theres 2 implementation of listview. The react way and the native recycle way for lot of items\nJust my 2cents\n. ",
    "obaniu2006": "I worte Real Android recycles RecyclerView/ListView,\nTo solve the problem of RecyclerViewBackedScrollView.\n. removeClippedSubviews work on  ios, but don't work on android\n. ListView experience was not very good\u3002\nsee the RecyclerViewBackedScrollView source file.\nthe mViews variable hold all item views in memory.\n. ",
    "roysG": "any news from react native team about that?\nIs this issue will be fixed in any release?\n. \"removeClippedSubviews = {true}\" saved my day!!. ",
    "sibelius": "WindowedListView is working fine. windowedlistview does not well on Android see here: https://github.com/facebook/react-native/issues/11950#issuecomment-275090658. @corymsmith I've just read your snippet to add a custom font here https://github.com/facebook/react-native/issues/1167#issuecomment-144077138\nBut how can I have in the new android structure?\n``` java\npublic class MainActivity extends ReactActivity {\n    /*\n     * Returns the name of the main component registered from JavaScript.\n     * This is used to schedule rendering of the component.\n     /\n    @Override\n    protected String getMainComponentName() {\n        return \"App\";\n    }\n/**\n * Returns whether dev mode should be enabled.\n * This enables e.g. the dev menu.\n */\n@Override\nprotected boolean getUseDeveloperSupport() {\n    return BuildConfig.DEBUG;\n}\n\n/**\n * A list of packages used by the app. If the app uses additional views\n * or modules besides the default ones, add more packages here.\n */\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        new VectorIconsPackage(),\n    );\n}\n\n}\n```\ncc @satya164 \n. @PierBover I don't wanna to replace the default fonts of android, I wanna use a custom one\n. @PierBover thanks for all this links, I hope one of them works\n. @JulianKingman u can use this https://gist.github.com/sibelius/e1db241ab225aba2adb84dbd8ae6525b to check if the font name was loaded. I think all the fonts are loaded when react starts\neverytime u change the font u need to recompile the native code. ",
    "brianchirls": "None of the suggestions on Stack Overflow made any difference. This is a brand new app generated by react-native with no modifications. I'll include the entire file below to be thorough:\n``` JSX\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar AwesomeProject = React.createClass({\n  render: function() {\n    return (\n      \n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js{'\\n'}\n          Press Cmd+R to reload\n        \n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n  },\n});\nAppRegistry.registerComponent('AwesomeProject', () => AwesomeProject);\n```\n. This problem eventually went away, and I haven't been able to replicate it for several days. Maybe it was a networking quirk or something. I'll close it for now and re-submit if it pops up again.\n. ",
    "kebot": "Hi, everyone, I just got this error because I wrote the wrong StyleSheet\nYou can try this:\nStyleSheet.create({\n  cover: {\n    'display': 'absolute'\n  }\n});\nThe correct one is {position: 'absolute'}. But the error makes me confused:\n\nMaybe the error message should be improved when there is something wrong in the StyleSheet\n(by the way: I'm using the latest xcode 6.3.2 and 6.0 RC of react native in the osx 10.11\uff09\n. ",
    "evanwalsh": "@pjjanak Unfortunately, that does not fix it. Thank you for the suggestion, though!\n. That works! Thanks!\n. This would be extremely helpful. I hope this gets added!\n. ",
    "adriansprod": "+1\n. +1 @rt2zz\n. I have cameraroll on a tab and it is very slow to render the images, but if i click another tab straight away and come back quickly then the images are shown where as they would still not have appeared if i stay on the tab. \n. Have same issue, dataSource updated, row change is triggered and text updated but image does not rerender with new url\n. ",
    "Alexxzz": "Nice, will look in this direction.\n. ",
    "AllanChen": "how about hidden the navigation bar ?\n. ",
    "chenbrian": "Was looking for a feature like OP and came across this project: https://github.com/t4t5/react-native-router\nJust thought I'd share...\n. ",
    "dzannotti": "It's the same code that is used on touchablehighlights currently i believe. Maybe i should revise both and add them to this commit?\n. Uhm... i think that actually cloneWithProps in this instance should be removed (maybe?) either way it gets cloned again 3 lines below https://github.com/dzannotti/react-native/blob/master/Libraries/Components/Touchable/TouchableWithoutFeedback.js#L101 \nAll i know is that it silently failed to me, without this check, and it does not now. No side effects.\n@sahrens for reference\n. Any news on this? Would like to get this merged in, as currently using TouchableWithouFeedback without a native child view fails silently.\n. It silently fails without the check, which internal code did it break? in all my tests it worked as expected, but things might have changed since i made this PR\n. any non native components wrapped into TouchableWithoutFeedback don't receive any onPress events unless the onlychild is View\n. @Vjeux that's how it's done on TouchableWithHighlight\n. https://github.com/dzannotti/react-native/blob/master/Libraries/Components/Touchable/TouchableHighlight.js#L105-L107\n. ",
    "andrewsardone": "Thanks for the reply, @ide! I\u2019ll take a look at those issues, but actually my problem was much simpler: I simply didn\u2019t include the React/RCTText subspec dependency in my Podfile. This was pointed out to me by @mudetroit: https://github.com/andrewsardone/ReactCocoaPodsDemo/pull/1.\nI\u2019m excited to see development of a broader module system (https://github.com/facebook/react-native/issues/235), so I\u2019ll catch up on that thread. But frankly, right now this CocoaPods setup doesn\u2019t seem too bad!\nClosing the ticket \u2013 cheers!\n. Just randomly jumping in here, but I think RN-based docs and an RN-based tool would help. The tool could generate a patch like below for people's app\u2019s Info.plist file:\ndiff\ndiff --git a/Resources/Info.plist b/Resources/Info.plist\nindex 715a99a..2c38673 100644\n--- a/Resources/Info.plist\n+++ b/Resources/Info.plist\n@@ -24,6 +24,17 @@\n    <string>140</string>\n    <key>LSRequiresIPhoneOS</key>\n    <true/>\n+   <key>NSAppTransportSecurity</key>\n+   <dict>\n+       <key>NSExceptionDomains</key>\n+       <dict>\n+           <key>localhost</key>\n+           <dict>\n+               <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>\n+               <true/>\n+           </dict>\n+       </dict>\n+   </dict>\n    <key>UIAppFonts</key>\n    <array>\n        <string>PT_Sans-Web-Regular.ttf</string>\nSimilarly, in a react-native init-generated project, it should not be completely disabling App Transport Security, but registering an exception for localhost as above.\n. :+1: @skevy, I created a quick PR here: https://github.com/facebook/react-native/pull/5290\nBut we can also integrate it into @hfossli's PR for organization's sake.\n. Good idea, @satya164. Updated here: https://github.com/andrewsardone/react-native/commit/d23d48a710188265bf6f6a186536caa0911fbcf5\n. ",
    "willpiers": "does anyone know which webpack loader(s) need to be used with a react native <Image /> element? I want to be able to write require('image!myImage') and have webpack leave it alone for react native\n. Good question @mkonicek - that would be nice if we could just standardize on password. @vjeux @sahrens what do you think?\n. Good question @mkonicek - that would be nice if we could just standardize on password. @vjeux @sahrens what do you think?\n. ",
    "notduncansmith": "The following command (as suggested in #481) worked for me (v0.1.0):\nnode_modules/react-native/packager/packager.sh --root=./ --assetRoots=./iOS/Images.xcassets\nA note in the documentation would be great.  Also, this should probably be defaulted somewhere (at least in the boilerplate generated from the cli).\nEDIT: Also works on v0.3.1 (latest version at time of writing)\n. Matt, just to clarify: it did not work when you used the terminal command I\nposted above?\nOn Tue, Mar 31, 2015 at 6:10 PM Matt Wisniewski notifications@github.com\nwrote:\n\n@amasad https://github.com/amasad I'm on the latest commit and it's not\nworking, I figured I'd pull from GitHub vs the NPM release since there are\na lot of PR's I'm hoping get merged soon :)\nThough it's worth noting I have tried 0.3.1 and it does not work there\neither for me.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/521#issuecomment-88279349\n.\n. @chirag04 The idea with static images (images that appear in the iOS asset bundle, i.e. Images.xcassets), is that they're bundled with the application and thus there's a fixed number of possible images.  So as outlined in the docs linked above, to use images dynamically in the way you're describing, you'd want to require all the images and store those in an object or something.  Then do a lookup by key.\n\nExample:\njavascript\nvar images = {\n  first: require('image!first'),\n  second: require('image!second'),\n  // ... etc\n};\nvar image = images[this.props.image];\n<Image source={image} />\n. If JXCore allows us to run Node.js code that wouldn't otherwise be possible to run in React Native (e.g. PouchDB), that would unlock thousands of libraries for use in RN projects and would obviously be a huge gain for the project.  Determining whether that would in fact be the case, and whether it's worth the implementation effort, is another question of course, and one that would have to be answered at least in part by the React Native core team.\n. ",
    "debreuil": "For me images that are PNG will work but images that are JPG will not. It the jpgs don't get processed, or at least they don't show up in the debugger. One workaround for now is to just rename the jpg's with the png extension.  ymmv \n. new issue for jpgs is here now: https://github.com/facebook/react-native/issues/646\n. ",
    "awiss": "How has this been resolved? I am on 0.3.4 and am totally unable to load images using all of the suggestions. The only think I can do currently use local file references.\nIs there some sort of naming convention that I am missing? I have attempted both \nimage!{imagesetName} as well image!{filename}. I am using static strings for all of this.\n. ",
    "finalquest": "Same here.\nIn 0.4.0 installing react-native with cocoapods in an existing project.\nI have the same issue. The require image!... cant be resolved. I've already try with the above arguments in the packager launch.\nIs there anything else that I'm missing?\n. Hi.\nThanks for the quick response.\nEverything is working fine with your suggestion.\nThanks again\n. I think that if you used react-native-cli command to create your project, you just need to change the version in the react dependency inside package.json and the run npm update\n. I've just updated from 0.4 to  0.4.1 and everything works fine, texts and images\n. Hi. thanks for the response.\nWhat I dont really get it yet is how I can put multiple JS files in one single bundle?\nWhere every JS file is an independent component\n. ",
    "larsvinter": "Hi all.\nIf you rename the file extension from .jpg to .png and then add it again to the asset catalog it works. You don't need to convert the file, just rename it. \nI have tested and this has solved the problems in all my projects (am using v0.4.4).\nClearly this is a bug and the renaming is an ugly workaround, but at least it allowed me to finally progress with this.\n//Lars\n. ",
    "arunshan": "Use this source={{ uri: \"google\", isStatic: true }} instead of require('image!google')\n. @rxb do you know what may be the reason ? Are there any image size or image format restrictions that I am not aware of ? List view render is invoked only after the image urls are received from the server. I believe there is some kind of race condition.\n. @unknownexception It works now! Thanks.\n. I just noticed something really strange. For some reason when the app is downloaded for the first time, then few images do not load. But works fine when I close the app and reopen it on the iPhone. It happens on the iPhone 6 with iOS 8.3. It is hard to reproduce the error. I need to do a hard reset on the simulator and check if the onerror prop is being invoked again. Will give you an update later today. \n. Could you post the complete Topic component code here ? \n. First no comments in JSX. It will throw an error. Second set style to view - flex:1 \n. Try to set width and height to the view. Also change text color to red.\nOn Wednesday, May 20, 2015, soliury notifications@github.com wrote:\n\nAnd it don't through ane error. It can run, can console.log render(),\nbut, I see nothing in the view.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1350#issuecomment-103921869\n.\n. Try componentDidReceiveProps in Topic component and set state {loaded:true}. Initialize loaded: false in constructor. Add if(this.state.loaded) in render function. \n. Sorry use componentWillReceiveProps instead of componentDidReceiveProps\n. Apply some background color to the view to see if the view is showing up. Also is the componentdidmount being invoked when you use push ? Also try doing a hard rest on simulator. \n. Add index to push in _onRowPress\n. I tried using your PR and I am not able to get the links to open in external browser. I think this only works with  but not with jquery on click listeners. \n. \n",
    "tylermcginnis": "This is a duplicate. Closing.\n. ",
    "phamhieu": "When react native out, I tried to create a camera app like Snapchat to test the native UI support.\nIt goes pretty well until I need to load the saved image from app document to show user. The Image class supports local image from bundle but not from document folder where my capture image saved.\nGood framework! Waiting for Android feature. Thanks\n. @brentvatne Correct me if i'm wrong but I believe that block of code is used to support PhotoKit. \nMy app just basic captures an image, adds text watermark and saves image in app document folder. I just want to load the image to show user as a preview before share/save to library... \n. @vjeux But the image not saved in camera roll yet.\nmy app flow:\n1. camera take image\n2. image saved in app document folder\n3. user edit with text watermark. (image loaded from app document folder)\n4. Ok go step 5 OR retry step 3\n5. share image/ save image to camera roll/ email image...\nSo basic I need the ability to load image from app document on step 3 to show user so that he/she can edit it. With the current Image class, I cannot. Thanks\n. I did try that before. Just try it again but i receive error:\n2015-04-04 10:22:44.658 SnapChatProject[664:35603] >\n  RCTJSLog> \"data = /var/mobile/Containers/Data/Application/727553BC-2B55-4376-A31C-47E93A20009A/Documents/Snap_Chat_Image.png\"\n2015-04-04 10:22:44.707 SnapChatProject[664:35571] >\n  [RCTLog][tid:0x16d86fd0][RCTStaticImageManager.m:55]>Unrecognized tag protocol: /var/mobile/Containers/Data/Application/727553BC-2B55-4376-A31C-47E93A20009A/Documents/Snap_Chat_Image.png\nmy code to load image:\nreturn(\n      <Image source={{uri: this.state.takenPhotoURI}}\n             style={styles.thumbnail}> \n        {inputText}\n        {text}\n      </Image>\n    );\n. @brentvatne can you give me an example. It'm not very sure how to add isStatic: true to the uri\nFYI: this.state.takenPhotoURI is a string.\n. @brendanv Yes, it works. Confirm that adding isStatic: true will help load the image. Thank you.\n. :) you can take a look here. https://github.com/phamhieu/ReactNativeExample\nI will need some more time to clean the code. But anything should be there. \n. Right now, does TextInput support center align with style attribute? \nI tried text-align: center; but nothing happen.\n. Just test. Still not work. My code for references.\nreturn (<TextInput \n                style={styles.inputText}\n                value = {content}\n                autoFocus = {true}\n                onChangeText = {(text) => this.setState({'inputText': text}) }\n                onEndEditing = {() => this.setState({'showTextInput': false}) } >\n              </TextInput>);\ninputText: {\n    height: 28,\n    width: SCREEN_WIDTH,\n    backgroundColor: TEXT_BG,\n    fontSize: 20,\n    textAlign: 'center',\n    color: 'white',\n  },\nresult:\n\n. There is no error. Just the simulator complains that It connot connect to the server.\u00a0\n. There is no error. Just the simulator complains that It connot connect to the server.\u00a0\n. \"It turns out that my project is moved to a folder with \"space\" character in the name. So the run script fail to run.\"\nI have a push commit to fix the issue. \n. \"It turns out that my project is moved to a folder with \"space\" character in the name. So the run script fail to run.\"\nI have a push commit to fix the issue. \n. ",
    "wesleycho": "Couldn't you use the flexbox styling?\n. http://facebook.github.io/react-native/docs/flexbox.html#content\n. ",
    "sanketr": "Nope, it seems only supported styling as documented in the api here can be used:\nhttps://facebook.github.io/react-native/docs/style.html#content\nPlease correct me with a working example if I am wrong. Ability to apply flexbox styling will be big relief! I know it can be applied to reactjs vanilla library. Native ios version seems to be different beast.\n. Oh, it is the same one I am trying. The hitch is that \"justify\" property is not available for textAlign - so, I can't get newspaper like layout. A sample code below:\n``` javascript\nvar styleTest = StyleSheet.create({\ntitle: {\n   fontSize : 20,\n   color : 'rgb(0,0,255)',\n   textAlign: \"justify\"\n  }\n});\n```\nHere is an example of how it looks like in css: http://www.w3schools.com/cssref/tryit.asp?filename=trycss_text-align_all\n. I did some more research about justified text alignment. It seems that on the web, text alignment isn't done as well as desktop publishing tools like latex because of lack of hypenations. So, something like hypenator.js might be of interest. CSS3 now includes hypens property.\n. ",
    "bretrouse": "cla has been signed\n. If you dismiss this screen, the location is working as expected\n. Increasing the timeout gives you more time to get the simulator window into focus.\n. I can update the global node package fine, I'm specifically talking about updating an app that exists already after updating the global package.\nWhen you say re-run the packager, do you mean to init a new project?\n. Thanks Brent, but will that pickup changes to iOS files? I think it would just affect the node_modules/react-native/* correct?\n. I guess what I'm looking for is a react-native update AwesomeProject command but I think it all has to be done manually right now. I've been creating a new project and copying files over.\n. ",
    "sahat": ":+1: \n. ",
    "malkomalko": "I found this post http://qiita.com/laiso/items/5c5ef9158a37726d109d.  It's not in english but you should be able to tell what's going on.\n. ",
    "mudetroit": "Are you using Cocoapods to include React? If so you need to include React/RCTText\n. ",
    "blueken": "sorry, I run a project in /learn/HelloReact before.  I stop that service.  It's fine now\n. ",
    "kujohn": "Interested on how this was resolved. Where can I stop the service.\n. Thanks @zxiest !\n. Having this issue as well. Tried to follow the chain that lead to this. This method does get called on state change or on navigator.replace and navgiation.resetTo, but it stops there.\nPerhaps the UIKit portion isn't setup for accepting the changes? https://github.com/facebook/react-native/blob/master/React/Views/RCTWrapperViewController.m#L69\n. Perhaps the work around for now is to setup the first page as non-navigatorIOS page, and the child views to start navigatorIOS routes. You'll loose the swipe back to first page though.\n. ",
    "frank-xue-porch": "@kujohn  it's the node server running in terminal as a background worker. stop that and rebuild should be working. \n. ",
    "qjloong": "Cannot find entry file in any of the roots: index.ios.js\n    at DependecyGraph.getOrderedDependencies ...\n. ",
    "zxiest": "@kujohn do ps aux | grep node ; stop those processes.\nNext, go to the main react-native directory, and do npm install to make sure you have all the modules.\nOnce this is good, do npm start ; this will run packager.sh and allow our example apps to run.\nNext, open the project in XCode and run it. You should be good =)\n. @henter's link did it for me; thanks!\n. ",
    "zachwill": ":+1:\n. :+1: \n. :+1: \n. ",
    "webdigi": "try \nssh git@github.com\ndo you see an error. Make sure your SSH key is entered correctly in your github account.\n. ",
    "andyfen": "sorted\n. yup working now. thanks\nthis sorted it..\nsudo chown -R $USER ~/.npm\nsudo chown -R $USER /usr/local/lib/node_modules\n. ",
    "jungchris": "My pleasure!  Glad I found a way to contribute in a tiny way to this great project!\n. ",
    "williamwa": "I run into same problem like this. what I do is to dynamicly add item into the data. and then the render is not working correctly. and I fixed it the same way as you did:\ndataSource: new ListView.DataSource({\n  rowHasChanged: (row1, row2) => true,\n}),\n. ",
    "veddermatic": "I am also having issues with rowHasChanged.  If I do this:\n```\nvar data = [{id: 1, count: 1}, {id: 2, count: 1}];\n// in component...\ngetInitialState: function () {\n    var ds = new ListView.DataSource({\n        rowHasChanged: function (row1, row2) { \n           console.log(row1.count, row2.count);\n           return row1.count !== row2.count;\n        }\n    });\n    return {\n        dataSource: ds.cloneWithRows(data)\n    }\n},\n...\n```\nAnd then later:\ndata[0].count += 1;\nthis.setState({\n        dataSource: this.dataSource.cloneWithRows(data);\n});\nI get 2 logged for both row1.count and row2.count and my view is never updated. Could be that I am mis-understanding how the data source works, but I think this should work?\n. @vjeux Understood, but shouldn't the method cloneWithRows clone for me? I guess it's more of a \"misleading method name\" issue than a bug. I (incorrectly) assumed that that was happening under the hood in DataSource. Thanks for the clarification though.  That's the kick in the pants to start using immutable.js in my little toy project =)\n. ",
    "Za1batsu": "Sorry for not being clear. This is for the GitHub page. It was failing there. \nhttps://github.com/facebook/react-native/blob/master/docs/EmbeddedApp.md\n. @vjeux This change fixed the image problem on GitHub, but have inadvertently broke the one on the official page. Sent and email to your vjeuxx@gmail.com regarding this. \n. I was referring to the page on GitHub directly. \nhttps://github.com/facebook/react-native/blob/master/docs/EmbeddedApp.md\n. @vjeux This change fixed the image problem on GitHub, but have inadvertently broke the one on the official page. Sent and email to your vjeuxx@gmail.com regarding this. \n. Sorry for not being clear. This is for the GitHub page. \nhttps://github.com/Za1batsu/react-native/blob/master/docs/LinkingLibraries.md\n. Image link is working on the official page, not in GitHub. \nhttps://github.com/facebook/react-native/blob/master/docs/LinkingLibraries.md\n. Image link is working on the official page, not in GitHub. \nhttps://github.com/facebook/react-native/blob/master/docs/LinkingLibraries.md\n. @vjeux This change fixed the image problem on GitHub, but have inadvertently broke the one on the official page. Sent and email to your vjeuxx@gmail.com regarding this. \n. This is working for the official page, but not in GitHub. \nhttps://github.com/facebook/react-native/blob/master/docs/LinkingLibraries.md\n. @vjeux This change fixed the image problem on GitHub, but have inadvertently broke the one on the official page. Sent and email to your vjeuxx@gmail.com regarding this. \n. ",
    "arianitu": "https://github.com/facebook/react-native/issues/131 z-index is done by render order.\n. ",
    "ashwinb": "Hm, we should ideally just use selectedIndex in the backing implementation, and expose both selectedValue and selectedIndex to the user. Or just avoid selectedValue completely. It just seems like a bad idea that typos there will result in undefined behavior.\n. Yes, passing both (index, value) seems like a good idea in the callback, although I am fine even with just (value) as you have done. However, what I am opposed to is the selectedValue prop -- that is an unnecessary landmine of typos (unless, of course, you make it an enum, etc. if you are using something like flowtype). We should just avoid it if possible.\n. ",
    "jozan": "What's the status of this?\n. Needs RCT_EXPORT_MODULE(); to work in current version.\n. ",
    "karanbhangui": "Any updates on this? Having similar performance issues.\n. ",
    "thanzen": "+1\n. ",
    "rt2zz": "@vjeux do image \"handles\" exist in open source react-native? I do not see anything in RCTConvert.m\n. heads up for people using data uris, you will need isStatic: true e.g.\n<Image source={{uri: 'data:image/jpeg;base64,'+ base64ImageString, isStatic: true}} />\n. Thanks @mattotodd \nedit continuing work over @ react-native-addressbook-ios\n. I can confirm the issue - the Image component appears to specifically be slow with CameraRoll images.\nEDIT: more specifically Image component takes a long time to display asset-library URI's\n. @scottdixon that may be a seperate issue, but I just tested on 0.4.1 and loading the lower quality image does not solve the delay issue.\nI did some debugging through the obvious image code, and everything is returning fast, RCTImageLoader.m loadImageWithTag which returns to RCTStaticImageManager.m RCT_CUSTOM_VIEW_PROPERTY(imageTag, NSString, RCTStaticImage) are are both running with minimal latency, yet there still is a lag of ~5s before the actual image renders to screen.\n. @aroth thanks! dispatch_async definitely fixes the load time\n. I believe this has been resolved in another commit.\n. Redefining enableHighAccuracy makes sense, and then potentially exposing seperately an accuracy option.\nBecause we are following the html geolocation api, this seems to be about the best mapping possible. If someone needs a more ios specific solution, I imagine that could live as a seperate module.\nI implemented specifically the background(mode) option in https://github.com/facebook/react-native/pull/1506\n. It seems to me that the analogy between uploading native files and form input files (as in HTML) is weak. Instead of stuffing file handling into the same method (i.e. xhr.send) it would be easier and more explicit to add a new method such as xhr.attachFiles. Granted modifying the xhr api sucks, and is probably a no deal.\nin which case, perhaps this functionality should live elsewhere, not in react-native core. \n. @ide something like permissionType: ENUM('IN_USE', 'ALWAYS') ?\nDoes using ios'y terms make sense or are we trying to keep things platform agnostic?\n. Ok, replaced backgroundMode with permissionTypeIOS which (if defined) must be one of ['ALWAYS', 'IN_USE']\nI am not sure about the code style here, e.g. is it appropriate to use indexOf in an invariant argument as a surrogate for enum. Should we enum the permissionTypeIOS option again in objC land? Following react style is less obvious when working outside of components :(\nWould it make sense to expose an explicity requestPermission method even though that does not conform for w3 geolocation spec?\n. Ah, thanks @sahrens \nI changed the constants to be in line with react-native conventions, now: RCTPermissionTypeAlways, RCTPermissionTypeInUse, RCTPermissionKey. I also changed the permission type strings from all caps to camel case as that seems to be the convention, now: \"always\", \"inUse\"\n. @timdoes it may be an issue with your app setup. For example make sure the location background mode is enabled: https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/iPhoneOSKeys.html#//apple_ref/doc/plist/info/UIBackgroundModes\nThis diff only changes the permission type requested, the mechanism for retrieving the location is still the standard startUpdatingLocation method https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/index.html#//apple_ref/occ/instm/CLLocationManager/startUpdatingLocation\n. @timdoes just tested this out, and I see the same behaivor (no updates with display off). I do not have a definitive answer for you, apple does not make debugging this types of situations easy. You may consider playing around with allowDeferredLocationUpdatesUntilTraveled:timeout or signifigant location changes api or geofencing (none of which are currently supported by react-native gelocation)\n. RCTLocationOptions is a C Struct, which to my knowledge cannot hold NSString values. I thought about assigning integer values to the permission types, or making RCTLocationOptions a class but this seemed like unnecessary complexity & change.\n. ",
    "skpodcast": "i am going to build SK genesis\n. ",
    "foghina": "Merged internally and synced.\n. Since we already include okhttp-ws a few lines above this, we should use that instead of adding another dependency.\n. I feel like we could do this in a less shell-y way. Personally I appreciate the one-liner but it makes code harder to read and prone to breakages in case of weird shell environments.\n. \ud83d\udc4d\n. That seems reasonable. Maybe in the future we should mark the basic libraries (or the extra ones) somehow so that we can stop hardcoding these, but for now we can leave this as it is.\n. Can you replace these three lines with a call to attachDraweeHolders()? Not sure how it ended up like this.\n. @kmagiera I guess you mean JS, not JSC. Yes, this is only used so JS knows where the JS bundle was loaded from (local file on device/emulator or network). JS uses this to determine where to load assets from (drawables in the APK or from the dev server).\n. Can you add an error callback (all @ReactMethods have two callbacks) and call it here instead of throwing an exception? You should probably still log the full exception details, though, to make it easier to debug problems.\n. Oh, darn. Then we can probably leave it as it is for the purposes of this PR but we should refactor this module.\n. Maybe add a note about running npm install?\n. I think something like this would be more readable & maintainable if we change the command:\njs\nconst termApp = yargV.open ? yargV.open : 'Terminal.app';\nreturn child_process.spawnSync('open', ['-a', termApp, launchPackagerScript]);\n. Same nit, except -e sh is specific to xterm. You might want to do something like:\njs\nconst term = yargV.term ? yargV.term : 'xterm';\nconst termArgs = (!yargV.termArgs && term === 'xterm') ? ['-e', 'sh'] : yargV.termArgs;\nreturn child_process.spawn(term, termArgs.concat([launchPackagerScript]), {detached: true});\nPlease make sure to document these args as well. You would also need to declare termArgs in your yargs invocation.\n. Couldn't we reuse IconControllerListener here? Then we could get rid of SetIconSourceCallback completely.\n. Yes please revert this. It's not super up-to-date but I think it's worth leaving in as a starting point.\n. Formatting around here seems wrong. Should either be:\n... = new ProgressResponseBody(..., ... {\n  long last = ...\nif it doesn't exceed 100 chars width, or\n... = new ProgressResponseBody(\n  ...,\n  ... {\n    long last = ...\n. Wait, this was for upload progress before, right? Does that still work?\n. I don't fully understand how this works - AFAICT readWithProgress is only called from onResponse, which makes me think the entire response is already available but sending to JS is chunked into multiple events, which doesn't really make it \"incremental\".\n. This changes the name of the event sent to JS, right? Won't that break any/all clients relying on the old event name?\n. Let's not have two top-level classes in one file. Either make this a static inner class or create an anonymous inner class directly in createReactActivityDelegate().\n. private static class\n. private static final String\n. Is this still used anywhere? Can we remove it?\n. Rename to mBorderRgb?\n. We should combine this and setBorderAlpha into a single public-facing API, e.g. setBorderColor(int position, float rgb, float alpha), I don't think calling one without the other would make any sense and hints at a programming error. Feel free to keep the methods separate but make them private.\n. Same as above.\n. Ah, I must be blind. \ud83d\udc53\n. Why are we including mImageUri twice (here and on line 96)?\n. Minor nit: these don't really need to be constants. It makes the code less readable and we're not likely to change their value any time soon, and their use is pretty limited.\n. Why is this \"last explicitly set\"? Isn't backface visibility always explicitly set? Can't we call it just mBackfaceVisibility and default to visible?\n. Where is this method coming from? I can't find it in any of the parent classes?\n. All changes in this file seem unrelated?\n. Let's remove the config != null check. Trying to initialize multiple times should result in a warning regardless of what config you're trying to use.\n. @oprisnik does fresco make any assumptions as to which thread this is called on? Should we e.g. assert this is always called on the UI thread?\n. Why?\n. \"I need this\" is not a good counter argument to \"web has never had this and millions of websites work fine without it\".\nHowever, I said I'm fine with it since iOS has it already.\nMy question is why are you setting cache control to no store (for all requests)? Also, this will not reach fresco I think, so that might still cache it. Have you tested this?\n. My concern is that we seem to apply no-store for all requests, regardless of whether headers are set or not. It's not clear what effects this will have but it sounds like a breaking change (will fresco actually cache anything anymore?). I'm generally fine with this PR but I think we should remove this line. You can set cache control headers from your server if you need to, they have the same effect.\n. Huh, interesting, thanks for the thorough dig-through. @oprisnik do you have any context here? Do we really set no-store on all requests and why?\n. This is not nice. This is bypassing Fresco's network layer (e.g. OkHttp).. ",
    "voximplant": "Sometimes developer needs to use native modules inside frameworks. For example, it's required to avoid build problems because of the conflicts between 3rd party libs code and React Native libs.\nCan we propose to extend React Native functionality to let Objective-C class that implements RCTBridgeModule has an option to return list of methods for export to JS?\n. @a2 sounds good, will be waiting eagerly!\n. Any news?\n. ",
    "yimity": "should close all of the window include Xcode terminal and and restart again. should fix this.\n. ",
    "nwjohn": "+1, also fits my use case. \n. ",
    "hedgerwang": "I came up this hacky approach to send message from the webview's HTML back to the react native.\nThe idea is to generate a navigation change event from web page so that the react native can catch it.\n```\nvar WebViewExample = React.createClass({\ngetInitialState() {\n    return {\n      message: '....',\n    };\n  },\nrender() {\n    var html = <html>\n        <script>\n          var pinID = 0;\n          function ping() {\n            var message = 'hello ' + Date.now();\n            document.title = message;\n            window.location.hash = pinID++;\n            return false;\n          }\n        </script>\n        <body>\n          This is a HTML Page inside WebView\n          <hr />\n          <button onClick=\"window.location.hash = ping()\">ping</button>\n        </body>\n      </html>;\nreturn (\n  <View>\n    <Text style={{display: 'block'}}>Native View</Text>\n    <Text style={{display: 'block'}}>{this.state.message}</Text>\n    <Text style={{display: 'block'}}>Web View</Text>\n    <WebView\n      automaticallyAdjustContentInsets={false}\n      style={{height: 400}}\n      html={html}\n      onNavigationStateChange={this.onNavigationStateChange}\n      startInLoadingState={false}\n    />\n  </View>\n);\n\n},\nonNavigationStateChange(navState) {\n    this.setState({\n      message: navState.title,\n    });\n  },\n});\n```\n. I really hope that we could stop adding new getters to expose the internal state of the navigator. Once we move toward the new controlled-view model, it won't make much sense to let the component hold the state.\n. I'm not sure whether you have updated this to the master or not.\nIf so, could you please keep the API as what it is in master?\nrenderOverlay={(props: NavigationSceneRendererProps) => ?ReactElement {.....}\nWe'd like to unify the props that is used to render sub-component of the navigation otherwise the code will look like this soon:\n<MyNavigationView\n  navigationState={navigationState}\n  style={styles.animatedView}\n  renderHeader={(scenes, index, position, layout) => ....}\n  renderFooter={(index,  scenes, layout) => ....}\n  renderSideMenu={(index, layout) => ....}\n/>\nThe props should be treated as read-only object that can passed around the sub-components (see https://github.com/facebook/react-native/commit/71e59761c950b5b012c1860501f68a96f38a4168) \n. Same comment here. \nThere is no reason that the title only cares about the pageState. \nSuch API is very specific thus limits the design of what the Title component can do. \n. SceneRenderer is used as an alias for common props that could be used to render a scene. \nSo you can easily define a scene like this:\n```\nclass MyScene extends React.Component {\n  render() {\n    return (\n      \n{this.props.blah}\n{this.props.scene.key}\n\n    );\n  }\n}\nMyScene.propTypes = {\n  ...NavigationPropTypes.SceneRenderer,\n  blah: PropTypes.string,\n};\n```\nI don't understand why would to turn SceneRenderer  into an PropTypes.shape.\n. why not just pass props with ...props?\n. I'm sorry but I'm not convinced. \nYou can still split the props at the render function of NavigationHeader and pass them to renderLeftComponent and renderRightComponent separately.\nThe contract is that the props enforces the type NavigationSceneRendererProps and people would be able to build different kind of navigation header without inventing new props definitions.\nFor instance, what would the props like if you were doing this for NavigationBreadcrumbHeader? In that case, the header is literally just a component that contains a list of scenes (breadcrumbs) and the API may look like this:\n<NavigationBreadcrumbHeader\n  {...headerProps /*NavigationSceneRendererProps*/ }\n  renderBreadCrumb={(breadCrumbProps /*NavigationSceneRendererProps*/) => {\n    // render one bread crumb.....\n  }\n/>\nHaving consistent type for rendering will make it easier to reuse views or swap views. \n. FYI. I'm working on unify the API for header. The proposed new API will be like this:\n```\nrenderHeader(props: NavigationSceneRendererProps) {\n  \n}\nrenderTitleComponent(props: NavigationSceneRendererProps) {\n  return (\n     \n       {props.scene.navigationState.key}\n     );\n  };\n}\nrenderLeftComponent(props: NavigationSceneRendererProps) {\n  return (\n    \n  );\n}\n```\n. FYI. I'm working on unify the API for header. The proposed new API will be like this:\n```\nrenderHeader(props: NavigationSceneRendererProps) {\n  \n}\nrenderTitleComponent(props: NavigationSceneRendererProps) {\n  return (\n     \n       {props.scene.navigationState.key}\n     );\n  };\n}\nrenderLeftComponent(props: NavigationSceneRendererProps) {\n  return (\n    \n  );\n}\n```\n. This is unnecessary.\nWe should let people to overwrite this animation with custom style.\nIn your example, you could just do this:\n_renderCard(/*NavigationSceneRendererProps*/ props) {\n  return (\n    <NavigationCard\n      {...props}\n      style={[\n        NavigationCardStackStyleInterpolator.forHorizontal(props),\n        styles.card,\n      ]}\n    />\n  );\n}\n. This is unnecessary.\nWe should let people to overwrite this animation with custom style.\nIn your example, you could just do this:\n_renderCard(/*NavigationSceneRendererProps*/ props) {\n  return (\n    <NavigationCard\n      {...props}\n      style={[\n        NavigationCardStackStyleInterpolator.forHorizontal(props),\n        styles.card,\n      ]}\n    />\n  );\n}\n. cc @ericvicenti , @satya164 \n. cc @ericvicenti , @satya164 \n. I agree with @satya164 \nThe designer will asks for 100+ style of back button. There isn't really a generic back button except the one that can only be used in simple example.\n. I agree with @satya164 \nThe designer will asks for 100+ style of back button. There isn't really a generic back button except the one that can only be used in simple example.\n. Good question.\nNavigationHeader will render the Title, Left, Right component for every \nscene.\n``\nrenderHeader(props: NavigationSceneRendererProps) {\n  //props.scene` is the focused scene. \n}\nrenderTitleComponent(props: NavigationSceneRendererProps) {\n  // props.scene is the N-th scene. For example, if the header\n  // have 3 scenes to render, this function will be called 3 times\n  // and The Title for each scene (1st, 2nd, 3rd) will be rendered.\n}\nrenderLeftComponent(props: NavigationSceneRendererProps) {\n  // props.scene is the Nth scene. For example, if the header\n  // have 3 scenes to render, this function will be called 3 times\n  // and The LeftComponent for each scene (1st, 2nd, 3rd) will be rendered. \n}\n```\n. Good question.\nNavigationHeader will render the Title, Left, Right component for every \nscene.\n``\nrenderHeader(props: NavigationSceneRendererProps) {\n  //props.scene` is the focused scene. \n}\nrenderTitleComponent(props: NavigationSceneRendererProps) {\n  // props.scene is the N-th scene. For example, if the header\n  // have 3 scenes to render, this function will be called 3 times\n  // and The Title for each scene (1st, 2nd, 3rd) will be rendered.\n}\nrenderLeftComponent(props: NavigationSceneRendererProps) {\n  // props.scene is the Nth scene. For example, if the header\n  // have 3 scenes to render, this function will be called 3 times\n  // and The LeftComponent for each scene (1st, 2nd, 3rd) will be rendered. \n}\n``\n. Holding off will be easier otherwise we'd have to update this example later.\n. Holding off will be easier otherwise we'd have to update this example later.\n. We should let people overwrite the animation style withstyle, so I don't thinkdefaultStyle` is necessary here.\nPeople who use custom style should define the custom animation.\nrenderScene(props) {\n  return (\n    <NavigationCard \n      style={[\n        NavigationCardStackStyleInterpolator.forHorizontal(props),\n        styles.myStyle,\n      ]}\n    />\n  );\n}\nThis makes more sense otherwise people will start to argue that what the proper default style  (animation) will be and that's more like an UX question rather than an engineering question. \n. We should let people overwrite the animation style with style, so I don't think defaultStyle is necessary here.\nPeople who use custom style should define the custom animation.\nrenderScene(props) {\n  return (\n    <NavigationCard \n      style={[\n        NavigationCardStackStyleInterpolator.forHorizontal(props),\n        styles.myStyle,\n      ]}\n    />\n  );\n}\nThis makes more sense otherwise people will start to argue that what the proper default style  (animation) will be and that's more like an UX question rather than an engineering question. \n. why 64, I'm curious :)\n. please also update static propTypes = {\n. ",
    "Intellicode": "I had a go at this, and I got basic messages working using the techniques described at the Stackoverflow page. However, I was wondering how Apple would look at this feature since it allows remote websites execute code (sort of). Titanium seems to allow communication if the code is loaded from a local source (http://docs.appcelerator.com/titanium/3.0/#!/guide/Communication_Between_WebViews_and_Titanium). Any thoughts on this?\n. I'll have a go at it this weekend, should be a good learning opportunity :)\n. nice, I guess I can stop working on my version then :)\n. ",
    "kevlened": "I was able to get this to work: https://github.com/alinz/react-native-webview-bridge\nThe example included in the repo was more helpful than the docs.\nUPDATE: Be aware of this issue - https://github.com/alinz/react-native-webview-bridge/issues/3\n. ",
    "developerworks": "Fixed\n. ",
    "rickeybobby": "Please take me off this list\nFrom: Soheil [mailto:notifications@github.com] \nSent: Wednesday, April 1, 2015 2:03 PM\nTo: facebook/react-native\nSubject: Re: [react-native] How do you get the city from GeoLocation API? (#594)\nI believe CLGeocoder does.\nOn Wed, Apr 1, 2015 at 2:00 PM, Tadeu Zagallo notifications@github.com\nwrote:\n\nWhat you need for that is Reverse Geocoding, iOS doesn't provide it,\nyou'll have to use 3rd party APIs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/594#issuecomment-88630388\n.\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/594#issuecomment-88631194 .\n. ",
    "krazyeom": "@frantic  https://github.com/facebook/react-native/pull/598 already submitted a PR. Please check it. \n. I have just submitted a PR #633 .\n. @spicyj it's not tricky. MD files in docs folder is using for http://facebook.github.io/react-native/docs/ \nanother md files are using Relative path. ex) LinkingLibraries.md \n![](/react-native/img/AddToLibraries.png)\n![](/react-native/img/AddToBuildPhases.png)\n![](/react-native/img/AddToSearchPaths.png)\n. ",
    "chandu0101": "thanks for reply , i changed my component name \njs\nreactNative.AppRegistry.registerComponent(\"AwesomeProject\", () => AwesomeProject())\nstill same error!\n. hmm , in js i am not able  to reproduce this . \nis something changed in react-native ? because the above builder generates react elements  which works fine in reactjs.\nand in js land while debugging getComponentClassForElement element.type for React.createElement(View... ) is function but in my case its ReactElement , do you see anything fishy here ? \n. @dvcrn  excellent , this is what i am looking for :) \n. @brentvatne  thank you for reopen , sorry i have limited skills in javascript and objective-c, i am from scala.js land . Hope some one from community will take care of this ...\n. ",
    "theseyi": "Thanks., I'll close then :)\n. ",
    "philikon": "Do we want to stay close to the web here and name them onLoad, onError, and, uh, I guess onLoading for when loading starts?\n. Hi, I think @brentvatne mentioned me by mistake, but I'm happy to chime in:\nWe use Navigator.js heavily in Facebook's Ads Manager app (in fact, that's mostly what it was written for). You can get it to adapt to the varying window height when on a call / tethering / etc. without the need for forceUpdate and changing styles:\n<Navigator\n  sceneStyle={styles.scene}\n  />\nwith styles.scene being\n{\n  marginTop: Navigator.NavigationBar.Styles.General.TotalNavHeight,\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n}\nBy not setting an explicit height, the view will simply adapt when the window size changes due to the status bar expanding.\nEdit: the marginTop value here assumes you're going to use a standard height <Navigator.NavigationBar />.\n. > Can we make CameraRoll vend NativeFile objects instead?\nYes, I think we should... eventually. Currently the API mimics GraphQL APIs, which seems oddly FB-centric. I think we should return something more basic, and then build the GraphQL part around it using JS.\n\nAlso, we absolutely want to conserve as many metadata as possible from the files than just the URI.\n\nLike what? I can only think of the Content-Type, and the Blob/File API has provisions for that.\n\nI'm not a big fan of using instanceof to check if it's a good type, I much prefer duck typing, this way it can be serialized and unserialized.\n\nI understand the desire to duck-type. I'd be ok with this, though in terms of the documentation, I think it'd be good to make NativeFile -- actually I had a rethink and want to call it NativeResource -- appear as a logical extension of the Blob/File objects we know from the web.\n. > Width and height, aspect ratio, multiple versions of the same file @2x, @3x.\nIt seems you're conflating system image assets used in the app with camera roll assets.\n\nAlso, one thing that I really want to support is representing a slice of an image. {uri: 'image.jpg', crop_rect: [0, 0.5, 0, 0.5]}. This would be useful for image spriting.\n\nAgain, this seems useful for image assets used by the app. If you want a photo (from camera roll or the web or wherever) cropped or other transformed (like Ads Manager app), you're going to have to perform that operation in native code, which leaves you with a new URI to a new image asset, which you can then pass to XHR to upload it.\n. I'm ok with making the interface that <Image source={...}> eats the same as that of a native resource that XHR.send() eats, so long as we're super explicit about it. We don't need a NativeResource class, but at least a flow type. Duck typing is great, until you forget the contracts and end up with faulty assumptions (and thus bugs) somewhere deep in the code. (I speak from a fairly recent experience here, ahem.)\n. > I don't think that we want to dissociate sending images vs displaying images.\nFair enough. Let's take it one step at a time. I'll get rid of NativeFile.\n. > Incidentally, I've been working on expanding the implementation of [RCTConvert data:] to make it easier to construct multipart mime uploads.\nYes, that is exactly my goal, I've already started work on a FormData polyfill so that existing code that constructs multipart requests from a mix of native files and primitive values would Just Work(tm) on React Native. My thoughts regarding the data structure were fairly similar, though I wanted to make the specifics somewhat closer to what we're using already for the FB graph internally. Or we can change our internal \"API\" to match whatever we come up with here, just so long as we don't invent something that's 99% the same and 1% different.\n. also cc @amasad @hedgerwang \n. Yeah, we need to add Libraries/Image/ to the header search path so we can #import \"RCTImageLoader.h\"\n. At the very least we could have an [RCTImageLoader canLoadURI:uri] helper, so that these prefixes remain an implementation detail of RCTImageLoader. At some point in the future I imagine we'll have other kinds of URIs (e.g. file:///) with other ways of resolving them, at which point we might want to abstract resolving URIs altogether...\n. Yeah what @ide says. I didn't change the semantics around how callback gets executed. If you read the red portions of the diff, you'll see that it currently gets pushed onto the queue just like it does after my change.\n. Good point on both accounts.\n. Actually, I just tried files.push.apply(files, file.getFiles()) and I got RangeError: Maximum call stack size exceeded again. I suspect I'm hitting some sort of built-in limit for maximum number of arguments, and it's just surfacing as a stack size exceeded error.\nAlso, it seems Babel translates files.push(...file.getFiles()); to  files.push.apply(files, file.getFiles()), which is what you'd expect. I was racking my brain to figure out why this syntax was incurring recursion...\nAnyway, I'll add a comment nonetheless.\nP.S.: It's almost 2016 and JS arrays still suck.\n. FWIW, I just did a little test and indeed Node won't apply more than 65536 arguments to a function. And one of my files.getFiles() arrays is 122501 long.\nSo knowing this limit, we could also apply the array in chunks... Seems like a micro-optimization to me, but happy to do it if people feel it'd make a difference. Thoughts?\n. Or... let's just give up on the idea that files is a const and use files.concat()...\n. Or... let's just give up on the idea that files is a const and use files.concat()...\n. Yoosa wanna shave yakyak? Meesa shave yakyak...\n(A) the [].concat(...files) approach:\ngetAllFiles() took 116 ms\ngetAllFiles() took 124 ms\ngetAllFiles() took 149 ms\ngetAllFiles() took 123 ms\ngetAllFiles() took 138 ms\ngetAllFiles() took 162 ms\n(B) the files = files.concat(file.getFiles()) approach:\ngetAllFiles() took 71 ms\ngetAllFiles() took 85 ms\ngetAllFiles() took 69 ms\ngetAllFiles() took 74 ms\ngetAllFiles() took 73 ms\ngetAllFiles() took 68 ms\n(C) the forEach(file => files.push(file)) approach:\ngetAllFiles() took 100 ms\ngetAllFiles() took 93 ms\ngetAllFiles() took 99 ms\ngetAllFiles() took 102 ms\ngetAllFiles() took 106 ms\ngetAllFiles() took 100 ms\nSo, (B) turned out to the fastest, despite looking like O(n^2) on the surface, as @ide pointed out. I'll go back to (B) then so we can save literally dozens of milliseconds.\n. Yoosa wanna shave yakyak? Meesa shave yakyak...\n(A) the [].concat(...files) approach:\ngetAllFiles() took 116 ms\ngetAllFiles() took 124 ms\ngetAllFiles() took 149 ms\ngetAllFiles() took 123 ms\ngetAllFiles() took 138 ms\ngetAllFiles() took 162 ms\n(B) the files = files.concat(file.getFiles()) approach:\ngetAllFiles() took 71 ms\ngetAllFiles() took 85 ms\ngetAllFiles() took 69 ms\ngetAllFiles() took 74 ms\ngetAllFiles() took 73 ms\ngetAllFiles() took 68 ms\n(C) the forEach(file => files.push(file)) approach:\ngetAllFiles() took 100 ms\ngetAllFiles() took 93 ms\ngetAllFiles() took 99 ms\ngetAllFiles() took 102 ms\ngetAllFiles() took 106 ms\ngetAllFiles() took 100 ms\nSo, (B) turned out to the fastest, despite looking like O(n^2) on the surface, as @ide pointed out. I'll go back to (B) then so we can save literally dozens of milliseconds.\n. Oh, do we support let now?\n. Oh, do we support let now?\n. Ok fixed. Because it's you guys.\n. Ok fixed. Because it's you guys.\n. So why 200 secs instead of 120 then?\n. So why 200 secs instead of 120 then?\n. I must confess, I did not try that.\n. duh\n. We should be trivially able to also handle the ArrayBufferView case here, by checking for ArrayBuffer.isView(data) and doing data = data.buffer in that case. Of course we'd need to amend the check in send() that sends us here to sendArrayBufferImpl() as well.\n. (I'd also be happy to address that in a follow-up.)\n. Sure. Can I do that in a follow-up? It'd be a new feature. I wanted to keep this PR here purely mechanical.\n. Sure. Can I do that in a follow-up? It'd be a new feature. I wanted to keep this PR here purely mechanical.\n. Sure.\n. Sure.\n. It mocks the EventTarget base class, which can be used either directly:\njs\nclass Foobar extends EventTarget { ... }\nor you can call it as a function with an array of events you'd like your class to handle, in which case it'll return a new base class with automatically generated onfoobar getters/setters. Like so:\njs\nclass Foobar extends EventTarget(['message', 'error']) { ... }\nThis here just mocks that behaviour in a minimal way so the tests continue to work.\n. It mocks the EventTarget base class, which can be used either directly:\njs\nclass Foobar extends EventTarget { ... }\nor you can call it as a function with an array of events you'd like your class to handle, in which case it'll return a new base class with automatically generated onfoobar getters/setters. Like so:\njs\nclass Foobar extends EventTarget(['message', 'error']) { ... }\nThis here just mocks that behaviour in a minimal way so the tests continue to work.\n. Sure, I can remove the newlines. I just added them to separate the repetitive stanzas for easier readability. \n. Sure, I can remove the newlines. I just added them to separate the repetitive stanzas for easier readability. \n. Actually, I just removed the newlines and I find the method so much harder to parse now. What's the reasoning here for declaring the newline \"unnecessary\"?\n. Actually, I just removed the newlines and I find the method so much harder to parse now. What's the reasoning here for declaring the newline \"unnecessary\"?\n. This is the original close() method:\n``` js\n  close(): void {\n    if (this.readyState === this.CLOSING ||\n        this.readyState === this.CLOSED) {\n      return;\n    }\nif (this.readyState === this.CONNECTING) {\n  this.cancelConnectionImpl();\n}\n\nthis.readyState = this.CLOSING;\nthis.closeConnectionImpl();\n\n}\n```\nSo, yes, while closeConnectionImpl() takes those parameters, close() never passed them on. Happy to add it, though.\n. This is the original close() method:\n``` js\n  close(): void {\n    if (this.readyState === this.CLOSING ||\n        this.readyState === this.CLOSED) {\n      return;\n    }\nif (this.readyState === this.CONNECTING) {\n  this.cancelConnectionImpl();\n}\n\nthis.readyState = this.CLOSING;\nthis.closeConnectionImpl();\n\n}\n```\nSo, yes, while closeConnectionImpl() takes those parameters, close() never passed them on. Happy to add it, though.\n. Well, we never exercise that part of the code in the tests. The tests are pretty stupid. Like, really really stupid... :/\n. Well, we never exercise that part of the code in the tests. The tests are pretty stupid. Like, really really stupid... :/\n. You're funny, @eslint-bot. It's a browser global... Anyway, fixed.\n. You're funny, @eslint-bot. It's a browser global... Anyway, fixed.\n. Seems like we're in agreement then. :)\nI think I can count myself as one of React Native's authors, so I'll just leave them in there until somebody complaints.\n. Seems like we're in agreement then. :)\nI think I can count myself as one of React Native's authors, so I'll just leave them in there until somebody complaints.\n. They're not necessary, but I think they help :)\n. They're not necessary, but I think they help :)\n. Good call. Also good for symmetry with iOS code.\n. Why not ^1.1.0 as that version seems to have a bunch of improvements over 1.0.4 (whereas 1.1.1 and 1.1.2 seem to only be about aesthetics).\n. Grr, yes. This file is, for some reason, indented with tabs and not spaces. Maybe after this PR I'll fix that because it's super annoying.\n. Grr, yes. This file is, for some reason, indented with tabs and not spaces. Maybe after this PR I'll fix that because it's super annoying.\n. Ok.\n. Ok.\n. \n. \n. oh right will do\n. oh right will do\n. Right on. Will do.\n. Right on. Will do.\n. This is what I get for last minute refactoring.\n. This is what I get for last minute refactoring.\n. A valid question! But rest assured, we definitely don't send data twice to JS.\n. We can't. this._incrementalEvents means a readstatechange or progress handler was set via addEventListener(). But it doesn't capture if either handler was set by setting the onreadystatechange or onprogress properties.\n. We can't. this._incrementalEvents means a readstatechange or progress handler was set via addEventListener(). But it doesn't capture if either handler was set by setting the onreadystatechange or onprogress properties.\n. Sure!\n. Sure!\n. Pretty much, with the added twist of trying to look at the Content-Type header as well (which shouldn't matter if I want bytes -- the exact bytes that came down the pipe).\nThe way I see it, without an API to create ArrayBuffers inside JSC (which is only coming in iOS 10), we're left with encoding bytes as strings in some sort of manner. One option would be latin-1 as an encoding, mapping bytes 0-255 to Unicode characters 0-255 (the Latin-1 range). The other option is base64 which introduces 33% overhead, but is ASCII only and consistent what we do in other places (e.g. WebSockets). It also feels a bit less hacky, but meh.\nI don't care which approach we use. We can also change it later if we discover that base64 adds too much overhead.\n. Uh, not sure, I'll get rid of that.\n. Yes, ProgressRequestListener.onRequestProgress was previously only used for upload progress. I am generalizing that interface to be useful for any kind of progress, both request and response. And yes, request upload progress still works.\n. Yep, this changes the event names because events change meaning.\nWhich clients of RCTNetworking are there other than XMLHttpRequest?\n. Ok, I can fix that.\n. If you say so. That's just the existing code we have, I didn't change that part.\n. Ah yeah, guess we should mark it @Nullable.\nI can amend the commit here on github, but it seems @davidaurelio is already amending the diff in FB land. If David doesn't add it while he's in there, I can send a trivial PR after this lands.\n. @davidaurelio I ran into this as well. Did you transpose all the mocks that I added to NetworkingModuleTest.java in my diff to the internal test as well?\n. I see. So is addNetworkInterceptor never called/used?\nIn any case, we can make readWithProgress be more resilient against that case for the time being. We wouldn't lose any functionality we don't currently have, just that FB internally would not get useful information with the 'progress' event (which used to not be dispatched anyway).\nHow about something like this:\n``` java\n  private void readWithProgress(\n      RCTDeviceEventEmitter eventEmitter,\n      int requestId,\n      ResponseBody responseBody) throws IOException {\n    int totalBytesRead = -1;\n    int contentLength = -1;\n    try {\n      ProgressResponseBody progressResponseBody = (ProgressResponseBody)responseBody;\n      totalBytesRead = progressResponseBody.totalBytesRead();\n      contentLength = progressResponseBody.contentLength());\n    } catch (ClassCastException e) {\n      // Ignore\n    }\nReader reader = responseBody.charStream();\ntry {\n  char[] buffer = new char[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];\n  int read;\n  while ((read = reader.read(buffer)) != -1) {\n    ResponseUtil.onIncrementalDataReceived(\n      eventEmitter,\n      requestId,\n      new String(buffer, 0, read),\n      totalBytesRead,\n      contentLength);\n  }\n} finally {\n  reader.close();\n}\n\n}\n``\n.typeof window.onmessagefor symmetry's sake?\n. Since this executes after the webview's content has loaded, I think it'd be good not to stomp on any definition ofpostMessagethat the content may have made. In other words, preface this withif (window.postMessage === undefined).\n. Removing the default for command line arguments is pricely the point here (and the fact that #7899 added them again is the regression from #7961). We want the transformer to be specified as followed:\n1. If specified on command line, use that\n2. If specified byrn-cli.config.js`, use that\n3. Fallback to default configuration\nFor this fallback chain to work properly, there must not be a default value returned by the command line parser, otherwise we stop at (1) and never make it to (2).\n. I'll fix those with the next rebase. (Need #11904 to land first.). ",
    "binlaniua": ":thumbsup::thumbsup:  i need it\n. @jordanna maybe you miss RCT_EXPORT_MODULE() in the RCTNetworkImageViewManager.m\n. javascript\nhttp://manhua1017.122-228-171-12.cdndm5.com/a/aphorism\u683c\u8a00/aphorism\u683c\u8a00_CH01/01.jpg?cid=70452&key=7ffad26a265c2a3b5910818c9f4d37c3\nhas the same problem\nNSURL is nil in the xcode debug console\n. ``` javascript\ncomponentDidMount() {\n    //this.props.navigator.setHidden(true) the same like StatusBarIOS.setHidden\n    StatusBarIOS.setHidden(true, StatusBarIOS.Animation.slide);\n  },\ncomponentWillUnmount() {\n    //this.props.navigator.setHidden(false) the same like StatusBarIOS.setHidden\n    StatusBarIOS.setHidden(false, StatusBarIOS.Animation.slide);\n  }\n```\n. i modify RCTImageDownloader code\n\n. ",
    "BodhiHu": "6 months ... that's long ~\nclosing this ~\n. ",
    "badfortrains": "Played around with this some the last couple of days and have a very rough working example.   Polyfill https://github.com/badfortrains/react-native/tree/WebSocket, example project https://github.com/badfortrains/wsExample.  Uses @SanderSpies work as a base.  \n\nthe plugin api is designed to support web sockets\n\n@vjeux is there any documentation on the plugin api, or a specific place in the code I should look? \n. Interesting, hadn't seen RCTWebSocket.  Thanks for linking that. \nIt looks like the project is aimed at a slightly different goal, but there is definitely some overlap.  RCTWebSocket is a purely native extension that exports a couple of WebSocket functions via the react bridge.  So it would be a separate module that you could import and that would expose an interface to js that would allow you to connect to a websocket/receive messages.  But there isn't a javascript component, and the interface is different than that of browser WebSockets so it would need additional code to work with existing browser websocket libraries.\nMy implementation also includes a native component that provides websocket functions via the bridge, but that module is only exposed through a javascript wrapper that provides a browser-like websocket interface.  My implementation is also a branch of react-native, so both parts are included directly in the project and injected into the global space on the initialization of the javascript environment in the same way react-native currently injects the included XMLHttpRequest polyfill.\nIncluding a websocket polyfill makes it really simple to use websockets in react-native (they would just be there) and thus easier to use websocket libraries.  But on the downside it bloats the codebase/adds complexity for something most people probably won't ever use.  \nThe real solution I think would be to refactor out the native module (could be from what I have or RCTWebSocket), plus the javascript polyfill interface and package that up as its own module that could be loaded into React-Native on demand.  I don't think there is currently a standard way of doing that (that's why I asked about the plugin api, but I think you were right that vjeux was referring to the native module stuff), but it looks like we're getting closer https://github.com/facebook/react-native/issues/235.\n. Interesting, hadn't seen RCTWebSocket.  Thanks for linking that. \nIt looks like the project is aimed at a slightly different goal, but there is definitely some overlap.  RCTWebSocket is a purely native extension that exports a couple of WebSocket functions via the react bridge.  So it would be a separate module that you could import and that would expose an interface to js that would allow you to connect to a websocket/receive messages.  But there isn't a javascript component, and the interface is different than that of browser WebSockets so it would need additional code to work with existing browser websocket libraries.\nMy implementation also includes a native component that provides websocket functions via the bridge, but that module is only exposed through a javascript wrapper that provides a browser-like websocket interface.  My implementation is also a branch of react-native, so both parts are included directly in the project and injected into the global space on the initialization of the javascript environment in the same way react-native currently injects the included XMLHttpRequest polyfill.\nIncluding a websocket polyfill makes it really simple to use websockets in react-native (they would just be there) and thus easier to use websocket libraries.  But on the downside it bloats the codebase/adds complexity for something most people probably won't ever use.  \nThe real solution I think would be to refactor out the native module (could be from what I have or RCTWebSocket), plus the javascript polyfill interface and package that up as its own module that could be loaded into React-Native on demand.  I don't think there is currently a standard way of doing that (that's why I asked about the plugin api, but I think you were right that vjeux was referring to the native module stuff), but it looks like we're getting closer https://github.com/facebook/react-native/issues/235.\n. Haven't done any performance tests, not sure how expensive hit tests are but this could potentially add a fair number of them.  \nReading up a little more on iOS hit testing it looks like by default view layer zposition is not taken into account (haven't seen too many references to this, but this book claims so).  Not sure if that is something we want to honor.  If it is, or performance is an issue an alternative solution could be implementing a custom hitTest for RCTScrollView and only check for zposition there.  Maybe that would be better since I haven't actually seen any other instances of zposition being used.\n. My previous code was not properly dealing with children of zPositioned views, changed it so zIndex is compared at the sibling level.  This allows nesting buttons / touchable elements in sticky section headers on listViews.\n. Thanks @brentvatne for following up on this, the new pr looks like a good solution.\n. ",
    "rojotek": ":+1: for what @vjeux said\n. ",
    "hharnisc": "Submitted a PR, implemented in a similar way to the GeoLocation library https://github.com/facebook/react-native/pull/890\n. Submitted a PR, implemented in a similar way to the GeoLocation library https://github.com/facebook/react-native/pull/890\n. I hear you there @tptee - though the source for socket rocket already lives the the react native library.\n. @nicklockwood understand where you're coming from. I tried a few different ways of using a shared library. Breaking it out into another project felt better than some of the other stuff I came up with. Would be great to use something like cocoapods to manage Obj-C dependencies. \n. I'm in favor of option 1, since it minimizes the size of the codebase -- I imagine the size of the binary will have more of an impact on initial download time and minimal impact on app load time.\nOption 3 would be ok too but I think would be more confusing for developers (while working in the Obj-C or if they find a bug in a websocket related feature)\n. Agree with you @ide - especially since the JS runtime is ready immediately (good to know @vjeux!). Pulling the polyfill via NPM package would be great. I think the firebase community was dealing with this as well, and seems like one potential first point of friction for new framework communities exploring React Native.\n. Agreed, least dependency effort here isn't good enough\nI've spun up another branch to work this out before merging into my forked master\nhttps://github.com/hharnisc/react-native/blob/chrome-debugger-react/packager/debugger.html#L116-L158\nThe only real downside to this approach is that is uses the in-browser transformer. Seems livable to me for a while, but I'd like to hear your thoughts on that. \nA long term approach would be to create a separate NPM module for this and in turn it into a SPA, which would require some more refactoring -- but I'd be keen to see if people find this useful before going down that route.\nAnyways if you could take a look at https://github.com/hharnisc/react-native/blob/chrome-debugger-react/packager/debugger.html - I'll be happy to merge that into this PR.\n. preserving @tadeuzagallo comment:\n\nThis timer is sad... It would probably be better to just include it on bridge calls, and set a longer timer in case the bridge is very idle. Also maybe a way to disable it? If you were profiling on chrome you probably wouldn't want it.\n. going to go ahead an merge this anyways - feels much more smooth using React (of course right?? :smiley_cat: )\n. @tadeuzagallo I hear you for the use case with doing profiling - there needs to be an easy way to toggle it on and off.\n\nI think there is something to be said for updating the values on a regular interval, it would look really odd to have the charts updating sporadically as bridge calls came in.\nHere's what I'm thinking\n- Move the timer over to JS setInterval\n- Request the usage metrics over the Websocket on each cycle\n- Device responds to the message with the CPU and memory metrics\nThis allows the setInterval to be easily cleared from Web UI and configured to other intervals.\n. ",
    "oney": "Android support please!\n@brentvatne How long does React Native support WebSocket? If need to wait long time, I will try to build a bridge module of https://github.com/socketio/socket.io-client-java\n. @satya164 Awesome!! :beers: \n. ",
    "hlynn93": "Hi is the websocket or socketio now compatible with Android? If it is, any particular doc for the usage? I've been trying to make it work and so far it works on iOS but not on android.\n. ",
    "barak-shirali": "Is SSL required for socket? socket.io-client seems working fine on react native when remote debugger is enabled. But I get following error when remote debugger is disabled.\nCFNetwork SSLHandshake failed (-9806)\n. ",
    "nickhudkins": "UITabBar tintColor is controlled by the static setTintColor method on UITabBar#appearance. In order to actually adjust the TabBarItem tint, you either need to implement custom Tab Bar Items, or you'll need to provide a hook to the method @skevy mentioned.\n. UITabBar tintColor is controlled by the static setTintColor method on UITabBar#appearance. In order to actually adjust the TabBarItem tint, you either need to implement custom Tab Bar Items, or you'll need to provide a hook to the method @skevy mentioned.\n. :+1: \n. The View that NavigatorIOS creates has no dimensions, toss a style that has {flex: 1} on it, and paddingTop: 64, flex: 1 on the myPage View and you'll be all set :)\nvar styles = StyleSheet.create({\n  nav: {\n    flex: 1\n  },\n  myPage: {\n    flex: 1,\n    backgroundColor: 'orange',\n    paddingTop: 64\n  }\n});\n. @elado, 64 may be a magic number in this case, but, the ability to place content under the header (since translucency is now a thing) is a feature and therefore the developer should be responsible for ensuring what content should display unobstructed by the header. It is a documented number, and not one that is worth querying for unless apple plans on releasing a new nav bar height sometime soon. (In my personal opinion). If this number COULD vary I would say let's do something different but I believe it can be treated effectively as a constant. That is, until apple releases iOS 12 and all of this goes out the window ;)\n. ",
    "paulmillr": "@vkurchatkin \n\n\nAdditionally chokidar has so many problems but it's suffice to say it doesn't work on large codebases like ours.\n\nThey fixed a lot of issues in 1.0. I used to find it unreliable for months, but I suggest you give it another try unless you're absolutely sure.\n\nHe has the point. If chokidar has serious problems, why doesn't anyone report them? Are you absolutely sure that sane (which uses child_process) would handle large codebases without issues?\n. @vkurchatkin \n\n\nAdditionally chokidar has so many problems but it's suffice to say it doesn't work on large codebases like ours.\n\nThey fixed a lot of issues in 1.0. I used to find it unreliable for months, but I suggest you give it another try unless you're absolutely sure.\n\nHe has the point. If chokidar has serious problems, why doesn't anyone report them? Are you absolutely sure that sane (which uses child_process) would handle large codebases without issues?\n. Would be great to go full NPM without homebrew though \u2014 opened the issue https://github.com/facebook/watchman/issues/91\n\nAlso \"child_process\" is dishonest.\n\nRight. Sorry for that, the import confused me.\n@amasad what about that?\n// We need to ask the client binary where to find it.\n  // This will cause the service to start for us if it isn't\n  // already running.\n  var watchmanCommand = this.watchmanBinaryPath + ' get-sockname';\n  childProcess.exec(watchmanCommand,\n. Would be great to go full NPM without homebrew though \u2014 opened the issue https://github.com/facebook/watchman/issues/91\n\nAlso \"child_process\" is dishonest.\n\nRight. Sorry for that, the import confused me.\n@amasad what about that?\n// We need to ask the client binary where to find it.\n  // This will cause the service to start for us if it isn't\n  // already running.\n  var watchmanCommand = this.watchmanBinaryPath + ' get-sockname';\n  childProcess.exec(watchmanCommand,\n. @amasad sounds great\n. @amasad sounds great\n. ",
    "es128": "@amasad Do you perceive that there would be value in adding a watchman option to chokidar for users willing to do the separate non-npm install? \nIf we were to move in that direction, is there potential for consolidating efforts toward a single library, or are there any other concerns/shortcomings with the recent versions of chokidar that would prevent you from considering this?\n. @amasad Do you perceive that there would be value in adding a watchman option to chokidar for users willing to do the separate non-npm install? \nIf we were to move in that direction, is there potential for consolidating efforts toward a single library, or are there any other concerns/shortcomings with the recent versions of chokidar that would prevent you from considering this?\n. > Yes, this sounds great. If chokidar has all the backends/fallbacks that sane has then there is no reason for sane to exist.\nWell let me just finish pushing 1.0.0 out the door (should be next week), but after that I'd be happy to collaborate on giving this idea a try.\n. > Yes, this sounds great. If chokidar has all the backends/fallbacks that sane has then there is no reason for sane to exist.\nWell let me just finish pushing 1.0.0 out the door (should be next week), but after that I'd be happy to collaborate on giving this idea a try.\n. By the way, one of the remaining pain points remaining on using chokidar with extremely large file trees isn't the actual watching (unless using polling) - it's the need to scan the entire tree at instantiation as a basis for normalizing events. Currently use readdirp for this, have been thinking about submitting a patch there to create a \"fast mode\" option that avoids getting a stat for each file.\n. By the way, one of the remaining pain points remaining on using chokidar with extremely large file trees isn't the actual watching (unless using polling) - it's the need to scan the entire tree at instantiation as a basis for normalizing events. Currently use readdirp for this, have been thinking about submitting a patch there to create a \"fast mode\" option that avoids getting a stat for each file.\n. Well yeah - chokidar already has great support for 2-4 on your list. The effort would be to add watchman, and preferably detect its presence to have it kick in by default when available - otherwise fall back to existing defaults.\n. Well yeah - chokidar already has great support for 2-4 on your list. The effort would be to add watchman, and preferably detect its presence to have it kick in by default when available - otherwise fall back to existing defaults.\n. Also, regarding polling, see https://github.com/paulmillr/chokidar/issues/242. Been mulling over how to solve this as well. Want to cover as many cases as possible where we can get it to \"just work\" without any environment-specific settings needed.\n. Also, regarding polling, see https://github.com/paulmillr/chokidar/issues/242. Been mulling over how to solve this as well. Want to cover as many cases as possible where we can get it to \"just work\" without any environment-specific settings needed.\n. > has really improved in the year that I hadn't looked\nhaha yeah well I've been putting a lot of effort into it since around October\n. @wez Cool - thanks for the tips\n. @wez Cool - thanks for the tips\n. @stefanpenner It's worth noting that fsevents is a optional dependency for chokidar. It continues to function adequately without it. And lots of people are using this today, very few have problems or concerns. \nThere's also an effort underway in the fsevents project to speed up installs using node-pre-gyp to distribute pre-compiled binaries. \n. @stefanpenner It's worth noting that fsevents is a optional dependency for chokidar. It continues to function adequately without it. And lots of people are using this today, very few have problems or concerns. \nThere's also an effort underway in the fsevents project to speed up installs using node-pre-gyp to distribute pre-compiled binaries. \n. Yes I agree. And I deal with it when people come asking for help. At this point the answers are easily google-able.\nStill, wish npm handled it better. \n. Yes I agree. And I deal with it when people come asking for help. At this point the answers are easily google-able.\nStill, wish npm handled it better. \n. Yes. And it didn't. Or, maybe better. But still far from adequate. \n. Yes. And it didn't. Or, maybe better. But still far from adequate. \n. > just have nice things\nProgress is being made all the time, but there will always be issues and more to improve/solve. \n. > just have nice things\nProgress is being made all the time, but there will always be issues and more to improve/solve. \n. > is there a relevant issue open on libuv?\nThere's plenty of discussions I've seen in the node and libuv issue trackers that tend to culminate in \"we're exposing what the OS provides, nothing more we can do\". Here's a more recent one in io.js that is somewhat relevant: https://github.com/iojs/io.js/issues/375\nAnd there's actually a reasonable point they're making there for many circumstances. For instance, editors often cause a lot of churn when they save files, and I'm not sure it's core's job to normalize that kind of thing. But to provide a smooth experience in tooling, the normalization is necessary. So there will likely remain an ongoing place for higher-level userspace modules that do this sort of work.\n. > is there a relevant issue open on libuv?\nThere's plenty of discussions I've seen in the node and libuv issue trackers that tend to culminate in \"we're exposing what the OS provides, nothing more we can do\". Here's a more recent one in io.js that is somewhat relevant: https://github.com/iojs/io.js/issues/375\nAnd there's actually a reasonable point they're making there for many circumstances. For instance, editors often cause a lot of churn when they save files, and I'm not sure it's core's job to normalize that kind of thing. But to provide a smooth experience in tooling, the normalization is necessary. So there will likely remain an ongoing place for higher-level userspace modules that do this sort of work.\n. @stefanpenner the npm UX issue is different from the one @amasad is referring to.\nThere is an issue in fsevents when it's bombarded with simultaneous events in some specific circumstances that sometimes causes processes to crash with a segfault - notably doing rm -rf node_modules && npm i with a big enough dep tree. @bnoordhuis has been putting some time in toward trying to resolve it, although that effort is still in progress. Unfortunately I don't have the C chops to do something about it myself, and I hope we're eventually able to sort it out.\nNonetheless, as has been discussed in this thread, looking forward to adding a watchman interface to chokidar which would provide another option for mediating this and other problems that still exist with the lower-level watch methods currently being relied upon. \n\nif the c-extension fails, the resulting watching experience may be as broken as the c-extension failing implied\n\nI disagree with this. In this case it falls back to the same code that works very well on Linux and Windows. It's not as good as it would be with fsevents, but it's not flat-out broken. The test suite is run using the fs.watch and fs.watchFile modes on all three platforms.\n. ",
    "stefanpenner": "\ncc @stefanpenner any concerns?\n\nWithout digging in further, the only superficial concern is the fsevent c-extension chokidar has is a pretty hefty dependency. Especially for tooling authors, who have consumers that may not have the required toolchains installed or experience to debug available. \nMaybe node-gyp / chokidar have improved dramatically since I last used them, and my concerns are now pointless.\nI'll try to find some time in the next few days to play, and come up with some concrete feedback.\n. > cc @stefanpenner any concerns?\nWithout digging in further, the only superficial concern is the fsevent c-extension chokidar has is a pretty hefty dependency. Especially for tooling authors, who have consumers that may not have the required toolchains installed or experience to debug available. \nMaybe node-gyp / chokidar have improved dramatically since I last used them, and my concerns are now pointless.\nI'll try to find some time in the next few days to play, and come up with some concrete feedback.\n. > It continues to function adequately without it.\nIf it fails to build, it does create an extremely noisy/confusing experience.\n- what is all this output\n- what did i do wrong\n- etc etc.\nIt is a pretty disheartening experience, for an optional piece of infrastructure to draw so much attention to itself, when it fails.\n. > It continues to function adequately without it.\nIf it fails to build, it does create an extremely noisy/confusing experience.\n- what is all this output\n- what did i do wrong\n- etc etc.\nIt is a pretty disheartening experience, for an optional piece of infrastructure to draw so much attention to itself, when it fails.\n. > Yes I agree. And I deal with it when people come asking for help. At this point the answers are easily google-able.\nthis is sub-optimal, it reflects poorly on us (tooling maintainers) and increases pain and noise in our issue trackers. It is our responsibility to provide frictionless experiences, so developers can just do their actual work.\nTheoretical ideal resolutions:\n- get improved fsevent handling upstreamed to libuv\n- work with NPM to handle this better (as @es128 mentioned, although we should likely elaborate )\n- bundle binaries and use sockets to communicate...\nalthough these solutions will likely not satisfy short-term use-cases, it would be great to try and get the ball rolling so someday we can just have nice things.\n. > Yes I agree. And I deal with it when people come asking for help. At this point the answers are easily google-able.\nthis is sub-optimal, it reflects poorly on us (tooling maintainers) and increases pain and noise in our issue trackers. It is our responsibility to provide frictionless experiences, so developers can just do their actual work.\nTheoretical ideal resolutions:\n- get improved fsevent handling upstreamed to libuv\n- work with NPM to handle this better (as @es128 mentioned, although we should likely elaborate )\n- bundle binaries and use sockets to communicate...\nalthough these solutions will likely not satisfy short-term use-cases, it would be great to try and get the ball rolling so someday we can just have nice things.\n. > Yes. And it didn't. Or, maybe better. But still far from adequate.\nis there a relevant issue open on libuv?\n. > Yes. And it didn't. Or, maybe better. But still far from adequate.\nis there a relevant issue open on libuv?\n. Ya the editor  induced churn is painful. Maybe watchman itself we can push through the ecosystem to help facilitate better experiences.\nI suspect it fairly unlikely our os vendors will be likely to improve in the short term, but maybe it's worth dreaming?\n. Ya the editor  induced churn is painful. Maybe watchman itself we can push through the ecosystem to help facilitate better experiences.\nI suspect it fairly unlikely our os vendors will be likely to improve in the short term, but maybe it's worth dreaming?\n. In my experience, the watchman process is the most stable form of watching I have yet to encounter.\nI re-visited the c extension problem and the issue persists. New users are extremely confused, often believing the entire attempt failed or at best assuming a quality issue in the tool they use.\nIn hopes of dealing with this issue at the source, I have opened the following issue with NPM: https://github.com/npm/npm/issues/7892 I believe this is primarily a UX issue, hopefully it can be sorted out.\nOne downside though, is that if the c-extension fails, the resulting watching experience may be as broken as the c-extension failing implied :(\n2015 and we have to resort to hacks to get meaningful information change events form the FS. What a sad state of affairs.\n. Yes. I am raising an additional concern.\n. There is another cohort, one with Xcode installed but with a broken compiler tool chain. This is sadly common with those with enough context with the tech to be dangerous but insufficient context or time to resolve. This can easily occur when upgrading An OS, or botching something as simple as env $PATH.\nAlthough it would be nice to re-delegate this issue back to the user in question. Our goal should be to reduce complexity/ friction/ noise not to compound it unless absolutely needed.\nI realize I am likely coming off as a pain, but my motivations are really just to pave the pain points I observe from my users.\n. ",
    "bhosmer": "Hi James - could you describe the setup where Flow isn't finding the react-native module? Normally it should be findable under its own filename (sans extension), even in Haste - that's how it's found when you run Flow from the root of this repo, for example (note the numerous files that require('react-native'), that resolve properly without the @providesModule). If you have a repro, that'd be great - you've probably found a bug in Flow's module resolution. Thanks!\n. @ide James - really appreciate your detailed response! There was a Flow bug which prevented package.json files on include paths from being picked up properly - once the fix is deployed, the @providesModule will no longer be necessary (but it's a fine workaround). Thanks again!\n. HI @jergason - so the problem is that flow init writes an empty .flowconfig into the root of the new project directory. (react-native init should instead write one that's set up properly, but per @frantic, that's not happening just yet.)\nFor now, the workaround is to copy the .flowconfig from the root of react-native into your project directory and tweak it, by replacing the two lines in the [library] section with this one:\nnode_modules/react-native/Libraries/react-native/react-native-interface.js\nThat should get you to 0 errors using Flow 0.8.0.\n. @frantic LGTM - passes w/0 errors, right? \n. @ide James, note that such an include wouldn't come in handy here - the project has its own copy of everything, it's not reaching back to the original React Native dir. That said, we've talked about some sort of include feature, but it would be more a way to include raw content than a deep \"subproject\" sort of feature, at least for now. Will update 308 with any progress.\n. ",
    "romanonthego": "is it a bug or is it by design?\nsymlinks would be really handy actually :(\n. @amasad no pressure, but when to expect next sync? :) will it be in 0.6.0 release?\n. still an issues as to 0.6.0 and 0.7.0-rc ...\n. thx, will totaly look into it.\n. does bundle command included correctly in 0.4.1?\ni've recieve error\n``` bash\nZapCourier [master\u25cf] % react-native bundle\nBuilding package...\n/Users/romanonthego/Code/ZapCourier/node_modules/react-native/node_modules/bluebird/js/main/promise.js:626\n            throw e;\n                  ^\nError: EMFILE, open '/Users/romanonthego/Code/ZapCourier/node_modules/react-native/node_modules/react-tools/src/browser/ui/dom/ViewportMetrics.js'\n```\nevery time.\nnpm start + curl still works fine.\non same notice - why react 0.4.0 and 0.4.1 does not marked as latest release? is it considerate unstable or is it just a github problem (npm @latest installs 0.4.1)?\n. I've just cleaned npm cache and reinstall all global packages (react-native and react-native-cli including).\nBug is gone, all works like a charm.\n@frantic i've used this fix and it didn't help at the moment (I've encountered this bug before, although it was in form Error: EMFILE, too many open files and not Error: EMFILE, open #{path}).\n. +1\n..and any updates? it's impossible to use many of libraries right now (baobab and typology for example) without monkey patching it.\n. I believe it is 0.4.1 not 0.4.0 - i've updated my up to 0.4.0 without problem while 0.4.1 break something in styling (particulary in top navbars - but i'm using https://github.com/Kureev/react-native-navbar so i'm not sure where collision is happening).\nAnyway, you may consider to rollback to 0.4.0 - this could work.\n. i'll try this way, thx.\nbut still - some tightly coupling don't you think?\n. @ide \n1. Did you mean componentDidFocus?\n2. I don't think i follow. How do you get the reference to mounted component instance? and call a custom method?\n. @ide\nThank you very much, everything is working. Only problem here is scenereRef being renderScene component, not actually component of the route which forces to proxy this kind of events down the refs chain. Not very clean but way better than any other solution i could think of without much of a pain.\ni'll close this issue and paste some code for any future references:\nnavigator component\njsx\n<Navigator\n        ref=\"nav\"\n        style={styles.container}\n        configureScene={this.sceneConfig}\n        renderScene={this.renderScene}\n        onItemRef={function(ref, index, route) {\n            route.sceneRef = ref;\n          }\n        }\n        onDidFocus={\n          function(route) {\n            route.sceneRef.sceneDidFocus();\n          }\n        }\n        initialRoute={{\n        ...\n      }}\n    />\nrenderScene\njsx\nrenderScene(route, navigator) {\n    return (\n      <AppScene\n        component={route.component}\n        navBar={route.navigationBar}\n        navigator={navigator}\n        route={route}\n      />\n    );\n  },\nAppScene.js\n``` jsx\nvar Scene = React.createClass({\n sceneWillFocus: function() {\n    var component = this.refs.component;\n// do any checks needed here\ncomponent.componentWillFocus();\n\n}, \nsceneDidFocus: function() {\n    var component = this.refs.component;\n// do any checks needed here\ncomponent.componentDidFocus();\n\n},\nrender: function() {\n    var Component = this.props.component;\n    var navBar = this.props.navBar;\nreturn (\n  <View style={styles.scene} ref=\"scene\">\n    {navBar}\n\n    <Component {...this.props} ref=\"component\"/>\n\n  </View>\n);\n\n}\n});\n```\nThis will allow to use Will/DidFocus callbacks defined on component level;\nBut still we will need better \"navigator view\" handling:\n1. hiding next/back button;\n2. replacing next/back button text;\n3. replacing next/back button components (with ActivityIndicator for example);\n4. defining next/back button press handlers on component passed to route level, as it's clear that this logic belongs to component, not subject pushed this component to route;\n5. defining will/did focus/blur callbacks on component level, not passing it manually through scene rendering method; It's very important since componentWillUnmount does not called with navigator transition so there is no way to clear timeouts, unsubscribe from events etc.\nBut i believe it is whole other issue.\n. this is exactly what i did.\nand while i had NavigatorIOs as child and Navigator as parent everything was fine.\nBut NavigatorIOs NavigationBar isn't customisable so i've replaced NavigatorIOs with Navigator.\nAnd strange things start to happen.\nfirst thing related to https://github.com/facebook/react-native/issues/1155 - suddenly componentDidFocus was skipped on component of parentNavigator but called of component pushed to childNavigator (within the renderScene of parentNavigator!). If I remove childNavigator from rendering stack (replace it with any other content) - componentDidFocus called correctly again.\nnext thing is with sudden switch context of Navigator: childNavigator basically handles ListView, pushing to ItemView and pop back. After switching tabs (yep, child navigator is inside of TabNavigation) sometimes backButton works as pop() of childNavigator and sometimes as pop() of parentNavigator.\ni've still digging into this mess, and will try to recreate this in example app (i could not share this particular app unfortunately).\n. ok. so this one most certainly have to do with request method (blob).\nI'm yet to figure out why sometimes where is parentNavigator and sometimes where isn't but still.\n@ide would you please help me with this one?\n. actually i no longer have an issue since i've moved from tab layout to slide menu :)\nall the symptoms I have here is reported in https://github.com/facebook/react-native/issues/1159:\n1) switching context between navigators inside tab view in very, very unclear way - resulting back button calling pop() on parent and child navigator; \n2) skipping focus phase of parent navigator;\nthe bug with componentDidFocus must be related to context switching.\nwhat should I do with this issue? this is kind of clone, but not exactly and problem described stands as to 0.4.4.\nI'll provide example app as soon as i could, but not this week, is for sure :(\n. DEV is good to determine development and production environment, but what if you have multiple production environments (stage, test, a/b testing etc)?\nFor now we stick with exporting environment variables from xcode via native module constants export. (probably will open source it soon).\nBut I do think react-native will be better with kind of rails config solution (yml/json config files for environments, selection via command-line arguments). Every app will need this as soon as it's gets out of sandbox so this could be considered \"core feature\".\n. ",
    "JaapRood": "I finally had some time to make an example to prove it's not working. Check out this repo which references the example app component through a symlink, which doesn't get resolved.\nhttps://github.com/JaapRood/react-native-packager-symlink-bug\nNow, if only I had any idea on why.\n. Great @amasad, that would be immensely helpful!\n. ",
    "matth3wga0": "@vjeux StyleSheet provides a high level way, manipulating the DOM is mostly like the low level way to control the views stack. As usual stylesheet, display is most useful rules, so I think React Native should implement this to give developers more choices.\n. This one maybe works, but it's not the best solution for flex layout.\nhttps://github.com/lucholaf/react-native-grid-view\n. Why shouldn't the annotation be a node? \nAt least provide a way to customize the annotation, replace the default drop pin on iOS, leverage the appearance between iOS and Android.\n. @vkurchatkin Thanks, but it seems that eval doesn't support Destructuring.\njs\neval(\"var React = require('react-native'); var {Text} = React; module.exports = Text;\");\nThe code above will throw an error\nUnexpected token {\n. @ide Thanks man.\n. See also https://github.com/facebook/react-native/issues/638\n. Thanks @ide, by checking find-requires, I think the quick way is using Regex.\n. I saw CocoaSPDY is injecting NSURLConnection and NSURLSession, is it possible to make SPDY working with React Native?\n. ",
    "ranyefet": "+1 for UICollectionView, any estimate when it might be available?\n. +1\n. @brentvatne @ide Thanks for the comments. \nThe reason why I wanted the \"Done\" button is because in the iOS Simulator I wasn't able to close the keypad by clicking anywhere on the screen. The only way to close the keypad was to hit Return on my mac keyboard.\nI haven't tested it yet on a real device, so I'm not sure what will happen there. \nDo you know If this is a bug with the simulator, or do I need to implement this functionality with code?\n. Thanks but the input started acting weird.\nIs there a better way to do form validation?\n. did you try running npm update?\nalso make sure to re-run the packager and re-build the app after updating.\n. ",
    "karpotkin": "https://www.dropbox.com/s/jmss0ovvvp3cov1/Screenshot%202015-04-03%2013.17.26.png?dl=0 and scroll top depricated\n. ",
    "kevinkam": "How to focus on the second TextInput?\nI have set the first TextInput with property returnKeyType=\"next\"\nand second TextInput with property returnKeyType=\"go\"\nBut when I click the \"next\" button, it just hide the keyboard and unfocus the first TextInput\nHow can I focus on the second TextInput?\nThanks!\n. ",
    "auser": "bump\n. @brentvatne Yes, I hope to get to it this weekend. \nI've had a bit of personal junk going on lately. I'll check in with you on irc.\n. I'm working on adding the inputAccessoryView on IOS. I'll update this issue when I have a PR.\n. Bump: I see this error as well\n. ",
    "pincheira": "Just checked it again, still happening. Current solution is still renaming from jpg to png.\nThanks @debreuil \n. ",
    "yelled3": "@amasad I'm using version \"0.4.2\" and this is still happening...\nimage filename is grumpy.jpg\nthe asset name is grumpy\nand loading it with:\njs\nvar grumpyImage = require('image!grumpy');\n\nWDYT?\n. @brentvatne the CI seems to fail for some reason\nThe operation couldn\u2019t be completed. (NSURLErrorDomain error -1004.)\" - RedBox error: Could not connect to development server. Ensure node server is running - run 'npm start' from ReactKit root\nThe operation couldn\u2019t be completed. (NSURLErrorDomain error -1004.):\n60     }];\n61   }\n62 \n63   XCTAssertNil(redboxError, @\"RedBox error: %@\", redboxError);\n     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n64   XCTAssertTrue(foundElement, @\"Cound't find element with text '%@' in %d seconds\", TEXT_TO_LOOK_FOR, TIMEOUT_SECONDS);\n65 }\n\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    \u2717 -[EndToEndTestTests testRendersWelcomeScreen] (383 ms) (0)\n    0 passed, 1 failed, 0 errored, 1 total (387 ms)\nFailures:\n  0) -[EndToEndTestTests testRendersWelcomeScreen] (EndToEndTestTests.xctest)\nany idea why?\n. @oceantang I also wanted to something similar, but ended up just replacing the rootViewController\n``` objc\nimport \"AppDelegate.h\"\nimport \"RCTRootView.h\"\n@interface AppDelegate()\n// keep a reference to the React Native VC\n@property (nonatomic, strong) UIViewController *reactNativeViewController;\n@end\n@implementation AppDelegate\n\n(BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions\n{\n  NSURL *jsCodeLocation;\n\njsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.ios.bundle\"];\nRCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                      moduleName:@\"CrowdTest\"\n                                                   launchOptions:launchOptions];\nself.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\n// keep a reference to the React Native VC\n  self.reactNativeViewController = [[UIViewController alloc] init];\n  self.reactNativeViewController.view = rootView;\nself.window.rootViewController = self.reactNativeViewController;\n  [self.window makeKeyAndVisible];\nreturn YES;\n}\n\n(void)goToReactNative {\n\n[self.window.rootViewController dismissViewControllerAnimated:TRUE completion:nil];\n}\n\n(void)goNativeStoryboard {\n\nUIViewController *vc = [UIStoryboard storyboardWithName:@\"NativeStoryboard\" bundle:nil].instantiateInitialViewController;\n[self.window.rootViewController presentViewController:vc animated:true completion:nil];\n}\n@end\n```\ncall the bridge method SwiftApp.goToNative() from ReactNative js\nswift\n@objc(SwiftApp)\nclass SwiftApp: NSObject {\n  @objc func goToNative() -> Void {\n    if let appDelegate = UIApplication.sharedApplication().delegate as? AppDelegate {\n      appDelegate.goNativeStoryboard()\n    }\n  }\nand to go back to ReactNative\n``` swift\nimport UIKit\nclass NativeViewController: UIViewController {\n@IBAction func onClick(sender: AnyObject) {\n  if let appDelegate = UIApplication.sharedApplication().delegate as? AppDelegate {\n    appDelegate.goToReactNative()\n  }\n}\n\n}\n```\nthis is somewhat hacky, but allows you to work directly with native iOS components which aren't yet fully supported.\nhope it helps\n. I was about to open a similar PR and found this, so :+1: @soheil \n@brentvatne \n\nWould a description like the above help to have in the documentation? Or would there need to be more information?\n\nI would even go further and suggest adding a new page in the docs that compares between Navigator and NavigatorIOS. \nIt would also be helpful to include examples to use cases where it's best to use one and not the other.\n. @brentvatne amazing work - thanks!\n\nseparate sidebar section called Third Party or Libraries\n\n@paramaggarwal I agree - I think people should know which component is more supported.\n. @facebook-github-bot \n\n. @syousif94 @rxb thank you for your answer;\nI was trying to suggest that we extend the ListView component to support a fairly common use case - by easily allowing you to config it.\nobviously the StackOverflow example is a valid solution if the intention is to leave the ListView component as minimal as possible.\nthat being said, the example is very not trivial, as you can see in the example description \n\nYou need to use a combination of flexbox, and the knowledge that ListView wraps ScrollView and so takes on its properties. With that in mind you can use the ScrollView's contentContainerStyle prop to style the items. \n\nIMO, most new comers to the project would find it difficult to implement a grid view, without any changes to the interface or the official docs.\n@sahrens \nperhaps adding a similar example to the docs, would help to clarify the issue.\n. @brentvatne thanks - will do :-)\n. > If you'd like to add an example to the docs that would be awesome!\n@brentvatne I created an example repo:\nhttps://github.com/yelled3/react-native-grid-example\nwhere should I include this? in the ListView docs? add as a subfolder to /Examples/ ?\n. @brentvatne take a look: https://github.com/facebook/react-native/pull/1668\n\nA) this would be much harder to do if ListView was backed by UITableView\n\n@shayne then perhaps it should be backed by UICollectionView - this way it can support custom layouts (like Pinterest layout)\nalso,  is wrapping UITableView on the project's roadmap?\nit was my understanding that it would be very non-trivial to implement...\n. @brentvatne well done :+1: \n. @vjeux /cc\n. @checkraiser thanks for link but your article is the same as the example I've included and does not address any of my questions :-)\n. @JohnyDays few questions;\n- shouldn't I pass a weakSelf (of my viewcontroller) to the moduleProvider block?\n- have you encountered any issues with this solution?\n- can you add some more details regarding the moduleProvider? \n  it didn't appear in the official docs - only thing I found about it was in RCTBridge.h\n\nThis block can be used to instantiate modules that require additional\ninit parameters, or additional configuration prior to being used.\nThe bridge will call this block to instatiate the modules, and will\nbe responsible for invalidating/releasing them when the bridge is destroyed.\nFor this reason, the block should always return new module instances, and\nmodule instances should not be shared between bridges.\ntypedef NSArray *(^RCTBridgeModuleProviderBlock)(void);\n\nand from reading the above docs, this seems like you're kinda misusing the moduleProvider block.\n. @vjeux @jingc \ncan you further share, what are currently the main issues? \n. @vjeux \n\nSounds good to me\n\n@brentvatne we good to merge?\n. @brentvatne \n\nwe should update the embedded app docs to explain how this would be different for Swift\n\n\n. > Any interest in tackling it?\nhonestly, I wouldn't know where to begin with this... :-/\n. @ide \n\nI think we can make writing stylesheets better in a bunch of ways.\n\nwhat other issues have you encountered?\n\nIn fact I encourage you to do that (ex: set up a project called MultiStyleSheet) to explore and learn how useful new techniques like this are.\n\nwill do :-)\n. @JohnyDays \nThe issue with you're last suggestion is that it assumes that BigLabelStyle and RedLabelStyle both have a single key (e.i label)\nif we change the create interface to specify a single key, the maybe it would work:\n``` js\nvar BigLabelStyle = StyleSheet.create('big_label', {\n    fontSize: 18,\n    padding: 5\n});\nvar RedLabelStyle = StyleSheet.create('red_label', {\n    color: 'red'\n});\nvar BigRedLabelStyle = Stylesheet.create('big_red_label', [\n  BigLabelStyle,\n  RedLabelStyle,\n  {\n    fontSize: 24\n  }\n])\n```\nthen you can just pass it directly to the view\njs\n<Text style={BigRedLabelStyle}>...</Text>\n. done\n. sorry for nitpicking here, \nbut you should use dot notion self.beginningOfDocument in all places\n. ",
    "jotshin": "@corymsmith Thanks for your information. :) I want to adjust the icon size and TabBar size / color. My question was actually to see if Facebook has already made the TabBar styling ready and what the properties / attributes are.\nIt seems you implemented this feature by iOS native modules, right? I also saw that you used CSS absolute positioning, but could this be related? I know a little Objective-C but couldn't understand how the code flows completely. Any hint for what code or doc I should further study to gain better understanding on this would be very appreciated.\n. @corymsmith Thanks for your information. :) I want to adjust the icon size and TabBar size / color. My question was actually to see if Facebook has already made the TabBar styling ready and what the properties / attributes are.\nIt seems you implemented this feature by iOS native modules, right? I also saw that you used CSS absolute positioning, but could this be related? I know a little Objective-C but couldn't understand how the code flows completely. Any hint for what code or doc I should further study to gain better understanding on this would be very appreciated.\n. @brentvatne Yes it always happens. The code is mostly from React Native tutorial app with minor editing.\n```\nvar fetch = require('fetch');\nvar DetailPage = require('./details')\nvar REQUEST_URL = 'https://raw.githubusercontent.com/facebook/react-native/master/docs/MoviesExample.json';\ngetInitialState: function() { \n    return {\n      //movies: {},\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2,\n      }),\n      loaded: false,\n    };\n  },\ncomponentDidMount: function() {\n    this.fetchData();\n  },\nfetchData: function() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.movies),\n          loaded: true,\n        });\n      })\n      .done();\n  },\ngetDataSource: function(movies: Array): ListView.DataSource {\n    return this.state.dataSource.cloneWithRows(movies);\n  },\nrenderLoadingView: function() {\n    return (\n      \n\n          Loading movies...\n        \n\n    );\n  },\nrender: function() {\n    if (!this.state.loaded) {\n      return this.renderLoadingView();\n    }\n    return (\n      \n\n\n\n    );\n  },\n_renderMovie: function(movie){\n    return(\n      \n this.selectMovie(movie)}>\n          \n\n\n\n                {movie.title}\n              \n\n\n\n\n\n    );\n  },\nselectMovie: function(movie){\n    this.props.navigator.push({\n      title: movie.title,\n      component: DetailPage,\n      passProps: {movie: movie}\n    });\n  },\n});\n```\n. @brentvatne Yes it always happens. The code is mostly from React Native tutorial app with minor editing.\n```\nvar fetch = require('fetch');\nvar DetailPage = require('./details')\nvar REQUEST_URL = 'https://raw.githubusercontent.com/facebook/react-native/master/docs/MoviesExample.json';\ngetInitialState: function() { \n    return {\n      //movies: {},\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2,\n      }),\n      loaded: false,\n    };\n  },\ncomponentDidMount: function() {\n    this.fetchData();\n  },\nfetchData: function() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.movies),\n          loaded: true,\n        });\n      })\n      .done();\n  },\ngetDataSource: function(movies: Array): ListView.DataSource {\n    return this.state.dataSource.cloneWithRows(movies);\n  },\nrenderLoadingView: function() {\n    return (\n      \n\n          Loading movies...\n        \n\n    );\n  },\nrender: function() {\n    if (!this.state.loaded) {\n      return this.renderLoadingView();\n    }\n    return (\n      \n\n\n\n    );\n  },\n_renderMovie: function(movie){\n    return(\n      \n this.selectMovie(movie)}>\n          \n\n\n\n                {movie.title}\n              \n\n\n\n\n\n    );\n  },\nselectMovie: function(movie){\n    this.props.navigator.push({\n      title: movie.title,\n      component: DetailPage,\n      passProps: {movie: movie}\n    });\n  },\n});\n```\n. @frantic I tried with your simplified example and got the same message as below:\nmessage: Network request failed\nExceptionsManager.js:30 handleException\nInitializeJavaScriptAppEngine.js:71 handleErrorWithRedBox\nerror-guard.js:32 ErrorUtils.applyWithGuard\nMessageQueue.js:95 guardReturn\nMessageQueue.js:302 MessageQueueMixin.callFunctionReturnFlushedQueue\ndebugger-ui:54 messageHandlers.executeJSCall:method:arguments:callback:\ndebugger-ui:80 ws.onmessage\n. @frantic I tried with your simplified example and got the same message as below:\nmessage: Network request failed\nExceptionsManager.js:30 handleException\nInitializeJavaScriptAppEngine.js:71 handleErrorWithRedBox\nerror-guard.js:32 ErrorUtils.applyWithGuard\nMessageQueue.js:95 guardReturn\nMessageQueue.js:302 MessageQueueMixin.callFunctionReturnFlushedQueue\ndebugger-ui:54 messageHandlers.executeJSCall:method:arguments:callback:\ndebugger-ui:80 ws.onmessage\n. @ide It works (resetting the simulator)! Thanks for giving me a hand. Previously I also encountered another issue that was solved by the same mean. Could you know why it is caused?\n. @ide It works (resetting the simulator)! Thanks for giving me a hand. Previously I also encountered another issue that was solved by the same mean. Could you know why it is caused?\n. @ide Unfortunately after resetting the simulator running either the simple app frantic suggests or the one I posted will freeze. Occasionally I saw the same error messages in the Xcode console, but now I could see the data info (JSON or the ListView) before it hangs. I'll try to switch to the WiFi router to test this and report. However I think it might be some system issue of my own.\n. @ide Unfortunately after resetting the simulator running either the simple app frantic suggests or the one I posted will freeze. Occasionally I saw the same error messages in the Xcode console, but now I could see the data info (JSON or the ListView) before it hangs. I'll try to switch to the WiFi router to test this and report. However I think it might be some system issue of my own.\n. Solved after restarting Xcode. It seems there's something wrong with the resource management on my laptop. \n. Solved after restarting Xcode. It seems there's something wrong with the resource management on my laptop. \n. ",
    "tudorgergely": "@corymsmith You have a nice implementation there. \nDoes anyone know if it is possible to at least set the size for a custom icon (in case you want to use one)? \n. @corymsmith You have a nice implementation there. \nDoes anyone know if it is possible to at least set the size for a custom icon (in case you want to use one)? \n. ",
    "cmcewen": "I ran into this problem (wanted custom icons and a different tint color) and just wanted to share a solution, which I think should maybe go into the core API. \nSetting the tint color is pretty simple - just added this in the init method of RCTTabBar.m:\n[self setTintColor:[UIColor redColor]];. I'd imagine adding that to the main TabBar should be pretty simple.\nFor custom icons, Apple recommends 25x25, 50x50, or 75x75 pixels depending on screen resolution\nHowever, using anything larger than 25x25 pixel image on the TabBarItem results in a too large icon. Using 25x25 means the image is the right size, but looks bad on the higher res phones. To combat this, I used a 75x75 image file but resized it to 25x25 in the setIcon method in RCTTabBarItem.m\n```\n  UIImage *oldImage = [RCTConvert UIImage:_icon];\n  CGSize size = CGSizeMake(25, 25);\n  UIGraphicsBeginImageContextWithOptions(size, NO, 0.0f);\n//draw\n  [oldImage drawInRect:CGRectMake(0.0f, 0.0f, size.width, size.height)];\n//capture resultant image\n  UIImage *image = UIGraphicsGetImageFromCurrentImageContext();\n  UIGraphicsEndImageContext();\n```\nNot sure about performance here, but I think for convenience it would be nice if the tab bar could accept any image and make sure it's the right size.\n. I ran into this problem (wanted custom icons and a different tint color) and just wanted to share a solution, which I think should maybe go into the core API. \nSetting the tint color is pretty simple - just added this in the init method of RCTTabBar.m:\n[self setTintColor:[UIColor redColor]];. I'd imagine adding that to the main TabBar should be pretty simple.\nFor custom icons, Apple recommends 25x25, 50x50, or 75x75 pixels depending on screen resolution\nHowever, using anything larger than 25x25 pixel image on the TabBarItem results in a too large icon. Using 25x25 means the image is the right size, but looks bad on the higher res phones. To combat this, I used a 75x75 image file but resized it to 25x25 in the setIcon method in RCTTabBarItem.m\n```\n  UIImage *oldImage = [RCTConvert UIImage:_icon];\n  CGSize size = CGSizeMake(25, 25);\n  UIGraphicsBeginImageContextWithOptions(size, NO, 0.0f);\n//draw\n  [oldImage drawInRect:CGRectMake(0.0f, 0.0f, size.width, size.height)];\n//capture resultant image\n  UIImage *image = UIGraphicsGetImageFromCurrentImageContext();\n  UIGraphicsEndImageContext();\n```\nNot sure about performance here, but I think for convenience it would be nice if the tab bar could accept any image and make sure it's the right size.\n. @nicklockwood thanks - thought I had tried that but think I originally forgot to add the files. working for me now\n@elado if you don't pass a title to the tab bar item it should be labelless. just submitted #961 for tintColor and barTintColor\n. @nicklockwood thanks - thought I had tried that but think I originally forgot to add the files. working for me now\n@elado if you don't pass a title to the tab bar item it should be labelless. just submitted #961 for tintColor and barTintColor\n. Didn't see that commit landed - I was watching the wrong PR. Should be good to go now @sahrens \n. No worries! I know there's a lot to go through. \n. I just cloned fresh from master and it works fine for me - are you using the latest version?\n\n. You can modify all of those properties natively: \n- http://stackoverflow.com/questions/14371343/ios-uitabbar-remove-top-shadow-gradient-line\n- https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITabBarItem_Class/index.html#//apple_ref/occ/cl/UITabBarItem\nHowever, since it sounds like you want a really custom TabBar, I'd probably recommend just building your with a Navigator under a custom View.\n. @hedgerwang definitely a fair point - I'm already adding some props to pass to components in the route object and I could definitely see it growing in size to become unwieldy.\nI haven't been following NavigationExperimental super closely so I'm not exactly sure the intent of the API design, but in this case I think it might make sense to add a few properties to the route if it is tightly coupled to a NavigationCard, like cardStyle and direction. Since the NavigationCardStack looks at these properties to render, I'm not sure that hiding it under another nested object would be clear.\nBasically, if we're able to set some defaults for the whole card stack, it would also be nice to override those for specific cards - if there's a better place to do that then the route object then I'd definitely be interested in that, but from my quick reading of the code this seemed like the easiest place to make that happen.\n. typo - \"INTERRIPTED\" should be \"INTERRUPTED\"\n. ",
    "elado": ":+1: would love to see more customizable properties such as tintColor and labelless buttons.\n. @hacksparrow Aside from the docs issue, @tjwudi has a good point about paddingTop: 64 being a magic number.\n. ",
    "CoderAFI": "@nicklockwood @cmcewen \nI set the TabBarItem properties like:\nicon={{uri: 'tab_icon_home'}}\nselectedIcon={{uri: 'tab_icon_home_selected'}}\nbut finally the icon is bigger\n\nso how to solve it ?\n. finally i resolve the custom tabbar issue :8ball: \nRCTTabBarItem.m\n```\n- (void)setIcon:(UIImage )icon\n{\n  _icon = [icon imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n  if (_icon && _systemIcon != NSNotFound) {\n    _systemIcon = NSNotFound;\n    UITabBarItem oldItem = _barItem;\n    _barItem = [UITabBarItem new];\n    _barItem.title = oldItem.title;\n    _barItem.imageInsets = oldItem.imageInsets;\n    _barItem.selectedImage = oldItem.selectedImage;\n    _barItem.badgeValue = oldItem.badgeValue;\n  }\n  self.barItem.image = _icon;\n}\n\n(void)setSelectedIcon:(UIImage *)selectedIcon\n{\n  if (_selectedIcon != selectedIcon) {\n    _selectedIcon = selectedIcon;\n    _selectedIcon = [selectedIcon imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n    self.barItem.selectedImage = _selectedIcon;\n  }\n}\n```\n. \n",
    "medington": "I'll be more than happy to submit a pull request which just adds the LinkingIOS to the React.podspec file if it will help get this resolved. Currently we have to fork just to add it ourselves.\n. I'll be more than happy to submit a pull request which just adds the LinkingIOS to the React.podspec file if it will help get this resolved. Currently we have to fork just to add it ourselves.\n. > Please send a PR that adds a LinkingIOS subspec\n@ide @strefethen I already submitted a PR and it was merged several weeks ago.\n. :+1: @JohnyDays - Needed this functionality for our build process as well\n. @vjeux Can you please review the comments above regarding my concerns on the casing of --assetRoot vs. --assetRoots (plural) before this PR is closed? As stated above, my vote is for consistency.\n. @JohnyDays did you see the error from the Travis log:\n/private/tmp/react-native-VNYW6hxt/EndToEndTest/node_modules/react-native/local-cli/bundle.js:23\n    });\n      ^\nSyntaxError: Unexpected token ;\nIsn't CI a wonderful thing? ;-)\n. ",
    "ouelletv": "Been looking toward this also. Let me know if you get to something :) +1\n. Been looking toward this also. Let me know if you get to something :) +1\n. ",
    "frostney": "If you're looking for beacon support specifically, here's something I've been working on: https://github.com/geniuxconsulting/react-native-ibeacon\n. If you're looking for beacon support specifically, here's something I've been working on: https://github.com/geniuxconsulting/react-native-ibeacon\n. I somehow missed the 0.4.0 release. :( In the 0.3.11 release (and I presume all 0.3.x releases). you couldn't apply borderRadius without borderWidth, but in the 0.4.0 release it works as expected - or more precisely it works like in CSS3.\nSo my bad, there is absolutely no need to re-open the issue.\nEdit: I may be seeing ghosts, but in certain cases it seems I'm still getting this issue with views that have background color. I'll try to pinpoint the issue and create a reliable reproducible example.\n. overflow: hidden does fix it for me. Thank you.\nI hope it's ok that I'm closing this issue.\nEdit: The code example is more stripped down than I intended it to be. This issue occured for me on views (with borderRadius and backgroundColor) that had texts and views as its children (those were without background color or borderRadius) and when I created the code example I forgot to copy over the hierarchy from the production code to the example code while making a screenshot from the production code. Sorry about that.\n. Base64 strings are supported in image components. Here's a working example: https://rnplay.org/plays/ZI-xCA (The image doesn't scale so well in the previewed simulator, if you try it in the iOS simulator or the real device, it does look better.)\n. ",
    "mikesurowiec": "Great, thanks fellas!\n. Great, thanks fellas!\n. ",
    "jsbee": "it seems like jxcore is handling packaging js files and the js vm. Those are very integrated in React Native and seem pretty hard to plug and play at first glance.\n@vjeux Why use JS engine from JXcore? We just need a bridge between JXcore and React-Native. JXcore instance only take a part for an application using node.js related stuff. I don't think it would require much change on react-native.\nIf JXCore allows us to run Node.js code that wouldn't otherwise be possible to run in React Native (e.g. PouchDB), that would unlock thousands of libraries for use in RN projects and would obviously be a huge gain for the project.\n@notduncansmith That's what I'm after.  I couldn't find the link yet but a guy from Microsoft recently made a benchmark (PouchDB, JXcore) on iPhone 6 using PouchDB benchmark. I can say that the result was remarkable. He simply run the benchmark on iPhone that was originally designed for Desktop. \n. ",
    "ktrzeciaknubisa": "Hi guys,\n\ncouldn't find the link yet but a guy from Microsoft recently made a benchmark \n\n@jsbee did you mean this one?: Looking at JXCore\u2019s perf\n\nThis is the first time I've ever heard of JXCore and I still am not quite sure what it exactly does \n\n@vjeux JXcore is a fork of node.js, but brings much more to the table. For example it can be compiled not only against V8 engine, but also SpiderMonkey, which opens the way to run node.js app on iOS devices (as @jsbee mentioned). Also runs on Android, if we speak about mobiles. Besides, no matter where it runs, it gives to the user wide range of new features, like multitasking (tasks running on different threads/instances within single process), packaging (which you have already noticed) - a single jx package, which can hold entire node solution can be executed as it would be a .js file.\n. ",
    "urbien": "Integration of jxcore with React Native is a fantastic way to launch jxcore project into the stratosphere. There is an unbounded interest in React Native. Our own initial React Native app on iOS shows that this is all we have been dreaming of since iPhone came out and never managed to achieve with the phonegap and 1000 tricks to make HTML5 work like native. I personally spent many years on my life on that. React Native is great compromise and works amazingly well.\nYet we develop most of our modules in node now, and node-webkit is just not working on mobiles. Hence JXcore. JXcore + React Native is heaven to us.\nSpecifically we need net and dgram modules working in React Native + JXcore. Why? Because we are developing P2P apps, specifically, bitcoin + bittorrent and ethereum + bittorrent apps. \nThere is a way to wrap native iOS modules in React Native\n@jsbee may be you can join forces with this guy?\nWe will also need a LevelDown polyfill for React Native's AsyncStorage\n. @frantic after giving it some thought, I think for our project needs we will just use browserify and implement nodejs modules like dgram and net ourselves using Native Module iOS facility React Native provides and will create a levelDB (levelup/leveldown) polyfill on top of AsyncStorage. We used the same approach successfully with Chrome Apps. If you know of anyone working on these 3 modules, please connect us! If you know of a group that cares for Node development under React Native, please share a link.\n. @brentvatne As stated in my prior comment, we proceeded to implement a subset of node.js modules in React Native iOS environment. \n- AsyncStorage as a leveldown module and a small wrapper for level apps. \n- a UDP module compatible with Node.js Dgram \n- forked and adjusted FS module on top of level API\n- adapted DNS module to Node compliant API\n- adapted uTP module that works on top of UDP module to provide Node.js's NET module semantics for reliable transport, as an equivalent to TCP. \n- had to add socket multiplexing for NAT traversal support (ask me more about it)\n- adapted rUDP module, but it does not provide NET module API.\nWe had to overcome an issue with React Native packager. Another problem with it was that it does not support replacing core node.js modules with browserified versions of it. We used react-native-webpack-server to overcome this problem and we still had to hack our way through.\nI would love to be able to relay our pain to React Native devs so that the npm can be made to work well in React Native. Despite the difficulties we love React Native and are committing all our resources to make this a premier development environment for distributed apps (Dapps). This includes Bitcoin, Ethereum, Bittorrent, DHT access on mobile from React Native environment.\n. unresolved issue is with a good source of randomness, see the issue we opened for it \nCan anyone help?\n. ",
    "kocyigityunus": "the second problem is about the url query. but the first one is not.\n. i allready looked at it.\nwhen i tried to use it in or with  compoenent. NavigatorIOS is being top of the my view with following style. this style is just like you use in modal.\ncontainer: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n}\nas you can see in the photo. Navigator bar on top.\n\n. maybe this can help : https://github.com/Kureev/react-native-navbar\n. i tried to have a es6 way to do that. but i think NavigatorIOS component is not keeping it's state. i am constructing it only once but result is the same. as you can see :\n```\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  NavigatorIOS,\n  StyleSheet,\n  View,\n} = React;\nvar FirstScreen = require('./FirstScreen');\nclass DenemeApp extends React.Component{\n  constructor(props){\nthis.props = props;\nthis.state = {\n  openModal: (null: ?React.Component),\n}\n\n// only calling once\nconsole.log(\"trying to create own navigator!\");\n\nthis.props._ownNavigator = React.createElement( NavigatorIOS,\n  {style:styles.container,\n    initialRoute : {\n      title: 'FirstScreen',\n      component: FirstScreen,\n      passProps: {\n        onModalRequested: (modal) => {\n          console.log(\"on modal requested called!\");\n          this.setState({ openModal: modal, });\n        },\n      }\n    }\n  }\n);\n\n}\n  getInitialState() {\n    // this method is not calling.\n    //  this must be done in construtor\n    console.log(\"get initial state called!\");\n    return { };\n  }\n  closeModal() {\n    this.setState( { openModal : false, } );\n  }\n  render() {\n    if (this.state.openModal) {\n      var Modal = this.state.openModal;\n      return (\n         {\n            console.log(\"will call openModal null!\");\n            this.setState({ openModal: null, });\n          }}\n        />\n      );\n    }\n    // return the navigator object created on the constructor\n    return this.props._ownNavigator;\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n});\nAppRegistry.registerComponent('DenemeApp', () => DenemeApp);\nmodule.exports = DenemeApp;\n```\n. congs @brentvatne  great job. \n. yes. that what i am referring to. but how can i get reactTag from js side or  how can i go to reactTag from nav object ?\nis there a way to calling a method on a particular view in \"more than one view to connect one manager\" ?\n. You can call methods from a manager. And the manager calls your custom view. You can look at it at : https://github.com/brentvatne/react-native-video. \ntakePicture method does it.\n. @ide  this.getNodeHandle() gives me an object like this. i couldn't find any reactTag in it.\n\n. ",
    "bolismauro": "Perfect, I will try it!\nThank you\n. ",
    "sebslomski": "Thanks for your input! The Xcode referenced to \"node_modules/react-native/Libraries/GeoLocation/RCTGeolocation.xcodeproj\", but the folder is named Geolocation.\nIt's working on master head.\n. Well, I'm running my OS X on a case sensitive file system. Switching to react-native master fixed that for me.\nOn Sat, Apr 18, 2015 at 3:21 PM, Lee Owen notifications@github.com\nwrote:\n\nI'm also getting this error when running xcode immediately after \"react-native init myproject\".  What was the resolution?\nReply to this email directly or view it on GitHub:\nhttps://github.com/facebook/react-native/issues/682#issuecomment-94164583\n. \n",
    "ItsLeeOwen": "I also go a build error when running xcode immediately after \"react-native init myproject\".  updating package.json to point to \"https://github.com/facebook/react-native.git#master\" resolved the build issue.  However the app launches, and almost immediately displays a red screen of death with this error in the console.\nError: ENOENT, open '/Users/path/to/project/node_modules/react-native/Libraries/GeoLocation/Geolocation.ios.js'\n    at Error (native)\n[09:28:02] <START> request:/index.ios.bundle\n. ",
    "mattotodd": "@darylrowland would love to check that out \n. I've begun work on this a had a few questions about the NativeModules bridge\nAm I limited to String for error and params in the callbacks?  What would it look like to return a object or array of objects if that is possible?\nIs there a standard for what errors should return?\nI realize the Native Modules are still a work in progress, but what is the expected way to package/distribute?  @brentvatne showed me an example of his react-native-login which is an example xcode project that includes his actual bridge.\nBy the way, I was psyched out how simple it was to extend this and get it working!\nCurrent code. Not complete, but any advice would be appreciated as I do not come from an objective-c background.  (I intend to paginate the getAllContacts call,  this was just to see if it was working, and it is!!)\n``` objectivec\n@import AddressBook;\nimport \"AddressBook.h\"\n@implementation AddressBook\n\n\n(void)hasABAuth:(RCTResponseSenderBlock)callback  {\n  RCT_EXPORT(hasAuth);\n  if (ABAddressBookGetAuthorizationStatus() == kABAuthorizationStatusDenied ||\n    ABAddressBookGetAuthorizationStatus() == kABAuthorizationStatusRestricted){\n    callback(@[[NSNull null], @\"denied\"]);\n  } else if (ABAddressBookGetAuthorizationStatus() == kABAuthorizationStatusAuthorized){\n    callback(@[[NSNull null], @\"authorized\"]);\n  } else { //ABAddressBookGetAuthorizationStatus() == kABAuthorizationStatusNotDetermined\n    callback(@[[NSNull null], @\"undetermined\"]);\n  }\n}\n\n\n(void)requestABAuth:(RCTResponseSenderBlock)callback  {\n  RCT_EXPORT(requestAuth);\n  ABAddressBookRequestAccessWithCompletion(ABAddressBookCreateWithOptions(NULL, nil), ^(bool granted, CFErrorRef error) {\n    if (!granted){\n      callback(@[[NSNull null], @\"denied\"]);\n      return;\n    }\n    callback(@[[NSNull null], @\"authorized\"]);\n  });\n}\n\n\n-(void)getAllContacts:(RCTResponseSenderBlock)callback  {\n  RCT_EXPORT();\n  ABAddressBookRef addressBookRef = ABAddressBookCreateWithOptions(NULL, nil);\n  NSArray allContacts = (__bridge NSArray )ABAddressBookCopyArrayOfAllPeople(addressBookRef);\n  NSLog(@\"%@\", allContacts);\n}\n@end\n```\n. https://github.com/mattotodd/react-native-addressbook-ios\nComments appreciated\n. @rt2zz replied to your issue on my repo.  sorry, was out of the country this past week with little access to email, only got notified when you posted here.  thx\n. @vjeux What are the plans on this?  Any recommendations for animation til then?\n. perfect, thx\n. Found the answer,  need to pass isStatic to the source of the image.\nI feel this should be added to the Image docs\n<Image style={styles.thumb} source={{isStatic:true, uri:\"/var/mobile/Containers/Data/Application/5938C9F8-0A9D-40DD-AB9F-CD2C772439E7/tmp/thumbimage_8gVFD\"}} />\n. np\n. Not all css is available for use, yet.\n. ",
    "fraserxu": "Would be great if @sahrens could share some code here!\n. ",
    "schickling": "Any updates on this. Would be nice if you could keep the debug session open but avoid popping up into foreground on each code change.\n. +1\n. +1\n. +1\n. ",
    "loreasinclaire": "I am also curious how to assign individual corner border radiuses.. not all four corners. Thanks!\n. ",
    "upbit": "Great Works!\n. ",
    "HankMcCoy": "That makes perfect sense. Thanks!\nIs there anywhere in the documentation that lists which ES6/7 transformations React Native does? I'm guessing the visitors directory in the JSTransform repo is a complete list, albeit not a particularly user friendly one?\n. ",
    "jmorrell": "Oh wow, didn't realize any engine was supporting computed properties yet. Looks like Firefox does too. Sweet!\n. ",
    "CYJB": "Scroll is also not working. It looks like the child has been frozen.\n. ",
    "StevenLangbroek": "Related StackOverflow question with some more research: How to use Jest with React Native\n. ",
    "rogergl": "@naoufal \nYou have to mock react-native. The following example works:\n``` javascript\njest.setMock('react-native', {\n    NativeModules: {}\n});\njest.dontMock('../js/model/DropBox');\njest.dontMock('mori');\nvar mori = require('mori')\ndescribe('loadFiles', function() {\npit('Spec 1', function() {\n\nvar DropBox = require('../js/model/DropBox');\nvar dropBox = new DropBox({\n    load: function(callback) {\n        callback(false, \n            [\"file1\"], \n            ['{\"value\":1}'])}\n    });\n\nreturn dropBox.loadFiles().then(\n        function(stuff) {\n            var result = mori.toJs(stuff);\n            expect(result.length).toBe(1);\n        });\n    });\n});\n```\n. Still confused. Should it work  ?\n. This is the complete method:\nvar setContent = (result) => {\n        var fileInfo = result[0];\n        var setValuePromises = m.map((data) => {\n            return Store.setValue(m.get(data, \"fileName\"), m.get(data, \"content\"));\n        }, fileInfo);\n        return Promise.all([fileInfo, ...(m.intoArray(setValuePromises))]);\n    };\n. Chrome displays the code given in the previous posting.\nThis is the code from the index.ios.bundle file:\nvar setContent = function(result)  {\n        var fileInfo = result[0];\n        var setValuePromises = m.map(function(data)  {\n            return Store.setValue(m.get(data, \"fileName\"), m.get(data, \"content\"));\n        }, fileInfo);\n        return Promise.all([fileInfo, ...(m.intoArray(setValuePromises))]);\n    };\n. ",
    "kevwil": "Ah, yes, those sneaky IT bastards got me again. Corporate registry in use & out of date, easily worked-around. :)\n. ",
    "mcgsoftware": "An example ad manager app example sounds great, where can I find the code for it? \n. ",
    "mcz": "Perfectly clear. Thanks so much and keep up with this awesome work!\n. Thanks Brent!\n. btw. here is a smart solution to the problem:\nhttp://corinnekrych.blogspot.hu/2014/07/how-to-support-push-notification-for.html\n. btw. here is a smart solution to the problem:\nhttp://corinnekrych.blogspot.hu/2014/07/how-to-support-push-notification-for.html\n. It's very interesting because if I run this code\nobjective-c\n  if ([[UIApplication sharedApplication] respondsToSelector:@selector(registerUserNotificationSettings:)]) {\n      UIUserNotificationType types = UIUserNotificationTypeSound | UIUserNotificationTypeBadge | UIUserNotificationTypeAlert;\n      UIUserNotificationSettings *notificationSettings = [UIUserNotificationSettings settingsForTypes:types categories:nil];\n      [[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];\n  } else {\n    [[UIApplication sharedApplication] registerForRemoteNotificationTypes:\n     (UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)];\n  }\nIt still throws the same symbol not found error shown previously. So probably it has to be fixed in the compiler settings.\n. It's very interesting because if I run this code\nobjective-c\n  if ([[UIApplication sharedApplication] respondsToSelector:@selector(registerUserNotificationSettings:)]) {\n      UIUserNotificationType types = UIUserNotificationTypeSound | UIUserNotificationTypeBadge | UIUserNotificationTypeAlert;\n      UIUserNotificationSettings *notificationSettings = [UIUserNotificationSettings settingsForTypes:types categories:nil];\n      [[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];\n  } else {\n    [[UIApplication sharedApplication] registerForRemoteNotificationTypes:\n     (UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)];\n  }\nIt still throws the same symbol not found error shown previously. So probably it has to be fixed in the compiler settings.\n. Yes, but unfortunately it throws the same error.\nOn Wednesday, April 8, 2015, James Ide notifications@github.com wrote:\n\nYour most recent code snippet looks right. This should be handled at\nruntime and not by the compiler as long as you're using the iOS 8 SDK.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/723#issuecomment-90781181\n.\n. Yes, but unfortunately it throws the same error.\n\nOn Wednesday, April 8, 2015, James Ide notifications@github.com wrote:\n\nYour most recent code snippet looks right. This should be handled at\nruntime and not by the compiler as long as you're using the iOS 8 SDK.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/723#issuecomment-90781181\n.\n. The problem is that the app won't even start. It throws this error right away. Here is the stack trace:\n\n\n\n. The problem is that the app won't even start. It throws this error right away. Here is the stack trace:\n\n\n. thanks, it was already fixed long time ago. i forgot to close the issue :)\n. thanks, it was already fixed long time ago. i forgot to close the issue :)\n. @nicklockwood when do you guys think @vjeux 's animation library will land?\n. ",
    "clairesarsam-wf": "Good to know, thanks!\n. ",
    "shayne": "@facebook-github-bot import\n. You may want to test that the string in the binary is truly encrypted. I can't point to any mach-file docs (mobile atm), but in my experience large clobs are concatendated to the binary and are completely unencrypted. To test this download the App Store version of your app and run strings on the binary. \n. Apple has made it pretty clear if you're not serving ads don't think about using the advertisingIdentifier. IIRC they'll detect the call at runtime so no matter how you obfuscate the message, if in the end you're calling advertisingIdentifier they'll flag it.\n. Working with Christopher on how we want to collect regressions. Since the\nPR was already merged, re-opening it didn't seem like the best idea. I was\ngoing to create an issue that just references the PR.\nOn Mon, Jun 1, 2015 at 12:13 PM, Brent Vatne notifications@github.com\nwrote:\n\nHey @shayne https://github.com/shayne - noticed that you just closed\nthis again, did this turn out to not be a problem after all?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/1415#issuecomment-107674675\n.\n. That would be awesome! Thanks @brentvatne \n. \n",
    "mjw56": ":) thanks @spicyj !\n. I too ran into this when I first started writing a RN app. \nIs there any way that calling setState can update props to any potential children on the same route like with React?\ne.g.\n``` javascript\n  _buttonPress() {\nthis.setState({\n  input: 'heyo'\n})\n\n},\nrender() {\n    return (\n      \n // input prop change will be heard by Child\n      \n    )\n  }\n```\nI understand that on mobile you're probably not building as complex UI Component structures for a given single route. I'm not sure what the benefits/trade-offs is/are here.\n. Just to update how I solved this:\nbash\nbrew uninstall watchman\nbrew link automake\nbrew install --HEAD watchman\nCheers\n. :+1:\n. When I run this same code in 0.3.11 it looks like it is calling with moduleMethod: \"callFunctionReturnFlushedQueue\" instead of \"processBatch\"\n\n. Ok, I have an update. @unknownexception your comment made me suspect it was versions of RN that packages are using.\nI had packages in my package.json which weren't using 0.4.0 yet.\nAfter installing them locally and pointing them to 0.4.0, my app is working with 0.4.0! :tada: :\n. @unknownexception ok great, I'm wondering if there is anything we could do in the meantime to prevent something like this from happening again in the future? Would it be best to use peerDependencies? @frantic \n. @ide so is that the way it is happening now is that multiple copies of RN are being loaded on the device for every module which has RN as a dependency?\n. So this issue was resolved with either a module declaring a react-native peerDependency or upgrading their react-native version to 0.4.0 for an app using 0.4.0. I am going to close this for now. I'm not sure if something should be added to the docs about this, I'd be happy to send a PR.\n. You could use the Navigator for setting up scenes of your app and transitioning between them.\nNavigator has a configureScene prop which you can provide to the initial Navigator component to play around with some initial animations.\nThe available animation properties on Navigator.SceneConfigs are:\nFloatFromBottom\nFloatFromRight\nHorizontalSwipeJump\nPushFromRight\nSo for instance if you wanted to provide some default animation for transition between scenes, you could do this:\njavascript\n<Navigator\n  renderScene={this.renderScene}\n  style={styles.container}\n  configureScene={(route) => {\n    if (route.sceneConfig) {\n      return route.sceneConfig;\n    }\n    return Navigator.SceneConfigs.FloatFromRight;\n  }}\n  initialRoute={{\n    component: MyApp,\n    title: 'My App',\n  }}\n/>\nand then later in your app when you want to override that animation you can provide a sceneConfig with the animation:\njavascript\nthis.props.navigator.push({\n  title: 'Next Route',\n  component: NextRouteComponent,\n  sceneConfig: Navigator.SceneConfigs.FloatFromBottom\n})\n. @ele828 hm, I am not sure about replace as I have not used that yet.\n@ericvicenti do you know if animations work with replace? Also, will the example above work with 0.4.0?\n. I can confirm animation doesn't work with replace in 0.4.0. Probably we should close this and open a new issue for this.\n. I really like using using react-native-navbar with Navigator\nIf you're interested in rolling your own you could look at his component to get an idea how he is styling it. If you wanted to use that, you could do someting like: \n``` javascript\nvar NavigationBar = require('react-native-navbar');\n\n  initialRoute={{\n    component: MyView,\n    title: 'MyTitle'\n  }}\n  renderScene={(route, navigator) =>\n    React.createElement(route.component, {navigator})\n  }\n />\n```\n. Try:\nbrew update\nbrew upgrade flow\n. You could use Navigator and push a route when you tap on a row.\n. Try removing the icon and systemIcon props.\n. Make sure flow and watchman are up to date and latest. Also, if you upgraded to 0.4.0 in an existing app, make sure any dependencies are using at least react native 0.4.0 or have it listed as a peerDependency. \n. Try upgrading flow and watchman to latest.\n. @iq-dot I've used flux to solve what I think is a similar problem to what you are describing.\nBasically, I had a component on the parent level who was always alive and would need to get updates from a component deep in the route stack. I have the parent level component listening to a flux Store which is alive for life of the app. So when I am deep into the stack, I can send an action to update the store and notify my parent-level component of the changes.\n. @erikdung How are you trying to set the height on the WebView? Can you post a gist with the issue?\n. @syousif94 I don't believe there is currently a way to do this. \nI was playing around with this and was able to get something working, but I'm not sure if it is the right fix. You would configure to disable it like so:\n``` javascript\nvar sceneConfig = Navigator.SceneConfigs.FloatFromBottom;\nsceneConfig.gestures.pop.disabled = true;\nthis.props.navigator.push({\n  title: 'Search',\n  component: SearchList,\n  sceneConfig: sceneConfig\n})\n```\nI had to change one line in Navigator.js to get this to work:\nNavigator.js:\n``` javascript\n_matchGestureAction: function(gestures, gestureState) {\n  if (!gestures) {\n    return null;\n  }\nvar sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];\nif (sceneConfig.gestures.pop.disabled || this.state.isResponderOnlyToBlockTouches || \n      this.state.isAnimating) {\n    return null;\n  }\n// ...\n```\nnot sure about the componentWillUnmount() issue..\n@ericvicenti how do you handle adding additional configuration to a sceneConfig? Do you think the above could work?\n. @ericvicenti awesome, that works!\nSo how about disabling only for a select few and not all screens? It seems like gestures would then need to be opt-in?\njavascript\nconfigureScene={(route) => ({\n  ...route.sceneConfig || Navigator.SceneConfigs.FloatFromBottom,\n  gestures: route.gestures\n})}\nAnd then when pushing a route:\njavascript\n// enable back gestures\nthis.props.navigator.push({\n  title: 'Search',\n  component: SearchList,\n  sceneConfig: Navigator.SceneConfigs.FloatFromBottom,\n  gestures: Navigator.SceneConfigs.FloatFromBottom.gestures\n})\nor ..\njavascript\n// disable back gestures\nthis.props.navigator.push({\n  title: 'Search',\n  component: SearchList,\n  sceneConfig: Navigator.SceneConfigs.FloatFromBottom,\n  gestures: null // or just don't include this\n})\n. @ericvicenti this will call componentWillUnmount with pop gesture:\njavascript\nif (transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)) {\n  this._transitionToFromIndexWithVelocity(transitionVelocity);\n} else {\n  this._handlePop();\n  this._transitionToToIndexWithVelocity(transitionVelocity);\n}\n. @syousif94 ah, yes that works :+1: \nSo then what does your configureScene look like for the Navigator component?\nRight now I have this working:\njavascript\n// extend off route.sceneConfig if provided, otherwise default to FloatFromRight\nconfigureScene={(route) => ({\n  ...route.sceneConfig || Navigator.SceneConfigs.FloatFromRight\n})}\n. @brentvatne hey, yeah that's correct. It will remove it from the stack and call the dismissed component's componentWillUnmount lifecycle hook.\n@ericvicenti can you help verify this is the right fix?\n. Ok, thanks for your reply @ericvicenti! I will close this and let it be handled in your refactored code.\nCheers\n. ",
    "DiegoRBaquero": "Use a callback from the view containing the button to the parent and using a switch in the render display the new view.\nView containing the button:  this.setState({user: pUser})}/>\nRender function of the parent:\nif(this.state.user !== undefined) {\n      return (\n        \n      );\n    } else {\n      return (\n         this.setState({user: pUser})}/>\n      )\n    }\nCall when button clicked: this.props.onDone(user);\nThis is just an example, adjust to your needs.\n. ",
    "jacobp100": "https://github.com/facebook/react-native/pull/695\n. What\u2019s the best way of tackling this in Objective C land?\n. I couldn\u2019t find much information on initialising a static NSDictionary. Is this acceptable?\n. The ones implemented are mutually exclusive, but you can also have small caps, ligatures etc. But you do have a point, and the options I just listed also have mutually exclusive options (discretionary-ligatures and no-ligatures). Maybe there should be validation for this.\n. I believe they\u2019re included on iOS by default. Did it not work for you?\n. I\u2019m extending upon previous work. It looks to be the mapping defined in RCTNavItemManager.m.\n. I think it\u2019s because that\u2019s what iOS calls it. I can rename it if you think that\u2019s best\u2014what do you prefer?\n. The rest of the code is using var, so I\u2019d be tempted to leave this to a later code clean up.\n. Good catch!\n. I added docs about this setting a global\u2014if you don\u2019t set an onMessage property in the webview, it won\u2019t set a global.\n. I have to add this propType here, because it's the only way to say that it's a boolean. Not doing this causes crashes. However, it's not a property for the user. Either we need to hide it in the docs or find another way way to say this is a boolean.\n. On iOS, we just send the message as an object, and do the JSON stuff in Objective-C. I'd like the approaches on Android and iOS to be the same, so either we need to do the JSON stuff in Java (I couldn't figure out how), do the JSON stuff in JavaScript on iOS, or just enforce the message being a string and let the user decide how to transfer the data (like AsyncStorage does).\nI'm actually not too sure how data is sent down the bridge\u2014is it possible that we JSON stringify twice in this case?\n. See note on iOS JSON.\n. Hesitant, because there might be shims or other things.\n. I think you handle this in didReceiveScriptMessage\u2014is this redundant?\n. Is it possible to use [controller addUserScript:] here?\n. I think currently the postmessage is exposed as webkit.messageHandlers...postMessage. Either we need some JS to get window.postmessage to call the previous, or update the docs to state the previous.\n. Was this intentional? We use this to know whether we should override window.postmessage.\n. Just a thought on this, if we ever wanted to update from RCTWebView to this in the WebView component, it might be useful to keep the same API. But do what you think is best!\n. Nit: space before open paren (and others below)\n. Could remove all shouldBlock logic here by having an early return.\n. What about if we added the policy to the nativeEvent?\n. What\u2019s the verdict on this?\n. Could you clarify what you wanted changing?. Good catch! I incorrectly copied from the line above, but that isn't right. I didn't use defaultProps because it's not used anywhere else in the component\u2014just wanted to be consistent. I've updated to fix the bug. Done!. ",
    "thewei": "@vjeux \nLike this: http://modao.io/app/KHfXnjXLUZuNdH0IASNI\nI do not know how to hide the TabBarIOS when i use Navigator push a new view. \n. @gabro yes\n. @songqingkun I don't know\n. @vjeux\n. ",
    "bogdantmm92": "+1\n. Will this ever merge into the main repo?\n. +1\n. ",
    "maplebaby": "Is it solved?\n. @brentvatne I think it is not solved! Please have a look for my demo -> https://rnplay.org/apps/o8dTnw \n. Yes it is when clone the master\u3002Thanks you\uff01\n. +1\n. ",
    "JonasJonny": "+1\n(@brentvatne I guess the question was about [Navigator] not [NavigatorIOS])\n. To hide navigation top bar use simple Navigator, not NavigatorIOS.\nOr https://github.com/Kureev/react-native-navbar\nIf you will not set navigationBar, it will be hidden.\nFor tabBar you have to have at least two Navigators.\nOne as primary and second one with tab bars.\nThen you can use navigator.parentNavigator to target primary Navigator without tab bars and push your view there.\n. I am sorry but I don't have a time for that.\nRead the docs and issues with tabBar and Navigator.\n. Thank you @ide.\n. Thanks @spicyj.\n. I tried to change deprecated React.addons.cloneWithProps with React.cloneElement but the same result.\n. Thank you @ericvicenti .\nI got working \"jumping nav sample\" example for my case. \nBut I found out I can't use \"back-swipe gesture\" for current screen with another Navigator because is already \"binded\" to tabs-like-interface/JumpingNavSample Navigator (\"Header Back\" button is working fine but the gesture should be binded to this screen too).\nIt's complicated issue and It looks like I should stick with my solution. \nTry to use refs and find a way how to pass them into component class (Or I will have all logic for one tab in one file). At least for now I am not skilful enough to find another solution.\nWhen there will be \"easy-to-use solution\" please update this issue. It will be very appreciated.\n\nEDIT: Back-swipe is actuall working but has high sensitivity as is binded also to transition between tabs.\nEDIT2: I add helper to disable back-swipe action and set left/right animation between tabs in NavigatorSceneConfigs.\nFloatLeftRight: {\n      ...BaseConfig,\n      gestures: {\n          pop: {\n              ...BaseLeftToRightGesture,\n              edgeHitWidth: 0,\n              fullDistance: SCREEN_HEIGHT,\n          }\n      },\n      animationInterpolators: {\n          into: buildStyleInterpolator(FromTheRight),\n          out: buildStyleInterpolator(ToTheLeft),\n      },\n  },\n(Warning: This is just temporary solution for my use case - ReactNative team can update this file anytime)\n. Try to add specific width and height in style.\n. I can't see style on your example.\nAnyway I tried display your link inside my 4S (7.1) simulator with specific width and height and it worked.\n. <View>\n    <Image style={{width: 100, height: 100}} source={{uri: 'http://www.rick.com/wp-content/uploads/2013/02/third-eye-blind.jpeg'}} />\n</View>\n. You should use custom Navigator.\nFor an example https://github.com/Kureev/react-native-navbar and push without navigationBar.\n. Hah, the problem is not in routestack.\nA few minutes ago I removed flexWrap: 'wrap', from style for RefreshableListView by accident and the right screen occurred. The same with ListView.\nCan ListView have its own style?\nHere is a demo https://rnplay.org/apps/4OGi4w.\nTry to edit flexWrap: 'nowrap' <-> 'wrap'.\n. Here you have some solutions http://stackoverflow.com/questions/29287987/invariant-violation-application-awesomeproject-has-not-been-registered-when-b.\nI had similar issue after update and I have to init new project and copy my source code into.\n. From CSS, border-radius should be half of width/height. If you set bigger value, then browser render the circle anyway but it is not a good practice. Maybe react-native is the same.\n. Thank you @nicklockwood. It will be very useful.\n. ",
    "songqingkun": "@thewei how to solve it\n. I see facebook group can hide.react native can't hidesBottomBarWhenPushed?\n. have you qq my 601307105\n. please give me a demo .thank you.I don't find similar demo with github.\n. ",
    "atlas1119": "solved\uff1f\n. ",
    "yangaqi": "@facebook-github-bot-3 solved?\n. ",
    "clanofnoobs": "That worked, thanks a bunch!\n. That worked, thanks a bunch!\n. ",
    "rxb": "Seems like automaticallyAdjustContentInsets compensates for statusBarIOS and tabBarIOS (so that things can scroll properly and not be blocked by those fixed items) but it gets complicated if the scrollview isn't the first or last component.\n. Seems like automaticallyAdjustContentInsets compensates for statusBarIOS and tabBarIOS (so that things can scroll properly and not be blocked by those fixed items) but it gets complicated if the scrollview isn't the first or last component.\n. Had same issue, this fixed perfectly. Thanks!\n. Thank you, that was the ticket.\n. I did the same thing as @JonasJonny and had the same problem. I think i'm having trouble understanding how things are actually supposed to fit together.\nIs the idea that you would need a structure like this:\n- \"App\" Navigator, then...\n- \"Tab\" Navigator & TabBarIOS (with TabBarIOS being used as the Navigator's NavigationBar, rather than relying on TabBarIOS to switch between Navigators by literally nesting the Navigators inside TabItems), then... \n- \"TabItem\" Navigators which route to wherever...\nIs it correct that you can only ever have one Navigator at each \"level\" and that even though TabBarIOS seems to \"navigate\", it's actually doing something a bit more simple? \n. https://gist.github.com/rxb/57f45c327d0f6847a821\nHere's a working Gist that gives you a 3-level navigator structure:\n- Navigator A: routes tab scene + modals\n- Navigator B: routes tabs\n- Navigators C: routes for each tab item\nSetting gestures: false on line 157 of tabBarNavigator.ios.js kills the swipe gesture between tabs and allows pop gesture within the tab item navigators. \nThings I was not able to figure out:\n- How to prevent animation when transitioning between tabs (though @ericvicenti mentioned in previous comment there's a real fix coming soon for this)\n- How to properly pass a reference for Navigator A to a scene loaded in Navigator C, in order to be able to use Navigator A to present a modal scene. \n. automaticallyAdjustContentInsets is setting insets based on what they should be if the ScrollView/ListView is the top-level-ish plain React component. If you have a NavigatorIOS and/or TabBarIOS, it will also adjust for those. Super useful in those conditions.\nIf there are any other plain React components taking up space (not absolutely positioned) above or below your ScrollView/ListView, the math will be off and it's better to just set it to false and deal with the offsets manually.\n. What are you looking for that styling a ListView in the way described in that StackOverflow doesn't handle? \n. After some experimenting, here's at least one way to make this type of thing work. \nThe basic idea is:\n- Start the app with one top-level Navigator with no navigationBar. \n- Its initial route should be a component which includes your top-level TabBarIOS. \n- Each TabBarIOS.Item should contain its own Navigator which does have a navigationBar\n- Each of those Navigator's initial routes should be the first route of each tab\n- Pushing routes within each tab should be handled by the TabBar.Item's Navigator. \n- Pushing modal-style routes (or any view that should cover the TabBarIOS) should be handled by the top-level Navigator, which can be referenced by this.props.navigator.parentNavigator but it would probably be safer to pass an explicit reference.\nI'll clean up my code a bit more and post it in a Gist,\n. Might be the same issue, I am also having trouble loading some, but not all images in a ListView on a 5s. Works perfectly in the simulator. \n. @arunshan Still trying to parse out what's different about the ones that are intermittently not loading. \n\nOn May 20, 2015, at 10:44 AM, arunshan notifications@github.com wrote:\n@rxb do you know what may be the reason ? Are there any image size or image format restrictions that I am not aware of ? List view render is invoked only after the image urls are received from the server. I believe there is some kind of race condition.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is a very dirty implementation of snap scrolling, but maybe it will inspire someone to actually make it legit:\n\n```\n  { this.snapScroll = snapScroll; }}\n  horizontal={true} \n  decelerationRate={0}\n  onResponderRelease={()=>{\nvar interval = 300; // WIDTH OF 1 CHILD COMPONENT\n\nvar snapTo = (this.scrollingRight)? Math.ceil(this.lastx / interval) : Math.floor(this.lastx / interval);\nvar scrollTo = snapTo * interval;\nthis.snapScroll.scrollTo(0,scrollTo);\n\n}}\n  scrollEventThrottle={32}\n  onScroll={(event)=>{\n    var nextx = event.nativeEvent.contentOffset.x;\n    this.scrollingRight = (nextx > this.lastx);\n    this.lastx = nextx;\n  }}\n  showsHorizontalScrollIndicator={false} \n  style={styles.listViewHorizontal}\n\n{/ scroll-children here /}\n\n```\nIssues with this:\n- Isn't taking user's scroll velocity into account, so you see a jump in velocity when scrollTo takes over. \n- You get this warning: \"ScrollView doesn't take rejection well - scrolls anyway\" which I assume means I'm doing something frowned upon\n. @brentvatne I managed to get some pretty good scroll-snapping action going by adding some code to scrollViewWillEndDragging in RCTScrollView.m . As far as I can tell, it's bad news to try to take control of the scroll with JS once the ScrollView is moving. Jumping in to redirect the place where the contentOffset lands in the objective-c feels a million times nicer. Here's a video of it in action with different sizes and alignments:\nhttps://vid.me/aoby\nI'd definitely put together a pull request if this is something that might get considered for ScrollView.\n. @brentvatne Awesome! I'll do it. Looks like ScrollView might be broken right now on master? Can't scroll even normally and getting a red outline around my ScrollView. \n@TYRONEMICHAEL You can see the additions here: https://github.com/facebook/react-native/compare/master...rxb:snap . \n. @brentvatne Awesome! Is this the kind of thing you mean with the canceling? https://vid.me/O3wB\n@TYRONEMICHAEL Still having trouble with ScrollView on master. I'll dig in more to see if I can figure out what's up with that. \n. @brentvatne Awesome! Is this the kind of thing you mean with the canceling? https://vid.me/O3wB\n@TYRONEMICHAEL Still having trouble with ScrollView on master. I'll dig in more to see if I can figure out what's up with that. \n. @brentvatne How about this one: https://vid.me/yKVY\n. @brentvatne How about this one: https://vid.me/yKVY\n. To narrow things down, tried a simpler layout with no ListView or ScrollView and it still happens:\nhttps://gist.github.com/rxb/31068fa0041a2080f5de\n. Thanks for the help. I put together a better example here that reproduces it:\nhttps://rnplay.org/plays/phXLkA\nIf you load this example, try switching to the second tab, then back to the first, that's where the hang is.\nThen, if you comment out either of the style rules on lines 168 or 169 and re-run the app, transitioning back and forth works again. \n. Is it a vertical + horizontal combination or two ScrollViews scrolling on the same axis?\n. @brentvatne Thanks for the notes. Everything except for the isHorizontal question is fixed and squashed into 1 commit.\n. What do you think about tweaking the api to match up with the CSS scroll-snap-points spec?\nhttp://www.w3.org/TR/css-snappoints-1/#scroll-snap-type \nLooks like it will be in most browsers soon:\nhttp://caniuse.com/#feat=css-snappoints \nhttps://www.chromestatus.com/features/5721832506261504\n. I think where that difference matters most is when you are scrolling through items that are not close to the screen width, like photos on FB profiles:\nhttps://vid.me/V4Bz\nIt would be rough if it forced one-at-a-time, but free scrolling would feel like driving on a greased track. \n. @brentvatne Awesome, I'll sync things up with the W3C spec.\nAfter testing this in a more realistic screen -- where the horizontal scrolling section is one part of a longer vertical scrollview -- ran into that nested scrolling bug from: https://github.com/facebook/react-native/issues/41 .\n. Also seeing this. Happens when I push away from a screen that has an image with just flex: 1 as width, rather than an explicit width. \n. ",
    "jedt": "I was able to replicate this whenever I have a ScrollView (or ListView) with TabBarIOS at the bottom. If I put automaticallyAdjustContentInsets={false} the extra space at the top disappears but the scrollview doesn't scroll up all the way hiding the bottom contents of the ScrollView below the TabBarIOS\n. I was able to replicate this whenever I have a ScrollView (or ListView) with TabBarIOS at the bottom. If I put automaticallyAdjustContentInsets={false} the extra space at the top disappears but the scrollview doesn't scroll up all the way hiding the bottom contents of the ScrollView below the TabBarIOS\n. Thanks @ide! it works perfectly :)\nhere is the code:\n```\n<ListView\n  contentInset={{bottom:49}}\n  automaticallyAdjustContentInsets={false}\n\n```\n. Thanks @ide! it works perfectly :)\n\nhere is the code:\n```\n<ListView\n  contentInset={{bottom:49}}\n  automaticallyAdjustContentInsets={false}\n\n```\n. Hey @crysfel, you can use high resolution images or retina images by suffixing @2x to the file name. for example:\n\nicon@2x.png\n. ",
    "wub": "@jedt @ide Also, if you still can't see everything after doing that, make sure the container has flex: 1 - I forgot to do that I couldn't scroll more than (64 + 49)px!\n. ",
    "broonage": "This should definitely be explained in the ListView docs at least. I.e. If using a tab bar with a list view etc...\n. ",
    "RWOverdijk": ":+1: for the answer in this issue. :-1: for this being magic to users.\n. ",
    "christopherdro": "Related: #1779 #2151 \n@brentvatne @ide \n. Not sure if this was unavailable before but now you can set the the property bounces to false.\nHere is an example.\nhttps://rnplay.org/plays/E_Nbsw\n. That results in the flow server not being able start.\n.flowconfig:23 Unsupported config section: \"library\"\n. This looks like the same as #912 #938. \nThe issue is not upgrading flow. Trying using 0.7.0 , or 0.8.0.\n. This looks like the same as #912 #938. \nThe issue is not upgrading flow. Trying using 0.7.0 , or 0.8.0.\n. brew switch flow 0.8.0\nIf you don't have this version it will display what versions you have access to.\n. @jasongonzales23 After downgrading flow make sure to cd into your proj directory then try restarting the flow server by using 'flow stop' and 'flow start'.\nSee if that helps.\n@jergason Did you resolve this issue?\n. @jergason Please close this issue since it has been resolved.\nThanks @gabelevi!\n. @stuartlynn Are you still having this issue?\n. @stuartlynn Are you still having this issue?\n. :+1: \n. :+1: \n. @peterprokop \nDid the solution from @oblador work for you?\n. This looks like the same as #912 #784. \nThe issue is not upgrading flow. Trying using 0.7.0 , or 0.8.0.\n. @jaygarcia Did you get this resolved?\n. Here's a example with embedding a youtube video and setting the height and width of the content container.\nhttps://rnplay.org/plays/6JolNQ\n. @mvayngrib did you ever get this resolved?\n. This might help. http://stackoverflow.com/questions/29683720/react-native-push-notifications-parse\n. Navigator works a bit differently. If I'm not mistaken the following should work.\nnavigationBar: <ActivityDetailNavBar event={event}/>\nYou should then be able to access that in your screen by using event: this.props.event\nAlso, navigator uses renderScene to load the correct component rather than passing in component parameter like you have above.\nTake a look at the docs and UIExplorer example to get a better understanding of how it works.\nHope this helps.\n. @soheil Still having this issue?\n. The properties you are trying to use don't apply to the TextInput rather the View wrapping it.\nIt should look something like this...\n```\n\n \n\ninput:{\n    flex: 1,\n    height: 50,\n    marginLeft: 10,\n    marginTop: 5,\n    paddingLeft: 10,\n    marginRight: 5,\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    borderLeftColor: '#000000',   //nothing happened here.\n    color: '#888888'\n}\n``\n. @TylerYang Np! Make sure to close if it resolved your issue.\n. @soheil Were you able to figure this one out?\n. In order to pass in multiple attributes you need to send it through as an array.`\n. @donghanji Did this resolve your issue?\n. @soliury Great!\nMaybe you can share your solution for other people that might come across this!\n. #1410 \n. @arunshan Would you mind closing this if it's been solved?\n. http://facebook.github.io/react-native/docs/webview.html#content\nWebView already has that option. Just make sure to pass it in as a string. \n. You need the html property.\nHere's a fiddle.\nhttps://rnplay.org/plays/6JolNQ/edit\n. :+1: I posted these issues a few weeks ago while working on the calendar.\nWas looking for confirmation that it wasn't working.\n. @brentvatne Sounds good. \nI just tried narrowing it down even further. I feel like the paragraph above already gave a pretty good breakdown. Feel free make any changes you see fit.\n. :+1: \n. You could use Navigator on your index and set the initial route to your TabBars.\nNow, any new screen that is pushed will overlap your TabBar screen.\n. Your missing the proper headers.\nShould look something like this...\nfetch('http://localhost:3000/auth', {\n  method: 'post',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    config_name: 'default',\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.password_confirmation,\n  })\n})\nMore info at https://github.com/github/fetch#post-json\n. The latest stable release is 0.5.0.\nDid you make sure to update the version inside of package.json?\nAfterwards, you can just run npm update in the your project directory.\n. This is still limited since the docs for components and api's are handled differently. \nWorks with existing .md files inside of the /docs folder.\n. Nit: Alphabetize \n. Nit: Space after comma\n. Nit: Space between brackets\n. New line\n. Tests are failing here: \nhttps://travis-ci.org/facebook/react-native/jobs/123110901#L1531\nI think you need to passpropsTimeStamp as the dateprop.\n. Does this need to be inside render?  I think it can be set above alongside propsTimeStamp. \n. Not sure if this is the best way to handle this.\n@ide Any chance you can comment on this?\n. Should we get rid of \"On Windows...\" here and just the sentence with \"The Packager...\"?\n. @javache Mind taking another look at this?\n. nit: space before {\n. nit: add spaces \nif (url.startsWith(\"tel:\")) {\n. I think we should be about other libraries referencing specific versions of react native since usingcompile 'com.facebook.react:react-native:+' as a reference works just fine and is quite common.\n. typo: verion = version\n. ",
    "peridotlib15": "I have a horizontal scroll view and getting extra bottom space.\nI changed height in style and contentContainerStyle but not work\nAnybody experienced same thing?\n. ",
    "hustshawn": "The feature is good enough and somewhat necessary in most of the cases that ListView just placed under the Navigator, but the problem is the lack of documentation here .\n. ",
    "Skylonatron": "Thanks so much i was messing with this for way too long. ",
    "MattFoley": ":+1: me too.\n. :+1: \n. Are there still plans to merge this in?\n. Oh yeah, I missed that bit. That's the problem. Let me update this.\n. I've just updated the other two comments, they both make sense, and I'll push them up shortly but I don't think this one is actually feasible. \nMy logic is this, since NSTextStorage is an NSAttributedString subclass there is no limit to the variations on font sizes and faces present in the attributes. For example, an NSAttributedString/NSTextStorage object could contain Helvetica Neue 30pt, Helvetica Bold 120pt, San Francisco 12pt, etc, etc, etc. \nThat's why I took the method of decrementing all font faces by the same amount until it fit, or a given face reached minimumFontScale.\n. I've just updated the other two comments, they both make sense, and I'll push them up shortly but I don't think this one is actually feasible. \nMy logic is this, since NSTextStorage is an NSAttributedString subclass there is no limit to the variations on font sizes and faces present in the attributes. For example, an NSAttributedString/NSTextStorage object could contain Helvetica Neue 30pt, Helvetica Bold 120pt, San Francisco 12pt, etc, etc, etc. \nThat's why I took the method of decrementing all font faces by the same amount until it fit, or a given face reached minimumFontScale.\n. I prefer not to have multiple exits of a given method like that, as you end up eventually having hard to follow logic. I will make this change shortly since you've asked for it, but do you have a style guide I can reference for things like this?\n\nOn Aug 26, 2015, at 6:32 PM, James Ide notifications@github.com wrote:\nIn React/Modules/RCTDevLoadingView.m:\n\n\n[_window addSubview:_label];\n[_window makeKeyAndVisible];\n\n-    }\n\nNSString *source;\nif (URL.fileURL) {\nsource = @\"pre-bundled file\";\n} else {\nsource = [NSString stringWithFormat:@\"%@:%@\", URL.host, URL.port];\n\n-    }\n\n_label.text = [NSString stringWithFormat:@\"Loading from %@...\", source];\n\n-    _window.hidden = NO;\n\n});\nif (isEnabled) {\n  Just bail out & return early if !isEnabled to avoid all this indentation.\n\n\n\u2015\nReply to this email directly or view it on GitHub.\n. I prefer not to have multiple exits of a given method like that, as you end up eventually having hard to follow logic. I will make this change shortly since you've asked for it, but do you have a style guide I can reference for things like this?\nOn Aug 26, 2015, at 6:32 PM, James Ide notifications@github.com wrote:\nIn React/Modules/RCTDevLoadingView.m:\n\n\n[_window addSubview:_label];\n[_window makeKeyAndVisible];\n\n-    }\n\nNSString *source;\nif (URL.fileURL) {\nsource = @\"pre-bundled file\";\n} else {\nsource = [NSString stringWithFormat:@\"%@:%@\", URL.host, URL.port];\n\n-    }\n\n_label.text = [NSString stringWithFormat:@\"Loading from %@...\", source];\n\n-    _window.hidden = NO;\n\n});\nif (isEnabled) {\n  Just bail out & return early if !isEnabled to avoid all this indentation.\n\n\n\u2015\nReply to this email directly or view it on GitHub.\n. I'd probably break this method into somewhat smaller chunks myself. :)\n. I'd probably break this method into somewhat smaller chunks myself. :)\n. Ah, my bad, I thought you meant everything. I will do that right now.\n. Ah, my bad, I thought you meant everything. I will do that right now.\n. Never use if statements without wrapped brackets, even one line if statements. You're just asking for your future self to be delivered a world of pain.. \n",
    "vipulnsward": "This can be closed similar to https://github.com/facebook/react-native/pull/828 ?\n. Ha, that worked. I had 0.6.0. \nMaybe the supported flow version should be documented?\n. ",
    "andrewngu": "Sure thing!\nSo I did a little more digging and it turns out that it only happens with really large images. Is it because the view is rendering before the image has finished downloading? Is there a way to preload the image within a react component? Anyways, here's the code to reproduce the issue.\n```\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n    AppRegistry,\n    Image,\n    StyleSheet,\n    Text,\n    TouchableHighlight,\n    View,\n} = React;\nvar ImagesTest = React.createClass({\n    getInitialState: function(){\n        return {\n            images: [\n                '{\"image\": \"http://imageshack.com/a/img540/5042/7rh9dZ.jpg\"}',\n                '{\"image\": \"http://i1196.photobucket.com/albums/aa419/lefashion/lefashion054/2-Le-Fashion-Blog-Model-Crush-Joanna-Halpin-Long-Hair-White-Jeans-Via-Mate-The-Label.jpg\"}',\n                '{\"image\": \"http://imageshack.us/a/img43/6163/stylemintbluetopstriped.jpg\"}',\n                '{\"image\": \"http://www.styledumonde.com/wp-content/uploads/2014/02/May-Buranasiri-dailycherie-by-STYLEDUMONDE-Street-Style-Fashion-Blog_MG_88211.jpg\"}',\n                '{\"image\": \"http://www.made-in-italy.com/files/imagecache/lg/pictures/italian-fashion/news/2013/04/fashion-blogger-di-betty.jpg\"}',\n            ]\n        };\n    },\n    getImage: function() {\n        var image = JSON.parse(this.state.images[0]);\n        return image.image;\n    },\n    shiftImages: function() {\n        var images = this.state.images;\n        var firstImage = images.shift();\n        images.push(firstImage);\n        this.setState({\n            images: images,\n        });\n    },\n    render: function() {\n        return (\n            \n\n\nPress to change photo\n\n\n        );\n    }\n});\nvar styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF',\n    },\n    image: {\n        flex: 1,\n        width: 340,\n        resizeMode: Image.resizeMode.cover,\n    },\n    button: {\n        height: 50,\n        justifyContent: 'center',\n    }\n});\nAppRegistry.registerComponent('ImagesTest', () => ImagesTest);\n```\n. ",
    "kyle-ssg": "Yeah having found a similar issue using setTimeout related stuff before requiring react-native I tried this approach, however it didn't work. I have a feeling global wouldn't work when debugging with chrome? \nEither way for now I went with the following :\n``` javascript\nvar React = require('react-native'),\n    window = global || window;\nwindow.React = React;\nwindow._= require('lodash');\n//and so on\n```\n. Ah good to know, I'll start using that where applicable. Cheers for the help\n. Ah great catch! That worked. Could this issue also affect setting variables with window scope ? \nE.g. \njavascript\nwindow._ = require('lodash');\n. Aren't the unknowns just your custom components here? Maybe try adding something like displayName: 'MyComponent' inside your component.\n. ",
    "o-e": "Oh, I had totally missed that one. pointerEvents=\"box-none\" made the trick (with \"none\" I could not catch touches on children). Big thanks!\n. You need to activate it in the simulator (the fact that it is invisible does not has to do with react native). Use Command K.\n. You need to activate it in the simulator (the fact that it is invisible does not has to do with react native). Use Command K.\n. ",
    "rjchatfield": "+1\n. ",
    "Nosherwan": "Fixed after upgrade of npm package \"react-native\" to \"0.3.7\"\n. Chrome is: Version 42.0.2311.90 (64-bit)\nI found a workaround, which was I changed the location of my solution, and it started picking up the js changes. I know there is an issue where if one of the directories has a space in the name it gives an error, but firstly I didn't have any spaces in my directory names in the structure, secondly that one is a different error.\nhttps://github.com/facebook/react-native/issues/297\n. Thankyou for your validation, and pointing me in the right direction.\nAfter debugging in detail there were two issues that I found. One was the request was returning 1500 records that was causing the page to wait for almost 20 seconds. Secondly an error on my part, I had accidentally ticked the slow animations option for the ios emulator that literally reduced the speed of the animations.\nI will close the issue now.\n. ",
    "CharlieTruong": "I'm also getting the same problems on my machine, same setup as @subpublicanders .\n. ",
    "istarkov": "+1 \nI have the same issue\n. To avoid this resets, i use dirty workaround using customized easing function and setting duration to \"infinity\" value\nexample:\njavascript\nvar easeInQuad = function(t: number): number {\n  return t * t;\n};\nvar ease_duration = 300; //duration for animation\nvar infinite_duration = 100000;\nAnimationExperimental.startAnimation({\n  node: this.refs['internal'],      \n  duration: infinite_duration,\n  easing: (t) => easeInQuad(Math.min(1, t*infinite_duration/ease_duration)),\n  property: 'scaleXY',\n  toValue: [2,2],\n});\n. ",
    "masterhou": "+1 \nI have the same issue\nsliderios sample, i found drag the slider, will crash at RCTText setAttributedText  [_textStorage setAttributedString:attributedText];\n. ",
    "eiriklv": "+1 on this as well..\n. ",
    "LengBinBin": "got that,thanks.\n. +1. Got the same issue _NSBlockNumberForIndex on click the cell in demo project.\n. ",
    "manuelkiessling": "Had the very same issue at v0.3.8. At v0.3.10, it no longer occurs.\n. Thank you @harhoo for reporting, and @a2 for fixing it.\n. Mh... but I'm at 0.3.11, and at least through npm I can't install a more recent version as of now. Should I switch to master?\n. ",
    "iDVB": "Looks like that value is indeed set. \n\nBTW, the code I'm using is from this tutorial.\nHere is a video of it happening.\n. WORKS! Kinda fiddly setup though. Not even sure what fixed it as I did, multiple refreshes, restarts of the Simulator and swapping the location from custom to Apple and back.\nThanks for the help.\n. ",
    "menway": "How to avoid using absolute path for local file uri?\n. ",
    "justinmcp": "1) The macro sounds good, I wasn't happy with the extra burden myself.\n2) More than happy to stick with any style guide, I thought I had followed the general style. Any examples of what you mean here?\n. Made some changes to match master.\n. @brentvatne @nicklockwood I'd like to keep open the possibility - I'm not tied to any particular way, but I think opening up to other runtimes and language bindings is beneficial. I also think the current way (at least at the time I wrote the patch, haven't looked since) is going to make dynamic modules more problematic.\nIt would be good to have a discussion about a possible way forward.\n. Yup, that's correct. It is theoretically not a problem, because at run time frameworks check for the existence of methods, not conformance to a protocol as a whole.\n. No. The logic is inverted because the function can no longer just exit if the section is not found - it must process any methods found by the \"methodsToExport\" class method. It also fixes a subtle bug - this function should be returning a RCTSparseArray of registered methods.\n. ",
    "angeloashmore": "I think this may be an issue with your styles as I have been able to implement what you are trying.\nTry this out and see if it comes into view:\n``` js\nvar styles = StyleSheet.create({\n// ...\nview: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  }\n// ...\n});\n```\n. ",
    "hacksparrow": "Thanks for the suggestion, but it didn't have any effect. Maybe share a simplified version of your implementation?\n. This is clearly a documentation issue; #504 is also related to this.\nAs of now, the flex property is always required for NavigatorIOS to display its content. I will find the relevant doc file and send a PR.\nClosing this.\n. ",
    "bigparksh": "64 is just a magic number. It'll probably cause problems in future cases. You could solve the issue by wrapping the View within ScrollView in the render function.\n<ScrollView>\n    <View>\n    </View>\n</ScrollView>\n. ",
    "kozorezal": "@brentvatne initial issue was renamed, since it's related to style inheritance.\nAnswering your question, in browser I use background-image instead of nesting html inside image tag.\n. Thanks @frantic your answer helped, besides it's possible to wrap <Image> with <View> and set backgroundColor: \"#FFDDCC\" to it and \"transparent\" to <Image>\n. ",
    "studentdeng": "thanks\n. I hit the same problem. It looks like react native pod version doesn't support \"require\". both @ide and @7ynk3r ways is not working for me. While If I create project with react-native init. It works. \n. ",
    "yuanyan": "@jaygarcia For write once, run everywhere\n. @tjwudi Yes,  it's not a easy work if we port native component to React.js web.\n. @ClemMakesApps We make it happened, write once, run everywhere:\n\n. ",
    "machard": "+1\n. I'm running last version 0.4.0\nI've managed to have a mini example illustrating the problem.\nThe presence of a wrapping View seems to be causing it.\nMy use case is to have a scaling animation of the word when entering the view\n``` javascript\nvar Word = React.createClass({\n  componentWillUpdate (nextProps, nextState) {\n      LayoutAnimation.configureNext({\n        duration: 300,\n        create: {\n          type: LayoutAnimation.Types.easeInEaseOut,\n          property: LayoutAnimation.Properties.scaleXY,\n        }\n      }, () => {}, () => {});\n  },\ncomponentDidMount: function() {\n    this.setState({\n      word : \"word\"\n    });\n  },\nrender: function() {\n    return (\n      \n        {this.state && this.state.word}\n      \n    );\n  }\n});\nvar Container = React.createClass({\n  render: function() {\n    return (\n      \n\n\n    );\n  }\n});\n/\nAppRegistry.registerComponent('callbackBug', () => Container); // will not work\nAppRegistry.registerComponent('callbackBug', () => Word); // will work\n/\n```\n. I'm running last version 0.4.0\nI've managed to have a mini example illustrating the problem.\nThe presence of a wrapping View seems to be causing it.\nMy use case is to have a scaling animation of the word when entering the view\n``` javascript\nvar Word = React.createClass({\n  componentWillUpdate (nextProps, nextState) {\n      LayoutAnimation.configureNext({\n        duration: 300,\n        create: {\n          type: LayoutAnimation.Types.easeInEaseOut,\n          property: LayoutAnimation.Properties.scaleXY,\n        }\n      }, () => {}, () => {});\n  },\ncomponentDidMount: function() {\n    this.setState({\n      word : \"word\"\n    });\n  },\nrender: function() {\n    return (\n      \n        {this.state && this.state.word}\n      \n    );\n  }\n});\nvar Container = React.createClass({\n  render: function() {\n    return (\n      \n\n\n    );\n  }\n});\n/\nAppRegistry.registerComponent('callbackBug', () => Container); // will not work\nAppRegistry.registerComponent('callbackBug', () => Word); // will work\n/\n```\n. +1\n. this block would be better in didSelectAnnotationView\nWhen you have a lot of pin, all images are created AND downloaded when the map is displayed. It can fill your memory and crash the app!\nMoving it to didSelectAnnotation will create and load image only when the pin is tapped.\n. it was in case someone like me take the code and has the the same crash problem i had :)\n. ",
    "bobspace": "@facebook-github-bot import\n. ",
    "alexaivars": "would this be the same issue as trying todo require('./package') resulting in 'unknown module' ?\n. awesome, hope the next sync lands soon.\n. @amasad I can confirm that this is true and that it's a quite common practice to require package.json in this fashion. I however first noticed this since react-native chocked when I required cheerio. \n. ",
    "polyvision": "Having the same problem with UI explorer and in my own app. Tested in on an iPhone 5S with iOS 8.3\n2015-04-11 21:54:16.640 UIExplorer[1344:412065] >\nRCTJSLog> \"Warning: ScrollView doesn't take rejection well - scrolls anyway\"\n2015-04-11 21:54:22.541 UIExplorer[1344:412170] Connection to assetsd was interrupted or assetsd    died\n. ",
    "robarnold": "Happy to let you do the PRs instead! I'll close this out then when I get back to my work machine.\n-----Original Message-----\nFrom: \"Joe Wood\" notifications@github.com\nSent: \u200e4/\u200e13/\u200e2015 6:32 PM\nTo: \"facebook/react-native\" react-native@noreply.github.com\nCc: \"robarnold\" robarnold@cs.cmu.edu\nSubject: Re: [react-native] Support running the packager on Windows (#781)\nI've been splitting out the changes and submitting as separate PRs. First one here: #807. \nAlso, ensuring this is a no-op on Linux, testing for the OS type. \n\u2014\nReply to this email directly or view it on GitHub.\n. Closing so that @joewood can post these individually and respond to review comments.\n. ",
    "joshzana": "Can this be merged?\n. ",
    "jergason": "The default .flowconfig file isn't correct. See https://github.com/facebook/react-native/issues/784#issuecomment-94208658 for an explanation of how to get it running.\n. ",
    "jasongonzales23": "Bump. Same issue. Using Flow 0.10.0\n. uh, wow, I fixed it...?\n[libs] should be [library]\nSeems like a simple bugfix. Maybe I will dig in to this and fix it?\n. Heh, yeah I noticed that too late. All I noticed was that the demo then worked, which I assume is because flow didn't run at all. So, I still don't know how to get flow working in this demo.\nBut for fun you could try the following instead of [libs]\n[kittens]\n[pygmygoats]\n[ufos]\nand they all have the same result!\n. No joy with 0.9.2, 0.8.0, 0.7.0.\n. Bump. Using flow 0.10.0 as well. Same error as davidpfahler.\n. This fixed it for me:\nIn .flowconfig [libs] should be [library].\nCarry on.\n. Yeah, I see the same error in terminal, but miraculously the application launches and works. So yeah, my \"solution\" only works by coincidence :-1:  \nYou could (and I did) put anything in there and the demo will subsequently run.\nFor reference, I tried the following:\n[kittens]\n[pygmygoats]\n[ufos]\nAnd all of them had the same result.\n. Ah, OK. Works now. This should either be fixed or documented then.\n. ",
    "pavelnikolov": "What is the best way to downgrade flow if I have version 0.10.0 installed with homebrew?\n. ",
    "princeli": "@jasongonzales23 thanks,it fix my error\n. ",
    "gabelevi": "Hi everyone, thanks for the reports and sorry that you guys are having trouble! I'm a member of the Flow team and we spent the last day looking into this issue. There are two problems being discussed in this issue, both regarding react-native and Flow having trouble working together. The two problems are:\n1. People are having trouble using react-native 0.4.0 with Flow v0.10.0\n2. People are experiencing other miscellaneous Flow errors\nThis evening we deployed react-native 0.4.1, which included the following changes:\n1. Fixed the issues that Flow v0.10.0 noticed. react-native init yourproject should no longer generate a project with Flow errors (according to Flow v0.10.0)\n2. Temporarily disabled the red-box error messages for Flow errors. Users will have to run flow manually to see Flow errors. We on the Flow team think react-native is pretty awesome and don't want to block anyone from trying it out while we figure out how to properly pin Flow versions to React.\nOver the next week I'm going to try and tackle this problem of making sure that people use the right version of Flow with each version of react-native. Here are my tentative plans:\n1. Introduce an option to turn the flow checks on/off when you run your react-native app (and thus whether to show the red box)\n2. react-native init generates this .flowconfig file which configures Flow for your new project. I'm going to make the .flowconfig file specify exactly which version of Flow your project expects. That way if you're running the wrong version of Flow you'll know immediately, rather than having to guess from some strange error message\n3. I'm going to add flow-bin as a npm dependency. flow-bin is a pseudo npm package that downloads the correct binary from GitHub based on the version number and your operating system. This way the react-native packager can always use the correct version of Flow when doing it's Flow checking.\nSo yeah, sorry for the pain, thanks for the report, and look for some related improvements shortly!\n. Hi everyone, thanks for the reports and sorry that you guys are having trouble! I'm a member of the Flow team and we spent the last day looking into this issue. There are two problems being discussed in this issue, both regarding react-native and Flow having trouble working together. The two problems are:\n1. People are having trouble using react-native 0.4.0 with Flow v0.10.0\n2. People are experiencing other miscellaneous Flow errors\nThis evening we deployed react-native 0.4.1, which included the following changes:\n1. Fixed the issues that Flow v0.10.0 noticed. react-native init yourproject should no longer generate a project with Flow errors (according to Flow v0.10.0)\n2. Temporarily disabled the red-box error messages for Flow errors. Users will have to run flow manually to see Flow errors. We on the Flow team think react-native is pretty awesome and don't want to block anyone from trying it out while we figure out how to properly pin Flow versions to React.\nOver the next week I'm going to try and tackle this problem of making sure that people use the right version of Flow with each version of react-native. Here are my tentative plans:\n1. Introduce an option to turn the flow checks on/off when you run your react-native app (and thus whether to show the red box)\n2. react-native init generates this .flowconfig file which configures Flow for your new project. I'm going to make the .flowconfig file specify exactly which version of Flow your project expects. That way if you're running the wrong version of Flow you'll know immediately, rather than having to guess from some strange error message\n3. I'm going to add flow-bin as a npm dependency. flow-bin is a pseudo npm package that downloads the correct binary from GitHub based on the version number and your operating system. This way the react-native packager can always use the correct version of Flow when doing it's Flow checking.\nSo yeah, sorry for the pain, thanks for the report, and look for some related improvements shortly!\n. Closing this issue out as a duplicate of https://github.com/facebook/react-native/issues/784\n. I tested this by doing something like\n``` Bash\nCheck out my fork of react-native\n./react-native-gabelevi/react-native-cli/index.js init Foo\ncd Foo\nnpm install ../react-native-gabelevi\n./node_modules/react-native/init.sh Foo\n``\n- I tried installing the current version of Flow (0.10.0) and an old version of Flow (0.9.2) to make sure it would install the right package. \n- Made sure thatnpm install --saveuses the^to specify the version, and that should mean exactly that version plus or minus patches, since the version number is < 1.0.0. \n- I messed around with the .flowconfig, and made sure the red box showed up when the .flowconfig's version didn't match the flow-bin version. \n- I added some flow errors and made sure the red box showed up.\n- I nuked thenode_modules/flow-binpackage and made sure the packager fell back toflow` (whatever is on the path)\n. @sahrens - I do still think this is a good idea. If I rebase & get the tests passing would you take this PR?\n. ",
    "dozoisch": ":+1: that would be so useful\n. :+1:  That would be awesome\n. Wasn't sure if it was used for documentation purposes! Alright, I'll remove this.\n. ",
    "ustun": "It also doesn't update when navigationBarHidden is changed, see https://github.com/facebook/react-native/issues/846\n. I can confirm, the example UIExplorer project has the same bug.\n. ",
    "ptmt": "@istarkov thanks! This is helpful on the prototype stage. \n. @istarkov, \nAfter reading this http://www.objc.io/issue-12/animations-explained.html I've realize that this is a feature of UIKit, not a bug, I've come up to call setState after the animation ends to keep the model and presentation layers in sync. In your example it could be like:\njavascript\nanimate() {\n AnimationExperimental.startAnimation({\n      node: this.refs['internal'],\n      duration: 1000,\n      easing: 'easeInQuad',\n      property: 'scaleXY',\n      toValue: [2, 2],\n    }, () => this.setState({scale: [2,2]}));\n}\ngetInitialState() {\n  return {\n    scale: [1, 1]\n  }\n}\nrender() {\n  return <View ref=\"internal\" \n     style={{transform:[\n       {scaleX: this.state.scale[0]},\n       {scaleY: this.state.scale[1]}]}>\n  </View>\n}\nIt works, but it's a bit tricky with Flexbox and positions property for me\n. Same here. \nSteps to reproduce: \n1. Install react-native-cli@0.4.0 and react-native init test-app && cd test-app.\n2. Install react-native-icons@latest https://github.com/corymsmith/react-native-icons/\n3. Run the app, get white screen + error Uncaught TypeError: Cannot read property 'apply' of undefined  in console.\n. @mjw56, thanks, now it works. I hope npm@3 will help to deduplicate dependencies (it seems peerDependency has failed and nobody uses it anymore). \n. @amasad Would be awesome to have this kind of dependency system! \nIs there any best practices to handle a lot of images right now? I'm not a fan of drag'n'droping something to XCode, so I wrote a little gist https://gist.github.com/unknownexception/91689d0f2bb8506cc9d9 which generate assets folders like imagename.imageset  with Contents.json inside and three scaled images using GraphicsMagick.\nhttps://facebook.github.io/react-native/docs/image.html says:\n\nA React component for displaying different types of images, including network images, static resources, temporary local images, and images from local disk, such as the camera roll.\n\nHow could I insert \"temporary local images\" and \"images from local disk\" via <Image> component? What if I want to download and cache network images? \n. Thank you so much! Could you help me about tests and other possible performances issues? As you mentioned before NSURLSession which creating each time. For now I use it in the app with a lot of images loading - everything is fine, but I understand these changes could affect somebody.  Or should I move it in external library?\n. Merged from upstream (new lines about resizing etc), I've got unnecessary commits, it looks unclean now. I use this branch in production, though, don't know what to do next exactly. Tests? Rebase?\n. @ide thanks, good point. I consider to adding the abort event. And about events' naming conventions, not sure how to do it right. I've used https://facebook.github.io/react-native/docs/textinput.html#onchange pattern on{eventName}. It's also similar to the current state of https://github.com/brentvatne/react-native-video, but it makes sense to rename methods. So we will have:\nloadstart, progress, abort, error, loadeddata. \n. Would you mind to try https://github.com/facebook/react-native/pull/1318 and see that onError handler returns? It could help to make Image error handler better.\n. @brentvatne it was my message on IRC. I use Image a lot in my app and hardly need to somehow control the cache. I've made a PR #1491 but it's a just silly yet working concept. Any thoughts how it could be done without risks to broke something in <Image/> for others? I see these options:\n1) totally own component as an external library \n2) use new <Image>  feature \"displaying local files\". So the part responsible for downloading and caching goes to javascript side. \n3) react-native fork <- I'm here\n. I agree. This is OH_I_NEED_TO_SEND_APP_TO_APP_STORE_RIGHT_NOT level. \n. I don't understand how to pass the right delegate property for shared session in that case. I mean this line NSURLSession *session = [NSURLSession sessionWithConfiguration:conf delegate:self delegateQueue:nil];\n. I don't understand how to pass the right delegate property for shared session in that case. I mean this line NSURLSession *session = [NSURLSession sessionWithConfiguration:conf delegate:self delegateQueue:nil];\n. Sorry, XCode makes me crazy about formatting thinks like this. Used this https://github.com/github/objective-c-style-guide#literals\n. Still can't figure out. Need digging into documentation and the examples.\n. ok\n. Thanks for comments, I renamed events and tried to not fire the progress event if it's not defined.\nTested this behavior with something like this: \n``` javascript\nclass TestNetworkImage extends Component {\n  componentDidMount() {\n      setTimeout(() => {\n        this.setState({\n          onProgress: this.onProgress.bind(this)\n        })\n      }, 1000);\n    }\nrender() {\n    return \n      {this.props.loader}\n      {this.props.children}\n    \n  }\n}\n```\nNSLog shows that at first second ImageView doesn't send an event to js in that case, then it does. \n. Missing closing parenthesis here.\n. Makes sense, or at least, reduce multiple identical checks.\n. ",
    "mvayngrib": "I have the same error, reproducible with the following steps:\n```\nreact-native init longargs\ncd longargs\nnpm install --save react-native-udp\nnpm install --save-dev react-native-webpack-server\nopen longargs.xcodeproj\nLink up react-native-udp:\n1. add node_modules/react-native-udp/UdpSockets.xcodeproj\n2. link libUdpSockets.a from UdpSockets lib\nBuild\n```\nError Details (copied and pasted from Xcode):\nBuild target UdpSockets\nCheck dependencies\nArgument list too long: recursive header expansion failed at /Users/tenaciousmv/Code/longargs/node_modules/react-native-udp/../../node_modules/webpack-dev-server/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/ws/node_modules/options.\n. i guess it's an Xcode thing, having to do with recursive Header Search Paths: $(SRCROOT)/../../React\nEdit: nm, it's User Header Search Paths: $(PROJECT_DIR)/../..\n. yea, sadly I didn't have time to dig in too deep so i hacked https://github.com/facebook/react-native/blob/master/packager/react-packager/src/DependencyResolver/haste/DependencyGraph/index.js#L121\nfrom\njs\nvar id = sansExtJs(name);\nto\njs\nvar id = name;\nand everything worked\n. awesome!\n. is crypto.getRandomValues even possible given RCTBridge is asynchronous?\n. @davidaurelio if rn is null, we don't need to worry about merging rn and browser. But if both are non-null, then line 109 is necessary Also, FYI, i opened the same PR here https://github.com/facebook/node-haste/pull/61 , so we can prob close this one\n. @mkonicek nothing changed in this respect, this is old code. @mkonicek same as above. I don't want to mix a bunch of different changes in one PR. ",
    "timfpark": "I had an issue like this and it seems to be fixed as of 0.4.4.\n. The Travis failure looks unrelated to my commit (testRendersWelcomeScreen) - please let me know if I've misunderstood.\n. Makes sense and definitely like the name better vs. iOS.  So concretely, @spicyj, you are suggesting this signature:\nevaluateJavaScript: function(script: string, callback: Function)\nthat takes a callback of the form:  \nfunction(err, results)\n(I flip flopped the err and results vs. WKWebView to match JS conventions)\nLet me know and I can make the change--\nTim\n. Ok - I'll update the PR with the above.  That seems to balance having a JS fluent interface and the naming of WKWebView.\n. Ok @spicyj - I updated the signature to match up with WKWebView.\n. Any thoughts on this @spicyj?\n. @spicyj:  So what you are thinking is that:\n- If the result can be parsed as a number, return it as a number.\n- If the result can be parsed as an array, return it as an array.\n- If the result can be parsed as a JSON object, return it as an object.\n- Otherwise, return it as a string.\nIs that right? \n. Ok - I will update this to both log and error and callback with the error.\n. The error here is in the definition - it is actually defined getWebWiewHandle in the file.\n. ",
    "ginamdar": "Please review the changes for supporting annotation inside MapView\n. Yes correct\n. ",
    "hojberg": "+1\n. ",
    "javery": "+1\nCurrent podspec is at 0.3.1 but latest version in the Specs is 0.2.1 \n. FYI, Looks like it has been updated.\nCocoaPods' React Spec\n. ",
    "rkstar": "seems like this should be done automatically when you do let {LinkingIOS} = React  no?\n. ok!  for anyone else who finds this... here is instructions: https://facebook.github.io/react-native/docs/linking-libraries.html\n. ",
    "AhmedShammala": "I just want to know if NSNotificationCenter work fine if we Calling it from js\nbz seem is not\n. ",
    "soliury": "but it also a bug, when I run , the app cpu hit 100%\n. OK, I see, but look in the commits, it so disorder. I think a clear changelog is good.\n. I have solve it . \n. Just don\u2019t set the contentStyle width and height, so it will work.\n\n\u5728 2015\u5e745\u670821\u65e5\uff0c22:50\uff0cChristopher Dro notifications@github.com \u5199\u9053\uff1a\n@soliury https://github.com/soliury Great!\nMaybe you can share your solution for other people that might come across this!\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/1315#issuecomment-104306097.\n. I am writing a app in react-native, and then I will open  the source of app, When the day come, I will put the example to here. \n\u5728 2015\u5e745\u670821\u65e5\uff0c22:50\uff0cChristopher Dro notifications@github.com \u5199\u9053\uff1a\n@soliury https://github.com/soliury Great!\nMaybe you can share your solution for other people that might come across this!\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/1315#issuecomment-104306097.\n. yes, I also meet this bug.\n. ok, this is the topic component:\n\n```\nvar React = require('react-native');\nvar Dimensions = require('Dimensions');\nvar styles = require('../styles/topic');\nvar { width, height } = Dimensions.get('window');\nvar {\n    View,\n    StyleSheet,\n    ScrollView,\n    Component,\n    Text,\n    StatusBarIOS,\n    Image,\n    ListView,\n    ActivityIndicatorIOS,\n    TouchableHighlight,\n    Navigator\n    } = React;\nclass Topic extends Component {\n    //constructor(props) {\n    //    super(props);\n    //}\ncomponentDidMount() {\n    console.log('topic mount');\n\n}\n\nrender() {\n    //var topic = this.props.data.topic;\n    console.log('render()');\n\n    return (\n        //<ScrollView style={{height:height,width:width,backgroundColor:'red'}}>\n        //    <View style={styles.titleWrapper}>\n        //        <Text style={styles.title}>\n        //            {topic.title}\n        //        </Text>\n        //\n        //        <View style={styles.titleFooter}>\n        //            <Text>\n        //                {topic.tab}\n        //            </Text>\n        //        </View>\n        //    </View>\n        //</ScrollView>\n\n        <View>\n            <Text>\n                asdfasdflkasdjfklasdjfklasdjfklasjdfklajsdfkladjfklasdjflkasdklfj\n            </Text>\n        </View>\n    )\n\n\n}\n\n}\nmodule.exports = Topic;\n``\n. It can console.logrender()`, but, I see nothing in the view. \n. I change to , but , it nothing to do : \n```\nvar React = require('react-native');\nvar Dimensions = require('Dimensions');\n//var styles = require('../styles/topic');\nvar { width, height } = Dimensions.get('window');\nvar {\n    View,\n    StyleSheet,\n    ScrollView,\n    Component,\n    Text,\n    StatusBarIOS,\n    Image,\n    ListView,\n    ActivityIndicatorIOS,\n    TouchableHighlight,\n    Navigator\n    } = React;\nclass Topic extends Component {\n    constructor(props) {\n        super(props);\n    }\ncomponentDidMount() {\n    console.log('topic mount');\n\n}\n\nrender() {\n    console.log('render()');\n\n    return (\n\n\n        <View style={{flex:1}}>\n            <Text>\n                asdfasdflkasdjfklasdjfklasdjfklasjdfklajsdfkladjfklasdjflkasdklfj\n            </Text>\n        </View>\n    )\n\n\n}\n\n}\nmodule.exports = Topic;\n``\n. And it don't through ane error. It can run, can console.logrender(), but, I see nothing in the view.\n. I changenavigator.push()tonavigator.replace(), it can work, but.push()can work, I see nothing and no errors.\n. I have try, but nothing to see. I see the view debug in _capture View hirerarchy_, I can see the view, but in  the simulator I see nothing , in mobile, also nothing .\n. it console.logfalse. I really don't know where is wrong, no errors, the render() can run, but see nothing. In the view debug, I can see the view rightly, but, in the simulator, I see nothing.\n. I have set the background, but nothing to see. the componentdidmount have been invoked.  I just don't know why thepushcan't work, thereplace` can work.\n. I have try, but it don\u2019t work.\n\n\u5728 2015\u5e745\u670821\u65e5\uff0c00:34\uff0carunshan notifications@github.com \u5199\u9053\uff1a\nAdd index to push in _onRowPress\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/1350#issuecomment-103951425.\n. It was a bug of navigator, if I remove the sceneStyle, it work right.\n. I update to 0.6.0, also meet this problem.\n. Can anyone solve it ?\n. @bimawa ok, thank you .\n. @bimawa but, I have try, it failed again.\n. oh, I use the tag v0.6.0-rc, \n. I have find the problem, the v0.6.0-rc don't support the es6 class, I create a new project, i change the example file to use class xxx extends Component, it will show this bugs. \n. So, I think it's the problem of babel\n. So how to solve it ?\n. I have found the reason, in listView there is a setInterval in line 249. If I remove it, it working good. I think it is not nessasery to use setInterval to check the item is touch the end.\n. I see, yes it works well in 0.6.0.\n. I meet this problem in both simulator and hardware.\n. Now, I close reboot and then, it works well. I don't know why.\n\nAnd I have a project which using 0.4.4, and then I update it to 0.6.0-rc, it can't work. I use 0.5.0, it can works well.\nIt shows that : \nRCTDataManager.queryData was called with 4 arguments, but expects 3\n. I try to create a new project in 0.5.0, and then, update to 0.6.0-rc , and then , it can work. \nThen, I try to copy the new project file to my older project in 0.4.4, but it also failed. I don't know why.\n. it is good now when I update to 0.6.0. \n. Now I have no issue in 0.6.0. It runs well\n. ",
    "ibrahim9": "same here :(\n. ",
    "moimael": "same for me\n. ",
    "zjx9461": "same with me .\nMac:10.11\nXcode:beta7\n. ",
    "tcrous": "Experiencing the same very slow init, but it does eventually finish and create the Project\n. ",
    "gumpyoung": "For who is wondering what react-native is actually doing, use (example for OSX):\nsudo react-native init <your project name> --verbose\n. ",
    "qtdc1229": "sudo react-native init AwesomeProject --verbose\nthen stop at package.json written \nprompt: Directory AwesomeProject already exist. Continue?:  (no) yes\nThis will walk you through creating a new React Native project in /Users/dingchao/AwesomeProject\nInstalling react-native package from npm...\nnpm info it worked if it ends with ok\nnpm verb cli [ '/usr/local/bin/node',\nnpm verb cli   '/usr/local/bin/npm',\nnpm verb cli   'install',\nnpm verb cli   '--verbose',\nnpm verb cli   '--save',\nnpm verb cli   'react-native' ]\nnpm info using npm@2.14.4\nnpm info using node@v4.1.2\nnpm verb install initial load of /Users/dingchao/AwesomeProject/package.json\nnpm verb installManyTop reading scoped package data from /Users/dingchao/AwesomeProject/node_modules/react-native/package.json\nnpm verb readDependencies loading dependencies from /Users/dingchao/AwesomeProject/package.json\nnpm verb install react-native is installed as 0.12.0\nnpm verb cache add spec react-native\nnpm verb addNamed \"*\" is a valid semver range for react-native\nnpm verb addNameRange registry:https://registry.npmjs.org/react-native not in flight; fetching\nnpm verb request uri https://registry.npmjs.org/react-native\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:49\nnpm verb request id a3ebbf0b1d2bfac7\nnpm verb etag \"9BN12Z89GJE5EANL3TJ4ZWTN6\"\nnpm http request GET https://registry.npmjs.org/react-native\nnpm http 304 https://registry.npmjs.org/react-native\nnpm verb etag https://registry.npmjs.org/react-native from cache\nnpm verb get saving react-native to /Users/dingchao/.npm/registry.npmjs.org/react-native/.cache.json\nnpm verb addNamed \"0.12.0\" is a plain semver version for react-native\nnpm verb afterAdd /Users/dingchao/.npm/react-native/0.12.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/react-native/0.12.0/package/package.json written\nnpm info install react-native@0.12.0 into /Users/dingchao/AwesomeProject\nnpm info installOne react-native@0.12.0\nnpm verb installOne of react-native to /Users/dingchao/AwesomeProject not in flight; installing\nnpm verb lock using /Users/dingchao/.npm/_locks/react-native-3397ca5154ef9acc.lock for /Users/dingchao/AwesomeProject/node_modules/react-native\nnpm verb unbuild node_modules/react-native\nnpm info preuninstall react-native@0.12.0\nnpm info uninstall react-native@0.12.0\nnpm verb unbuild rmStuff react-native@0.12.0 from /Users/dingchao/AwesomeProject/node_modules\nnpm verb gentlyRm vacuuming from /Users/dingchao/AwesomeProject/node_modules/.bin/react-native-start up to /Users/dingchao/AwesomeProject\nnpm info postuninstall react-native@0.12.0\nnpm verb gentlyRm don't care about contents; nuking /Users/dingchao/AwesomeProject/node_modules/react-native\nnpm verb tar unpack /Users/dingchao/.npm/react-native/0.12.0/package.tgz\nnpm verb tar unpacking to /Users/dingchao/AwesomeProject/node_modules/react-native\nnpm verb gentlyRm don't care about contents; nuking /Users/dingchao/AwesomeProject/node_modules/react-native\nnpm verb write writing to /Users/dingchao/AwesomeProject/node_modules/react-native/package.json\nnpm info preinstall react-native@0.12.0\nnpm verb readDependencies loading dependencies from /Users/dingchao/AwesomeProject/node_modules/react-native/package.json\nnpm verb readDependencies loading dependencies from /Users/dingchao/AwesomeProject/node_modules/react-native/package.json\nnpm verb cache add spec babel-core@^5.8.23\nnpm verb addNamed \">=5.8.23 <6.0.0\" is a valid semver range for babel-core\nnpm verb addNameRange registry:https://registry.npmjs.org/babel-core not in flight; fetching\nnpm verb cache add spec bser@^1.0.2\nnpm verb addNamed \">=1.0.2 <2.0.0\" is a valid semver range for bser\nnpm verb addNameRange registry:https://registry.npmjs.org/bser not in flight; fetching\nnpm verb cache add spec chalk@^1.1.1\nnpm verb addNamed \">=1.1.1 <2.0.0\" is a valid semver range for chalk\nnpm verb addNameRange registry:https://registry.npmjs.org/chalk not in flight; fetching\nnpm verb cache add spec connect@^2.8.3\nnpm verb addNamed \">=2.8.3 <3.0.0\" is a valid semver range for connect\nnpm verb addNameRange registry:https://registry.npmjs.org/connect not in flight; fetching\nnpm verb cache add spec debug@^2.2.0\nnpm verb addNamed \">=2.2.0 <3.0.0\" is a valid semver range for debug\nnpm verb addNameRange registry:https://registry.npmjs.org/debug not in flight; fetching\nnpm verb cache add spec fbjs-scripts@^0.2.1\nnpm verb addNamed \">=0.2.1 <0.3.0\" is a valid semver range for fbjs-scripts\nnpm verb addNameRange registry:https://registry.npmjs.org/fbjs-scripts not in flight; fetching\nnpm verb cache add spec graceful-fs@^4.1.2\nnpm verb addNamed \">=4.1.2 <5.0.0\" is a valid semver range for graceful-fs\nnpm verb addNameRange registry:https://registry.npmjs.org/graceful-fs not in flight; fetching\nnpm verb cache add spec image-size@^0.3.5\nnpm verb addNamed \">=0.3.5 <0.4.0\" is a valid semver range for image-size\nnpm verb addNameRange registry:https://registry.npmjs.org/image-size not in flight; fetching\nnpm verb cache add spec immutable@^3.7.5\nnpm verb addNamed \">=3.7.5 <4.0.0\" is a valid semver range for immutable\nnpm verb addNameRange registry:https://registry.npmjs.org/immutable not in flight; fetching\nnpm verb cache add spec joi@^6.6.1\nnpm verb addNamed \">=6.6.1 <7.0.0\" is a valid semver range for joi\nnpm verb addNameRange registry:https://registry.npmjs.org/joi not in flight; fetching\nnpm verb cache add spec jstransform@^11.0.3\nnpm verb addNamed \">=11.0.3 <12.0.0\" is a valid semver range for jstransform\nnpm verb addNameRange registry:https://registry.npmjs.org/jstransform not in flight; fetching\nnpm verb cache add spec module-deps@^3.9.1\nnpm verb addNamed \">=3.9.1 <4.0.0\" is a valid semver range for module-deps\nnpm verb addNameRange registry:https://registry.npmjs.org/module-deps not in flight; fetching\nnpm verb cache add spec optimist@^0.6.1\nnpm verb addNamed \">=0.6.1 <0.7.0\" is a valid semver range for optimist\nnpm verb addNameRange registry:https://registry.npmjs.org/optimist not in flight; fetching\nnpm verb cache add spec progress@^1.1.8\nnpm verb addNamed \">=1.1.8 <2.0.0\" is a valid semver range for progress\nnpm verb addNameRange registry:https://registry.npmjs.org/progress not in flight; fetching\nnpm verb cache add spec promise@^7.0.4\nnpm verb addNamed \">=7.0.4 <8.0.0\" is a valid semver range for promise\nnpm verb addNameRange registry:https://registry.npmjs.org/promise not in flight; fetching\nnpm verb cache add spec react-timer-mixin@^0.13.2\nnpm verb addNamed \">=0.13.2 <0.14.0\" is a valid semver range for react-timer-mixin\nnpm verb addNameRange registry:https://registry.npmjs.org/react-timer-mixin not in flight; fetching\nnpm verb cache add spec react-tools@git://github.com/facebook/react.git#b4e74e38e43ac53af8acd62c78c9213be0194245\nnpm verb cache add spec rebound@^0.0.13\nnpm verb addNamed \">=0.0.13 <0.0.14\" is a valid semver range for rebound\nnpm verb addNameRange registry:https://registry.npmjs.org/rebound not in flight; fetching\nnpm verb cache add spec regenerator@^0.8.36\nnpm verb addNamed \">=0.8.36 <0.9.0\" is a valid semver range for regenerator\nnpm verb addNameRange registry:https://registry.npmjs.org/regenerator not in flight; fetching\nnpm verb cache add spec sane@^1.2.0\nnpm verb addNamed \">=1.2.0 <2.0.0\" is a valid semver range for sane\nnpm verb addNameRange registry:https://registry.npmjs.org/sane not in flight; fetching\nnpm verb cache add spec semver@^5.0.1\nnpm verb addNamed \">=5.0.1 <6.0.0\" is a valid semver range for semver\nnpm verb addNameRange registry:https://registry.npmjs.org/semver not in flight; fetching\nnpm verb cache add spec source-map@^0.4.4\nnpm verb addNamed \">=0.4.4 <0.5.0\" is a valid semver range for source-map\nnpm verb addNameRange registry:https://registry.npmjs.org/source-map not in flight; fetching\nnpm verb cache add spec stacktrace-parser@^0.1.3\nnpm verb addNamed \">=0.1.3 <0.2.0\" is a valid semver range for stacktrace-parser\nnpm verb addNameRange registry:https://registry.npmjs.org/stacktrace-parser not in flight; fetching\nnpm verb cache add spec tinycolor2@^1.1.2\nnpm verb addNamed \">=1.1.2 <2.0.0\" is a valid semver range for tinycolor2\nnpm verb addNameRange registry:https://registry.npmjs.org/tinycolor2 not in flight; fetching\nnpm verb cache add spec uglify-js@^2.4.24\nnpm verb addNamed \">=2.4.24 <3.0.0\" is a valid semver range for uglify-js\nnpm verb addNameRange registry:https://registry.npmjs.org/uglify-js not in flight; fetching\nnpm verb cache add spec underscore@^1.8.3\nnpm verb addNamed \">=1.8.3 <2.0.0\" is a valid semver range for underscore\nnpm verb addNameRange registry:https://registry.npmjs.org/underscore not in flight; fetching\nnpm verb cache add spec wordwrap@^1.0.0\nnpm verb addNamed \">=1.0.0 <2.0.0\" is a valid semver range for wordwrap\nnpm verb addNameRange registry:https://registry.npmjs.org/wordwrap not in flight; fetching\nnpm verb cache add spec worker-farm@^1.3.1\nnpm verb addNamed \">=1.3.1 <2.0.0\" is a valid semver range for worker-farm\nnpm verb addNameRange registry:https://registry.npmjs.org/worker-farm not in flight; fetching\nnpm verb cache add spec ws@^0.8.0\nnpm verb addNamed \">=0.8.0 <0.9.0\" is a valid semver range for ws\nnpm verb addNameRange registry:https://registry.npmjs.org/ws not in flight; fetching\nnpm verb cache add spec yargs@^3.24.0\nnpm verb addNamed \">=3.24.0 <4.0.0\" is a valid semver range for yargs\nnpm verb addNameRange registry:https://registry.npmjs.org/yargs not in flight; fetching\nnpm verb cache add spec yeoman-environment@^1.2.7\nnpm verb addNamed \">=1.2.7 <2.0.0\" is a valid semver range for yeoman-environment\nnpm verb addNameRange registry:https://registry.npmjs.org/yeoman-environment not in flight; fetching\nnpm verb cache add spec yeoman-generator@^0.20.3\nnpm verb addNamed \">=0.20.3 <0.21.0\" is a valid semver range for yeoman-generator\nnpm verb addNameRange registry:https://registry.npmjs.org/yeoman-generator not in flight; fetching\nnpm verb cache add spec absolute-path@^0.0.0\nnpm verb addNamed \">=0.0.0 <0.0.1\" is a valid semver range for absolute-path\nnpm verb addNameRange registry:https://registry.npmjs.org/absolute-path not in flight; fetching\nnpm verb cache add spec babel@^5.8.23\nnpm verb addNamed \">=5.8.23 <6.0.0\" is a valid semver range for babel\nnpm verb addNameRange registry:https://registry.npmjs.org/babel not in flight; fetching\nnpm verb addRemoteGit caching git://github.com/facebook/react.git#b4e74e38e43ac53af8acd62c78c9213be0194245\nnpm verb addRemoteGit git://github.com/facebook/react.git#b4e74e38e43ac53af8acd62c78c9213be0194245 is a repository hosted by github\nnpm verb tryClone git-github-com-facebook-react-git-baa2986b not in flight; caching\nnpm verb request uri https://registry.npmjs.org/chalk\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"A4AG0CHZY80I2C0N8D8M4J1GB\"\nnpm http request GET https://registry.npmjs.org/chalk\nnpm verb request uri https://registry.npmjs.org/bser\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"2XVUYZ9TWKK5KJGBKT2SBZAO\"\nnpm http request GET https://registry.npmjs.org/bser\nnpm verb request uri https://registry.npmjs.org/babel-core\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"45NQ5Z1HDEFSQAWBJ6NMXZWW0\"\nnpm http request GET https://registry.npmjs.org/babel-core\nnpm verb request uri https://registry.npmjs.org/debug\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"938GCOMZPRYL0MRL59P6EH0XW\"\nnpm http request GET https://registry.npmjs.org/debug\nnpm verb request uri https://registry.npmjs.org/connect\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"DMT9CNKIB3HPGWYHF1NTQNQ7R\"\nnpm http request GET https://registry.npmjs.org/connect\nnpm verb request uri https://registry.npmjs.org/fbjs-scripts\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"A4K53NMGIU8980UCO5M8BVWX8\"\nnpm http request GET https://registry.npmjs.org/fbjs-scripts\nnpm verb request uri https://registry.npmjs.org/graceful-fs\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"6A8OIHSAUDCCUMW7MWX3L6A9C\"\nnpm http request GET https://registry.npmjs.org/graceful-fs\nnpm verb request uri https://registry.npmjs.org/image-size\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"8C4NKRBYO19O9A5BGYVCMUGT4\"\nnpm http request GET https://registry.npmjs.org/image-size\nnpm verb request uri https://registry.npmjs.org/immutable\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"6WDQRFSZSSWXOWP9ZDW3BESKK\"\nnpm http request GET https://registry.npmjs.org/immutable\nnpm verb request uri https://registry.npmjs.org/jstransform\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"47B7F6QLHW6K515EWMAOJ4LOW\"\nnpm http request GET https://registry.npmjs.org/jstransform\nnpm verb request uri https://registry.npmjs.org/optimist\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"9RQUNK7BUOJS98VF9ZAO7UP4H\"\nnpm http request GET https://registry.npmjs.org/optimist\nnpm verb request uri https://registry.npmjs.org/progress\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"1E18LWJKPT6532IK1ESQPPXBV\"\nnpm http request GET https://registry.npmjs.org/progress\nnpm verb request uri https://registry.npmjs.org/joi\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"81EJ0WAAALXQ5ZGP6E8WWBYQH\"\nnpm http request GET https://registry.npmjs.org/joi\nnpm verb request uri https://registry.npmjs.org/promise\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"9R1UWSKEQUA39DI36IQ35DJC6\"\nnpm http request GET https://registry.npmjs.org/promise\nnpm verb request uri https://registry.npmjs.org/module-deps\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"9E6ZZMT0G07VKN3D37MVGRV1M\"\nnpm http request GET https://registry.npmjs.org/module-deps\nnpm verb request uri https://registry.npmjs.org/react-timer-mixin\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"EPU2Y62XVRQT5W62E6J6GQ2MU\"\nnpm http request GET https://registry.npmjs.org/react-timer-mixin\nnpm verb request uri https://registry.npmjs.org/rebound\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"1CXSQLMNES4YIJ6CZOPVBNOW0\"\nnpm http request GET https://registry.npmjs.org/rebound\nnpm verb request uri https://registry.npmjs.org/sane\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"6JM6X2O9HYSPW391OMVKU1EZA\"\nnpm http request GET https://registry.npmjs.org/sane\nnpm verb request uri https://registry.npmjs.org/regenerator\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"7E10J75CMHUJPWO7UH0UXK54M\"\nnpm http request GET https://registry.npmjs.org/regenerator\nnpm verb request uri https://registry.npmjs.org/stacktrace-parser\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"1VJZMUPGMM32NI50EQZZPJ2SK\"\nnpm http request GET https://registry.npmjs.org/stacktrace-parser\nnpm verb request uri https://registry.npmjs.org/source-map\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"42K53LDDF1ONWC2DR3KJYJZ8J\"\nnpm http request GET https://registry.npmjs.org/source-map\nnpm verb request uri https://registry.npmjs.org/semver\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"7JOYOOBN12ENCTVXABTC8ATNA\"\nnpm http request GET https://registry.npmjs.org/semver\nnpm verb request uri https://registry.npmjs.org/tinycolor2\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"C5ILJEHXYV0YG4HI2YX6NI8E4\"\nnpm http request GET https://registry.npmjs.org/tinycolor2\nnpm verb request uri https://registry.npmjs.org/wordwrap\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"73LBTAP4GYYX0WY7YM3IQ89SJ\"\nnpm http request GET https://registry.npmjs.org/wordwrap\nnpm verb request uri https://registry.npmjs.org/worker-farm\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"CXU06ZEUSDK9QI96LZV4XRC6C\"\nnpm http request GET https://registry.npmjs.org/worker-farm\nnpm verb request uri https://registry.npmjs.org/underscore\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"6G88MAMQK4DS4O6CS4QHHWC5T\"\nnpm http request GET https://registry.npmjs.org/underscore\nnpm verb request uri https://registry.npmjs.org/yargs\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"N7UNE71RN7DY1GN2LO46SXAO\"\nnpm http request GET https://registry.npmjs.org/yargs\nnpm verb request uri https://registry.npmjs.org/yeoman-environment\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"3S671X4363G4BC5VFFT3YZG8F\"\nnpm http request GET https://registry.npmjs.org/yeoman-environment\nnpm verb request uri https://registry.npmjs.org/ws\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"64C8EBAIECE7P89JA4YU4X193\"\nnpm http request GET https://registry.npmjs.org/ws\nnpm verb request uri https://registry.npmjs.org/absolute-path\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"4288PGEF8OV0N9AJGCGH5OGG6\"\nnpm http request GET https://registry.npmjs.org/absolute-path\nnpm verb request uri https://registry.npmjs.org/uglify-js\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"9SJNMK22H9C2SSRLW8PRI17M9\"\nnpm http request GET https://registry.npmjs.org/uglify-js\nnpm verb request uri https://registry.npmjs.org/babel\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"4CZXB9WUGVPKZNM4BPESV6W61\"\nnpm http request GET https://registry.npmjs.org/babel\nnpm verb request uri https://registry.npmjs.org/yeoman-generator\nnpm verb request no auth needed\nnpm info attempt registry request try #1 at 10:33:51\nnpm verb etag \"JW2ZQWBP39TAK13YEI451KAV\"\nnpm http request GET https://registry.npmjs.org/yeoman-generator\nnpm info git [ 'clone',\nnpm info git   '--template=/Users/dingchao/.npm/_git-remotes/_templates',\nnpm info git   '--mirror',\nnpm info git   'git://github.com/facebook/react.git',\nnpm info git   '/Users/dingchao/.npm/_git-remotes/git-github-com-facebook-react-git-baa2986b' ]\nnpm http 304 https://registry.npmjs.org/image-size\nnpm verb etag https://registry.npmjs.org/image-size from cache\nnpm verb get saving image-size to /Users/dingchao/.npm/registry.npmjs.org/image-size/.cache.json\nnpm http 304 https://registry.npmjs.org/immutable\nnpm verb etag https://registry.npmjs.org/immutable from cache\nnpm verb get saving immutable to /Users/dingchao/.npm/registry.npmjs.org/immutable/.cache.json\nnpm verb addNamed \"0.3.5\" is a plain semver version for image-size\nnpm verb addNamed \"3.7.5\" is a plain semver version for immutable\nnpm verb afterAdd /Users/dingchao/.npm/immutable/3.7.5/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/image-size/0.3.5/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/immutable/3.7.5/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/image-size/0.3.5/package/package.json written\nnpm http 304 https://registry.npmjs.org/module-deps\nnpm verb etag https://registry.npmjs.org/module-deps from cache\nnpm verb get saving module-deps to /Users/dingchao/.npm/registry.npmjs.org/module-deps/.cache.json\nnpm verb addNamed \"3.9.1\" is a plain semver version for module-deps\nnpm http 304 https://registry.npmjs.org/promise\nnpm verb etag https://registry.npmjs.org/promise from cache\nnpm verb get saving promise to /Users/dingchao/.npm/registry.npmjs.org/promise/.cache.json\nnpm http 304 https://registry.npmjs.org/sane\nnpm verb etag https://registry.npmjs.org/sane from cache\nnpm verb get saving sane to /Users/dingchao/.npm/registry.npmjs.org/sane/.cache.json\nnpm http 304 https://registry.npmjs.org/stacktrace-parser\nnpm verb etag https://registry.npmjs.org/stacktrace-parser from cache\nnpm verb get saving stacktrace-parser to /Users/dingchao/.npm/registry.npmjs.org/stacktrace-parser/.cache.json\nnpm http 304 https://registry.npmjs.org/worker-farm\nnpm verb etag https://registry.npmjs.org/worker-farm from cache\nnpm verb get saving worker-farm to /Users/dingchao/.npm/registry.npmjs.org/worker-farm/.cache.json\nnpm http 304 https://registry.npmjs.org/yeoman-environment\nnpm verb etag https://registry.npmjs.org/yeoman-environment from cache\nnpm verb get saving yeoman-environment to /Users/dingchao/.npm/registry.npmjs.org/yeoman-environment/.cache.json\nnpm http 304 https://registry.npmjs.org/source-map\nnpm verb etag https://registry.npmjs.org/source-map from cache\nnpm verb get saving source-map to /Users/dingchao/.npm/registry.npmjs.org/source-map/.cache.json\nnpm http 304 https://registry.npmjs.org/regenerator\nnpm verb etag https://registry.npmjs.org/regenerator from cache\nnpm verb get saving regenerator to /Users/dingchao/.npm/registry.npmjs.org/regenerator/.cache.json\nnpm verb afterAdd /Users/dingchao/.npm/module-deps/3.9.1/package/package.json not in flight; writing\nnpm verb addNamed \"7.0.4\" is a plain semver version for promise\nnpm verb addNamed \"0.1.3\" is a plain semver version for stacktrace-parser\nnpm verb addNamed \"1.3.1\" is a plain semver version for worker-farm\nnpm verb addNamed \"1.3.0\" is a plain semver version for sane\nnpm verb addNamed \"1.2.7\" is a plain semver version for yeoman-environment\nnpm http 304 https://registry.npmjs.org/ws\nnpm verb etag https://registry.npmjs.org/ws from cache\nnpm verb get saving ws to /Users/dingchao/.npm/registry.npmjs.org/ws/.cache.json\nnpm http 304 https://registry.npmjs.org/wordwrap\nnpm verb etag https://registry.npmjs.org/wordwrap from cache\nnpm verb get saving wordwrap to /Users/dingchao/.npm/registry.npmjs.org/wordwrap/.cache.json\nnpm verb addNamed \"0.4.4\" is a plain semver version for source-map\nnpm verb afterAdd /Users/dingchao/.npm/module-deps/3.9.1/package/package.json written\nnpm verb addNamed \"0.8.41\" is a plain semver version for regenerator\nnpm http 304 https://registry.npmjs.org/absolute-path\nnpm verb etag https://registry.npmjs.org/absolute-path from cache\nnpm verb get saving absolute-path to /Users/dingchao/.npm/registry.npmjs.org/absolute-path/.cache.json\nnpm verb afterAdd /Users/dingchao/.npm/promise/7.0.4/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/stacktrace-parser/0.1.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/worker-farm/1.3.1/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/yeoman-environment/1.2.7/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/sane/1.3.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/source-map/0.4.4/package/package.json not in flight; writing\nnpm verb addNamed \"0.8.0\" is a plain semver version for ws\nnpm verb addNamed \"1.0.0\" is a plain semver version for wordwrap\nnpm verb afterAdd /Users/dingchao/.npm/promise/7.0.4/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/regenerator/0.8.41/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/stacktrace-parser/0.1.3/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/worker-farm/1.3.1/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/yeoman-environment/1.2.7/package/package.json written\nnpm verb addNamed \"0.0.0\" is a plain semver version for absolute-path\nnpm verb afterAdd /Users/dingchao/.npm/sane/1.3.0/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/source-map/0.4.4/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/ws/0.8.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/wordwrap/1.0.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/regenerator/0.8.41/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/absolute-path/0.0.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/ws/0.8.0/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/wordwrap/1.0.0/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/absolute-path/0.0.0/package/package.json written\nnpm http 304 https://registry.npmjs.org/bser\nnpm verb etag https://registry.npmjs.org/bser from cache\nnpm verb get saving bser to /Users/dingchao/.npm/registry.npmjs.org/bser/.cache.json\nnpm verb addNamed \"1.0.2\" is a plain semver version for bser\nnpm verb afterAdd /Users/dingchao/.npm/bser/1.0.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/bser/1.0.2/package/package.json written\nnpm http 304 https://registry.npmjs.org/chalk\nnpm verb etag https://registry.npmjs.org/chalk from cache\nnpm verb get saving chalk to /Users/dingchao/.npm/registry.npmjs.org/chalk/.cache.json\nnpm http 304 https://registry.npmjs.org/debug\nnpm verb etag https://registry.npmjs.org/debug from cache\nnpm verb get saving debug to /Users/dingchao/.npm/registry.npmjs.org/debug/.cache.json\nnpm http 304 https://registry.npmjs.org/connect\nnpm verb etag https://registry.npmjs.org/connect from cache\nnpm verb get saving connect to /Users/dingchao/.npm/registry.npmjs.org/connect/.cache.json\nnpm verb addNamed \"2.2.0\" is a plain semver version for debug\nnpm verb addNamed \"1.1.1\" is a plain semver version for chalk\nnpm verb addNamed \"2.30.2\" is a plain semver version for connect\nnpm http 304 https://registry.npmjs.org/react-timer-mixin\nnpm verb etag https://registry.npmjs.org/react-timer-mixin from cache\nnpm verb get saving react-timer-mixin to /Users/dingchao/.npm/registry.npmjs.org/react-timer-mixin/.cache.json\nnpm http 304 https://registry.npmjs.org/rebound\nnpm verb etag https://registry.npmjs.org/rebound from cache\nnpm verb get saving rebound to /Users/dingchao/.npm/registry.npmjs.org/rebound/.cache.json\nnpm http 304 https://registry.npmjs.org/graceful-fs\nnpm verb etag https://registry.npmjs.org/graceful-fs from cache\nnpm verb get saving graceful-fs to /Users/dingchao/.npm/registry.npmjs.org/graceful-fs/.cache.json\nnpm http 304 https://registry.npmjs.org/jstransform\nnpm verb etag https://registry.npmjs.org/jstransform from cache\nnpm verb get saving jstransform to /Users/dingchao/.npm/registry.npmjs.org/jstransform/.cache.json\nnpm http 304 https://registry.npmjs.org/underscore\nnpm verb etag https://registry.npmjs.org/underscore from cache\nnpm verb get saving underscore to /Users/dingchao/.npm/registry.npmjs.org/underscore/.cache.json\nnpm http 304 https://registry.npmjs.org/optimist\nnpm verb etag https://registry.npmjs.org/optimist from cache\nnpm verb get saving optimist to /Users/dingchao/.npm/registry.npmjs.org/optimist/.cache.json\nnpm http 304 https://registry.npmjs.org/progress\nnpm verb etag https://registry.npmjs.org/progress from cache\nnpm verb get saving progress to /Users/dingchao/.npm/registry.npmjs.org/progress/.cache.json\nnpm http 304 https://registry.npmjs.org/semver\nnpm verb etag https://registry.npmjs.org/semver from cache\nnpm verb get saving semver to /Users/dingchao/.npm/registry.npmjs.org/semver/.cache.json\nnpm http 304 https://registry.npmjs.org/joi\nnpm verb etag https://registry.npmjs.org/joi from cache\nnpm verb get saving joi to /Users/dingchao/.npm/registry.npmjs.org/joi/.cache.json\nnpm verb afterAdd /Users/dingchao/.npm/debug/2.2.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/connect/2.30.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/chalk/1.1.1/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/debug/2.2.0/package/package.json written\nnpm verb addNamed \"0.13.3\" is a plain semver version for react-timer-mixin\nnpm verb addNamed \"11.0.3\" is a plain semver version for jstransform\nnpm verb addNamed \"4.1.2\" is a plain semver version for graceful-fs\nnpm verb addNamed \"0.0.13\" is a plain semver version for rebound\nnpm verb addNamed \"1.8.3\" is a plain semver version for underscore\nnpm verb addNamed \"1.1.8\" is a plain semver version for progress\nnpm verb addNamed \"0.6.1\" is a plain semver version for optimist\nnpm verb addNamed \"5.0.3\" is a plain semver version for semver\nnpm verb afterAdd /Users/dingchao/.npm/chalk/1.1.1/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/connect/2.30.2/package/package.json written\nnpm verb addNamed \"6.9.0\" is a plain semver version for joi\nnpm verb afterAdd /Users/dingchao/.npm/react-timer-mixin/0.13.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/graceful-fs/4.1.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/rebound/0.0.13/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/underscore/1.8.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/progress/1.1.8/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/optimist/0.6.1/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/jstransform/11.0.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/semver/5.0.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/joi/6.9.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/graceful-fs/4.1.2/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/react-timer-mixin/0.13.3/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/underscore/1.8.3/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/progress/1.1.8/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/rebound/0.0.13/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/optimist/0.6.1/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/jstransform/11.0.3/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/semver/5.0.3/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/joi/6.9.0/package/package.json written\nnpm http 304 https://registry.npmjs.org/babel\nnpm verb etag https://registry.npmjs.org/babel from cache\nnpm verb get saving babel to /Users/dingchao/.npm/registry.npmjs.org/babel/.cache.json\nnpm verb addNamed \"5.8.23\" is a plain semver version for babel\nnpm verb afterAdd /Users/dingchao/.npm/babel/5.8.23/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/babel/5.8.23/package/package.json written\nnpm http 304 https://registry.npmjs.org/babel-core\nnpm verb etag https://registry.npmjs.org/babel-core from cache\nnpm verb get saving babel-core to /Users/dingchao/.npm/registry.npmjs.org/babel-core/.cache.json\nnpm verb addNamed \"5.8.25\" is a plain semver version for babel-core\nnpm verb afterAdd /Users/dingchao/.npm/babel-core/5.8.25/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/babel-core/5.8.25/package/package.json written\nnpm http 304 https://registry.npmjs.org/yeoman-generator\nnpm verb etag https://registry.npmjs.org/yeoman-generator from cache\nnpm verb get saving yeoman-generator to /Users/dingchao/.npm/registry.npmjs.org/yeoman-generator/.cache.json\nnpm http 304 https://registry.npmjs.org/tinycolor2\nnpm verb etag https://registry.npmjs.org/tinycolor2 from cache\nnpm verb get saving tinycolor2 to /Users/dingchao/.npm/registry.npmjs.org/tinycolor2/.cache.json\nnpm verb addNamed \"1.1.2\" is a plain semver version for tinycolor2\nnpm verb addNamed \"0.20.3\" is a plain semver version for yeoman-generator\nnpm verb afterAdd /Users/dingchao/.npm/tinycolor2/1.1.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/yeoman-generator/0.20.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/tinycolor2/1.1.2/package/package.json written\nnpm verb afterAdd /Users/dingchao/.npm/yeoman-generator/0.20.3/package/package.json written\nnpm http 304 https://registry.npmjs.org/fbjs-scripts\nnpm verb etag https://registry.npmjs.org/fbjs-scripts from cache\nnpm verb get saving fbjs-scripts to /Users/dingchao/.npm/registry.npmjs.org/fbjs-scripts/.cache.json\nnpm verb addNamed \"0.2.2\" is a plain semver version for fbjs-scripts\nnpm verb afterAdd /Users/dingchao/.npm/fbjs-scripts/0.2.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/fbjs-scripts/0.2.2/package/package.json written\nnpm http 304 https://registry.npmjs.org/uglify-js\nnpm verb etag https://registry.npmjs.org/uglify-js from cache\nnpm verb get saving uglify-js to /Users/dingchao/.npm/registry.npmjs.org/uglify-js/.cache.json\nnpm verb addNamed \"2.5.0\" is a plain semver version for uglify-js\nnpm verb afterAdd /Users/dingchao/.npm/uglify-js/2.5.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/uglify-js/2.5.0/package/package.json written\nnpm http 304 https://registry.npmjs.org/yargs\nnpm verb etag https://registry.npmjs.org/yargs from cache\nnpm verb get saving yargs to /Users/dingchao/.npm/registry.npmjs.org/yargs/.cache.json\nnpm verb addNamed \"3.27.0\" is a plain semver version for yargs\nnpm verb afterAdd /Users/dingchao/.npm/yargs/3.27.0/package/package.json not in flight; writing\nnpm verb afterAdd /Users/dingchao/.npm/yargs/3.27.0/package/package.json written\n-\n. ",
    "will-zhang": "@qtdc1229 I have the same problem  ~>_<~\n. ",
    "fallingfree": "+1\n. ",
    "passol1988": "+1\nencountered this,is this of network problem?\nalmost everyone live in China??\n. ",
    "bellu": "Same problem here. But running the command in the verbose mode (thanks @gumpyoung)  solved the problem.\n. ",
    "huozhi": "Same issue, I found the solution for people who live in China.\nIf you are behind the GFW, you could set your npm registry.\nAlibaba's npm mirrors works fine.\nMy laptop:\nOSX EI Capitan\nnpm v2.14.4\nnode v4.1.1\nI set the registry in my ~/.npmrc\nregistry=https://registry.npm.taobao.org\nthen execute react-native init SomeProject,\ndownload very fast and then all down.\n```\nAfter finish you will see this\n...\n   create android/gradlew\n   create android/gradlew.bat\n   create android/app/src/main/java/com/project/MainActivity.java\nTo run your app on iOS:\n   Open /Users/huozhi/Code/react/project/ios/project.xcodeproj in Xcode\n   Hit Run button\nTo run your app on Android:\n   Have an Android emulator running, or a device connected\n   cd /Users/huozhi/Code/react/project\n   react-native run-android\n```\nHope it works for you, enjoy your development\n. ",
    "vrspider": "I am not in China, but I also got stuck here when running \nreact-native init AwesomeProject --verbose\nnpm verb afterAdd /Users/yuankunma/.npm/react-timer-mixin/0.13.3/package/package.json written\nloadDep:yeoman-generator  \u258c \u2562\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u255f\n. ",
    "virginstv": "Today i use command \"react-native init MyProject\" and it show \"Installing react-native package from npm...\"....... and this message never finished until i decided to close the command window -_- Any help?? Thanks very much!\n. ",
    "mattmo": "Any update on this? I'd like to use local notifications in React Native. \n. Any update on this? I'd like to use local notifications in React Native. \n. Did you figure out the cause of this?\n. ",
    "lelandrichardson": "+1. I'm hoping to use local notifications as well.\n. +1. I'm hoping to use local notifications as well.\n. @ide that's a nifty command line argument. Do you know if I would I be able to just launch chrome with that command line arg and then whenever I launch the debugger from RN it would just work? Or is there a place in the RN source code where I would want to add that command line argument? I will try and test out the former along with @vjeux 's changes myself when I get a chance.\n. +1\nI've been working on porting an existing app as well and this is one of the biggest holes that React Native didn't handle very well by default.\nSome other people have tried to solve similar problems and their (quite different) implementations may provide some inspiration:\nhttps://github.com/t4t5/react-native-router\nhttps://github.com/Kureev/react-native-navbar\nI'm currently trying to tweak the \"react-native-router\" implementation to do something similar. Here's a gif of the \"react-native-router\" in action: (Edit: To be clear, the gif below is NOT my own work, it's the work of @t4t5)\n\nThe main things that I want to be able to do:\n- update the navigation title from the current route component (ie, when something updates), or alternatively, have the title be overridden by an arbitrary component and subscribe to updates  (eg, flux stores)\n- have arbitrary \"right\" and \"left\" bar area view components that could override the default forward/back buttons, including extra buttons if desired (for example, the \"New Tweet\" button in the example above)\nI believe this is all possible by creating a custom wrapper around the   component, but it would be nice if we could reduce the friction a little bit.\n. LoroTashi,\nI'm not sure if this is the issue or not.... but how do you know the return\nvalue is not being returned? just because you don't see it?\nIf this is the case, one thing you might want to check is to make sure that\nyour view isn't being rendered underneath the navigation bar, which can\noften be the case...\nfor instance, try adding a marginTop: 64 to the styles.wrapper and see\nif it shows up?\nApologies if you've already tried this.\n- Leland\nOn Tue, Apr 28, 2015 at 7:53 PM, LoroTashi notifications@github.com wrote:\n\nHi, I think improvement on the navigation is really a brilliant idea. I\nhope it would not be offensive that I ask a silly question here. When I\nimplement the demo test about navigation,\nthe MyView is triggered and the console.log function works. However, the\nreturn value is NOT return.\nin fact, I find a post with the same issue at\nhttp://stackoverflow.com/questions/29367270/component-wont-render-within-navigatorios-react-native\nbut none of the solution helps in my case.\n[image: 2015-04-29 10 42 08]\nhttps://cloud.githubusercontent.com/assets/912960/7384075/aae6ba0e-ee5d-11e4-9d8e-d6c16b6fbb52.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1024#issuecomment-97289632\n.\n. +1 for this. I was just looking for the same thing. If you end up making a module, could you let me know?\n. @Nosherwan have you done anything with this?  If not, I may play around with it. Thanks.\n. @brentvatne Looking closer at this, I think the current implementation is actually correct.  The xhr.onerror is only called if there is actually a hard-fail (ie, there was a network error) in which case there isn't actually an HTTP status code to inspect. In cases where there is an HTTP 500 or 404 etc, I believe the promise is resolved, not rejected, and the proper status code should be there in the resolve method. \n\nThe only time this isn't true seems to be if the status code was less than 100 or greater than 599.\n. Just to provide additional data points, this broke some similar styles in my app as well... I've reverted back to 0.4.0\n. @bimawa that was indeed the issue for me...\nadding width: undefined, height: undefined to the styles applied to the image fixed it in my case.\n. @ide what's the use case for needing visibility:hidden that display:none or opacity:0 wouldn't cover? I guess visibility:hidden wouldn't block touch events?\nPurely curious. I've found myself wanting display:none several times. I also like that it increases parity with the web.\n. lol... what?\n. you'll want to remove all console.log's in this PR, anyway.\n. if we are just delegating to super here, we should be able to get rid of this whole thing...\n. why are we removing rotation here?\n. the linter doesn't seem to be working on correct line numbers here, but you'll want to update the PR to include lingering commas for each element of lists of things (object notation, function calls, etc). This makes for cleaner diffs when people add/remove things.\n. we might want to move the white list outside of the actual function call. Then you could maybe also just do TRANSFORM_WHITELIST !== true :shrug:\n. TODO? Should we throw exception here or no?\nAlso, perhaps we should use RCTLog here?  Thoughts?\n. I believe for things like this we might want to use RCTAssert?\n. ",
    "flamepygmy": "+1 for the local notifications. If possible, also add support for calendar based notifications via \"scheduleLocalNotification\" in addition to \"presentLocalNotification\".\n. +1 for the local notifications. If possible, also add support for calendar based notifications via \"scheduleLocalNotification\" in addition to \"presentLocalNotification\".\n. ",
    "toblux": "Any update on this?\n. Any update on this?\n. Yes, getApplicationIconBadgeNumber and setApplicationIconBadgeNumber are the same in both modules. However, I think they should be defined somewhere more globally because changing the badge number isn't limited to apps using notifications.\n. Yes, getApplicationIconBadgeNumber and setApplicationIconBadgeNumber are the same in both modules. However, I think they should be defined somewhere more globally because changing the badge number isn't limited to apps using notifications.\n. ",
    "LyndonChin": "awesome ! DiaoZhaTian\n. ",
    "SoXeon": "66666!\n. ",
    "imochen": "\u770b\u5230\uff0c\u540a\u70b8\u5929\u3002\u3002\u3002\n. need Images.xcassets folder and  xx.imageset\n. ",
    "cssoul": "well done~\n. ",
    "constantx": ":+1:\n. :+1:\n. :+1: \n. ",
    "MandarinConLaBarba": "I'm also having this issue.\n. I also find it keeps the title and rightButtonTitle.\n. I also find it keeps the title and rightButtonTitle.\n. ",
    "jeroenbourgois": "Any more insights on this? I just reverted a lot of code since I was using the 'navigatorIOS' from the second page forward. But then I saw the navigationBarHidden prop and thought it would solve my setup. But I was wrong :)\n. @liubko I cannot get that to work. Can you show the code you use to change navigationBarHidden when using navigator.push? \nHere is how I do it, with no effect (btw navigationBarHidden was set to false when setting up the NavigatorIOS component):\n```\n this.props.navigator.push({\n   component: Login,\n   title: \"Sign In\",\n   navigationBarHidden: false, // try it here\n })\nthis.props.navigator.navigationBarHidden = false // and here\n```\n. AHA but of course! Should have seen that.... thanks a bunch!\n. ",
    "eltoob": "Still not quite clear how to change isNavBarHidden from a child view .... @liubko how does this.setState is going to fix the problem as the state is at the parent level class\n. @liubko just a bit confused ... how do you change the state of the NavigatorIOS from a child component ... it doesn't inherit the state from the parent component\n. ",
    "alexrabarts": "@liubko are you passing the context of the parent component to the child component through the props object?\n. ",
    "shahbhavir": "@brentvatne your fix would work when I move from A(no navbar)->B(no navbar)->C(with navbar). But when I move back to B from C, B will show navbar and toggle in B won't work. \nIs there any way we can listen on navigator route change? This would fix the problem.\n. ",
    "crysfel": "How can I use high resolution images for the icons in the tabs?\n. ",
    "tom76kimo": "Nice work! When will this be released? Just noticed the live Docs has updated but the cli tool hasn't. May introduce confusions. :smile: \n. ",
    "nsainaney": "In my case the blob is an image that I need to get to <Image source={...} />. No suggestions but just reporting a use case.\n. @nicklockwood, @experimentsin got it. The image server I'm dealing with requires an auth token in the header.\n. ",
    "ssomnoremac": "@nicklockwood: curious if there's any progress on this. In my case I need to post the blob after a fetch. Seems like a common use case.\n. @nicklockwood: Brilliant, prefer the first option. Second works but increases the payload size. Not sure I follow \"specifying the url\", I have two urls in my case: a remote and a local (couchbase-lite) device database. is it in fetch docs?\n. Great Nick, this looks great. Could be a life saver for our app. Thanks so\nmuch!\nOn Mar 3, 2016 6:38 PM, \"Nick Lockwood\" notifications@github.com wrote:\n\n@ssomnoremac https://github.com/ssomnoremac I've only tried it with\nplain XHR, but I assume it works with fetch as well.\nThe trick is to use our FormData polyfill. It seems like the docs for that\naren't on the website, but it's pretty well-documented in the FormData.js\nfile:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Network/FormData.js\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/854#issuecomment-192021492\n.\n. \n",
    "experimentsin": "@nicklockwood One use case we have where it seems passing a URL to <Image> can't help is when the remote image in question is secured and requires a custom access token header to be passed as part of the request. In that case it looks like we need to make a full strength fetch or XHR request to access the data then somehow hand it off locally in such a way that <Image> can address it.\n. ",
    "lu-ko": "@experimentsin +1 It's exactly my case. I'm looking forward for some solution that could be simply used.\n. ",
    "bestander": "\nThe problem with this approach is controlling the lifecycle of the data. We'd have no way of knowing if JS discarded the tag, so we wouldn't know when to release the data on the native side. We could put it in a LRU cache, but then you have the opposite problem, where the data has been released but you're still holding on to the tag, expecting it to work next time you use it.\nI'm open to suggestions.\n\n@nicklockwood in browsers this problem is solved with URL.createObjectURL().\nDevelopers are supposed to call URL.revokeObjectURL() manually when the binary data in the native memory is no more needed.\nIt is logical to repeat the same approach in RN.\n. Yep, it needs a space before the list\n. Yep\n. Yep\n. @mkonicek need your opinion on this: \"Can we add support for docblocks inside 'statics', so that it's not necessary to mark everything as a prop?\"\n. @mkonicek need your opinion on this: \"Can we add support for docblocks inside 'statics', so that it's not necessary to mark everything as a prop?\"\n. Are you sure about > 1?\narguments[0] is the first argument.\n. Are you sure about > 1?\narguments[0] is the first argument.\n. Flow is complaining that function is defined as returning Promise but it sometimes returns nothing.\nI think there is a bit too much if-else logic here, this could be simplified by returning promise and calling callbacks for all times.\nAlso we are going to use this pattern a lot for all the API that we are going to promisify, so moving the if-else logic to some helper function would be great\nMy first try:\n```\n// some helper module\nfunction decallbackify(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    throw error;\n  });\n};\n// NetIfno.js\nisConnectionExpensive(): Promise {\n  if (Platform.OS === 'android') {\n    return decallbackify(RCTNetInfo.isConnectionMetered(), [...arguments]);\n  } else {\n    Promise.reject(new Error('Currently not supported on iOS'));\n  }\n}\n```\n@davidaurelio what do you think?\nWe also need to pass callback order as params to decallbackify.\n. Flow is complaining that function is defined as returning Promise but it sometimes returns nothing.\nI think there is a bit too much if-else logic here, this could be simplified by returning promise and calling callbacks for all times.\nAlso we are going to use this pattern a lot for all the API that we are going to promisify, so moving the if-else logic to some helper function would be great\nMy first try:\n```\n// some helper module\nfunction decallbackify(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    throw error;\n  });\n};\n// NetIfno.js\nisConnectionExpensive(): Promise {\n  if (Platform.OS === 'android') {\n    return decallbackify(RCTNetInfo.isConnectionMetered(), [...arguments]);\n  } else {\n    Promise.reject(new Error('Currently not supported on iOS'));\n  }\n}\n```\n@davidaurelio what do you think?\nWe also need to pass callback order as params to decallbackify.\n. nice!\n. nice!\n. nice\n. nice\n. Your have a valid argument, yeah.\nMy concerns:\n- temporary things tend to get more permanent than we plan\n- we will do this if (callbacks.length > 0) a lot, for every API that we want to promisify. \n  If we don't provide a helper function we will have much more almost dead code in APIs for quite a while.\nLet's get some more people involved in the discussion, @nicklockwood @mkonicek what do you think?\n. Your have a valid argument, yeah.\nMy concerns:\n- temporary things tend to get more permanent than we plan\n- we will do this if (callbacks.length > 0) a lot, for every API that we want to promisify. \n  If we don't provide a helper function we will have much more almost dead code in APIs for quite a while.\nLet's get some more people involved in the discussion, @nicklockwood @mkonicek what do you think?\n. By the way, thanks for your persistence in doing this. :)\nIt is very much appreciated.\nOk, here is an udea.\nWe can \n```\n// decallbackifyHelper.js\n// @deprecated, will be removed on March 1 2016\nfunction promiseWithErrorFirstCallback(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    throw error;\n  });\n};\n// @deprecated, will be removed on March 1 2016\nfunction promiseWithSuccessFirstCallback(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    throw error;\n  });\n};\n```\nOn March 1 we will run a simple code mod that will replace code like this:\nconst promiseWithSuccessFirstCallback = require('decallbackifyHelper').promiseWithSuccessFirstCallback;\nreturn promiseWithSuccessFirstCallback(RCTNetInfo.isConnectionMetered(), [...arguments]);\ninto this\nreturn RCTNetInfo.isConnectionMetered();\nTo me it sounds way better than manually going and deleting all if statements with 10-15 lines each.\n. By the way, thanks for your persistence in doing this. :)\nIt is very much appreciated.\nOk, here is an udea.\nWe can \n```\n// decallbackifyHelper.js\n// @deprecated, will be removed on March 1 2016\nfunction promiseWithErrorFirstCallback(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    throw error;\n  });\n};\n// @deprecated, will be removed on March 1 2016\nfunction promiseWithSuccessFirstCallback(promise: Promise, callbacks: any[]): Promise {\n  return promise.then((res) => {\n    if (callbacks.length > 0) {\n      callbacks0;\n    }\n    return res;\n  }, (error) => {\n    if (callbacks.length > 0) {\n      callbacks1;\n    }\n    throw error;\n  });\n};\n```\nOn March 1 we will run a simple code mod that will replace code like this:\nconst promiseWithSuccessFirstCallback = require('decallbackifyHelper').promiseWithSuccessFirstCallback;\nreturn promiseWithSuccessFirstCallback(RCTNetInfo.isConnectionMetered(), [...arguments]);\ninto this\nreturn RCTNetInfo.isConnectionMetered();\nTo me it sounds way better than manually going and deleting all if statements with 10-15 lines each.\n. I don't insist on the code and namings above but the idea that we should not write callback counting manually.\n. FYI, this broke buck build.\nCould you add the used resource to BUCK file in this folder?\n. this file note used anymore\n. Damn, I would rather do this in gulp or node script :)\n. com.facebook.react.modules.core.HMRClient is from modules/core:core BUCK rule/package.\nBy importing this you create a circular dependency: modules/core:core -> devsupport:devsupport -> modules/core:core.\nBUCK does not like circular dependencies.\nSo the easiest fix would be to move HMRClient class into devsupport package.\nWhich is the logical place for it because it is a dev dependency.\n. yeah, you are right, I'll move this whole logic with the deployment to Node so that we don't jump between Node and Bash all the time.\nI have some positive experience using https://www.npmjs.com/package/git-promise for git checkouts and pushes.\n. thanks, I'll do a thorough check.\nbase seems the right way.\n. > We need to figure out a way for existing docs pages to still work. Maybe have them redirect in js to the specific version number?\n\nhttp://facebook.github.io/react-native/docs/animations.html#content\n\nDo you mean to keep so that we don't break the bookmarks to http://facebook.github.io/react-native/docs/animations.html#content so that it got redirected to http://facebook.github.io/react-native/stable/docs/animations.html#content?\nYeah, that is definitely on my list\n\nOne other thing that sucks about having a next is that all the typo / improvement pull requests are only going to show up in ~2-4 weeks to the main website. But I guess it's the cost of doing things :p\n\nI think this is the whole idea of splitting the versions :)\nIf someone submits an important docs fix and we decide to copy the change to a few previous releases than we may want to merge cherry pick it into the relevant branches.\nThen CI will do the redeployment with no problems.\n. I should better switch to backtick for consistency.\n. oh yeah, it works, thanks\n. Ha, forgot to remove comment, already did\nOn Tuesday, 9 February 2016, Christopher Chedeau notifications@github.com\nwrote:\n\nIn circle.yml\nhttps://github.com/facebook/react-native/pull/5760#discussion_r52358960:\n\npost:\n     # copy test report for Circle CI to display\n     - mkdir -p $CIRCLE_TEST_REPORTS/junit/\n     - find . -type f -regex \"./build/test-results/debug/._xml\" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \\;\n     - find . -type f -regex \"./outputs/androidTest-results/connected/._xml\" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \\;\n+deployment:\n-  website:\n-    branch: [/.*-stable/, /master/]\n-    commands:\n-      # generate docs website\n-      # TODO reach out to ben to get react-js user auth\n\nnow is a good time :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/5760/files#r52358960.\n. got it\n. yep, react-docgen got a nice update recently, I'll do a follow up\n. yeah, completely changed my filesystem manipulation scripts.\nCan't even think of what BASH script would allow me to do this now\n\nif (exec(`git rev-parse HEAD`).stdout.trim() === exec(`git ls-remote origin latest`).stdout.split(/\\s/)[0] ) {...\n. does not seem like I screwed up the spacing, no idea\n. thanks to both\n. Is  this right name?\nNode.js convention is callback(error, success...).\nIn this case this is single-callback-success-first I suppose.\n. Even though I like your improvement, @satya164.\nI would go with consistency, we don't throw in other cases, so we should not do it here.\nWill this work?\nerr => error && error(err)\n. @chirag04 you wanted to add something here?\n. thanks, we'll get back to it and send you a PR\n. I tested this setting does not do anything, .nvm is empty on every build and npm install is done fresh.\nNot too bad, npm is stable recentlly and takes just 3 minutes\n. @davidaurelio what do you think of this?\n. > Is this throwing at all?\nyeah, it throws because it can't find the module in a folder.\n. > Maybe automockOff + manual mocking is the better choice?\nThat is why I am asking you :)\n. :+1: \n. ups :)\n. Have a look at the CI builds, BUCK file of systeminfo needs a dependency on devsupport\n. Same as CircleCI.\nThe quickest way that catches 99%\nbuck fetch ReactAndroid/src/main/java/com/facebook/react\nbuck build ReactAndroid/src/main/java/com/facebook/react\nbuck fetch ReactAndroid/src/main/java/com/facebook/react/shell\nbuck build ReactAndroid/src/main/java/com/facebook/react/shell\nbuck fetch ReactAndroid/src/test/... \nbuck test ReactAndroid/src/test/...\n. needed?\n. @vjeux this should be href: '/react-native/blog'.\nOtherwise BASE setting will prepend /react-native/release/XX to the link and it won't work for people who navigate other versions but stable.\n. comma is missing\n. lol, that is what they called it in appium.\nI'll give it a better name \n. My point was that packager is tested in --ios mode anyway.\nBut I've had a better look, it was actually testing flow as well.\nI returned this test to both IOS/Android and named it --js to emphasize that we are testing js related stuff\n. fixed\n. Android e2e test is smarter.\nIf it sees a red screen it tries to reload the app and then it works.\nBoth solutions are a hack that indicate a race condition we have in the framework.\n. fixed\n. This form of string = boolean && boolean && string is a bit hard for my brain :)\nI would make it an explicit assignment and not abuse coercion.\n. return paths && paths.length > 0;\n. conflict\n. No worries, @benjamn, these kind of breaks happen from time to time, thanks a lot for considering a more robust versioning in the future.\nVery much appreciated \ud83d\udc4d \n. Good catch, I love javascript\nreturn !!(paths && paths.length > 0);\nAlthough I don't insist\n. could  you move this down a bit to preserve alphabetic ordering please\n. Is this field useful?\nIt is read only once in the new Runnable below\n. Not sure if it is good or bad but we have ReactSwipeRefreshLayout that posts a new Runnable with setRefreshing call while all the other Runnables are invoked from SwipeRefreshLayoutManager.\nDoes not look consistent and makes me confused.\n. Ah, I see thanks, that makes sense.\n. let's make it strict so that it does not go out of sync again\n. need a trailing comma here for consistency\n. nit: put { on the new line please as well\n. This does, @davidaurelio \n. That line probably won't do anything because packager is running as a daemon.\nFor e2e tests we kill all node 0_O, as a temporary measure, of course, until we have a nice nondaemon packager\n. What about how it was started before?\nDoesn't UiExplorer proj start a terminal?\n. Does it conflict with running the script manually?\nDevelopers do that when they break tests\n. > position something relative to a parent.\nTechnically it is to position something relative to the top left corner of the closest parent with relative position in CSS.\nAnd I am not 100% sure if I grasped all the CSS intricacies here\n. However we need to check if this quirk was repeated in React Native\n. I think we don't need to worry about breaking the bookmarks to that page.\nWho would bookmark it?\n. Oops, we need a redirect then\n. Ok, looks like you did everything right, in RN absolute is relative to the parent no matter what is the flow of parent\n. We use lower case for these links.\nAlso RN is not needed because everything here is RN.\nHow about packaging-ios-component?\n. Thanks, actually my change does not seem to work well\n. We still use dependencies internally, could you please export it here as well\n. parseCommandLine is used in a few places internally at FB.\nAlso it is used in dependencies.js, so it needs not to be removed.\n. For the sake of easier merge can you provide a shim for the old interface?\nargs here changed signature, our internal script expects this one:\n--entry-file,/path/SomeAppBundle.js,--platform,ios,--dev,true,--bundle-output,/path/buck-out/gen/__SomeAppJS#dev_js__/main.jsbundle,--assets-dest,/path/buck-out/gen/Libraries/SomeApp#dev_res__,--sourcemap-output,/path/buck-out/gen/Libraries/SomeAppJS#dev_source_map__/source.map\n. I think I got the reason why it fails to merge.\nWe have another chalk.js mock\npackager/react-packager/src/Activity/__mocks__/chalk.js.\n@GantMan, could you merge them into one?\n. This is the error message\n```\n \u25cf Test suite failed to run\nTypeError: Cannot read property 'bold' of undefined\n\n  at Object.<anonymous> (react-native-github/node_modules/babel-code-frame/lib/index.js:69:31)\n\n```\nSeems like in some way we use chalk in tests and it becomes undefined for some reason with this change\n. still needed?\n. almost there, need to fix blog comparisons in a few places above\n. it was an insane idea to use  for all strings.\nBut let's keep it consistently insane in this file :)\nUntil you are ready to migrate all of the non template strings to normal quotes\n. nit: this import is not needed, right?\n. I agree with @mkonicek, even though it renders fine on website people still read docs in the code and it may be a little confusing.\n. I don't think this scales well.\nWe will end up with ecosystem with half events done properly and another half done deprecated way.\n. Do you have an idea how we could make events and tags work without patching any of them?\n. Do you have an idea how we could make events and tags work without patching any of them?\n. I am a bit lost why init casts to int, would not it be string tag all the time then?\n. I am a bit lost why init casts to int, would not it be string tag all the time then?\n. So does the tag approach still require all events to be changed?\n. So does the tag approach still require all events to be changed?\n. Why is this statement separate from the above?\nLooks like the same condition\n. just a nit: space is missing after comma\n. just a nit: space is missing after comma\n. typo here !error?\n. typo here !error?\n. --exact is not needed for Yarn react@${reactVersion} will do the trick\n. --exact is not needed for Yarn react@${reactVersion} will do the trick\n. I think we should run isYarnInstalled once and with execSync in the beginning of the script, it will be easier then\n. I think we should run isYarnInstalled once and with execSync in the beginning of the script, it will be easier then\n. same here about --exact.\n. same here about --exact.\n. Plan to implement this? :)\n. Plan to implement this? :)\n. Would it be better to merge 2 try-catch blocks for readability?\n. Would it be better to merge 2 try-catch blocks for readability?\n. Also considering all the trouble...\nWhat if we just ship yarn 0.16 with the CLI?\n. Also considering all the trouble...\nWhat if we just ship yarn 0.16 with the CLI?\n. good point, @ide .\nIn that case I agree, let's proceed as Martin started\n. good point, @ide .\nIn that case I agree, let's proceed as Martin started\n. http://stackoverflow.com/questions/4507312/how-to-redirect-stderr-to-null-in-cmd-exe\nThanks to @kentaromiura \nWhat do you think of doing it in one go maybe?\n. http://stackoverflow.com/questions/4507312/how-to-redirect-stderr-to-null-in-cmd-exe\nThanks to @kentaromiura \nWhat do you think of doing it in one go maybe?\n. This really asks for being extracted into a separate file.\nIt is rather complex and has hardcoded versions\n. This really asks for being extracted into a separate file.\nIt is rather complex and has hardcoded versions\n. yarnVersionIfAvailable -> getYarnVersionIfAvailable\n. yarnVersionIfAvailable -> getYarnVersionIfAvailable\n. is it flow?\n. TODO relevant?\n. I assume there is no verbose here?\nI think it is not needed, slows down npm even more\n. Martin, while you are at it, how about we provide a backdoor for CI systems and offline installs.\nRecently Legocastle was not able to block a bug because we can't reproduce install offline.\nAny ideas?\nFrom the top of my head we could provide an override CLI command of some sort here.\nAnd compose this command on CI to fake yarn install\n. Is there anymore yeoman left?\nCan it be removed from package.json?\n. My trouble with promise chains is that they look easy on paper:\nA.then(B).then(C)\nUnfortunately they end up really complicated when it comes to error handling and recovery from errorrs\nA.then(B, ()=> {onError.then(B)}.then(C, onError). My trouble with promise chains is that they look easy on paper:\nA.then(B).then(C)\nUnfortunately they end up really complicated when it comes to error handling and recovery from errorrs\nA.then(B, ()=> {onError.then(B)}.then(C, onError). I would not recommend freezing BUCKVERSION to fb engineers globally in rc/profile files.\nThat may lead to bad experience for mobile developers.. I would not recommend freezing BUCKVERSION to fb engineers globally in rc/profile files.\nThat may lead to bad experience for mobile developers.. would BUILD_TOOLS_VERSION be more readable?. would BUILD_TOOLS_VERSION be more readable?. The optimal alternative is to make versions compatible, it seems possible but requires availability from the Buck team.\nOther options:\n- Would it work if you add export BUCKVERSION=ff... in the shell scripts that run unit and instrumentation tests if which buck returns opt/facebook?. The optimal alternative is to make versions compatible, it seems possible but requires availability from the Buck team.\nOther options:\n- Would it work if you add export BUCKVERSION=ff... in the shell scripts that run unit and instrumentation tests if which buck returns opt/facebook?. It feels more reliable to use only github for 3rd party code downloads.\nBut I am not 100% sure if raw.githubusercontent.com rate limits are worse or better than svn.webkit.org. It feels more reliable to use only github for 3rd party code downloads.\nBut I am not 100% sure if raw.githubusercontent.com rate limits are worse or better than svn.webkit.org. PR is welcome :). PR is welcome :). ",
    "wkh237": "Hi, I also got the problem when upload/download blob data, so I made a RN native module  so that I can upload/download blob data then process it in JS context.\nIs there any progress on this issue?  or there's any way to do this without writing native code?\n. ",
    "lacker": "This issue is asking a question which seems to be answered, so I'm going to close it. I think it's okay if the best answers are libraries like react-native-fetch-blob, for what it's worth - we don't need to solve every single thing inside the core library.\n. Since this is more of a \"react native resource\" and less of a \"app that proves you can use react native in the real world\", I think we should move this out of the \"showcase\" but we can put it in the \"more resources\" tab once we build that.\n. Since this is more of a \"react native resource\" and less of a \"app that proves you can use react native in the real world\", I think we should move this out of the \"showcase\" but we can put it in the \"more resources\" tab once we build that.\n. OK re-adding\n. OK re-adding\n. OK re-adding\n. OK re-adding\n. Hmm, yeah this is a close one. It looked to me like you guys haven't updated the app in > 6 months, & also didn't raise money AFAICT, so I kind of suspected that you had moved on to a different project. Are you actually still working on Lrn?\n. Hmm, yeah this is a close one. It looked to me like you guys haven't updated the app in > 6 months, & also didn't raise money AFAICT, so I kind of suspected that you had moved on to a different project. Are you actually still working on Lrn?\n. Well I did put li.st back in the... list. For apps in here I would like to link to something that talks about the app. The exponent app itself, I can't quite find anything that talks about that app. Honestly it is somewhat confusing to me, is it more an app or is it more a development tool? For development tools, our plan during this lockdown week is to have a tab centered on third-party development tools, \"More Resources\", and to link to development tools there, and then exponent seems great. I think when you are looking for \"what cool apps use React Native\" you are more in a mode of \"let me figure out if this whole thing is right for me\" whereas if you are looking for development tools you aren't going to look in the showcase.\n. Well I did put li.st back in the... list. For apps in here I would like to link to something that talks about the app. The exponent app itself, I can't quite find anything that talks about that app. Honestly it is somewhat confusing to me, is it more an app or is it more a development tool? For development tools, our plan during this lockdown week is to have a tab centered on third-party development tools, \"More Resources\", and to link to development tools there, and then exponent seems great. I think when you are looking for \"what cool apps use React Native\" you are more in a mode of \"let me figure out if this whole thing is right for me\" whereas if you are looking for development tools you aren't going to look in the showcase.\n. Does this work without Component? It works in the React Native Web Player but dunno about in RN itself.\n. Does this work without Component? It works in the React Native Web Player but dunno about in RN itself.\n. can you make the registerComponent stuff use the same name as the name of the class?\n. can you make the registerComponent stuff use the same name as the name of the class?\n. same thing in the other 2 cases\n. same thing in the other 2 cases\n. Let's duck punch it\n. Let's duck punch it\n. TIL: \"duck punch\" is another name for \"monkey patch\"\n. TIL: \"duck punch\" is another name for \"monkey patch\"\n. +1\n. remove \"will at some point find the\"\n. also remove \"modern\"\n. let's call it \"URL\" rather than \"endpoint\" in these docs\n. can we have WebSocket somewhere within our own autogenerated docs? Then you could link to that. I'm suspicious that the mozilla.org link defines a 95%-the-same-but-5%-different thing.\n. Google. This page is one of the most visited on the site right now. People search for [react native flexbox] and it's the first link.\n. Google. This page is one of the most visited on the site right now. People search for [react native flexbox] and it's the first link.\n. Hmm but if you do position: absolute and then use right and bottom it won't be relative to the top left corner of that parent, will it?\nposition: relative and position: absolute are huge nightmares in CSS IMO so I don't think we can document all of that here. If it just works like CSS, but a few things are different, let's just document what's different and link out to something talking about CSS in general.\nThe one thing I'm aware of that's different is that in RN you can only use absolute and relative\n. Hmm but if you do position: absolute and then use right and bottom it won't be relative to the top left corner of that parent, will it?\nposition: relative and position: absolute are huge nightmares in CSS IMO so I don't think we can document all of that here. If it just works like CSS, but a few things are different, let's just document what's different and link out to something talking about CSS in general.\nThe one thing I'm aware of that's different is that in RN you can only use absolute and relative\n. Oh actually if this is based on the css-layout lib then:\n\"Everything is position: relative. This makes position: absolute target the direct parent and not some parent which is either relative or absolute. If you want to position an element relative to something else, you should move it in the DOM instead of relying of CSS. It also makes top, left, right, bottom do something when not specifying position: absolute.\"\nhttps://github.com/facebook/css-layout\nMaybe that makes some of the other stuff incorrectly documented. Like top/bottom/left/right.... hmm\n. Oh actually if this is based on the css-layout lib then:\n\"Everything is position: relative. This makes position: absolute target the direct parent and not some parent which is either relative or absolute. If you want to position an element relative to something else, you should move it in the DOM instead of relying of CSS. It also makes top, left, right, bottom do something when not specifying position: absolute.\"\nhttps://github.com/facebook/css-layout\nMaybe that makes some of the other stuff incorrectly documented. Like top/bottom/left/right.... hmm\n. I mean that docs/flexbox.html is popular. docs/basics-layout.html doesnt exist yet. Previously docs/flexbox.html was the autogen flexbox doc, now it's this part of \"the basics\", so the links should just send people here now.\n. I mean that docs/flexbox.html is popular. docs/basics-layout.html doesnt exist yet. Previously docs/flexbox.html was the autogen flexbox doc, now it's this part of \"the basics\", so the links should just send people here now.\n. Oops! I guess the id needs to match the permalink. We could really use docs infra with a saner permalink / redirect system. cc @bestander :D\n. Oops! I guess the id needs to match the permalink. We could really use docs infra with a saner permalink / redirect system. cc @bestander :D\n. I could have sworn these links all worked on my machine. Now they don't, though. Maybe something weird with caching when you keep your docs server running\n. I could have sworn these links all worked on my machine. Now they don't, though. Maybe something weird with caching when you keep your docs server running\n. (I want to keep the permanlink as docs/flexbox.html here to maintain old links, bc there were a lot here)\n. (I want to keep the permanlink as docs/flexbox.html here to maintain old links, bc there were a lot here)\n. I'll use network so that links to docs/network.html dont break\n. I'll use network so that links to docs/network.html dont break\n. I wish it auto-linked with we used NameOfSomeComponent in the text. I have them in some places but not others, and it seems like a big PITA to make sure they are everywhere. This specific line seems useful to link, since it's sort of a summary-referencey sort of line so I'll link that.\n. I wish it auto-linked with we used NameOfSomeComponent in the text. I have them in some places but not others, and it seems like a big PITA to make sure they are everywhere. This specific line seems useful to link, since it's sort of a summary-referencey sort of line so I'll link that.\n. this sentence is missing the\n. this sentence is missing the\n. \"onto screen\" ?\n. \"onto screen\" ?\n. let's\n. let's\n. I'm slightly confused, but do all the \"last sentences\" still segue people linearly through the tutorial?\n. I'm slightly confused, but do all the \"last sentences\" still segue people linearly through the tutorial?\n. maybe permalink docs/using-navigators.html for consistency?\n. maybe permalink docs/using-navigators.html for consistency?\n. Just a grammatical nitpick: could you rephrase this sentence as:\n\"Baidu is a search engine that has 600 million users.\"\n. Just a grammatical nitpick: could you rephrase this sentence as:\n\"Baidu is a search engine that has 600 million users.\"\n. Oops yeah good catch! - this is left over from the intermediate phase where I ran both doc-generators and logged all the differences. Removed it\n. Oops yeah good catch! - this is left over from the intermediate phase where I ran both doc-generators and logged all the differences. Removed it\n. dimiss -> dismiss\n. dimiss -> dismiss\n. Is this only in Android for now? Might be good to mention that in the text\n. Is this only in Android for now? Might be good to mention that in the text\n. Is this a react component? If not, how about callign this section \"The Keyboard API\"\n. Is this a react component? If not, how about callign this section \"The Keyboard API\"\n. heigh -> height\n. I think this is already intuitive. If the size is optional then it doesn't scale it.\n. (About the \"contain\" part.) Do the docs explain anywhere what the options are? It doesn't look like it, to me. Could you just add a brief explanation of what the valid values are and what they do? Otherwise it doesn't make much sense to say the default is \"contain\".\n. eslint-bot is actually talking about this line, AFAICT.\n. Could you explain why this is necessary inline? When I follow the link, it requires a lot of reading before it's obvious how this change in how fetch is required deals with that issue.\n. I think this is the problem - you don't need a stringWithFormat inside RCTLogError, because RCTLogError already takes a first argument with @'s in it and does this interpolation. Could you fix this?\n. I think this is the problem - you don't need a stringWithFormat inside RCTLogError, because RCTLogError already takes a first argument with @'s in it and does this interpolation. Could you fix this?\n. What happens if they skip this step? Will it just break with npm 2?\n. In general there are a lot of reasons that people can't update npm, so I'm concerned about adding npm 3+ as a requirement for React Native. Could this be backward-compatible instead of a breaking change somehow?\n. Ah, just copy it exactly from another file in the same directory. So in this case it should be:\n/\n- The examples provided by Facebook are for non-commercial testing and\n- evaluation purposes only.\n  \n- Facebook reserves all rights not expressly granted.\n  \n- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL\n- FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n- AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  */\n. REQUST is misspelled\n. space after \"if\". space after \"if\". space after \"if\". space after \"if\". One example is, let's say you have some data that normally you'd cache for a few minutes because it's okay if it's a bit out of date. Think \"comments on a blog post\". But sometimes you know locally the data has updated. Like if you just commented on this blog post. So you want to force a cache reload. I think this sort of thing is fairly common as a param for network caches, we had this in Parse for example.. I'd really like to just include a .buckversion in the repo but since FB Buck isn't compatible with open source Buck the \"right way\" doesn't work here. Is there a better way? I would like to provide a specific Buck version that works because I did run into incomprehensible failures when using some Buck versions.. I'd really like to just include a .buckversion in the repo but since FB Buck isn't compatible with open source Buck the \"right way\" doesn't work here. Is there a better way? I would like to provide a specific Buck version that works because I did run into incomprehensible failures when using some Buck versions.. changed. changed. My concern is then if people know what they're doing and they do not want BUCKVERSION, they want to use their local buck setup, now all the scripts don't work.\nI'm gonna bug the Buck folks to improve this but I don't expect an immediate fix.\nHow about this for now - I will adjust the instructions to say either you prefix your testing-running with setting the BUCKVERSION, or you can export it globally if you are willing to take that risk.. My concern is then if people know what they're doing and they do not want BUCKVERSION, they want to use their local buck setup, now all the scripts don't work.\nI'm gonna bug the Buck folks to improve this but I don't expect an immediate fix.\nHow about this for now - I will adjust the instructions to say either you prefix your testing-running with setting the BUCKVERSION, or you can export it globally if you are willing to take that risk.. OK I updated, how do you like this text.. OK I updated, how do you like this text.. Can you add a test to ensure that this continues to work after you get your fix in?. ",
    "austinksmith": "There seems to be a trend of closing issues that are important for broader implications than simply fetching images and displaying them, data blob creation is important for many use cases and is used widely in many other JvaScript execution environments, please see my latest issue ticket @lacker  https://github.com/facebook/react-native/issues/16034#issuecomment-333385849. ",
    "mikelambert": "For what it's worth @paramaggarwal , it might be possible to do this onLayout without a flash of relayout? Mainly, if object A contains object B, but object A's onLayout sets object B's size (before B gets laid out?), then there should be no flash, right? (I'm very new to React Native, so could totally be misunderstanding the rendering flow.) In your case, you were having an object set it's own size in response to a layout, which I can understand why that'd cause a flash. Here's my slight modification to yours that demonstrates what I think(!) is working for me: https://gist.github.com/mikelambert/12e4496ae813f2b365567b460548360a\nRegardless, very much appreciate you listing demo code here, as well as attempting to push a better approach back upstream in your pull request.\n. I believe aspectRatio was only added in 0.40: https://github.com/facebook/react-native/commit/5850165795c54b8d5de7bef9f69f6fe6b1b4763d\n(though thanks for the heads-up!). Added the @platform android, thanks for the reminder. But I'm confused what you mean by selectableAndroid?\n. The existing error cases above return null, so I was just following that example. I think that's all getValidProvider can do.\nIt's called from two places.\n- When the getCurrentPosition call receives null, it will call error.invoke(\"No available location provider.\");\n- When the startObserving call receives null, it will emit geolocationError and call watchPosition()'s error function.\n. Not sure exactly what you're asking, but maybe this answers it?\nMy app was released prior to RN, and I used COARSE but not FINE permissions. I am not ready to block my app upgrades on \"new FINE permission\" that RN sometimes triggers accidentally, so wanted to avoid that.\nThis check is to say \"If they are trying to use the GPS, but they don't have a FINE permission enabled, then pretend like we don't have a GPS so we don't trigger the permissions errors that crash the app\" (These are not returned through onError, but propagate as a native Java exception).. To reply to your comment directly (as opposed to the main thread, where it appears to have been lost):\nDefault RN apps request FINE permissions, and so RN apps declaring FINE do not have any issues. My app only declares COARSE, and so wanted to fix RN for my use case.\nI am calling navigator.geolocation.getCurrentPosition(..., {enableHighAccuracy: false}) to avoid using the GPS and just rely on the NETWORK provider.\nTo your question: yes, by and large the Geolocation library works just fine. Unfortunately, if there is a problem with the NETWORK provider not being enabled, then the RN code attempts to fall back to using the GPS provider.\nAnd if this GPS provider is enabled, my app will crash with an unhandled Java exception, because it only declares COARSE permission. I am merely checking for FINE permission before using the GPS provider, to avoid this crash.\n. Fixed and repushed.. ",
    "originerd": "I've published to npm react-native-fit-image. It enables you to draw responsive image component.\n. ",
    "JeroenNelen": "@originerd as I understand, this will not automatically use the network image's native dimensions?\nFor example if I load an image that is smaller than the width of the screen, for example: 120x100, it will still stretch the image, I was hoping it would than just show it as 120x100, without having to provide the dimensions as another image might be 250x80 and should be rendered as 250x80. \nOr am I missing something?\nKind regards, . I'm currently using the static getSize function on the image to determine the width and the height of the image. In the callback I set the style in the state so it get's updated, this causes a flash of unstyled content but I will probably try to show a spinner until the callback is triggered.. ",
    "shafy": "@ide the aspectRatio style property is now available in 0.39 according to the docs, but somehow I still get that it's not a valid style property when I try to run it (on View or Image). Did you have more luck with it?. Seems like it. But weird that it is mentioned here https://github.com/facebook/react-native/releases/tag/v0.39.0 and also included in the Java and Objective C code with 0.39. . ",
    "HaskellFun": "I use this library to get the job done react-native-scalable-image.. ",
    "stuartlynn": "It seems to be working now. Will close the issue. Thanks for checking in \n. It seems to be working now. Will close the issue. Thanks for checking in \n. ",
    "jmound": "I came across this (slightly) related StackOverflow question and answer, and decided to reset the simulator on a whim. It shouldn't have, but it worked.\n. I came across this (slightly) related StackOverflow question and answer, and decided to reset the simulator on a whim. It shouldn't have, but it worked.\n. ",
    "deelite1": "Crystalmurray 200@gmail.com\nOn Apr 17, 2015 9:56 AM, \"Johannes Lumpe\" notifications@github.com wrote:\n\n@tadeuzagallo https://github.com/tadeuzagallo yeah it's fixed now in 0.4\n:)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/864#issuecomment-94026722\n.\n. Crystalmurray 200@gmail.com\nOn Apr 17, 2015 9:56 AM, \"Johannes Lumpe\" notifications@github.com wrote:\n@tadeuzagallo https://github.com/tadeuzagallo yeah it's fixed now in 0.4\n:)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/864#issuecomment-94026722\n.\n. \n",
    "dvbportal": "For me it is unclear why for..in should be considered broken. (The link 'https://fburl.com/31944000' is gone)\nI also refactored some of those loops into .forEach(function() {..., but there are some 'this'-related side effects.\n. Thanks Ben, for clearing that up.  I see now, that it is a good idea to give that warning.\n. ",
    "hermanschaaf": "Not sure why the build failed on this - I somehow doubt it has something to do with the change :smile_cat: \n. ",
    "oblador": "Had the same problem, solved it by making the path relative. Just remove $(SRCROOT)/ from the \"Info.plist File\" setting under Build Settings and it works just fine.\n. I've done a very simple implementation available as react-native-keychain to fit my most urgent needs. Will add more API support soon, issues/PRs are welcome.\n. @nicklockwood: Thanks, missed that one. This bug still stands though, although maybe not as important :-)\n. @brentvatne: This PR is the exact opposite of 1273 which enables you to make it opaque :-) I'll do the proposed changes by @ide, but right now I'm just to far behind work wise. \n. @brentvatne: I don't see how that patch would fix this problem (if I'm blind/stupid please forgive :-). The problem is that there's a moment between when the app has launched and React is still working. Ideally the LaunchScreen would show until React is finished and fully rendered as it does in a \"fully native\" app. \n. @leeight The problem is that custom components can proxy the setNativeProps call to the wrapped component which will throw/warn even though it's valid use. Isn't it better to do this check in the setNativeProps function instead?\n. Gotcha, fixed!\n. I was really just moving this this section from the other function, but now fixed. What are the benefits to using invariant here if we already have done the check in the if statement?\n. Removing this broke importing files with multiple device resolution variations. Metro bundler will resolve require('./file.png') to ./file@2x.png if you're on a 2x screen. . ",
    "peterprokop": "@christopherdro haven't tried it.\nUsed something like \n/usr/libexec/PlistBuddy -c \"Set CFBundleVersion $TRAVIS_BUILD_NUMBER\" ./iOS/Info.plist\ninstead.\n. ",
    "kiddkai": "This works, thanks..\n. ",
    "MartinMoizard": "@tadeuzagallo could you tell me which branch contains your fix? I'm also having this bug. Thank you.\n. @tadeuzagallo thanks for the info. I am seing something similar but not sure yet if it's related. I will try to write a small code sample with the bug I have.\n. It actually was a code error on my side. I think this issue can be closed.\n. Cmd-R is working, but not Cmd-D. What do you mean by pulling the web socket debugger subspec? Thank you.\n. Thanks :) I didn't notice that there were several subspecs\n. :+1: thanks !\n. ",
    "enaros": "nice @hharnisc !\n. ",
    "jbuffin": "any idea when this might be merged in?\n. ",
    "brysgo": "Was the .xcodeproj left out of the final patch here? I've been trying to include this in my project and I'm fairly certain one is supposed to be there.\n. thanks :+1: \n. ",
    "tkers": "The same thing seems to happen (or rather, not happen) when using navigator.replace(new_route).\n. ",
    "michalvalasek": "Same problem here (with navigator.replace).\n. ",
    "lzyy": "that's it! thanks for ur help :)\nPS: which module is doing the work?\nPPS: ReactClass / ReactChildren doesn't seems in the form of @providesModule X\n. @ide the question is I didn't find @proviedModels ReactClass under react-native project, so wondering where does it come from. so after dig into the system node_modules dir, finally found the definition. so find my answer.\nthe second question is how @provideModeuls module declared in comments make it a real module, it seems is the effort of JSTransform, it has --use-provides-module parameter. but when is JSTransform involved?\n. @tadeuzagallo @brentvatne Thanks, didn't notice the Provider, problem solved.\n. ",
    "deepak2510": "+1\n. ",
    "onlymejosh": "Having the same issues on 4.4.4\n<View style={styles.feature}>\n          <View style={styles.featureHeader}>\n            <Text style={styles.featureTitle}>{'Accounts'}</Text>\n          </View>\n          <View style={styles.ticket}>\n            <View style={styles.leftContainer}>\n              <Image\n                source={{uri: 'http://resizing.flixster.com/DeLpPTAwX3O2LszOpeaMHjbzuAw=/53x77/dkpu1ddg7pbsk.cloudfront.net/movie/11/16/47/11164719_ori.jpg'}}\n                style={styles.avatar}\n              />\n              <View style={styles.ticketSizeContainer}>\n                <Text style={styles.ticketSize}>{'S'}</Text>\n              </View>\n            </View>\n            <View style={styles.mainContent}>\n              <Text style={styles.ticketTitle}>\n                {'When 403 from find we should direct to accounts page'}\n              </Text>\n            </View>\n            <View style={styles.rightContainer}>\n              <Text style={styles.ticketNumber}>\n                {'#123'}\n              </Text>\n            </View>\n          </View>\n  </View>\nfeature: {\n    marginLeft:10,\n    marginRight:10,\n  },\n  featureHeader: {\n    // Border radius is not being set\n    backgroundColor:'#4A4C59',\n    borderRadius:6,\n  },\n  featureTitle: {\n    color:'#fff',\n    fontFamily:'Proxima Nova',\n    fontSize: 14,\n    fontWeight: 'bold',\n    padding:10,\n  },\n  ticket: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    backgroundColor: '#FFF',\n    padding:5,\n    paddingBottom:0,\n    marginBottom:1,\n  }\n....\n. I've been having the same issue. Took me a while to work out what was causing my brand new laptop to run like the old one!\n. I'm having the same issues on a brand new Retina MBP. It may be related to #1325 \n. ",
    "michalraska": "I solved problem by set flex: 1 to wrapper view of text.\njavascript\n      <View style={{flexDirection: 'row'}}>\n        <Image\n          source={{\n            uri: 'http://icons.iconarchive.com/icons/designbolts/free-male-avatars/128/Male-Avatar-icon.png',\n          }}\n          style={{width: 32, height:32}}\n        />\n        <View style={{flex: 1}}>\n          <Text>\n            {message}\n          </Text>\n        </View>\n      </View>\n. Custom component (in my case CommonThreadRow) has to set native props:\n``` javascript\n  setNativeProps: function (props: Object) {\n    this.refs[COMMON_THREAD_ROW].setNativeProps(props);\n  },\nrender: function () {\n    return (\n      \n        ...\n      \n    );\n  },\n```\nBut it works only with TouchableHighlight. With TouchableOpacity it does not throw error but method _goToThreadDetail is not called after touch on wrapped view (CommonThreadRow component).\n. Thank you for very detailed answer.\nAfterwards I moved whole logic to the component where is Touchable* wrapping directly View.\nI'm looking for hear more and dive more to react native :)\n. Resolved by killall node\n. ",
    "abhoopathy": "I believe what you're trying to do isn't achievable with this layout system right now. I ran into the same problem. I solved this by creating a native bridge to a function which does something like this:\nlet label = UILabel()\nlabel.font = UIFont(name: \"Avenir\", size: 16.0)\nlabel.text = THETEXT\nreturn label.intrinsicContentSize().width\n\n. ",
    "Fanghao": "I think it's their scrollView/ListView problem. Loads all the content and triggers the memory issue.\nIt is basically equivalent to https://github.com/facebook/react-native/issues/499\n. I am under impression it is photo mode plus video mode? . ",
    "mymickey": "+1\n. ",
    "gustavoguichard": "Check this out: @shaohua \n. The 'rgba(0, 0, 0, 0.15)' when on white background generated the exact same iOS color... I believe a transparency would be better than a solid color, because is more like a highlight\n. It makes sense now! Thanks for the explanation @sahrens !\n. ",
    "shaohua": "+1\n. ",
    "bridgetdeasy": "Where do you call the scrollTo method?\n. ",
    "Benmidi": "Add this attribute to your  tag: startInLoadingState={true}\n. ",
    "henter": "@brentvatne why not just use DeviceEventEmitter ?\n. get it. thanks :-)\n\nHenter\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Friday, May 8, 2015 at 11:26, Brent Vatne wrote:\n\n@henter (https://github.com/henter) - good question, this is expected to be there in RCTEventDispatcher already, see here (https://github.com/brentvatne/react-native/blob/master/React/Base/RCTEventDispatcher.m#L32-L36) - but the actual module in JS is not there, so this just adds that module.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/facebook/react-native/pull/918#issuecomment-100088489).\n. here is the solution https://github.com/facebook/react-native/pull/1226\n. @ide yeah, that's a great idea. \ncode updated. :-)\n. @ide thanks. code updated. :-)\n. updated.\n. code updated. @ide @vjeux \n. \n",
    "bparadie": "@brentvatne I think, @henter kind of has a point... \nYour RCTNativeAppEventEmitter.js reads:\nvar RCTNativeAppEventEmitter = new EventEmitter();\nBut the documentation suggests registering at DeviceEventEmitter:\nvar subscription = DeviceEventEmitter.addListener(...)\nNow, I see that there is a separate RCTDeviceEventEmitter.js with this code:\nvar RCTDeviceEventEmitter = new EventEmitter();\nI wonder whether those two pieces add up. Is it possible that the documentation suggests registering at RCTDeviceEventEmitter while your fix applies to RCTNativeAppEventEmitter, which is a different emitter? At least that is my theory, because the example is still not working for me.\nIntuitively I was expecting a fix along the lines of:\nvar RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nAm I completely wrong?\n. @brentvatne What really fixed my problem was https://github.com/facebook/react-native/pull/1275, which simply suggests using sendDeviceEventWithName instead of sendAppEventWithName. Now I am confused what this PR tries to fix. Is the purpose of RCTNativeAppEventEmitter providing support  sendAppEventWithName? But why would I use sendAppEventWithName if I have sendDeviceEventWithName?\n. @aroth You might want to remove npm-debug.log from your https://github.com/aroth/react-native/commit/453064b743f7417b6c969ab135442a08eccacb04 commit.\n. @brentvatne @VonD CameraRoll in 0.6.0 is still dog slow for me.\nAny thoughts on this note from the ALAssetRepresentation documentation?\n\nIMPORTANT\nThe Assets Library framework is deprecated as of iOS 9.0. Instead, use the Photos framework instead, which in iOS 8.0 and later provides more features and better performance for working with a user\u2019s photo library. For more information, see Photos Framework Reference.\nIn the Photos framework, the PHAsset and PHImageManager classes provide functionality for fetching an asset\u2019s image or video data.\n. I just ran into the same problem, but the error went away after closing the packager terminal window, cleaning the xcode project, and rebuilding. I didn't have to update flow nor watchman. \n. @dvcrn Hey, I think I know a workaround for the Travis CI failures. Those have nothing to do with your code changes. You have to add this line to the dependencies in package.json: \n\n\"babel-core\": \"5.5.6\",\nFor more details, see https://github.com/facebook/react-native/pull/1546#issuecomment-113994914\n. @Iragne Your fix works beautifully for me!\n. @Iragne no worries. What puzzles me is that your code actually worked even with that bug...\n. @Iragne I was curious whether you'll still get OOM crashes with thumbs and checked my camera roll with more than 200 videos. It ran fine without any problems. I believe for the thumbnail case you do not have to use a serial queue. In other words you could use this version (tested on my iPhone 6):\n``` objective-c\n        if( !thumb ) {\n          // ALAssetLibrary API is async and will be multi-threaded. Loading a few full\n          // resolution images at once will spike the memory up to store the image data,\n          // and might trigger memory warnings and/or OOM crashes.\n          // To improve this, process the loaded asset in a serial queue.\n          dispatch_async(RCTImageLoaderQueue(), ^{\n            // Also make sure the image is released immediately after it's used so it\n            // doesn't spike the memory up during the process.\n        @autoreleasepool {\n          UIImage *image = nil;\n          ALAssetRepresentation *representation = [asset defaultRepresentation];\n          ALAssetOrientation orientation = [representation orientation];\n          image = [UIImage imageWithCGImage:[representation fullResolutionImage] scale:1.0f orientation:(UIImageOrientation)orientation];\n          RCTDispatchCallbackOnMainQueue(callback, nil, image);\n        }\n      });\n    } else {\n      @autoreleasepool {\n        UIImage *image = nil;\n        ALAssetRepresentation *representation = [asset defaultRepresentation];\n        ALAssetOrientation orientation = [representation orientation];\n        image = [UIImage imageWithCGImage:[asset thumbnail] scale:1.0f orientation:(UIImageOrientation)orientation];\n        RCTDispatchCallbackOnMainQueue(callback, nil, image);\n      }\n    }\n\n```\n@brentvatne Would you prefer to have that optimization as a separate PR?\n. @Iragne  no worries, it was just an experiment. The performance is pretty good even with the serial queue. @brentvatne suggested keeping the optimization separate. May I ask why you think it's not a good idea to use async thumb creation?\n. @brentvatne Right now I don't have a lot of time. But I can prepare a PR. First I wanted to know whether there is interest in this change. It looks like there is, correct?\n. @jsierles @ide @brentvatne Before I go ahead and implement something that nobody wants, I'd like to ask you guys whether you find this direction agreeable: \nHow about reading the information for port (8081) and origin ('http://localhost') from a dictionary in info.plist?\nRoughly, I was thinking of adding a new dictionary to info.plist called RCTWebSocketExecutor with  port and origin items. For example this would be UIExplorer's info.plist:\n\nThen in RCTWebSocketExecutor:init I would check whether there is a RCTWebSocketExecutor dictionary and use those values for initWithURL. If there is no  RCTWebSocketExecutor dictionary I'd use 8081 and 'http://localhost'.\nAlso, let me know if you think there are better names for RCTWebSocketExecutor, port, and origin.\nThanks!\nOh, I almost forgot: Then packager probably needs to be adjusted. I could perhaps simply extract port and originfrom the info.plist.\n. @jsierles Apologies if this is a stupid question: What are 'non-websocket' IPs/ports? \n. @jsierles @ide @brentvatne Just wanted to dog-pile one other idea to this PR. We could change the name from RCTWebSocketExecutor to, say, AppImage and add a property bundle / name in addition to origin and port. If bundle is specified the default AppDelegate code would use the bundle instead of the web socket etc.\nWhat do you guys think?\n. @brentvatne np, done: https://github.com/facebook/react-native/pull/1546 !\n. My proposal would work for us, see https://github.com/bparadie/react-native/tree/v0.5.0-rc-nopackager\n\nI duplicated the React target and changed the name to React-NoPackager. I had to patch the project file afterwards and change all React copy.a strings to React-NoPackager.a, because of XCode quirks.\nIn our main project file I then selected libReact-NoPackager.a for the core dev target:\n\nIgnore the red color of libReact-NoPackager.a. That's just one of many other XCode quirks.\nBy using libReact-NoPackager.a our core dev target does not launch the packager any longer.\nOur UI dev target still links against libReact.a, which references the React target, which does launch the packager.\n. @ide Thanks for the tip. I am not super familiar with podspecs. We have to use npm. Right now I pull in the React projects from node_modules. That's also what I see in every example.\n. @ide I'll try that. I am curious: Do you agree, that it would be a good idea to have a second target that does not automatically launch the packager? Or do you suggest using podspecs for use cases like mine?\n. I agree that having a launch script baked into React.xcodeproj is not such a great idea. On the other hand the packager is pretty important to get react-native working properly. Perhaps a good compromise  would be moving that run script into its own separate project, i.e. Packager.xcodeproj. \nThere are probably many ways to skin this cat. Bottom line:  I would love to see that launch script removed from  React.xcodeproj! \n. @frantic @ide Thanks for the feedback. This is one of my weekend projects, please expect some delays etc. \nJust to confirm: You suggest switching the default so Info.plist would be supported by the React target and only the ReactWithPackager would launch the packager, correct?\nNow, you guys realize that that will break modified old projects. The react-native Get Started section says:\nQuick start \n- npm install -g react-native-cli\n- react-native init AwesomeProject\nAll those old AwesomeProjects will be broken if the React target stops launching the packager.  Are you ok with that? Can you just add a 'Breaking Changes' section to the next release and we all move on with our lives?\n. Ok, I've made the following changes:\n- replaced 'origin' with 'protocol' + 'hostname' as suggested by @ide \n- moved the debug URL creation code to its own utility function as suggested by @frantic \n- moved launch mechanics out to launchPackager.command as suggested by @frantic \n- removed launch script from React project and added launch scripts to examples as suggested by @ide \nBut:\n- I had to revert one line from facebook@1acca01, see https://github.com/facebook/react-native/issues/1654\n- this change will break old projects.\nThese are the custom port setting for each example:\n| Port | Example |\n| --- | --- |\n| 8081 | UIExplorer |\n| 8087 | SampleApp |\n| 8088 | 2048 |\n| 8089 | Movies |\n| 8090 | TicTacToe |\nBreaking changes: required/optional changes.\nIf you have an old project and update your react-native module to this version then your old project will not launch the packager, because I removed the launch script from the React project.\nHere are the changes that are required/optional...\nREQUIRED: Add a launch script\nAdd a run script to your project with this line \nbash\n$SRCROOT/../../packager/launchPackager.command ${INFOPLIST_FILE}\nOPTIONAL: Use RCTWebSocketExecutorURL\nUse RCTWebSocketExecutorURL from RCTUtils.h for creating your jsCodeLocation in AppDelegate.m, i.e.\nobjective-c\njsCodeLocation = RCTWebSocketExecutorURL(@\"/Examples/SampleApp/index.ios.bundle\");\nOPTIONAL: Add a RCTWebSocketExecutor dictionary\nAdd a RCTWebSocketExecutor dictionary for custom settings to your Info.plist, i.e.\n\nPlease let me know if this looks good to you. \nIf so I'll squash/rebase my PR.\nThx!\n. Hmm, Travis CI build failed. It looks like I need to add the launch scripts to every test targets. Give me a minute!\n. One remaining problem is that package.json runs packager.sh for the scripts/start and bin/react-native-start those will always launch the packager with the default settings, that is, port=8081.\n. @frantic I am a little bit puzzled why Travis CI is failing.\n2015-06-21 22:27:29.662 [info][tid:com.facebook.React.JavaScript] \"Running application \"AppEventsTest\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\"\n2015-06-21 22:27:29.672 [error][tid:com.facebook.React.JavaScript] \"Error: Invariant Violation: Application AppEventsTest has not been registered. This is either due to a require() error during initialization or failure to call AppRegistry.registerComponent.\n stack: \n  runApplication          IntegrationTestsA\u2026:36107\n  jsCall                  IntegrationTestsA\u2026:7411\n  _callFunction           IntegrationTestsA\u2026:7679\n  <unknown>               IntegrationTestsA\u2026:7708\n  <unknown>               IntegrationTestsA\u2026:7702\n  perform                 IntegrationTestsA\u2026:6198\n  batchedUpdates          IntegrationTestsA\u2026:14132\n  batchedUpdates          IntegrationTestsA\u2026:4741\n  <unknown>               IntegrationTestsA\u2026:7701\n  applyWithErrorReporter  IntegrationTestsA\u2026:7446\n  guardReturn             IntegrationTestsA\u2026:7468\n  processBatch            IntegrationTestsA\u2026:7700\n URL: http://localhost:8081/Examples/UIExplorer/UIExplorerIntegrationTests/js/IntegrationTestsApp.includeRequire.runModule.bundle?dev=true\n line: 1762\n message: Invariant Violation: Application AppEventsTest has not been registered. This is either due to a require() error during initialization or failure to call AppRegistry.registerComponent.\"\nI even removed my workaround for https://github.com/facebook/react-native/issues/1654 . But that didn't help either. Would you know what's going on here? Thanks!\n. I can now at least reproduce the problem locally w/t  rm -rf node_modules && npm install && ./scripts/objc-test.sh... I had to nuke the node_modules  folder first, though. But I am getting the same error with the master branch. Something is not right...\n. Ok, I found the problem (don't ask how I found it): react-native's package.json requires version 5.4.3 for the babel node nodule. Unfortunately babel's package.json sloppily accepts ^5.4.3 for babel-core. Now, if you start with a fresh clone (as Travis CI does) you'll end up with babel 5.4.3 using babel-core 5.6.2 (which is the latest babel-core version). Here is the problem: babel-core 5.6.2 will break ./scripts/objc-test.sh tests. The version that works is babel-core 5.5.6.\nFor that reason this PR contains this workaround. In package.json I explicitly request babel-core 5.5.6:\njavascript\n    \"babel\": \"5.4.3\",\n    \"babel-core\": \"5.5.6\",\nWould somebody please figure out why babel-core 5.6.2 breaks the build loop?\n. Almost there:\n\nThe last remaining build loop error is: flow server is busy:\nFlow server launched for /private/tmp/react-native-x3yOQW0y/EndToEndTest\nSpawned flow server (child pid=2838)\nLogs will go to /var/folders/vy/rcv48w3j4w79llzf_x6qnvw40000gn/T/flow/zSprivatezStmpzSreact-native-x3yOQW0yzSEndToEndTest.log\nThe flow server will be ready in a moment.\nError: flow server is busy\nError: flow server is busy\nError: flow server is busy\nNo errors!\n[Info] Loading settings for scheme 'EndToEndTest' ...\nThat's not really my problem, is it?\n. @frantic Ah, thanks! I'll look into it. BTW, I think none of the PRs pass the build loop right now because of  babel-core 5.6.2. Is somebody looking at that?\n. > What makes you think babel is the reason? \nMy local version was not showing the problem. Then I found that the difference was the build loop using babel-core 5.6.2 while my local version that worked used babel-core 5.5.6. When I added babel-core 5.5.6  to package.json the ./scripts/objc-test.sh passed.\nThe problem could be something completely different. But that one line makes the problem go away.\n. Finally, Travis CI passed! Please let me know if you want me to make more changes. Otherwise I'd be ready to rebase/squash. Cheers.\n. @VonD @brentvatne I believe https://github.com/facebook/react-native/pull/1406 addresses this issue. Am I right?\n. @brentvatne No, unfortunately #1406 only addresses the resolution part and allows requesting thumbnails. If it was up to me I would split this issue up into two separate issues and leave the request for having the orientation configurable open. Cheers.\n. @brentvatne I actually care less for the orientation case. My thumbnails are squares. But I can see @VonD's point. The much bigger problem was performance. Pulling in full res images killed the performance if you wanted to display a grid with tiles showing what's on your camera roll. \nWith @Iragne's PR things got so fast that I am tempted to take out the code that synchronously queues up the images and let them flow in - fire hose style. I think the iPhone can handle async processing of thumbnails.\nI am referring to this comment/code in ImageLoader.m:\nobjective-c\n        // ALAssetLibrary API is async and will be multi-threaded. Loading a few full\n        // resolution images at once will spike the memory up to store the image data,\n        // and might trigger memory warnings and/or OOM crashes.\n        // To improve this, process the loaded asset in a serial queue.\nI wonder whether that serial queue is really necessary if thumbs is YES ...\n. Yep, the thumbnail case does not need a serial queue - my iPhone 6 could digest over 200 videos from the cameraroll without any problems. I've provided the code snippet at https://github.com/facebook/react-native/pull/1406#issuecomment-113709903 .\n. @vjeux I am still seeing this problem after syncing to the latest commit (https://github.com/facebook/react-native/commit/e47cfb6e3365b381253934a30c543276430ca350).\n. @vjeux In the debugger I am seeing that createReactNativeComponentClass for RCTView returns undefined:\njavascript\nvar RCTView = createReactNativeComponentClass({\n  validAttributes: ReactNativeViewAttributes.RCTView,\n  uiViewClassName: 'RCTView',\n});\nOn the stack I see var View = require('View'); (line 18) in ActivityIndicatorIOS.ios.js.\nThen drilling further into createReactNativeComponentClass... This line seems to be the trouble maker:\nreturn ((Constructor: any): ReactClass);\nThat doesn't look like JS to me, not even ES6. Is this flow syntax? Shouldn't that be transformed?\nIf I execute that line in the debugger I'll get:\n\nI am taking a wild guess here: Is it possible that you guys at FB use a more advanced flow version than the rest of the world? I believe expressions like (Constructor: any) should get transformed by your flow tool to proper JS - assuming you have the right flow version. Again, this is just a wild guess. \nJust for clarity, my environment is: OSX 10.10.2, running XCode 6.3.1 and the simulator for iPhone 6 (ios 8.1).\nflow version is:\n/usr/local/bin/flow --version\nFlow, a static type checker for JavaScript, version 0.12.0\nLatest flow version is 0.12.0. \n. @vjeux Ah, here is the puppy that messed everything up...\nIt's a recent commit for [Flow] Fix or suppress react-native github errors for Flow v0.12.0, \nhttps://github.com/facebook/react-native/commit/1acca01aa44d5d2533dd3037428a9c1fdc5a7c91.\n\n@gabelevi @sahrens Do I need a special flow version in order to use your 'fix'? I am using 0.12.0.\n. @vjeux @gabelevi @sahrens @brentvatne Everything works great again after reverting back to return Constructor. I don't even see any flow errors with my 0.12.0 version.\nNow, this journey brings up a few interesting points:\n- react-native has a dependency to flow, which is supposed to be installed as a global tool.\n- there is no version dependency check in place that would enforce flow updates (i.e. this react-native version requires that flow version)\n- all react-native windows need to be closed after upgrading flow. But that's easy to forget and then you run into errors that don't look like flow problems at all.\n- does flow allow global .flowconfig files? If so you have to anticipate that global .flowconfig settings might interfere with local .flowconfig settings.\nThis side note is probably more interesting to @avikchaudhuri, which I had the honor to work with when he was still at Adobe: I find flow's value proposition quite thin in light of having the option of just using Typescript. I've been using Typescript for over a year now and I don't really see a need for flow. I gave flow a try in one of my projects and it was just too slow and didn't find anything that Typescript wouldn't have flagged. I finally had enough and disabled flow altogether by adding these lines to .flowconfig:\n```\nbparadie flow takes up two minutes.\n./.js\n```\nI am sure flow has improved a lot in the last months and is much faster and better, and I could probably narrow the search scope to a few folders I care about. But why going through the trouble of re-enabling flow? To make a fair offer, I could be persuaded to try flow again if I were presented, say, 3 examples where flow would find something suspicious, or questionable, that Typescript would not detect. So far it has been rather the other way around for me (Typescript found more than flow). I am not interested in flow enhancements that are essentially syntactic sugar improvements, along the lines of \"you don't have to specify the type here, we'll figure that out\". I don't mind spelling out the types. Besides: Typescript is pretty good at inferring types, too.\n. @mattapperson The proposal put forward in #1546 is about being able to configure debug port and ip address via Info.plist and I think ENV support is a valuable feature that one could build on top of that Info.plist approach. Roughly as follows: One could create different Info.plist files for each distinct environment/target that you would then activate via ENV. By doing so the XCode folks would be able to drive configurations through targets as well as CLI folks like you.\nWhat do you think?\n. Hmm, using a setup with different Info.plist files would probably not work well with overriding configs via the CLI. The CLI could only override configs if there were a custom Info.plist. \nWould that be acceptable?\n. Hmm, shouldn't this be assetThumbnail? \nI see this below:\nobjective-c\nRCT_CUSTOM_VIEW_PROPERTY(assetThumbnail, NSString, RCTStaticImage)\n. @frantic Yes, that's the idea. options.origin can be an ip address. This was suggested by @jsierles in https://github.com/facebook/react-native/issues/1429#issuecomment-106905639.\n. @ide I wanted to model it after HTML's  location.origin. But you are right, origin includes the port number. Not sure whether hostname would be a better choice, because it doesn't include the protocol part. Is there a better name than origin? I went through the HTML location properties. But nothing seems to fit...\n. @ide What I am hearing you say is that we should model everything after HTML location and replace origin with hostname and protocol. Is that what you are proposing? If so: I like it!\n. That unused variable warning was getting on my nerves...\n. I am assuming this is the right thing to do. If this template is being used to create new iOS projects then those projects need the same script.\n. @nicklockwood Oh yeah, that's much better!\n. ",
    "ele828": "Thank you very much @mjw56 \n. @mjw56  I met another problem, the Push method works well, but when I try to use this.props.navigator.replace(), it goes wrong with Navigator.SceneConfigs.FloatFromBottom, and all the other animation doesn't work. \nCause I want to prevent user to goback to previous Scene. So I have to use replace method. thanks a lot :)\n. @brentvatne  Yeah, of course.\n```\n\n\nSearch\n\n\nsearchButton: {\n    width: 120,\n    height: 50,\n    top: 35,\n    opacity: 0.7,\n    alignSelf: 'center',\n    borderRadius: 10,\n    borderColor: '#da766b',\n    backgroundColor: '#e01a3c',\n    borderWidth: 1,\n}\n```\n. @brentvatne  Yes, it works well. Whether transparent or solid background. thanks\n. I solved it use following method :P\njavascript\nhandleMoveShouldSetPanResponder: function(e: Object, gestureState: Object) {\n       var x = gestureState.dx;\n       var y = gestureState.dy;\n       if (x != 0 && y == 0) {\n         return true;\n       }\n       return false;\n  },\n. ",
    "iq-dot": "Thanks I'll look into that one\n. A js solution would be great but what I have tried gave me no luck with\npersistence lost on view change.\n. As in for example I have a TabBar view and I switch tabs to which re-renders part of the view, which re-requires a module that I tried to use to hold a value in memory, which works as long as I am in the same view and it hasn't been replaced.\nCould you show me an example @ide on what you are proposing? Do you mean something like this:\n```\nvar DataStore = {\n} \nmodule.exports = DataStore\n```\n. Flux does sound appealing, I was actually unsure of integrating it with react-native in the beginning so it is nice to see someone using it.\nAlthough for me not sure if I am able to integrate that into my app at this stage, I may have to delay that with more time in hand.\n. Yeah I had another go and I can solve it with a pure JS solution in my case.\nNicks idea is good for when you are dealing with multiple root views and flux I guess will be similar to the JS solution talked about here.\nFor now I could close this ticket and perhaps looking at a bridging module as part of a future extension? I am sure it would be useful not to touch AsyncStorage all the time.\n. brilliant I will check that out, the react-native-swipeable element seems a new one.\n. ",
    "7ynk3r": "Hello @eduardinni!\nA couple of details I forgot to mention:\n- I'm trying to use the approach described in http://facebook.github.io/react-native/docs/embedded-app.html#content\n- I'm using React Native (v~0.2) through cocoa pods\npod 'React'\npod 'React/RCTText'\npod 'React/RCTImage'\npod 'React/RCTNetwork'\n- I'm able to request both files through http:\n  - http://localhost:8081/FlightDealsApp.includeRequire.runModule.bundle (without requiring FlightList)\n  - http://localhost:8081/FlightList.bundle\n- This is the content of both js files and the app delegate\nFlightDealsApp.js\njavascript\n'use strict';\nvar React = require('react-native');\nvar { AppRegistry, Text, View } = React;\n// var FlightList = require('./FlightList'); // Uncommenting this will make the app to fail.\nvar FlightDealsApp = React.createClass({\n  render: function() { \n        return (\n        <View style={{backgroundColor: '#527FE4', padding: 10, margin: 10}}>\n          <Text style={{fontSize: 11}}>Hello</Text>\n        </View>\n      );}\n});\nAppRegistry.registerComponent('FlightDealsApp', () => FlightDealsApp);\nmodule.exports = FlightDealsApp;\nFlightList.js\njavascript\n'use strict';\nvar React = require('react-native');\nvar { AppRegistry, Text, View } = React;\nvar FlightList = React.createClass({\n  render: function() { \n        return (\n        <View style={{backgroundColor: '#527FE4', padding: 10, margin: 10}}>\n          <Text style={{fontSize: 11}}>World</Text>\n        </View>\n      );}\n});\nmodule.exports = FlightList;\nAppDelegate.m\n``` objc\n- (BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions {\n    NSURL *jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/FlightDealsApp.includeRequire.runModule.bundle\"];\nRCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                    moduleName:@\"FlightDealsApp\"\n                                                 launchOptions:launchOptions];\n\n// Override point for customization after application launch.\nself.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\nUIViewController *rootViewController = [[UIViewController alloc] init];\nrootViewController.view = rootView;\nself.window.rootViewController = rootViewController;\n[self.window makeKeyAndVisible];\nreturn YES;\n\n}\n```\nIs this the correct approach for new apps? \nThanks for responding! I really love this technology, I think is the future for all FE apps!\n. Just to let everybody know, the pod version doesn't support \"require\". I think it's because it's a little outdated. \nUse react-native init [MY_PROJECT_NAME] to create a new project from scratch. Then use pods if you need other dependencies.\nhttp://facebook.github.io/react-native/docs/tutorial.html#content\n. This is amazing! \nIt's almost working for me but for some reason Text components are not being render even tough I can see the background color changing. \nThe server responds with the appropriated bundle, but the application is not able to render the content properly.\nIdeas?\nWhat I did:\n1) cloned react-native under ./react-native (0.4.4)\n2) created a new project under ./my_project  (xCode 6.3.1).\n3) created the podfile with @ide content and run pod install\n4) created an index.ios.js file \n```\n'use strict';\nvar React = require('react-native');\nvar {  AppRegistry,  StyleSheet,  View,  Text } = React;\nclass index extends React.Component{\n  render() {\n    return (\n      \nThis is a simple application.\n\n    )\n  }\n};\nvar styles = React.StyleSheet.create({\n  container: { flex: 1, backgroundColor: 'green' }\n});\nAppRegistry.registerComponent('index', () => index);\nmodule.exports = index;\n```\n5) setup the appDelegate.m to work with index.ios.js\n``` objc\n- (BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions {\n    NSURL jsCodeLocation;\n    jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.bundle\"];\n    RCTRootView rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                        moduleName:@\"index\"\n                                                     launchOptions:launchOptions];\nself.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\nUIViewController *rootViewController = [[UIViewController alloc] init];\nrootViewController.view = rootView;\nself.window.rootViewController = rootViewController;\n[self.window makeKeyAndVisible];\nreturn YES;\n\n}\n```\n6) create a package.json file under ./my_project.\n{\n  \"name\": \"my_project\",\n  \"version\": \"0.0.1\"\n}\n7) started the dev server \n(JS_DIR=`pwd`; cd ../react-native/React; npm run start -- --root $JS_DIR)\n8) runned the app in xcode.\n. This is amazing! \nIt's almost working for me but for some reason Text components are not being render even tough I can see the background color changing. \nThe server responds with the appropriated bundle, but the application is not able to render the content properly.\nIdeas?\nWhat I did:\n1) cloned react-native under ./react-native (0.4.4)\n2) created a new project under ./my_project  (xCode 6.3.1).\n3) created the podfile with @ide content and run pod install\n4) created an index.ios.js file \n```\n'use strict';\nvar React = require('react-native');\nvar {  AppRegistry,  StyleSheet,  View,  Text } = React;\nclass index extends React.Component{\n  render() {\n    return (\n      \nThis is a simple application.\n\n    )\n  }\n};\nvar styles = React.StyleSheet.create({\n  container: { flex: 1, backgroundColor: 'green' }\n});\nAppRegistry.registerComponent('index', () => index);\nmodule.exports = index;\n```\n5) setup the appDelegate.m to work with index.ios.js\n``` objc\n- (BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions {\n    NSURL jsCodeLocation;\n    jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.bundle\"];\n    RCTRootView rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation\n                                                        moduleName:@\"index\"\n                                                     launchOptions:launchOptions];\nself.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];\nUIViewController *rootViewController = [[UIViewController alloc] init];\nrootViewController.view = rootView;\nself.window.rootViewController = rootViewController;\n[self.window makeKeyAndVisible];\nreturn YES;\n\n}\n```\n6) create a package.json file under ./my_project.\n{\n  \"name\": \"my_project\",\n  \"version\": \"0.0.1\"\n}\n7) started the dev server \n(JS_DIR=`pwd`; cd ../react-native/React; npm run start -- --root $JS_DIR)\n8) runned the app in xcode.\n. I've solved the problem, it was cocoapods that was outdated. It was ignoring the subspecs and just using the default Core instead. There was no error during the process.\nAfter that I was able to install pods without almost any problem.\nThe only minor thing was that RCTWebSocketDebugger doesn't exists. I think it was renamed to RCTWebSocket, can you confirm this @ide?\nIt would be nice to add this to the docs. If I can help with that I'll happy to.\nCheers,\nJM\n. You are right @studentdeng . You need to add a package.jsonfile to the root ./my_project.\n{\n  \"name\": \"my_project\",\n  \"version\": \"0.0.1\"\n}\nI think this is because this is a project that is based on node and react-native is expecting this to be there for some reason but it shouldn't be necessary given that when you start the server your are specifying the path. \n. You are right @studentdeng . You need to add a package.jsonfile to the root ./my_project.\n{\n  \"name\": \"my_project\",\n  \"version\": \"0.0.1\"\n}\nI think this is because this is a project that is based on node and react-native is expecting this to be there for some reason but it shouldn't be necessary given that when you start the server your are specifying the path. \n. Thanks for the solutions!!!\n. Hi @ide,\nThanks for the response!\nI've made some progress in this but now I have a different problem.\nI have this layout:\n<ScrollView style={styles.container}>\n  <View style={style.content}/>\n  <View style={style.button}>\n</ScrollView>\nWhat I want to achieve is to set button always at the bottom of the screen. If content is larger than the screen's height, it will end up outside the viewport but I can scroll to it.\nIf I replace ScrollView with View I can use\ncontainer: {\n  flex: 1,\n  justifyContent: 'space-between',\n},\nbut that doesn't work with ScrollView, I got the following error \nCannot adjust current top of stack beyond available views.\nI need ScrollView because content may exceed the screen's height.\nJM\n. ",
    "philonpang": "Hello, this is my demo code , could you help me to check the code why the view render slowly on machine , thanks very much...\ngit:\nhttps://github.com/philonpang/NLDynamicDeploy_React.git\n. @jaygarcia @paramaggarwal  hello,below is my demo git url:\nhttps://github.com/philonpang/NLDynamicDeploy_React.git\n. ",
    "ilansas": "Yes :) See it right here https://github.com/facebook/react-native/issues/1135#issuecomment-98903335\n. You're right ! thank you, I took these animations from a github project and apparently it isn't totally stable... Thanks again !\n. ",
    "3rd-Eden": "@nicklockwood A polyfill had my preference as well but I can see potential problems with it now that the package/module system follows the browser field in the package.json as it would mean that modules such as superagent would still use their browser equivalent and fallback to XHR instead of the http module.\nI've been looking on implementing this all in Objective-C and possibility using the AFNetworking library to hide Objective-C's bad parts but so far, my knowledge has been lacking and I haven't made any fruitful process. :p \n. @vjeux I absolutely wished that there is a way around this insanity. The hacks that I have to use in order to consume this API are almost impossible to describe with words but here's what I'm up to. I'm building an application that interacts with the platform API of Bungie.net. You can login to bungie with either your XBox or PlayStation accounts. When you login using oAuth you get redirected and on the redirect landing page, bungie is setting cookies that are required to access parts of their \"private\" API. Without this information you cannot modify your account etc. So I need access to all cookies, not those can be retrieved using document.cookie in browsers but also the HTTP only cookies as these are the cookies that control if have access or not. So the main problem here is that the API does not provide a way to simply login and nor do they have plans of implementing this. There are basically 2 options that I have in order to get the information required:\n- Some how get access to all cookies that are set inside of the web browser or webview of the device. Something like chrome.cookies.getAll method would be amazing: https://developer.chrome.com/extensions/cookies as that would just allow me to get all cookies for domain .bungie.net and use that send authentication information on my outgoing requests.\n- Make HTTP requests to the PSN/XBox Oauth URI's and intercept HTTP headers as seen in this Python gist; https://gist.github.com/ascendancyy/702db99b626d52d69359\n. @vjeux So what will happen once Node.js starts supporting .mjs as extension for ES6, as that will mean that the npm eco system will slowly adopt this as well and eventually endup in packages that people might intent to use for React Native. There will be the same conflicts index.ios.js vs index.ios.mjs\n. @vjeux So what will happen once Node.js starts supporting .mjs as extension for ES6, as that will mean that the npm eco system will slowly adopt this as well and eventually endup in packages that people might intent to use for React Native. There will be the same conflicts index.ios.js vs index.ios.mjs\n. @vjeux The specification / EPS for the ES6 module changes: https://github.com/nodejs/node-eps/blob/master/002-es6-modules.md\n. @vjeux The specification / EPS for the ES6 module changes: https://github.com/nodejs/node-eps/blob/master/002-es6-modules.md\n. ",
    "VonD": "To reproduce\nreact-native init TestImagesLoadingTime\nthen replace the contents of index.ios.js with this : https://gist.github.com/VonD/a530d21a53499a085080\nBelow are the captures of the same code with react-native 0.3.11 and 0.4.0 (sorry, the second one is quite heavy)\n\n\n. @aroth thanks!\nAbout the image representation property : RN docs mention that the Image component already picks the most efficient representation (http://facebook.github.io/react-native/docs/image.html#best-camera-roll-image) : does your implementation do something different/more about it ?\nAbout your PR : what's the status on that ?\n. @aroth thanks for the clarification. Have you been able to make progress on making the representation configurable ? That would indeed be very useful. Should I open an issue for that ?\nAlso, if the reprensentation is configurable, the orientation should be too, to avoid, e.g. displaying an upside down thumbnail.\n. The issue about the image representation can be found here : #1567 \n. @bparadie @brentvatne the reason I included the orientation within the same issue is that when i first tried replacing [representation fullResolutionImage] by [asset thumbnail] in the ImageLoader, I ended up with some thumbnails upside-down (e.g. if the picture was taken with the home button on top), other rotated -90\u00b0 etc.. which didn't seem to happen with the fullResolutionImage.\nI didn't dig into this too deeply, but the following snippet solved my issue : \nUIImage *image = [UIImage imageWithCGImage:[asset thumbnail] scale:1.0f orientation:UIImageOrientationUp];\nRCTDispatchCallbackOnMainQueue(callback, nil, image);\nIf orientation really does have a different behavior depending on representation, then maybe it's best to set it explicitely \n. @myusuf3 for the moment you'll have to patch this : https://github.com/facebook/react-native/blob/master/Libraries/Image/RCTImageLoader.m#L78\n. Same problem here after upgrading to 0.6.0:\nRCTDataManager.queryData was called with 4 arguments, but expects 3\n. Many thanks everyone, the problem was some packages depending on older versions of react-native. @jevakallio the Reveal in navigatortip was particularly useful.\n. ",
    "aroth": "I have developed a quick fix for this issue at https://github.com/aroth/react-native/commit/453064b743f7417b6c969ab135442a08eccacb04. The slow load times can be resolved by wrapping the asset callback in a dispatch_async call using the default serial queue:\ndispatch_async(dispatch_get_main_queue(), ^{\n    callback(nil, image);\n});\nSecondly, loading a large number of images will trigger memory warnings and/or OOM crashes. Using the thumbnail method of the ALAsset class can help remedy this (especially useful when iterating over images from the camera roll). I have updated image loading code to take in a representation string:  full, screen or thumbnail. The default is 'full' if not provided.\n<Image\n  source={asset.node.image}\n  representation={'thumbnail'}\n  style={imageStyle}\n/>\nFull pull request pending.\n. I've created a pull request at https://github.com/facebook/react-native/pull/1263 to address the slow CameraRoll image load issue only. \nAs for asset representation (full screen, full resolution, or thumbnail)  -- I would like to address that concern separately in another Issue/PR. As is, even with this PR, loading several full resolution CameraRoll images will cause memory to spike and the app will likely crash. Thumbnail versions should be accessible and used when appropriate. \n@vonD - I may be wrong, but it appears that the docs are a bit misleading. If you review RCTImageLoader.m you will see that the full resolution image is loaded for any imageTag passed into loadImageWithTag: with an assets-library prefix. \nUIImage *image = [UIImage imageWithCGImage:[representation fullResolutionImage] scale:1.0f orientation:(UIImageOrientation)orientation];\nMy previous implementation did not automatically handle this. Instead, it required passing in a representation string (full, screen or thumbnail). I'm looking into the issue further to see if it can be handled in a more efficient way. \n. @brentvatne Thanks, this was merged internally by @nicklockwood a couple of weeks ago.\n@VonD We still need support for configurable representation and orientation of ALAssets.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Image/RCTImageLoader.m#L81\nhttps://github.com/facebook/react-native/blob/master/Libraries/Image/RCTImageLoader.m#L82\nAnother issue should be opened. I will try to involve myself this week. Thanks again.\n. +1\n. ",
    "machineloop": "Just had a brief irc conversation with @vjeux. Here are a few notes: \nWe could split into 3 files: TextInput, TextInputIOS and TextInputAndroidTextInput would only have the subset of attributes that are available in both. This way, if you want to do a quick prototype you can use TextInput and then switch to the iOS or Android variant when doing something special. We'll probably want to do the same with View and all, but it's still unclear what the right strategy is.\n. ",
    "jacobjiangwei": "@nicklockwood, Does that means we could deploy new feature without release a new app , instead we could just update the JS ?\nI heard this is just UI , never thought this could do some logics.\n. ",
    "chris-alexander55": "Yes, I did. flow --version === 0.9.1. I'm up to date. Any other suggestions?\n. Truthfully, I was able to move beyond this error by creating the AwesomeProject, confirmed that it compiled, then mutated it accordingly for my app build-out. It appears that the entire react-native stack is very, very fragile with dependencies literally changing every day. Once you get something working use NPM shrinkwrap feature to freeze those dependencies. May the force be with you!\n[cid:053B7F2F-42CB-4748-92F7-05972DA8D049]\nChristopher Alexander | Principle Software Engineer, Hook & Loop\n641 Avenue of the Americas, New York, NY 10011 | office: 646 336 1700 |\nchristopher.alexander@infor.commailto:christopher.alexander@infor.com | http://www.infor.comhttp://www.infor.com/\nFrom: Jason notifications@github.com<mailto:notifications@github.com>\nReply-To: facebook/react-native reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Saturday, April 25, 2015 at 12:16 PM\nTo: facebook/react-native react-native@noreply.github.com<mailto:react-native@noreply.github.com>\nCc: Christopher Alexander chris.alexander@infor.com<mailto:chris.alexander@infor.com>\nSubject: Re: [react-native] Flow Type Errors Examples/UIExplorer (#938)\nBump. Using flow 0.10.0 as well. Same error as davidpfahler.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/facebook/react-native/issues/938#issuecomment-96233027.\n. ",
    "bobeagan": "You might need to do a brew update first.  Seems like 0.9.2 is latest.\n. ",
    "chrisalexander55": "Despite updating Flow to 0.9.2, the error persists. Is this a Flow issue or React-Native issue. No clear direction on what to do next...\n. Look in react-native/examples/uiexplorer.\n. ",
    "kozlowskij": "Flow upgrade worked for me. \n. ",
    "davidpfahler": "I just installed react-native-cli, created a project with react-native init and updated brew and upgraded flow. flow --version says 0.10.0. I get the following error when running flow --json:\n{\"passed\":false,\"errors\":[{\"message\":[{\"descr\":\"undefined\\nThis type is incompatible with\",\"code\":0,\"path\":\"/Users/djpfahler/localhost/smile/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js\",\"line\":70,\"endline\":70,\"start\":15,\"end\":34},{\"descr\":\"boolean\",\"code\":0,\"path\":\"/Users/djpfahler/localhost/smile/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarItemIOS.ios.js\",\"line\":91,\"endline\":91,\"start\":62,\"end\":68}]},{\"message\":[{\"descr\":\"undefined\\nThis type is incompatible with\",\"code\":0,\"path\":\"/Users/djpfahler/localhost/smile/node_modules/react-native/Libraries/ReactIOS/ReactIOSMount.js\",\"line\":197,\"endline\":197,\"start\":7,\"end\":13},{\"descr\":\"boolean\",\"code\":0,\"path\":\"/Users/djpfahler/localhost/smile/node_modules/react-native/Libraries/ReactIOS/ReactIOSMount.js\",\"line\":194,\"endline\":194,\"start\":59,\"end\":62}]}],\"version\":\" Apr 25 2015 04:11:34\"}\n. @chris-alexander55 That is certainly sound advice, but shouldn't stop anyone from reporting issue when they occur.\n. @jasongonzales23 \n$ flow --json\nFlow server launched for [...]\n.flowconfig:23 Unsupported config section: \"library\"\nCould not start flow server!\n. @brentvatne Thank you very much for your swift response. This indeed works and helped me. However, is there any way we can either ship react-native bundle or update the documentation, so that other people don't run into the same issue?\n. ",
    "stephendeyoung": "I'm having the same problem as @davidpfahler \nI don't get any errors if I downgrade flow to 0.9.2.\n. ",
    "rogeryangpro": "same problem as @davidpfahler \n. ",
    "jhopper28": "I'm getting this same error on a new project, too\u2014no other react projects installed. Both flow and watchman are up-to-date.\n. ",
    "joeferraro": "can confirm @bparadie's fix works for me\n. @iostalk I've created a basic cookie manager that allows you to get/set cookies from react native: https://github.com/joeferraro/react-native-cookies\n. ",
    "thdave": "It appears upgrading node fixed this issue\nbrew upgrade node\nre-run command\nOK \n. ",
    "yueliangwen": "@brentvatne - Change localhost to the ip address of my computer only. It's all right in the simulator!\n Welcome to Reactive Native! is right! Welcome to ReacT Native! is right! Keep Welcome to React Native!, and change fontSize of styles.welcome to 24 is right! Very strange!\n. ",
    "esauter5": "\nWhen adding some height to the text element, you can see that the last word wraps to a new line. If I don't set an explicit height, the wrapped text is not visible. It would appear that the whatever size React Native is setting the text element to is a pixel or two short causing it to wrap.\n. A temporary hack I've found to work is adding an extra space of text to the end of Text components. The seems to add the extra few pixels necessary so that nothing gets cut off. I have a wrapper around the React Text component so I've added this extra space there so that I don't have to manually fix each individual problematic component. I also added an extra space at the beginning to try to balance things out.\n. I got this issue as well. It happened after I pulled the latest from master to my fork and then tried using that local version of react-native in a react-native project.\n. Thanks @jmstout. If this is true, then it makes sense. I realized the flaw in my logic: I was pondering the navbar being on top for a screen that didnt scroll so it seemed natural. If the screen did scroll, the navbar would go away unless you have the absolute positioning. Not sure how I overlooked that. Going to close.\n. OK, this is my bad. I'm using a thin wrapper around the generic Text component and its actually a bug in that wrapper.\nI just verified the problem isn't there with the actual React Text component. Closing\n. ",
    "xcatliu": "+1\nSolved the problem by updating react-native@0.4.0 to react-native@0.4.1\n. ",
    "dimoreira": "@josebalius Can you post your solution?\n. ",
    "erikdung": "Could you please show me where to add this in RTCWebView.m? Thanks\n. Great. Thanks. I solved my problem when creating app with youtube videos. I disabled fullscreen mode.\n. In webview i load HTML page with javascript. I want to call JS function in React, is it possible? Thanks\n. ",
    "tsunammis": "I'm looking forward to use this feature\n. @cmcewen can you retry the build on Travis ? maybe with the react-native 0.4.1, the issue will be resolved ;-)\n. @cmcewen Do you know how fix the failed test ?\n. Hello @cmcewen @sallar @nicklockwood \nI rebased @cmcewen work from the master (0.4.4) and by now all the tests pass -> #1337\n@cmcewen can you rebase with the master ? else @nicklockwood you can directly merge my PR, it is up to date\n@cmcewen I not updated your work and neither your \"commits\", just rebased ;-) \n. @sallar Like me :)\n. @ericvicenti do you know how launch UIExplorer e2e test directly on my desktop ?\nI tried some commands\nbash\ncd Examples/UIExplorer\nxctool -scheme UIExplorer -sdk iphonesimulator8.1\nbash\n./scripts/e2e-test.sh\nbash\n./runXcodeTests.sh\nBut I can't reproduce the failing test\nI have to retrieve the new screenshot and put it on the xamples/UIExplorer/UIExplorerTests/ReferenceImages/Examples-UIExplorer-UIExplorerApp/ folder, but I can't launch the test.\nAnyone knows ?\n. Are you re-recording the snapshot on iPhone 5 (32-bit) and iOS 8.x?\nYeah, I record the snapshot with iOS 8.1 and iPhone 5 but I can't specify 32-bit.\nThe difference between my screenshot and the oldest, its the text size, mine is more smaller than the oldest. @ericvicenti Do you know why ?\n. @ericvicenti it's ok ? \nI changed the \u201crecordMode\u201d from NO to YES inside the UIExplorerTests, the \u201creference image\u201d has been updated, and I can\u2019t see my changes on the screenshot, but I see the changes when I run the UIExplorer project on Xcode, do you know why ? And by now, the tests pass but it is bullshit according to me.\nWhat is the next steps to merge this feature ?\n. @nicklockwood Do you have something to add ?\n. @brentvatne what is the next step ? This could be merged friday during the time afforded to those things ? -> https://gist.github.com/brentvatne/e1ca1e4beaf0135e3178\n. @brentvatne thank you !! I hope I will be available friday, what is the timezone ? I'm in Paris.\n@nicklockwood thank you, you are the best !!\n. ",
    "sallar": "Can someone please complete this feature? I really need it :-)\n. @tsunammis Thanks! I was starting to do it myself, Since I want to use the native tabbar in a project of mine. But will wait for this PR to be merged.\n. ",
    "muhasturk": "Thank you for reply. \n. I did not change anything. Just react-native init den\nindex.ios.js\n```\n/*\n * Sample React Native App\n * https://github.com/facebook/react-native\n /\n'use strict';\nvar React = require('react-native');\nvar {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} = React;\nvar den = React.createClass({\n  render: function() {\n    return (\n      \n\n          Welcome to React Native!\n        \n\n          To get started, edit index.ios.js\n        \n\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+D or shake for dev menu\n        \n\n    );\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\nAppRegistry.registerComponent('den', () => den);\n```\n. What do you mean @iostalk?\n. ",
    "sabeurthabti": "https://github.com/sabeurthabti/react-native-css/issues/1\nI am developing something for fun and I need to use FS, I will investigate more tonight. Any tips would be helpful. \n. ",
    "graemetait": "Can we see your code? I haven't had any problems catching errors from network problems so far.\nHere's an example using fetch().\njavascript\nfetch('http://example.com/stuff.json')\n      .then(response => response.json())\n      .then(json => this._handleResponse(json))\n      .catch(error => {\n        React.AlertIOS.alert(\n          'Error',\n          'There seems to be an issue connecting to the network.'\n        );\n      });\n. ",
    "jonmorehouse": "Hey guys, I'm having the same issue. Over in the #reactnative irc.\n@brentvatne \n. ",
    "lrqstudy": "wonderful~\n. ",
    "dustin-H": "Due to the react-native Readme.md this is not correct anymore:\n\nSupported operating systems are >= Android 4.1 (API 16) and >= iOS 8.0.\n\nhttps://github.com/facebook/react-native\n. ",
    "gnatok": "@nicklockwood Network activity indicator that appears in the status bar on the top of the screen. Thanks\n. @nicklockwood Network activity indicator that appears in the status bar on the top of the screen. Thanks\n. ",
    "Noitidart": "I don't think the slider on ios supports thumbTintColor does it? Is this a bug? Is it supposed to be there? https://github.com/facebook/react-native/blob/master/React/Views/RCTSlider.h. ",
    "solkaz": "Slider for iOS does not currently support thumbTintColor, but it can be implemented using what @brentvatne described; I've a PR for up it. ",
    "pewallin": "https://www.npmjs.com/package/globalize is a more robust solution. \n. https://www.npmjs.com/package/globalize is a more robust solution. \n. I'm getting this as well.\n. ",
    "Barret-ma": "Thank you very much, I have solved it.@frantic\n. ",
    "bimawa": "@tadeuzagallo  pls give me a link where i can learn of last rules of PRs?\n. @tadeuzagallo Thx a lot ;)\n. @vjeux Christopher, explain me pls, why u change my pseudo private method on C function? it just newbie question ^_^.\n. @nicklockwood , @tadeuzagallo Wow Thx a lot friends!!! Very helpful answers!\n. @vjeux, @brendanv  I, too, is more like it. I could take up the implementation of styles for textInput.\n. @lelandrichardson Waaahh It's helped for me Thx!!\n. Founded sry\n. hmm Cool idea i try it later. thx @ide. But i thing its may confuses a bit?\n. @ide cat u help me? Where i can found parse styles of component, for adding placeholderStyle to same logic?\n. @sahrens damn it's my bad, this commit 93a4bb8 was for research.. i revoke this pull request later. \n\nCan you move this out of core style stuff and just make it a plain prop\n\nnow i research how make style parser for  create like suggest @vjeux \n<TextInput placeholderText=\"abc...\" placeholderStyle={{ color: 'red' }} />\n\nAlso, can you add to the TextInput Example?\n\ni made changes in UIExplorer example for test in search TextInput field. Examples/UIExplorer/UIExplorerList.js\n. Yes. May be something changed in RCT_EXPORT_MODULE. @paramaggarwal can u help me in slack private messages? I think i break something but can't found what.\n. > I had similar issue after update and I have to init new project and copy my source code into.\nYea u right!\ni roll out on v.0.4.2 and get new error:\nERROR  Error while minifying JS\nTransformed code line: \"    );\"\nModule name (best guess): precomputeStyle\nUnexpected token: punc ()) (line: 19167, col: 4, pos: 620877)\ngo experimenting more ...\n. Tag 0.4.3 not describe in React.podspec research continues..\n. on commit: =>'bb4de45d56aaa5816bece984fa554cbb2881cb04' working fine, except for one thing minifying: \nERROR  Error while minifying JS\nTransformed code line: \"    );\"\nModule name (best guess): precomputeStyle\nUnexpected token: punc ()) (line: 19167, col: 4, pos: 620877)\n. update on tag 'v0.5.0' call this (JS_DIR=pwd/ReactComponent; cd Pods/React; npm run start -- --root $JS_DIR)\nget fails:\n../Pods/React/packager/packager.js:71\n    options.root.forEach(function(root) {\n                 ^\nTypeError: Object true has no method 'forEach'\n    at Object.<anonymous> (../Pods/React/packager/packager.js:71:18)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:929:3\n. I try this call (cd Pods/React; npm run start --root '../../ReactComponent') server launch success but after request root not found:\n{ [NotFoundError: Cannot find entry file index.ios.js in any of the roots: [\"../Pods/React\"]] message: 'Cannot find entry file index.ios.js in any of the roots: [\"../Pods/React\"]',  name: 'NotFoundError',\n  type: 'NotFoundError',  status: 404, errors:  [ { description: undefined, filename: undefined,lineNumber: undefined } ] }\nhow change root path now?\n. Founded!!!! Something Wrong in new parseCommandLine.js replace this file from tag v0.4.4 now working all! Pls review this file guys: parseCommandLine.js\n. @paramaggarwal yes and now i fix it local on first time.\n. @threepointone ye it not working for me too. from cocoapods instal with tag :tag =>'v0.6.0-rc'\n@soliury how i wrote above, i just exchange parseCommandLine.js from v0.4.4 now i can work.\n. @soliury  Are you sure that you were in tag v0.5.0 and replace parseCommandLine.js from v0.4.4 ?\n. hmm ok i go try too thx\n. @brentvatne i tested it. Working fine. I think its related with pointer on a placeholder property, i testing it. i setup null dynamicaly on placeholder from JS then setup to new value and all changes working as I expected. I testing on TestInputExample.js file with next code:\n``` javascript\n\n this.updateText('onFocus')} onBlur={() => this.updateText('onBlur')} \n    onChange={(event) => this.updateText( event.nativeEvent.text )} \n    onEndEditing={(event) => this.updateText( 'onEndEditing text: ' + event.nativeEvent.text )} \n    onSubmitEditing={(event) => this.updateText( 'onSubmitEditing text: ' + event.nativeEvent.text )} \n    style={styles.default} />\n    <TextInput style={styles.default} onChange={(event)=> this.updateText( event.nativeEvent.text )}/>\n        <Text style={styles.eventLabel}>\n            {this.state.curText}{'\\n'} (prev: {this.state.prevText})\n        </Text>\n\n\n```\n. ",
    "jamestpearce": "import\n. import\n. ",
    "michaelficarra": "For scripts, there's no reliable way to combine two into the same file and preserve all semantics. For modules, you can just parse both programs and append the module items of the latter program to those of the former.\n. For scripts, there's no reliable way to combine two into the same file and preserve all semantics. For modules, you can just parse both programs and append the module items of the latter program to those of the former.\n. ",
    "jwyld": "Based upon changes on master (actually in latest release), things are good for my needs.\n. multiple, non-interfering contexts\n. That would solve my issue.\nThe next issue uncovered for me though, which I haven't filed, is the methodQueue (previously shadowQueue) must be shared by the bridge instances.  +[RCTConvert UIColor:] has a shared cache which is not thread safe.  I bring up the issue to highlight that all of react-native may not be prepared to run this way.  If I can get a multithreaded executors with a single methodQueue, I'm fine with that solution.  I'm really out to prevent the multiple JS contexts from stalling each other.\n. @tadeuzagallo I believe specifying the custom executor would be fine.  My issue is that if -init is the designated initializer on RCTContextExecutor, then -initWithJavaScriptThread:globalContextRef: should go through it.  To provide my own RCTContextExecutor subclass, I need to override the designated initializer, or I need to override or funnel both in order to prevent the com.facebook.React.JavaScript thread from being used.\n. There is no explicit designated initializer.  Subclassers must implicitly override.  If RCTContextExecutor is to be subclassed, -initWithJavaScriptThread:globablContextRef: should be declared as the designated initializer.  The stern warning can be kept on it though.\nPart of the issue is that the Class is used as the interface to RCTBridge.  RCTBridge makes the choice to call -init.  A subclasser must understand -init is called, but they must call -[super initWithJavaScriptThread:globalContextRef:] from their -init override or they must override -initWithJavaScriptThread:globalContextRef: call the super method anyhow.\nUltimately, the initialization sequence for RCTContextExecutor needs to be more explicit for subclasses.  That's really what I'm trying to get here.\n. The factory could be the class/subclass itself.  Enforce the requirement using a protocol which requires class methods for population of the dev menu as well as creation and other things as you expand.\nSomething along the lines of:\n    @protocol ClassProtocol \n    @required\n    + (NSArray*)provideAList;\n    + (id)createSomething;\n    @end\nYour property on the bridge is declared as Class<ClassProtocol>.\n. BTW, RCTCreateExecutor got close to this, but it's outside the realm of override.\n. Is -layoutIfNeeded truly required?  The default -init seems to set up with the correct size.  The other option is -sizeToFit which avoids the cost of layout.  By removing the layout, the objc_msgSend costs disappeared for this.\nBTW, my tests were on the Simulator.  It's possible there are differences in the results of both -init and -sizeToFit: on iPhone versus iPad.\n. @ide I was lazy and hadn't tried the other platforms.\nHow \"constant\" do these need to be?  On the Simulator, there is a different width for iPhone 6 (375), iPhone 6 Plus (414), and iPad/iPhone 5 (320).\nBTW, it seems -intrinsicContentSize is enough.  It could be slightly faster than -sizeToFit.  Additionally, it seems the date picker is initialized to the intrinsic size if not given a frame.  It's possible the method calls could be dropped altogether.  This testing is only on 8.3 though.\n. @nicklockwood \"Speed of startup is very important for me.\"  base64 is going to add way too much overhead.  In my case, I have a mapped Unicode string.  By using such, I pay no cost for CFString to convert from UTF8.  Since it's a \"native\" string, it removes much of the string overhead cost for lex as well.\n. With v0.6.0-rc, I still see it.\nTo reproduce, perform the following prior to instantiation of the bridge:\n        RCTDatePickerManager *test = [[RCTDatePickerManager alloc] init];\n        [test addObserver:self forKeyPath:@\"bridge\" options:(NSKeyValueObservingOptionNew) context:nil];\n. I'm wanting better control over this as well.  This was my hope with https://github.com/facebook/react-native/issues/1463.\nI was investigating the route more like the executorClass is done.\n. Depending on the intent of use for the loader, another issue which is related is https://github.com/facebook/react-native/issues/1652.\n. I've filed a few issues around the loading and the bridge setup.  In my case, the code is coming off disk.  I changed the loader to page is directly, and my code is in UTF16 format.  There is no UTF8 conversion cost, no overhead allocation cost, and it helps the lex a little bit as well.  I've moved the loader creation to be earlier, so I can start the paging right away and allow the bridge to get set up in the meantime.  There is a semaphore wait in the bridge which causes a stall.  Moving some things around and allowing the bridge to do some things in parallel has dropped the stall.\nMy point is if you aren't downloading off the network, the bridge is adding overhead.  The majority of the time is the JS lex.\nI'm processing through more performance runs to see what can be done.\n. ",
    "whatupdave": "BTW I'm using this fork in my app, works great.\n. ",
    "lazaronixon": "You're right @tadeuzagallo it is a price to pay, but too high to me, a solution i found was #if __has_include, if file is not found it will work as today and you will need to call methods on the library in ObjC your self. Other solution could be AppDelegate.h come with methods calls to NotificationIOS and it be added by default as other libraries. I feel really bad about need to write ObjC using react-native =/\n. If I move AppDelegate+notification to SampleApp Folder and with #if __has_include(\"RCTPushNotificationManager.h\") implement call methods to RCTPushNotificationManager? I would add NotificationIOS to SampleAPP as other libraries too.\n. ",
    "seanzarrin": "That worked. Thanks!\n. ",
    "achang28": "Great advice w/ timer-mixin and where to use it, @brentvatne.  Thanks!\n. Given that I am having exactly the same problem using React Native 0.5.0, and having Chrome Inspector open...\n\n``` javascript\n'use strict';\nvar React = require(\"react-native\");\nvar Firebase = require(\"firebase\");\nvar {\n    AppRegistry,\n    Component,\n    StyleSheet,\n    Text,\n    View,\n} = React;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#000000',\n  }\n});\nclass App extends Component {\n    construtor(props) {\n        super(props);\n    }\ncomponentWillMount() {\n    var backend = new Firebase(\"https://whatsthat.firebaseio.com\");\n\n    debugger;\n}\n\nrender() {\n    return <Text>Testing...</Text>;\n}\n\n}\nAppRegistry.registerComponent('whatsthat', () => App);\n```\n. @mikelehen Thanks a mil for 2.2.7.  And I 2nd oveddan's request.  I want to use Google Maps API, and the same problem (\"document.createElement is not a function\") is occurring...\n. +1\nThe problem I am having is with giving a bar button item access to objects and variables local within the target scene.  Example:  Scene 1 goes to Scene 2, but I setup the \"onRightButtonPress()\" function in Scene 1.\nI am using the REACT-NATIVE-SIDE-MENU module in Scene 2, and do not know how to have the Bar Button Item access this component...\n. Ultimately, I am trying to access the dimensions for a rendered MapView.\n. ",
    "agentcooper": "@brentvatne but then text formatting would be incorrect (multiple lines). I tried yours example with flexDirection: 'row'; flexWrap: 'wrap', but formatting is not the same.\n. Ok, thanks everyone, this actually works fine, I was just passing wrong this :weary:\nMade a small module as a result https://github.com/agentcooper/react-native-hypertext\n. ",
    "ardalann": "+1\n. ^ I'm getting the same warning here.\n. Why are you setting this.state property directly instead of using this.setState method?\n. ",
    "sitestudio": "Here are a couple:\nhttps://github.com/jlevine22/react-native-swipeable-element\nand\nhttps://github.com/leecade/react-native-swiper\n. ",
    "wwwsevolod": "it sounds so webpacky. may be just use webpack and use it's dependency graph to automatically inject it in xcode project (or where it need's to be injected). May be i don't understand something? webpack is so modular and flexible, so it could be possible to create loader that loads from local, or load it dynamically (to reduce result app size, to be allowed to download over cellular network).\n. ",
    "yifeic": "@amasad The new asset system sounds great. +1 for not touching Xcode project file.\nCurrently Image component only supports static and network image. In my iOS project, I use font file to generate icons. Is there any way for me to plug in my own image provider for Image? For example, if I have some native code that generate image from font file and then in JS I want to have something like:\n<Image source={{uri: 'font://people-icon?size=10&color=white'}}/>\nIn summary, I want to provide a custom uri(or any other way) to tell Image to use a custom image provider. Not sure if this is related to the new asset system. \n. ",
    "JohnyDays": "Great way to fix my use case thanks!\nJust for curiosity's sake, is the original object removed from the props for some performance reason?\nRegardless, i'd argue this should be documented somewhere, given I've read most of the docs and still haven't found any reference to it.\n. My use case is the following, I am constructing a waterfall view, for which i need to:\n1. Render the children with opacity 0\n2. Wait 1 frame(with requestAnimationFrame)\n3. Grab their sizes using element.measure(), Promise.all helps with coordinating this\n4. Layout the items with position absolute in a waterfall fashion\n5. Apply this layout using css, but I want to preserve whatever styles the person using my component gave to the children\nIs there a better way to do that?\nOn a sidenote, I attempted to use the solution provided in the other thread, but I cannot for the life of me figure out how to import StyleSheetRegistry, I have tried both from the React object and the StyleSheet object, do I have to use the absolute js path?\nEdit: My apologies I seem to have missed your first comment @vjeux, I will try it that way. Leaving this for posterity\n. I tried, the items did not have a width or height upon completing measure().\nSo I had to switch to requestAnimationFrame\n. Hey thanks for the help! I have managed to complete the view, I will publish the component to npm once I am satisfied, but incase you were curious, this was how I was able to make it work(still a very small bug to be fixed, but it lays out the views perfectly)\nhttps://gist.github.com/JohnyDays/ab352c6bab57683a2db5\n. @frantic or when image is sized using the parent's align-items:'stretch' property, that is also valid imo, and changing it would break my current use case.\n. This appears to be even more complicated than I realized, custom components also do not have a .measure API, nor do they have a standard way of reaching the native view, so as to grab their measures. Am I missing some way to do this? I inspected the element through the dev tools and I could not find how this would be done in a standard way, and I do not want people to have to implement a custom getNativeView interface just to use their components as children in mine.\n. Actually the element does not have a .measure function, I am already using refs.\nA snippet of the code I am using as a temporary solution:\n``` javascript\nlayouts.push(new Promise((resolve, reject) => {\nif(!view.getNodeHandle){\n    if(!view.getNativeView){\n      throw new Error(\"Non-native views must implement getNativeView\")\n    }\n    var handle = view.getNativeView().getNodeHandle()\n  }\n  else{\n    var handle = view.getNodeHandle()\n  }\nRCTUIManager.measure(handle, (x, y, width, height, pageX, pageY) => {resolve({key, value:{x, y, width, height, pageX, pageY}})})\n}))\n```\nIn the above code, the variable \"view\" contains an element obtained through a ref\nEdit: I forgot to mention, I am using this workaround because \"view\" may not have a .measure function obviously(if it is a scroll view or a custom component), nor is it guaranteed to have .getNodeHandle (as is the case with custom components)\n. @vjeux From your comment, am I correct in assuming any rendered component grabbed from a ref should have a .measure function? If so, maybe this should be reported as a bug, because none of my custom components do, and neither does the ScrollView native component (I am using ES6 classes, maybe this is related?)\n. So in order to implement this, I would assume you would save a unique integer representation of every rendered component, and then asynchronously grab it from some kind of manager in Obj-C, and serialize it through the bridge, correct? e.g\njavascript\nReact.findComponent(int: handle, callback: callback)\nGiven the performance cost this kind of communication/serializing has, I have a few proposals, tell me if I should open a new issue for these.\nI think there should be either a React.findComponents(array: ids, callback) or React.findComponents(...ids, callback), so we would only have to pay the cost once. \nAn even better option, albeit I don't know how easy this would be to implement in obj-c, would be one where no actual serializing of components occurs through the bridge, so as to not allocate unnecessary memory and waste cpu resources, my proposed solution would be the following:\njavascript\nReact.callNativeMethodOnComponent(int: id, string: methodName, callback(result): callback)\nand an equivalent to the above\njavascript\nReact.callNativeMethodOnComponents(array: ids, string: methodName, callback(result): callback)\nThis would completely remove any costs of serializing components through the bridge, since we only really care about the result of one call to a component method in some cases. An example of this would be for layout purposes, where we only care about the result of .measure() (Whatever this method is called natively) and not about the rest of the component.\nThoughts? Also, what can I do to help?\n. I should close this, since the latest version of react this has been implemented. Thanks @vjeux!\n. Not sure what the specific commit is, but It's in these release notes https://github.com/facebook/react-native/releases/tag/v0.4.3 (the new api is React.findNodeHandle(ref))\n. Maybe I didn't explain myself correctly, I have a sequence of items placed using position:'absolute' and then inside each one of them I have another position:'absolute' item (these items are children of the parent absolutely positioned items), which is supposed to appear on the corner of each of these items, but instead appears behind them.\n. \nIf i remove the transform: [{'translate':[0,0,1]}] style, those icons appear behind the posts e.g they don't appear.\nBoth the posts and the icons are absolutely positioned, and the icons are children of the posts.\n. They are the first child, but the following elements are not absolutely positioned.\nIs that the problem? This is a slight deviation from the way the web works I believe, but I might be wrong on that would have to test. Will try changing that and close the issue if it worked.\n. It did fix it, thanks for the help.\nI don't know how relevant it is for the project to maintain similar behaviour to regular css/html, but here's a js fiddle demonstrating this differs from what would happen on the web, where an absolutely positioned child is always on top of it's siblings.\nhttps://jsfiddle.net/m39z3bjb/1/\n. I had a problem where a native action i was executing (animation related) was only happening after a while. The solution I found worked was to add\nobjective-c\n- (dispatch_queue_t)methodQueue {\n    return dispatch_get_main_queue();\n}\nTo my native module implementation\n. @tadeuzagallo If I correctly understand your explanation, then perhaps my case was actually bug, since no calls to UIManager were actually being made in the native method. In fact I attempted to just call a native Alert (not through the react alert manager) and it still displayed the same behaviour, only appearing after a significant amount of time.\n. Thanks @ide, I did not know method calls to UIKit were limited to the main thread, very new to Obj-C and the Apple APIs(didn't actually know what UIKit was, had to check).\n. I believe what you are looking for is \n``` javascript\nvar RCTUIManager = require('NativeModules').UIManager;\n//The following code executes inside one of your component's methods, post render\nvar view = this.refs['ref']; // Where view is a ref obtained through \nvar handle = React.findNodeHandle(view); \nRCTUIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n   //Do stuff with the values\n})\n```\n. I'm sorry, I'm afraid I didn't understand the question. You want to add a menu on the position of an element? \n. I would argue people coming from javascript development are more familiar with the indirection in package.json, and would have to learn how to change Xcode scripts. \n. I'm pretty sure this is to encourage you to use fingerprints, I may be wrong though. Does your server return cache headers? I'm not sure react-native takes them into account regardless\n. If you need a quick fix you can add \njavascript\nvar url = 'weather.gc.ca/data/satellite/goes_nam_1070x_100.jpg'\nurl += '?random_number=' new Date().getTime()\nThis will however always download the image.\n. @brentvatne I think his last point may be referring to the same problem in #1417, if I understand correctly\n. I am implementing this in my app, I'll write here in detail how to do so in code examples when I get to a computer, but it's based on instantiating your own RCTBridges instead of letting RCTRootView do it. \nYou pass to each RCTBridge instances of the modules you want to be accessible through javascript \n. In my view controller initialization\n``` objective-c\nRCTBridge bridge = [[RCTBridge alloc] initWithBundleURL:jsCodeLocation \n  moduleProvider:^ NSArray {\n    return @[self];\n  } launchOptions:nil];\nRCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge moduleName: @\"SocialWaterfall\"];\n```\nIntializing the bridge manually allows you to scope each viewController instance to the current RCTRootView, so you can have multiple instances of the same module across different RCTRootViews, without clashing.\nIf you need some more details tell me.\n. Definitely not a rock solid solution, I think with this approach(unless I missed something) it's impossible to pass keyed modules into a bridge, meaning they are always keyed by their class name, making them restricted to 1 instance per class per bridge.\n. The only issue I have found with this approach is that I'm limited to 1 instance per class per bridge, however the standard react export macro approach also limits you in this way.\nI'm not sure what a weakSelf is, my obj-c lingo is pretty limited, but I'll check.\nI found out about the moduleProvider block by reading the react source code, so this is not a publicly documented API and I recommend it in a use at your own risk kind of way\nI'll explain the moduleProvider block with my use case. I have an (already developed without react native) app, this app has a menu, items in the menu can be of different types of view controllers, it was my intention for one of these types to be a react native backed view controller.\nOne of these is called SocialWaterfallViewController\nI first tried exporting using the standard macro, with this approach, upon instantiating an RCTBridge, React automatically instantiates SocialWaterfallViewController and passes it as a module accessible through \nobjective-c\nrequire('NativeModules').SocialWaterfallViewController // <SocialWaterfallViewController 0x0002>\nRemember I was instantiating the RCTBridge inside of this viewController itself. Why is this a problem? Because now inside javascript, I will have access to <SocialWaterfallViewController 0x0002> instance, while the instance I actually need is <SocialWaterfallViewController 0x0001>, which is the parent of the RCTRootView, and whom exports methods I have to call from javascript.\nUsing the approach with moduleProvider block, I pass the instance  (e.g self) to the RCTBridge, meaning it will prefer that instance instead of instantiating a new one, and javascript now has access to the correct instance.\n. The react native philosophy is that you shouldn't (I think), there has been some discussion around supporting display:none, however simply removing the view from the tree saves memory, which is about as vital as saving the re-render, depending on your use case.  If you really need this, you could expose that property from a custom view in obj-c. \n. If you need measurements for said view set opacity to 0 instead of height\n. It's not a comparison problem, because even the shallow comparison would return false, given you are creating different object instances on every render. So I'm afraid that's not the issue. I think in #1397 @ide mentioned there might be some bug in the Image class that causes Images not to change, might want to check that.\n. Also doesn't force you to have an iOS folder in your project, wouldn't be too bad to just create one, but it shouldn't be required imo.\n. Done @vjeux, thanks! :+1: \n. Sorry @vjeux, anything left for this to be merged? It's getting old to manually modify this file every time I run npm install. Thanks!\n. Thanks!\n. @medington Might as well implement it, did it in fcc4e4f\n. It's what I get for editing in github's editor :cry:   oops\n. This used to already be the case for symlinked folders, usually created by npm link facebook/watchman#105\n. @tadeuzagallo can I get a hint on where this rule is and how I can disable it? I'm currently using master and even changing this manually would speed up my development. Thanks!\n. Had found with with grep, sorry I didn't update this issue. Glad to know I found the right one though :+1: \n. I'm not sure you can do this, but if you can you would use a file:// protocol, which you would grab from the following snippet (I'm assuming jquery.js is in your xcode project)\nobjective-c\nNSURL *jqueryLocation = [[NSBundle mainBundle] urlForResource:@\"jquery\" withExtension:@\"js\"];\nThat would return a uri with something like file://something/Devices/abcd-123/caches/bundle/jquery.js which is the absolute path on the device/emulator after compiling your app\n. @brentvatne I don't have access to a MAC over the weekend, if noone takes it up until monday I'll give it a shot.\nHowever I don't think that's what @bright-sea was asking for! His question was more about requiring a <script> tag inside of the html(which is inlined and dynamically generated), where the source script was a file required inside the app bundle. Though perhaps you just explained how to do that and I misunderstood.\n. Oops apparently having a <script> tag in your comment hides the rest, apologies!\n. Don't really see a way to implement this without explicit ordering of the props. Pausing development on until someone can tell whether it is possible.\n. Was told there was no way to do this, there might be another solution though.\n. I need to deal with the transition between html/baseUrl to file/baseUrl to html/no baseUrl to file/no baseUrl(in this case I am infering the base url from the file path) to remoteUrl\nAnd having an html property defined makes url navigation broken, since I can't point the url to a file or remote uri. One way to fix this would be to generate a file and save it from the html, using some kind of unique hash that would be saved in the navigation history.\nIs there a common way to deal with state transitions in react I should apply here? Like resetting everything before each render. Though I'm not sure this would be performant\n. @brentvatne That would be ideal, although it would change the current api. I'm not sure how much impact that would have\nEdit: Also, would be nice to standardize the navigation if we're gonna support inline html.\n. My IRC isn't working properly, after a few minutes of being logged in I stop both being able to write and read messages, gonna try to fix it soon. \nAnyway, I'm implementing it with a source object right now. \n. Thanks @brentvatne, your suggestions really guided me towards making this work properly. I was clearly overthinking it. However there's still a few edges to be roughed out, should I submit a working, but unpolished pull request to gather feedback?\n. I worked around this problem by instantiating a bridge for every view controller, although you have to pay the startup cost every time\n. It actually affects the runtime behavior a lot more than this, since running it on chrome uses google's V8 engine, while the app runtime uses JavascriptCore. I don't know how this would be fixed though, since I don't think the chrome remote debugging protocol supports using a different engine :cry: \n. ES6 classes are supported by the packager AFAIK, but some other ES6 features aren't\nThe full list of supported features is here https://facebook.github.io/react-native/docs/javascript-environment.html#content\nAll of them are supported in master, because it's using babel.\n. Cool! This will be supported once babel lands though. (Already in master if you wanna live on the edge)\n. I'm bleeding a bit from living on the edge, but nothing that's unsalvageable with responsible use of shrinkwrap and testing :+1: \n@jaygarcia No idea, I'm not on the core team, but I'm sure 0.5.0 is soon to be released (you can already use the rc)\n. I think this issue shouldn't be closed, we should probably try to make this work out of the box. Or perhaps apple should allow localhost or local ips to be loaded regardless?\n. I'd imagine they implemented this to prevent naive implementations of OTA updates. But I do think it doesn't make sense for local IPs. I'm not an expert on IP addresses and other network-y things, but there's a few select ip ranges that are reserved for local networks right? Perhaps that could be automatically added to the whitelist(or atleast referenced somewhere in the docs)\n. Can you give a bit more context? or perhaps a code sample\n. It's an implementation detail yes, but the reason it's used is to avoid serializing the entire style object through the bridge every time you render any component with a style. It might be annoying or even look unnecessary, but your users will thank you for the performance. I do think it would be cool to support the following (and maybe feasible)\n``` javascript\nvar BigLabelStyle = StyleSheet.create({\n  label: {\n    fontSize: 18,\n    padding: 5\n  }\n});\nvar RedLabelStyle = StyleSheet.create({\n  label: {\n    color: 'red'\n  }\n});\nvar BigRedLabelStyle = StyleSheet.create({\n  label: [\n    BigLabelStyle.label, \n    RedLabelStyle.label,\n    {\n      fontSize: 24\n    }\n  ]\n});\n```\nDoes this make sense?\n. And in the same vein as @ide's proposal, maybe this would be easier (and more consistent with the current style prop api)\njavascript\nvar BigRedLabelStyle = Stylesheet.create([\n  BigLabelStyle,\n  RedLabelStyle,\n  {\n    fontSize: 24\n  }\n])\n. I forgot the label:{fontSize} in my last comment, it would actually be\njavascript\nvar BigRedLabelStyle = Stylesheet.create([\n  BigLabelStyle,\n  RedLabelStyle,\n  {\n    label:{\n      fontSize: 24\n    }  \n  }\n])\nWhich would, in native code, be equivalent to \njavascript\nvar BigRedLabelStyle = Stylesheet.create({\n  ...BigLabelStyle,\n  ...RedLabelStyle,\n  label:{\n   fontSize: 24\n  }  \n})\n. I thought about merging the bundle entry and the platform, but I was unsure of whether the platform was relevant for something beyond the bundle entry, in another part of the packager. \nAlso, do we really want a cache for each client? The client's only identifying features are the bundleEntry and it's platform, so if we have a cache for each of those, it should be enough right? And this way, for the most common case (Developing one application, on multiple devices) we are at most compiling 2 bundles, one for iOS, and one for android, since all the devices for the same platform share the same bundleEntry. And we still support multiple applications at the same time, since they have different bundleEntries, and as such different caches :+1: \n. I thought about merging the bundle entry and the platform, but I was unsure of whether the platform was relevant for something beyond the bundle entry, in another part of the packager. \nAlso, do we really want a cache for each client? The client's only identifying features are the bundleEntry and it's platform, so if we have a cache for each of those, it should be enough right? And this way, for the most common case (Developing one application, on multiple devices) we are at most compiling 2 bundles, one for iOS, and one for android, since all the devices for the same platform share the same bundleEntry. And we still support multiple applications at the same time, since they have different bundleEntries, and as such different caches :+1: \n. Definitely, this should check which client the error belongs to, the reason it doesn't as is right now, is that Promise.all is an all or nothing schtick, if one of them errors, it just errors for all of them. \nWe can use something else, although with your proposed changes this wouldn't be necessary :smile: \n. Definitely, this should check which client the error belongs to, the reason it doesn't as is right now, is that Promise.all is an all or nothing schtick, if one of them errors, it just errors for all of them. \nWe can use something else, although with your proposed changes this wouldn't be necessary :smile: \n. > except rare case on which you have both the simulator and a device connected to the Packager\nI was imagining my own use case, which is testing on different screen sizes at the same time, by connecting an iPhone and an iPad for example, or an android phone and a tablet, or all of the above! :smile: \nThis would effectively cut the processing time by half in that specific case.\nOn the other hand, I definitely agree with your approach, this should be isolated, which would lead to better error handling, and more maintainability. \nI think the tradeoff in speed is more than acceptable, especially since my use case should be pretty rare, most people would only want to develop on android and iOS simultaneously, and this complexity wouldn't speed that up at all.\n. > except rare case on which you have both the simulator and a device connected to the Packager\nI was imagining my own use case, which is testing on different screen sizes at the same time, by connecting an iPhone and an iPad for example, or an android phone and a tablet, or all of the above! :smile: \nThis would effectively cut the processing time by half in that specific case.\nOn the other hand, I definitely agree with your approach, this should be isolated, which would lead to better error handling, and more maintainability. \nI think the tradeoff in speed is more than acceptable, especially since my use case should be pretty rare, most people would only want to develop on android and iOS simultaneously, and this complexity wouldn't speed that up at all.\n. Definitely! It was a mistake. In practice if the first one is true then it rarely matters but it could be an issue for some promise-likes. This code is being rewritten in a new style so I won't fix it right now. \nThanks though! \n. The idea is that we only add a listener when the first client is registered, since this indicates to the packager that we want to enter \"hot mode\", which means we can't register the listener before any clients request it.\nI think I can add a flag instead, if you think this isn't explicit.\n. ",
    "flipactual": "@tadeuzagallo fantastic!\nWhile this solves my immediate issue, is this present in documentation? Should it be added to this guide? I assumed that turning off dev in the manner described therein would also apply to this.\n. @brentvatne happy to!\nimho both the runningondevice and debugging sections could use a bit more information on how the dev modes work.\nPerhaps the content could go in the debugging docs and the runningondevice docs could link there?\n. @tadeuzagallo hey! So I'm no iOS development pro... where would be the best spot to put #define RCT_DEV 0?\n. I feel like there has to be a better way to turn off the debugger than by altering a dependency.\nIs there another option for building without the developer menu? @tadeuzagallo mentioned that I was building in debug mode; how do I not build in debug mode?\n(PR is incoming, I just want to make sure I have things right)\n. Aha! I didn't know that menu even existed... great, I'll have the PR open shortly.\nThanks for your help thus far, everyone!\n. @brentvatne thanks for the feedback; requested changes have been made! \nShould I be concerned about these tests failing? Seems entirely unrelated.\n(and now they pass!)\n. Any more work needed here?\n. @brentvatne \ud83d\ude4c\n. @brentvatne ping!\n. @brentvatne ping!\n. ",
    "opolyo01": "I ran my code in the release mode, but still getting development popup when I shake the phone.\n\n\n\n. Yes Debug is undefined when I run in release mode.  It is displaying DEBUG in debug mode.\nI tried adding  in AppDelegate.m \nNSLog(DEBUG ? @\"DEBUG\" : @\"RELEASE\");\n/Users/opolyakov/react-projects/reactNativeProjects/openHouse/iOS/AppDelegate.m:51:11: Use of undeclared identifier 'DEBUG'\nWhere do I define this setting?\n. Thanks,  moving to 0.4.2 fixed the development popup issue.\n. Adding componentWillReceiveProps method into Listings view controller made it update the view, and things now more logical.  I guess NavigatorIOS+ListView need a combination of componentWillReceiveProps and replace invocation.\ncomponentWillReceiveProps(nextProps){\n    this.state = {dataSource: this.state.dataSource.cloneWithRows(nextProps.listings)};\n  }\n. ",
    "venocl": "Hi, I have the same problem with ddp.js even after applying the fix\n. ",
    "jonslenkooyala": "@JohnyDays might you know, where's the commit(s) that address this? I'd love that feature (specifically, for custom components) :-) \n. Thanks, will do.\n. I guess it is because the 'custom' thing is not the markup returned from a render() call, but is an instance. So something I tried that works is to use a callback.\nhttp://pastebin.com/11wYCE8A\nIt all seems sort of gross.\n. Thanks for your note. I started with onLayout :-) but the onLayout callback doesn't get all the details, the x & y are often/always zero it seems to me vs. the ox,oy and px,py of measuring. \nIf there's a way to get the actual screen pixel position of the Component, that's all I'm really trying to get, sorry I didn't explain my use case in the first place.\n. With the 'measure' grossness I mentioned above, I think maybe if I am lucky I am getting the values I want in the px,py arguments to the callback?\n. ",
    "terrence0488": "Okay. I'm sorry for opening this issue. I have solved it myself.\nThe problem is with my Chrome browser.\nI just uninstall it and re-install again. Problem solved!!\n. ",
    "saltymule": "Do you mean UIViewGroupOpacity or rasterization ? http://stackoverflow.com/questions/8581994/ios-controlling-uiview-alpha-behaviour-for-subviews \n. ",
    "MarcoPolo": "Travis failed, so it doesn't look like it's just a simple version bump. I'll close this for now and reopen when I get a passing PR.\n. ",
    "prenaux": "I'm using this atm:\n``` objective-c\n--- ReactDevModule.m ---\nimport \"RCTBridgeModule.h\"\nimport \"RCTBridge.h\"\n@interface ReactDevModule : NSObject \n@end\n@implementation ReactDevModule\nRCT_EXPORT_MODULE();\nRCT_EXPORT_METHOD(reloadBridge)\n{\n  [[NSNotificationCenter defaultCenter] postNotificationName:RCTReloadNotification object:nil userInfo:nil];\n}\n@end\n```\nThen in JavaScript:\n``` javascript\nvar {\n  NativeModules\n} = React;\n....\nNativeModules.ReactDevModule.reloadBridge();\n....\n```\n. Ok, I see that's there's an import.sh script to import Layout.c/h from facebook/css-layout (I assume?).\nBut the changes here are mainly to add the alignContent property in the React stylesheet which wasn't implemented before.\nThe layout part for alignContent has been implemented (in JS) in facebook/css-layout#79 (issue desc at facebook/css-layout#78). As far as I can tell the version in frantic@af92154 doesn't implement alignContent.\n. Yes, I assumed the signature was there for a reason, thanks for clarifying :) Is it better to close this PR first and re-submit once its merged in css-layout or just leave it as is for now?\n. To be sure, ideally I should wait that the new Layout.c/h makes it into react-native master, and afterward submit the changes to add alignContent? Or should I do a PR with a signed Layout.c/h (after it has been merged in css-layout master)?\n. Got it.\n. ",
    "dolmens": "hey guys, if i take it correctly, if i want to share the same bridge, then i need to bundle all the js files/functions to a big bundle, right? is there a way that i can still share the bridge but download every module every single time?\n. @brentvatne say i choose to place the js bundle on server side, and i have many react views, named v1, v2, ..., etc., corresponding to js module m1, m2, ..., etc., and i want to download these modules on demand, in other words, i don't download them only until i show the corresonding views.\n. ",
    "mikelehen": "Yes, looks like it works with 0.4.0 but not 0.4.1\n. FWIW, we'll be releasing a fix for the Firebase client shortly (hopefully today) that addresses this.  The client was basically assuming that if document exists, then document.createElement will exist and work, but react-native violates this under the Chrome debugger.\n. I'd be fine with dropping the .platform part.  Somebody on IRC had mentioned it.\n. FWIW, @ide's proposal would definitely work for our use case.\n. ",
    "amitverma": "You should post some code. I have the same setup and things are working fine for me. \n. Hey Philipp,\nI wouldn't want to return false. I want a way to remove the binding from the <View>\nIf that is not possible, I'd appreciate if you could tell me how to unmount this View.\n. Is there no way to unmount a <View> or to remove panResponder?\n. you're calling setState twice. doesn't this cause it to render twice as well? maybe a race is happening? \nthat.setState({updatePressed: true});\nthat.setState({pressTest: 2});\n. ",
    "crylico": "The values /can/ change, but it's a pretty rare thing...Essentially the only way it would change is if the user opened Settings.app and changed their DynamicType there without restarting the app (I believe anyway, haven't done much testing).\nThis is explained in Apple's Docs:\nIt\u2019s also important to observe the UIContentSizeCategoryDidChangeNotification so that you can re\u2013lay out the text when the user changes the content size category\n. Yeah, I totally agree! The stuff I wrote was just a quick fix, but I'm not sure what the best way to integrate it would be\n. Yeah! I'll work on it when I get a chance. I'll likely stick to the current\narchitecture (as a NativeModule), but exposing more of the font descriptor\nfor the initial PR. Once all the functionality is there, we can talk about\nwhere it best belongs :)\nOn Sat, May 30, 2015 at 5:47 PM Brent Vatne notifications@github.com\nwrote:\n\n@crylico https://github.com/crylico - any interest in following through\non this? If so, perhaps turn your gist into a PR and we can give feedback\nthere [image: :smile:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1077#issuecomment-107092423\n.\n. \n",
    "TheBrousse": "So what's the answer here? (omitting your personal beliefs and opinions)\nDoes the React project has any plans of protecting the developer's code or not?\n. ",
    "rborn": "@nicklockwood Thanks for the reply.\nA determined hacker would get access to everything indeed, I'm talking more about \"curious\" people that might look into your house if you leave the door open ;)\nAlso the are plenty of cases where you would really need to store some stuff on the device starting with complete offline apps to apps that communicate with external servers which you don't control.\nI know what ideally should be done, but in the real world things don't happen like this :) (Don't get me wrong please)\n. But even with a more efficient code in place, the JS will still be in clear. Or am I getting it wrong?\n. @vjeux clear now, thank you :smile: \n. @nicklockwood this should be good enough for a start, I'll run some tests and let you know. Thanks a bunch!\n. @shayne thank you. I'll keep this in mind.\n@jaygarcia For many apps this might be a \"nice to have\" however for most of my projects the code protection is required :)\n. Sorry, I'm traveling this days and I'll be able to touch the code only the next week.\nBut as soon as I'm back I'll test it and let you know :)\nSent from my iPhone\n\nOn May 6, 2015, at 12:37 AM, Nick Lockwood notifications@github.com wrote:\n@rborn did you get a chance to try my suggestion? Any problems?\n\u2015\nReply to this email directly or view it on GitHub.\n. I'm really sorry for the delay. \n\n@nicklockwood I did what you suggested (base64 the jsbundle) and the test app works ok (deployed both on sim and device).\nHowever after I generated the ipa for appstore a strings command shows the base64 code in clear (as @shayne indicated).\n. Oh, didn't know this, I thought the encryption is done locally.\nBut if it's like this, why the jsbundle files are not encrypted? (found that in a react-native app that's in the Appstore).\n. I see, thank you\nSadly I cannot test right now with an app in appstore :disappointed: \n. Ignore me, I updated node to v0.12.2 and it works just fine.\n. ",
    "hoodsy": "ok. thanks\n. ",
    "bhatti": "The native code was calling callback block to pass events to Javascript. I can use DeviceEventEmitter but callback would have been easier as I can encapsulate logic within the block. Thanks.\n. FYI, I got it working when using sendDeviceEventWithName to publish events instead of sendAppEventWithName, which was suggested by examples (https://facebook.github.io/react-native/docs/nativemodulesios.html#content).\n. ",
    "tonylinyy": "it works,thanks\n. ",
    "artemyarulin": "Here the pull request that fixes this issue. While I'm a bit concerned how we can create a unit-test for that.\nAnd actually the bigger question is - should it be fixed? If yes, then we have to go through all RCTAssert and check that in never fails afterwards, but at the same time the whole point of RCTAssert is to tell that we faced unexpected. What it is your thoughts about it?\nThanks \n. Here pull request which fixes this issue (actually I guess this is a real reason for #1114).\nNow I'm thinking that it worth giving user a warning that his call is ignored because RCTBridge still initializing, what do you think?\n. @tadeuzagallo Cool, thank you!\n. Now I'm thinking: buildStyleInterpolator.js wasn't changed for a while and code generation for transformMatrix is done during runtime - doesn't it mean that any react-native minified applications that were released before would be broken when iOS9 would be released?\nUPD:\nWell Facebook Groups works just fine, so I'm thinking that maybe only Simulators are affected\n. Thanks for response.\nYes, this is weird - I was able to reproduce this error only when code is minified. If I beautify it using Sublime Text for example - then everything works just fine.\nI was trying to find the minimum code that works differently on old and new Safari, but wasn't able to do so. Simple examples returns always the same string representation for functions for both versions. But at the same time if you attach Safari debugger to your iPhone Simulator and put a breakpoint to var t = [\"  var transformMatrix = ... and eval g.unroll.toString() you would see a different result on latest Safari on simulator.\nUnfortunately due some problems with Xcode (beta, argh) I wasn't able to check how code works on iOS9 on real device. If you wish - I could try once again on Monday when I will be in the office.\nI didn't have a time to check why tests are failing, sorry for that. I will be able to check it on Monday as well.\n. Just want to confirm - iOS 9 real device has the same issue as well.\n. ",
    "rymdluo": "@brentvatne Thanks for coming in. I did, I've reworked my code to follow closely to yours and now I'm not getting any errors and I think I got a good result(?)\nAs DrawViewEngine is actually a drawing view, I am wondering of the native touch handling from my custom view is at fault now or otherwise (i am initialising the view via \"initWithFrame:[[UIScreen mainScreen] bounds]\"\n. ",
    "voronianski": "@brentvatne I have similar problem but your suggest is not working.\nbash\n message: undefined is not a function (evaluating 'requireNativeComponent('DVEffectsView', DVEffectsView)')\"\n``` javascript\nvar DVEffectsView = React.createClass({\n  render() {\n    return ;\n  }\n});\nvar EffectsView = requireNativeComponent('DVEffectsView', DVEffectsView);\nmodule.exports = EffectsView;\n```\nDVEffectsView is placed inside:\n\nAnd content of obj-c files:\n``` obj-c\n// ... EffectsView.h\nimport \nimport \n@interface DVEffectsView : RCTView\n@property (nonatomic, strong) NSString *blurStyle;\n@property (nonatomic) BOOL vibrant;\n@end\n// ... EffectsView.m\nimport \"DVEffectsView.h\"\n@interface DVEffectsView ()\n@property (nonatomic, strong) UIVisualEffectView *effectsView;\n@end\n@implementation DVEffectsView\n\n\n(instancetype)init\n{\n    self = [super init];\n    return self;\n}\n\n\n(void)layoutSubviews\n{\n    [super layoutSubviews];\n    //...\n}\n@end\n\n\n// ... DVEffectsViewManager.h\nimport \nimport \"DVEffectsView.h\"\n@interface DVEffectsViewManager : RCTViewManager\n@end\n// ... DVEffectsViewManager.m\nimport \"DVEffectsViewManager.h\"\n@implementation DVEffectsViewManager\nRCT_EXPORT_MODULE();\n\n(UIView *)view\n{\n    return [[DVEffectsView alloc] init];\n}\n\nRCT_EXPORT_VIEW_PROPERTY(blurStyle, NSString);\nRCT_EXPORT_VIEW_PROPERTY(vibrant, BOOL);\n@end\n```\n. @alinz sorry, it's just a typo in code example, originally it looks the same as yours:\njavascript\nvar EffectsView = React.createClass({\n  render() {\n    return <DVEffectsView {...this.props} />;\n  }\n});\nvar DVEffectsView = requireNativeComponent('DVEffectsView', EffectsView);\nError is still thrown.\n. @alinz I've added propTypes and using component as follows:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar StyleSheet = require('StyleSheet');\nvar flattenStyle = require('flattenStyle');\nvar merge = require('merge');\nvar { View, PropTypes, requireNativeComponent } = React;\nvar EffectsView = React.createClass({\n    propTypes: {\n        blurStyle: PropTypes.string,\n        vibrantContent: PropTypes.node\n    },\nrender() {\n    return <DVEffectsView {...this.props} />;\n}\n\n});\nvar DVEffectsView = requireNativeComponent('DVEffectsView', EffectsView);\nvar EffectsViewComponent = React.createClass({\n    render() {\n        var { children, vibrantContent } = this.props;\n        var style = flattenStyle([styles.base, this.props.style]);\n        var nativeProps = merge(this.props, { style });\n    if (vibrantContent) {\n        nativeProps.vibrant = true;\n    }\n    var vibrantNode = vibrantContent ? vibrantContent : <View />;\n\n    return (\n        <EffectsView {...nativeProps}>\n            {vibrantNode}\n            {React.Children.map(children, React.addons.cloneWithProps)}\n        </EffectsView>\n    );\n}\n\n});\nvar styles = StyleSheet.create({\n    base: {\n        backgroundColor: 'transparent'\n    }\n});\nmodule.exports = EffectsViewComponent;\n```\n. @alinz Ideally I don't need a wrapper at all:\n``` javascript\n'use strict';\nvar React = require('react-native');\nvar StyleSheet = require('StyleSheet');\nvar flattenStyle = require('flattenStyle');\nvar merge = require('merge');\nvar { View, PropTypes, requireNativeComponent } = React;\n// withour wrapper (https://facebook.github.io/react-native/docs/nativecomponentsios.html#ios-mapview-example)\nvar DVEffectsView = requireNativeComponent('DVEffectsView', null);\nvar EffectsViewComponent = React.createClass({\n    render() {\n        var { children, vibrantContent } = this.props;\n        var style = flattenStyle([styles.base, this.props.style]);\n        var nativeProps = merge(this.props, { style });\n    if (vibrantContent) {\n        nativeProps.vibrant = true;\n    }\n    var vibrantNode = vibrantContent ? vibrantContent : <View />;\n\n    return (\n        <DVEffectsView {...nativeProps}>\n            {vibrantNode}\n            {React.Children.map(children, React.addons.cloneWithProps)}\n        </DVEffectsView>\n    );\n}\n\n});\nvar styles = StyleSheet.create({\n    base: {\n        backgroundColor: 'transparent'\n    }\n});\nmodule.exports = EffectsViewComponent;\n```\nHowever in both examples I receive:\nbash\nundefined is not a function (evaluating 'requireNativeComponent('DVEffectsView', EffectsView)')\"\nor\nbash\nundefined is not a function (evaluating 'requireNativeComponent('DVEffectsView', null)')\"\nThis is the code that worked well on ReactNative version 0.3.x - https://github.com/voronianski/react-native-effects-view/blob/master/index.ios.js\n. @brentvatne you're right there's no DVEffectsView inside NativeModules object though the folder with files is inside XCode project and view manager is calling RCT_EXPORT_MODULE();.\n. ",
    "littleweb": "again\n. ",
    "metacortex": "This is cool :-)\nhttps://github.com/stefalda/ReactNativeLocalization\n. This is cool :-)\nhttps://github.com/stefalda/ReactNativeLocalization\n. ",
    "rustyconover": "Isn't that only for Xcode bundled images?\n. ",
    "slooker": "Woops.  You are correct.  That fixes the problem.  Sorry for not checking the old issues first.\n. ",
    "enaqx": "@brentvatne ping-ping. I've checked again these changes and site is working on my side. Can you check, pls? If you would like any proves (logs, screenshots, etc.) I would be happy to make it. I'm open to any suggestions or corrections. :smile: \n. @ide Thanks for style corrections. Since I've removed this branch and GitHub will not allow changes in this commit I'll open new PR with updates. Is it OK, guys?\n. ",
    "iceNuts": "It turns out I have this issue: addListener: function(callback) {\n    this.on('bar', callback(foo));\n  }, in store file. I want to pass data from one component to the other with callback. Is this working? If not, why react native doesn't show some errors but simply not work?\nThanks.\n. @ericvicenti Please close this issue. It looks like the way flux to pass data to some other components is simply add a few functions to return the objects. \nThanks.\n. ",
    "heimasi": "In RCTAnimationExperimentalManager.m:\n219: NSValue *fromValue = [view.layer.presentationLayer valueForKeyPath:keypath];\n220: NSLog(@\"fromvalue  %@\",fromValue); //added by myself\nconsole:  fromvalue 1\nIt should be ok, but during the animation running, the view's opacity is still changed to 0.0 firstly. If I miss something?\n. Thank you very much, @muzix , It works! Cool!\n. ",
    "muzix": "@heimasi @frantic \nI'm also had same problem. Opacity animating correctly from 0.0 to 1.0 but it's doesn't work when animating from 1.0 back to 0.0\nSo i looked into RCTAnimationExperimentalManager.m and i think it's because of \"fromValue\" not being typecast correctly as \"toValue\".\n```\nswitch (typeName[0]) {\ndefine CASE(encoding, type) \\\n      case encoding: { \\\n        type value; \\\n        [toValue getValue:&value]; \\\n        toFields[0] = value; \\\n        break; \\\n      }\n\n      CASE('i', int)\n      CASE('I', unsigned int)\n      CASE('s', short)\n      CASE('S', unsigned short)\n      CASE('l', long)\n      CASE('L', unsigned long)\n      CASE('q', long long)\n      CASE('Q', unsigned long long)\n\nundef CASE\n    default:\n      [toValue getValue:toFields];\n      break;\n  }\n\n```\nmoreover, I think float and double datatype is missing in above code \n          CASE('f', float)\n          CASE('d', double)\nSo, i commented out line: [fromValue getValue:fromFields];\nand replace it with below:\n```\nswitch (fromTypeName[0]) {\ndefine CASE(encoding, type) \\\n      case encoding: { \\\n        type value; \\\n        [fromValue getValue:&value]; \\\n        fromFields[0] = value; \\\n        break; \\\n      }\n\n      CASE('i', int)\n      CASE('I', unsigned int)\n      CASE('s', short)\n      CASE('S', unsigned short)\n      CASE('l', long)\n      CASE('L', unsigned long)\n      CASE('q', long long)\n      CASE('Q', unsigned long long)\n      CASE('f', float)\n      CASE('d', double)\n\nundef CASE\n      default:\n        [fromValue getValue:fromFields];\n        break;\n    }\n\n```\nThen, animation worked correctly. \n. I think you are missing \"property\" in create section.\ncreate: {\n        type: LayoutAnimation.Types.linear,\n        property: LayoutAnimation.Properties.opacity,\n      },\n. Here is good and detail answer:\nhttps://github.com/facebook/react-native/issues/46#issuecomment-73277538\n. ",
    "iahu": "that.setState({pressTest: 2}); added to test. Maybe I should comment the first line.\n. I know the setState can't immediately update.\nmy problem is that, I can't get the newly state at renderRow (gist)\n. this.state.pressTest (at line 98) always be 0 but not 2. At the same time, I can get a 2 at line 82.\n. clone the origin DS to force the renderRow render again works. Thanks a lot.\njs\nvar _ds = JSON.parse(JSON.stringify(ds));\nthat.setState({\n    dataSource: that.state.dataSource.cloneWithRows(_ds),\n    updatePressed: true\n});\n. ",
    "allentofight": "I see ,'A bundleURL is required to create an RCTRootView' , But in the future is it possible to load main.jsbundle downloaded from server?\n. @brendanv YES! I did it successfully!!!Thanks!\n. ",
    "piyushchauhan2011": "Can you provide your example code or repository ?\n. Ohhh I'm also getting this warning don't know why :disappointed: \n. Cool works perfect!\n. ",
    "fcanas": "Updating node works for me. I have no reason for running v0.10 other than that's what I ended up with after a long, blind, stumbling process of getting this up and running.\nThanks for your help!\n. ",
    "kenzan100": "@nicklockwood Is there anything else I should do before this will be merged? thanks!\n. @brentvatne OK, that makes sense. thanks!!\n. ",
    "olivierlesnicki": "Having the same issue when using firebase.\nNote that it only happens when Chrome debugger is opened.\n. Including and initializing an instance of Firebase is enough to replicate the issue (consistently)\n. @mikelehen thanks dude!\n. @mikelehen when are we open-sourcing firebase js library :-p\n. @kevindeleon whenever you mix objective c and swift you need a bridging file. This is standard practice however you're right that they should add a line in the doc\n. @kevindeleon did you manage to implement a native UI widget using Swift? as per https://facebook.github.io/react-native/docs/nativecomponentsios.html#content\n. I get the following issue when trading a TouchableHighlight with a TouchableBounce\n```\nundefined is not an object (evaluating RCTAnimationManager.startAnimation)\nstartAnimation\nAnimationExperimental.js:59\n``\n. Actually I managed to solve it by using therootViewControlleras the value of theshowFromViewController` argument (accessed through the appdelegate shared instance). Pretty obvious when you think about it ...\n. ",
    "eduedix": "+1 @brentvatne \n. ",
    "mixophrygian": "Does RN support .woff fonts?\n. Ya, the accidental double tap / double view push occurs before the transition.\n. It's a custom navigator made with TouchableOpacity.\n. ",
    "geolivero": "@marcshilling what do you mean with \"I had to the do the latter on native\", did you write \"Typeface font = Typeface.createFromAsset\" in the main activity?\n. @satya164, you saved my day, i'm going going to try this tonight.\nThanks!\nGeo\nOn Sun, Sep 20, 2015 at 4:36 AM, Satyajit Sahoo notifications@github.com\nwrote:\n\nThis is how I got custom font working,\n1. Put your font files under assets/fonts\n2. Add the following files\nFontsOverride.java*\nimport java.lang.reflect.Field;import android.content.Context;import android.graphics.Typeface;\npublic final class FontsOverride {\n    public static void setDefaultFont(Context context,\n                                      String staticTypefaceFieldName, String fontAssetName) {\n        final Typeface regular = Typeface.createFromAsset(context.getAssets(),\n                fontAssetName);\n        replaceFont(staticTypefaceFieldName, regular);\n    }\nprotected static void replaceFont(String staticTypefaceFieldName,\n                                  final Typeface newTypeface) {\n    try {\n        final Field staticField = Typeface.class\n                .getDeclaredField(staticTypefaceFieldName);\n        staticField.setAccessible(true);\n        staticField.set(null, newTypeface);\n    } catch (NoSuchFieldException e) {\n        e.printStackTrace();\n    } catch (IllegalAccessException e) {\n        e.printStackTrace();\n    }\n}\n}\nMyApplication.java\nimport android.app.Application;\npublic class MyApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\nFontsOverride.setDefaultFont(this, \"DEFAULT\", \"fonts/Custom-Font.ttf\");\n    FontsOverride.setDefaultFont(this, \"SANS_SERIF\", \"fonts/Custom-Font.ttf\");\n}\n}\nres/values/styles.xml\n\n<!-- Base application theme. -->\n<style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n    <item name=\"colorPrimary\">@color/primary</item>\n    <item name=\"colorPrimaryDark\">@color/primary_dark</item>\n    <item name=\"colorAccent\">@color/accent</item>\n    <item name=\"android:typeface\">sans</item>\n</style>\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1167#issuecomment-141730183\n.\n\n\nMet vriendelijk groet,\nGerald Olivero\n+31634771782\ngeolivero.com\n. ",
    "vovaguguiev": "\n// Add a font family name associated to a font file in /assets\n  .addTypeFace(\"CustomFont\", \"Custom-Font.ttf\")\n\nDoes it work with 0.11.4? For me compiler cannot find this method on Builder instance\n. @corymsmith @satya164 Oh, I see. So there is no working solution for multiple custom fonts so far?\n. There is an open PR that aims to solve this problem. Hope it will be merged soon\nhttps://github.com/facebook/react-native/pull/3800\n. ",
    "fxhereng": "I just tried a new font using the @satya164 method and some words magically disappeared in my app, it seems that views doesn't calculate the sufficient space to display them. Does anyone have encountered the same problem?\n. ",
    "tje3d": "Here is how i get custom font working in four step:\n1- Copy TTF file to /projectdir/android/app/src/main/assets/fonts ( thanks to: https://github.com/facebook/react-native/issues/1167#issuecomment-161232815 )\n2- Delete these folders: projectfolder/android/.gradle + projectfolder/android/app/build ( thanks to: https://github.com/facebook/react-native/issues/1167#issuecomment-161250593 )\n3- Apply fontFamily to elements ( if your ttf file is yekan.ttf, your font family should be: fontFamily: 'yekan' )\n4- react-native run-android\n. @kunal95 yes\n. ",
    "kunsachdeva": "@tje3d so you didn't have to write any Java code for this?\n. @tje3d It worked! \ud83d\ude00 Thanks\n. ",
    "krokofant": "I used rnpm to fix this. It basically does what @tje3d described.\nIm specifying this in my package.json file\n\"rnpm\": {\n    \"assets\": [\"Fonts\"]\n}\nI've placed my fonts in the Fonts directory and then just run rnpm link\n. ",
    "JulianKingman": "Anyone know how to detect when the fonts are fully loaded? I noticed (at least in iOS simulator) that the font changes don't take effect for a few hundred milliseconds.. @sibelius so then would you recommend just having a setTimeout that refreshes every 10ms or so to check again, in order to update the component?. @brunobar79 I think because it uses the font's name, not the font's filename (PostScript name, as @a3diti pointed out). ",
    "petermikitsh": "I'm having some issues getting custom fonts working on Android (however, it works fine on iOS).\n\nI've installed my fonts in ./android/app/src/main/assets/fonts:\n\n\n\nMy project uses an abstract CustomText wrapper component, to ensure the custom font is applied everywhere. When applying the fontFamily, I follow the <filename>.ttf pattern mentioned by folks above. E.g., since my font file is named opensans.ttf, my fontFamily is opensans for the Android platform.\n\n\n\nI ran this (from root of react native project, to clear cached android stuff):\n\nrm -rf ./android/.gradle\nrm -rf ./android/app/build\ncd android && ./gradlew clean && cd ..\nThen ran:\nreact-native run-android\nHowever, my fonts still don't line up. I have it custom fonts functional on iOS, and you can see the comparison here:\n\nAny ideas as to what could be going wrong? I made sure I killed the packager before deleting the cached android files and re-starting the android simulator.\n. ",
    "johnmurphy01": "Same issue as @petermikitsh.\nReact Native v 0.35\nFont I'm trying to load is Gotham Ultra.ttf. I renamed to gotham_ultra.ttf and moved to ./android/app/src/main/assets/fonts\nI tried deleting the .gradle folder and re-running the packager and react-native run-android.\nI've tried every suggestion on this issue but nothing appears to work.\nIf it helps, I'm using a fork of https://github.com/start-react/native-starter-kit. Mine works now! I was adding the style to a single Input component, expecting the placeholder text to have the new font. However, it did not affect the placeholder text but did affect the actual typed text.. ",
    "aminebenkeroum": "I'm getting it working after removing fontWeight! Apparently, I have only 400 weight font. . ",
    "PolGuixe": "Is there a way that android can provide a list of available fonts and its font name?. ",
    "a3diti": "I was using OTF file font and having errors like font not found, for the fontFamily i was mistaken to use the Full name attribute at the font book, the correct one was PostScript name. ",
    "brunocascio": "I don't understand why iOS uses FONTNAME-some instead of FONT-NAME-some whether the file is FONT-NAME-some.ttf\nI've implemented a function in order to use fonts on both platforms.\n```\n// utils.js\nimport { Platform } from 'react-native'\n/\n * Add fonts compatibility across iOS & Android.\n \n * Examples:\n * + SF-UI-Display-Medium.ttf will:\n *    Android: SF-UI-Display-Medium\n *    iOS: SFUIDisplay-Medium\n * + Roboto-Medium.ttf will:\n *    Android: Roboto-Medium\n *    iOS: Roboto-Medium\n /\nexport default fontCompat = (fontFamily) => {\nif (Platform.OS === 'ios') {\n    return fontFamily.replace(/(.*)-/, (x) => x.replace(/-/g,'')+'-');\n  }\nreturn fontFamily;\n}\n```\n```\nimport { fontCompat } from './utils.js'\nconst myStyles = {\n   one: {\n       fontFamily: fontCompat('SF-UI-Display-Medium')\n   },\n   two: {\n       fontFamily: fontCompat('Roboto-Medium')\n   },\n}\n```\n. @JulianKingman I got it. Good catch, thanks!. ",
    "siejkowski": "You can use WebAudio directly as long as you execute JS code by the UIWebView or WKWebView interpreter.\nUnfortunatelly, for now RCTWebView/RCTWebViewManager doesn't have stringByEvaluatingJavaScriptFromString: exposed. There's also no WKWebView JS methods available. It might change soon - see https://github.com/facebook/react-native/pull/1191.\nSo the first step is to make a small component - either by subclassing RCTWebView/RCTWebViewManager or by wrapping WKWebView - that exposes JS execution.\nSecond step is to add such component to your app - it might be invisible if you don't want to present any HTML/CSS.\nThird step is to send WebAudio code to it. You can write WebAudio code directly, wrap it in function object and pass it by simple:\nfunction stringExecutableFunction(f) {\n    return \"(\" + f.toString() + \")();\"\n}\nOf course there are some limitations - you'll have to remember that you're executing WebAudio in a different context than the rest of the app, so for example the variables cannot be directly assigned from the outer scope. Either keep all the audio code in the WebAudio functions or do some kind of value interpolation. Not being a JS expert myself, I'm using placeholders for it right now. There's probably a better way - do you know it? :)\nI do have a working proof of concept, can push it if you're interested.\n. ",
    "ohayon": "+1\n. ",
    "pj4533": "@nicklockwood I'd be happy to try and rewrite it on the latest branch.  Does it make sense though, directionally, for this project? It does add complexity that is unnecessary for most uses.   I can accomplish this in my project using the same underlying mechanism that ReactNative does, but I really like how ReactNative has abstracted the executors (and obviously all the supporting helper functions)\n. ",
    "faithfe": "and how to hide the backButtonTitle in NavigatorIOS? thanks\n. thanks @brentvatne, it works!\nAnother question, i fail to  use uri to locate the icon, but use 'require' is ok:\nbackButtonIcon: require('image!back_button'),\nleftButtonIcon: {uri: 'http://xx/back_button.png'},\n. @ide , ok, tks!\n. @brentvatne    I  just use url (http:xxxx/xx/main.jsbundle) to locate  main.jsbundle file in app B, and not anything else.  So  should i cope the whole Images.xcassets directory from app A to app B?\n. ",
    "MossP": "Care to share your solution?\n. For anyone else, it looks like this is the solution. The fetch function was taken straight from here.\nhttps://github.com/github/fetch\n. Probably is a docs error. In the meantime you can wrap the inner elements in a view. I believe that the opacity is applied to that single child rather than cycling though each sub child element.\n. I believe you are right. Thank you :)\n. Hi @iostalk. I am implementing the menu by using @brentvatne's modal plugin then passing a complete collection of stylds into it (take a look at the modalstyle included in the the source).. you can then pass in the screen coordinates (derived from @johnydays code) that you'd like the modal window to show based on the size of your modal / touchable object.\n. Thanks @brentvatne I'll try that out, thank you :) :+1: \n. ",
    "timdoes": "+1 for this feature\n. This is working great in the background. The only time it stops running is when the display is off. If I press the home button, it starts running again (even while locked) but as soon as the display goes black again, it stops running.\nMy code is the same as the React Native - Geolocation Example (with the added permissionTypeIOS: 'always').\nAny ideas why this is happening? I will provide more details if needed.\nThanks! Love this!\n. My background mode declaration:\n<key>UIBackgroundModes</key>\n<array>\n    <string>fetch</string>\n    <string>location</string>\n    <string>remote-notification</string>\n</array>\nDoes this need to be used with a custom library class and bridged to React Native?\nSorry if this is a rookie question. Just thought this would add full background capabilities by just declaring the background mode and using the https://facebook.github.io/react-native/docs/geolocation.html example.\n. ",
    "stubbornleaf": "Checkout the controlled prop here. Setting it to true will make your case work.\n. ",
    "gpfunk": "I'm pretty sure this component can handle what you need... https://github.com/Kureev/react-native-navbar\n. ",
    "tonyhb": "@ide done :) made me laugh as autocomplete suggested wiew.\n. So one of the easy solutions is, in PickerIOS.js, wrapping RCTPicker in a view like so:\njs\n  render: function() {\n    return (\n      <View style={this.props.style}>\n        <View style={{flex: 1, flexDirection: 'column'}}>\n          <RCTPickerIOS\n            ref={PICKER}\n            style={styles.pickerIOS}\n            items={this.state.items}\n            selectedIndex={this.state.selectedIndex}\n            onChange={this._onChange}\n          />\n        </View>\n      </View>\n    );\n  },\nIt's an unexpected wrapper and band-aid though.  Just haven't been able to pinpoint the relationship between flexbox and the RCTPicker view to figure out the issue.\n. ",
    "ericflo": "Noticing a lot of these after the upgrade to 0.4.3; whereas before I only saw it occasionally, now it's crashing often.\nThe stack trace of the crash varies -- sometimes it's \"!!! _NSGlyphTreeInsertGlyphs invalid char index\", other times it's \"_NSBlockNumberForIndex(): index (0) beyond array bounds (0) raised during typesetting layout manager\"\n. ",
    "itsananderson": "True for a typical scenario, but I've been experimenting with downloading bundles into the app's writable filesystem, and then loading them from there.\nobjective-c\nNSString* appName = @\"foo\";\nNSString* home = NSHomeDirectory();\nNSString* playerAppPath = [home stringByAppendingPathComponent:@\"PlayerApps\"];\nNSString* appBundleName = [appName stringByAppendingString:@\".jsbundle\"];\njsCodeLocation = [playerAppPath stringByAppendingPathComponent:appBundleName];\nIn that case, where I'm essentially loading an app from an arbitrary path, I don't think there's currently a way to get the packager to serve that file.\n. ",
    "dashed": "Here: https://github.com/facebook/react-native/commits/master\n. ",
    "mnmaraes": "Yes, the same thing is happening to me on a brand new project.\n. ",
    "skyline75489": "Yep, brand new project created by react-native init.\n. I also fixed it using the method @cparmar82 suggested. While reinstalling watchman, the pcre dependency was upgraded from 8.36 to 8.37. Maybe this has something to do with the error?\n. +1. \n. ",
    "danilowanner": "@cparmar82\u2019s method worked for me too. Thanks!\n. ",
    "kyledetella": "This is happening for me as well.\n. ",
    "droid-mind432": "i'm having a same issue\n. ",
    "ladas-larry": "I was using  0.4.1, lately even 0.4.2. I'm running OS X 10.9.5 (13F1077) and xCode 6.2 (6C131e).\n. @GertjanReynaert thanks\n. rgba works for me :+1: \n. ",
    "sharathprabhal": "Try restarting the iOS Simulator. That helped in my case.\n. > I would even go further and suggest adding a new page in the docs that compares between Navigator and NavigatorIOS.\n^ +1\n. (bump)\n. Found a workaround. Looks like using nested NavigatorIOS results in this. Instead, I replaced the top level nav with Navigator, since I did not need the iOS style back swipe for the top nav.\nSee diff at https://github.com/sharathprabhal/TestNavigatorIOS/pull/1/files\nWhat is the purpose of the Navigator when developing an iOS app? Will it eventually replace NavigatorIOS? Will iOS style back swipe gesture be added to Navigator Any roadmap type info will be helpful here. Thanks!\n. See above comment. I solved it by using Navigator for top level navigation\n. ",
    "kejinlu": "@nimingzhe Have you  import React/RCTImage pod \n. React Native \"Native UI Components (iOS)\" Guide \ncall requireNativeComponent before  propTypes \uff0cThen will experience this error\n```\n// MapView.js\nvar React = require('react-native');\nvar { requireNativeComponent } = React;\nclass MapView extends React.Component {\n  render() {\n    return ;\n  }\n}\nvar RCTMap = requireNativeComponent('RCTMap', MapView);\nMapView.propTypes = {\n  /*\n   * When this property is set to true and a valid camera is associated\n   * with the map, the camera\u2019s pitch angle is used to tilt the plane\n   * of the map. When this property is set to false, the camera\u2019s pitch\n   * angle is ignored and the map is always displayed as if the user\n   * is looking straight down onto it.\n   /\n  pitchEnabled: React.PropTypes.bool,\n};\nmodule.exports = MapView;\n```\n. Should I close the request? \n. @ide @sahrens  I found another problem ,the \"component.displayName\" in the verifyPropTypes  code always be undefined. Should set component.displayName with some value manually in the previous context?Or just  use  \"component.name\"\n. ",
    "mintuz": "To add to this I have found out that the block for Discovery library isn't called multiple times until you close the app and reopen it. It does however work if its not called within a React Native environment. Looking at the Discovery library the only things that I think could be breaking with React Native are the timers and queues that are being set. Any help would be appreciated. \n. The timers don't seem to fire until the app is closed and reopened. \n. I know NSTimers work without the use of React Native within a standard native app.\n. @jaygarcia If you put a NSLog in your bridge where the event is also triggered, does the output display but the event not fired if the screen is turned off? I'm not having the events queue up, they just don't fire.\n. I do have nano set to my Shell Editor. and it only spikes at 95% CPU when I use React Native on the simulator.\n. ",
    "nigeman": "+1 the documentation needs to be clearer. PS good work guys so far..\n. @ide A quick silly question. But is it possible to not use: \n\nin the Navigator navigationBar param? The reason is. I want to create a list of tabs and have access to the Navigator Context so I can use navigator.push without using the standard NavigationBarRouteMapper\n. ",
    "richardscarrott": "+1\n. ",
    "mitchozer": "+1, thanks!\n. ",
    "reconbot": "Looking forward to see this land. :+1: \n. ",
    "yusefnapora": "The last commit adds automatic registration of the binary containing the main() function, since I encountered an issue when trying to link against a static library containing a native module. Since my app binary didn't define any native modules, it was never being registered as a \"module provider\".  The library was being registered, but the linker was relocating the __DATA sections for RCTExport, etc. to the app's binary, and they weren't being discovered.\n. The UIAlertView slips through because it's using init instead of the blacklisted initWithTitle:message:etc... selector.  As far as I can tell, the NS_EXTENSION_UNAVAILABLE_IOS compiler flag just applies to method selectors, so we can work around flagged initializers by just calling init (or new), which is too generic to be flagged.\nI think (but could be mistaken) that performSelector and ARC are only problematic if the selector isn't known at compile time (i.e. you're using NSSelectorFromString or something).  Xcode is apparently smart enough to determine the return type and apply the correct ARC rules when you use @selector(selectorName), but not smart enough to apply the extension API blacklisting.\n. ",
    "mebinum": "following this, will this mean I could create a Framework in swift and include in my project? At the moment I'm trying to do that and getting Class ... was not exported. Did you forget to use RCT_EXPORT_MODULE()?\n. Awesome @yusefnapora look forward to this getting merged. Anyone know what the ETA on that is?\n. ",
    "BlooJeans": "Also experiencing this issue, hardcoding the height fixes it for me\n. ",
    "iktw": "I encountered the same problem. How do I solve this?\n. ",
    "pukhalski": "Are you looking for navigator.pop() line of code?) Mkay, honestly I have a pretty much comprehensive usage of navigator within my router module. Anyway, here it goes:\n``` jsx\n'use strict';\nvar React = require('react-native');\nvar Scene1 = require('../scenes/Scene1');\nvar Scene2 = require('../scenes/Scene2');\nvar {\n  Navigator\n} = React;\nvar Router = React.createClass({\n    displayName: 'Router',\nprevState: {},\n\ngetInitialState() {\n    return this.states()['sceneState1']();\n},\n\ngo(path, data) {\n    var routes = this.navigator.getCurrentRoutes();\n    var route = {\n        path: path, \n        data: data, \n        index: routes.length\n    };\n\n    if (routes[routes.length - 1].path === path) {\n        return false;\n    }\n\n    this.navigator.push(route);\n    return true;\n},\n\nback() {\n    this.navigator.pop();\n},\n\n\nstates() {\n    return {\n        scene1: () => {\n            return {\n\n            };\n        },\n\n        scene2: (route) => {\n            return {\n\n            };\n        }\n    }\n},\n\nviews() {\n    return {\n        scene1: (route, navigator) => {\n            return (<Scene1 router={this} />);\n        },\n        scene2:  (route, navigator) => {\n            return (<Scene2 router={this} />);\n        }\n    }\n},\n\n_beforeTransition(route) {\n    var path = route.path || '';\n\n    if (typeof this.states()[path] === 'function') {\n        this.prevState = this.state;\n        this.setState(this.states()[path](route));\n    }\n},\n\nrender() {\n    return (\n        <View style={{flex: 1}}>\n            <Navigator\n            onWillFocus={this._beforeTransition}\n            initialRoute={{index: 0, path: 'scene1'}}\n            renderScene={\n                (route, navigator) => {\n                    if (!this.navigator) this.navigator = navigator;\n\n                    if (typeof this.views()[route.path] === 'function') {\n                        return this.views()[route.path](route, this.navigator);\n                    }\n                }\n            }\n            />\n        </View>\n    );\n}\n\n});\nmodule.exports = Router;\n```\n. @pwmckenna, Am I understanding correctly that the issue is valid and appears not only for me? Because one of my assumptions was that the problem is with my router module itself.\n. Perfect! Thanks!\n. Forgot to install watchman. Sorry.\n. ",
    "ButuzGOL": "@ide Thanks works fine \n. ",
    "wan54": "React Packager has to be started once per app and cannot be shared with another one.\nIf you see the same error: simply restart React Packager\n. ",
    "dsibiski": "This one was a tough one to spot...Item & Icon look very much the same.\n. Hey guys, @vjeux mentioned that there is a fix in the works. The .xcodeproj got ignored by .hgignore.\n. @myusuf3 AFAIK, they are working to get it back to an .xcodeproj library as it was before...that's based on a brief conversation I had with @vjeux earlier today. That could very well change. I believe @ide is working on a solution right now and there is an even better solution planned for the future in this Pull Request: #485\n. @gaearon No problem! I'm glad it helped someone. :)\n. @nicklockwood I made them constants mainly because we have to use them in both RCTTextField & RCTTextView, I didn't want that duplication. Also I added them because I thought they were more explicit that their string values. I'm not married to this though and can remove them if preferred.\n. @nicklockwood I made them constants mainly because we have to use them in both RCTTextField & RCTTextView, I didn't want that duplication. Also I added them because I thought they were more explicit that their string values. I'm not married to this though and can remove them if preferred.\n. Ah nice! This was definitely the portion of this feature that I felt bad about not working correctly. Hopefully it works out with his fixes. Thanks.\n. Ah nice! This was definitely the portion of this feature that I felt bad about not working correctly. Hopefully it works out with his fixes. Thanks.\n. True, it's best to use RCTSettings for this simple use case. My lib will end up being used for those who need to use custom suites.\n. I think a single column here would be better as it would be easier to edit/add others to the list if needed. Also, perhaps it can just be named \"reserved-words.js\", or something similar, especially since \"React\" is in there. \n. I think a single column here would be better as it would be easier to edit/add others to the list if needed. Also, perhaps it can just be named \"reserved-words.js\", or something similar, especially since \"React\" is in there. \n. Please also add a trailing comma here (and on the author line) as that is one of the RN standards as outlined here: https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#general Thanks!\n. Please also add a trailing comma here (and on the author line) as that is one of the RN standards as outlined here: https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#general Thanks!\n. linkStore isn't supported, please use link\n. @grabbou Yeah, it actually looks like there are quite a few in this file without trailing commas. Also, it looks like the indenting in this PR is only 1 space, @mozillo please make sure to correct that as well. Thanks!\n. Can you please add a trailing comma here? As per the styleguide: https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#general\n. @rlog Can you please move this down to the \"Apps\" section, since the \"Featured\" section is reserved. Thanks!\n. @rlog Can you please move this down to the \"Apps\" section, since the \"Featured\" section is reserved. Thanks!\n. Please add a trailing comma here, thanks! \ud83d\udc4d \n. Sorry, one more nit pick, please add a trailing comma here.\n. Sorry, one more nit pick, please add a trailing comma here.\n. Indenting here is still only 1 space, please change to 2.\n. You had a comma here before and now you removed it! haha \ud83d\ude04 \nPlease add it back as every object/array should have trailing commas as per the style guide. https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#general\n. You had a comma here before and now you removed it! haha \ud83d\ude04 \nPlease add it back as every object/array should have trailing commas as per the style guide. https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md#general\n. Please add a trailing comma here.\n. Please add a trailing comma here.\n. ",
    "bolasblack": "@umhan35 I tried the way you said, not work for me :(\n. @umhan35 You can see my code: CoffeeScript, Objective-C, I have tried this :(\n. @umhan35 I tried just now, but nothing changed :'(\n. I found the reason:\n\nThe UIView and UISearchBarBackground frame size become 0, 0, 0, 0, then I changed my code:\n``` objc\n- (UISearchBar )view\n{\n  UISearchBar searchBar = [[UISearchBar alloc] init];\nUIView *subUIView = searchBar.subviews.firstObject;\n  CGRect screenRect = [[UIScreen mainScreen] bounds];\n  [subUIView setFrame:CGRectMake(0, 0, screenRect.size.width, searchBar.intrinsicContentSize.height)];\n  [subUIView.subviews.firstObject setFrame:CGRectMake(0, 0, screenRect.size.width, searchBar.intrinsicContentSize.height)];\nreturn searchBar;\n}\n```\nThe issue resolved.\n@brentvatne Maybe it's a bug of react-native?\n. ",
    "wim82": "Somehow i've hit the same issue. But by restarting the packager.. after doing some updates. \n. More info: it happened after setting \"latest\" as the version for react-native. When i set it to 0.4.1 everything is fine again.\n. ",
    "ojkelly": "Hey @a2 sorry for the delay, I was away.\nI've removed that newline, and added an example. After looking at both NavigatorIOS examples, I thought NavigatorIOSColorsExample.js made the most sense to put it. I can move it if we need though.\n. I'm pretty certain this affects the font family of the left and right buttons as well, so I don't know if titleFontFamily would be applicable?\nI can test this and confirm for you if this will affect more than just the title.\n. Just tested, it appears to only affect the title. I must have been playing with some other title.\nI'll get that changed and update the PR.\n. ",
    "cloud8421": "Thanks for the clarification, I'll keep it in mind.\n. ",
    "dev-rkoshlyak": "thank you @joeferraro \n. @brentvatne - that's what I do now, but it is kind of inconvenience to modify this file every time I add or change name of the file/class. \n. ",
    "xavibonell": "@joeferraro I'm trying to use your cookie manager, everything is in place, I require it successfully, but when I try to call any method on the object CookieManager it throws this error: Error: Cannot read property 'getAll' of undefined\nThis is my code:\n    var React = require('react-native');\nvar CookieManager = require('react-native-cookies');\nconsole.log(CookieManager);\nCookieManager.getAll((err, res) => {\n        console.log('cookies!');\n        console.log(err);\n        console.log(res);\n     });\nIs weird cause CookieManager is defined, since it gets logged properly in the console, with all its methods.\nAny idea where I went wrong?\n. ",
    "0x0ece": "Thanks for the prompt update.\nNot sure if it could simplify, but I guess that having min/max height only for Text could already be a big step forward. Also, having just one of two, as most of the time you can work on a dual problem.\nMy use case, for instance, is a view with an image and a text hidden behind. On click, I want to bring the text in front and the image behind.\nWhen text is behind, I can force height and overflow so that it doesn't overflow the image size.\nWhen text is in front, however, I'd like to show the full text (even when very long), but setting a minimum height if too short, to avoid a text box too small.\nI tried both setting the height (but this crops a text too long) or leaving it auto (but this creates a small text box if the text is too short).\nAs I was mentioning, either min-height or max-height, and just on Text could solve the problem.\nEdit: reworded the use case/problem to make it more clear (see later comments)\n. Sorry, I explained in a confusing way.\nWhen text is in front, I'd like to show the full text without truncating it (even when very long), but I'd like to set a minimum height if it's too short, to avoid a text box too small.\n(editing also the previous comment to improve readability)\n. All right, I'll wait a few more commits then retry... anyway, the steps above should repro pretty easily.\n. ",
    "zhangkaiyulw": "But I still get errors when creating a project\n```\nreact-native init AwesomeProject\nThis will walk you through creating a new React Native project in /Users/name/Desktop/AwesomeProject\nnpm WARN locking Error: EACCES, open '/Users/name/.npm/_locks/react-native-e53005cf953a3657.lock'\nnpm WARN locking     at Error (native)\nnpm WARN locking  /Users/name/.npm/_locks/react-native-e53005cf953a3657.lock failed { [Error: EACCES, open '/Users/name/.npm/_locks/react-native-e53005cf953a3657.lock']\nnpm WARN locking   errno: -13,\nnpm WARN locking   code: 'EACCES',\nnpm WARN locking   path: '/Users/name/.npm/_locks/react-native-e53005cf953a3657.lock' }\nnpm ERR! Darwin 14.4.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"install\" \"--save\" \"react-native\"\nnpm ERR! node v0.12.2\nnpm ERR! npm  v2.9.1\nnpm ERR! Attempt to unlock /Users/name/Desktop/AwesomeProject/node_modules/react-native, which hasn't been locked\nnpm ERR! \nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     https://github.com/npm/npm/issues\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/name/Desktop/AwesomeProject/npm-debug.log\nnpm install --save react-native failed\nlocalhost:Desktop 1$ sudo react-native init AwesomeProject\nPassword:\nThis will walk you through creating a new React Native project in /Users/name/Desktop/AwesomeProject\nnpm WARN engine stacktrace-parser@0.1.1: wanted: {\"node\":\"~0.10\"} (current: {\"node\":\"0.12.2\",\"npm\":\"2.9.1\"})\n\nws@0.4.31 install /Users/name/Desktop/AwesomeProject/node_modules/react-native/node_modules/ws\n(node-gyp rebuild 2> builderror.log) || (exit 0)\n\n```\n. What does this for? Why adding trailing comma?\n. ",
    "valgaze": "@cheunghy If you're getting stuck try these steps as a completely fresh start:\nFirst things first: Assuming you have Xcode, type this into your terminal:\nshell\nxcode-select -p\nIf it returns any other than a valid path, install command line tools by typing in shell xcode-select --install\n\n1) Install homebrew by typing  \nshell\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n2) Confirm homebrew is properly configured by typing\nshell\nbrew -v && brew doctor\n3) Install npm & node: \nshell\nbrew install node\n4)  Confirm npm & node were installed correctly by typing\nshell\nnode -v && npm -v\n5) Install watchman\nshell\nbrew install watchman\n6) Install react command line tools by typing \nshell\nnpm install -g react-native-cli\n7) CD into a different directory and then type \nshell\nreact-native init AwesomeProject\nIf all is well you might get a warning or two about node version numbers but the process should finish after a minute or two.\nHope that helps!\n. ",
    "crucialfelix": "I have related broken issues with 0.4.3\nXCode is saying RCTWebSocketDebugger.xcodeproj has Workspace Integrity error, Couldn't load project\nOpening it manually gives an alert informing us that:\nProject /Users/crucial/code/bathyscaphe-react/node_modules/react-native/Libraries/RCTWebSocketDebugger/RCTWebSocketDebugger.xcodeproj cannot be opened because it is missing its project.pbxproj file.\nAnd my own project fails to build due to linker errors related to RCTWebSocketExecutor which it is executing.\nI'm guessing that its been removed deliberately but our old projects still have them referenced.\n. You probably did the same thing as me and updated your react-native for an existing project.\nWe just need to remove it from our projects\nYourProject > Libraries > RCTWebSocketDebugger [should be a blue xcodeproj icon]\nRight click on it and delete it.\nBuild succeeded !\n. ",
    "xinthink": "How can I link the RCTWebSocket library? There's no xcodeproj under the WebSocket directory?\n. It doesn't work, there's no . xcodeproj under the WebSocket directory.\nbut I managed to make one myself, and then linked it to the app project, so it works now.\n. ",
    "myusuf3": "@dsibiski so adding that websocket folder wasn't long term solution?\n. @myusuf3\n. @myusuf3\n. @VonD how do we go about fixing this orientation issue? The changes you made edit the react objc code? is there a fix without doing that?\n. @VonD how do we go about fixing this orientation issue? The changes you made edit the react objc code? is there a fix without doing that?\n. @VonD is there a fix in 0.6.0?\n. Turns out this fix doesn't solve my issue here #1845 any ideas @ide its blocking a release for us. I was simply following the suggestion posed here #1567 \n. Turns out this fix doesn't solve my issue here #1845 any ideas @ide its blocking a release for us. I was simply following the suggestion posed here #1567 \n. @ide I am saying that this doesn't work for all images either, I am still looking for a solution to this problem. I am not sure what is actually happening.\n. @ide I am saying that this doesn't work for all images either, I am still looking for a solution to this problem. I am not sure what is actually happening.\n. ",
    "alex-espinoza": "Thank you @jmstout your post cleared up everything. I wasn't aware that there was an example project for the UIExplorer. I appreciate the explanation!\n. ",
    "jimmystridh": "Perhaps obfuscating the usage with NSClassFromString could be a workaround as not to trigger the automated detection.\n. ",
    "sdd330": "Ok, got it\n. For testing purpose maybe\n. ",
    "wwxiaofeng": "use event.nativeEvent.selectedSegmentIndex\n. ",
    "donghanji": "thanks everyone ^_^.sorry to being late.\nchange the code ,like this:\n\nvar EventSegmentedControlExample=React.createClass({\n  getInitialState(){\n    return {\n      values:['One','Two','Three'],\n      value:'Not selected',\n      selectedIndex:undefined\n    };\n  },\n  render(){\n    return(\n      <View>\n        <Text style={styles.text}>\n          Value:{this.state.value}\n        </Text>\n        <Text style={styles.text}>\n          Index:{this.state.selectedIndex}\n        </Text>\n        <SegmentedControlIOS\n          values={this.state.values}\n          selectedIndex={this.state.selectedIndex}\n          onChange={this._onChange}\n          onValueChange={this._onValueChange}\n        />\n      </View>\n    );\n  },\n_onChange(event){\n    console.log(event.nativeEvent);//debug console log here\n    this.setState({\n      selectedIndex:event.nativeEvent.selectedSegmentIndex\n    });\n  },\n  _onValueChange(value){\n    this.setState({\n      value:value\n    });\n  }\n});\n//\n\nafter changed ,it work well.\nWhether those changes  should be updated\uff0chttp://facebook.github.io/react-native/docs/segmentedcontrolios.html#content\nthanks everyone again.\n. ",
    "smothers": "Thanks @sahrens. I ended up using kirkness/react-native-tween-animation. It's not 60fps, but it works as a band-aid.\n. Thanks @sahrens. I ended up using kirkness/react-native-tween-animation. It's not 60fps, but it works as a band-aid.\n. ",
    "likezero": "my god, item 1 and 2 are opposite to mine..\n. @christopherdro  it's not work...\n. ",
    "hongru": "We just implement a waterfall listview. \nchecking whether the scrollview reached the bottom by RCTViewManager.measureLayout.\nthen fetch data for next section list and try to merge data to the dataSource of ScrollView.\nAs the dataSource changed by setState , the scrollView will be rerendered.\nBut in this case, the scrollview will be complete rerendered everytime when you merge data to dataSource. \nI have no better idea to implement this\n. We just implement a waterfall listview. \nchecking whether the scrollview reached the bottom by RCTViewManager.measureLayout.\nthen fetch data for next section list and try to merge data to the dataSource of ScrollView.\nAs the dataSource changed by setState , the scrollView will be rerendered.\nBut in this case, the scrollview will be complete rerendered everytime when you merge data to dataSource. \nI have no better idea to implement this\n. ",
    "psbanka": "Anything that crashes loudly would be perfect. Sounds good :+1: \n. Thank you!\n. ",
    "DaZzz": "Try setting the same borderRadius property to TouchableHighlight. \n. Try setting the same borderRadius property to TouchableHighlight. \n. ",
    "aaronschubert0": "+1\n. ",
    "masonicboom": "@arunshan can you post some code that exposes the issue you're seeing?\n. @a2 What does that mean? Does that line have a mistake?\n. ",
    "zubru": "Could you provide some quick example how to correctly setup FormData and use it with fetch? I'm trying to use it but getting error Unsupported BodyInit type in support.FormData.\n. ",
    "jbttn": "I didn't know about the reflow issue, learn something new everyday.  You're right, this wouldn't be a good solution due to that issue.\nWhat you propose sounds like a solution similar to message handlers which WebKit supports and this library for UIWebViews.  I agree, a more general way to message between the web view and react would be helpful.  That goes beyond the scope / idea of what I had in mind with this PR, perhaps a new issue should be opened?\n. ",
    "nparsons08": "You could use preprocessing like http://6px.io\nOn Tue, May 26, 2015 at 8:52 AM Iragne notifications@github.com wrote:\n\nAs soon as you load big image in a list you get this problem i will\ninvestigate more.\nI solve in a way this issue on Library Asset #1406\nhttps://github.com/facebook/react-native/pull/1406\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1360#issuecomment-105551537\n.\n. Totally agree. I have an application that will be loading several hundred.\nWould love to see a fix for this. +1.\nOn Tue, May 26, 2015 at 8:59 AM Iragne notifications@github.com wrote:\nyes if you want it will work.\nBut i think we should implement it in react\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/issues/1360#issuecomment-105553605\n.\n. \n",
    "jackylimel": "@tadeuzagallo Yes, I can reproduce it constantly\n. ",
    "TYRONEMICHAEL": "Ok great. I think my best bet would be wrapping the scroll view in a container view whose job it is to intercept touches and hand them off to the scroll view? That way I can resize the scroll view while still being able to scroll outside of the scrollView.\nBy the way RN changes the game. Awesome stuff.\n. I guess then my question is how do I pass down touches to a child component. So how can I let the ScrollView inside of a View become the responder?\n. No worries, I think I came across a solution when I started looking at the source of the following react-native project => https://github.com/appintheair/react-native-looped-carousel/blob/master/index.js.\nBy looking at the source I noticed a few properties not covered in the documentation for the ScrollView:\n- onScrollBeginDrag\n- onMomentumScrollEnd\n- onScroll\nI don't see the events covered in the gesture-responder-system as well. Sorry if I am missing something.\n. No worries, I think I came across a solution when I started looking at the source of the following react-native project => https://github.com/appintheair/react-native-looped-carousel/blob/master/index.js.\nBy looking at the source I noticed a few properties not covered in the documentation for the ScrollView:\n- onScrollBeginDrag\n- onMomentumScrollEnd\n- onScroll\nI don't see the events covered in the gesture-responder-system as well. Sorry if I am missing something.\n. ",
    "mnylen": "Also having this problem. At least U+2028 (line separator) character in http response body seems to cause this. By cleaning that character from the response on server side, the callback is called normally.\n. U+2029 (paragraph separator) also causes this\n. Weird thing is, it seems to work with those characters present when debugging in chrome, but with the debugger off, the then() callback of fetch is never called.\n. ",
    "hzoo": "And from Travis - not sure what can be done about this?\nbash\n/Users/travis/build/facebook/react-native/node_modules/jstransform/node_modules/commoner/test/source/widget/share.js: WidgetShare\nDuplicate module provider\n/Users/travis/build/facebook/react-native/node_modules/babel-eslint/node_modules/babel-core/node_modules/regenerator/node_modules/commoner/test/source/widget/share.js:\n. Ah ok!\nFor the quotes I guess that's what jsx-quotes enforces correctly.\nAnd I guess the extra args shouldn't be warning since \"no-unused-vars\": [1, {\"vars\": \"all\", \"args\": \"none\"}] shouldn't check for arguments..\n. No this just fixed a few of the lint errors but that can be done seperately - will close.\n. I should of made a comment for that sorry (or just remove it).\nIt's replaced with \"react/jsx-uses-vars\": 1, in line 54 because of issues with jsx/eslint. ESLint isn't supporting it so it's recommended to use eslint-plugin-react\n\nESLint supports only the JSX syntax not the semantic of react. http://eslint.org/blog/2015/03/eslint-0.17.0-released/\n\nhttps://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md\nhttps://github.com/eslint/eslint/search?q=no-unused-vars+for+jsx&type=Issues&utf8=%E2%9C%93\n. Ah ok - good to know xd - will add it back. Probably need to use these rules at some point instead of just recommending it.\n. ",
    "threepointone": "I have a similar problem inside office, and have a workaround (run in terminal) -  git config --global url.\"https://\".insteadOf git://\n. This is fixed in 0.6.0-rc with this commit https://github.com/facebook/react-native/commit/769efdfcefd55cfed4fc16752e06bea1e7604a00\n. really odd. I'm not able to reproduce this anymore (moved from 0.4.4 > 0.6.0-rc in the last couple of days, so maybe that's why). I was clearly seeing that window was not defined, and the node condition would fail, so onFrame would be undefined. \nFollowup question - surely we can do faster than 60fps on react-native? \nI'll mark this bug as closed, sorry for the trouble. \n. I tried this \njs\nrebound.util.onFrame = function(callback) {\n  window.setTimeout(callback, 1000 / 120);\n};\nand it works well :) I haven't tried it with anything heavy yet, will report back after a day or so. \n/cc @willbailey \n. one last followup - looks like on RN, rebound taps into RN's requestAnimationFrame, and as such, is super performant. \n. ",
    "jaywalklabs": "any plans for get this fix in for 0.5?\n. using the workaround in 1644\nvar Dimensions = require('Dimensions');\nvar windowSize = Dimensions.get('window');\nand then using width: windowSize.width in its parent element seems to be a good enough solution. \nif this is the standard going forward, I suggest mentioning the width requirement in the docs.\n. ",
    "acorscadden": "I'm in the process of implementing something like this. I have an existing app and I'm implementing a new feature by embedding an RCTRootView..\nThe main issue that I've run into so far is that when an RCTRooView is embedded into a native scrollview, they don't play nicely together. With a fully native implementation, a scrollview will only send touches to its subviews if the scrollview isn't scrolling. TouchableHighlights within the RN view seem to avoid this somehow and it's impossible to drag over the RN view without pressing its buttons.\n. ",
    "mxstbr": "After further investigation, this issue has nothing to with react native/watchman. No build tool is working, and it is the FSEvents Bug, as explained in great detail here: https://github.com/bdkjones/fseventsbug/wiki/realpath()-And-FSEvents (and, for 5 years of discussions about this bug, look here: https://github.com/thibaudgg/rb-fsevent/issues/10)\nThere is currently no real fix for it, but I expect Apple will fix it with one of the major OSX updates in the future. Closing this issue, but pinging @brentvatne and @amasad. Read through the post above, this issue might come up again. Cheers!\n. ",
    "uber5001": "In my case, I init the project:\nreact-native init AwesomeProject\ncd AwesomeProject\nnpm install reflect-metadata\nand add this line below the first require in index.ios.js:\nrequire('reflect-metadata');\nWhich causes the error described above when run in XCode, and debugging in Chrome\nThis error can be fixed by adding newlines:\nfind node_modules/reflect-metadata -name \"*.js\" -type f -exec sed -i '' -e '$a\\' {} \\;\n. I'm using: \nreact-native-cli@0.1.3\nreact-native@0.4.4\nThese are the most recent versions on npm.\n. I'm now at:\n\"dependencies\": {\n    \"react-native\": \"^0.5.0-rc1\",\n    \"reflect-metadata\": \"^0.1.0\"\n}\nNothing seems to have changed. Still getting the error when reflect-metadata hasn't been modified with new newlines at the ends of its .js files.\n. Yup. Either refreshing or closing it works.\n. ",
    "jaulz": "Unfortunately I face the same issue. Upgraded to the latest version from git today and since then I have no idea how to fix it. @amasad: this version should already have babel or am I wrong? \n. Same issue here after upgrading to 0.6.0-rc. I still try to find out whether the project files must be changed as well but haven't figured anything specific out yet.\n. Sorry but I found the issue. I was in debug mode and didn't see (neither expected) that Chrome asked me for the corresponding authorization to access my location. After accepting this my callbacks were fired. Though shouldn't the error callback be triggered anyway after the timeout was reached?\n. ",
    "bright-sea": "@brentvatne  - set url or html to a local html file isn't what I want. What I need is to put some js files( orcss files or any other web assets) into bundle, then in html template we can use these files so that we can do any kinds of works from there.\n@JohnyDays  - Thanks, your suggestion helps me. I use react-native-fs to get the path of main bundle, then use list below code and it works fine:\n<script src=\"file://${mainBundlePath}web/jquery.js\"></script>\nOf couse, if we can have this kinds of support in react native directly instead of depends on third party module would be great. \n. @brentvatne yes, you are right! Your proposal will be more elegant.\n. ",
    "ThomWright": "@browniefed Hit me up if you work on some React ART documentation, I'd be glad to help. I've been using it too and finding the lack of documentation frustrating.\n. ",
    "kayluhb": "@brentvatne CLA signed\n. ",
    "ivanbabanov": "I saw the same behavior on iPhone4 and iPad2. I think it's caused by hardware performance. I saw that animation is implemented as KeyFrame animation and I saw very slow frame rate on device when Animation was started.\n. ",
    "euforic": "@jtremback you can just use the babel cli tool directly to pre-compile, but being able to do this directly in the react-native packager would be much nicer.\nBelow is an example script I added to my package json to do this.\n$ ./node_modules/.bin/babel ./src/ --out-dir ./lib/ --stage 0 --ignore '/node_modules/' --optional runtime --watch &\nThen just make your index.ios.js like this:\njs\nrequire('./lib');\nOne thing to note: Sometimes the react packager runs after the babel compile so you need to save twice to see your changes.\n. @jtremback @alinz I hacked together some of my build scripts into a makeshift cli tool if you guys are still looking for a fix. It's definitely not my best work but It has been getting me by until es6 modules work in the packager.\nGithub: bh5-js/rctapp\nNPM: rctapp\nIt can do the following:\n- Run Babeljs transpiler\n- Start React Native Packager / Server\n- Builds Xcode project\n- Install App on iOS Simulator\n- Launch App on iOS Simulator\n. ",
    "scyankai": "+1\n. ",
    "wingofshadow": "I hide the tabbar with toggle the hidden property of the tabbar in tabBarController,but when i swipe back,the animation effect in tabbar disappears.Looking forward to a better hack.\n. ",
    "stan229": "I'm seeing a similar issue. I wonder if it has something to do with ES6 class usage?\n\n. Is there anywhere I can set breakpoints to see if JavascriptCore is failing on some bit of code? Not seeing anything in the console output of Xcode.\n. I'm not sure if I'm hunting in the right place but I tried to set some breakpoints on javaScriptDidLoad and bundleFinishedLoading in RCTRootView. They only fire after I enable Chrome debugging. \nI thought it was could have been my simulator settings forcing debugging so I reset the sim, but still seeing the same results.\n. Turns out it was a const keyword! \nIf you look at this page you'll see that const in strict mode is not supported by iOS 8 (JavascriptCore).  It does work if you're not using strict mode. In my case, I was in strict mode.\nhttps://kangax.github.io/compat-table/es6/#ios8\n@mikelehen see if you're using that anywhere.\n. @jaygarcia can't close as I kind of hijacked @mikelehen original post. Hopefully this thread helps him out.\n. ",
    "srameshr": "node 0.10.30 \nreact-native the latest version\nI dont get any warnings what so ever while creating\nXCode 5.1.1\n. ",
    "jeanregisser": "Ok good! I'm closing this then.\n. The fix for this is available from 0.6.0-rc\n. Wild guess, did you turn on slow animations on your simulator?\n. Updated thanks.\n. ",
    "silentcloud": "I'm also getting this warning\n. ",
    "eljago": "I'm getting this when scrolling vertically a ListView that's inside an horizontal ScrollView\n. ",
    "gyzerok": "Same problem here. I guess making migrations manually is real overhead for the developer. Especially since React Native is now in the early stage with frequent updates.\n. ",
    "adamkrell": "@paramaggarwal Thanks for pointing me in the right direction. I updated the PR to use an enum for the mapType property. I also updated my example project: AKMapView\n. @tadeuzagallo I removed the unnecessary changes to RCTMap.\n. @paramaggarwal I didn't realize that. Updated to use RCT_EXPORT_VIEW_PROPERTY.\n. ",
    "cincas": "turns out I made a very stupid mistake. pls ignore this.\nSorry gusy\n. ",
    "flashlizi": "@ida  This is always a risk, It's better to smooth all the differences.\n. @spicyj  \nThere are also some public APIs expose on prod but not on dev. such as moveChild, createChild, removeChild (in ReactMultiChild.Mixin) etc.\nIs there any way to traverse all children of a component except using _renderedChildren ?\n. ",
    "ida": "@flashlizi: I think you accidentally pinged me, just saying, so @ide doesn't miss anything :-) \n. ",
    "vczero": "@sahrens Can you rebase and re-record the snapshot tests to get the travis build to pass?\uff0d\uff0dthis is for @facebook-github-bot? if not be, how can I do? Thank you ~\n. ",
    "DmitrySoshnikov": "\n@DmitrySoshnikov: I believe you were starting to update babel?\n\nYep.\n. ",
    "john-difool": "It seems to be related to this issue building contextify:\ngyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\n  CXX(target) Release/obj.target/contextify/src/contextify.o\n  SOLINK_MODULE(target) Release/contextify.node\nld: library not found for -lgcc_s.10.5\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [Release/contextify.node] Error 1\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/node-gyp/lib/build.js:269:23)\ngyp ERR! stack     at ChildProcess.emit (events.js:110:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:1074:12)\ngyp ERR! System Darwin 14.4.0\ngyp ERR! command \"node\" \"/usr/local/bin/node-gyp\" \"rebuild\"\ngyp ERR! cwd /Users/lorenzo/Develop/facebook/contextify\ngyp ERR! node -v v0.12.2\ngyp ERR! node-gyp -v v2.0.1\ngyp ERR! not ok \n. Hey thanks guys for taking the time to reply. \nnode -v\nv0.12.2\n@ide I'll restart after installing the latest update. It looks like a dangling symlink that points no where and a few people have reported it without finding a real solution.\n. Restarting MacBook did the trick! :+1: \n. ",
    "RubenSandwich": "Your absolutely right about the display link not being required. But I'm not so sure about the RCTJavaScriptDidLoadNotification Notification not being required as well. Without it logic errors will auto reload just fine, but syntax errors will not. I'll do some more digging and find out why.\n. My efforts to move away from RCTJavaScriptDidLoadNotification have so far been futile. I still can't get syntax errors to reload without posting the Notification and jsLoaded: is tightly coupled to RTCDevMenu so I can't easily replicate it's behavior.\nI really don't like the look of posting  RCTJavaScriptDidFailToLoadNotification and then RCTJavaScriptDidLoadNotification. I mean technically the documentation for RCTJavaScriptDidLoadNotification is \"This notification fires when the bridge has finished loading.\" and technically failure is a finished state. :/\nI've very unfamiliar with the code base, in fact I just laid my eyes upon it about 12 hours ago, so if I'm missing something please push me in the right direction and I'll be glad to fix it.\n. The other thing I can think of to fix this problem would be to call jsLoaded: in RTCDevMenu  when RCTJavaScriptDidFailToLoadNotification is posted. As jsLoaded: is what handles the live reload. \n@tadeuzagallo would you prefer I keep the new notification: RCTJavaScriptDidLoadNotification or call jsLoaded: in RTCDevMenu when RCTJavaScriptDidFailToLoadNotification is posted?\n. I think that whole phrase can be removed and the sentence still makes sense and is less wordy:\n\nTo help you get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.. I think that whole phrase can be removed and the sentence still makes sense and is less wordy:\nTo help you get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.. \n",
    "hpze2000": "@checkraiser TKS! bug error below again:\n:~ johnson$ react-native init AwesomeProject\nThis will walk you through creating a new React Native project in /Users/johnson/AwesomeProject\nnpm ERR! Darwin 14.1.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"install\" \"--save\" \"react-native\"\nnpm ERR! node v0.12.4\nnpm ERR! npm  v2.10.1\nnpm ERR! shasum check failed for /var/folders/fj/4nbp1d9x5b341std7mz5wpt80000gn/T/npm-3042-a56948e4/registry.npmjs.org/react-native/-/react-native-0.5.0.tgz\nnpm ERR! Expected: 287a1036d0c4de8861217e989cb46e8ea872fb11\nnpm ERR! Actual:   c89c9d8255c8ec34a25732e2665bd70e894b292a\nnpm ERR! From:     https://registry.npmjs.org/react-native/-/react-native-0.5.0.tgz\nnpm ERR! \nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     https://github.com/npm/npm/issues\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/johnson/AwesomeProject/npm-debug.log\nnpm install --save react-native failed\n. ",
    "steve-ng": "it's working, except that my image needed to have transparent area. \n. Here's my code\n<ScrollView stickyHeaderIndices={[0]} >\n  <AdView />\n  <View>\n    //other view content \n  </View>\n</ScrollView>\nit work if I just did\n<View>\n  <AdView />\n</View>\n. i realised that it's because I didn't allocate height for adView.\n. ",
    "alvaromb": "Yes @lazywei , that's what I meant. The style props were correctly set but the issue was when composing the image URL. The API was returning an entry without image and the URL generation was breaking but I couldn't see any errors in the console. Enabling Pause On Caught Exceptions in Google Chrome helped me to find the bug.\nThanks for helping me!\n. This is an example of the issue. Looks confusing to open a modal an still have a navigation with a back button that does not close the modal.\n\n. Thank you for your replies. I'll try that as soon as I can @paramaggarwal, but I'm facing a tremendous amount of work right now and this has been removed from my top priority list. I expect I'll be able to try this on Friday.\n. I've switched from NavigatorIOS with a Navigator to display the modal to a full Navigator navigation.\nHowever, if I set a navigationBar in the parent Navigator, it stays on top of the modal-Navigator.\nThis is the render code for the main Navigator:\njavascript\nreturn (\n<Navigator\n    navigationBar={\n        <Navigator.NavigationBar\n            style={styles.navBar}\n            routeMapper={MnmNavigationBarRouteMapper}\n        />\n    }\n    initialRoute={{\n        title: this.state.selectedTab,\n        component: MnmPublished,\n        passProps: {section: this.state.selectedTab}\n    }}\n    renderScene={(route, nav) => {\n        var props = route.passProps;\n        props.navigator = nav;\n        return React.createElement.bind(this)(\n            route.component, props\n        );\n    }}\n    configureScene={(route) => {\n        if (route.sceneConfig) {\n            return route.sceneConfig;\n        }\n        return Navigator.SceneConfigs.FloatFromRight;\n    }}\n/>\n);\nThis is how I open another Navigator (the \"modal\" component):\njavascript\nthis.props.navigator.push({\n    index: 1,\n    component: MnmCommentsContainer,\n    sceneConfig: Navigator.SceneConfigs.FloatFromBottom,\n    passProps: {entryId: entrada.id}\n});\nAnd this is the code for the \"modal\" component:\njavascript\nrender() {\n    return (\n        <Navigator\n            renderScene={(route, navigator) => (\n                <MnmComments entryId={this.props.entryId}/>\n            )}\n            initialRoute={{\n                title: 'Comentarios'\n            }}\n            navigationBar={\n                <Navigator.NavigationBar\n                    routeMapper={MnmNavigationBarRouteMapper}\n                    style={styles.navBar}\n                />\n            }\n        />\n    );\n}\nThis last navigationBar is the one that has the red background. What I would like to achieve is  a stacked (right-to-left) navigation similar to the iOS native one and open a modal-like transition from one of the previously navigated views (something which I think is quite common in iOS app navigation). That modal should overlay the content that's behind. I would also like to prevent the right-to-left transition in the root navigationBar if possible.\n\n. Another thing that bugs me is that setting the content to flex: 1 with the custom navigationBar displays the content a couple of points behind the navigation bar, preventing the first element to be correctly displayed.\n. That\u2019s what I did. I can use moment and I\u2019ve been using it with react-native, but I cannot change the moment locale.\n\nOn 15 Jun 2015, at 15:49, Kelvin Jones notifications@github.com wrote:\njust do npm install moment\nthen\nvar moment = require('moment');\n\u2014\nReply to this email directly or view it on GitHub https://github.com/facebook/react-native/issues/1629#issuecomment-112077489.\n. Super @brentvatne!! I haven't found that option in the docs. Many thanks. \n. This property is documented here.\n. Yes, this seems a better approach. I'm sending a PR in a moment.\n. Can do that. I've just followed the style of the RCTMeasureLayout function.\n. I don't like that either and I would love to know why the magic number is 30 and not 20 or 45 \ud83d\ude04. But in order to keep consistency, I decided to keep that untouched.\n. No, now it isn't necessary. I'll move that into the method.\n. Thanks for jumping in @javache!\n\nYes, you're right, I reproduced the issue using replacePreviousAndPop with a previous route with an image and it doesn't get updated. I'll update the PR. \n. I'm in favour of removing the @synthesize, comparing UIImages will be more expensive. Will update the PR later today.\n. I would need some guidance to avoid this eslint error @satya164.. ",
    "athaeryn": "@soliury Are you getting those issues in the Simulator or on real hardware?\n. ",
    "jevakallio": "I am experiencing the same issue when upgrading from 0.5.0 to 0.6.0 stable:\nRCTDataManager.queryData was called with 4 arguments, but expects 3\n. The issue seems to be that transitive npm dependencies include their own, older copies or react-native, and the packager loads them, causing incompatibilities:\nIssue documented here:\nhttps://github.com/facebook/react-native/issues/1606#issuecomment-113113816\n@VonD If you want to figure out which dependency is causing this issue, load your app in the debugger, Cmd+O to find ScrollView.js, right click on the file and choose Reveal in navigator. That's your culprit. \n. ",
    "aksonov": "Thanks! Looks like translucent property is not in 0.5.0 yet and it is NOT on by default, so it looks a little bit confusing .\n. Strange, in my example I don't see symbols (\"Welcome to React Native!...\") from underlying view under \"Preference\" nav bar or it just should show background color, not text?\n. ",
    "prathamesh-sonpatki": "Before:\n\nAfter:\n\n. @ide Thanks for the review. Will the website be updated automatically?\n. Before -\n\nAfter - \n\n. @ide Updated. Please check.\n. ",
    "leoasis": "Yeah this is really helpful especially for iOS newbies as I am when we discussed in the IRC channel with @ide.\nBTW, the docs for clear are confusing as well:\n```\nstatic clear(callback?: ?(error: ?Error) => void) \nErases all AsyncStorage for all clients, libraries, etc. You probably don't want to call this - use removeItem or multiRemove to clear only your own keys instead. Returns a Promise object.\n```\nWhat's clients here?\n. ",
    "Sing-Li": "Here are some observations:\n1. if you use any recent versions of react-native init to scaffold, you will not have this problem\n2. if you just go into the Examples/SampleApp and start hacking the code there to create your app -- you eventually will have this problem\n3. you will ONLY have this problem if you  git clone'd the repo and are working off source\nClues:\n1.  if you used recent versions of react-native init to scaffold - you WILL HAVE package.json in the app directory, and 'npm install' will place all the node_modules dependencies under the app directory; if you use npm start to run the packager -- the packager will only search from your app directory downwards ... it will never see the root react-native git-cloned source directory\n2.  if you just hacked the Examples/SampleApp - even in today's master - there is no package.json, and no node_modules in the app directory ... instead, the compiled code running in the emulator  is somehow wired to ask the packager for a search from the root git-cloned react-native source directory for the .js files\n. Is the --reset-cache option undocumented on packager?  \nWith --help it shows:\n```\n\nreact-native@0.6.0 start /Users/sam/dev/react-native\n./packager/packager.sh --help\n\nOptions:\n  --port                                                                           [default: 8081]\n  --root           add another root(s) to be used by the packager in this project\n  --assetRoots     specify the root directories of app assets                  \n  --platform       Specify the platform-specific blacklist (ios, android, web).    [default: \"ios\"]\n  --skipflow       Disable flow checks                                         \n  --nonPersistent  Disable file watcher\n```\nWith source map enabled on chrome debugger  - exception was first caught here:\n\nzooming to stack trace:\n\nThen later leading to the 'red box exception:\n\nPlease lmk if a gzipped index.ios.bundle + index.ios.map may be helpful.\n. @grin   THANKS!!    That's the vital clue.\nIssue isolated!   \nThe packager seems to just recursively spider from the root git-cloned react-native directory down to scan for dependencies (avoiding only explicitly blacklisted dirs) and will load any old version of node-modules/react-native lying around.\nSo if you go to your root git-cloned react-native directory and then do a:\nfind . -name 'react-native' -print\n... you will see any old react-native npm-installs lying around that the packager might decide to load, and cause the problem.\nFrom my previous post on the 'observations' , you will see a mix of:\n-   pre- '0.4.x' generated scaffolds that do not use package.json\n-   post - '0.4.x' generated scaffolds that use package.json\nThe problem is that for post-'0.4.x' generated projects, UNDER THE react-native/Examples directory (which the Facebook testers will almost never have with fresh git-clones, but most devs tinkering with react-native are likely to hastily create), there might be node-modules/react-native lying around that are not 0.6.0-rc!   The packager gladly load it into the ios.js.bundle - causing the problem.\nI suppose other than the Examples directory, one can also have copies of stale node-modules/react-native from anything that one did npm install react-native-latest-and-greatest-component -g on.\nI suppose it can also cause #1646 , and #1578 .\nFor my case, the bypass for now is to search-and-destroy any old node-modules/react-native lying around manually.  Or blacklist the Examples directory.\n. ",
    "grin": "In my case this issue was caused by the react-native-viewport dependency in my app which itself depended  on an older version of react-native. It was all fixed after I bumped it to v0.6.0-rc (https://github.com/pjjanak/react-native-viewport/pull/5) and re-linked it to my project.\n. ",
    "owais": "If one of your dependencies specifies react-native as a dependency itself, then react-native is also installed inside the node_modules directory of that dependency. This leaves older versions of react-native inside your source tree. For me the solution was to manually edit the culprits package.json file and remove react-native from dependencies list and also remove react-native from their node_modules.\n. Yes, components should not specify react-native as a dependency. It causes many problems. Not to mention that it significantly increases installation time and each module that does this ends up imprting its own version of react-native instead of the one the developer is working on.\n. Facing the same issue with 0.5.0\n. ",
    "chauthai": "I've just ran into the same problem upgrading from 0.5 to 0.6.\nDeleting react-native instances in third party component node_modules folders, editing react native dependencies to peerDependencies in third party components AND resetting the cache of the packager resolved the starting errors of my app:\n./node_modules/react-native/packager/packager.sh --reset-cache \nThird-party components in use:\n- react-native-facebook-login\n- tcomb-form-native\n- react-native-geocoder\n- react-native-router\n. ",
    "haruair": ":+1:\n. ",
    "DannyvanderJagt": "I just tried to do the same thing, but I didn't get it to work either. \nI just wanted the device token so I could use it for the push notifications and my node server. I have found a working solution but it is without the register event. In #1019 the requestPermissions uses a callback for giving you the device token. I have used https://github.com/lazaronixon/react-native/commit/af08fde42e4fb57bb04b563756ac92e4d285ae85 and got it working. (It's only implemented in the SampleApp)\nThe commit didn't work right away but when I copied the AppDelegate+notification.m and the AppDelegate+notification.h from SampleApp/IOS to Libraries/PushNotificationIOS and added the PushNotificationIOS Library I got it working.\n(I am not sure that this is a right way of fixing it, I just started to play with IOS and Objective-C yesterday)\nI hope it helped and looking forward for a proper fix.\n. I just tried to do the same thing, but I didn't get it to work either. \nI just wanted the device token so I could use it for the push notifications and my node server. I have found a working solution but it is without the register event. In #1019 the requestPermissions uses a callback for giving you the device token. I have used https://github.com/lazaronixon/react-native/commit/af08fde42e4fb57bb04b563756ac92e4d285ae85 and got it working. (It's only implemented in the SampleApp)\nThe commit didn't work right away but when I copied the AppDelegate+notification.m and the AppDelegate+notification.h from SampleApp/IOS to Libraries/PushNotificationIOS and added the PushNotificationIOS Library I got it working.\n(I am not sure that this is a right way of fixing it, I just started to play with IOS and Objective-C yesterday)\nI hope it helped and looking forward for a proper fix.\n. I'm sorry for my stupid answer yesterday. I didn't read properly and I just started with react and IOS two days ago. However I did some more digging and I think I have found a proper solution.\nThe problem is that didRegisterForRemoteNotificationsWithDeviceToken in the file RCTPushNotificationManager never gets called. I downloaded the latest version of react-native from the master and as suggested in https://github.com/facebook/react-native/pull/1304 I added this to the bottom of the AppDelegate.m file:\nObjective-c\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n  [RCTPushNotificationManager application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n}\nAnd this line to the top of AppDelegate.m:\n``` Objective-c\nimport \"../../../Libraries/PushNotificationIOS/RCTPushNotificationManager.h\"\n```\nBut I also added this line to AppDelegate.h:\nObjective-C\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken;\nWhen I added those line to my code the didRegisterForRemoteNotificationsWithDeviceToken did get called. But it then this error showed up:\nregisterForRemoteNotificationTypes: is not supported in iOS 8.0 and later.\nRCTPushNotificationManager.m\nTo fix this I changed this in the RCTPushNotificationManager.m file on line 140:\n``` Objective-C\nif __IPHONE_OS_VERSION_MIN_REQUIRED >= __IPHONE_8_0\n```\ninto:\n``` Objective-C\nifdef __IPHONE_OS_VERSION_MIN_REQUIRED >= __IPHONE_8_0\n```\nThe register event in javascript is now working here and I get the device token as an argument.\nHowever I discovered that there is no error handling in the PushNotifications Library, all the errors are going away without notice. I think this should be fixed. Do make sure that all your certificates are valid etc. \nI hope this is helped.\n- EDIT: I have forked the react-native repo and implemented these lines + error handling. The SampleApp does now have a working register event and an error event for catching errors.\n  My fork: https://github.com/DannyvanderJagt/react-native\n. @timminkov The register event can't be fired in the simulator because remote notifications are not supported in the simulator. Remote/Push notifications can only be used on an actual device. The error event from my fork does fire on the simulator and if your run the app in the simulator it will give you this error: remote notifications are not supported in the simulator which is an actual IOS (Objective-C) error.\n. ",
    "timminkov": "I tried copying over the two notification files to my PushNotificationIOS directory and adding it to my project, but still no dice.\n. @DannyvanderJagt were you able to get the event to trigger in the simulator?\n. Unfortunately following your instructions (and your commit) I'm STILL unable to even get the remote notifications are not supported in the simulator error message.\n. ",
    "castlesix": "URL is 'http://www.jgkids.or.kr/toy/toy_list_sadang.asp'.\nContent-Type is text/html. charset is null.\n\nBy modifying RCTDataManager.m, the response is OK.\n. ",
    "mrspeaker": "This approach would work, but the documentation says \"For a custom shadow image to be shown, a custom background image must also be set with the setBackgroundImage:forBarMetrics\" - and setting a custom background image removes the nav bar translucency. \nThis method is (recursing the elements, remove the shadow image) seems to be the only known way at the moment to remove the shadow and keep the normal translucency.\nI guess the shadow image and background image should both be exposed too - but it would be a separate issue from this.\n. Integrated the recursive find, and hid the image instead of removing.\nI'm not sure if it's a good idea to land this though: on one hand there are a lot of people who want this functionality in iOS apps (I need it in my current project too), but on the other it adds to the react-native API so will need to be supported - and will complicate things when shadowImage and custom backgrounds are exposed.\nYour call ;)\n. Squished!\n. ",
    "jacobrosenthal": "There is a related missing piece from @slycoder which surfaces the localnotification 'event' to js when the application is started as a result of the localnotification, as is done for remote notifications\nhttps://github.com/jacobrosenthal/react-native/pull/1\n. ",
    "plandem": "Thanks, for help. Yes, i have reasons to use it. It's not for any heavy tasks/async and etc. In my case i just need to move some 'value formatters' to JS side, because some visual parts will be there. But in other cases i will need just 'value formatters' without any visual parts. So i want to use same way - formatters from JS. It's mostly native app and only some parts (\"modules\") in React\n. ",
    "sherlock221": "Just tested 0.5.0 is ok \n\n. ",
    "mosch": "0.5\n. @ide tested at 0.5 and 0.6-rc1\n. ",
    "wtfil": "@ide thx for replay!\nI am totally nooby with xcode, but  now I at least have keywords for googling:)\n. @ide just updated react with npm (changed version from 0.5.0 to git@github.com:facebook/react-native.git) and everything works now with new RCTPromiseRejectBlock and  RCTPromiseResolveBlock features.\nAny xcode manipulations weren't needed!\nClosing  issue\n. ",
    "nrako": "I'm seeing the same issues, however when I have a red screen (i.e chrome not running for remote debugging) ESC and \u2318+R are handled correctly.\n. ",
    "cyprusglobe": "just do npm install moment\nthen\nvar moment = require('moment');\nthen you can do something like this\nvar datetime = moment(event.datetime).format('dddd, MMMM Do YYYY');\n. :+1:\n. +1\n. \"why\" => \"way\"\n. ",
    "almost": "Demonstration of the issue is here: https://github.com/almost/react-packager-issue-demo\nWhen run the app displays \"Underscore version: 1.2.4\", the expected output should be \"Underscore version 1.8.3\"\n. I've tested with 0.6.0-rc and with master as of just now\n. I can confirm this is now fixed in master, I'll close the issue\n. Yep, it now appears to be fixed in master. Thanks!\n. ",
    "jamiefaye": "The fix from ide appears to clear up the issue. Thanks!\n. I encountered the issue with the callback-style ref back on 0.4.4 and was able to get the callback working in 0,6.0-rc. It may well have been programmer error back then.\nIf the issue comes back, we can reopen this.\n. ",
    "pbasel": "\nThough shouldn't the error callback be triggered anyway after the timeout was reached?\n\nDon't know what difference would that make. \n. ",
    "isair": "That seems to fix it.\n. ",
    "gkrimer": "This happens for me with regularity but only when running on the device and debugging in Chrome. If I run on the device without debugging this error does not occur. Anyone seeing the same behavior?\n. ",
    "yamill": "Ahh gotcha. @ericvicenti would be great if you can point me in the right direction! thanks.\nThe reason why I want a callback is because the video continues to play when I swipe back and the scene is not fully unmounted. You can still hear the playback of the video when you swipe back.\n. @chirag04 i tried adding componentWillUnmount - but it doesn't get called on the swipeback action.\n. @chirag04 - So I added this code from #1018 to my Navigator.js and seemed to fix the issue. Now the componentWillUnmount gets called and I also didn't need to add any code to stop the video because it got unmounted :+1: \nFYI, I don't think this fix got pushed to Master yet so it needs to be added manually.\nThanks for help! \n. @chirag04 awesome, looking forward to the better fix by @ericvicenti \n. @chirag04 awesome, looking forward to the better fix by @ericvicenti \n. @ericvicenti thanks for the response! this sounds great! looking forward to using these events in the next release.\nbtw i found the better code in the latest version and now is working flawlessly\n// The gesture has enough velocity to complete, so we transition to the gesture's destination\n  this._transitionTo(\n    destIndex,\n    transitionVelocity,\n    null,\n    () => {\n      if (releaseGestureAction === 'pop') {\n        this._cleanScenesPastIndex(destIndex);\n      }\n    }\n  );\n}\nthis._detachGesture();\n:+1: \n. The commit 53fb5b6cee50f85bc6220231b2fd39fd94b587db that changed this said the property should be defaulted to false\n. ",
    "everfire130": "The same\n. ",
    "sebmarkbage": "You can also create your own abstraction layer on top of the native APIs - where you maintain compatibility. Then the code on top of that can still be a shared codebase.\n. Unfortunate since in the ideal API this would be responsive, but I'll find a workaround. \n. The only key here is that this should be longer than a frame. It should be possible to go beyond 17ms in an idle callback while still hitting every frame deadline. E.g. 5ms to process the current frame, 20ms to process the idle callback, 5ms to process the next frame. Still hits both deadlines.\nIf you don't call it often enough, then you're leaving CPU cycles unused. Only calling this if there is 10ms left is way too restrictive because there is too much headroom left out. Remember, even if it goes beyond the frame deadline, it doesn't matter. This should be like 1ms or even less.\n. Note that the new React Fiber reconciler for DOM does all reconciliation except for animations using requestIdleCallback. https://github.com/facebook/react/blob/cf259a4ff82bb6248b41392e821d2822f9ce46c6/src/renderers/shared/fiber/ReactFiberScheduler.js#L199\nSo it is very important that it gets enough cycles. It is a misnomer to think that it is only for background work. (I mean for React Native we can obviously special case React, but if we have the need, presumably so does other code that is meant to use this API and it might rely on these semantics.)\n. Ideally this would be longer if the system is idle and then read out to native shared mutable memory. It can then return zero when there are pending touches or new input to process. That way code can run synchronously for as long as there is no new input to process.\n. I don't think the debugging argument is significant here because this whole API is a massive race condition regardless. There's no reliable break debugging strategy here anyway. A TODO would be good though.\n. ",
    "cpojer": "js\nthis.refs[UNDERLAY_REF].setNativeProps({\n  ...INACTIVE_UNDERLAY_PROPS,\n  style: this.state.underlayStyle,\n});\n. why do you have to turn off auto-mocking? Can't you just remove this line and continue mocking NativeModules just like you do below?\n. we should probably change this into taking a single object, and use destructuring in here.\n. :+1: \n. Personally I prefer:\njs\nif (!this._helpers.isNodeModulesDir(this.path) &&\n    (moduleDocBlock.providesModule || moduleDocBlock.provides)\n) {\nbut I don't wanna bikeshed :P\n. sweeet!\n. I think it might be more efficient to bring back what we had previously but on this line we'd use files = files.concat(file.getFiles()).\n. I think it might be more efficient to bring back what we had previously but on this line we'd use files = files.concat(file.getFiles()).\n. you both know we have an interview question related to this at FB. Look on the internet for the fastest possible implementation and use that ;)\n. you both know we have an interview question related to this at FB. Look on the internet for the fastest possible implementation and use that ;)\n. sure, that sounds reasonable. I don't know which one of the 10 possible solutions is the fastest in practice.\n. sure, that sounds reasonable. I don't know which one of the 10 possible solutions is the fastest in practice.\n. thanks for doing the perf work :)\n. thanks for doing the perf work :)\n. this should actually be let :P \n. this should actually be let :P \n. this shouldn't be necessary? npm install creates a .bin folder in node_modules with a jest executable. npm run adds this to the $PATH.\n. this shouldn't be necessary? npm install creates a .bin folder in node_modules with a jest executable. npm run adds this to the $PATH.\n. This should use the exact same format that packager is using. I just asked @skevy to make it backwards compatible so that his change was non-breaking :)\n. This should use the exact same format that packager is using. I just asked @skevy to make it backwards compatible so that his change was non-breaking :)\n. The same is true for Jest and I'd say Facebook in general. Let's see how this goes for node and then learn from whatever they do :)\n. ;\n. \"Jest\" (capitalized) in writing please. jest is the name of the cli tool for \"Jest\".\n. can you change this to push to xcodebuildArgs instead of creating a new array? That way you can keep using const above too :)\n. nit: please remove the space between [ and {.\n. Can't you just type out \"RELEASE\" here? :)\n. I don't think you need to mention the default value here.\nIf our cli tools don't print that in the help command, we should fix that there.\n. can you explain why this is now install instead of installDebug?\n. Could we add something like:\nyarn add ${destModule}\nto the instructions?. @Monte9 do you mind following up on @frantic's last comment? I think that's the only remaining blocker to getting this shipped :). \ud83d\udc4d please do. Feel free to leave it the way it is now, I actually have an internal change that resolves this issue as well and I'll land it as soon as it is reviewed :). Is there a reason there are two spaces here?. The minimum text expected by this file is already ~40 characters, so bumping this.. extremely sounds aggressive.. I see this a lot and don't even know myself what is expected of me.. Asking nicely.. Ahhh, this explains why people go there when they have questions for React Native.\nCan we flip around the paragraph below and this one? Basically the first one should be discord, spectrum and the FB group.\nThen below that we could say something like \"If you'd like to discuss topics related to the future of React Native, please check out the discussions and proposals repo: \u2026\"\nThat may help reduce the wrong issue from being created there.. \ud83d\udc4d . \ud83d\udc4d . Please bring back the comments for all the non-essential stuff in the template that only the creator of the issue should see but not the people who look at the issues.. Please bring back the comments for all the non-essential stuff in the template that only the creator of the issue should see but not the people who look at the issues.. Did you mean trackColors? I think tintColors is fine.. I think tintColors is fine. Not sure yet about moving Checkbox out of RN into a separate package.. @dulmandakh I'm not sure this is correct. We store a mReactInstanceManager in this class but with your change it will instead go to ReactActivityDelegate and call ((ReactApplication) getPlainActivity().getApplication()).getReactNativeHost() (which is where it fails).\nIs there a way we can retain the previous behavior here? It's also a bit odd to me to rely on different ways of getting the instance manager both within this class and through external usage when the getter is being called.\nI'm not an expert here so I'd appreciate any help so I can better understand what is going on so I can make this work and land it.. Can you revert this change?. Can you revert this change?. This is used in other places. Can you search for AlertIOS in the repository and remove uses of this module and update tests to use Alert instead?\nHere, it might make sense to actually throw and tell users to use Alert instead.. This is used in other places. Can you search for AlertIOS in the repository and remove uses of this module and update tests to use Alert instead?\nHere, it might make sense to actually throw and tell users to use Alert instead.. Seems like prettier didn't run properly. Can you run yarn and then yarn lint --fix?. Seems like prettier didn't run properly. Can you run yarn and then yarn lint --fix?. I'm worried about excluding them because most likely we'll never actually fix them and re-enable them. Could we instead either fix the errors or modify the eslint config to disables the linters we don't care about for those folders?. I'm worried about excluding them because most likely we'll never actually fix them and re-enable them. Could we instead either fix the errors or modify the eslint config to disables the linters we don't care about for those folders?. This was me during the merge. connect was removed in another diff accidentally, and this diff still had it as part of the conflict, and I need to patch up yarn.lock anyway so I figured I'll just do it here. I realize this is not the proper way of dealing with it.. This was me during the merge. connect was removed in another diff accidentally, and this diff still had it as part of the conflict, and I need to patch up yarn.lock anyway so I figured I'll just do it here. I realize this is not the proper way of dealing with it.. This algorithm is O(n*n). Can you instead do Array.from(new Set(this.state.assets.concat(assets))?. We actually depend on this at Facebook. Does FlatList not support this? I'm not sure if we can merge this change without this feature.. @SudoPlz mind addressing the comments here as well about moving the lock scope?. @SudoPlz mind addressing the comments here as well about moving the lock scope?. @zhongwuzw seems like Flow isn't happy about this change?. @zhongwuzw seems like Flow isn't happy about this change?. Can you move this change into a separate PR?. Can you move this change into a separate PR?. This is a regression. Could you work on putting back the proper Flow Type and running flow on the react-native repo to verify it?. This is a regression. Could you work on putting back the proper Flow Type and running flow on the react-native repo to verify it?. Can we fix this instead?. Can we fix this instead?. I didn't know eslint supports this\u2026. I didn't know eslint supports this\u2026. Can you make this API a promise based API? See the PR here: https://github.com/facebook/react-native/pull/18875/files\nWe should try to adopt this pattern for new APIs since we cannot change the old one.. Can you make this API a promise based API? See the PR here: https://github.com/facebook/react-native/pull/18875/files\nWe should try to adopt this pattern for new APIs since we cannot change the old one.. Possibly: \u201cand other platform\u201d with a link to a list of other renderers?. Possibly: \u201cand other platform\u201d with a link to a list of other renderers?. \u201cmacOS by default\u201d - I recommend removing the \u201cby default\u201d since it\u2019s a platform limitation. The next sentence helps with the workaround.. \u201cmacOS by default\u201d - I recommend removing the \u201cby default\u201d since it\u2019s a platform limitation. The next sentence helps with the workaround.. \u201cto continue evolving\u201d. \u201cto continue evolving\u201d. \u201cGet your feet wet\u201d may be hard to understand for people not that good with English. Any chance we could use a more neutral language and a simpler sentence?. \u201cGet your feet wet\u201d may be hard to understand for people not that good with English. Any chance we could use a more neutral language and a simpler sentence?. Could you change this API to return a new object, like margin = resolveRelativeSizes(margin)? I think that will be clearer.. Could you change this API to return a new object, like margin = resolveRelativeSizes(margin)? I think that will be clearer.. Could you change this flow type to have the correct object type information? Something like: \njs\ntype Style = {\n  height: number,\n  top: number,\n  \u2026\n}\n?. Could you change this flow type to have the correct object type information? Something like: \njs\ntype Style = {\n  height: number,\n  top: number,\n  \u2026\n}\n?. Please add a newline here.. Please add a newline here.. @michalchudziak can we put it into the eslint config? I think that's better, especially since people can create a project without Jest still and it makes this a bit confusing.. @michalchudziak can we put it into the eslint config? I think that's better, especially since people can create a project without Jest still and it makes this a bit confusing.. ",
    "kohei-takata": "I can. I'll do that.\n. ",
    "premasagar": "@sahrens - can you give an example of the new relative path hotness?\n. @sahrens - can you give an example of the new relative path hotness?\n. ",
    "evansolomon": "Some of the local modules use modules from npm (or they use modules that use modules from npm, etc etc).\nThere may be a more fine-grained way to do it, but this seemed like the simplest way to maintain the \"print this message and bail if a dependency isn't here\" idea.\n. Added this\n. That was intentional :) But I'll get rid of it.\n. ",
    "longdivision": "\nyou can actually declare those as normal vars, no need to attach them to global context\n\nYou're right - updated\n. > you can actually declare those as normal vars, no need to attach them to global context\nYou're right - updated\n. > we should probably clear sessionID here, because after disconnecting it will become invalid.\nDone. This removes the warning for closing a tab on a closed session too.\n. > we should probably clear sessionID here, because after disconnecting it will become invalid.\nDone. This removes the warning for closing a tab on a closed session too.\n. > Imho it's fine to make it as small as 100ms or even smaller\n\nmaybe implement backoff?\n\nWent with 100ms for now to keep things simple.\n. > Imho it's fine to make it as small as 100ms or even smaller\n\nmaybe implement backoff?\n\nWent with 100ms for now to keep things simple.\n. ",
    "brentkirkland": "@sahrens  Unfortunately no, this way preserves transparency. Other easier ways quickly mess up the transparency issue.\n. ",
    "vorjdux": "Yes, it gets better! I will change, thank you.\n. ",
    "nsimmons": "Typo in method name. I think you meant tintedImage.\n. Apparently fs is not auto mocked because it's a node module. That's why I am explicitly mocking it here.\n. Automocking this module did not work. Is there a simpler way to do this?\n. Cleanup - was no longer used in this file.\n. Updating to detect deprecated arguments, show an error followed by help output. \n. Added tests for deprecated arguments\n. deprecated arguments handled here\n. Yeah i did this to make sure the Swift generated project looked the same as the ObjC one. \nI have a PR for generating the required import statements here https://github.com/facebook/react-native/pull/3103\n. I can rewrite this using JS only. \nYou're right about the shell issue. This would not work on Windows (haha). But other legit shells it could potentially break as well and that would be annoying for the user.\n. good catch\n. ",
    "martinbigio": "should we still accept root and interpret it as roots? Or at least, could you make sure that we show a pretty visible error if no roots are passed so that people can update their scripts appropriately without wasting time looking into what change? :)\n. should we still accept root and interpret it as roots? Or at least, could you make sure that we show a pretty visible error if no roots are passed so that people can update their scripts appropriately without wasting time looking into what change? :)\n. yeah, this is the way to get it mocked\n. yeah, this is the way to get it mocked\n. Hmm not sure why it doesn't work. Either ways you'd still need to have pretty much all this code to return the promise with the bundle\n. Hmm not sure why it doesn't work. Either ways you'd still need to have pretty much all this code to return the promise with the bundle\n. nit: no need for variable, return the promise directly\n. nit: no need for variable, return the promise directly\n. not if the parameters are defined\n. lets go with @ide suggestion\n. We need to avoid manually parsing the command line but use a library, similarly to what we're doing on the private-cli. Otherwise, things could break very easily and it will be harder and harder to implement as the number of options  this cl has increase. No need to change this pr, it's just a comment for the future. We may merge this cli with private-cli though. cc @frantic \n. We need to avoid manually parsing the command line but use a library, similarly to what we're doing on the private-cli. Otherwise, things could break very easily and it will be harder and harder to implement as the number of options  this cl has increase. No need to change this pr, it's just a comment for the future. We may merge this cli with private-cli though. cc @frantic \n. nit: missing . at the end of the sentence\n. nit: missing . at the end of the sentence\n. It's not necessary because the function is not part of the object that is exported :)\n. The changes to this file have been already merged in master, please revert them here :)\n. Yeah, we have one upstream module requires CSSCore :(\n. nit: const\n. nit: remove \\n\n. why remove this? if there're no plugins to run would be great skipping transforming the file :)\n. Yeah, when I initially implemented this the code was originally on executeApplicationScript because it looked like the context was cleared after running this method. Maybe the problem was that we were assigning the sync function directly to the context. This is the right place and the right way to define the callback :)\n. FYI on iOS we minimum amount the header notification is shown is 600ms. We could have a different one on Android if it feels better though\n. Would be great being able to cancel the toast. HMR updates usually take 500ms :).\n. nit: identation looks off on this file (4 spaces instad of 2)\n. Awesome!\n. Some of the logic on the file would become simpler if we remove one level here (i.e.: concatenate the platform with the bundleEntry). Maybe we could turn client into a class and define a hash function based on the bundleEntry and the platform. After all you want a different cache for each client.\n. we can simplify this code if we do what I suggested above :)\n. nit: remove\n. nit: remove space between function name and parenthesis.\nI've seen this on other places of the PR, do you mind removing them all :)?\n. this would become simpler as well\n. nit: // only clear change listener if there are no more clients\n. Looks like you forgot to tweak the arguments here\n. I like how the code results when using this function, it makes iterating over the clients easy!. But couldn't you just iterate over the clients and use the platform and bundleEntry values stored on the objects?\n. same comment as above here - would be simpler if this would be just an object instead of an object of objects\n. Hmm not sure if it's correct to send the error to all the clients. What if you run into an adge case that affected only one of the clients?\n. I think you want to do this then for each of the clients instead of waiting for all of the to compute their update. The resulting code would be simpler as you'll be able to handle each client individually. Error handling will become easier.\nMoving forward: I think we need to model each client with a class and have a function that returns a promise to handle the file change, update the cache if needed, send the HMR update and do error handling. The cache should live inside of this class as it's not really shared across multiple clients. The only case where it could actually be reused is if you're testing something both on the simulator and on the device. On this case we should share the cache but I don't think it's that big of a deal not to do it for now. To add support for this the client class would have to have an array of web sockets to which it should send the updates. I say we separate the PR in 2: one to add support for multiple platforms/apps and other one to support this very special use case. What do you think?\n. > I thought about merging the bundle entry and the platform, but I was unsure of whether the platform was relevant for something beyond the bundle entry, in another part of the packager\nI was suggesting doing that only on this file which is pretty isolated from the rest of the packager.\n\nAlso, do we really want a cache for each client?\n\nOn your PR we're having different caches for different combinations of bundleEntry + platform, which represents different clients except rare case on which you have both the simulator and a device connected to the Packager. We could easily make the client class support multiple web socket connections to support this use case as well. I think introducing the client class will make the code simpler because:\n1. State (the cache) will be collocated with behavior (processFileChange) which will make this code a bit more object oriented.\n2. You'll have to deal with the cache for the client instead of with a cache for multiple clients.\n3. Sending updates will be per client so you won't have to maintain an object with the updates you have to send.\n4. Error handling per client will be easy to implement.\n5. All this code will become much easier to test in isolation.\nWhat do you think? :)\n. @satya164 what do you think about exposing getBabelRC on rn-config.cli.js. Now that I see this implemented this way I feel like it would have more semantic to have this line (!ignoreBabelRC && projectRoots && projectRoots.length > 0 inside the cli configuration.\ncc @skevy \n. AndroidConstants doesn't exist on iOS :)\n. you can use the host and port param HMRClient receives on the constructor for iOS\n. I think this is the single required change to make this work but I'm not sure what would be the best way to support this feature without affecting HMR performance.\nThe problem is that inside of _hmrFileChangeListener lots of things happen asynchronously so if you remove the return those async operations will compete for CPU and IO with the Live Reload changes. For Live Reload it doesn't matter if the change takes a couple more of milliseconds but for HMR it does.\nEven if we turn _hmrFileChangeListener into a function that returns a promise and wait to execute the other listeners, we'll end up slowing the HMR codepath because the code is not injected on the client until the sourcemaps for the new file are requested and returned (see https://github.com/facebook/react-native/blob/235b16d93287061a09c4624e612b5dc4f960ce47/Libraries/Utilities/HMRClient.js#L112-L135)\nFor this change to not affect performance we'll need to also include the sourcemaps on the original request response.\ncc @satya164 \n. @cpunion thanks for answering so quickly and for contributing!\n\nIs it possible to bundle once for Live Reload and HMR? or more common works to reduce bundle time? I can't handle this topic, I don't know details of how packager/bundler works yet.\n\nUnfortunately no. We reuse much of the intermediate stuff though, but the bundle itself cannot be share as the Live Reload one is a full bundle whereas the HMR one contains only the the code of the modules that have changed + the new modules if any.\nI'm not sure if it worth supporting this use case, feel like it's an edge case but I might be wrong. If it's an edge case we need to make sure it doesn't make the HMR experience worse and that the additional complexity that it adds worth it.\nI think it would be very useful to create a product pains and ask around if this is something the community would like the support for :). If there's broad interest we could work on improving this pull request to avoid a hit on performance. What do you think?\n. ",
    "satya164": "Thanks, I'll work on migrating the code to use okhttp ws.\n. Should we have package names in the examples? If someone copy/pastes it won't work. Also IDEs auto-add package names when you create new a class.\n. Grammatically, I guess it should be,\nIn the package class, it is important that you override the following three methods\nor\nIn the package class, you need to override the following three methods\n. It is not necessary to have the same package name as the app if I understand correctly. I would suggest not to write anything about package names. Most IDEs auto add the package name when you create a new class anyways, and modules can easily be in separate packages.\n. @gs-akhan This is an example though, and if the user won't be moving anything from here. Also you don't have to use the same package name as the app everywhere.\n. @gs-akhan No, it doesn't. I can easily have it a completely different package and import the class from that package.\nSince you've created the file in the same folder, you need to have same package name. But say you have a subfolder named modules, and place it there, then the package name will be different. That doesn't mean you won't be able to use it.\nIf you want an example, look at any react native module, say https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/modules/websocket/WebSocketModule.java . The package name in that file is com.facebook.react.modules.websocket, but it's stil being used by https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java which has the package name com.facebook.react.shell, which is ultimately used by your app, which has the package name, say com.awesomeinc.myapp. So package name doesn't matter.\n. @gs-akhan The way you're doing it isn't wrong. But you need to understand how Java packages work.\nIf you look at the files I linked to, their package names represent the folders they are in. And in MainReactPackage.java, the WebSocket package is imported - https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java#L24\n. @ide This is wrong, but I don't know Objective-C, can you tell me what to write here?\n. There's no mActivity here! O.o\n. Can you change this to camel case please?\nbabelCoreLocation\n. I think instead of having it in a quote, it makes more sense to have anther heading for this.\n. You can use __NOTE__. Quotes should be used when quoting someone.\n. @foghina Was wondering the same thing. I kept it consistent with the canOpenURL method which is in the same file. It's really confusing.\n. @foghina Yes, we should. I'll send another PR with the changes then, after this is merged.\n. @mkonicek Hmm... so there is also getJSMainModule. Not sure what to do here :(\n. nit: move catch to the same line as }\n. @mkonicek Yeah, I think that's what it means, as this is the file name of the bundle and it can't be loaded if this is not specified.\n. What if protocols is not an array or undefined?\n. Why annotate with ?any? Isn't it better to have protocols: ?Array<string>, options: ?Object?\n. Isn't it better to have protocols in options object? Also, why allow both string and array? Just array should work.\n. Remove the text evt. It's just a variable name.\nnative event \u2018evt\u2019 object -> native event object\n. evt -> event\n. A native eventevtis a -> A native event is a\n. Can we change evt  to event here also :)\n. On Android, you can press menu button for dev menu. Let's not remove that. Keep the message as it is for Android.\n. nit: unnecessary semicolon\n. nit: unenecessary semicolon\n. We should change var to const\n. if you declare a variable with const, it cannot be used before declaring, unlike var. so you will need to move it to top.\n. Nevermind. Seems I was wrong.\n. @Purii I think it's working because babel transpiles it and changes it to var. AFAIK, it will work in loose mode, but will throw a ReferenceError in strict mode.\nSo I think we should move it to top;\n. Why not display.getRealMetrics?\n. Errors shouldn't be ignored. If they are user errors, throw them, or if they cannot be fixed by user, log them with FLog.e.\n. Errors shouldn't be ignored. If they are user errors, throw them, or if they cannot be fixed by user, log them with FLog.e.\n. @jaysoo Yes, but you're already checking Build.VERSION.SDK_INT >= 17\n. @jaysoo Yes, but you're already checking Build.VERSION.SDK_INT >= 17\n. Why use Reflection if you're already  checking Build.VERSION.SDK_INT >= 17?\n. Why use Reflection if you're already  checking Build.VERSION.SDK_INT >= 17?\n. _handleOpenURL looks like a private method. So I think we should not specify the name.\n. _handleOpenURL looks like a private method. So I think we should not specify the name.\n. Can you comment this out?\n. Can you comment this out?\n. Not related to your PR, but where is this linter.js file? Isn't the correct way to do this will be to run eslint?\n. May be change \"complete\" -> \"sign\"?\n. may be \"package manager\" -> \"haste package manager\"?\n. Will be nice to add Circle CI also\nEnsure the tests pass on Travis and Circle CI.\n. Also add the link, https://code.facebook.com/cla\n. Can you add the link here directly?\n. nit: Have all sentences on the same line.\n. nit: Have all sentences on the same line.\n. Might need a bit of rewording,\n`react-native --version` doesn't give the version of the `react-native` package. The command `react-native` is provided by the `react-native-cli` package and `react-native --version` shows the version of the `react-native-cli` package.\n. Might need a bit of rewording,\n`react-native --version` doesn't give the version of the `react-native` package. The command `react-native` is provided by the `react-native-cli` package and `react-native --version` shows the version of the `react-native-cli` package.\n. Add NOTE in the beginning :)\n. Add NOTE in the beginning :)\n. Can you remove the version change here?\n. Can you remove the version change here?\n. Move catch to previous line, e.g.-  } catch (e) {\n. Move catch to previous line, e.g.-  } catch (e) {\n. Extra variable seems unnecessary, you can just do console.log('react-native-cli: ' + require('./package.json').version)\n. Extra variable seems unnecessary, you can just do console.log('react-native-cli: ' + require('./package.json').version)\n. console.log('react-native: ' + require(REACT_NATIVE_PACKAGE_JSON_PATH()).version)\n. console.log('react-native: ' + require(REACT_NATIVE_PACKAGE_JSON_PATH()).version)\n. not currently inside a React Native project directory -> not inside a React Native project directory\n. not currently inside a React Native project directory -> not inside a React Native project directory\n. Remove the note\n. Remove the note\n. nit: These all can fit in one line, as long as it's within 100 characters.\n. nit: These all can fit in one line, as long as it's within 100 characters.\n. Sorry for late reply. But seems you forgot to change this one,\n```\nInstall the react-native node package in a subdirectory of your project. It will be helpful, when we're bundling and serving js files with the React Native development server (see below), to have this in a directory by itself, with no other child or sibling js files. We suggest running the install command from the root directory of your project (so that node_modules ends up as sibling to your .xcodeproj file):\nnpm install react-native\n\n```\nto\n``\nInstall thereact-native` package from npm by running the following command in the root directory of your project:\nnpm install react-native\n\nThis will install React Native under a directory named node_modules.\n```\n. A performance\n. A performance\n. This is enabled by default.\n. This is enabled by default.\n. I think it was better previously. XCode is not required for Android development. I was just mentioned because if someone has XCode, he already has Git, and no need to do anyting. Also this text means that you have to install GIT even if you have XCode installed.\n. I think it was better previously. XCode is not required for Android development. I was just mentioned because if someone has XCode, he already has Git, and no need to do anyting. Also this text means that you have to install GIT even if you have XCode installed.\n. Can you wrap it in backticks? like\n```\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Android SDK Tools\n```\n. Can you wrap it in backticks? like\n```\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Android SDK Tools\n```\n. Also this,\n```\nString Value:\nName: Path\nValue: C:\\Program Files\\Android\\sdk\n```\nIt'll also be helpful to add the exact steps to do this. For example, Open run command, type regedit.exe etc.\n. Also this,\n```\nString Value:\nName: Path\nValue: C:\\Program Files\\Android\\sdk\n```\nIt'll also be helpful to add the exact steps to do this. For example, Open run command, type regedit.exe etc.\n. You will also need to run the command `adb reverse tcp:8081 tcp:8081` with this emulator.\n. You will also need to run the command `adb reverse tcp:8081 tcp:8081` with this emulator.\n. Remove 'Obviously'.\n. Remove 'Obviously'.\n. Can you remove this line? We already say these things in the paragraph below.\n. @astreet Will do.\n. @astreet I'm not familiar with how it works, but I think it tries to load the bundle from cache if packager is not running, and gets emoty file, which leads to cannot find variable __fbBatchedBridge error. However I didn't try release mode, so yeah, it might be failing. I'll test ASAP.\nAny suggestions on how to handle this correctly?\n. @astreet Okies. I think I'll remove other changes from this PR until we figure out how to correctly check for bundle and have only the message improvement.\n1) How do I distinguish between FB internal and OSS?\n2) Will do\n3) Will try\nAlso if you can provide me some guidance on how to correctly handle the error it'll be great. Currently for the first time it always says cannot find variable... error, which is of no help.\n. Haven't been able to work on it yet. Hopefully still be able to soon. Check https://github.com/facebook/react-native/issues/4739 on the issue I'm trying to address.\n. @astreet About putting both in the message, it kinda seems weird to have FB internal stuff in the message which can confuse the users. Not sure about this one. Note that the error message on iOS doesn't have the FB internal stuff either.\nWhy not put runServerHere.sh as npm start for FB internals? It'll mean that it's the same command for both, and remove the ambiguity.\n. Prolly we shouldn't write the whole error since it's likely to change. You can write,\nIf you don't do this, you will see the error - `Could not connect to development server.` when connecting to your server over http.\n. +1 for require.resolve\n. IMO it's be better to communicate to the JS code that it failed rather than crashing the app. I guess setColor can return a Promise. Same for others.\n. Prolly console.warn that this is not available on Android?\n. We should prolly change those binds to arrow functions sometime.\n. We should remove this example since we're deprecating the API.\n. Can we remove this from native and move the backward compatibility to JavaScript? When we deprecate and remove this, it'll be much easier.\nSame for iOS\n. Directly pass the exception to Promise.reject, e.g. -  no need for e.getMessage()\n. We prolly don't need a log here since we're passing the exception to JavaScript anyways.\n. Merge this method to the getString(Promise promise)\n. No need for extra variable here.\njava\nreturn (ClipboardManager) getReactApplicationContext().getSystemService(reactContext.CLIPBOARD_SERVICE);\n. Why eslint strict: 0?\n. +1 for adding tests\n. Do we need an arrow function here?\n. Nor sure about the naming :)\nProbably just inline this in the \"getString\" method as we don't use it anywhere else :D\n. typo: gives\nCan omit \"which is supported\"\n`Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android\n. nit: space after ()\n. I'm not sure about this. I searched the codebase for RKSourceCode and it's not used anywhere. RCTSourceCode is used in JavaScript and Obj-C, but it's not there in any Java code.\n. I'm not sure about this. I searched the codebase for RKSourceCode and it's not used anywhere. RCTSourceCode is used in JavaScript and Obj-C, but it's not there in any Java code.\n. @bestander My bad, should be 0. Will fix.\n. @bestander My bad, should be 0. Will fix.\n. I left it as it is because this code for handling callbacks is temporary, which is only there for backward compatibility for 1-2 releases to give devs the time to migrate to the new API. Promisify would be great if we want to support both promises and callbacks, but as far as I understand, we're only going to support promises.\nGood thing about the completely separated if else is, we can just remove that block in the future and everything will work fine. If I write some logic to handle both promises and callbacks, then I have to undo all those changes when we entirely remove support for callbacks.\n. I left it as it is because this code for handling callbacks is temporary, which is only there for backward compatibility for 1-2 releases to give devs the time to migrate to the new API. Promisify would be great if we want to support both promises and callbacks, but as far as I understand, we're only going to support promises.\nGood thing about the completely separated if else is, we can just remove that block in the future and everything will work fine. If I write some logic to handle both promises and callbacks, then I have to undo all those changes when we entirely remove support for callbacks.\n. > temporary things tend to get more permanent than we plan\nYeah, not sure how we can tackle this, maybe I need to keep a tasklist like we do for commits to cherry-pick, and ensure that they are removed.\n\nwe will do this if (callbacks.length > 0) a lot, for every API that we want to promisify. If we don't provide a helper function we will have much more almost dead code in APIs for quite a while.\n\nYeah, we're going to do this a lot, so the helper method can indeed come handy. But given the inconsistency between the types of callbacks, it won't be that much helpful IMO - https://github.com/facebook/react-native/issues/4971\n. > temporary things tend to get more permanent than we plan\nYeah, not sure how we can tackle this, maybe I need to keep a tasklist like we do for commits to cherry-pick, and ensure that they are removed.\n\nwe will do this if (callbacks.length > 0) a lot, for every API that we want to promisify. If we don't provide a helper function we will have much more almost dead code in APIs for quite a while.\n\nYeah, we're going to do this a lot, so the helper method can indeed come handy. But given the inconsistency between the types of callbacks, it won't be that much helpful IMO - https://github.com/facebook/react-native/issues/4971\n. That'll be super cool. Thanks :)\nWill update soon.\n. That'll be super cool. Thanks :)\nWill update soon.\n. Why not momentumScrollingEnabled?\n. Why not momentumScrollingEnabled?\n. or scrollDecelerationRate, if it allows customizing the rate.\n. or scrollDecelerationRate, if it allows customizing the rate.\n. I'm confused on what should I resolve with here.\n. I'm confused on what should I resolve with here.\n. Maybe this can be just a warning, and not error?\n. Maybe this can be just a warning, and not error?\n. I'd prefer a bit more informative warnings. When I see YellowBox with this warning, it'll not be obvious to me regarding where it's coming from and what to do.\nSome thing like,\nWebView: url prop is deprecated. Use the source prop instead.\n. I'd prefer a bit more informative warnings. When I see YellowBox with this warning, it'll not be obvious to me regarding where it's coming from and what to do.\nSome thing like,\nWebView: url prop is deprecated. Use the source prop instead.\n. @nicklockwood That'll be awesome. Though I'm not aware of any such functionality in React. Maybe we could do this with propTypes?\n. @nicklockwood That'll be awesome. Though I'm not aware of any such functionality in React. Maybe we could do this with propTypes?\n. Something like,\n`` js\nfunction deprecatedPropType(checker, message) {\n    return (props, propName, componentName) => {\n        console.warn(${componentName}: ${propName} prop is deprecated. ${mesage}`);\n        return checker(props, propName, componentName);\n    };\n}\npropTypes = {\n    url: deprecatedPropType(React.PropTypes.string, \"Use source prop instead.\")\n}\n```\n. Something like,\n`` js\nfunction deprecatedPropType(checker, message) {\n    return (props, propName, componentName) => {\n        console.warn(${componentName}: ${propName} prop is deprecated. ${mesage}`);\n        return checker(props, propName, componentName);\n    };\n}\npropTypes = {\n    url: deprecatedPropType(React.PropTypes.string, \"Use source prop instead.\")\n}\n```\n. How about,\n``` js\n// @deprecated, will be removed on March 1 2016\n// helper for deprecated callbacks pattern\nfunction decallbackify(promise: Promise, callbacks: Array, type, warning) {\n  if (callbacks.length > 0) {\n    console.warn(warning);\n    switch (type) {\n    case 'success-first': // handles func(success, error), func(success)\n      const success = callbacks[0];\n      const error = callbacks[1];\n      return promise.then(\n        res => success(res),\n        err => {\n          if (error) {\n            error(err);\n          } else {\n            throw err;\n          }\n        }\n      );\n    case 'error-first': // handles func(error, success)\n      const error = callbacks[0];\n      const success = callbacks[1];\n      return promise.then(\n        res => success(res),\n        err => error(err)\n      );\n    case 'node': // handles func(callback)\n      const callback = callbacks[0];\n      return promise.then(\n        res => callback(res),\n        err => callback(null, err)\n      );\n    default:\n      throw new Error('Type of callbacks not specified. Must be one of \\'success-first\\', \\'error-first\\', or \\'node\\'');\n    }\n  }\nreturn promise;\n}\n```\nThen, we would do,\njs\nreturn decallbackify(\n  Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS')),\n  arguments, 'node',\n  'NetInfo.isConnectionMetered(callback) is deprecated. Use the returned Promise instead.'\n);\n. How about,\n``` js\n// @deprecated, will be removed on March 1 2016\n// helper for deprecated callbacks pattern\nfunction decallbackify(promise: Promise, callbacks: Array, type, warning) {\n  if (callbacks.length > 0) {\n    console.warn(warning);\n    switch (type) {\n    case 'success-first': // handles func(success, error), func(success)\n      const success = callbacks[0];\n      const error = callbacks[1];\n      return promise.then(\n        res => success(res),\n        err => {\n          if (error) {\n            error(err);\n          } else {\n            throw err;\n          }\n        }\n      );\n    case 'error-first': // handles func(error, success)\n      const error = callbacks[0];\n      const success = callbacks[1];\n      return promise.then(\n        res => success(res),\n        err => error(err)\n      );\n    case 'node': // handles func(callback)\n      const callback = callbacks[0];\n      return promise.then(\n        res => callback(res),\n        err => callback(null, err)\n      );\n    default:\n      throw new Error('Type of callbacks not specified. Must be one of \\'success-first\\', \\'error-first\\', or \\'node\\'');\n    }\n  }\nreturn promise;\n}\n```\nThen, we would do,\njs\nreturn decallbackify(\n  Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS')),\n  arguments, 'node',\n  'NetInfo.isConnectionMetered(callback) is deprecated. Use the returned Promise instead.'\n);\n. Shouldn't this be __ANDROID__? Sorry, not familiar with how this works.\n. Shouldn't this be __ANDROID__? Sorry, not familiar with how this works.\n. @nicklockwood was suggesting not to use constants. These could be just strings, e.g. - \"open\", \"closed\", \"unlocked\".\n. @nicklockwood was suggesting not to use constants. These could be just strings, e.g. - \"open\", \"closed\", \"unlocked\".\n. I feel like The packager was is unnecessary.\n. I feel like The packager was is unnecessary.\n. @prashanth1509 Yeah, right. Forgot that I could use destructring syntax :)\n. @prashanth1509 Yeah, right. Forgot that I could use destructring syntax :)\n. For logging errors, you can use FLog.e :)\n. For logging errors, you can use FLog.e :)\n. Do we want to use stage-2 features in our examples? I heard it might change a bit.\n. We could remove this heading (just to be consistent with other pages)\n. @DavidYKay Yeah. Will let you know when I finish the review :)\n. Let's merge the \"Platform\" and \"Prerequisites\" to one section. Also we can link to /react-native/docs/android-setup.html here.\nThis guide assumes that you're working with Ubuntu Linux 14.04 LTS. Other versions of Ubuntu might work, but not tested. Before continuing, be sure to [install the Android SDK](/react-native/docs/android-setup.html).\n. Can remove these two lines\n. Remove this heading\n. Installing NodeJS\n. Can remove this line.\n. Fire up the Terminal and paste the following commands to install NodeJS from the [NodeSource](https://nodesource.com/) repository:\nAlso it would be great if we could include instructions for other popular distros, like Fedora and Arch. Or maybe just link to the instructions page for other distros.\n. Prolly also include this command ln -s /usr/bin/nodejs /usr/bin/node to symlink node to nodejs.\n. Does this happen? Isn't npm included in the nodejs package?\n. Installing Watchman\n. [watchman](https://facebook.github.io/watchman/docs/install.html) is a tool by Facebook for watching changes in the filesystem. You need to install it for better performance and avoid a node file-watching bug.\n. Paste the following into your Terminal to compile watchman from source and install it:\n. Installing Flow\n. Flow is a static type checker for JavaScript. To install it, paste the following in the Terminal:\n. __NOTE__: You can put theflowexecutable anywhere on your PATH. It doesn't have to be in/usr/local/bin. (for advanced users)\n. We can just link to the Quick Start page for above 2 sections.\n. Fire up the Terminal and paste the following commands to install NodeJS from the [NodeSource](https://nodesource.com/) repository:\nAlso it would be great if we could include instructions for other popular distros, like Fedora and Arch. Or maybe just link to the instructions page for other distros.\nProlly also include this command ln -s /usr/bin/nodejs /usr/bin/node to symlink node to nodejs.\n. Fire up the Terminal and paste the following commands to install NodeJS from the [NodeSource](https://nodesource.com/) repository:\nAlso it would be great if we could include instructions for other popular distros, like Fedora and Arch. Or maybe just link to the instructions page for other distros.\nProlly also include this command ln -s /usr/bin/nodejs /usr/bin/node to symlink node to nodejs.\n. If there is no issue on 14.04, we should remove this.\n. If there is no issue on 14.04, we should remove this.\n. Capital W\n. Capital W\n. Capital F\n. Capital F\n. [watchman](https://facebook.github.io/watchman/docs/install.html) is a tool by Facebook for watching changes in the filesystem. You need to install it for better performance and avoid a node file-watching bug.\n. [watchman](https://facebook.github.io/watchman/docs/install.html) is a tool by Facebook for watching changes in the filesystem. You need to install it for better performance and avoid a node file-watching bug.\n. Paste the following into your Terminal to compile watchman from source and install it:\n. Paste the following into your Terminal to compile watchman from source and install it:\n. Flow is a static type checker for JavaScript. To install it, paste the following in the Terminal:\n. Flow is a static type checker for JavaScript. To install it, paste the following in the Terminal:\n. nit: Setting up\n. nit: Setting up\n. Let's set up an Android device to run our starter project. First thing is to plug in your device and check the manufacturer code by usinglsusb, which should output something like this:\n. Let's set up an Android device to run our starter project. First thing is to plug in your device and check the manufacturer code by usinglsusb, which should output something like this:\n. Instead of Seems like a bunch of gibberish, eh?, we might write These lines represent the USB devices currently connected to your machine.\n. Instead of Seems like a bunch of gibberish, eh?, we might write These lines represent the USB devices currently connected to your machine.\n. You'll see that after removing the phone, the line which has the phone model (\"Motorola PCS\" in this case) disappeared from the list. This is the line that we care about.\n. You'll see that after removing the phone, the line which has the phone model (\"Motorola PCS\" in this case) disappeared from the list. This is the line that we care about.\n. the above\n. the above\n. One liner :)\necho SUBSYSTEM==\"usb\", ATTR{idVendor}==\"22b8\", MODE=\"0666\", GROUP=\"plugdev\" | sudo tee /etc/udev/rules.d/51-android-usb.rules\nAlso add,\nMake sure that you replace22b8with the identifier you get in the above command.\n. Remove these two lines.\n. Link to this page - http://facebook.github.io/react-native/docs/running-on-device-android.html#content\n. We can remove everything after this line and link to the Quick Start page.\n. @DavidYKay In that case we should fix the issue that's stopping this from working, but for now, let's just have the \"Running the Project\" and link to quick start for everything after that\n. > Symlink: My experience is that 14.04 provides /usr/bin/node using /etc/alternatives/node. I can verify this in a VM if need be.\nOkay, would be cool if you could verify. Coz the NodeJS page tells to do this.\n\nOther distros: I'm a huge fan of alternate distros, but I'd rather get Ubuntu published covered first then come back and patch this for Arch and Fedora. Let me know if this is OK.\n\nYeah, I guess for now let's just have a link pointing to NodeJS's installation page.\n. You'll need to change the id to getting-started-linux. Also need to edit the getting-started page so it includes link to this page as next.\n. @DavidYKay I guess the if \"Create project\" section goes after \"Setting up Android Device\", we don't need to have it here, and there won't be any back-forth nav.\n. Both of these sections can go after \"Setting up Android\" device\n. I'd remove the $ to make it easier to copy/paste the whole thing.\n. typo : ln\n. nit: directions - instructions\n. Remove $\n. follow the commands -> follow the instructions\n. Directly link to Quick Start\nin the \"Quick Start\" section of [Getting Started](/react-native/docs/running-on-device-android.html). -> in the [Quick Start](http://facebook.github.io/react-native/docs/getting-started.html#quick-start) guide.\n. Advance to Quick Start -> Next steps\n. I'm sure I had commented here, not sure what happened,\n``\nNow check if your device is properly connected to your machine via ADB. Runningadb devices` in a Terminal should give you something like this:\n```sh\nList of devices attached\nTA9300GLMK  device\n```\n``\n. Can remove this, since it's already covered by theQuick Startsection, which comes next.\n. Remove$. This section is already covered byQuick Start, which is the next section. Let's remove this, and add info aboutsudoto theQuick Start.\n. Remove$. I guess you forgot to remove this.\n. @dmmiller Yeah, I guess silently swallowing will preserve the old behaviour. Currently throwing the error will trigger the default behaviour of promise with uncaught errors, which is to redbox. Will update.\n. Won't we have almost 3 releases before April 1st?\n. Sorry typo. Functions are wrong. Fixing.\n. @bestander yeah\n. @dmmiller Removing.\n. Can we use the ES2015 class syntax here?\n. We should add a comment here// Handle error, andconsole.errorinstead of throwing.\n. You need to add it to thereact-native.js.flow` file.\n. @ide yes, but that also means that we need to update the commit ref whenever the file changes, as opposed to updating the file path when it changes (which I assume would occur less frequently).\nI agree that it'll be much better to tell people how to find this file, which will avoid both of aforementioned problems.\n. Oops. Sorry. Committed this by mistake. Will remove.\n. That was my first thought, but then I wasn't sure when it'll get removed from the map since I'm not keeping any reference to the toast object.\n. @astreet doesn't Toast.getDuration return Toast.LENGTH_SHORT or Toast.LENGTH_LONG? Which in turn will be 0 and 1?\n. @martinbigio We can't change it, unless we have the ability to cancel the toast (which is still flaky, but still)\n. We can only choose between 2s and 3.5s for Toasts.\n. @martinbigio Yeah, PR is here - #5906\n. @nicklockwood Yeah, no auto-binds in ES2015 classes, unless you use class properties (stage-1).\n. BTW the better approach is to bind them in the constructor to avoid new function creation on every render.\n. @cpojer My bad. For some reason it didn't work for me last time I tried. Will update the PR.\n. Should be an enum of supported types, text | json\n. Prefix method with underscore since it's a private method.\n. Prefix method with underscore since it's a private method.\n. nit: no space before : ArrayBuffer\n. nit: better variable names like buffer, bufferView.\n. nit: space after if\n. Use === for comparison\n. Use curly braces\n. Use curly braces\n. Do we need Object(...) here? I know it's a DOMString for some unknown reason, but does it need to be String object here instead of just a primitive?\n. Do we need Object(...) here? I know it's a DOMString for some unknown reason, but does it need to be String object here instead of just a primitive?\n. Can just return here. No need for extra variable.\n. Can just return here. No need for extra variable.\n. Space after if, and curly braces.\n. Space after if, and curly braces.\n. The spec also has a type json. Can we support it?\n. The spec also has a type json. Can we support it?\n. Why @Nullable? Doesn't it always return a Map?\n. Yeah, but we already know the values, so we can be more specific. The following covers everything we support right now,\njs\nresponseType: '' | 'arraybuffer' | 'text';\n. Yeah, but we already know the values, so we can be more specific. The following covers everything we support right now,\njs\nresponseType: '' | 'arraybuffer' | 'text';\n. This should be this._stringToArrayBuffer\n. This should be this._stringToArrayBuffer\n. This should be this._uintToString\n. This should be this._uintToString\n. @sreesharp It'll probably create confusion. Can you create another PR only adding reponseText and responseType? Sorry for the trouble.\n. @nicklockwood Oh. Cool then :)\n. @bestander When I sent the PR, we didn't have class properties enabled in Flow. I think it has been enabled in a later commit. Also we've more errors now for some reason. I'll fix these today. Thanks for letting me know.\n. Please combine these two catch blocks like this, (IOException | IllegalStateException e)\n. Do we need the syntax plugin if we include the transform plugin?\n. @janicduplessis Yeah, but - https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-object-rest-spread/package.json#L12\n. @martinbigio Yeah, that'll be great. Will work on it.\n. @martinbigio Yeah, that'll be great. Will work on it.\n. Why not use String.isEmpty?\n. How about using String.join(\",\", protocols) instead?\n. @zxcpoiu It's okay, because we only support Android 4.1 and above.\n. @zxcpoiu Sounds good.\n. Can you add a new line before this?\n. Can you add a new line before this?\n. In -> in\n. In -> in\n. @grabbou Oh, my bad, I shouldn't be re-assigning the variable. Will fix.\n. @grabbou Oh, my bad, I shouldn't be re-assigning the variable. Will fix.\n. Flow now fails due to this change. This object is being spread in NavigationCard.\nThe reason I changed it because otherwise the NavigationPropTypes exported from this cannot be used directly like PropTypes.shape(NavigationPropTypes) or even by spreading, since it contains a mix of PropTypes and plain objects. What do you suggest I do here?\n. @hedgerwang If I pass it as a separate prop, it's easier to pass it to renderLeftComponent, renderRightComponent etc. If I spread it, then I've to pick the exact props I want to pass to those functions, which is not nice.\n~~@ericvicenti The object exported from NavigationPropType is still a mix of prop types and plain objects even if I spread~~\n. It's optional, but if we remove it there won't be any title.\n. @ericvicenti Okay, will do that\n. @hedgerwang oh wait, I was mistaken. Will fix.\n. @ericvicenti Still want to remove it?\n. @hedgerwang \n\nYou can still split the props at the render function of NavigationHeader and pass them to renderLeftComponent and renderRightComponent separately.\n\nWe pass the same props to the renderer function, so splitting it means extra work and filtering out other props before passing it to the function. Here we just pass the same thing, so it' simpler.\nI can split it, and it's not that much work, but why not keep things simpler?\n\nThe contract is that the props enforces the type NavigationSceneRendererProps and people would be able to build different kind of navigation header without inventing new props definitions.\n\nThe type of the props is still the same, isn't it? Every renderer function gets the same set of props.\nIf you were talking about passing the navigationProps and scene to each renderer, I don't think we can avoid that, as the header renders one of each component for every screen.\n. @hedgerwang \n\nYou can still split the props at the render function of NavigationHeader and pass them to renderLeftComponent and renderRightComponent separately.\n\nWe pass the same props to the renderer function, so splitting it means extra work and filtering out other props before passing it to the function. Here we just pass the same thing, so it' simpler.\nI can split it, and it's not that much work, but why not keep things simpler?\n\nThe contract is that the props enforces the type NavigationSceneRendererProps and people would be able to build different kind of navigation header without inventing new props definitions.\n\nThe type of the props is still the same, isn't it? Every renderer function gets the same set of props.\nIf you were talking about passing the navigationProps and scene to each renderer, I don't think we can avoid that, as the header renders one of each component for every screen.\n. @grabbou Not sure why the bot is giving warnings here. I didn't get these warnings in Atom. It shouldn't give the warning since I'm using multiline strings. May be something wrong with the ESLint config. Will check.\n. Can we mark repeat as optional? And maybe set the default value to 1?\n. nit: Change IOS to iOS\n. nit: Change IOS to iOS\n. @bestandr Thanks. Trying to fix. How can I verify that buck build passes locally? Sorry for the noob question.\n. @bestander Thank you.\n. What's the value of the props.scene passed to the render*Component functions? Is it the currently visible scene, or is it the scene for which the component is rendered?\n. can we name the variable as just hashMap instead of unwrappedMap?\n. can we name the variable as just arrayList instead of unwrappedMap?\n. We shouldn't throw a runtime exception here. Let's throw an checked exception which the developer is forced to handle. We can add a ReadableArray exception class if it's not there.\n. Check my comment about the exception above.\n. @hedgerwang Sounds good.\n. Agree. We should add docs regarding this to avoid confusion. But overriding animation style should be possible.\n. Why not ArrayList<Object> arrayList = new ArrayList<>; and arrayList.add(value) instead of arrayList.add(i, value)? Since you're looping over the array, the order is preserved, and you don't need to specify the size while initialising and the index every time.\n. Nitpicking\n. Why is the value of repeat -1? What happens when you set it to 0? Looks kinda weird to repeat something for -1 times.\n. If pattern is not a number or array, let's throw an error.\n. @dmmiller I think a number >= 0 is a reasonable API. 0 = don't repeat, n = repeat n times, of course we've to normalize the value to what Android understands.\nIn fact, the web vibration API doesn't have repeat option at all. I guess because it can be done using a loop and timeout, though not very convenient.\n. @dmmiller Oh wait, it's the index of the pattern, not repeat n times. I think we should just change it to true | false and pass 0 | -1 to Android accordingly.\n. I don't think we want to maintain the list of device names. May be leave them out?\n. Why not add them in the catch block instead of adding them twice? \n. Use FLog.e instead\n. Use FLog.e instead\n. Why do these need to be getters? Flow doesn't support get and set. If we just use them directly, we can annotate them with Flow.\n. Also add it to react-native.js.flow also\n. I don't think we need this. If someone wants it, he/she can easily get it.\n. BundleID is a very easy to confuse with the JavaScript bundle. We should change it to PackageName\n. Also the naming should be consistent between Native and JS, let's not use camelcase on Native and titlecase on JS.\n. Let's call it DeviceInfoModule\n. This is not really a manager. Let's call it DeviceInfoModule. I don't get why we have different names for same modules on iOS and Android. cc @nicklockwood \n. Why not just l?\n. @skv-headless I think it should be okay. Let's keep the Java code as it is, and change the JS to pass -1 or 0. So that if we need it, we can change it in future, and think of a better API.\n. js\nRCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);\n. It should check the path separator first,\njs\nif (path.sep === '\\\\') {\n  transform = transform.replace(/\\\\/g, '/');\n}\nI think we should move this to a module normalizePath or something, and use it instead of duplicating the code.\n. Can you do the check here instead of doing it onRefresh?\n. nit: call the argument content, not contents\n. Make this promise a local variable since it doesn't depend on out stuff.\n. Let's promise.reject here also instead of a runtime execption?\n. nit: shareTextContent -> shareText.\n. We should probably remove this extra conversion instead of removing the one at the top\n. Check @olegbl 's comment\n. The spec allows to specify a reason, and the Android implementation supports it also. Can you add it? \n. Can you move the static properties above the non-static properties?\n. nit: indentation\n. What does this do exactly?\n. nit: unnecessary new line\n. nit: unnecessary new line\n. nit: unnecessary new line\n. nit: unnecessary new line\n. @philikon Not a new feature really, since closeConnectionImpl already has it, and it was left out in the close method. But I'm fine with either.\n. @philikon Not a new feature really, since closeConnectionImpl already has it, and it was left out in the close method. But I'm fine with either.\n. @philikon I prefer a lot of new lines in code, but that's not how React Native's authors prefer it.\n. @philikon I prefer a lot of new lines in code, but that's not how React Native's authors prefer it.\n. @philikon How does mocking the module this way work? Since WebSocket is calling methods like this.dispatchEvent which are supposed to be on the base class, won't it throw error as they don't exist? I don't know the original reason on why it was written this way, probably some Jest issue reading from the comments.\n. @philikon How does mocking the module this way work? Since WebSocket is calling methods like this.dispatchEvent which are supposed to be on the base class, won't it throw error as they don't exist? I don't know the original reason on why it was written this way, probably some Jest issue reading from the comments.\n. Are these comments necessary?\n. Are these comments necessary?\n. @philkon I think our ESLint config doesn't use env: browser\n. @philkon I think our ESLint config doesn't use env: browser\n. Sad that we have the same list in 3 places.\n. Are you sure this is correct? This looks different from the previous code, where validateStyle took the whole object and registerStyle took a property of the object.\n. Can we move this to the previous line?\n. Can we move this to the previous line?\n. @jaggs6 If you want it in a separate line, please make it consistent with rest of the code (i.e. we have the + sign at the end of the line). Right now it looks inconsistent.\njs\ngradleArgs.push('install' +\n            args['flavor'][0].toUpperCase() +\n            args['flavor'].slice(1) +\n           'Debug'\n);\n. @jaggs6 If you want it in a separate line, please make it consistent with rest of the code (i.e. we have the + sign at the end of the line). Right now it looks inconsistent.\njs\ngradleArgs.push('install' +\n            args['flavor'][0].toUpperCase() +\n            args['flavor'].slice(1) +\n           'Debug'\n);\n. I don't think it should be in rn-cli.config. It's not a configuration option. It's just the list of what's supported by RN. If someone adds a random extension there it won't work, since the library doesn't support it.\n. Can you add a deprecation warning here?\n. Can you add a deprecation warning here?\n. Something like console.warn('--flavor is deprecated. Use --variant instead')\n. Something like console.warn('--flavor is deprecated. Use --variant instead')\n. Actually it won't work for Windows. So let's remove the text This is a global way that will work for any platform\n. Can you move it to the bottom of the paragraph please?\n. @vikeri yes\n. @andreicoman11 Any suggestions on how to handle this without needing to add the event to ReactInstanceManager, if this could be handled in the IntentModule?\n. @andreicoman11 Any suggestions on how to handle this without needing to add the event to ReactInstanceManager, if this could be handled in the IntentModule?\n. We should check for if uri is null, and shouldn't send the event in that case. Can you copy the code from here instead? https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java#L51\n. We should check for if uri is null, and shouldn't send the event in that case. Can you copy the code from here instead? https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java#L51\n. @grabbou This is an interesting scenario, since it's unclear how to handle cancellation of a promise. While I think that user cancellation is not an error, it's not a success either, so there's nothing the promise can resolve to.\nI've been rejecting the promise on user cancellations, and I check the error message to see if it was a cancellation or other error. It's also a little easier to write when using async await, since all of your error/cancellation handling logic can go under the catch block. And I assume they are usually similar, except the message you want to show to the user.\nWhat's your approach?\n. @grabbou consider the following,\n-> when promise is resolved on cancellation\njs\n_doSomething() {\n    try {\n        const { completed, ...result } = await dosomeAsyncThing();\n        if (completed) {\n            // do whatever\n        } else {\n             // show a error message/go back to previous page or something\n        }\n    } catch (e) {\n        // show a error message/go back to previous page or something\n    }\n}\n-> when promise is rejected on cancellation\njs\n_doSomething() {\n    try {\n        const result= await dosomeAsyncThing();\n        // do whatever\n    } catch (e) {\n        // show a error message/go back to previous page or something\n    }\n}\nI slightly lean towards rejecting a promise, because it's bit cleaner, and doesn't need an additional completed property on the result object (what if result is a boolean instead of an object). But don't have any strong preference.\nAbout other APIs, I don't think we've any such modules. NetInfo doesn't really fit the scenario since there is no user cancellation involved. Lack of information can be communicated by returning null or something like that. User cancellation is trickier.\n. Yeah, we allow passing an error code from Native side. So it's easy to check error code for cancellation.\n. > Yeah, but does it mean we will have to do something like this 'e.code === \"ECANCELLED\"'? Not sure if it's better than the Boolean. In that case, I would suggest exporting some codes from module itself so it's easier, what you think?\nYeah. Or we could have a standard error code for all cancelations? Whichever we do, as long as we have an easy way of knowing if it was a cancellation, we should be fine.\n\nBecause in case you only want to handle errors -> with solution not reporting cancellations as errors you get less code. \n\nActually it forces you to handle cancellation always, since the result differs in case of success and cancellation. So if you try to do something on the result when it's cancelled, you've to do a check first, otherwise it's going to fail.\ncc @ide what do you think?\n. @grabbou I've seen RN core team prefer enums over exported constants.\n. @andreicoman11 It doesn't exist in the ActivityEventListener interface, so can't be used in a module. Should we add it there?\n. @andreicoman11 It doesn't exist in the ActivityEventListener interface, so can't be used in a module. Should we add it there?\n. @andreicoman11 Should we add this to https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/ActivityEventListener.java so that all modules can use it?\n. @andreicoman11 Should we add this to https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/ActivityEventListener.java so that all modules can use it?\n. @deminoth Yes\n. @deminoth Yes\n. This should be optional. Does Flow pass with this?\n. This should be optional. Does Flow pass with this?\n. We're unnecessarily creating an empty object, though not major, could be easily avoided with a simple check when accessing a property\n. We're unnecessarily creating an empty object, though not major, could be easily avoided with a simple check when accessing a property\n. I'm confused about the shape of the subviewStyle object. How does it look? Can you give an example?\n. I'm confused about the shape of the subviewStyle object. How does it look? Can you give an example?\n. @tlvenn Hmm, this is not a pattern we use anywhere. Usually we pass style objects when props are named *style instead of a stylesheet object. May be the prop should be named to subviewStyleSheet.\n. subviewStyle: any means it can be of any type, but it's compulsory. Adding a ? as style?: any has will mark it as optional.\n. You don't even have to a ternary operator (though I don't see any problems). subviewStyle && subviewStyle[name] works, and this is the pattern we use everywhere. For example we don't assign a default empty function when a callback is not given, we instead check if the function exists before executing it.\n. former name -> formerly\n. Both work :)\n. @mkonicek The event is called openURL on iOS, so keeping same name means no extra handling for android is needed on JS side.\n. It should be npm start instead. But since there are all these different ways to start the server, We should just say You might need to start the React Native packager.\n. This is only true for Android devices.\n. Could you add a bullet or - to the points?\n. nit: space after comma\n. can you fix this nit also?\n. What does NS mean here?\n. nit: add newline before this line\n. What happens when it's a ftp URL?\n. e.g. import React, { Component } from 'react';\n. import React, { Component } from 'react';\n. import React, { Component } from 'react';\n. I've often found that both are necessary when you're using android studio.\nBTW, if we're mentioning bash, I think it'll be useful to point to the file path itself, ~/.bash_profile. We shouldn't ignore other shells like zsh either though. So a sentence for other shells might be useful too.\n. This is not part of the WebSocket spec, right? How do other libs implement it?\n. I think we shouldn't do anything special only for tel:. Probably a better way is to check if it's not http: or https: and handle the intent.\n. not: unnecessary comment\n. It'll probably suffice to just use a Intent.ACTION_VIEW for all URLs. In case of tel:, it won't dial the number, but will probably open the dialer with the number.\n. Does it work without the flag Intent.FLAG_ACTIVITY_NEW_TASK? We should use the current activity to start the intent (which doesn't need the flag) if we can. It provides better UX since most of the time the user can press back to come to the previous screen.\n. Does it work without the flag Intent.FLAG_ACTIVITY_NEW_TASK? We should use the current activity to start the intent (which doesn't need the flag) if we can. It provides better UX since most of the time the user can press back to come to the previous screen.\n. This change seems to be unrelated.\n. Please check if it is http or https before handling.\nAlso does startActivity work without FLAG_NEW_TASK\n. This is needed I think since this component is deprecated?\n. nit: space after if and before ||\n. nit: space after if and before ||\n. nit: new line after }\n. nit: new line after }\n. nit: add new line here\n. nit: add new line here\n. I don't think we need to support Honeycomb. React Native doesn't support anything prior to 4.1\n. I don't think we need to support Honeycomb. React Native doesn't support anything prior to 4.1\n. Why do we need this Fragment? Why not use the system intent with Intent.ACTION_SEND?\n. Why do we need this Fragment? Why not use the system intent with Intent.ACTION_SEND?\n. @deminoth Okay, sounds reasonable.\n. @deminoth Okay, sounds reasonable.\n. @deminoth Let's remove it unless someone comments otherwise.\n. @deminoth Let's remove it unless someone comments otherwise.\n. @deminoth One question I have, does this dialog look any different from the system dialog?\n. @deminoth One question I have, does this dialog look any different from the system dialog?\n. Can we make it idleCallbackId: ?number instead of idleCallbackId?: any?\nidleCallbackId?: any doesn't make much sense since it implies that you can just call cancelIdleCallback without any argument. idleCallbackId: ?number is better since you have to pass a number as argument, but you can pass null as well, so no need to check.\n. @deminoth Can you share a screenshot please?\n. @deminoth Can you share a screenshot please?\n. @deminoth Hmm... it's not specific only to pre-Honeycomb then as the comment suggests? Okay, let's leave it here.\n. @deminoth Hmm... it's not specific only to pre-Honeycomb then as the comment suggests? Okay, let's leave it here.\n. @deminoth Yeah, it would be awesome if we could use system dialog.\n. @deminoth Yeah, it would be awesome if we could use system dialog.\n. Let's use a multiline comment here instead.\n. Let's use a multiline comment here instead.\n. Let's implement the promise on the native side instead of in JS. It allows us to pass an error message and error code too.\n. Let's ensure we always have an error passed in case of error in evaluation.\n. @thebnich You can always check for nil on the native side and send an error message and error code to JS, something like eFailed to evaluate JavaScript, ERR_JS_EVALUTION_FAILED.\nChecking for empty string here seems problematic. What if the result is empty string?\n. RN modules support promise natively, so changing this to use a promise instead of a callback will reduce boilerplate on the JS side.\n. @thebnich Ah, ok. Anyways, I still think we should move this to native side. Creating the error on the native side allows us to specify an error code also, which is nice. And we can get rid of the promise boilerplate if we use a promise instead of a callback in native side.\n. We don't need to support both Promise and callback based APIs. React Native is moving to using Promises instead of callbacks. :)\n. I think Flow will soon require type parameters (not sure what they are called), so may be we have to change it to Promise<any>\n. This change is unrelated. Please revert this one.\n. This change is unrelated. Please revert this one.\n. Could be {[key: string]: {[key: string]: any} } right?\n. Could be {[key: string]: {[key: string]: any} } right?\n. @ide Not exactly sure how Flow works here. Do arrays also count as objects? If not then they are same :)\n. @ide Not exactly sure how Flow works here. Do arrays also count as objects? If not then they are same :)\n. @ide Cool then\n. @ide Cool then\n. Do we need a separate docs page just for indicator size? Can we not include it in the same documentation as ActivityIndicator?\n. It can still be accessed by ActivityIndicator.propTypes.size, so yeah, unnecessary.\n. Why custom propType checker? Does the following not work?\njs\nPropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.oneOf([ 'small', 'large' ]),\n])\n. nit: indentation\n. Why do we support passing null?\n. Also why not use defaultProps to get the default size when nothing is passed?\n. This should probably throw or at least warn. It's a programmer error.\n. I think it would be better just to ignore this prop on Android instead of overwriting message. It becomes more explicit then, and the user can decide what to do. For example, I would usually prefer to combine the message and url into a single text on Android.\n. I think it would be better just to ignore this prop on Android instead of overwriting message. It becomes more explicit then, and the user can decide what to do. For example, I would usually prefer to combine the message and url into a single text on Android.\n. How about a isCancelled property instead? cc @grabbou we discussed about this.\n. How about a isCancelled property instead? cc @grabbou we discussed about this.\n. We don't need to both console.warn and reject. If the user is not handling the rejection, it'll show a redbox and if he is already handling the rejection the warning is unnecessary.\n. We don't need to both console.warn and reject. If the user is not handling the rejection, it'll show a redbox and if he is already handling the rejection the warning is unnecessary.\n. Let's just have plain strings instead of constants.\n. Let's just have plain strings instead of constants.\n. Let's ignore this prop on Android.\n. Let's ignore this prop on Android.\n. We don't need to log the error if we're already rejecting.\n. We don't need to log the error if we're already rejecting.\n. @fadils Seems Flow is confused regarding the types. Can you add annotation to getDefaultProps so that flow doesn't try to infer the type and see if it fixes the issue?\n. @fadils Seems Flow is confused regarding the types. Can you add annotation to getDefaultProps so that flow doesn't try to infer the type and see if it fixes the issue?\n. ``` js\ntype IndicatorSize = number | 'small' | 'large';\ntype DefaultProps = {\n  animating: boolean;\n  color: any;\n  hidesWhenStopped: boolean;\n  size: IndicatorSize;\n}\n. js\ntype IndicatorSize = number | 'small' | 'large';\ntype DefaultProps = {\n  animating: boolean;\n  color: any;\n  hidesWhenStopped: boolean;\n  size: IndicatorSize;\n}\n``\n. @deminoth Interesting. We've so many patterns. Let's keep this for now then.\n. @deminoth Interesting. We've so many patterns. Let's keep this for now then.\n. We can't add a plain number and anAnimated.Value, right? May be just have a simpleAnimated.Viewas child on which the statusbar height is set?\n. We can't add a plain number and anAnimated.Value, right? May be just have a simpleAnimated.Viewas child on which the statusbar height is set?\n. @corbt Yeah. It's would be possible to support animating the size as well as a separateappbarHeightprop, which many people seem to be requesting. Right now it's not simple to customizestatusbarHeightandappbarHeightseparately since they are a single element. I think the performance implications of one extra view is negligible here.\n. @corbt Yeah. It's would be possible to support animating the size as well as a separateappbarHeightprop, which many people seem to be requesting. Right now it's not simple to customizestatusbarHeightandappbarHeightseparately since they are a single element. I think the performance implications of one extra view is negligible here.\n. @corbt I don't think the ability to set custom height of statusbar is very important, and in 99% cases, just having the hidden prop is fine, but I think it's nice to have the flexibility. In addition, hardcoding the statusbar height is not ideal for other platforms implementing RN like WP.\n. @corbt I don't think the ability to set custom height of statusbar is very important, and in 99% cases, just having the hidden prop is fine, but I think it's nice to have the flexibility. In addition, hardcoding the statusbar height is not ideal for other platforms implementing RN like WP.\n.Animated.addsupports both plain numbers andAnimated.Values. So we could just useAnimated.add` instead of this condition.\nThough the Flow signature was wrong last time I tried it. And it was throwing error when you pass a number.\n. Animated.add supports both plain numbers and Animated.Values. So we could just use Animated.add instead of this condition.\nThough the Flow signature was wrong last time I tried it. And it was throwing error when you pass a number.\n. Flow is failing because statusBarHeight is number in defaultProps, but number | Animated.Value in props.\n. Flow is failing because statusBarHeight is number in defaultProps, but number | Animated.Value in props.\n. It sounds a bit redundant. I'll change you need to implement them on your own or use your own implementation here to you need to use your own implementation here\nI think we can even add a line about navigator.\n. @javache Isn't it better to allow overriding position? If someone doesn't want to override position, he won't pass a style with position.\nUse case: say there's a overlayed view, in which case you only want to adjust the bottom in the overlayed view, in the underlying view, you can disable the behaviour by passing bottom: 0\n. This doesn't seem to be used anymore\n. This doesn't seem to be used anymore\n. The code got a bit messy here, how about,\n``` js\nasync requestPermission(permission: string, rationale?: Rationale) : Promise {\n  if (rationale) {\n    const shouldShowRationale = await Permissions.shouldShowRequestPermissionRationale(permission);\nif (shouldShowRationale) {\n  return new Promise((resolve, reject) => {\n    DialogManagerAndroid.showAlert(\n      rationale,\n      () => reject(new Error('Failed to request permissions')),\n      () => resolve(Permissions.requestPermission(permission));\n    );\n  });\n}\n\n}\n  return Permissions.requestPermission(permission);\n}\n```\nI just wrote the code here, didn't test it.\n. The code got a bit messy here, how about,\n``` js\nasync requestPermission(permission: string, rationale?: Rationale) : Promise {\n  if (rationale) {\n    const shouldShowRationale = await Permissions.shouldShowRequestPermissionRationale(permission);\nif (shouldShowRationale) {\n  return new Promise((resolve, reject) => {\n    DialogManagerAndroid.showAlert(\n      rationale,\n      () => reject(new Error('Failed to request permissions')),\n      () => resolve(Permissions.requestPermission(permission));\n    );\n  });\n}\n\n}\n  return Permissions.requestPermission(permission);\n}\n```\nI just wrote the code here, didn't test it.\n. I think it's better left to the developer about what happens when requesting a permission fails.\n. I think it's better left to the developer about what happens when requesting a permission fails.\n. Can you make it Position.js please?\n. Can you make it Position.js please?\n. Changing this will crash apps when a permission is denied by the user. Actually none of the inbuilt modules like geolocation are asking the permission for location. So this will likely break a lot of things.\n. Why would you need to replace + with actual version?\n. Any specific reason to use AppCompatActivity?\n. Maybe we could use the react.gradle file shipped with react-native to automate this instead of doing it manually?\n. @jankalfus\n\nIt is recommended by Android Studio to always define concrete versions of packages\n\nYes, but we already have the version defined in package.json\n\nThis ensures compatibility. For example, if you use \"com.facebook.react:react-native:0.30.0\", yet you've downloaded React Native v0.31.0 into the node_modules folder, Gradle sync won't finish successfully and thus Android Studio will notify you of the issue.\n\nIt's a good point. But in my experience it has caused lots of confusion during upgrade. Now, to update, you've to change the version number at 2 places. If you forget to update one place, the build will fail, but you might not know why, because android studio won't tell you that the version number doesn't match with the version in package.json.\n. @jankalfus Yes, better to add this as a note since AppCompatActivity is not a necessity.\n. Yes, let's add a note with a link to the issue\n. Yes, let's add a note with a link to the issue\n. @jankalfus npm adds the version by default. If someone manually changes it to , they are on their own.\n. @jankalfus npm adds the version by default. If someone manually changes it to , they are on their own.\n. Could this be avoided by doing apply from: \"../../node_modules/react-native/react.gradle\" inside the app's build.gradle? I've never tried this, so not sure if it works.\n. Could this be avoided by doing apply from: \"../../node_modules/react-native/react.gradle\" inside the app's build.gradle? I've never tried this, so not sure if it works.\n. @jankalfus Okay. Maybe @AndrewJack can help with it\n. why do we need a messagingEnabled prop? What's the issue with always enabling it?\n. I'd add a check anyways.\n. > The React Native CLI can link and unlink libraries with native dependencies automatically. To link a library, first install it under your project:\n. Why not just JSON.stringify in JS for both?\n. @jacobp100 Example? If there is a shim you'd be overwriting it right?\n. Adding it here means it's part of the public API. Even if you manage not to show it in docs it's gonna show up in autocompletion.\nWhy not detect if there's a onMessage prop and enable it automatically on native side (or maybe inside render).\n. There seems to be an extra </kbd> here\n. Oh, github has replies to comments now!\n. Yeah, please remove this import statement\n. I'd move this example to before the note about showWithGravity, also maybe add an example for showWithGravity too.\n. Why restrict portrait? RN apps work properly as long as you don't use the dimension constants.\n. I believe we need these for buck.\n. These are for buck too.\n. @javache we've linked to the official docs here - https://facebook.github.io/react-native/docs/linking.html which should be fine I think\n. @SandroMachado Yeah, but it works fine in landscape, so no reason we should lock Android to portrait only because iOS does it. Maybe we should change iOS generator to not lock it into portrait mode because Android does it.\n. yeah, remove it from here\n. add @platform android\n. Any modules using a permission e.g. geolocation will crash the app when target API level is 23.\n\nThis one is blocking, without this, the app will not work.\n\nI won't say this is a blocking issue since it's purely a documentation thing.\nI think adding this might give the false assurance that this is the only issue with API level 23 and everything else will work. Instead we should either fix the issues with API level 23 or document all the things that will break if you target API level 23.\n. > I am mobile developer and I know that I need to add permissions to access location or even the network state in Android\nOn Marshmallow the user can deny permissions (and permissions like location aren't even granted by default unless you ask for it). The inbuilt React Native modules like geolocation don't handle this and will crash when you target API level 23. Adding permissions to manifest isn't enough.\n\nMost of the Android developers will not use an emulator, so when they open the ReactActivity they will just see a crash because the activity is not connected with the NPM server. They need to open the React Native activity the first time to access to the dev activity to configure the server url.\n\nThe template shipped with RN has the target SDK set to 22, so most developer won't face any issue unless they manually set the target SDK to 23. Probably the only thing we need to document is that you should target API level 22 until we officially support it.\nAlso I don't think it's something to do with if people use an emulator or not. It should crash anyways.\n\nAbout the run time permissions, introduced in Android API level 23, there is a section in the documentation (PermissionsAndroid) so, the developers know that they need to handle it. My point is: it is not easy to get, that if you are targeting to Android API level 23, you will need to request the overlay permission in development mode, even for an Hello World.\n\nThat's true for any permission, including location. I was confused when the app started crashing after I changed the target SDK to 23. I had to check the logs and search stack overflow to fix it. And it wasn't because of overlay permissions. Point being, it's not obvious that you need to manually handle the permissions, be it overlay permissions or location.\nHaving to use PermissionAndroid module is fine, but the correct behaviour is to reject promise/emit an error instead of crashing, or even better, handle permissions inside the module itself. We need to fix RN to fix the incorrect behaviour.\nIn case of overlay permissions, RN should show a dialog saying the permission is not granted, instead of crashing. Currently it does redirect you to the permissions screen and then crashes, so probably a minor thing we need to fix.\n\nPlease don't get me wrong\n\nIt's just general feedback on the PR. I didn't say you're wrong.\n\nI am just trying to contribute to the community and improve the documentation to help other developers to have a better learning curve when they start in React Native.\n\nI'm all for improving the documentation, but as I said previously, this might give a false sense that this is the only issue with API level 23 and everything else will work fine.\nProbably it's fine just to document this along with a warning that not all modules are tested on Marshmallow and might break. So it's at your own risk if you change target SDK to 23. We can't document all the modules that might break, since I've only used location module which broke, and don't know what else might be broken.\n. @jmurzy if the current value is true, probably we should keep the default value as true?\n. @varungupta85 \n\nIs this required only to be able to show the dev menu and the red box\n\nYes. This is only required in the dev mode for the redbox and dev menu. So it'll work fine without the permission in production.\n\nCan I remove the SYSTEM_ALERT_WINDOW permission from the AndroidManifest.xml file and just request it programmatically?\n\nUnlike other permissions, we cannot request this permission programmatically. In the code you linked to, I'm just directing the user to the settings screen where he can grant the permission.\n\nI am not sure why is the SYSTEM_ALERT_WINDOW permission added in the default AndroidManifest.xml file.\n\nI'm not sure if you'll be able to grant the permission if it's not in the manifest. Probably it's added by the RN lib even if you remove it from your manifest. Maybe it's there in the manifest because of Buck. Not sure about this though.\n\nThis is a bit unrelated and more for my own understanding. In this comment, you have mentioned to disable dev menu in production which is done in the default template. Where is this template located?\n\nhttps://github.com/facebook/react-native/blob/master/local-cli/generator-android/templates/package/MainApplication.java#L19\n. This sounds like a bug. Which platform did you face it on? Probably this note is not very clear.\n. I'm not sure if these constants should be directly in AsyncStorage object\n. @robclouth sounds good\n. ```\n\nIf you're targeting API level 23, the app might crash on first launch with an error smilar to Unable to add window android.view.ViewRootImpl$W@c51fa6 -- permission denied for this window type. To fix this, you need to go to System settings > Apps > Configure apps > Draw over other apps and grant the permission for the app.\n\nNOTE: Many React Native modules haven't been tested on Marshmallow and might break. Please throughly test the app if you target API level 23 and file a bug report if you find that something is broken.\n``\n. I think better to just remove the line about horizontal pagination since it works for both now.\n. Addtype PermissionStatus = 'granted' | 'denied' | 'never_ask_again'at the top and changePromisetoPromise. ChangePromise<{[permission: string]: PermissionStatus}>. nit: maybe a more random number like3798264`?. >  It doesn't need to be unique to other application just your own\nIt can conflict with third party modules / and even own code. Since this code is part of the RN library, not my application.\nWe don't follow this pattern anywhere else inside RN either. So I'd prefer a more random number.. > because then it is \"random\" for a developer when that clashes\nThe developer is not going look into the library to see what code is used. This code is not part  of the app. We can never prevent clash, but this number is too easy to clash with third party lib/user's code.\n@SandroMachado that example is a sample app, I don't think libraries can follow the same convention as an app anyways.\nRN code in general doesn't follow this convention. So I don't see what advantage it gives by following at a single place, unless all other code is changed to follow the convention.. Anyway, I don't think this is important enough to bikeshed on. Please do the changes @SandroMachado mentioned and I'll merge this.. @robclouth just JS is fine. This sounds like an array. Maybe stickySectionHeadersEnabled is a better name?. @javache yes, they have to be global. @javache yes, they have to be global. @matto1990 sure \ud83d\udc4d. @matto1990 sure \ud83d\udc4d. What are the 2 arguments to close?. What are the 2 arguments to close?. nit: remove log. nit: remove log. Probably should to pass them drive you're receiving them in arguments?. Probably should to pass them drive you're receiving them in arguments?. It's not removed yet right? Let's add it to avoid a breaking change. We'll figure it out later.. It's not removed yet right? Let's add it to avoid a breaking change. We'll figure it out later.. @janicduplessis yes. @janicduplessis yes. @janicduplessis you're right. I got confused by another place where there was proptype, most probably by mistake.. @janicduplessis you're right. I got confused by another place where there was proptype, most probably by mistake.. @janicduplessis Text doesn't use the requireNativeComponent which calls processColor, so this seems to be needed. Otherwise the native side receives a string.. @janicduplessis Text doesn't use the requireNativeComponent which calls processColor, so this seems to be needed. Otherwise the native side receives a string.. @janicduplessis Hmm... do they specify the progress and and track background colors? the names are really misleading. I thought that they have something to do with minimum and maximum values.\nIMO we should deprecate those and use better prop names.. @janicduplessis Hmm... do they specify the progress and and track background colors? the names are really misleading. I thought that they have something to do with minimum and maximum values.\nIMO we should deprecate those and use better prop names.. @janicduplessis yeah, I'll rename those and deprecate.. @janicduplessis yeah, I'll rename those and deprecate.. My mistake. Result of trying too many different ways to do this. Fixed.. If it's a valid slider it won't, which will be true in all cases afaik. If it's a valid slider it won't, which will be true in all cases afaik. > Any difference over just obj.android || obj.default ?\nobj.android || obj.default will ignore falsy values like 0, false, null etc.\n\nAlso, shouldn't we inline that in babel plugin instead of that condition here?\n\nIt should be done in both places. > Any difference over just obj.android || obj.default ?\nobj.android || obj.default will ignore falsy values like 0, false, null etc.\n\nAlso, shouldn't we inline that in babel plugin instead of that condition here?\n\nIt should be done in both places. nit: const. nit: const. Wondering why it's not type BackPressEventName = 'backPress' instead\nAlso seems all examples say that the event name is hardwareBackPress, while the type says backPress. nit: let. nit: new line after comment. nit: unnecessary new line. nit: const. nit: unnecessary new line. nit: unnecessary new line. The return type should be extracted out to the top,\njs\ntype BackHandlerSubscription = {\n  remove: () => void\n}. nit: unnecessary new line. nit: unnecessary new line. nit: unnecessary new lines. nit: unnecessary new lines. nit: unnecessary new lines. nit: unnecessary new lines. Add /* eslint-env jest */ to the top. @mkonicek this is for Java code, for APIs like XHR and WebSocket which will want to receive a blob.. Same as https://github.com/facebook/react-native/pull/11417#discussion_r107735872. The store method needs to access this, since store method is static, this has to be static. Other parts of native code access the store method without having to initialise a new instance as this is shared globally.. Our JS API will ensure these properties.. Yeah, basically follows the browser's Blob API. Will add a link.. Yes, it's the index of last byte. This just follows the Blob API. Will add a link https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice. Don't remember if it throws on web. Will have to check and ensure we match the behaviour.. @mkonicek don't quite remember, need to check. > What if the module is not included in the app?\nIn which scenario it won't be included?. They will be either string or undefined.. This just follows the web API where it requires the type to be set. Yes, I left it because it was already there. We can revisit this and remove it in a separate PR to prevent breaking change.. Not throwing here because browsers don't throw in case of invalid type.. BLOB_URI_HOST is determined from package name, so not something we can hardcode. I think we should add it as devDependency. Matters when you're publishing a library. We should check the request method instead of making an assumption. Probably response.request() has the information. If not, we can store the request method according to request id in a map somewhere and check that.. @javache is there any advantage for having it as an optional module? any ideas/tips how else we can do it?. @javache okies. let's talk about how to do this on slack? I'd really prefer not to do it in the current PR and do a followup for that since this PR and the follow up PR to this are quite big.\nalso probably worth noting that in my mind eventually more native modules are going to support blob, (there's an open PR for Networking module), e.g. - maybe image module should be able to render a blob, camera roll module should return blobs etc.. What do you mean by that? Isn't already async? . @Kureev Files only have a lastModifiedProperty https://developer.mozilla.org/en/docs/Web/API/File. @Kureev, yes, we do it here https://github.com/facebook/react-native/pull/11573/files#diff-2bf13477704f772255c64e0beb652478R63. @Kureev yea, I think I copied from XMLHttpRequest. > can you hoist these inlined require statements into the module scope\nIt's not possible due to circular dependency between the Blob and BlobManager modules. IMO doesn't make sense to expose both _data and data to outside the module. It's more consistent use the same property name to read and write.. IMO doesn't make sense to expose both _data and data to outside the module. It's more consistent use the same property name to read and write.. These are read-only properties according to the Blob API. Replacing with plain property will make them writable.. These are read-only properties according to the Blob API. Replacing with plain property will make them writable.. nit: it's common to have double quotes in XML. it'll be better to keep them unchanged. nit: it's common to have double quotes in XML. it'll be better to keep them unchanged. This doesn't seem to be used anywhere. Also, the URL object doesn't seem to have such a property according to the spec.. This doesn't seem to be used anywhere. Also, the URL object doesn't seem to have such a property according to the spec.. The URL object doesn't seem to have such a property according to the spec. Maybe this can be extracted out to a function in the file scope?. The URL object doesn't seem to have such a property according to the spec. Maybe this can be extracted out to a function in the file scope?. nit: maybe alphabetically order these methods for easier comparison with the spec. nit: maybe alphabetically order these methods for easier comparison with the spec. nit: static methods should be at the top. nit: static methods should be at the top. This doesn't seem to be a valid property according to the spec. Maybe prefix it with _ mark as private?. This doesn't seem to be a valid property according to the spec. Maybe prefix it with _ mark as private?. This doesn't seem to be a valid property according to the spec. Maybe move the implementation to toString() instead?. This doesn't seem to be a valid property according to the spec. Maybe move the implementation to toString() instead?. The class is missing the methods delete(name), get(name), getAll(name), has(name) and set(name, value). Maybe we should the similar to URL and add the methods which throw a proper error when invoked?. The class is missing the methods delete(name), get(name), getAll(name), has(name) and set(name, value). Maybe we should the similar to URL and add the methods which throw a proper error when invoked?. It'll be better not to disable flow. It'll be better not to disable flow. From a quick look, the codebase doesn't seem to use ES6 export. Maybe do exports.URL = URL instead to keep it consistent. From a quick look, the codebase doesn't seem to use ES6 export. Maybe do exports.URL = URL instead to keep it consistent. can we add a flowfixme in that place? RN's flow types are already incomplete, so it'll be nice not to introduce more untyped code. anyway, it's upto the reviewer from fb\n\nThe whatwg-fetch implementation we have in-tree also doesn't have flow annotation\n\ni think that was just vendored from the original library, so it's a different case. can we add a flowfixme in that place? RN's flow types are already incomplete, so it'll be nice not to introduce more untyped code. anyway, it's upto the reviewer from fb\n\nThe whatwg-fetch implementation we have in-tree also doesn't have flow annotation\n\ni think that was just vendored from the original library, so it's a different case. I don't know the reason. maybe someone from FB can clarify. but will be nice to keep it consistent with other code regardless of the reason. I don't know the reason. maybe someone from FB can clarify. but will be nice to keep it consistent with other code regardless of the reason. @osdnk maybe we can use callback: (value: any) => mixed instead?. @osdnk maybe we can use callback: (value: any) => mixed instead?. @osdnk using mixed or any is better in this case. void will prevent async functions to be used for the listener: https://flow.org/try/#0PQKgBAAgZgNg9gdzCYAoVUCuA7AxgFwEs5swBDAEwoDU5CKAZQgZ3wFNs2AnAClzJgwARmVwBrAFxgeANwGY2UstgCeASjABeAHxgZdChoDeAX3RY8REuSoBZQgA82jFu069+gkeKmz5i8lUNHTAAW0dnYzNUShoDJlYObh4yZhU8aWDdI1QwMGBgMAo4MGY4ULZ8AAtCbABzVBM1AG50WPsnF0T3FLSMniywHLyCopKyiurahqbmoA. @osdnk using mixed or any is better in this case. void will prevent async functions to be used for the listener: https://flow.org/try/#0PQKgBAAgZgNg9gdzCYAoVUCuA7AxgFwEs5swBDAEwoDU5CKAZQgZ3wFNs2AnAClzJgwARmVwBrAFxgeANwGY2UstgCeASjABeAHxgZdChoDeAX3RY8REuSoBZQgA82jFu069+gkeKmz5i8lUNHTAAW0dnYzNUShoDJlYObh4yZhU8aWDdI1QwMGBgMAo4MGY4ULZ8AAtCbABzVBM1AG50WPsnF0T3FLSMniywHLyCopKyiurahqbmoA. I suggest something like this:\njs\n  overrides: {\n    files: ['**/__tests__/**/*.js', '**/?(*.)(spec|test).js'],\n    env: {\n      jest: true,\n      'jest/globals': true,\n    },\n  },. I suggest something like this:\njs\n  overrides: {\n    files: ['**/__tests__/**/*.js', '**/?(*.)(spec|test).js'],\n    env: {\n      jest: true,\n      'jest/globals': true,\n    },\n  },. Maybe we should add it to community config itself?. Maybe we should add it to community config itself?. Shouldn't it be under overrides like:\njs\n  overrides: {\n    files: ['**/__tests__/**/*.js', '**/?(*.)(spec|test).js'],\n    env: {\n      jest: true,\n      'jest/globals': true,\n    },\n  },\nI think adding all jest globals to the normal env isn't great.. Shouldn't it be under overrides like:\njs\n  overrides: {\n    files: ['**/__tests__/**/*.js', '**/?(*.)(spec|test).js'],\n    env: {\n      jest: true,\n      'jest/globals': true,\n    },\n  },\nI think adding all jest globals to the normal env isn't great.. ",
    "edvinerikson": "Can you replace the tabs with spaces? \n. Can you replace the tabs with spaces? \n. ",
    "kmagiera": "build is already added in line 7\nI think we should also use .gradle instead of android/.gradle similarly how we do it in main rn repo\n. I've seen many android OSS projects include iml files so I'd rather leave it out as it's more like a personal choice whether to include them or not.\n. nit: one empty line is enough\n. This is not a correct fix. mPathForBorderRadius should always be set after updatePath() the only reason why it's not set is because mNeedUpdatePathForBorderRadius is false which should not happen if we're updating values that impact the way we draw rounded border. So perhaps that's where the bug is\n. We should use $(HOST_DIRSEP) instead of doing it this way. Do you mind updating this?\nSee https://github.com/facebook/fresco/blob/master/imagepipeline/src/main/jni/Application.mk as an example\n. I think this is only used to provide source URL to JSC so that it will display stack traces correctly (JSC won't try to open that file, it just require to have that name, otherwise stack traces are empty). I don't think we attempt to read this anywhere else (otherwise assets://schema won't work) but not sure about that\ncc @foghina \n. Dev support should be disabled when mJSAppBundleName is not provided. Otherwise there is no way to \"reload JS\" or to fetch the source map\n. Please revert this line\n. do you plan to actually pass some data here? Otherwise it would be more efficient to send null instead of creating empty map\n. I'd prefer to do sth similar to how we handle onLayout and only add that listener when onLoad is specified in JS\n. you mentioned onError isn't working on android, no?\n. I'd prefer for this property to be called \"shouldNotifyLoadEvents\" or similar instead \"loadHandlersRegistered\"\n. setload... -> setLoad\n. when shouldNotify=false you should remove the listener.\n. This is used in tests only. Just to handle this case you allocate extra forwardingcontroller instance in the constructor. Instead we should have two member refs: mControllerForTesting and mControllerListener then set it in this method and in setShouldNotifyOnLoadEvents  respectively and only in maybeUpdateView we can allocate forwardingController in case when both are non-null (which will only happen in our instrumentation tests)\n. this may make onLoadStart and onLoadEnd be coalesced, as result JS will only receive onLoadEnd. This is definitely not sth we want as in JS someone may want to add logic that is triggered by \"start\" or rely on getting \"start\" before \"end\" events. You should use eventType for the coalescing key or alternatively have separate event class per event type (I prefer the former). \n. Fix spacing:\nif (maxLength != null) {\nAlso: you need to handle the case when length is null (property gets removed the component) - in that case you'd need to remove filers you set here\n. please extract this as private static constant (e.g. EMPTY_FILTERS) at the top of this class\n. Seems like this was copy-paste kind of an issue from setScale. Also defaultFloat should be 0f here instead of 1f. Do you mind updating defaultFloat here (and in translateY) too to completely fix translate property related regression introduced by refactoring? Once it's done I'll be happy to merge your patch\n. This is not correct. Consider the case when property is updated from \"underline\" to \"line-through\". In that case this method will be called first time with \"underline\" set in the mask and you'd update paintFlags to include Paint.UNDERLINE_TEXT_FLAG. Next when the updates comes in, this method will be called with textDecorationLine containing only \"line-through\" flag set. In that case you will set Paint.STRIKE_THRU_TEXT_FLAG to paintFlags but the Paint.UNDERLINE_TEXT_FLAG set previously will still be there.\nThere are many other cases when this will not work correctly including the one when due to update the \"textDecorationLine\" attribute has been removed from the component. Essentially what you should do here is to unset Paint.UNDERLINE_TEXT_FLAG and Paint.STRIKE_THRU_TEXT_FLAG in paintFlags before you start updating it\n. It is no longer required to override styles this way here. We did this initially because we didn't have view flattening on android back then. Now that view flattening is there we should just wrap children in views positioned absolutely and with collapsable=false similarly to how we do it here: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/RecyclerViewBackedScrollView.android.js#L95\n. I think you actually want to set mIsDirty = true when listener is unset. Otherwise calling this method with shouldNotify = false may have no effect\n. This is unnecessary and may trigger additional work in case when multiple properties are updated in the same batch. This method should be only called from onAfterUpdateTransation which covers all the cases when properties has been modified https://github.com/facebook/react-native/blob/e4f0971a55d386db93ff5c78d383ffae1132dc33/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageManager.java#L108\n(we actually also call it from onSizeChanged but this may happen independently, therefore it's fine)\n. nit: separate call to .reset() with a comment that the same builder is going to be reused, then continue with all the remaining calls\n. /** is for javadoc block. This is not javadoc, we normally use single line comment for such a thing. E.g:\n// Currently ON_ERROR and ON_PROGRESS are not implemented, these can be added\n// easily once support exists in fresco.\n. kill this line\n. You can perhaps use setCornersRadii(float topLeft, float topRight, float bottomRight, float bottomLeft) and this way have mBorderRadius to only store 4 floats\n. extract 0.01f as a constant\n. IMO if {} else {} construct would be much cleaner to read in this case (also less error prone for people making changes in the future, as it's easy to overlook that return statement)\n. So apparently this isn't correct:\nReact send prop updates as diffs (only sending props that have changed). Imagine you have component that has borderRadius: 10, borderTopLeftRadius: 5. You expect it to have border radius 10 everywhere except from top-left corder, where radius should be 5. Then when you update your component to have the following props: borderRadius: 20, borderTopLeftRadius: 5, react will only send update for \"borderRadius\" prop, which will reset also \"topLeft\" and will result in the component having radius set to 20 for each corner while you expect it to still have radius 5 for top-left corner\n. Please refer to my comment from the similar piece of code above\n. nit: [position * 2]\n. Can you verify that this is indeed required here? Looks like all the properties you're adding are already a part of ViewStylePropTypes. I prefer for the way of declaring props for the views to be consistent across View and Image (that would be, just expecting it to be set in style).\nI think what you should do here is to actually just get rid of these few lines added. Then for Image component you can put borderTopLeftRadius and others as a part of style and it should work with no additional changes.\nAlso: Can you include a screenshot of \"Border Radius\" example from ImageExample.js to confirm there is no regression there. Note that in the aforementioned example borderRadius is set through style property.\n. Allocations on android are pretty expensive (mainly because of the fact they need to be garbage collected, and still lots of android devices doesn't have a decent implementation of GC).\nLooks like the pattern in which you use the value returned from here is that you call cornderRadii, then almost immediately you use the returned values to pass them to some other method (the important bit is that you use values from the array as opposed to passing the reference to that array). Also note that you only call this method from the UIThread. In this case you can easily avoid allocating this array and use a static array of size 4. The preferred way to do that would be to define the array at the top of the class, then change the sigatore of cornerRadii method to take output array as an argument. In places where you call the method, you can pass that static array, then retrieve values from it.\n. Please refer to my comment in cornerRadii method. I think the same applies here\n. Do we need this check here? I think that what we should do instead is that we should set mNeedUpdatePathForBorderRadius = true in both setRadius methods to be consistent with the way how we update that property.\n. I'd prefer to either send page state as a string from native, or expose mapping from state represented as an integer to the name of the state through ViewPagerManager constants (see getExportedViewConstants method).\nNow this piece of code is coupled with the state values defined as constants in the android framework here, and I'd really prefer to avoid this kind of coupling.\n. Why not just add an extra property to the ReactViewGroup and assing it there? Calling setTag this way will often allocate an extra SparseArray.\n. I don't think it's sufficient to do it this way. If you take a look at the method above (findTouchTargetView) you'll see that touch target is determined by traversing view hierarchy based on some order (from last children to first) and there is a stop condition that ends the process whenever we hit a child view which passes the test from this method (isTransformedTouchPointInView).\nIf I understand correctly you expect \"hitSlop\" to \"extend\" area of the View. So taking the above into account there is a chance that touch will be attributed to a neighbour view that intersects with the \"hitSlop\" area of the view we expect to receive the touch (see [1]). In even more complicated case we may have a nested view hierarchy as a neighbour that has \"hitSlop\" set for some children deep down the hierarchy and in this case we won't event traverse that hierarchy as the root of it would return false from this test method (see [2]).\nThe main issue here is that in RN native views doesn't really now if they have touch handlers registered or not in JS. But I think that the whole point of having this property is to support the aforementioned cases too and we should somehow prfioritize views with \"hitSlop\" set, no?\n1)\n\n2)\n\n. @ide @jesseruder I just wanted to point out that the behaviour will be different than what people are used to while developing on other platforms. The main difference is that in RN on native side we treat all views as touchable (all views can receive touch events and their tags will be passed to JS which to allow JS side to make the decision on which view should respond to the touch).\nSo normally when you'd use TouchDelegate on android for a button that is in a LinearLayout and the surrounding views are all not buttons (similarly to the example [1] where Child1 is a button and Child2 is not) you will be able to click the button by tapping in any part of the \"extended\" area.\nWith this approach you'll get a quite inconsistent behaviour when the hitSlop area will only extend the view in left and top direction but not in right and bottom.\nWith that said I still think there are use-cases where this simple approach will work just fine and save developers some time on wrapping their touchable views etc. E.g. when you already have margins that are greater or equal to hitSlop or when you have absolutely positioned view with enough space around it. So I think it would be useful to add a few lines of comments to the property definition to make this clear for people who might be using it in the future\n. @ide @jesseruder I just wanted to point out that the behaviour will be different than what people are used to while developing on other platforms. The main difference is that in RN on native side we treat all views as touchable (all views can receive touch events and their tags will be passed to JS which to allow JS side to make the decision on which view should respond to the touch).\nSo normally when you'd use TouchDelegate on android for a button that is in a LinearLayout and the surrounding views are all not buttons (similarly to the example [1] where Child1 is a button and Child2 is not) you will be able to click the button by tapping in any part of the \"extended\" area.\nWith this approach you'll get a quite inconsistent behaviour when the hitSlop area will only extend the view in left and top direction but not in right and bottom.\nWith that said I still think there are use-cases where this simple approach will work just fine and save developers some time on wrapping their touchable views etc. E.g. when you already have margins that are greater or equal to hitSlop or when you have absolutely positioned view with enough space around it. So I think it would be useful to add a few lines of comments to the property definition to make this clear for people who might be using it in the future\n. Can you extract getHitSlopRect to an interface so that other views (such as Text elements) can implement hitSlop too if we need it?\n. Can you extract getHitSlopRect to an interface so that other views (such as Text elements) can implement hitSlop too if we need it?\n. public @Nullable Rect getHitSlopRect() { \n. public @Nullable Rect getHitSlopRect() { \n. iOS implementation of linear gradient in ART allows for multiple stop points (more than two) to be provided. This shouldn't be that difficult to add here. You'd need to use this constructor for LinearGradient object instead of the simple one and also prepare the arrays of stop colours and positions beforehand.\n. wat?\n. wat?\n. Not happy with that approach either. I used to have a different way of setting up NativeAnimatedModule but decided to go with this instead. Here are some of the aspects driving the decision:\n1. I like the idea of using native module abstraction to expose API for managing animated nodes, starting/stopping animation etc. In my first prototype I put all those methods to UIManager. As it is already overloaded with a number of different methods (even scrollTo used to be a method of UIManager) I believe it's better for the animated native API to be extracted away from the UIManager\n2. Since animated API is extracted as a separate module (see (1)) I though it would be a good idea to make it \"optional\" so that developer can decide whether to include it on the RN \"package\" list (note that this module will be bringing \"rebound\" library as a dependency)\nMy \"old\" approach was to instantiate NativeAnimatedModule inside of UIManager and pass NativeHierarchyManager as a constructor argument to it. See corresponding changes in  UIManagerModule.java. The issue with this approach was that it would require for the animated module to be added to the CoreModulesPackage (see it here) and therefore would prevent us from making that module \"optional\" (If you think it should be a \"core\" module I'm fine with that too, just didn't want to make the decision for you).\nLast thing re alternative implementations of UIImplementation - I didn't forget about it, just didn't know its still a thing. However, in order to drive animations from UI thread we need to have a synchronous way of updating the UI while UIImplementation is asynchronous (at least the default implementation of it). Don't have any good ideas on how can this be solved. One thing that comes to my mind is to add method to UIImplementation - synchronouslyUpdateViewOnUIThread as that's the only method we'll ever need to access from the perspective of native animated module.\n. Not happy with that approach either. I used to have a different way of setting up NativeAnimatedModule but decided to go with this instead. Here are some of the aspects driving the decision:\n1. I like the idea of using native module abstraction to expose API for managing animated nodes, starting/stopping animation etc. In my first prototype I put all those methods to UIManager. As it is already overloaded with a number of different methods (even scrollTo used to be a method of UIManager) I believe it's better for the animated native API to be extracted away from the UIManager\n2. Since animated API is extracted as a separate module (see (1)) I though it would be a good idea to make it \"optional\" so that developer can decide whether to include it on the RN \"package\" list (note that this module will be bringing \"rebound\" library as a dependency)\nMy \"old\" approach was to instantiate NativeAnimatedModule inside of UIManager and pass NativeHierarchyManager as a constructor argument to it. See corresponding changes in  UIManagerModule.java. The issue with this approach was that it would require for the animated module to be added to the CoreModulesPackage (see it here) and therefore would prevent us from making that module \"optional\" (If you think it should be a \"core\" module I'm fine with that too, just didn't want to make the decision for you).\nLast thing re alternative implementations of UIImplementation - I didn't forget about it, just didn't know its still a thing. However, in order to drive animations from UI thread we need to have a synchronous way of updating the UI while UIImplementation is asynchronous (at least the default implementation of it). Don't have any good ideas on how can this be solved. One thing that comes to my mind is to add method to UIImplementation - synchronouslyUpdateViewOnUIThread as that's the only method we'll ever need to access from the perspective of native animated module.\n. Method naming convention in java is to start with a verb. E.g., parseGradientStops\nBesides it looks like you're not using the result of that method so I recommend to change the return type to void\n. Why do you multiply this by 2? Is this to compensate for the screen density? If so it shouldn't be handled this way as screen density is a device specific constant\n. This doesn't make sense to me. You check if i==0 so there is no point of adding i to startStops\nSeems like you can greatly simplify this whole part and you shouldn't have that many conditionals:\nFor stops[i] you perhaps want to assign sth like value[startStops + i*5] and similarity for the colors \n. I think you may want to check if mReactBackgroundDrawable != null first. Otherwise this line will create that background object for every view with native background which is undesirable\n. I think you may want to check if mReactBackgroundDrawable != null first. Otherwise this line will create that background object for every view with native background which is undesirable\n. @brentvatne how is this being used on iOS? If it does exists there, why do we need to add \"android-specific\" code here?\n. nit: space after the comma\n. nit: space after the comma\n. lets use FloatUtil.floatsEqual(sComputedCornerRadii[0], 0f) here instead so that we don't need to have epsilon constants scattered around the codebase in many different places\n. lets use FloatUtil.floatsEqual(sComputedCornerRadii[0], 0f) here instead so that we don't need to have epsilon constants scattered around the codebase in many different places\n. Yes, that's what it is used for\n. Yes, that's what it is used for\n. I hope it gets always called before onHostDestroy :)\nclearFrameCallback is idempotent so I guess it doesn't matter\n. I hope it gets always called before onHostDestroy :)\nclearFrameCallback is idempotent so I guess it doesn't matter\n. IMO there is no use-case for such an action. Currently it will not be possible as setValue from JS will actually stop active animation (if any) (see AnimatedImplementation.js:553)\n. IMO there is no use-case for such an action. Currently it will not be possible as setValue from JS will actually stop active animation (if any) (see AnimatedImplementation.js:553)\n. goo catch. The return value was used to indicate if the value has changed. After refactoring I'm no longer using that information (I though it could've been used for optimising traversal but I believe it's not really worth doing as most of the animated graphs aren't very huge)\n. goo catch. The return value was used to indicate if the value has changed. After refactoring I'm no longer using that information (I though it could've been used for optimising traversal but I believe it's not really worth doing as most of the animated graphs aren't very huge)\n. yeah, by the time we reach this line queue should be empty\n. yeah, by the time we reach this line queue should be empty\n. I use colors here to avoid enqueueing same node more than once (it could happen in case when setValue is called more than once for a single value in one JS batch). Another example would be if you have node that is driven by animation driver and has children that you call setValue on.\n. I use colors here to avoid enqueueing same node more than once (it could happen in case when setValue is called more than once for a single value in one JS batch). Another example would be if you have node that is driven by animation driver and has children that you call setValue on.\n. That should be fine. I'll update that. I used to run this code on \"native thread\". That's why I needed a queue here, but it's no longer necessary\n. That should be fine. I'll update that. I used to run this code on \"native thread\". That's why I needed a queue here, but it's no longer necessary\n. I decided to add this here to have all the native module method definitions in JS (with flow types). Otherwise you just have that reference to a native module and it's difficult to tell from the JS point of view what the API looks like\n. I decided to add this here to have all the native module method definitions in JS (with flow types). Otherwise you just have that reference to a native module and it's difficult to tell from the JS point of view what the API looks like\n. not really, it's just that I cannot directly map JS attach calls to native attach calls (nodes can be build separately and only when start is called I know if the graph should be sent to native)\n. not really, it's just that I cannot directly map JS attach calls to native attach calls (nodes can be build separately and only when start is called I know if the graph should be sent to native)\n. looks like comments has been left on incorrect lines by the bot. I ended up running eslint locally to get the correct line numbers and fixed the issues cc @mkonicek \n. looks like comments has been left on incorrect lines by the bot. I ended up running eslint locally to get the correct line numbers and fixed the issues cc @mkonicek \n. It can also happen when the view is created (as it usually have a value assigned)\n. It can also happen when the view is created (as it usually have a value assigned)\n. I'd actually prefer to stick with the current naming convention (connect/disconnect). \n1) Those method are actually closer to __addChild and __removeChild than they are to __attach and __detach\n2) As mentioned earlier they are not a immediate consequence of calling addChild or removeChild in JS which IMO it could be confusing to name them similarly.\nIf you think we should use existing naming convention I'd rather rename them to sth like addChildToAnimatedNode/removeChildFromAnimatedNode, what do you think?\n. I'd actually prefer to stick with the current naming convention (connect/disconnect). \n1) Those method are actually closer to __addChild and __removeChild than they are to __attach and __detach\n2) As mentioned earlier they are not a immediate consequence of calling addChild or removeChild in JS which IMO it could be confusing to name them similarly.\nIf you think we should use existing naming convention I'd rather rename them to sth like addChildToAnimatedNode/removeChildFromAnimatedNode, what do you think?\n. I guess I can change that. It was there only to avoid storing references to parent nodes. I guess we are not going to be saving much on not doing that\n. I guess I can change that. It was there only to avoid storing references to parent nodes. I guess we are not going to be saving much on not doing that\n. Check out \"what's coming up next\" section in the PR description (\"Unit tests for the graph traversal algorithm\") :panda_face: \n. Check out \"what's coming up next\" section in the PR description (\"Unit tests for the graph traversal algorithm\") :panda_face: \n. Not sure If I understand you correctly. I believe this approach is fine. In time-based animation (timing, decay) the frames array we get as an input should not be treated as values that should be used for each particular frame (so e.g. if we draw frame 1, then skipped frame 2 and draw at frame 3 we should also skip the content of frames array at index 2).\nIn other words: the value of frames[5] is the value that time-based animation will calculate if it was running in native at 5*1000/60 ms after the animation has started. It doesn't matter what the frame rate, we just use that frame table indices as they were in units of 16,6ms. Alternatively we could be sending a map that would look like:\nframes = {\n  0: 0.2,\n  16.666: 0.3,\n  33.333: 0.4,\n  50: 0.5,\n  ...\n}\nSo in my opinion the only think that is important is that we use the same frame rate on both JS and native side (we could even use 120FPS :laughing: )\n. Not sure If I understand you correctly. I believe this approach is fine. In time-based animation (timing, decay) the frames array we get as an input should not be treated as values that should be used for each particular frame (so e.g. if we draw frame 1, then skipped frame 2 and draw at frame 3 we should also skip the content of frames array at index 2).\nIn other words: the value of frames[5] is the value that time-based animation will calculate if it was running in native at 5*1000/60 ms after the animation has started. It doesn't matter what the frame rate, we just use that frame table indices as they were in units of 16,6ms. Alternatively we could be sending a map that would look like:\nframes = {\n  0: 0.2,\n  16.666: 0.3,\n  33.333: 0.4,\n  50: 0.5,\n  ...\n}\nSo in my opinion the only think that is important is that we use the same frame rate on both JS and native side (we could even use 120FPS :laughing: )\n. Yeah, I added this here as jest doesn't have cancelAnimationFrame implementation, but I can just manually create a mock for that method instead\n. Yeah, I added this here as jest doesn't have cancelAnimationFrame implementation, but I can just manually create a mock for that method instead\n. looks like there is a typo in the link (should be /pull/7011 perhaps)\n. looks like there is a typo in the link (should be /pull/7011 perhaps)\n. I'd feel much safer if we were using LayoutParams(0, 0) instead of WRAP_CONTENT\nAlso layout param object can be created once as a static variable and then reused instead of allocating new object every time we create new component\n. I'd feel much safer if we were using LayoutParams(0, 0) instead of WRAP_CONTENT\nAlso layout param object can be created once as a static variable and then reused instead of allocating new object every time we create new component\n. It could, but than I'd have to add another check for isNative in onUpdate handler here to make sure that this code path does not execute for non-native nodes.\nSo I actually prefer to only check that in one place where the check it currently is and in the remaining places be explicit about whether we want a particular code path to execute for non-native vs native nodes. E.g., it is more likely that someone will add a call to _updateValue in a code path that should execute for non-native nodes only and than native implementation won't show any warnings (because we won't call flush). Having that variable there will make that person think of what value should be passed (if code should execute for non-native nodes only just pass true and if native node will be accident execute that code path it will throw)\nSo that's just my preference :) If you feel strongly about changing it the way you described I'll do so\n. It could, but than I'd have to add another check for isNative in onUpdate handler here to make sure that this code path does not execute for non-native nodes.\nSo I actually prefer to only check that in one place where the check it currently is and in the remaining places be explicit about whether we want a particular code path to execute for non-native vs native nodes. E.g., it is more likely that someone will add a call to _updateValue in a code path that should execute for non-native nodes only and than native implementation won't show any warnings (because we won't call flush). Having that variable there will make that person think of what value should be passed (if code should execute for non-native nodes only just pass true and if native node will be accident execute that code path it will throw)\nSo that's just my preference :) If you feel strongly about changing it the way you described I'll do so\n. I would not see this as an issue. It's similar with all the events we receive from native. E.g. when you register onLayout event it doesn't necessarily mean the values you're getting are the actual dimensions of the element, those are just values that has been calculated during some layout pass in the past and might have already been changed from JS before we managed to process onLayout event\n. I would not see this as an issue. It's similar with all the events we receive from native. E.g. when you register onLayout event it doesn't necessarily mean the values you're getting are the actual dimensions of the element, those are just values that has been calculated during some layout pass in the past and might have already been changed from JS before we managed to process onLayout event\n. I believe @eslint-bot may need an update. I'm not getting this warning when running eslint locally. Also useNativeDriver field is declared in AnimationConfig type that is a parent type of SpringAnimationConfigSingle\n. I believe @eslint-bot may need an update. I'm not getting this warning when running eslint locally. Also useNativeDriver field is declared in AnimationConfig type that is a parent type of SpringAnimationConfigSingle\n. yes, in which case it would trigger an appropriate exception, I don't see a point of someone setting perspective to 0 so I don't think there is a need to handle that case gracefully. This value is directly extracted from the transform matrix which validated in DEV mode (see processTransform.js#168)\n. yes, in which case it would trigger an appropriate exception, I don't see a point of someone setting perspective to 0 so I don't think there is a need to handle that case gracefully. This value is directly extracted from the transform matrix which validated in DEV mode (see processTransform.js#168)\n. revert this\n. revert this\n. I think we should not dispatch event to JS in the case when it is handled by the native animated driver, this would generate an unnecessary traffic over the bridge\n. checking emptiness is unnecessary. You can also do a get before that if which will save one hashmap lookup as well as one string allocation for concatenating tag with the name\n. @brentvatne this approach will only work for \"direct\" events. That is because touch handling has a bubbling logic written in JS and we cannot determine which view is going to be responsible for handling the touch without running some JS code\n. This can perhaps be optimised so that we don't reattach native props every time when non relevant property gets changed. Also, I'm not sure if this statement can even evaluate to true (if props hasn't been updated componentWillReceiveProps will not be triggered)\n. I think we should expect nativeEvent to always be the first element on the path, no?\n. can you please refactor this to if { } else { } it's difficult to notice the return statement here and this type of construct (return in relatively long if block) may lead to bugs in the future\n. Would be good if we could return function from this method. Otherwise it may result in react warnings as onScroll is defined to only accept functions (not sure if you're getting them or not).\nI see two options to solve this:\n1) when event is native, we return a method that will throw an exception when called (handler should never be called as we expect event to be handled in native). Then we can bind some extra arguments to the function object so that we can recognise if the handler is native or not in AnimatedProps.__getValue (its a little bit \"hacky\")\n2) Somehow make Animated.Scroll wrapper override proptypes so that it allows both function and AnimatedEvent object\n. Wouldn't it be better to do the event name conversion at the time when we put the element in mEventDrivers and then it won't be necessary to do it here. It should be around same amount of code but this section runs every time we receive the event while the oder one runs once per view\n. I mentioned that one earlier and not sure if you responded for my comment, but cannot find your response.\nI think it would be better if we don't pass events that are handled natively to JS. That event is not going to be utilised on JS side and will just bloat the bridge. \n. Hey, sorry this link doesn't work for me...\nAnyways, I think the whole point of offloading events is to prevent JS thread being bloated by events that we can handle synchronously in native. If there is code that is being triggered \"implicitly\" we should prevent that from happening. When your intent is to offload events to native than you don't expect to be able to receive them in JS. If you still want to handle events on the JS, than you can use listener param of Animated.event like this:\nonScroll={Animated.event(\n   [{nativeEvent: {contentOffset: {x: this._scrollX}}}]\n   {listener},          // Optional async listener\n )}\nIn which case we can forward events to JS, but I believe the default should be that we don't do that.\nAnother way to capture events in JS that will work \"out of the box\" is using animated value listener like this:\nonScroll={Animated.event([{nativeEvent: {contentOffset: {x: this._someValue}}}])}\nAnd then:\nthis._someValue.addListener(contentOffset => doSomethingWithTheOffset(contentOffset));\n. We should perhaps add to the documentation that creating event in render method is not the most effective way\n. You may want to throw JSApplicationIllegalArgumentException here instead as this may only happen when unexpected value from the JS will get sent\n. My personal preference would be not to use enums for such a simple case. Enums on android are substantially slower than on regular JVM, also here you allocate an extra and unnecessary iterator which is a pattern we try to avoid in oder places. So I'd prefer to at least change this piece\n. Please use Color.argb instead. Please use Color.argb instead. I need to loop through _activeAnimations which is of type NSMutableSet whereas on android is just an array.\nNot sure what is your suggestion on how to use a \"normal for loop\"? If I call [_activeAnimations allObjects] that would allocate new array for all the items anyways.\nComplexity wise its O(n) either way unless we have mapping from node to active animations running for that node which IMO is not worth adding considering that the number of running animations should be very low (like literally just a few of them).. I need to loop through _activeAnimations which is of type NSMutableSet whereas on android is just an array.\nNot sure what is your suggestion on how to use a \"normal for loop\"? If I call [_activeAnimations allObjects] that would allocate new array for all the items anyways.\nComplexity wise its O(n) either way unless we have mapping from node to active animations running for that node which IMO is not worth adding considering that the number of running animations should be very low (like literally just a few of them).. I agree, on the other hand new interface would complicate this part of the codebase even more which I don't think is necessary considering it doesn't do much.\nWhich of these two options would you prefer:\n1) Rename this interface so that this method fits better\n2) This interface implementation just passes all the calls to private methods of ReactInstanceManager. I could make those methods public and instead of passing ReactInstanceDevCommandsHandler ref to DevSupportManagerFactory I could pass ref to ReactInstanceManager\nPS: I prefer the latter\n. I agree, on the other hand new interface would complicate this part of the codebase even more which I don't think is necessary considering it doesn't do much.\nWhich of these two options would you prefer:\n1) Rename this interface so that this method fits better\n2) This interface implementation just passes all the calls to private methods of ReactInstanceManager. I could make those methods public and instead of passing ReactInstanceDevCommandsHandler ref to DevSupportManagerFactory I could pass ref to ReactInstanceManager\nPS: I prefer the latter\n. @janicduplessis updated this PR with this change. Note that now it is more likely that this code will break some internal fb stuff where they perhaps use their own implementation of devsupportmanager. @janicduplessis updated this PR with this change. Note that now it is more likely that this code will break some internal fb stuff where they perhaps use their own implementation of devsupportmanager. Ah, nice. Didn't know about ViewCompat. Will update that. Thanks for suggesting!. Ah, nice. Didn't know about ViewCompat. Will update that. Thanks for suggesting!. The logic of instantiating InputConnection seems overly complicated. If you don't need to keep a reference to inputConnection outside of ReactEditText class why not instantiate it directly in ReactEditText#onCreateInputConnection ? This will make setEditText and setTarget methods no longer needed and result in a cleaner contract for ReactTextInputInputConnection.\na) setEditText will not be necessary if you are instantiating it from onCreateInputConnection because you can have the reference to ReactEditText there, just use this.\nb) setTarget can be replaced by just passing InputConnection we want to wrap directly via constructor of  ReactTextInputInputConnection. The logic of instantiating InputConnection seems overly complicated. If you don't need to keep a reference to inputConnection outside of ReactEditText class why not instantiate it directly in ReactEditText#onCreateInputConnection ? This will make setEditText and setTarget methods no longer needed and result in a cleaner contract for ReactTextInputInputConnection.\na) setEditText will not be necessary if you are instantiating it from onCreateInputConnection because you can have the reference to ReactEditText there, just use this.\nb) setTarget can be replaced by just passing InputConnection we want to wrap directly via constructor of  ReactTextInputInputConnection. Would be good to have some high level comment here on what this class is for. \nAlso I think you didn't want to name this class this way (\"InputInput\"). As you need to change the name anyways I suggest that the class name include the word \"Wrapper\" (e.g. \"ReactEditTextInputConnectionWrapper\"). Would be good to have some high level comment here on what this class is for. \nAlso I think you didn't want to name this class this way (\"InputInput\"). As you need to change the name anyways I suggest that the class name include the word \"Wrapper\" (e.g. \"ReactEditTextInputConnectionWrapper\"). public static final fields should be all caps with underscores: NEW_LINE_RAW_VALUE etc. public static final fields should be all caps with underscores: NEW_LINE_RAW_VALUE etc. If you use @Nullable annotation you should make sure to do null checks before calling methods on that object or use assertNoNull. Although as per my other comment about removing setEditText I think if you follow that comment you won't need @Nullable here.. If you use @Nullable annotation you should make sure to do null checks before calling methods on that object or use assertNoNull. Although as per my other comment about removing setEditText I think if you follow that comment you won't need @Nullable here.. As we are no longer updating target we can just default to mutable=false. Also there seem to be no need to expose mutable as an argument of your subclass constructor (ReactEditTextInputConnectionWrapper). I recommend to replace this call with:\nsuper(target, false);\nAnd remove boolean mutable from the list of constructor arguments.. As we are no longer updating target we can just default to mutable=false. Also there seem to be no need to expose mutable as an argument of your subclass constructor (ReactEditTextInputConnectionWrapper). I recommend to replace this call with:\nsuper(target, false);\nAnd remove boolean mutable from the list of constructor arguments.. can you drop all the final keywords here. It is not common to use final in this context in Java (unlike in JS where you'd use const). Usually final is only used for scoped vars when they are being referenced in anonymous classes (\"lambda classes\") \u2013\u00a0in which case you get a compiler error if you forget to use final. can you drop all the final keywords here. It is not common to use final in this context in Java (unlike in JS where you'd use const). Usually final is only used for scoped vars when they are being referenced in anonymous classes (\"lambda classes\") \u2013\u00a0in which case you get a compiler error if you forget to use final. space: if(mKey -> if (mKey. Hey! Thanks for your time spent on reviewing this\nBefore we move on with making any changes, I\u2019d like to list a two options and learn what your opinions are. But at first I\u2019d like to emphasize two things:\na) Even though this PR is primarily for Android TV support most of the changes done here apply not only to TV devices but also to most of the phones with accessibility features turned on and to devices that are more commonly used with hardware keyboards (e.g. tablets). From the developer perspective a TV remote is treated as it was a hardware keyboard with a limited set of keys (just arrow keys, return and play/pause buttons). This is also the case for accessibility gestures that allows people with low vision to navigate through the app by swiping down/left/right/up which triggers arrow key press events. This has not yet been supported in RN apps on Android. See this for more info about what can be handled in dispatchKeyEvent: https://developer.android.com/reference/android/view/KeyEvent.html\nb) Unlike with iOS on Android we have limited options when it comes to detecting TV environment. On iOS this can be done in compile time as Apple TV devices gets separate binaries, whereas on Android we can only do runtime checks. On modern Android TV devices we can perhaps rely on LEANBACK_LAUNCHER intent filter and provide a separate root activity that would be configured differently but then this won\u2019t work on Fire Stick TV devices that are quite popular.\nHere are two options that I think we should consider:\n1) As I don\u2019t share your concern regarding performance I understand Android TV references in Root View may look a bit off. The reason I am not concerned about perf here is that the events are only going to be generated when hardware keyboard buttons are being pressed (as mentioned this includes tv remotes, real keyboards or D-PADs attached to Android tablets or phones, and accessibility gestures). These type of events should not be more frequent than \u201ctext change\u201d evens we already dispatch for TextInput component or hardware back button press we handle in ReactActivity class. My suggestion would be therefore to rename ReactAndroidTVRootViewHelper to something that is more generic and not referencing TV (e.g. ReactAndroidHWInputDeviceHelper or maybe ReactAndroidKeyboardNavigationHelper). Also to get rid of most of the \u201cTV\u201d reference from that helper class comments and method names as they really are not specific to TV devices.\n2) Extract HW input related methods to a separate root view class that would also extend ReactRootView. It is then possible to use a custom main activity subclass that would use that other root view instead of the default one. For that step we\u2019d need to add additional setup instructions to the docs for people who want their app to work on Android TV and other devices with hardware input capabilities.. Tried to explain that in my PR description, you might have missed it as it is at the very end:\n\nIn addition this PR fixes an issue with frames animation driver on Android that because of rounding issues was taking one extra frame to start. Because of that change I had to update a number of Android unit tests that were relying on that behavior and running that one additional animation step prior to performing checks.\n\nSo basically because of unfortunate rounding here frames driver on android would always \"play\" first frame twice. This could also be seen in all the unit tests where we run update loop twice at the beginning for all the framedriver tests. I am also updating these in the PR.\n. So there was a small inconsistency with the way getDouble and getInt work with JavaOnlyArray or Map vs NativeArray or Map. The problem was that in JS we only have \"numbers\" so both int and double map to the same type. Therefore NativeArray or Map is also casting the value to an appropriate type at the moment when getDouble or getInt is called. So even if we send a floating point from the JS, java code can call getInt and it will return a rounded integer. Same if we send an integer from JS. \nThis has became a problem since in animated driver tracking node I need to clone NativeArray/Map to JavaOnlyArray/Map, and when there are fields of type \"Number\" I can't tell if these are floating point numbers or not. Because of that I always read and write them as double. Then when I pass that JavaOnlyMap/Array down to the driver it knows about semantics of the fields and thus it may call getInt on some fields. In that case it was failing because the number has been set as a double.\n. parentNodes is of type NSMapTable so that won't work. I can use it for the next line tho. should we only do this when getReactNativeHost().getUseDeveloperSupport() is true?. Maybe instead of doing all of this we could change visibility of ReactRootView.sendEvent to \"package\" and then pass ReactRootView reference to AndroidHWInputDeviceHelper so that we can call sendEvent there directly. add it in both, we don't need to startTracking unless we are in dev mode. I remember there was some other problem when I was setting it to -1 but can't remember what exactly. Will try that and send a new PR. Ah, ok I remember now, I didn't want mFromValue to be updated with the next loop and that happens when mStartFrameTimeNanos is -1. Will add another check for this case and send a PR. Submitted it here: https://github.com/facebook/react-native/pull/18061\n. would be good to initialize these at start so that the event won't get triggered right after the application gets rendered. If mSafeAreaInsets if annotated with @Nullable you should also add @Nullable to argument types. This seem inconsistent with iOS. When view occupies bottom half of the screen on iOS the top inset will be 0 whereas on Android it will be windowHeight/2\n(same applies to left, bottom and right insets). note that screenMetrics.heightPixels includes the height of navigation bar (https://developer.android.com/training/system-ui/navigation) while it is not included in the window height. . this method seem not to care whether status bar is shown or not it returns a system constant. I'm not 100% sure about it but I think this value does not reflect the actual status of the UI. Apparently some tablet devices can render navigation bar on the bottom while reporting landscape rotation \ud83d\ude22  Maybe we can use this method as a polyfil -> https://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)\n. ah, sorry I think you are right. Please ignore this comment. Ah, I think you are right about this too. I got confused because of that difference between getHeight and screenMetrcs.heightPixels but I think windowInsets.bottom exactly accounts for that (that is it is equal to the height of the navbar) . Sadly, navbar height is different on portrait vs landscape (in landscape it is a bit more narrow). This is a frequent mistake people make when they think their app W/H ratio stays the same when the device rotates. We should use navigation_bar_height_landscape in landscape.\nAnd if that wasn't enough sometimes the navbar is vertical in which case you need to use navigation_bar_width instead \ud83e\udd26\u200d\u2642\ufe0f -> you may want to check this SO answer https://stackoverflow.com/questions/21057035/detect-android-navigation-bar-orientation. ",
    "ajwhite": ":+1: oversight\n. For reference, after running npm run lint\n\n. Not yet. Will update the description that it's pending and resolve that note once confirmed. \n. Just realized the typo here too. And not sure if this is necessary \n. ",
    "jibonpab": "Fifdkl\n. Deleted \n. Dead \n. ",
    "mosesoak": "Sure, I'll change it to hostWifiIP and set the stub address to 0.0.0.0 to avoid confusion there. Thanks for the suggestion!\n. Note: this input is a string so a non-strict inequality check is used. The inputs below are booleans so strict inequality is used so false will be honored.\n. Note: this input is a string so a non-strict inequality check is used. The inputs below are booleans so strict inequality is used so false will be honored.\n. ",
    "benvinegar": "Should this be android/app/src/main/assets/index.android.map?\n. ",
    "dralletje": "Not safe? Tinycolor default to black, so it won't crash!\nWhat do you mean by not safe?\n(I'll change it anyway ^^)\n. ",
    "astreet": "remove comment\n. nit: this isn't necessary\n. Update message to not reference assets\n. @Nullable fileName\n. nit: fit on one line\n. don't do this if fileName is null\n. Were there objections to just going with setBundleFile(file://android_assets/MoviesApp.android.bundle)? (or assets:// if that doesn't work).\n. Seems reasonable\n. We do want to change to falling back to the bundle on disk if the server isn't available, but that can happen in another patch.\n. What do you mean by reload here? Do you mean the developer option for reloading? That should just be able to stay the same as before but migrate from passing a JSBundleLoader.createCachedBundleFromNetworkLoader to just the file location of that downloaded file.\n. I'm fine with allowing you to update the file on ReactInstanceManager (though like I said I don't think that's necessary for the reload case, but I could see other uses for it).\nCatalystInstance/ReactBridge (Catalyst was the old name of RN if you didn't know) are single-use objects that correspond to a single script load and instantiation of RN. So when you reload JS, you actually get new instances of both that encapsulate the new JS/native module environment.\n. I mean, you could probably argue that all that is an implementation detail and we should just do some major renaming such that ReactInstanceManager becomes ReactBridge :P (it's a little less accurate, but a little more pragmatic)\n. This is going to silently break source maps in redboxes when the developer doesn't provide the JSAppBundleName. Please file an issue to revert this change, go back to enforcing passing the app bundle name, and instead check if the packager is running during reload.\n. we should be using sourceURLStr instead of jni::fromJString(env, sourceURL)\n. This doesn't look correct: you're getting the string out of the responseHeaders map corresponding to the key {header_key},{header_value}. Was this tested?\n. put this on the previous line, no whitespace before ;\n. no reason not to cache headers.name(i)\n. This is blocking commit on our side. Please make sure this file passes flow checks (it currently doesn't) or remove the @flow annotation. I'll re-submit once this is updated :)\n. Add that domStorageEnabledAndroid was also renamed (I'll ship this, please send another PR to this file though)\n. This shouldn't have this check (silent failures are very hard to debug!) and it probably doesn't need to be extracted into a separate function esp without the check\n. Can you just move this to createView? It's guaranteed to execute on the main thread\n. We really don't want to use the regular Choreographer here: ReactChoreographer allows us to be explicit about ordering of callback execution within the React framework, whereas if we use Choreographer directly, we might accidentally execute this before all of the ReactChoreographer callbacks.\n. Do it statically please: it'll still call the static method but now it looks like it's calling an instance method\n. We should preserve the other flags on the paint instead of assuming they are only ANTI_ALIAS_FLAG (use textView.getPaint().getFlags()). We also should unset any flags we set if text decoration is \"none\" or null.\n. this also doesn't handle a reordering of underline/line-through... I would think that we should actually be sending an array of strings or a bit-wise anded int to send what props are set from JS (but I guess the API on iOS predates this diff)\n. If that's the case, then there are other places in this file sendMessage is called as well that have the same issue. Instead of having a contract where sendMessage closes the JSON object ( >____> ), we should leave the jg.writeEndObject(); here and remove it from sendMessage. Make sure to have a test plan that tests using the JS debugger though!\n. Please make sure to test the diff before submitting: this is a compile-time error which is why this diff wasn't imported properly.\n. nit: space after cast\n. Re-throw as RuntimeException so that it's not silent.\n. I would also be pro for adding the reflections-based code here for API16 so that we have better consistency across API versions: http://stackoverflow.com/a/23861333/573427. We should throw that exception too to know if it's not working. Please extract all this metrics determining logic into a separate method outside of the constructor though for readability.\n. Afaict this can't throw an exception so we shouldn't wrap in a try catch\n. Can you catch the specific Exception types? You should be able to or the class names together and keep it as just one catch clause\n. Can we just throw from here?\n. I don't think this is correct. recreateReactContextInBackgroundFromBundleFile uses mJSBundleFile (e.g. the packaged JS bundle in assets). Also we check this (and whether mJSBundleFile is null) above around line 331.\n. I love the better error message. Two issues:\n1) FB internal, we don't use npm start. Can you say npm start for open source and runServerHere.sh for fb internal?\n2) the adb reverse bullet should say it's for a physical device -- this step shouldn't be necessary for an emulator.\nIf possible, we should also try to reference the strings from settings instead of copying what they say (e.g. 'Debug server host & port for device')\n. I don't think recreateReactContextInBackgroundFromBundleFile falls back to the cached bundle. But maybe it doesn't correctly handle the case when mJSBundleFile is null? Maybe that's what we should be checking for?\n. > 1) How do I distinguish between FB internal and OSS?\nYou can't easily, just put both :T\n\nAlso if you can provide me some guidance on how to correctly handle the error it'll be great. Currently for the first time it always says cannot find variable... error, which is of no help.\n\nThrowing this exception is great, just see my inline comment above -- I'm not sure that is the correct condition to check... does the current error just show if there's no bundled JS file?\n. Catch only the exceptions you want to catch (you can | the class names together in the catch statement if you want to handle them all in the same way)\n. This is basically the equivalent of silently ignoring. This should be rethrown (and probably shown in a redbox)\n. Extract as a named local to document what sourceUrl.getPath().substring(1) represents\n. Explain what the HMR acronym means\n. Document\n. Call nativeInjectHMRUpdate, group with other installGlobalFunction calls\n. Call nativeInjectHMRUpdate\n. These two lines leak memory. Use the String datastructure we have. (Value(ctx, arguments[0]).toString())\n. I'm not sure what the standard on iOS is for JSC code, but we should probably capture exceptions.\n. Name something convincingly scary like getJavaScriptContextNativePtrExperimental and document that this API will go away soon.\n. Just use toast.getDuration... note that this won't handle the case where you have multiple queued toasts -- they wait for the last one to display to start displaying. Unfortunately, there aren't any callbacks on toast so shrug.\n. onDestroy should wipe the map of toasts.\n. Ah yeah, you're probably right there.\n. Not really a fan of exposing these objects. I think it might make more sense to integrate this all directly into UIManagerModule: there is definitely already implicit coupling (e.g. the ordering of callbacks in ReactChoreographer)\n. ... we should probably be doing this in CSSNode\n. Ok, I feel convinced that this should be a separate module (if only because of Rebound). Exposing the NativeViewHierarchyManager seems like the only reasonable way to do this that I can think of unfortunately...\n. I also let Denis Koroskin + Nodes know about this PR, so hopefully one of them comments\n. nit: group package and public vars together, add package qualifier to mValue\n. I'd prefer if we create a new package for this module/PR\n. It'd be nice to add an explanation of how this is basically to represent a dependency DAG where child nodes depend on their parent nodes values to calculate their own value\n. Shouldn't we just only call this once all parents have been calculated?\n. This probably doesn't matter for this diff since we probably won't have animations that run long enough, but this isn't necessarily safe. Phones run at about 60FPS, but can vary (e.g. I think my Nexus 5 runs at ~59FPS optimally). For our internal framerate logging, we generally keep track of when we saw the last frame and use that to try to calculate how many frames occurred since then by dividing by the estimated frame time (1000 / 60ms). This will generally keep you from accumulating errors over time that you get by assuming exactly 60FPS.\n. nit: don't need else (and you can just early exit if (mHasFinished))\n. nit: // comment\n. If this is all this is for, then call it NATIVE_ANIMATED_MODULE\n. is onHostPause sometimes not called?\n. More javadocs about what this class does\n. It'd be nice if you provided an explanation like you did on the PR about what this graph of nodes represents\n. nit: Animated\n. Should probably throw if this isn't the case to catch bugs\n. Comment what it means for a node to be in mUpdatedNodes. It's not obvious to me so I'm going to have to go read the code to find out\n. nit: Animations\n. Not sure how possible this is, but what is expected if JS had called setAnimatedValue on a node that was also attached to an animation? In this case, we'd just overwrite that value.\n. Not sure how possible this is, but what is expected if JS had called setAnimatedValue on a node that was also attached to an animation? In this case, we'd just overwrite that value.\n. looks like we ignore the return value whenever this is called?\n. looks like we ignore the return value whenever this is called?\n. I assume this would only happen in the case I mentioned above (when setAnimatedValue was also called)\n. I assume this would only happen in the case I mentioned above (when setAnimatedValue was also called)\n. nit: all its\n. nit: all its\n. unnecessary I'd hope\n. unnecessary I'd hope\n. Seems like we should only allow drivers to drive animation values: can we just call this 'update', not pass the frame time, and make the contract that the node just uses its incoming nodes to calculate its new value?\n. Seems like we should only allow drivers to drive animation values: can we just call this 'update', not pass the frame time, and make the contract that the node just uses its incoming nodes to calculate its new value?\n. Why do nodes need this? Seems simpler to just have the runAnimationStep/update call from above that's only called once all parents have updated. I guess that'd require keeping links parent <--> child instead of just parent --> child, but feedDataFromUpdatedParent is kinda weird\n. Why do nodes need this? Seems simpler to just have the runAnimationStep/update call from above that's only called once all parents have updated. I guess that'd require keeping links parent <--> child instead of just parent --> child, but feedDataFromUpdatedParent is kinda weird\n. We shouldn't have to check color here, right? (which would mean we don't really need to use colors at all for step 2)\n. We shouldn't have to check color here, right? (which would mean we don't really need to use colors at all for step 2)\n. Why not just call nativeViewHierarchyManager.updateProperties here? Instead of creating a list and only using it in runUpdates? at the least we shouldn't create the view data twice\n. Why not just call nativeViewHierarchyManager.updateProperties here? Instead of creating a list and only using it in runUpdates? at the least we shouldn't create the view data twice\n. nit: //\n. nit: //\n. this just seems like a copy of PropsAnimatedNode\n. this just seems like a copy of PropsAnimatedNode\n. I'd rather this not be a method on AnimatedNode. Seems like a parent can just traverse its children and store them in the map. AnimatedNode shouldn't need to know about storing things in a map (Only Prop/Style nodes need to know about that)\n. I'd rather this not be a method on AnimatedNode. Seems like a parent can just traverse its children and store them in the map. AnimatedNode shouldn't need to know about storing things in a map (Only Prop/Style nodes need to know about that)\n. Seems kinda weird that this and Style node below have mValue members that wouldn't be used. Maybe we should create a separate parent class for those internal nodes (ValueAnimatedNode, AddAnimatedNode, etc.) that should actually be tracking a value\n. Seems kinda weird that this and Style node below have mValue members that wouldn't be used. Maybe we should create a separate parent class for those internal nodes (ValueAnimatedNode, AddAnimatedNode, etc.) that should actually be tracking a value\n. I think we should just remove it from onHostDestroy then -- it's confusing otherwise and we shouldn't really be trying to handle cases that we don't think are correct to happen in the first place\n. I think we should just remove it from onHostDestroy then -- it's confusing otherwise and we shouldn't really be trying to handle cases that we don't think are correct to happen in the first place\n. You should still consider my previous comment where we just try to calculate the number of elapsed frames from the last time we ran runAnimationStep\n. You should still consider my previous comment where we just try to calculate the number of elapsed frames from the last time we ran runAnimationStep\n. Slightly prefer passing the UIImplementation as a constructor arg to the nodes manager instead.\n. Slightly prefer passing the UIImplementation as a constructor arg to the nodes manager instead.\n. Why don't we just call this when we pop the child node off the queue? Seems like it would be more consistent with how we process the other nodes.\nAlso, why are we passing in the last parent to be visited to child.update (as nextNode)?\n. Why don't we just call this when we pop the child node off the queue? Seems like it would be more consistent with how we process the other nodes.\nAlso, why are we passing in the last parent to be visited to child.update (as nextNode)?\n. Would be sweet to have some tests for this :)\n. Would be sweet to have some tests for this :)\n. Since we're in a time sensitive (frame by frame) loop, it'd be nice to not have to allocate things (and thus trigger GCs) and instead reuse them. Might not matter much and could be done in a follow up\n. Since we're in a time sensitive (frame by frame) loop, it'd be nice to not have to allocate things (and thus trigger GCs) and instead reuse them. Might not matter much and could be done in a follow up\n. I mentioned this below, but I don't see why we're passing the last updated parent here: this is a pretty weird contract.\n. I mentioned this below, but I don't see why we're passing the last updated parent here: this is a pretty weird contract.\n. So, the problem is that you have an animation sampled at 60 frames per second, but you might be rendering at 59 or 61 fps. This means that when you 'snap' to the 60fps values to show at 61/59 fps, the animation may no longer be smooth. I was suggesting just treating the frame array as a series of frames, no matter the framerate of the underlying platform -- this wouldn't completely respect the animation duration but I don't think that's horrible.\n. So, the problem is that you have an animation sampled at 60 frames per second, but you might be rendering at 59 or 61 fps. This means that when you 'snap' to the 60fps values to show at 61/59 fps, the animation may no longer be smooth. I was suggesting just treating the frame array as a series of frames, no matter the framerate of the underlying platform -- this wouldn't completely respect the animation duration but I don't think that's horrible.\n. You could also treat the frames as 'the value every 16.6 ms' and then interpolate the values between frames based on the exact time (instead of snapping to an exact 60fps frame value)\n. You could also treat the frames as 'the value every 16.6 ms' and then interpolate the values between frames based on the exact time (instead of snapping to an exact 60fps frame value)\n. so... protected then?\n. Did you verify this is the correct SDK int?\n. Did you verify this is the correct SDK int?\n. Use DEFAULT_STACK_SIZE\n. Use DEFAULT_STACK_SIZE\n. Can we just enable this for the specific UIExplorerApp that showcases layout animations?\n. nit: this took me a while to parse. I'd prefer we structure this as:\nif (mLayoutAnimator.shouldAnimateLayout(viewToRemove) && arrayContains(tagsToDelete, viewToRemove)) {\n  // The view will be removed and dropped by the 'delete' layout animation instead, so do nothing\n} else {\n  viewManager.removeViewAt(viewToManage, indexToRemove);\n}\n. Don't use Callback: this is for JS callbacks. You can just pass in an AnimationListener (or create your own listener interface)\n. Just make an arrayContains method\n. This should not live in NativeViewHierarchyManager imo, but in the animation class itself.\n. We need to continue using viewToManager here, not using the View's parent\n. Olivier, should this be part of applyLayoutUpdate? I can't really tell, but I did notice that there's no createView call on this class.\n. Unfortunately, adding this now isn't safe for all the implementations of this class that have already overridden the other addView, removeViewAt, etc. calls. Instead, I think we need to this in NativeViewHiearchyManager:\nfor (int i = 0; i < viewManager.getChildrenCount(viewToManage); i++) {\n  if (viewManager.getChildAt(viewToManage, i) == viewToDelete) {\n    viewManager.removeViewAt(viewToManager, i);\n    break;\n  }\n}\n. (or, I guess we could just implement that here)\n. I think this should happen automatically within the LayoutAnimation code\n. I think this should happen automatically within the LayoutAnimation code\n. Same with this\n. Same with this\n. May as well use a bitset and index by tag, right?\n. May as well use a bitset and index by tag, right?\n. Can you add documentation here? Maybe an example of how you'd expect it to be used?\n. Taking time at the beginning of the frame (by overrunning into the next frame) seems pretty dangerous to me. I mean, generally trying to schedule at the granularity of half-a-frame without hooks into the actual scheduler seems dangerous to me, but assuming you're going to have idle time is even more so :P\n. Taking time at the beginning of the frame (by overrunning into the next frame) seems pretty dangerous to me. I mean, generally trying to schedule at the granularity of half-a-frame without hooks into the actual scheduler seems dangerous to me, but assuming you're going to have idle time is even more so :P\n. Yeah, the way we'd want to do this at first is to check if there are any pending JS calls to process. We can/do keep track of this in the native bridge, but this isn't exposed right now.\nAs far as debugging, the issue with the sync hook is less debugging this in particular and more being able to debug an application that uses this API at all: an app that uses this API cannot run in Chrome.\nInternally, we have a lot of reasons for wanting an on-device debugger but are still looking for someone to take the project on.\n. Yeah, the way we'd want to do this at first is to check if there are any pending JS calls to process. We can/do keep track of this in the native bridge, but this isn't exposed right now.\nAs far as debugging, the issue with the sync hook is less debugging this in particular and more being able to debug an application that uses this API at all: an app that uses this API cannot run in Chrome.\nInternally, we have a lot of reasons for wanting an on-device debugger but are still looking for someone to take the project on.\n. I would rephrase this to say that these are called when there is no other UI work that will be dispatched to JS this frame: after this is called, there is still the layout/draw pass of the frame on the UI thread.\n. I would rephrase this to say that these are called when there is no other UI work that will be dispatched to JS this frame: after this is called, there is still the layout/draw pass of the frame on the UI thread.\n. setShouldSendIdleEvents\n. setShouldSendIdleEvents\n. let's try to avoid this allocation on every frame. We can just keep one array and copy into it\n. let's try to avoid this allocation on every frame. We can just keep one array and copy into it\n. we can pretty easily exit early here if we're already past our deadline for the frame (we probably want to share that 10ms constant between native and JS so that it's consistent)\n. Ah yeah, if we have a separate implementation when not on device we should be fine, though obviously that's not ideal for a number of reasons (but as you say, not a blocker)\n. It looks like this isn't necessary anymore\n. Err, whoops, I see what you're doing now\n. Since this is only used by the callback can you move it as an instance var there?\n. Add _MS to both of these\n. 1000 / 60.f then?\n. Sorry I didn't catch this before: can you remind me why we're posting a runnable to the JS thread that then posts more runnables (via getJSModule(...).callIdleCallbacks)? Why not just callIdleCallbacks here?\n. Ok, seems like it shouldn't hurt, especially if we really want this to run when we're idle.\nI'm not sure how expensive it is to allocate one of these runnables on each frame, but we could pretty easily recycle them.\n. Put comments\n. Put comments\n. Can we actually make this a ThreadLocal? I'm concerned that we will want to do this math both on the shadow and main threads at some point and this isn't currently threadsafe.\n. Can we actually make this a ThreadLocal? I'm concerned that we will want to do this math both on the shadow and main threads at some point and this isn't currently threadsafe.\n. This is in our ReactCommon package which is also used on iOS (or at least being tested there). As such, we're unable to depend on jni utilities like this. Unfortunately, the best option is to extract this such that it can be shared between the jni/common code. This doesn't seem super trivial to me unfortunately.\nI'll post about this internally.\n. This is in our ReactCommon package which is also used on iOS (or at least being tested there). As such, we're unable to depend on jni utilities like this. Unfortunately, the best option is to extract this such that it can be shared between the jni/common code. This doesn't seem super trivial to me unfortunately.\nI'll post about this internally.\n. @ide, this already doesn't compile on ios since the header doesn't exist so I don't think that'd help\n. @rigdern: to be clear, in order to land this we're going to need to be able to access the utf16 conversion code from iOS as well (since we're modifying cross platform code here). There's not an easy way to do that at this point besides copying it unfortunately, as @cjhopman says :( I'd recommend just creating a new file in cxxreact and copying the function you need, then removing the dependency on <jni/LocalString.h>\n. Is this needed because our touch handling doesn't respect drawing order? If so, can we just make our normal touch handling handle drawing order so that we don't have to add a new touch handling code path?\n. Is this needed because our touch handling doesn't respect drawing order? If so, can we just make our normal touch handling handle drawing order so that we don't have to add a new touch handling code path?\n. This might not be the right way to round: what does AOSP do here, do you know?\n. This might not be the right way to round: what does AOSP do here, do you know?\n. Actually, looks like @cjhopman sent out an internal diff to do what I just said. Should land soon.\n. Why this change?\n. Why this change?\n. So, I realized that if the translation/rotation/etc are updated after this happens, clipping will no longer be correct. It's probably better to not factor in translation/etc until we have a way to solve that (if we ever do: it doesn't seem trivial to me :( )\n. So, I realized that if the translation/rotation/etc are updated after this happens, clipping will no longer be correct. It's probably better to not factor in translation/etc until we have a way to solve that (if we ever do: it doesn't seem trivial to me :( )\n. But we're setting collapsable=false on all those children though -- I don't understand why that wouldn't be enough.\n. But we're setting collapsable=false on all those children though -- I don't understand why that wouldn't be enough.\n. Are we actually hitting this right now?\n. Are we actually hitting this right now?\n. mm, right. When you say \n\nWe could also call updateClippingRect after updating the transform prop.\n\nHow exactly would that work?\n. mm, right. When you say \n\nWe could also call updateClippingRect after updating the transform prop.\n\nHow exactly would that work?\n. Yeah, that sounds reasonable if you can get it to work. The best other solution I can think of is just not clipping transformed views no matter what, but I'm worried some developer is going to translate images (e.g. SoundCloud's android app as you scroll the main screen) and have a bad time.\n. Yeah, that sounds reasonable if you can get it to work. The best other solution I can think of is just not clipping transformed views no matter what, but I'm worried some developer is going to translate images (e.g. SoundCloud's android app as you scroll the main screen) and have a bad time.\n. I see. Then we should either have JS send the tags of the children that are sticky headers which the native view could then convert into indices (which would also fix the whole collapsable problem), or less ideally remap the indices in JS.\n. I see. Then we should either have JS send the tags of the children that are sticky headers which the native view could then convert into indices (which would also fix the whole collapsable problem), or less ideally remap the indices in JS.\n. Ok, I understand the problems you're having. Ideally we'd have some way to refer to the child views other than by index (since it isn't stable), but that doesn't exist right now and I don't know a good way to do it. I'm fine doing collapsableChildren false in this case then. (Actually, another option would be a create a custom StickyHeader native view class that ScrollView knows about and can do instanceof checks in native... but that would require a change in API)\n. Ok, I understand the problems you're having. Ideally we'd have some way to refer to the child views other than by index (since it isn't stable), but that doesn't exist right now and I don't know a good way to do it. I'm fine doing collapsableChildren false in this case then. (Actually, another option would be a create a custom StickyHeader native view class that ScrollView knows about and can do instanceof checks in native... but that would require a change in API)\n. This should return true for consistency with collapsableChildren (and to maintain current behavior)\n. This should return true for consistency with collapsableChildren (and to maintain current behavior)\n. I think we can improve the name here... it's a bit confusing to me. Maybe areChildrenCollapsable?\n. I think we can improve the name here... it's a bit confusing to me. Maybe areChildrenCollapsable?\n. For the second part of this if: the behavior here is that if a view has collapsableChildren=false set on it, it will also not be collapsable itself. Is that necessary?\n. For the second part of this if: the behavior here is that if a view has collapsableChildren=false set on it, it will also not be collapsable itself. Is that necessary?\n. Was there a reason this was moved? There are internal classes in FB that are referencing this class and that's what's causing this patch to fail to land. It'd be easiest if we don't move this if we don't need to.\n. Was there a reason this was moved? There are internal classes in FB that are referencing this class and that's what's causing this patch to fail to land. It'd be easiest if we don't move this if we don't need to.\n. ah, I see. How about I do the refactor internally and you rebase this diff once it lands?\n. ah, I see. How about I do the refactor internally and you rebase this diff once it lands?\n. Can you throw a JSApplicationIllegalArgumentException instead of asserting?. nit: don't prefix with this. We also need to factor in padding (see this from line 337):\nint scrollRange = Math.max(\n           0,\n           getChildAt(0).getHeight() - (getHeight() - getPaddingBottom() - getPaddingTop()));. Just inline this above? Or create a inner class to make things more obvious that onLayoutChange refers to the content view. nit: seems like we can just put part of this logic in onChildViewAdded and the rest in onChildViewRemoved. There are already assertions in android code that a scrollview can only have 1 child so I'm not really worried about that.. (please extract this into a private helper). Can you just update this to use scrollRange?. Can you add a comment that we use this to fix scroll position if it's too large when the content resizes?. Not sure this is the best way to do instanceof in React... seems sketchy. @gaearon is there a better way?. It seems like this would no longer respect PointerEvents.NONE/BOX_ONLY if the view is disabled. I think you need to explicitly handle the disabled case in each of the places we might return view as the target (e.g. BOX_ONLY and AUTO. Land failed as tests don't compile since TestJSToJavaParametersModule#returnCustomType isn't defined. Make sure to run the integration tests first: ./scripts/run-android-local-integration-tests.sh. I just meant you're calling getMaxScrollY twice when you already have the result :). Nice!. This doesn't seem safe -- depending on the order things are loaded, we could cache a version of the native component with no view config.\nMaybe we can just set nativeComponentName on the return of requireNativeComponent so that we can check instance._currentElement.type.nativeComponentName below? Not sure how @gaearon feels about that.. please annotate @Nullable. You'll need to add this as a dependency in the buck file... that's why the builds are failing. Or just remove this and the FLog statement below, I don't think they're that useful ;). Thanks for the repro: I just looked through the code here and this check is just not correct. It should all be handled by hasNewLayout above. As such, the correct fix is to just combine lines 301-304 into lines 289-292 and delete this entire if-block.. Thanks for the repro: I just looked through the code here and this check is just not correct. It should all be handled by hasNewLayout above. As such, the correct fix is to just combine lines 301-304 into lines 289-292 and delete this entire if-block.. Remove this change since it's not relevant.. I know you're not adding this, but seems like we should be sharing code with where we create this map when exposing the initial constants.. Didn't we decide we can get this off of displayMetrics as scaledDensity / density? At the least, I'd rather just pass in the Configuration object if you're worried about loss of precision . imo, this shouldn't be in emitUpdate() given the name. I'd just set it in onHostResume. Ok, this sounds reasonable. Before, this was getDownTime -- theoretically this should be the same for this event, but let's keep it as getDownTime so we're changing less.. Small thing: instead of using Long.MIN_VALUE directly, it'd be nice to specify a final static long named UNSET (or something like that) that we then use and check against.. Sorry this is a bit confusing, but Assertions.assertCondition will throw an AssertionError which will hardcrash the app -- I'd prefer we use SoftAssertions from the .common package which throws an Exception instead.. Yep, that's the one I meant, sorry. Use SoftAssertions so that we throw a catchable Exception and not an Error.. I still would like us to not use Errors when we can use Exceptions. Is this implying that android and ios also use two different units? If so, can we make them use the same unit?. I see two options then:\n1) convert em to pt: unfortunately this is going to require measuring the width of an M in the current font/font size (and also recalculating it when the font/font size changes), and it would probably work quite poorly for any animations that adjust font size (not that I know of any).\n2) Create two different props (letterSpacingIOS, letterSpacingAndroid).\nI much prefer (1) but let me know what you think. I don't think having the same prop behave very differently on both platforms is a good solution.. Ok, I'm fine siding with practicality here then. If you wanted to measure an 'M', you'd want to look at how we do it in our text shadow node: basically use a BoringLayout. But I'm also fine if you come up with some formula that at least factors in font size (looks like you already have something like that -- if so, add some more detailed docs for the prop about how we're emulating what iOS does, but it isn't perfect). ",
    "corbt": "Huh yeah I had tested it with local rendering using the instructions you mentioned, and it seemed to be formatted ok on my machine even with that newline. But whatever, glad it works now!\n. I suspect that's essentially what ViewCompat.setElevation does, with the addition that if Android ever does backport elevation to earlier APIs (admittedly unlikely) it'll start working there as well. But yeah, doing it the other way would work fine too. Is there a reason to prefer one style over the other?\n. I suspect that's essentially what ViewCompat.setElevation does, with the addition that if Android ever does backport elevation to earlier APIs (admittedly unlikely) it'll start working there as well. But yeah, doing it the other way would work fine too. Is there a reason to prefer one style over the other?\n. sorry, not sure what this comment means?\n. sorry, not sure what this comment means?\n. ok, figured it out.\n. ok, figured it out.\n. Sure. That comment was already there on the flatten export, I was just trying to find a better place to put it that wouldn't show up in the docs.\n. Sure. That comment was already there on the flatten export, I was just trying to find a better place to put it that wouldn't show up in the docs.\n. No, there isn't currently a cross-platform Alert.prompt, although there's no reason why this has to be iOS-specific.\n. No, there isn't currently a cross-platform Alert.prompt, although there's no reason why this has to be iOS-specific.\n. The only reason to change the type is to switch from an alert to a prompt, and I think it's very unlikely that anyone was using a dialog that appears as a prompt on one platform and an alert on another. But I can add that arg back in with a deprecation warning.\n. The only reason to change the type is to switch from an alert to a prompt, and I think it's very unlikely that anyone was using a dialog that appears as a prompt on one platform and an alert on another. But I can add that arg back in with a deprecation warning.\n. Consistency \"Image picker\" vs \"image picker\"?\n. Consistency \"Image picker\" vs \"image picker\"?\n. I think it would be better to change the URL to https://js.coach/react-native\n. we should stick with camelCase for these for consistency.\n. I think this is a good move, from @providesModule to relative import. I don't think we want to encourage providesModule use in consumers' code.\n. Is this check necessary? Is a null/false score ever passed in? The flow definition claims it's always defined.\n. Ok good point, @sunnylqm would you mind refactoring this to not use a class instance property?\n. Ah yeah, I think Flow doesn't recognize the .ios.js and .android.js extensions unfortunately, which SearchBar is implemented with. I guess let's move back to the import SearchBar from 'SearchBar' syntax for now until there's a better solution to support those variants in flow.\n. ok\n. @sunnylqm we can also set the timeoutID in the constructor: this.timeoutID: ?number = null;\n. I'm not really happy with this line because the check happens on every iteration in a tight loop. But I'm not sure where a better place to put it would be; the NavigationBar's props don't appear to be updated ever with the final route after a transition has taken place, so I can't make it contingent on that.\n. I'm not really happy with this line because the check happens on every iteration in a tight loop. But I'm not sure where a better place to put it would be; the NavigationBar's props don't appear to be updated ever with the final route after a transition has taken place, so I can't make it contingent on that.\n. There's probably a better way to return null?\n. There's probably a better way to return null?\n. Yeah good point, I was just copy-pasting the handling of remote notifications.\n. Yeah good point, I was just copy-pasting the handling of remote notifications.\n. Are you suggesting having a structure something like the following?\n<View style={style.header}> // container\n  <Animated.View style={{ height: this.props.statusBarHeight }} />\n  <View style={style.appbar}>\n    ...\n  </View>\n</View>\nWould make sense, downside is that it's another view in every hierarchy (although maybe ReactAndroid would collapse them, not sure if it does that with Animated.Views), but probably the simplest way to animate the status bar size independently if that's important. Still don't have a use case for that myself though, so it's hard for me to judge how important it is.\n. Are you suggesting having a structure something like the following?\n<View style={style.header}> // container\n  <Animated.View style={{ height: this.props.statusBarHeight }} />\n  <View style={style.appbar}>\n    ...\n  </View>\n</View>\nWould make sense, downside is that it's another view in every hierarchy (although maybe ReactAndroid would collapse them, not sure if it does that with Animated.Views), but probably the simplest way to animate the status bar size independently if that's important. Still don't have a use case for that myself though, so it's hard for me to judge how important it is.\n. Arrow functions used as class properties are bound to this by default, so I don't think this should make any difference. Have you tested your app with/without this change and seen if it affects the behavior?\n. Arrow functions used as class properties are bound to this by default, so I don't think this should make any difference. Have you tested your app with/without this change and seen if it affects the behavior?\n. nit: shouldn't be a comma after \"link.\"\n. ",
    "nevir": "Ah! Yeah! ES7 fun times\n. Ah! Yeah! ES7 fun times\n. Good call; done\n. Good call; done\n. Done and done.\nThe only other potential are the timer methods, but preserving them seems iffy.\n. Done and done.\nThe only other potential are the timer methods, but preserving them seems iffy.\n. The magic of babel :)\n. The magic of babel :)\n. Good call; added that\n. Good call; added that\n. Another late late chime in: An argument for supporting .jsx is that up until recently (e.g. pre-flow), .js pretty consistently meant \"a version of ES that either matches current or future ES specs\".  I'm assuming that JSX will never become part of ES proper?\nSimilarly, why not .flow? There is .ts after all. (aside from it being potentially too late to bring up)\nFile extensions help tools and infrastructure determine what to do w/ the source. Having to guess is error prone and added complication\n. Another late late chime in: An argument for supporting .jsx is that up until recently (e.g. pre-flow), .js pretty consistently meant \"a version of ES that either matches current or future ES specs\".  I'm assuming that JSX will never become part of ES proper?\nSimilarly, why not .flow? There is .ts after all. (aside from it being potentially too late to bring up)\nFile extensions help tools and infrastructure determine what to do w/ the source. Having to guess is error prone and added complication\n. Still not in master FYI - but SGTM!\n. Still not in master FYI - but SGTM!\n. Doh, habits :(\n. ",
    "arbesfeld": "Defaults to using the JSBundleLoader if no module name is provided. (Same effect as forceJSBundleLoader)\n. @astreet How should we handle the use case of \"reloading\" the\nReactInstance? One of the nice things about the iOS API is that the\ndelegate can change the sourceURL method and call reload to refresh the\nReact instance:\nhttps://github.com/facebook/react-native/blob/master/React/Base/RCTBridge.m#L237\nOne approach would be to allow the \"bundleFile\" of a ReactInstance to be\nmutable. Would this be preferred over this interface?\nOn Tue, Oct 20, 2015 at 1:46 PM, Andy Street notifications@github.com\nwrote:\n\nIn\nExamples/Movies/android/app/src/main/java/com/facebook/react/movies/MoviesActivity.java\nhttps://github.com/facebook/react-native/pull/3189#discussion_r42528691:\n\n@@ -35,7 +36,7 @@ protected void onCreate(Bundle savedInstanceState) {\nmReactInstanceManager = ReactInstanceManager.builder()\n     .setApplication(getApplication())\n-        .setBundleAssetName(\"MoviesApp.android.bundle\")\n-        .setJSBundleLoader(JSBundleLoader.createAssetLoader(\"MoviesApp.android.bundle\"))\n\nWere there objections to just going with\nsetBundleFile(file://android_assets/MoviesApp.android.bundle)? (or\nassets:// if that doesn't work).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/3189/files#r42528691.\n. Sorry for not being super clear. One use case we're looking at is changing the bundleFile at run time, and then \"reloading\" the React instance to load from the new bundle location. (this is possible on the iOS side via the delegate methods)\n\nDo you think the \"setBundleFile\" API could support this? Should we expose a method for changing the bundleFile after a ReactInstance has been instantiated?\n. ",
    "crm416": "Unfortunately, the Android API requires a drawable as the argument to setOverflowIcon (not a resource ID).\nAs an aside (and since GitHub won't let me comment on lines I didn't change): would it be helpful to add a resource type annotation to the return value of getDrawableResourceByName?\n. Unfortunately, the Android API requires a drawable as the argument to setOverflowIcon (not a resource ID).\nAs an aside (and since GitHub won't let me comment on lines I didn't change): would it be helpful to add a resource type annotation to the return value of getDrawableResourceByName?\n. ",
    "felipemartim": "I called it \"perspectiveZ\" because there's already a perspective array being returned on this statement. I don't know if it will be useful for something.\nOne thing that I couldn't manage to do is to retrieve the pixel density, as in Android View docs:\njava\nfloat scale = context.getResources().getDisplayMetrics().density;\nview.setCameraDistance(distance * scale);\n\nThe default distance depends on the screen density. For instance, on a medium density display, the default \ndistance is 1280. On a high density display, the default distance is 1920.\"\n. \n",
    "anttimo": "True, I will change it.\n. True, I will change it.\n. ",
    "fangmobile": "you are right. Totally missed it. will re do and send new pr.\n. you are right. Totally missed it. will re do and send new pr.\n. ",
    "alexkrolick": "Noted and fixed\n. ",
    "nucleartux": "Yes. HTTP RFC2616 available says: \nMultiple message-header fields with the same field-name MAY be present in a message if and only if the entire field-value for that header field is defined as a comma-separated list [i.e., #(values)]. It MUST be possible to combine the multiple header fields into one \"field-name: field-value\" pair, without changing the semantics of the message, by appending each subsequent field-value to the first, each separated by a comma. The order in which header fields with the same field-name are received is therefore significant to the interpretation of the combined field value, and thus a proxy MUST NOT change the order of these field values when a message is forwarded.\n. Oh, I will fix this to values separated by comma \n. done :)\n. I copy-pasted this from iOS example.\n. ",
    "gs-akhan": "@mkonicek holding for your orders. :)\n. I think we should. because if someone is moving existing native android app files to react, he would'nt be creating new files - rather just moving them here.\nBut what we can do is, be explicit stating your \"package name\" is the app name \npackage com.<appname>\n Also same issue here too \nhttps://github.com/facebook/react-native/issues/3515\n. @satya164 Well it does require you to have same package name in your \"moduleclass\", \"packagingclass\" and  \"mainactivityclass\" else you get compile time error ..\nGive it a try.\n. @satya164 Well this is how I have been doing and perhaps seen many people as well. \nhelloapp/android/app/src/main/java/com/helloapp/MainActivity.java\nI write my ModuleClass.java and AnExampleReactPackageClass as siblings to MainActivity.Java and I had this problem. And If  I am not wrong this where I write all my java code. ?\n. @satya164 \nAAh,  Got it !! So where ever user writes the modules he needs to define the package name appropriately and include it finally in MainActivity. isn't it ?\nThis makes sense. I will be amending this commit. \n. ",
    "tyronen": "I'm afraid this will not work. Fresco only supports a single controller listener.\nWhat you can do is define a single 'overall' controller listener that actually gets passed to Fresco. This internally would have a list of listeners. ReactImageView could then offer an addControllerListener method, and maybe also clearControllerListeners.\n. I'm afraid this will not work. Fresco only supports a single controller listener.\nWhat you can do is define a single 'overall' controller listener that actually gets passed to Fresco. This internally would have a list of listeners. ReactImageView could then offer an addControllerListener method, and maybe also clearControllerListeners.\n. There are two more methods you can override:\n1. onSubmit method to send an onLoadStart event\n2. onFailure should also send out onLoadEnd.\nBecause certain types of errors (HTTP 404s, for one) do not yet call onFailure, we aren't quite ready to issue onError in Android just yet.\n. There are two more methods you can override:\n1. onSubmit method to send an onLoadStart event\n2. onFailure should also send out onLoadEnd.\nBecause certain types of errors (HTTP 404s, for one) do not yet call onFailure, we aren't quite ready to issue onError in Android just yet.\n. So as @mkonicek pointed out, iOS actually has five different image events. I'd looked into this earlier. Fresco can easily do onLoad, onLoadEnd, and onLoadStart. It can do onError some of the time. It can't yet do onProgress.\nYou should be able to pile all those types here. Don't use a Java enum, they're not efficient. Instead do this:\n``` java\n\u200b  @IntDef({ON_ERROR, ON_LOAD, ON_LOAD_END, ON_LOAD_START, ON_PROGRESS})\n  @Retention(RetentionPolicy.SOURCE)\n  @interface ImageEventType {}\nstatic final int ON_ERROR = 1;\n  static final int ON_LOAD = 2;\n  static final int ON_LOAD_END = 3;\n  static final int ON_LOAD_START = 4;\n  static final int ON_PROGRESS = 5;\nprivate final int mEventType;\n```\n. So as @mkonicek pointed out, iOS actually has five different image events. I'd looked into this earlier. Fresco can easily do onLoad, onLoadEnd, and onLoadStart. It can do onError some of the time. It can't yet do onProgress.\nYou should be able to pile all those types here. Don't use a Java enum, they're not efficient. Instead do this:\n``` java\n\u200b  @IntDef({ON_ERROR, ON_LOAD, ON_LOAD_END, ON_LOAD_START, ON_PROGRESS})\n  @Retention(RetentionPolicy.SOURCE)\n  @interface ImageEventType {}\nstatic final int ON_ERROR = 1;\n  static final int ON_LOAD = 2;\n  static final int ON_LOAD_END = 3;\n  static final int ON_LOAD_START = 4;\n  static final int ON_PROGRESS = 5;\nprivate final int mEventType;\n```\n. Add a new parameter to the constructor:\njava\n@ImageEventType int eventType\n. Add a new parameter to the constructor:\njava\n@ImageEventType int eventType\n. Here you could do\njava\n switch(mEventType) {\n      case ON_ERROR:\n        return \"topError\";\n      case ON_LOAD:\n        return \"topLoad\";\n      case ON_LOAD_END:\n        return \"topLoadEnd\";\n      case ON_LOAD_START:\n        return \"topLoadStart\";\n      case ON_PROGRESS:\n        return \"topProgress\";\n      default:\n        throw new IllegalStateException(\"Invalid image event: \" + Integer.toString(mEventType));\n. Here you could do\njava\n switch(mEventType) {\n      case ON_ERROR:\n        return \"topError\";\n      case ON_LOAD:\n        return \"topLoad\";\n      case ON_LOAD_END:\n        return \"topLoadEnd\";\n      case ON_LOAD_START:\n        return \"topLoadStart\";\n      case ON_PROGRESS:\n        return \"topProgress\";\n      default:\n        throw new IllegalStateException(\"Invalid image event: \" + Integer.toString(mEventType));\n. You don't need to do this check, which as @mkonicek said, isn't correct anyways. The pipeline won't go out on network unless the image isn't in cache. You can omit the if entirely and then don't have to worry about DataSources.\n. ",
    "josephsavona": "Returning a promise seems fine, but the callback has to be executed after interactions, not when the promise is created. How about:\njavascript\nrunAfterInteractions(callback: ?Function): Promise {\n  return new Promise(resolve => {\n    scheduleUpdate();\n    _queue.push(() => {\n      callback && callback();\n      resolve();\n    });\n  });\n}\nAlso, both of these implementations will cause the promise to never be resolved if executing callback throws an error. Is that intended?\n. Returning a promise seems fine, but the callback has to be executed after interactions, not when the promise is created. How about:\njavascript\nrunAfterInteractions(callback: ?Function): Promise {\n  return new Promise(resolve => {\n    scheduleUpdate();\n    _queue.push(() => {\n      callback && callback();\n      resolve();\n    });\n  });\n}\nAlso, both of these implementations will cause the promise to never be resolved if executing callback throws an error. Is that intended?\n. Yup, I read this too fast. \n:+1: \n. Yup, I read this too fast. \n:+1: \n. ",
    "mfenniak": "I did consider that, but I weighed precise compatibility with the iOS side as more valuable than the future flexibility.  It prevents an Android developer from writing a style (eg. 'line-through underline') that works only on Android without being aware of it.\nThat said, I'd be happy to add compatible flexible parsing to both platforms.  Do you think it would make sense to include that change in this PR?\n. I did consider that, but I weighed precise compatibility with the iOS side as more valuable than the future flexibility.  It prevents an Android developer from writing a style (eg. 'line-through underline') that works only on Android without being aware of it.\nThat said, I'd be happy to add compatible flexible parsing to both platforms.  Do you think it would make sense to include that change in this PR?\n. Good catch; this actually didn't work, but I hadn't gone back to test iOS after implementing Android.  I added a stub processTextDecorationLine.ios.js in the PR update that throws new Error('not required on iOS'), but it will be packaged on iOS despite not being required.\n. An array with the values is the preferred mechanism for specifying multiple text decoration lines.  The space-separated style for multiple values is preserved for compatibility with the current version of react-native, for similarity / familiarity with the CSS text-decoration-line, and because it's cheap and easy to support.\n. ",
    "manask88": "It depends on the result you want to achieve. If your goal is to have a simple track image, I would say this is the best way.  If we make these separate properties, it will give more flexibility on what can be achieved, but it will make having a simple track image more complicated\n. ",
    "bramstieperaere": "cannot use const, the variable is assigned another value in lines 43-44. I thought let would be safest (smallest scope)\n. I copied this code from https://gist.github.com/domenic/2790533\nas far as I understand, it creates a named pipe by converting the sockPath variable in a valid pipe name by replacing illegal characters for a named pipe (line 43-44), and then prefixes with the path for a named pipe on local machine. (line 45)\n. ",
    "davidaurelio": "nit: can you remove the additional whitespace, please?\n. Just so I can get a better understanding of it: are non-arrays only supported for strings, i.e. module names to import?\nWould this code have the same effect as\njs\nreturn typeof plugin === 'string' ? [require(`babel-plugin-${plugin}`)] : plugin;\n?\n. Just so I can get a better understanding of it: are non-arrays only supported for strings, i.e. module names to import?\nWould this code have the same effect as\njs\nreturn typeof plugin === 'string' ? [require(`babel-plugin-${plugin}`)] : plugin;\n?\n. Thank you @spicyj!\n. Thank you @spicyj!\n. Would you add a comment where the code came from, please?\n. what if !descriptor?\n. what if !descriptor?\n. Or\ngetString(success, error = () => {}) {\n   Clipboard.getString(success, error);\n}\n. I don\u2019t think we want to overwrite native Symbol if present.\n. i.e. use require('es6-symbol/implement');\n. I\u2019m sorry, I misunderstood their documentation.\n. no, it\u2019s good the way it is. @mkonicek will take care of merging\n. This line only works for OS and if react native is in ${projectDirectory}/node_modules/react-native. I\u2019m a little bit afraid of the apocalyptic potential of this innocent path lookup ;-)\nIs anybody outside of Facebook using multiple project roots? The first project root might be a saner choice. Or we can add a command line option.\n. Let\u2019s remove the leading dot.\n. The same is probably true here @amasad @vjeux \n. and here?\n. Don\u2019t bother with formatting/indentation, it won\u2019t look good with multiline code anyway :stuck_out_tongue: \n. We don\u2019t read that annotation anywhere. We just add all polyfills as special cases\n. i.e. it should be fine given the changes in packager/react-packager/src/Resolver/index.js\n. We have a special transform which picks up this variable \u2013 I will check whether it still works\n. :+1: \nwill clean this up in a follow up \u2013 @janicduplessis, can you just remove the comment for now, please? It\u2019s misleading\n. Please remove the line break here, otherwise line numbers in redboxes will be off by one for polyfills.\n. cc @cpojer \n@vjeux we have the WPO transform that reads it \u2013 https://github.com/facebook/react-native/blob/f546dc3790edd4e0b310caccdc273f31a717258c/packager/react-packager/src/transforms/whole-program-optimisations/dead-module-elimination.js#L63-L76\nIt will break.\n. Ah I see. Does that mean you are against this specific change?\n. No, that\u2019s fine, but thanks!\n. @l-urence here\n. @l-urence here\n. Please remove this line :-)\n. just some formal rants (aka nits): The formatting here makes this particularly hard to read. Please add some line breaks, and white space. Thank you.\n. How can this.props.onShouldStartLoadWithRequest go away in the meantime?\n. @eslint-bot tells the truth\n. Is this throwing at all? cc @cpojer \n. Maybe automockOff + manual mocking is the better choice?\n. this would bypass the string check you do in line 109, wouldn\u2019t it?\n. @sunnylqm would you mind following @satya164\u2019s suggestion and bind in the constructor? I\u2019d shipit\n. got it\n. indentation\n. Please don\u2019t test for this in a test for responseType. Either set it, or trust the default (which should be tested in its own test block).\n. Remove this, please. We will have to update this seperately (i.e. after publishing to npm)\n. why was this comment added? This has nothing to do with babel.\n. @philikon we\u2019re blocked on this line. We have an internal test where this is crashing with java.lang.ClassCastException: okhttp3.internal.http.RealResponseBody cannot be cast to com.facebook.react.modules.network.ProgressResponseBody. That test uses a different network implementation, which calls into NetworkingModule.sendRequest\n. the internal test failures are on end-to-end tests, there\u2019s no mocking involved.\n. Good catch!\n. now that node-haste is back in the tree, I will make the name of the cache directory recognizable again \u2013 atm it\u2019s only a hash, which isn\u2019t exactly convenient.\n. technically, it hasn\u2019t to be a directory (can be a file of that name), but I guess nobody has files in node_modules these days.\n. I\u2019m not a native speaker, but wouldn\u2019t \u201cto the screen density of the device\u201d be even better?\n. This one was actually legit.\n. Feel free to go all the way, or keep it like this \u2013 your call :-)\n. key will be a numeric array index in your code.. ",
    "EwanThomas": "updated \n. ",
    "javache": "This doesn't seem required. The element with style modal shouldn't be taking up room in the layout tree.\n. nit: in detail\n. nit: can be sent\n. nit: may encounter name collisions\n. Perhaps suggest using the native view's reactTag as the identifier?\n. They're not strictly singleton: typically one instance is created per JS bridge.\n. nit: write out obj-c fully: Objective-C\n. Not necessarily on you to fix, but this (or the linked documentation) needs a section on how to handle components with dynamic height using custom measure functions. Maybe @majak can help with that?\n. Isn't this method already called on the main thread?\n. Can we pass the error to JS somehow?\n. Can you add a warning here that this will cause a memory-leak as-is? You need to remove the image from the imageStoreManager once you're done using it. We're looking into providing automatic solutions for this.\n. Just documentation. A warning in the console that you can't fix doesn't sound very useful :)\n. Instead of appending 'ff' here, why not shift like in the hex6 case?\n. Instead of appending 'ff' here, why not shift like in the hex6 case?\n. No need to cast, just use isEqual\n. should be NSDictionary *userActivityDictionary\n. Use isEqual:, which is defined on NSObject. If the object you get there is not a string, isEqualToString: will crash.\n. Can you use the key defined in UIKit for this instead of the string?\n. Oh right, I was looking for a different key\n. You're using Pair to mean it's either a view or a viewcontroller. The correct meaning of a pair though is a tuple of a view and a view controller.\n. You're using Pair to mean it's either a view or a viewcontroller. The correct meaning of a pair though is a tuple of a view and a view controller.\n. nit: no reason this should be a root view, right? Rename to just shadowView?\n. nit: no reason this should be a root view, right? Rename to just shadowView?\n. Revert this? Or is this an intended change?\n. Revert this? Or is this an intended change?\n. Definitely possible. We don't use it internally and if it's not hooked up to CI here, it's bound to bit rot.\n. Definitely possible. We don't use it internally and if it's not hooked up to CI here, it's bound to bit rot.\n. Uint8Array is not supported on iOS7. I'm reverting this change.\n. According to @nicklockwood this is actually wrong, React just verifies the wrong prop types somehow.\n. Did you notice any significant changes because of this? It seems to be really aimed at navigation (and \"intended to be used only while the device is plugged in\"), so I'm not sure it's a good idea to switch to this by default.\n. nit: - (BOOL)isNewLocation...\n. Instead of NSNull, compare with kCFNull.\n. Split this over two lines and return the expression immediately.\nIn general, comparing floating point numbers directly is not a good idea, you should always compare the difference to a small episilon: http://stackoverflow.com/questions/10334688/how-dangerous-is-it-to-compare-floating-point-values\n. I might be missing something here, but doing utf8 ourself doesn't seem like something we should do.\nLike the #1 rule of crypto \"don't roll your own\", I think this applies to string encoding too.\n. Declare this method in the header so you don't need to do the NSSelectorFromString hack.\nThe API here should use UIKeyboardType. Keep NSNumber as an implementation detail.\n. nit: call this just accessoryMapping. Objective-C assessors are not prefixed with get.\n. \"Specific warnings can be ignored...\"\n. Yeah, we should. Can you send a PR?\n. Can you use modern Obj-C here? formattedScheduledLocalNotification[@\"fireData\"] = fireDateString;\n. Use @(notification.applicationIconBadgeNumber) instead of [NSNumber numberWithInteger:..]\n. Run this through RCTJSONClean like we do above.\n. Should be NSMutableDictionary *formattedScheduledLocalNotification\n. Why do you wrap this in another array?\n. This is under an #if RCT_DEV so notifications will never fire in production.\n. while (true) is a big code smell. I'd prefer it if we repeated the NSCachedURLResponse *cachedResponse = [_URLCache cachedResponseForRequest:request]; line instead and use that as the loop condition.\n. style nit: while (cachedResponse) {\n. nit: use [NSHTTPURLResponse class] instead of NSHTTPURLResponse.class\n. nit: (NSHTTPURLResponse *)cachedResponse\n. Verify that redirectURL is non-nil?\n. Last style nits, I promise :)\nThere shouldn't be a space between the : and the argument, so isKindOfClass:[NSHTTPURLResponse class]\n. Same here. Also can you make sure redirectURL is non-nil before continuing here?\n. It's not a property on the route is it? Just on <NavigatorIOS>, so we should only have one propTypes definition.\n. We don't typically use this pattern. You can just pass this directly to the NavigatorComponent. If it's not configured the value of this.props.interactivePopGestureEnabled will be undefined and React will handle that properly.\n. nit: RCTPopGestureState\n. nit { should go on a newline and method contents should be indented with 2 spaces\n. Why do you need a custom converter function?\n. Why do you need a custom converter function?\n. If the behaviour is an enum on the native side, I feel like we should also expose an enum on the JS. Otherwise there's no way to reset a navigator to the default behaviour. (e.g. https://github.com/facebook/react-native/blob/master/Libraries/Modal/Modal.js#L43)\n. If the behaviour is an enum on the native side, I feel like we should also expose an enum on the JS. Otherwise there's no way to reset a navigator to the default behaviour. (e.g. https://github.com/facebook/react-native/blob/master/Libraries/Modal/Modal.js#L43)\n. You should nil out _navigationController.interactivePopGestureRecognizer.delegate here if it's still set to self.\n. You should nil out _navigationController.interactivePopGestureRecognizer.delegate here if it's still set to self.\n. Instead of sending a separate scroll event, could we include the correct final information in the RCT_SEND_SCROLL_EVENT below?\n. Instead of sending a separate scroll event, could we include the correct final information in the RCT_SEND_SCROLL_EVENT below?\n. It would be cleaner to write this as:\n```\nNSDictionary *notificationTypes = @{\n  @\"alert\": @(notificationSettings.types & UIUserNotificationTypeAlert),\n  ...\n};\n```\n(may need an extra BOOL cast)\n. It would be cleaner to write this as:\n```\nNSDictionary *notificationTypes = @{\n  @\"alert\": @(notificationSettings.types & UIUserNotificationTypeAlert),\n  ...\n};\n```\n(may need an extra BOOL cast)\n. This doesn't seem fatal. Use RCTLogError here. Use RCTFatal if you actually want to make it fatal.\n. This doesn't seem fatal. Use RCTLogError here. Use RCTFatal if you actually want to make it fatal.\n. nit: no single-line if's. \n. nit: no single-line if's. \n. The current React incompatibility is a temporary issue (see https://github.com/facebook/react-native/pull/7881 for details). As @davidyaha says, it would be better to keep these instructions future proof and update the instructions to use npm install --save\n. The current React incompatibility is a temporary issue (see https://github.com/facebook/react-native/pull/7881 for details). As @davidyaha says, it would be better to keep these instructions future proof and update the instructions to use npm install --save\n. Why copy here? You're going to convert it to JSON immediately anyway.\n. Why copy here? You're going to convert it to JSON immediately anyway.\n. Just use (id)kCFNull here.\n. Just use (id)kCFNull here.\n. nit: { on a new line\n. nit: { on a new line\n. You could simplify this block by writing all of these as:\nformattedNotification[@\"alertBody\"] = RCTNullIfNil(notification.alertBody);\n. You could simplify this block by writing all of these as:\nformattedNotification[@\"alertBody\"] = RCTNullIfNil(notification.alertBody);\n. Even nicer would be to extract this loop body as a separate static function and put it next to RCTConvert (UILocalNotification).\n. Even nicer would be to extract this loop body as a separate static function and put it next to RCTConvert (UILocalNotification).\n. No need to wrap this in RCTNullIfNil, @() will always return a non-nil object.\n. No need to wrap this in RCTNullIfNil, @() will always return a non-nil object.\n. nit: We don't typically use = alignment.\n. nit: We don't typically use = alignment.\n. This doesn't use self, so you can just make it a static method. It's also better to prefer immutable objects, so return NSDictionary here instead of NSMutableDictionary as type.\nstatic NSDictionary *formatLocalNotification(UILocalNotification *notification)\n. This doesn't use self, so you can just make it a static method. It's also better to prefer immutable objects, so return NSDictionary here instead of NSMutableDictionary as type.\nstatic NSDictionary *formatLocalNotification(UILocalNotification *notification)\n. nit: remove this empty line and the ones in the loop body.\n. nit: remove this empty line and the ones in the loop body.\n. Every NSMutableDictionary is also a NSDictionary, so you can just return formattedLocalNotification here. (Technically, the object is still an NSMutableDictionary, so any caller of this method could cast and mutate it, but this function doesn't need to care about it).\n. Every NSMutableDictionary is also a NSDictionary, so you can just return formattedLocalNotification here. (Technically, the object is still an NSMutableDictionary, so any caller of this method could cast and mutate it, but this function doesn't need to care about it).\n. nit: no empty line required here :)\n. nit: no empty line required here :)\n. Can you update the globals definition on line 23 too?\n. Use [NSCharacterSet  newlineCharacterSet]. I'd also assign it immediately to ipGuess instead of making that a separate assignment.\n. Some questions here:\n1) This doesn't modify the original plist file in the local source checkout, right?\n2) This command doesn't complain when you try add an entry that already exists?\n. Can you gate this with RCT_DEV? We don't want to run this in production.\n. You can shorten this as ipGuess ?: @\"localhost\"\n. You should put this outside the + (void)initialize, otherwise we'll still be executing an empty method in prod.\n. Moving this here means that all photo loaders implementing this API will now skip caching. This includes for example the RCTPhotoLibraryImageLoader and RCTImageLoaderHelpers.\n. Is it possible to make these __DEV__ only? (preferably the whole definition, otherwise just the method contents).\n. We probably need another approach. To clarify: your issue is that we first have to schedule this on the _URLCacheQueue and then we go to the main queue right? Keep in mind that we also do this for memory reasons, if you start loading a ton of images on the main thread, skipping our queueing, you'll run into OOMs as well.\n. We probably need another approach. To clarify: your issue is that we first have to schedule this on the _URLCacheQueue and then we go to the main queue right? Keep in mind that we also do this for memory reasons, if you start loading a ton of images on the main thread, skipping our queueing, you'll run into OOMs as well.\n. I'd rather expose an (optional) API on the loadHandler asking for things like shouldCacheImageForURL? Then if you want to, you can skip that part. That doesn't solve the threading approach though.\n. I'd rather expose an (optional) API on the loadHandler asking for things like shouldCacheImageForURL? Then if you want to, you can skip that part. That doesn't solve the threading approach though.\n. Let's add 2 optional methods to the URLLoader protocol:\n1) shouldCacheLoadedImages (i.e. does the loader have its own image cache, defaults to YES)\n2) requiresScheduling (i.e. do we need to manage the invocation of this loader on our URL queue, defaults to YES)\n. Let's add 2 optional methods to the URLLoader protocol:\n1) shouldCacheLoadedImages (i.e. does the loader have its own image cache, defaults to YES)\n2) requiresScheduling (i.e. do we need to manage the invocation of this loader on our URL queue, defaults to YES)\n. You only need to mark variables as __block if you plan to re-assign them from inside a block. That doesn't seem to be the case here.\n. Please revert this change.\n. Does this logic of following redirects for getting a cache hit still work?\n. nit: our formatting guideline is NSString *responseDate. Could you apply that consistently everywhere?\n. Why is this nested in another scope?\n. This means we'll wait for the whole process to finish before we output anything. This will make it seem like nothing is happening.\n. Could we instead parse some of the xcodebuildArgs and get the scheme that way?\n. Could you keep the original function structure (creating the Promise in runIOS), as it is it's really hard to see what code actually changed.\n. cc'ing original author @hayeah \nWe don't implement URLSession:willPerformHTTPRedirection: in RCTHTTPRequestHandler. I'm not sure what the default behaviour is here.\n. Blogpost: https://hackernoon.com/townske-app-in-react-native-6ad557de7a7c#.2k579fync\n. make this let\n. This is not necessarily the same: console.log will automatically add a newline to every piece of data. Is the data that gets passed in here stripped of newlines as well?\n. const\n. Could we just do process.stdout.write(data)?\n. Pass [process.stdin, 'pipe', process.stderr] as the stdio option and you don't need this at all.\n. Can you nest this in the else block and have a shared return statement after the block?\n. This is out-of-date with the new RCTBundleURLProvider API\n. Since this doesn't depend on any state now, could you just it make it a static function?\n. Can you turn the order of the condition around here, so it mirrors what you do on line 411.\n. Could you provide a bit more information on what changed here? We previously sent over the text as a string hoping that the JS could decode correctly as an array buffer, and now we send it as base64 (less efficient over the wire)?\n. Why is this commented out?\n. I know this code is already like this, but why do we need both _incrementalEvents and the onreadystatechange and the onprogress. It seems that _incrementalEvents is only set if one of these other ones is also set? Can we get rid of the local state?\n. I get an Infer warning here: \nThere may be a Field Not Initialized: Field ProgressResponseBody.mBufferedSource is not initialized in the constructor and is not declared @Nullable\n. maybe rename this to formattedSimulatorName?\n. This expression seems incorrect\n. remote already got added in another pull-request. Could you rebase this?\n. Could be a bug in the other code then too. Could you clean up all of them up? It probably should just be sourceSize.width = destSize.width\n. Can you keep the original console.log feature around somewhere? \n. This is now set on the native side: https://github.com/facebook/react-native/blob/master/Libraries/PushNotificationIOS/RCTPushNotificationManager.m#L162\n. NSTimer retains its target, this creates a retain cycle.\n. Not sure what you're trying to do here, but you can just pass _fontVariant directly to the method below.\n. just make this a static function and use dispatch_once to initialise it just once. In Objective-C we also only use get as a prefix when the result will be returned indirectly.\nstatic NSDictionary *fontVariantMaping()\n{\n  static NSDictionary *mapping;\n  dispatch_once ...\n  return mapping;\n}\n. It looks like these options are mutually-exclusive? How does this work when you can provide an array of them?\n. BOOL didFindFont = NO;\n. didFindFont = YES\n. I wonder if we can make all of these params typed instead of using id everywhere.\n. You'll need something like _RCTTimingProxy (https://github.com/facebook/react-native/blob/master/React/Modules/RCTTiming.m#L73)\n. Maybe MessageQueue.spy(true) to turn on the default function, MessageQueue.spy(fn) to provide a custom function and MessageQueue.spy(false) to turn it off?\n. This seems like an independent issue. Could you remove it from your PR?\n. These fonts won't generally be available on peoples phones or simulators. Can you pick another one?\n. Can you split this over multiple lines? Since it's also only used in one spot, I'd just define it inline in spy\n. style nit: if (spyOrToggle === true)\n. Remove these\n. Oh you're right: http://iosfonts.com/\n. Can you split this over multiple lines?\nMessageQueue.prototype.__spy = (info) => {\n  console.log(...)\n};\n. What's the developer experience for this. Will people need to remember to also install ios-deploy?\n. nit: our objc style is @property (nonatomic, strong) NSMutableDictionary *remoteNotificationCallbacks\n. These typenames are global, can you prefix it with RCT?\n. Why are you sending the event twice?\n. if (!self.remoteNotificationCallbacks)\n. This doesn't seem like it should be a fatal error. Instead use RCTLogError (it will show a redbox too)\n. if (!completionHandler)\n. Why did you add this?\n. This file should just be completely compiled out.\n. Same here. If the whole contents of a file doesn't make on Apple TV, put the gating at the file level.\n. Is this API not available?\n. type DimensionsChangedEventName = 'backPress';\nIf other events get added here, you can just add them as\ntype DimensionsChangedEventName = 'backPress' | 'otherEvent';\n. Use EventEmitter to manage listeners.\n. Use UIScreen * instead of id\n. nit: indent with 2 spaces\n. nit: indent with 2 spaces\n. No need to do strongify here. Just do [weakSelf requestReload]. If weakSelf is nil, this won't crash.\n. No need to do strongify here. Just do [weakSelf requestReload]. If weakSelf is nil, this won't crash.\n. Please format like application:(__unused UIApplication *)application didRegister...\n. Please format like application:(__unused UIApplication *)application didRegister...\n. You should first add the listeners, and only then call requestPermission.\n. You should first add the listeners, and only then call requestPermission.\n. Can you add a flowtype for type?\n. Can you add a flowtype for type?\n. nit: this should be - (instancetype)init\n. nit: this should be - (instancetype)init\n. I think I just forgot to kill all of the UIAlertView related code in https://github.com/facebook/react-native/commit/07553d0f1c61173edad804c4e7a93c902719e05b\nI'll either get to it later or feel free to kill it here too.\n. I think I just forgot to kill all of the UIAlertView related code in https://github.com/facebook/react-native/commit/07553d0f1c61173edad804c4e7a93c902719e05b\nI'll either get to it later or feel free to kill it here too.\n. This at least merits a warning on init. Maybe in _ensureSetup here add\n```\nif TARGET_OS_TV\nRCTLogWarn(\"Persistent storage is not supported on tvOS, your data may be removed at any point.\")\nendif\n``\n. This at least merits a warning on init. Maybe in_ensureSetup` here add\n```\nif TARGET_OS_TV\nRCTLogWarn(\"Persistent storage is not supported on tvOS, your data may be removed at any point.\")\nendif\n``\n. undo :)\n. undo :)\n. This one should also just be removed at the project level\n. This one should also just be removed at the project level\n. Why change this?\n. Why change this?\n. If there's no UIDataDetectorTypes and UIBarStyle support at all on tvOS, it would probably be best to gate the definition and implementation here, and recursively fix all of the call-sites that try accessing it. That makes more sense imo than pretending we can convert it to an enum of our own?\n. If there's no UIDataDetectorTypes and UIBarStyle support at all on tvOS, it would probably be best to gate the definition and implementation here, and recursively fix all of the call-sites that try accessing it. That makes more sense imo than pretending we can convert it to an enum of our own?\n. Why not gate the whole module? This will make it so that every time you use Switch it'll render as a View instead\n. Why not gate the whole module? This will make it so that every time you use Switch it'll render as a View instead\n. nit: undo whitespace only changes\n. nit: undo whitespace only changes\n. Put{outside the#endifand you don't need the#ifbelow\n. Put{outside the#endifand you don't need the#ifbelow\n. Please don't use define's for this. Can we also avoid having this logic be duplicated both on JS and native?\n. Please don't use define's for this. Can we also avoid having this logic be duplicated both on JS and native?\n. So what if you're using UITextAutocorrectionTypeDefault? That would still be broken. Are there no other callbacks we get after the auto correct suggestion gets committed?\n. So what if you're using UITextAutocorrectionTypeDefault? That would still be broken. Are there no other callbacks we get after the auto correct suggestion gets committed?\n. This documentation needs to go somewhere.\n. This documentation needs to go somewhere.\n. Why did you get rid of this?\n. Why did you get rid of this?\n. Bad merge here\n. Bad merge here\n. Why does this not apply to tvOS?\n. Why does this not apply to tvOS?\n. nit: remove trailing whitespace\n. nit: remove trailing whitespace\n. You could probably make thisIP=$(ipconfig getifaddr en0 || ipconfig getifaddr en1). You could probably make thisIP=$(ipconfig getifaddr en0 || ipconfig getifaddr en1). Why is this necessary? I believe RN wil automatically ignore attributes that are not exported by a view manager (which is how we OS-specific attributes)\n. Maybe regex match on 'simulator$'?\n. How is this this test broken on tvOS?\n. Revert?\n. Any idea why all of these were added?\n. Can you add a comment here to clarify what each of the if's are closing?\n. Revert :)\n. Useletfor this\n. Uselethere too\n. Doingconsole.log` like this means we will buffer all output and it will seem like the process is stuck while xcode is building. Can you stream it to the console while also scanning it?\n. Use a regex capture group to match once here and extract the value you're looking for later: http://www.regular-expressions.info/refcapture.html\n. I think the spawn approach is more correct here. We're seeing issues with console output being hidden already on travis (e.g. your build hits a timeout and gets killed, this console.log will never get executed). \nGiven that in the default configuration for RN, the app name is identical to the scheme, I think we should try to get it right instead of a hacking a fix in.\n. You don't need to use () for everything, just put it around the part of the input string you care about.\nconst productNameMatch = /export FULL_PRODUCT_NAME=\"?(.+)\\.app/.exec(buildOutput);\n. nit: have opening brace on previous line\n. const simulators\n. nit: open brace on previous line\n. nit: Add braces after the if\n. Same nits as above\n. This should be const\n. This should be console.error? Also, indent with 2 spaces.\n. Since there's just going to be 1 or 0 \" in your regex, use \"? instead of \"*\"\n. nit: on previous line\n. This is equivalent to using private APIs, which is reason for rejection in the App Store.\n. Ah yes, let simulators outside of the try-catch block would be the preferred style.\n. nit: __weak UIAlertController *weakAlertController = alertController;\n. Why is this a react class? It looks like you're instantiating it yourself using new and calling methods on it, which is not how these classes are supposed to be used. Should this be just a regular class or a static object?\n. ditto\n. Instead, why not make this just an instance of NativeEventEmitter, like https://github.com/facebook/react-native/blob/9ee815f6b52e0c2417c04e5a05e1e31df26daed2/Libraries/Components/StatusBar/StatusBarIOS.android.js\n. Why does this need to extend View? I'm not sure if that's supported (if it works though...)\n. Let's keep these here for now, we'll see how the other tv-specific properties scale.\n. Is there anyway we can move these to the native sides and only apply defaults when you're running on TVOS?\n. I'm not convinced of this change. Ideally if you're not targetting tvOS, you also shouldn't be using any tvOS specific components.\nHow about:\n1) is there a way for us to have touchable receive defaultProps on the native side whenever you're running under tvOS\n2) provide a TVTouchable that creates a Touchable with a custom viewClass (TVView) and a set of extraProps?\n. Why reassign these instead of using the original argument variable?. Feel free to add that to Platform.ios.js if that's the best way forward. I would still prefer the original approach I commented here (unless you can tell me why it doesn't work of course ;) ). Out-of-date?. I'd avoid redeclaring this here, and just use ReactNativeViewAttributes.RCTView in TVView.ios.js. RCTTVNavigationEventEmitter is not used in this file. Remove commented code. nit: remove empty {}. nit: { on new line. Thanks for adding tests, but testing internals like this is not very helpful. _actionSheet is not part of the public interface and depending in on tests will easily break.. Alternatively: add a getter \"isActionSheetShown\" that checks if actionSheet is non-nil?. What if some of the props you're changing also need to be set on the shadow view? What if there's pending changes in flight from the shadowqueue to this view? They'll overwrite the ones you just set synchronously.. It seems like you've added that restriction at the Animated ViewManager logic, but this code is not aware of it. I'm worried that 3rd party view manager authors may use this API incorrectly.\nPerhaps we could have this use a separate API and in RCTComponentData as well and verify that the props you're setting are main-thread only?. Instead of adding a new property here, why not use Platform.interfaceIdiom == 'tv'? A null-check on Platform also doesn't seem necessary to me.. Instead of forking this list, maybe you can add a supportsTVOS to the original list and filter it when we're running on tvOS? . Require findNodeHandle directly, instead of through ReactNative. nit: spacingif (isTVOS). We're repeating this all over the place. Can you either make it a method on Platform or a separate function module?. For the RN core, use @providesModule and just require by name. Ah yes, unit tests may behave slightly differently. interfaceIdiom should be pretty reliable, it's Apple's recommended way of doing these types of checks: https://github.com/facebook/react-native/blob/master/React/Base/RCTPlatform.m#L24-L25. You may be able to use [[NSRunLoop mainRunLoop] addTimer] although I'm not sure that's thread safe.. This method has certain expectations on which thread it's called from. At least with the JSC executor it should definitely not be called from the main thread.. I'm still a bit worried about this but feel free to go ahead with docs added.. What you could is trigger the sleep timer on the main runloop, but in the callback dispatch to the timer queue to perform the wakeup.. Inside RN, use require('NativeModules'). You could hook into JSC's finalizer callback to clean this up, but we currently don't have a good cross-platform approach to creating custom JS objects. It also would be an issue with the Websocket executor.. There's no longer any need to customize HEADER_SEARCH_PATHS. Can you remove the override from your xcodeproj?. nit: I'd prefer the method name to be blobManager. Export constants causes modules to be initialized / allocated eagerly. Since these are just constants, perhaps you could just have these strings in JS?. Can you make a comment here on the threading? You've configured your operation queue to work in parallel, so this may be accessed from multiple threads? If so, it will need locks.. Why not have the caller take care of this and keep your interface simple? Using magic numbers to mark certain arguments as unused is not best practice. Undo. Instead configure the copy files/headers phase correctly, or specify the dependencies correctly in xcode.. These both have a potential impact on the initial bundle size. Are we defining them as globals for compatibility with the web spec?. Remove. Why not use the category method?. nit: (_listenerCount > 0). nit: _listenerCount = MAX(_listenerCount  - _count, 0). Drop the ? true : false?. But what if you have a scrollview larger than 1000x1000? I don't like a magic number approach.. Maybe we should expose a getScrollComponent method so we don't need to forward all of these methods.. \ud83c\udf89 . It seems we're repeating this logic. Can you move it to a private helper method?. Use CGPointMake. Getting releases in sync will be very hard. @dshahidehpour, could we have the podspec in the dirsynced folder so we can reference the included copy?. This will work for now, but it doesn't match the xcode behaviour in terms of recursion. For now, we can try not include any subfolders in these directors.. cc @sahrens, just to make sure this is also the direction he's going in with ListView. We can get rid of the returns here. In our xcode setup, a header like ReactCommon/jschelpers/foo/bar.h would be includable as <jschelpers/bar.h>, which won't work this setup as I understand it.\nIn the short term, we can avoid any adding new subfolders under these ReactCommon targets. Instead of mocking watchPosition and clearWatch, can you just mock startObserving()? We should only need to mock the native APIs here.. Yeah, you should only add a mock for the NativeModule, so you probably want to add startObserving there, and remove the LocationObserver mock. nit: no need for this here. Why do you need to pass in reactInstanceManager if it's already available as mReactInstanceManager?. To avoid inconsistencies, let's assert that this method is UIThread only as well? (UiThreadUtil.assertOnUiThread()). Add import on top for Argument instead. Ah yes, my bad. I guess the mocks you have on Geolocation should move to LocationObserver then. Can you do CGPointMake(MAX(offsetX, 0), 0)) instead?. Can you do CGPointMake(0, MAX(offsetY, 0)) instead?. put openURL on a new line. ditto. turn this into a  C helper method void postNotificationWithURL(NSURL *URL). Don't do this. Instead pass self in here as and change the signature to postNotificationWithURL(id sender, NSURL *URL). Also mark this method as static.. Where did this go?. Where did this go?. Unused?. What MessageQueueThread is associated with the UI thread? I don't think this does anything.. Yes, I see that. I'm asking specifically here about the onLooperPrepared method.. Well, we should do another change first then to clean that up to make sure that's true.. It's actually quite important to prioritize bridge startup. I believe we have some changes that reduce the priority after startup has completed.. Yes, please do so.\nI'll look into removing MessageQueueThreadRegistry. Yeah, I considered that. I guess if people install them through NPM we should have the same file available locally, but cocoapod's linting procedure may not copy these files over. I'll give it a try.. Use the variable names for this instead of the string (so userInfo[UIAccessibilityAnnouncementKeyStringValue]. This will make it so that we'll wait for the next UI batch to complete. If you don't want that, dispatch directly to the main queue and use RCTUIManager's viewForTag method.. I'm not sure I understand @shergin. This code will iterate through all of the superclasses of a view manager (up-to-and-including RCTViewManager), so propTypes will be much bigger, and we'll have to send way more information to JS. So, how about RCTViewManager itself then? Where does that get exported?. That's my point. This diff is broken for the base case of RCTViewManager as far as I can tell.\nOther than that, I agree with your strategy (save for some bikeshedding on naming), atlhough I'd change the order of operations a bit: there should be no in-between state where RCTViewManager works but warned against, since it's not supported right now and getting rid of the warning is just going to be painful (your point 4). I think we should revisit this: it would be nice for this module to be completely optional, by linking it here, you're basically required to adopt this.. How important is that really? We're fighting really hard to reduce bridge startup time, and all of these global modules reduce the amount of work we can do on-demand / lazily.. It means we keep the core of the bridge small, and you only need to include the modules you require. It seem like most of the methods here could live on RCTBlobManager itself, if we exposed a way for it to hook into WebSocketModule, e.g. an API on WebSocketModule: setContentHandler:.. forSocketId:.... Any reason to change these?. Can you instead hide the methods completely if !TARGET_OS_TV? So put them from line 96 to line 124.. Can you call ensureComponentIsNative here?. Ah good point, we're always rendering View. It doesn't hurt to check.. Nope, because those go on Image, not View. There's some difference with function binding, which can be expensive. Doing it like this will guarantee it's only bound once I believe.. Yes, I'd prefer that :). Can you make the return type List? It's better to return the abstract interface rather than the concrete implementation type.. Instead of using a string here, can you can change the definition of RCTShowDevMenuNotification to extern (put an RCT_EXTERN definition in the header). Can you mark this as constexpr so we can verify at compile-time this doesn't add a global initalizer?. Can we enforce this using a compiler pragma somehow?. Is this an expensive operation? Should we try to normalize the UIColor to this and then use it across the whole border rendering operation?. You forgot to remove the old definition here. Our internal setup is to have -fno-exceptions for most objective-c code and opt-in to the codepaths that need it. Maybe we can do that here too?. Hmm ok. I think we compile by default with -Wglobal-constructors, so that should catch it too. We don't define RCT_PROFILE in production anyway, so no harm done anyway.. Instead of accessing getListRef() here, why not do\nif (this._wrapperListRef) {\n  this._wrapperListRef.setNativeProps(props);\n}. Use camelCase. In this case, just name the argument config. Why the RN in the name? Can this be just setConfiguration:. Remove this completely and instead check on the JS side if the method exists before calling it.. Use RCTIsMainQueue for consistency with other code.. Use self as the argument and it will use the existing description method below.. Sorry, missed that in your original description. I think it's a good idea to avoid potential conflicts with the web spec. We can name the native module however we want though, so let's call the native method setConfiguration and the API on geolocation setReactConfiguration?. ",
    "trippcr": "Maybe the InputType.TYPE_MASK_FLAGS doesn't need to be there, but I added it because I was using InputType.TYPE_NUMBER_FLAG_DECIMAL and didn't want something else that might been set to interfere with it, when they were ORed the other input type flags in updateStagedInputTypeFlag\n. I would agree. However, all the other flags that are set are prefix with TYPE_TEXT_, which implies they for when the input type class is text. But here we are changing the input type class to number, so it would seem that those text flags are no long applicable or even appropriate.\n. ",
    "baoti": "Why not mActivity.getIntent() ?\n. Just change all (activity's) Context to Activity class\n. Because it should be a Activity instance.\n. ",
    "lxsameer": "Yes, but what should be the version number ? react native 0.16 is out but master version is 0.12.0\n. Ah sure. But we need to change the contribution guide too clearly say it. That guide caused this. \n. Since we have type validation on Javascript code, it won't\n. Ooops I'll fix this\n. in case of null It simply won't do anything and the layout can be controlled by parent layout. Currenly I'm using this feature in my app \n. null value == LTR, i think it's common sense \n. ",
    "cancan101": "Should I make the change from item to icon just for the public API or also for the internal Obj C stuff?\n. ",
    "doochik": "yes, I'll fix it\n. why? there are identically\n. why? there are identically\n. Yes, this comment is obvious, remove it.\n. Yes, this comment is obvious, remove it.\n. This is for CGImageDestinationAddImage and properties is the correct name.\nhttps://developer.apple.com/documentation/imageio/1464962-cgimagedestinationaddimage. Good point!. oops, my bad. Fix it!. oops, my bad. Fix it!. ",
    "zahanm": "nit: can you structure this block more like the iOS side encapsulating the offlinepath and scaledassetpath notions. Bonus points for unifying the code.\nThe android res handling is is going to need to be different, you can have a separate getResourcePath or something.\n. nit: can you structure this block more like the iOS side encapsulating the offlinepath and scaledassetpath notions. Bonus points for unifying the code.\nThe android res handling is is going to need to be different, you can have a separate getResourcePath or something.\n. This logic, and the logic in getAssetDestPathAndroid is shared.\nI'm not sure if we'd rather have this depend on local-cli, or the other way round.\ncc @frantic @martinbigio \nWe definitely shouldn't use two different copies of the same code in one file though. getPathInArchive uses this copy, while getScaledAssetPath uses the other.\n. This logic, and the logic in getAssetDestPathAndroid is shared.\nI'm not sure if we'd rather have this depend on local-cli, or the other way round.\ncc @frantic @martinbigio \nWe definitely shouldn't use two different copies of the same code in one file though. getPathInArchive uses this copy, while getScaledAssetPath uses the other.\n. Can we reverse this if-else ?\njs\nif (platform === 'android' && !offlinePath) {\n  return getAssetDestPathAndroid(..)\n} else {\nmakes this more clear IMHO.\n. Can we reverse this if-else ?\njs\nif (platform === 'android' && !offlinePath) {\n  return getAssetDestPathAndroid(..)\n} else {\nmakes this more clear IMHO.\n. It seems like you're generalizing this to work for iOS or Android, whereas this was only iOS earlier.\nOn Android though, you actually want this to return a / separated filename that's in the same folder structure as the JS code, right? Why are you using getAssetDestPathAndroid(..) at all?\n. It seems like you're generalizing this to work for iOS or Android, whereas this was only iOS earlier.\nOn Android though, you actually want this to return a / separated filename that's in the same folder structure as the JS code, right? Why are you using getAssetDestPathAndroid(..) at all?\n. Still not sure about this dependency.\n. I see. So supposing the app is sideloaded at file://apps/foobar/sideload/main.jsbundle , an asset would look like file://apps/foobar/sideload/assets/drawable_mdpi/uikit_button_special_icon\nOn iOS, we actually use the JS folder structure, so the asset would be at file://apps/foobar/sideload/assets/drawable_mdpi/uikit/button/special/icon.png\nI suppose to keep platform conventions we should keep these as being different. What do you think @frantic / @nicklockwood ?\nAt any rate, can you mention these examples in the PR description, and put an example inline in a comment in getScaledAssetPath. This will vastly help folks understand what's going on here in the future.\n. ",
    "geof90": "@zahanm Because the folder structure as generated by the CLI/bundler also follows the getAssetDestPathAndroid(...) logic. e.g if the image scale is 1, the image will go to the drawable_mdpi folder.\nWe want to make it easy for users to update their apps by simply uploading the generated package including bundle + assets generated by the bundler.\n. @zahanm Because the folder structure as generated by the CLI/bundler also follows the getAssetDestPathAndroid(...) logic. e.g if the image scale is 1, the image will go to the drawable_mdpi folder.\nWe want to make it easy for users to update their apps by simply uploading the generated package including bundle + assets generated by the bundler.\n. @zahanm, I have refactored the code. I put all the logic in a new file called assetPathUtils.js inside local-cli. Now, both getAssetDestPathAndroid.js and resolveAssetSource.js will reference this file and use the functions declared there, so there is no more logic duplication.\n. @zahanm, for absolute clarity, the unit tests may be the best place to look.\nOn iOS,\nBundle Location: 'file:///Path/To/Sample.app/main.bundle' \nhttpServerLocation: '/assets/module/a/'\nName: 'logo'\ntype: 'png'\nResolved Asset location: '/Path/To/Sample.app/assets/module/a/logo.png'\nOn Android,\nBundle Location: '/sdcard/Path/To/main.bundle'\nhttpServerLocation: '/assets/module/a/',\nname: 'logo'\ntype: 'png'\nResolved Asset location: '/sdcard/Path/To/drawable_mdpi/module_a_logo.png'\nNote that '/assets/' is stripped off in Android. Again, this is only replicating what the bundler CLI does. In fact, with this change, both the asset resolver and the bundler CLI follows the same logic.\nI'll add the inline comment.\n. @frantic, these are two separate issues. One is with reporting the scriptUrl with the \"file://\" prefix, one is with knowing where to look for an image given a uri. I have fixed the first issue by adding that extra logic in JSBundleLoader.java to prepend \"file://\" if the bundle is not from the assets folder. \nFor the second issue, RN Android checks for the presence of a scheme prefix, otherwise it will assume that the image is from the binary's static resources. Therefore, resolveAssetSource still needs to return an offline path prefixed with \"file://\" for Android, and no prefix for iOS. This distinction makes sense because in iOS to specify a local asset all you need is a file path, but for Android, we need to have a scheme (assets://, file:// or res://) because all these are resolved by Fresco to different places, so I think it is easier and clearer to rely on having this prefix encoded in the URI instead complicated parsing to tell whether it is a resource ID, http location, assets location, or file location.\n. Since both resolveAssetSource.js and getAssetDestPath.js is going to depend on this refactor, extracting this change is going to be hard and confusing because then one PR would rely on the other PR getting merged.\n. This is needed because the rnpm commands have additional positional arguments, e.g link <packageName> in their names, therefore a naive full string comparison wouldn't work.\n. Yep. Any chance you could take this whole change?\n. Which PR? I don't think https://github.com/facebook/react-native/pull/9173 is related, it only fixes showing the help. When you run the command react-native link react-native-plugin, you would still see the warning because isValidCommand fails to find a command with a name that matches. This fixes that.\nI noticed you added \"needs-revision\", what exactly needs revision? Also, given that this is not the main point of this PR, I would appreciate it if you could comment on the addition of the pre/post unlink hooks :).\n. Fixed\n. ",
    "niftylettuce": "done\n. done\n. ",
    "shoreflyer": "This'll fail when running in the simulator... you need to check for sim or device...\n. ",
    "mschwartz": "It runs for me.  However, I am using the 8.x simulator.  You may be right about it not working in the 9.x simulators.\nI'll look at the fix for this.\n. ",
    "aprock": "The ws module's options argument separates \"origin\" from the other header values that can be added to the request. Rather than duplicate their api exactly, this seemed like a reasonable start to allow for request customization.\n. This is according to spec.  The WS spec has an optional protocols argument that can be a string or array of strings.\nhttps://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n. added an if for this\n. ",
    "eslint-bot": "quotes: Strings must use singlequote.\n. no-unused-vars: \"MapRegion\" is defined but never used\n. Type annotations are not allowed in untyped mode\n. semi-spacing: Missing whitespace after semicolon.\n. semi-spacing: Missing whitespace after semicolon.\n. semi-spacing: Missing whitespace after semicolon.\n. semi-spacing: Missing whitespace after semicolon.\n. semi-spacing: Missing whitespace after semicolon.\n. semi-spacing: Missing whitespace after semicolon.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. ColorPropType Required module not found\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. ColorPropType Required module not found\n. eol-last: Newline required at end of file but not found.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. ColorPropType Required module not found\n. ColorPropType Required module not found\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. eol-last: Newline required at end of file but not found.\n. ColorPropType Required module not found\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. parameter propName Missing annotation\n. parameter props Missing annotation\n. parameter component Missing annotation\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-undef: \"Event\" is not defined.\n. property timeout Property not found in XMLHttpRequestBase\n. property timeout Property not found in XMLHttpRequestBase\n. property Linking Property not found in Object.create\n. property Linking Property not found in Object.create\n. no-undef: \"ReactElement\" is not defined.\n. no-unused-vars: \"UIExplorerBlock\" is defined but never used\n. no-undef: \"ReactElement\" is not defined.\n. no-undef: \"statics\" is not defined.\n. no-alert: Unexpected alert.\n. no-alert: Unexpected alert.\n. no-undef: \"alert\" is not defined.\n. no-undef: \"alert\" is not defined.\n. property Alert Property not found in Object.create\n. property onLoad Property cannot be accessed on possibly undefined value undefined\n. property onLoadEnd Property cannot be accessed on possibly undefined value undefined\n. no-undef: \"$Enum\" is not defined.\n. no-undef: \"$Enum\" is not defined.\n. property _propStackIndex Property not found in React component\n. return Missing annotation\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-fallthrough: Expected a \"break\" statement before \"default\".\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. semi: Missing semicolon.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. semi: Missing semicolon.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. semi: Missing semicolon.\n. undefined This type is incompatible with Promise\n. return undefined This type is incompatible with Promise\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '>>>'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '>>>'.\n. no-bitwise: Unexpected use of '&'.\n. no-bitwise: Unexpected use of '&'.\n. undefined This type is incompatible with Promise\n. return undefined This type is incompatible with Promise\n. undefined This type is incompatible with Promise\n. return undefined This type is incompatible with Promise\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. react/jsx-quotes: JSX attributes must use doublequote.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. react/jsx-quotes: JSX attributes must use doublequote.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. undefined This type is incompatible with Promise\n. undefined This type is incompatible with Promise\n. no-undef: \"ReactPropsCheckType\" is not defined.\n. no-undef: \"ReactPropsCheckType\" is not defined.\n. no-undef: \"ReactPropsCheckType\" is not defined.\n. no-undef: \"ReactPropsCheckType\" is not defined.\n. no-undef: \"alert\" is not defined.\n. no-alert: Unexpected alert.\n. no-alert: Unexpected alert.\n. no-undef: \"alert\" is not defined.\n. no-undef: \"alert\" is not defined.\n. no-alert: Unexpected alert.\n. no-alert: Unexpected alert.\n. no-undef: \"alert\" is not defined.\n. no-alert: Unexpected alert.\n. no-undef: \"alert\" is not defined.\n. no-undef: \"alert\" is not defined.\n. no-alert: Unexpected alert.\n. no-alert: Unexpected alert.\n. no-undef: \"alert\" is not defined.\n. no-undef: \"alert\" is not defined.\n. no-alert: Unexpected alert.\n. space-after-keywords: Keyword \"if\" must be followed by whitespace.\n. no-trailing-spaces: Trailing spaces not allowed.\n. eqeqeq: Expected '===' and instead saw '=='.\n. semi: Missing semicolon.\n. element of Object.keys Expected object instead of array type\n. element of Object.keys Expected object instead of possibly null value null\n. element of Object.keys Expected object instead of possibly undefined value undefined\n. element of Object.keys Expected object instead of array type\n. element of Object.keys Expected object instead of possibly undefined value undefined\n. element of Object.keys Expected object instead of possibly null value null\n. property length Property not found in possibly null value null\n. property length Property not found in possibly undefined value undefined\n. property length Property cannot be accessed on possibly null value null\n. property length Property not found in possibly null value null\n. property length Property cannot be accessed on possibly undefined value undefined\n. property length Property not found in possibly undefined value undefined\n. property length Property not found in possibly null value null\n. property length Property not found in possibly undefined value undefined\n. property length Property cannot be accessed on possibly null value null\n. property length Property not found in possibly null value null\n. property length Property cannot be accessed on possibly undefined value undefined\n. property length Property not found in possibly undefined value undefined\n. property length Property cannot be accessed on possibly undefined value undefined\n. property length Property not found in possibly null value null\n. property length Property not found in possibly undefined value undefined\n. property length Property cannot be accessed on possibly undefined value undefined\n. property length Property not found in possibly null value null\n. property length Property cannot be accessed on possibly null value null\n. property length Property not found in possibly undefined value undefined\n. property length Property cannot be accessed on possibly null value null\n. property length Property not found in possibly undefined value undefined\n. undefined This type is incompatible with number\n. undefined This type is incompatible with number\n. undefined This type is incompatible with object type\n. undefined This type is incompatible with object type\n. undefined This type is incompatible with object type\n. undefined This type is incompatible with object type\n. identifier array Could not resolve name\n. no-extra-semi: Unnecessary semicolon.\n. strict: Use the global form of \"use strict\".\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. strict: Use the global form of \"use strict\".\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. strict: Use the global form of \"use strict\".\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-extra-semi: Unnecessary semicolon.\n. no-extra-semi: Unnecessary semicolon.\n. no-extra-semi: Unnecessary semicolon.\n. no-extra-semi: Unnecessary semicolon.\n. no-extra-semi: Unnecessary semicolon.\n. no-extra-semi: Unnecessary semicolon.\n. no-unused-vars: \"React\" is defined but never used\n. no-extra-semi: Unnecessary semicolon.\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-extra-semi: Unnecessary semicolon.\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-extra-semi: Unnecessary semicolon.\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-unused-vars: \"React\" is defined but never used\n. no-extra-semi: Unnecessary semicolon.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. get/set properties not yet supported\n. property Share Property not found in Object.create\n. property tintColor Property cannot be accessed on possibly undefined value undefined\n. property Share Property not found in Object.create\n. property tintColor Property cannot be accessed on possibly undefined value undefined\n. property UNSENT Property not found in statics of XMLHttpRequestBase\n. property LOADING Property not found in statics of XMLHttpRequestBase\n. property OPENED Property not found in statics of XMLHttpRequestBase\n. property HEADERS_RECEIVED Property not found in statics of XMLHttpRequestBase\n. property HEADERS_RECEIVED Property not found in statics of XMLHttpRequestBase\n. property UNSENT Property not found in statics of XMLHttpRequestBase\n. property OPENED Property not found in statics of XMLHttpRequestBase\n. property LOADING Property not found in statics of XMLHttpRequestBase\n. property HEADERS_RECEIVED Property not found in statics of XMLHttpRequestBase\n. property UNSENT Property not found in statics of XMLHttpRequestBase\n. property LOADING Property not found in statics of XMLHttpRequestBase\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. Unexpected token ;\n. no-extra-semi: Unnecessary semicolon.\n. no-bitwise: Unexpected use of '|='.\n. no-extra-semi: Unnecessary semicolon.\n. no-bitwise: Unexpected use of '<<'.\n. no-bitwise: Unexpected use of '<<'.\n. ./UIExplorerList Required module not found\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. string This type is incompatible with number\n. undefined Cannot be compared to number\n. jsx-quotes: Definition for rule 'jsx-quotes' was not found\n. keyword-spacing: Definition for rule 'keyword-spacing' was not found\n. keyword-spacing: Definition for rule 'keyword-spacing' was not found\n. jsx-quotes: Definition for rule 'jsx-quotes' was not found\n. keyword-spacing: Definition for rule 'keyword-spacing' was not found\n. jsx-quotes: Definition for rule 'jsx-quotes' was not found\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. identifier requestIdleCallback Could not resolve name\n. no-return-assign: Arrow function should not return assignment.\n. property _view Property not found in React component\n. property _view Property not found in React component\n. null This type is incompatible with AnimatedValue\n. no-floating-decimal: A trailing decimal point can be confused with a dot.\n. undefined This type is incompatible with number\n. undefined This type is incompatible with number\n. no-extra-bind: The function binding is unnecessary.\n. no-extra-bind: The function binding is unnecessary.\n. no-extra-bind: The function binding is unnecessary.\n. keyword-spacing: Expected space(s) after \"return\".\n. identifier funct Could not resolve name\n. no-undef: 'funct' is not defined.\n. no-undef: 'globalvar' is not defined.\n. no-dupe-keys: Duplicate key 'lineHeight'.\n. Duplicate data property in object literal not allowed in strict mode\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. undefined This type is incompatible with string\n. ./UIExplorerList Required module not found\n. null This type is incompatible with string\n. return Missing annotation\n. return Missing annotation\n. identifier requestAnimationFrame Could not resolve name\n. space-infix-ops: Infix operators must be spaced.\n. quotes: Strings must use singlequote.\n. no-unused-vars: 'node' is defined but never used\n. no-unused-vars: 'MOCK_NATIVE_API' is defined but never used\n. no-new: Do not use 'new' for side effects.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-trailing-spaces: Trailing spaces not allowed.\n. property shareText Property not found in ShareMessageExample\n. parameter props Missing annotation\n. undefined This type is incompatible with function type\n. property loading of object literal Property cannot be assigned on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. null This type is incompatible with function type\n. property status Property cannot be accessed on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. foo property loading Property not found in possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. parameter props Missing annotation\n. property loading of object literal Property cannot be assigned on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. eol-last: Newline required at end of file but not found.\n. semi-spacing: Missing whitespace after semicolon.\n. call of method send Method cannot be called on possibly null value null\n. call of method send Method cannot be called on possibly null value null\n. access of computed property/element Element cannot be accessed with possibly null value null\n. no-undef: 'WebSocket' is not defined.\n. class property state Missing annotation\n. property lastMessage Property not found in object literal\n. parameter event Missing annotation\n. no-undef: 'WebSocket' is not defined.\n. call of method close Method cannot be called on possibly null value null\n. no-undef: 'WebSocket' is not defined.\n. no-undef: 'WebSocket' is not defined.\n. no-undef: 'Buffer' is not defined.\n. no-undef: 'WebSocket' is not defined.\n. no-unused-vars: 'NativeModules' is defined but never used\n. array literal This type is incompatible with string\n. no-shadow: 'frame' is already declared in the upper scope.\n. parameter warning Missing annotation\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. null: Parsing error: Unexpected token\n. Unexpected token <<\n. null: Parsing error: Unexpected token\n. Unexpected token <<\n. eol-last: Newline required at end of file but not found.\n. eol-last: Newline required at end of file but not found.\n. no-undef: 'StatusBar' is not defined.\n. identifier StatusBar Could not resolve name\n. no-undef: 'StatusBar' is not defined.\n. identifier StatusBar Could not resolve name\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-undef: 'EventListener' is not defined.\n. ii const cannot be reassigned const ii\n. i const cannot be reassigned const i\n. no-unused-vars: 'toggleText' is defined but never used\n. ii const cannot be reassigned const ii\n. i const cannot be reassigned const i\n. no-unused-vars: 'toggleText' is defined but never used\n. jj const cannot be reassigned const jj\n. ii const cannot be reassigned const ii\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'selectionString' is defined but never used\n. jj const cannot be reassigned const jj\n. ii const cannot be reassigned const ii\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'selectionString' is defined but never used\n. eol-last: Newline required at end of file but not found.\n. quotes: Strings must use singlequote.\n. eol-last: Newline required at end of file but not found.\n. no-unused-vars: 'React' is defined but never used\n. eol-last: Newline required at end of file but not found.\n. quotes: Strings must use singlequote.\n. eol-last: Newline required at end of file but not found.\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. no-unused-vars: 'React' is defined but never used\n. quotes: Strings must use singlequote.\n. no-return-assign: Arrow function should not return assignment.\n. semi: Missing semicolon.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. no-shadow: 'frame' is already declared in the upper scope.\n. array literal This type is incompatible with string\n. eol-last: Newline required at end of file but not found.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. no-shadow: 'warningInfo' is already declared in the upper scope.\n. property count Property cannot be accessed on possibly undefined value undefined\n. no-shadow: 'warningInfo' is already declared in the upper scope.\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. no-shadow: 'warningInfo' is already declared in the upper scope.\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. no-shadow: 'warningInfo' is already declared in the upper scope.\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be assigned on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. space-infix-ops: Infix operators must be spaced.\n. space-infix-ops: Infix operators must be spaced.\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. keyword-spacing: Expected space(s) after \"if\".\n. null This type is incompatible with React$Element\n. keyword-spacing: Expected space(s) after \"if\".\n. null This type is incompatible with React$Element\n. undefined This type is incompatible with React$Element\n. undefined This type is incompatible with React$Element\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. property frame Property cannot be accessed on possibly undefined value undefined\n. property count Property cannot be accessed on possibly undefined value undefined\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. ReactComponentTreeDevtool Required module not found\n. ReactComponentTreeDevtool Required module not found\n. no-unused-vars: 'easeOutQuad' is defined but never used\n. no-unused-vars: 'easeOutSine' is defined but never used\n. property _cacheDuration Property not found in XHRExampleCaching\n. class property renderCacheSelector Missing annotation\n. property _cacheDuration Property not found in XHRExampleCaching\n. property _cacheDuration Property not found in XHRExampleCaching\n. property _cacheDuration Property not found in XHRExampleCaching\n. property _cacheDuration Property not found in XHRExampleCaching\n. property _cacheDuration Property not found in XHRExampleCaching\n. parameter cachePolicy Missing annotation\n. no-extra-semi: Unnecessary semicolon.\n. property _cacheDuration Property not found in XHRExampleCaching\n. semi: Missing semicolon.\n. quotes: Strings must use singlequote.\n. semi: Missing semicolon.\n. no-script-url: Script URL is a form of eval.\n. semi: Missing semicolon.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. property applyAnimation Property not found in object type\n. NavigationAnimationSetter type referenced from value position type NavigationAnimationSetter\n. property httpUrl Property not found in object type\n. property fetch Property not found in object type\n. property httpUrl of object literal Property not found in object type\n. property fetch of object literal Property not found in object type\n. property fetch Property not found in object type\n. property fetch of object literal Property not found in object type\n. property httpUrl Property not found in object type\n. property _notificationId Property not found in PushNotificationIOS\n. property _isRemote Property not found in PushNotificationIOS\n. property fontWeight Property not found in object literal\n. quotes: Strings must use singlequote.\n. no-unused-vars: 'curStyle' is defined but never used\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. semi: Missing semicolon.\n. space-infix-ops: Infix operators must be spaced.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. property fontWeight Property not found in object literal\n. no-unused-vars: 'curStyle' is defined but never used\n. no-unused-vars: 'curStyle' is defined but never used\n. property fontWeight Property not found in object literal\n. quotes: Strings must use singlequote.\n. space-infix-ops: Infix operators must be spaced.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. property fontSize Property not found in object literal\n. jsx-quotes: Unexpected usage of singlequote.\n. property propTypes Property not found in module react\n. property cardStyle Property not found in object type\n. property View Property not found in module react\n. keyword-spacing: Expected space(s) after \"if\".\n. no-trailing-spaces: Trailing spaces not allowed.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. parameter file Missing annotation\n. parameter lineNumber Missing annotation\n. parameter lineNumber Missing annotation\n. parameter file Missing annotation\n. number This type is incompatible with string\n. number This type is incompatible with string\n. keyword-spacing: Expected space(s) after \"if\".\n. function call Function cannot be called on possibly null value null\n. function call Function cannot be called on possibly undefined value undefined\n. call of method onComplete Function cannot be called on possibly null value null\n. call of method onComplete Function cannot be called on possibly undefined value undefined\n. semi: Missing semicolon.\n. identifier requestIdleCallback Could not resolve name\n. Potentially unsafe get/set usage Getters and setters with side effects are potentially unsafe and disabled by default. You may opt-in to using them anyway by putting unsafe.enable_getters_and_setters=true into the [options] section of your .flowconfig.\n. semi: Missing semicolon.\n. property _showResult Property not found in ShareMessageExample\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. radix: Missing radix parameter.\n. radix: Missing radix parameter.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. property current Property not found in React component\n. property current Property not found in React component\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. number This type is incompatible with string\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. number This type is incompatible with string\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. dot-notation: [\"aps\"] is better written in dot notation.\n. dot-notation: [\"aps\"] is better written in dot notation.\n. no-unused-vars: 'U' is defined but never used\n. no-unused-vars: 'U' is defined but never used\n. no-unused-vars: 'locationName' is defined but never used\n. react/no-string-refs: Using this.refs is deprecated.\n. property end Property cannot be accessed on possibly undefined value undefined\n. react/no-string-refs: Using this.refs is deprecated.\n. property start Property cannot be accessed on possibly undefined value undefined\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. number This type is incompatible with string\n. no-unused-vars: 'Platform' is defined but never used\n. no-unused-vars: 'Platform' is defined but never used\n. AnimatedValue This type is incompatible with number\n. AnimatedValue This type is incompatible with number\n. object literal This type is incompatible with string\n. array literal This type is incompatible with string\n. array literal This type is incompatible with string\n. property action Property not found in object literal\n. object literal This type is incompatible with string\n. array literal This type is incompatible with string\n. array literal This type is incompatible with string\n. property action Property not found in object literal\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. AnimatedValue This type is incompatible with number\n. AnimatedValue This type is incompatible with number\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. jsx-quotes: Unexpected usage of singlequote.\n. no-extra-semi: Unnecessary semicolon.\n. no-unused-vars: 'UIExplorerButton' is defined but never used\n. parameter key Missing annotation\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. react/lib/ReactComponentTreeHook Required module not found\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. undefined This type is incompatible with empty array literal\n. undefined This type is incompatible with number\n. undefined This type is incompatible with number\n. undefined This type is incompatible with number\n. undefined This type is incompatible with number\n. keyword-spacing: Expected space(s) after \"if\".\n. keyword-spacing: Expected space(s) after \"if\".\n. eqeqeq: Expected '===' and instead saw '=='.\n. space-infix-ops: Infix operators must be spaced.\n. keyword-spacing: Expected space(s) after \"if\".\n. keyword-spacing: Expected space(s) after \"if\".\n. eqeqeq: Expected '===' and instead saw '=='.\n. space-infix-ops: Infix operators must be spaced.\n. eqeqeq: Expected '===' and instead saw '=='.\n. space-infix-ops: Infix operators must be spaced.\n. eqeqeq: Expected '===' and instead saw '=='.\n. space-infix-ops: Infix operators must be spaced.\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. property useNativeDriver Property cannot be accessed on any member of intersection type intersection\n. undefined This type is incompatible with number\n. semi: Missing semicolon.\n. space-infix-ops: Infix operators must be spaced.\n. eqeqeq: Expected '===' and instead saw '=='.\n. semi: Missing semicolon.\n. space-infix-ops: Infix operators must be spaced.\n. eqeqeq: Expected '===' and instead saw '=='.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. semi: Missing semicolon.\n. curly: Expected { after 'if' condition.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-undef: 'DialogManagerAndroid' is not defined.\n. identifier DialogManagerAndroid Could not resolve name\n. no-undef: 'DialogManagerAndroid' is not defined.\n. no-undef: 'DialogManagerAndroid' is not defined.\n. identifier DialogManagerAndroid Could not resolve name\n. no-undef: 'DialogManagerAndroid' is not defined.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. identifier __APPLETV__ Could not resolve name\n. consistent-this: Unexpected alias 'c' for 'this'.\n. no-return-assign: Arrow function should not return assignment.\n. no-undef: 'APPLETV' is not defined.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-undef: 'APPLETV' is not defined.\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-unused-vars: 'APPLETV' is defined but never used\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. quotes: Strings must use singlequote.\n. no-trailing-spaces: Trailing spaces not allowed.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. quotes: Strings must use singlequote.\n. no-unused-vars: 'ReactNative' is defined but never used\n. no-unused-vars: 'APPLETV' is defined but never used\n. no-trailing-spaces: Trailing spaces not allowed.\n. consistent-this: Unexpected alias 'c' for 'this'.\n. quotes: Strings must use singlequote.\n. semi: Missing semicolon.\n. FetchResult type referenced from value position type FetchResult\n. property FetchResult Property not found in statics of PushNotificationIOS\n. FetchResult type referenced from value position type FetchResult\n. property FetchResult Property not found in statics of PushNotificationIOS\n. property responseHeaders Property not found in XHRExampleFetch\n. property responseHeaders Property not found in XHRExampleFetch\n. property responseHeaders Property not found in XHRExampleFetch\n. property responseHeaders Property not found in XHRExampleFetch\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. eqeqeq: Expected '!==' and instead saw '!='.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. null This type is incompatible with object type\n. null This type is incompatible with object type\n. object literal This type is incompatible with undefined. Did you forget to declare type parameter State of property Component?\n. property messagesReceivedFromWebView Property cannot be accessed on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. property onMessage Property not found in MessagingTest\n. property postMessage Property not found in MessagingTest\n. assignment of computed property/element Indexable signature not found in MessagingTest\n. property onMessage Property not found in MessagingTest\n. assignment of computed property/element Indexable signature not found in MessagingTest\n. object literal This type is incompatible with undefined. Did you forget to declare type parameter State of property Component?\n. property messagesReceivedFromWebView Property cannot be accessed on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?\n. property onMessage Property not found in MessagingTest\n. property postMessage Property not found in MessagingTest\n. assignment of computed property/element Indexable signature not found in MessagingTest\n. property onMessage Property not found in MessagingTest\n. assignment of computed property/element Indexable signature not found in MessagingTest\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. call of method postMessage Method cannot be called on possibly null value null\n. call of method postMessage Method cannot be called on possibly null value null\n. curly: Expected { after 'if' condition.\n. curly: Expected { after 'if' condition.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. call of method setNativeProps Method cannot be called on property _root of unknown type\n. parameter nativeProps Missing annotation\n. property _root Property not found in React component\n. keyword-spacing: Expected space(s) after \"for\".\n. property unselectedItemTintColor Property not found in object type\n. property unselectedItemTintColor Property not found in object type\n. keyword-spacing: Expected space(s) after \"if\".\n. call of method onNavigateBack Function cannot be called on property onNavigateBack of unknown type\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-return-assign: Arrow function should not return assignment.\n. no-return-assign: Arrow function should not return assignment.\n. no-trailing-spaces: Trailing spaces not allowed.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. react/no-string-refs: Using this.refs is deprecated.\n. no-return-assign: Arrow function should not return assignment.\n. no-return-assign: Arrow function should not return assignment.\n. quotes: Strings must use singlequote.\n. keyword-spacing: Expected space(s) after \"if\".\n. space-infix-ops: Infix operators must be spaced.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-mixed-spaces-and-tabs: Mixed spaces and tabs.\n. property onValueChange Property not found in PickerComponentsExample\n. property onValueChange Property not found in PickerComponentsExample\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. keyword-spacing: Expected space(s) after \"if\".\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. keyword-spacing: Expected space(s) after \"if\".\n. keyword-spacing: Expected space(s) after \"if\".\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. keyword-spacing: Expected space(s) after \"if\".\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. keyword-spacing: Expected space(s) after \"if\".\n. consistent-this: Unexpected alias 'cmp' for 'this'.\n. keyword-spacing: Expected space(s) after \"if\".\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. semi: Missing semicolon.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. no-trailing-spaces: Trailing spaces not allowed.\n. object literal This type is incompatible with undefined. Did you forget to declare type parameter State of property Component?\n. no-undef: 'log' is not defined.. react/lib/NativeMethodsMixin Required module not found. react/lib/NativeMethodsMixin Required module not found. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. access of computed property/element Computed property/element cannot be accessed on possibly undefined value undefined. null This type is incompatible with the expected return type of string. access of computed property/element Computed property/element cannot be accessed on possibly null value null. no-trailing-spaces: Trailing spaces not allowed.. keyword-spacing: Expected space(s) after \"if\".. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. keyword-spacing: Expected space(s) after \"if\".. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. number This type is incompatible with the expected param type of Number. identifier State Could not resolve name. Number The operand of an arithmetic operation must be a number.. number This type is incompatible with the expected param type of Number. quotes: Strings must use singlequote.. semi: Missing semicolon.. semi: Missing semicolon.. keyword-spacing: Expected space(s) after \"if\".. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-undef: '$ArrayBufferView' is not defined.. no-undef: '$ArrayBufferView' is not defined.. no-undef: '$ArrayBufferView' is not defined.. space-infix-ops: Infix operators must be spaced.. eol-last: Newline required at end of file but not found.. space-infix-ops: Infix operators must be spaced.. space-infix-ops: Infix operators must be spaced.. null: Parsing error: Unexpected token\n1 | \n  2 | export type AsyncStorageBackend = {\n\n3 |   clear: function,\n    |          ^\n  4 |   getAllKeys: function,\n  5 |   multiGet: function,\n  6 |   multiSet: function,. semi: Missing semicolon.. semi: Missing semicolon.. access of computed property/element Computed property/element cannot be accessed on possibly undefined value undefined. call of method indexOf Method cannot be called on possibly undefined value undefined. array type This type is incompatible with the expected param type of object type. eol-last: Newline required at end of file but not found.. lastRow let referenced before declaration, or after skipped declaration let lastRow. eqeqeq: Expected '===' and instead saw '=='.. no-extra-semi: Unnecessary semicolon.. undefined This type is incompatible with the expected return type of object type. property finished Property not found in possibly undefined value undefined. undefined This type is incompatible with the expected param type of object type. null This type is incompatible with the expected param type of object type. call of method hasOwnProperty Method cannot be called on possibly null value null. call of method hasOwnProperty Method cannot be called on possibly undefined value undefined. property finished Property not found in possibly null value null. null This type is incompatible with the expected return type of object type. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. curly: Expected { after 'if' condition.. no-trailing-spaces: Trailing spaces not allowed.. property useNativeDriver Property cannot be accessed on any member of intersection type intersection. undefined This type is incompatible with the expected return type of boolean. property useNativeDriver Property cannot be accessed on any member of intersection type intersection. parameter data Missing annotation. keyword-spacing: Expected space(s) after \"if\".. keyword-spacing: Expected space(s) after \"if\".. no-trailing-spaces: Trailing spaces not allowed.. eqeqeq: Expected '===' and instead saw '=='.. property _listRef Property not found in FlatlistEventExample. parameter e Missing annotation. property _listRef Property not found in FlatlistEventExample. no-unused-vars: 'SeparatorComponent' is assigned a value but never used.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. Text This type is incompatible with React$Component. no-extra-semi: Unnecessary semicolon.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. react/jsx-no-undef: 'Text' is not defined.. object literal This type is incompatible with undefined. Did you forget to declare type parameter State of property Component?. property launchCount Property cannot be accessed on possibly undefined value undefined. Did you forget to declare type parameter State of property Component?. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-unused-vars: 'c' is assigned a value but never used.. no-unused-vars: 'c' is assigned a value but never used.. no-unused-vars: 'c' is assigned a value but never used.. no-unused-vars: 'c' is assigned a value but never used.. no-unused-vars: 'c' is assigned a value but never used.. no-unused-vars: 'c' is assigned a value but never used.. no-trailing-spaces: Trailing spaces not allowed.. property checkPropTypes Property not found in module react. property checkPropTypes Property not found in module react. semi: Missing semicolon.. no-unused-vars: 'AppRegistry' is defined but never used.. no-unused-vars: 'Text' is defined but never used.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. identifier args Could not resolve name. Error suppressing comment Unused suppression. Error suppressing comment Unused suppression. no-undef: 'Element' is not defined.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. null: Parsing error: Unexpected token, expected ;\n\n49 |     render: function() {\n  50 |       class FadeInView extends React.Component {\n\n51 |         _fadeAnim: AnimatedValue = new Animated.Value(0), // opacity 0\n     |                                                         ^\n  52 | \n  53 |         componentDidMount() {\n  54 |           Animated.timing(     // Uses easing functions. no-undef: 'AnimatedValue' is not defined.. identifier AnimatedValue Could not resolve name. identifier int Could not resolve name. eqeqeq: Expected '===' and instead saw '=='.. space-infix-ops: Infix operators must be spaced.. no-undef: 'int' is not defined.. space-infix-ops: Infix operators must be spaced.. no-trailing-spaces: Trailing spaces not allowed.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-unused-vars: 'component' is assigned a value but never used.. semi: Missing semicolon.. parameter props Missing annotation. parameter nextProps Missing annotation. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. ../../Utilities/Platform Required module not found. ../react-native/React Required module not found. ../Utilities/Platform Required module not found. ../react-native/React Required module not found. ../Utilities/Platform Required module not found. ./Platform Required module not found. ./Platform Required module not found. ./HMRLoadingView Required module not found. ../../react-native/React Required module not found. ./PickerIOS Required module not found. ./PickerAndroid Required module not found. ./Platform Required module not found. ./Platform Required module not found. ./HMRLoadingView Required module not found. ../../react-native/React Required module not found. ./PickerIOS Required module not found. ./PickerAndroid Required module not found. ../../react-native/React Required module not found. ../../react-native/React Required module not found. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. no-unused-vars: 'ArrayBufferView' is defined but never used.. metro-bundler/build/lib/Terminal Required module not found. metro-bundler/build/lib/Terminal Required module not found. keyword-spacing: Expected space(s) after \"if\".. identifier Platform Could not resolve name. keyword-spacing: Expected space(s) after \"if\".. no-undef: 'Platform' is not defined.. no-undef: 'Platform' is not defined.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. no-unused-vars: 'View' is assigned a value but never used.. no-unused-vars: 'View' is assigned a value but never used.. no-return-assign: Arrow function should not return assignment.. no-return-assign: Arrow function should not return assignment.. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. no-trailing-spaces: Trailing spaces not allowed.. string Expected string literal languagesDidChange, got change instead string literal languagesDidChange. no-trailing-spaces: Trailing spaces not allowed.. string Expected string literal languagesDidChange, got change instead string literal languagesDidChange. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. no-trailing-spaces: Trailing spaces not allowed.. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. no-trailing-spaces: Trailing spaces not allowed.. string literal change This === check always fails because change is not the same string as languagesDidChange string literal languagesDidChange. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. parameter argv Missing annotation. parameter argv Missing annotation. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. curly: Expected { after 'if' condition.. semi: Missing semicolon.. Unexpected token .. null: Parsing error: this is a reserved word\n\n958 |       timestamp,\n  959 |       velocity,\n\n960 |       this._scrollMetrics.visibleLength,\n      |       ^\n  961 |     };\n  962 |     if (visibleLength) {\n  963 |         this._scrollMetrics.visibleLength = visibleLength;. null: Parsing error: Unexpected token, expected ;\n\n189 | \n  190 | Geolocation.IOS_AUTHORIZATIONS = {};\n\n191 | Geolocation.IOS_AUTHORIZATIONS.WHEN_IN_USE: \"locationAuthorizationWhenInUse\";\n      |                                           ^\n  192 | Geolocation.IOS_AUTHORIZATIONS.ALWAYS: \"locationAuthorizationAlways\";\n  193 | \n  194 | module.exports = Geolocation;. Unexpected token :. quotes: Strings must use singlequote.. property IOS_AUTHORIZATIONS Property not found in object literal. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. null: Parsing error: Unexpected token, expected ;\n\n188 | };\n  189 | \n\n190 | Geolocation.IOS_AUTHORIZATIONS: Object = {};\n      |                               ^\n  191 | Geolocation.IOS_AUTHORIZATIONS.WHEN_IN_USE = 'locationAuthorizationWhenInUse';\n  192 | Geolocation.IOS_AUTHORIZATIONS.ALWAYS = 'locationAuthorizationAlways';\n  193 |. Unexpected token :. semi: Missing semicolon.. property _title Property not found in PushNotificationIOS. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. use-isnan: Use the isNaN function to compare with NaN.. semi: Missing semicolon.. curly: Expected { after 'if' condition.. eqeqeq: Expected '!==' and instead saw '!='.. space-infix-ops: Infix operators must be spaced.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. property origin Property not found in object type. react/no-string-refs: Using this.refs is deprecated.. react/no-string-refs: Using this.refs is deprecated.. null: Parsing error: Expected corresponding JSX closing tag for \n\n63 |             {this.state.simpleText}\n  64 |           \n\n65 |         \n     |         ^\n  66 |         \n  67 |           . semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. prettier/prettier: Replace \u00b7animated?:\u00b7?boolean,\u00b7cellKey:\u00b7string\u00b7 with animated?:\u00b7?boolean,\u00b7cellKey:\u00b7string. prettier/prettier: Replace ?boolean,cellKey: with \u00b7?boolean,\u00b7cellKey:\u00b7. semi: Missing semicolon.. prettier/prettier: Insert ;. semi: Missing semicolon.. semi: Missing semicolon.. eqeqeq: Expected '===' and instead saw '=='.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. string This type is incompatible with object type. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7id:\u00b7String(ii)\u00b7 with id:\u00b7String(ii). prettier/prettier: Replace })); with \u00b7\u00b7}),. prettier/prettier: Replace \u00b7key:\u00b7'item_0'\u00b7 with key:\u00b7'item_0'. no-shadow: 'data' is already declared in the upper scope.. prettier/prettier: Replace \u00b7press:\u00b7true\u00b7 with press:\u00b7true. prettier/prettier: Replace \u00b7item\u00b7 with item. prettier/prettier: Replace \u00b7y:\u00b70,\u00b7x:\u00b70\u00b7 with y:\u00b70,\u00b7x:\u00b70. prettier/prettier: Replace \u00b7key:\u00b7'i1'\u00b7},\u00b7{\u00b7key:\u00b7'i2'\u00b7},\u00b7{\u00b7key:\u00b7'i3'\u00b7 with key:\u00b7'i1'},\u00b7{key:\u00b7'i2'},\u00b7{key:\u00b7'i3'. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7key:\u00b7'hello'\u00b7 with key:\u00b7'hello'. prettier/prettier: Replace \u00b7right:\u00b70,\u00b7top:\u00b70,\u00b7left:\u00b70,\u00b7bottom:\u00b70\u00b7} with right:\u00b70,\u00b7top:\u00b70,\u00b7left:\u00b70,\u00b7bottom:\u00b70},. prettier/prettier: Replace \u00b7item\u00b7 with item. no-shadow: 'data' is already declared in the upper scope.. prettier/prettier: Replace \u00b7item\u00b7 with item. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7<VirtualizedList\u00b7{...props}\u00b7data={data}\u00b7/>\u23ce\u00b7\u00b7\u00b7\u00b7 with <VirtualizedList\u00b7{...props}\u00b7data={data}\u00b7/>. prettier/prettier: Replace \u00b7width:\u00b7300,\u00b7height:\u00b7data.length\u00b7*\u00b7ITEM_HEIGHT\u00b7 with width:\u00b7300,\u00b7height:\u00b7data.length\u00b7*\u00b7ITEM_HEIGHT. no-shadow: 'data' is already declared in the upper scope.. prettier/prettier: Replace \u00b7key:\u00b7'i0'\u00b7},\u00b7{\u00b7key:\u00b7'i1'\u00b7},\u00b7{\u00b7key:\u00b7'i2'\u00b7 with key:\u00b7'i0'},\u00b7{key:\u00b7'i1'},\u00b7{key:\u00b7'i2'. prettier/prettier: Replace \u00b7item\u00b7 with item. prettier/prettier: Replace \u00b7index\u00b7})\u00b7=>\u00b7({\u00b7length:\u00b750,\u00b7offset:\u00b7index\u00b7*\u00b750\u00b7 with index})\u00b7=>\u00b7({length:\u00b750,\u00b7offset:\u00b7index\u00b7*\u00b750. prettier/prettier: Replace }) with \u00b7\u00b7}),\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7key:\u00b7outerInfo.item.key\u00b7+\u00b7':inner0'\u00b7 with key:\u00b7outerInfo.item.key\u00b7+\u00b7':inner0'. prettier/prettier: Replace \u00b7item\u00b7 with item. semi: Missing semicolon.. unreachable code. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace nextProps.viewabilityConfigCallbackPairs,\u00b7this.props.viewabilityConfigCallbackPairs with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7nextProps.viewabilityConfigCallbackPairs,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this.props.viewabilityConfigCallbackPairs,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7. prettier/prettier: Replace nextProps.onViewableItemsChanged,\u00b7this.props.onViewableItemsChanged with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7nextProps.onViewableItemsChanged,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this.props.onViewableItemsChanged,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. prettier/prettier: Insert ,. curly: Expected { after 'if' condition.. curly: Expected { after 'if' condition.. curly: Expected { after 'if' condition.. curly: Expected { after 'if' condition.. react/jsx-no-undef: 'Animated' is not defined.. semi: Missing semicolon.. curly: Expected { after 'if' condition.. semi: Missing semicolon.. curly: Expected { after 'if' condition.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. keyword-spacing: Expected space(s) after \"if\".. semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. eol-last: Newline required at end of file but not found.. semi: Missing semicolon.. semi: Missing semicolon.. eol-last: Newline required at end of file but not found.. dot-notation: [\"firstProject\"] is better written in dot notation.. dot-notation: [\"targets\"] is better written in dot notation.. dot-notation: [\"targets\"] is better written in dot notation.. semi: Missing semicolon.. semi: Missing semicolon.. curly: Expected { after 'if' condition.. curly: Expected { after 'if' condition.. property Component Too few type arguments. Expected at least 1 See type parameters of definition here. property Component Too few type arguments. Expected at least 1 See type parameters of definition here. semi: Missing semicolon.. no-undef: 'disableYellowBox' is not defined.. no-undef: 'disableYellowBox' is not defined.. no-const-assign: 'DISABLE_YELLOW_BOX' is constant.. quotes: Strings must use singlequote.. semi: Missing semicolon.. quotes: Strings must use singlequote.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. semi: Missing semicolon.. semi: Missing semicolon.. no-control-regex: Unexpected control character(s) in regular expression: \\x09.. semi: Missing semicolon.. no-control-regex: Unexpected control character(s) in regular expression: \\x09.. semi: Missing semicolon.. no-control-regex: Unexpected control character(s) in regular expression: \\x09.. quotes: Strings must use singlequote.. no-control-regex: Unexpected control character(s) in regular expression: \\x09.. quotes: Strings must use singlequote.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. no-control-regex: Unexpected control character(s) in regular expression: \\x0d, \\x0a.. no-control-regex: Unexpected control character(s) in regular expression: \\x0d, \\x0a.. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. eslint-comments/no-unused-disable: 'no-control-regex' rule is disabled but never reported.. eslint-comments/no-unused-disable: 'no-control-regex' rule is disabled but never reported.. eslint-comments/no-unused-disable: 'no-control-regex' rule is disabled but never reported.. eslint-comments/no-unused-disable: 'no-control-regex' rule is disabled but never reported.. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Replace \"\\u0365\\u0365\\u0302\\u0363\\u0310\\u0301\\u0301\\u035E\\u035C\\u0356\\u032C\" with '\\u0365\\u0365\\u0302\\u0363\\u0310\\u0301\\u0301\\u035E\\u035C\\u0356\\u032C'. prettier/prettier: Replace \"Z\\u0351\\u036B\\u0343\\u036A\\u0302\\u036B\\u033D\\u034F\\u0334\\u0319\\u0324\" with 'Z\\u0351\\u036B\\u0343\\u036A\\u0302\\u036B\\u033D\\u034F\\u0334\\u0319\\u0324'. prettier/prettier: Replace \"\\u0365\\u0365\\u0302\\u0363\\u0310\\u0301\\u0301\\u035E\\u035C\\u0356\\u032C\" with '\\u0365\\u0365\\u0302\\u0363\\u0310\\u0301\\u0301\\u035E\\u035C\\u0356\\u032C'. prettier/prettier: Replace \"Z\\u0351\\u036B\\u0343\\u036A\\u0302\\u036B\\u033D\\u034F\\u0334\\u0319\\u0324\" with 'Z\\u0351\\u036B\\u0343\\u036A\\u0302\\u036B\\u033D\\u034F\\u0334\\u0319\\u0324'. semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. prettier/prettier: Insert ;. semi: Missing semicolon.. metro/src/blacklist Required module not found. no-shadow: 'host' is already declared in the upper scope.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Insert ,. prettier/prettier: Replace flatten(plugins.map(p\u00b7=>\u00b7p.haste.providesModuleNodeModules)) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flatten(plugins.map(p\u00b7=>\u00b7p.haste.providesModuleNodeModules)),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { borderWidth: 5,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 20,\n  borderBottomRightRadius: 30,\n  borderBottomLeftRadius: 40,\n  borderColor: 'red' }. Cannot call NativeEventEmitter with 'StatusBarManager' bound to nativeModule because string [1] is incompatible with NativeModule [2].. react-native/no-inline-styles: Inline style: { borderWidth: 5,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 20,\n  borderBottomRightRadius: 30,\n  borderBottomLeftRadius: 40,\n  borderColor: 'red' }. null: Parsing error: Unexpected token\n\n488 |       shouldStart = shouldStart && passesWhitelist;\n  489 |       if (!passesWhitelist) {\n\n490 |         Linking.openURL(url).then(() => (/ignored/)).catch(() => (/ignored/));\n      |                                                     ^\n  491 |       }\n  492 |       if (this.props.onShouldStartLoadWithRequest) {\n  493 |         shouldStart =. prettier/prettier: Replace \u00b7config.resolver.providesModuleNodeModules\u00b7|| with \u23ce\u00b7\u00b7\u00b7\u00b7config.resolver.providesModuleNodeModules\u00b7||\u23ce\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7config.resolver.providesModuleNodeModules\u00b7|| with \u23ce\u00b7\u00b7\u00b7\u00b7config.resolver.providesModuleNodeModules\u00b7||\u23ce\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7. no-unused-vars: 'PlatformViewPropTypes' is defined but never used.. \n",
    "udnisap": "sorry it should have been git describe --abbrev=0 --tags\n. ",
    "sospartan": "It's indentation. I'll recover these lines and more carefully for changes. Thanks.\n. ",
    "migeorge": "@ide, it should be fixed now\n. ",
    "morenoh149": "bumping this\n. bumping this\n. ",
    "qbig": "you mean \"(evt, gestureState) => {}\" --> \"(event, gestureState) => {}\" ? I left as it is as the code example below is using 'evt'. Or should I change all of those to 'event' as well ? @satya164 \n. ",
    "Purii": "Seems to work anyway. Testet on the iOS simulator.\n. ",
    "jaysoo": "In case the method is missing (API < 17). As far as I can tell Rn supports 15+?\n. OK, I can add a log. There isn't much you can do with reflection exceptions. \nShould be able to return wrapped invocation exception. \nIs there a best practice for rethrow in RN? \n. @astreet \nSince UIManagerModuleConstants is using DisplayMetricsHolder.getDisplayMetrics() to set window width and height, we need to hold onto either the Display instance, or have a information holder object for the real width and height that accounts for API level 16 and 17+.\ni.e. https://github.com/facebook/react-native/blob/7377fdc/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstants.java#L115-L117\nOption 1\nWe extend DisplayMetricsHolder with three methods:\n1. static void setRealDisplayDimension(int realWidth, int realHeight)\n2. static int getRealDisplayWidth()\n3. static int getRealDisplayHeight()\nOption 2\nCreate a new information holder class that holds the real width and height. We'll set these values from UIManagerModule, just like we are doing for DisplayMetrics.\n. ",
    "sunnylqm": "That would be great!\n. Is this docblocks another private module? \n. ES6 has no auto-binds http://facebook.github.io/react/docs/reusable-components.html#no-autobinding\n. ES6 has no auto-binds http://facebook.github.io/react/docs/reusable-components.html#no-autobinding\n. Or 'formerly named' ? I am not a native speacker...\n. Or 'formerly named' ? I am not a native speacker...\n. @mkonicek \nThe point here I guess is to check whether params is an Array (by checking whether length exists).\nIf params is 100% array, then this length check can be simplily removed. If length is 0, map function will return an empty array, which has no problem in JSX.. @mkonicek \nThe point here I guess is to check whether params is an Array (by checking whether length exists).\nIf params is 100% array, then this length check can be simplily removed. If length is 0, map function will return an empty array, which has no problem in JSX.. But if params can be types other than array, then this.props.params.length !== 0 is unsafe.. But if params can be types other than array, then this.props.params.length !== 0 is unsafe.. ",
    "Kudo": "Should I add type Event = Object; to fix the flow lint warning?\nIt seems there are some Event usage in original ViewPagerAndroid  such as _onPageScroll and _onPageSelected.\n. Should I add type Event = Object; to fix the flow lint warning?\nIt seems there are some Event usage in original ViewPagerAndroid  such as _onPageScroll and _onPageSelected.\n. Well, the main purpose of this PR is to use clang build, so here to drop gnustl_shared and gcc.. Well, the main purpose of this PR is to use clang build, so here to drop gnustl_shared and gcc.. @gengjiawen Thank you. Removed the unused AndroidManifest.xml.. @gengjiawen Thank you. Removed the unused AndroidManifest.xml.. ",
    "2upmedia": "^ That's why travis is failing\n. ",
    "klvs": "My mistake here. It was mistakenly left from testing. I'll fix it if it's being considered for a merge, but I'm about to push the native implementation. Sorry for the sloppy code. \n. @mkonicek I don't think so. It's set externally so it needs to be public.\nE.g \njavascript\n    var request = new XMLHttpRequest();\n    request.timeout = 3100;\n    ...\n. It is indeed set to zero. Just tested to be sure.\n. It is indeed set to zero. Just tested to be sure.\n. ",
    "mihirsoni": "@ide  I have updated the PR.\nThanks for the review.\n. ",
    "Charca": "It was just to be consistent with the iOS version.\n. Done. Thanks for the review.\n. ",
    "odino": "Won't it create confusion? No one is really using that prop as its been\nadded a few commits back -- though I agree it wont hurt :)\nOn Jan 5, 2016 7:31 PM, \"Andy Street\" notifications@github.com wrote:\n\nIn breaking-changes.md\nhttps://github.com/facebook/react-native/pull/5081#discussion_r48856039:\n\n@@ -2,6 +2,8 @@\n## 0.17\n+- javaScriptEnabledAndroid of the WebView component has been renamed to javaScriptEnabled\n\nAdd that domStorageEnabledAndroid was also renamed\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/5081/files#r48856039.\n. Won't it create confusion? No one is really using that prop as its been\nadded a few commits back -- though I agree it wont hurt :)\nOn Jan 5, 2016 7:31 PM, \"Andy Street\" notifications@github.com wrote:\nIn breaking-changes.md\nhttps://github.com/facebook/react-native/pull/5081#discussion_r48856039:\n\n@@ -2,6 +2,8 @@\n## 0.17\n+- javaScriptEnabledAndroid of the WebView component has been renamed to javaScriptEnabled\n\nAdd that domStorageEnabledAndroid was also renamed\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/5081/files#r48856039.\n. nope, sorry -- copypasta :)\n. nope, sorry -- copypasta :)\n. the hell? :)\n. \n",
    "skv-headless": "I need reverse handlers execution (last registered - first executed). As I know Set doesn't guarantee order.\n. I need reverse handlers execution (last registered - first executed). As I know Set doesn't guarantee order.\n. What default value should I set? In your implementation is 'uninitialized' https://gist.github.com/mkonicek/039f35748c0a073dd1b5#file-appstatemodule-java-L27 but in AppStateIOS said that it can be null \n. I took it from ios https://github.com/facebook/react-native/blob/master/React/Modules/RCTAppState.m#L88. For now AppState and AppStateIOS are working with same obj-c implementation.\n. 1) Could you please explain We can already see it not working properly what do you mean by it is not working?\n2) It seems that it works same way that you explained.\n. according to blame @vjeux should know\n. - remove catch\n- Check for ios. Probably doesn't work.\n. I use callback not to touch ios native code. It is internal api, in future we will be able to change it to promises.\n. done\n. sorry didn't understand you :disappointed: \n. it is not that easy to make vibration duration in ios. I would rather make separate pr for that.\n. @nicklockwood http://stackoverflow.com/a/13047464/1410905 if it is good solution I can make ios vibration duration here.\n. done\n. what is nit?\n. what is nit?\n. http://developer.android.com/intl/ru/reference/android/os/Vibrator.html#vibrate(long[], int)\nrepeat the index into pattern at which to repeat, or -1 if you don't want to repeat.\ntrue | false is easier api but we will lose ability to repeat since exact index.\n. http://developer.android.com/intl/ru/reference/android/os/Vibrator.html#vibrate(long[], int)\nrepeat the index into pattern at which to repeat, or -1 if you don't want to repeat.\ntrue | false is easier api but we will lose ability to repeat since exact index.\n. sorry. Not sure how to do it\n. sorry. Not sure how to do it\n. To show that this patch is working.\n. To show that this patch is working.\n. I'm sorry I don't understand that note.\n. I'm sorry I don't understand that note.\n. I did this condition because I'm not sure how to call (mBorderStyle == null || mBorderStyle == BorderStyle.SOLID) this condition\n. I did this condition because I'm not sure how to call (mBorderStyle == null || mBorderStyle == BorderStyle.SOLID) this condition\n. yeah you are right. I'll try to implement.\nNo it doesn't throw a redbox only yellowbox.\n. yeah you are right. I'll try to implement.\nNo it doesn't throw a redbox only yellowbox.\n. Could you please explain how can I know that render method happens at fixed number of frames? For me search for method render makes more sense. \n. Could you please explain how can I know that render method happens at fixed number of frames? For me search for method render makes more sense. \n. Basically I tried to show warnings for properties checking. For that case render method is a right hint. Now I'm looking for other warnings. Not sure how to deal with it yet.\n. Basically I tried to show warnings for properties checking. For that case render method is a right hint. Now I'm looking for other warnings. Not sure how to deal with it yet.\n. I have an awesome idea. We should show user line of code. For react-native apps it is easy - everything not inside  node_modules. But for examples https://github.com/facebook/react-native/tree/master/Examples it is not so easy because react-native not under node_modules folder. Is there any way to get app root directory?\n. I have an awesome idea. We should show user line of code. For react-native apps it is easy - everything not inside  node_modules. But for examples https://github.com/facebook/react-native/tree/master/Examples it is not so easy because react-native not under node_modules folder. Is there any way to get app root directory?\n. like in tests https://github.com/facebook/react-native/blob/master/Libraries/JavaScriptAppEngine/Initialization/tests/parseErrorStack-test.js#L34\n. fixed. local eslint doesn't show this warning\n. fixed\n. fixed\n. fixed\n. fixed\n. fixed. fixed. fixed. fixed. ",
    "janicduplessis": "@satya164 I just checked other files for 'import type' and it is always right under the requires.\n. I made it relative so it works when running the site locally but I agree that being able to use it from the source is more useful. I'll change it.\n. Should we add this to .eslintrc globals?\n. Should we add this to .eslintrc globals?\n. @satya164 I went for an exception because I think changing the StatusBar when not attached to an activity is a programming mistake so it should fail fast. But now that unhandled promise rejections show a warning this accomplish the same thing without crashing in production so I agree this is a good change.\n. @satya164 I went for an exception because I think changing the StatusBar when not attached to an activity is a programming mistake so it should fail fast. But now that unhandled promise rejections show a warning this accomplish the same thing without crashing in production so I agree this is a good change.\n. Should we get rid of the GLOBAL global variable and just use the node standard global everywhere? Except for this file it is used in 1 or 2 other places in the codebase.\n. global-strict was replaced with strict in eslint 1.0 so it was causing some lint warnings.\n. global-strict was replaced with strict in eslint 1.0 so it was causing some lint warnings.\n. Ok let's leave it like this.\n. Ok let's leave it like this.\n. @davidaurelio Should I add something like // TODO: Remove document polyfill now that chrome debugging is in a web worker?\n. @davidaurelio Should I add something like // TODO: Remove document polyfill now that chrome debugging is in a web worker?\n. I added a parameter to configure the descriptor and used it to make navigator enumerable/writable/configurable. For the Number polyfill the properties are all not enumerable/writable/configurable so that is fine.\n. I added a parameter to configure the descriptor and used it to make navigator enumerable/writable/configurable. For the Number polyfill the properties are all not enumerable/writable/configurable so that is fine.\n. I don't think adding a third prop that calls loadUrl is a good idea, there's actually to TODO comment in setUrl to do something about setUrl and setHtml. It could be a good time to fix that.\nWe could do something like a source prop to the native component that takes an object like \n{\n  html: string,\n  url: string,\n  headers: Map<string, string>,\n}\nand then if html is defined, use it, else use url and if headers are defined, add them. That way changing between html, url and url with headers won't the make webview load the wrong thing because of the order props were set.\nEdit: Just noticed something similar was already mentioned in the original PR :)\n. I don't think adding a third prop that calls loadUrl is a good idea, there's actually to TODO comment in setUrl to do something about setUrl and setHtml. It could be a good time to fix that.\nWe could do something like a source prop to the native component that takes an object like \n{\n  html: string,\n  url: string,\n  headers: Map<string, string>,\n}\nand then if html is defined, use it, else use url and if headers are defined, add them. That way changing between html, url and url with headers won't the make webview load the wrong thing because of the order props were set.\nEdit: Just noticed something similar was already mentioned in the original PR :)\n. There doesn't seem to be anything in react to do this. Something like https://github.com/react-bootstrap/react-prop-types/blob/master/src/deprecated.js would be nice, it could eventually be integrated with the website too.\nIf you like I can submit a PR that implements that and change the places we deprecate props manually.\n. There doesn't seem to be anything in react to do this. Something like https://github.com/react-bootstrap/react-prop-types/blob/master/src/deprecated.js would be nice, it could eventually be integrated with the website too.\nIf you like I can submit a PR that implements that and change the places we deprecate props manually.\n. Should we add this to eslint globals or is there a way to import these types?\n. Should we add this to eslint globals or is there a way to import these types?\n. @vjeux Yes, I figured we could allow it for every file in examples instead of adding the rule per file since it was already used in a bunch of different files and it's pretty common to want to show a simple alert in examples.\n. @vjeux Yes, I figured we could allow it for every file in examples instead of adding the rule per file since it was already used in a bunch of different files and it's pretty common to want to show a simple alert in examples.\n. Fixed in #5585 \n. Fixed in #5585 \n. Yes it's there in the first of the 2 commits at the bottom.\n. Yes it's there in the first of the 2 commits at the bottom.\n. Double checked and this doesn't get called when __DEV__ is false :)\n. Double checked and this doesn't get called when __DEV__ is false :)\n. What about hiddenTransition since the prop is called hidden? It seems clearer to me.\n. Good point about log analyzers, this will make it keep the same format.\n. The reason is that [super beginRefreshing] must be called after the animation is over otherwise it didn't work properly. I'll add a comment to explain this.\n. @nicklockwood Maybe I could validate the indices in bridgeDidFinishTransaction so we can keep the warning if the indices passed are actually bad but not warn when they are out of sync when called from scrollViewDidScroll. I wanted to move the warning to js initially but the children array in js was pretty different that the reactSubviews in native (reactSubview seems to be flattened somehow).\n. I double checked and getWindow and getDecorView cannot return null.\n. Nit: This should probably be written LIKE_THE_OTHER_CONSTANTS and put at the top of the file.\n. Nit: Put the comment on a separate line.\n. Nit: Put a space after if keywords.\n. same here\n. Is is possible to use one of the constants to get the value from the array instead of using getDouble(2) so it is clear what this value represents?\n. We want != here so it works will null and undefined. It's the same check the is used in other places in this file.\n. I wasn't sure how to handle the error here but I don't think it can happen for users outside facebook since the gradle build already has a dependency on a recent version of the support lib that always has the method so I don't think logging something is needed.\ngetMethod cannot return null, it will throw if it cannot find the method or something else is wrong.\n. You can add a platform prop to the example object instead of checking the platform manually. See the '3D Touch' example above that is ios only.\n. Typo: Should be 'on the fly' instead of 'by the fly'\n. Oh yeah, typo :) there's another one a few lines below since I copy pasted that part.\nWill it work if I fix it now since you already shiped it?\n. This will act weird if there is no authorURL (like in the current blog post). Should probably either make it only text if there is no URL or make sure to always include an authorURL for each blog post.\n. unused variable\n. Here the transform used to output require('./..\\..\\...') which of course didn't work.\n. Here the generated URLs had '\\' in them instead of '/' and caused an error when downloading source maps.\n. I moved reseting the layout animation configuration to JS since it needs to be reset at the end of the JS frame and not only in the _layoutAndMount function. Not sure if there is a hook in native that gets called at the end of the JS frame it might be better there.\n. Should we support setting a different prop for create and delete or this seems fine?\n. Do propTypes work on Mixins? Also can you make sure the website picks this up and show the proper doc. If not you might have to copy the new propType in all the Touchable*\nYou can run it locally\ncd website\nnpm install\nnpm start\n. This can be simplified to this.props.soundEffectsEnabled !== false\n. Nit: this line is getting pretty long can you split it with one key/value pair per line?\n. Nit: space after function parenthesis (function() {) \n. I think it's better to duplicate them in that case.\n. Had to disable flow for this file, passing props to ActivityIndicator with {...this.props} caused a bunch of these errors. Not sure if there's a better way to fix this but the component is deprecated and there's pretty much no code anymore there.\n``\n 62:       <ActivityIndicator\n           ^ React elementActivityIndicator`\n 37:     animating: PropTypes.bool,\n                    ^^^^^^^^^^^^^^ undefined. This type is incompatible with. See: Libraries/Components/ActivityIndicator/ActivityIndicator.js:37\n 60:       animating: true,\n                      ^^^^ boolean. See: Libraries/Components/ActivityIndicator/ActivityIndicator.js:60\n``\n. I wasn't sure exactly what sizes we want to support here. For iOS there are only 2 sizes possible, the only way to get more is to use a scale transform. For Android there were a few more size presets and it's possible to get any size by passingwidthandheighttoRCTActivityIndicator`.\nI used the same sizes for Android that iOS uses which mean that some of the size presets from ProgressBarAndroid are different / missing. The advantage of this is that the spinners will have the same size on both platform and it is still possible make the spinners any size using a scale transform.\n. Can you prefix the method with an _ otherwise it will show up in the docs on the website.\n. Wow, I didn't know you could do that, looks a lot cleaner :)\n. You can use StatusBar.currentHeight to get the actual height from native.\n. Why are these prop types added here? It's already defined in the class as a static member.\n. nit: Keep the trailling comma here.\n. Let's merge this with containerBackgroundColor and remove the extra variables.\njs\nconst containerStyles = {\n  backgroundColor: this.props.transparent ? 'transparent' : 'white',\n  top: Platform.OS === 'android' && Platform.Version >= 19 ? STATUS_BAR_HEIGHT : 0,\n};\n. We need to run this code after the next render cycle since the user should call setState in the onRefresh function we cannot just call setNativeProps since there is no guarentee that the state will be updated synchronously.\nThis also makes sure that if the user doesn't update the state in the onRefresh function the component will still update and make the refresh control stop refreshing immediatly.\n. Exactly, I'll add better comments as it is not obvious why this is needed.\n. Tested this case and componentDidUpdate won't get called if the component gets unmounted during onRefresh so the ref can never be null.\n. @ide Updated the comments let me know if that makes it clearer.\n. Let's change this to Returns a promise that resolves with one ...\n. An object with the same methods as above ...\n. Yes, the problem is when setRefreshing gets called twice in the same bridge transaction the order the runnables get executed is bad, see the example in the PR desc, adding the field makes sure is uses the latest value.\n. Yes, the problem is when setRefreshing gets called twice in the same bridge transaction the order the runnables get executed is bad, see the example in the PR desc, adding the field makes sure is uses the latest value.\n. Yeah, that other runnable was added pretty recently and the same bug could happen to that value too.\nI'll have another look at this tonight see if I can make this cleaner and make it consistent.\n. Yeah, that other runnable was added pretty recently and the same bug could happen to that value too.\nI'll have another look at this tonight see if I can make this cleaner and make it consistent.\n. Nit { on new line.\n. same here\n. I don't think so, I added a LayoutAnimation example in UIExplorer directly and I think the animation example app is still part of UIExplorer anyway.\nI could also just enable/disable it when showing the LayoutAnimation example page but I don't know if it is really necessary.\n. The reason I had to make a separate method for delete is that I need to hook into the manageChildren method of NativeViewHierarchyManager while applyLayoutUpdate is called in updateLayout of NativeViewHierarchyManager which is not called for view deletions that don't change it's parent size.\n. ~~Used Arrays.asList().contains instead, went for the array loop initially for perf concerns but I verified and Arrays.asList is O(1) so it shouldn't be an issue especially since it is only ran when shouldAnimateLayout is true.~~\nEdit: Went back to using a arrayContains function because List only works with boxed Integers.\n. ~~Used Arrays.asList().contains instead, went for the array loop initially for perf concerns but I verified and Arrays.asList is O(1) so it shouldn't be an issue especially since it is only ran when shouldAnimateLayout is true.~~\nEdit: Went back to using a arrayContains function because List only works with boxed Integers.\n. Is there enough context to easily find what component caused this error? Maybe invariant stack trace is enough.\n. Is there enough context to easily find what component caused this error? Maybe invariant stack trace is enough.\n. Should probably add the platform check to make sure it doesn't do unnecessary stuff on ios.\n. Should probably add the platform check to make sure it doesn't do unnecessary stuff on ios.\n. Can you add trailing commas here and the line after.\n. Can you add trailing commas here and the line after.\n. Maybe we can share this block with swift/objc, the only difference is the name and it doesn't really matter.\n. Maybe we can share this block with swift/objc, the only difference is the name and it doesn't really matter.\n. Nit: indent\n. Nit: indent\n. I think it should be \"... RNHighScores as the moduleName ...\"\n. I think it should be \"... RNHighScores as the moduleName ...\"\n. Any reason why this line is there twice?\n. Any reason why this line is there twice?\n. Oh I see, the first id is different.\n. Oh I see, the first id is different.\n. I'm not 100% sure what these functions should return and what they are used for so maybe someone familiar with it could confirm that this is fine.\n. I wanted to do that initially but I need to do this before the code that add views.\nI could move up the block of code that drop views and start the layout animation before adding views.\nNow: remove -> add -> drop\nAfter: remove -> drop -> add\n. I wanted to do that initially but I need to do this before the code that add views.\nI could move up the block of code that drop views and start the layout animation before adding views.\nNow: remove -> add -> drop\nAfter: remove -> drop -> add\n. Good catch, I did a search for the protocol in xcode but it probably only searched in the current project. Does this still seems like the right approach if there are other loaders that depend on the decoded image cache?\n. Maybe passing an additional parameter to the completion block of RCTImageURLLoader so loaders can decide if the result will be cached or not.\n. Maybe passing an additional parameter to the completion block of RCTImageURLLoader so loaders can decide if the result will be cached or not.\n. Yes we have to skip the URLCache queue and also avoid caching the resulting image as this is already handled by UIImage imageNamed, we definetly don't want to cache then twice. Afaik memory should not be an issue since it only applies to local images and they are usually small icons or a few large images.\n. Yes we have to skip the URLCache queue and also avoid caching the resulting image as this is already handled by UIImage imageNamed, we definetly don't want to cache then twice. Afaik memory should not be an issue since it only applies to local images and they are usually small icons or a few large images.\n. We could always add a prop like async to the image component to control this behaviour but i think it should default to loading synchronously.\n. We could always add a prop like async to the image component to control this behaviour but i think it should default to loading synchronously.\n. Actually isn't this approach less memory intensive but potentially slower? We are loading images one by one on the main thread so there should only ever be one in memory at a given time. The url queue is useful for loading images asynchronously since there may be many image decoding happening at the same time so huge peaks of memory usage. The only thing that could happen is that many images are loaded on the url queue at the same time while images are loading on the main thread but since the main thread is loading only one image it should not be an issue.\n. Actually isn't this approach less memory intensive but potentially slower? We are loading images one by one on the main thread so there should only ever be one in memory at a given time. The url queue is useful for loading images asynchronously since there may be many image decoding happening at the same time so huge peaks of memory usage. The only thing that could happen is that many images are loaded on the url queue at the same time while images are loading on the main thread but since the main thread is loading only one image it should not be an issue.\n. Just don't call _dispatchHotspotUpdate if we dont have the pressInLocation, it's better not to call it then to call it with an arbitrary value.\n. Just don't call _dispatchHotspotUpdate if we dont have the pressInLocation, it's better not to call it then to call it with an arbitrary value.\n. I know the value we pass to dispatchHotspotUpdate needs to be the touch location relative to the frame of the button.\nWhat do values in pressInLocation and e.nativeEvent represent? I feel like we could simplify the calculation here.\n. I know the value we pass to dispatchHotspotUpdate needs to be the touch location relative to the frame of the button.\nWhat do values in pressInLocation and e.nativeEvent represent? I feel like we could simplify the calculation here.\n. This should be Platform.OS and not Platform.os.\n. Maybe remove this comment now.\n. There is already an iOS example for this prop we can just reuse it by removing the platform: ios.\n. I think we should just use maximumTrackTintColor and minimumTrackTintColor props since it does the same thing as those ios props, this will make it easier to use for cross platform apps.\n. Nit: Don't reassign here just move this directly in the prop declaration (<RCTSlider ... thumbImage={resolveAssetSource(...)}). Also have you tested that this still works properly on iOS?\n. Looking at some code that does something similar we also check for file:// (see this)\nThe code to load drawables should probably be moved to some helper class as it seems to be copy pasted in a couple of places. -_- Let's leave this for another PR though.\n. Typo: thumd -> thumb\n. Typo: setThumbFormUrl -> setThumbFromUrl\n. Nit: Missing space after , in a few places in this file.\n. Nit: remove these extra line breaks.\n. I adapted it from the setTimeout definition from flow, I think passing anything to cancelIdleCallback is fine it will just be a no-op.\n. Let's call it whenever there is some time left in the frame for now. We can iterate on it and improve the scheduling later. The new React reconciler will definitely be a great test for this and we'll be able to optimize for it.\n. @astreet Do we have any way to do this with our current JSC setup? We'll want to know if there are any pending calls from native synchronously.\n. Yeah I dont think we should implement this in this PR either, as for remote debugging we can probably just skip this check when debugging in chrome and sync calls are not possible as it is more of an optimisation than something that is required.\n. We are doing a bunch of dev validations that won't be executed anymore and that are not in the java code, maybe move the validations in another loop before returning on android.\n. Yea I think we should fix this before shipping this to avoid regressing on dev experience.\n. You can use the platform prop in the example object to avoid having to do this.\njs\n{\n  platform: 'android',\n  title: '',\n  ...\n}\n. Let's keep the scale example and just add one with a custom size that is android only.\n. I'll take another look at this to make sure it doesn't cause issues when re-rendering during an animation when there is no value listener. It did work properly when using one since we update the js value of the node.\n. I don't think so, I added it in the Android PR a few days ago.\n. Yea, good idea, I just checked and AOSP does use getChildDrawingOrder when dispatching a touch event to subviews.\n. @astreet Updated to do like AOSP, use Matrix#mapRect and take a sligtly larger rect when converting from a float rect to a int rect. This make sure that float -> int doesn't remove views that may still be visible.\nhttps://github.com/android/platform_frameworks_base/blob/4535e11fb7010f2b104d3f8b3954407b9f330e0f/core/java/android/view/ViewGroup.java#L5049\n. Actually I changed it to (floor, floor, ceil, ceil) that way it keeps the same behaviour for non decimal numbers and will still make sure to never clip views that end up with decimal bounds after transform.\n. Yea I was going to comment on this, If I don't do this native view counts doesn't match sticky indices. I think it is because of null react elements. Any other idea other than doing this?\n. Some children are null so we can't set collapsable = false on them. I had to add a null check in children map here https://github.com/facebook/react-native/pull/9456/commits/1e87a600e6ba71d7bdcac2c02659988d4f3ddafb#diff-f8f8b220fc0d1573e4f8b78c84415075R455\n. Maybe disable clipping if the view has a transform? Because clipping + transform is broken at the moment anyway.\n. We could also call updateClippingRect after updating the transform prop. This will cause a bit of extra work but will make sure that whatever happens last (setting transform or updating layout) will calculate the right clipping.\n. Yea, with sticky headers we translate them so they stay on the top of the scrollview when normally they should be outside of clip bounds without the transform.\n. I was thinking of something like\njava\nif (view instanceof ReactClippingViewGroup) {\n  ((ReactClippingViewGroup) view).updateClippingRect();\n}\nin https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/uimanager/BaseViewManager.java#L53\nEdit: actually we need to call it on the view's parent but it should be similar.\n. How would you go about getting the sticky headers view tags in JS? Seems like it would be relatively complex since we can only get them after the view has been rendered using refs. Maybe remapping indexes to offset for null views that will be removed would end up a lot simpler. \n. Ok this is actually harder than I thought because just adding collapsable=false doesn't really work because children are not actually View components so adding the collapsable prop doesn't do anything. In the case of ListView it's always a StaticRenderer which ignores the collapsable prop. I'm kind of leaning back towards adding the collapsableChildren prop to View that ensures that all it's children map to a native View and don't get optimized out.\nHere's a simple example to show why adding  the collapsable props to ScrollView children in JS doesn't work:\n``` js\nconst CustomView = ({ text }) => {text};\n\n   // Works, view gets rendered with collapsable=false\n\n  // Doesn't work because the collapsable prop gets passed to CustomView but is not \n  // passed down to it's View child\n  \n\n```\n. Got it working with https://github.com/facebook/react-native/pull/9456/files#diff-a73c2a0c22eceb34cf86aaede40f931fR192. Tested that it does indeed work by animating the transform prop in a clipped view and I can confirm that you were right and it did not work before but now works with this fix.\n. Good catch that should be like iOS, fixed\n. Not sure exectly what you mean here. The example is a copy paste of the iOS one (for some reason this example is probably the only one split in 2 files).\nThe example is just a bunch of buttons to change the selection for a single line and multiline text input.\n. Oh it's just a prop that is used to tell if we want to render that example with a normal or multiline text input. So what it does is renders the same example twice but one with single line and the other with multiline input.\n. JS will only send \"extrapolateLeft\" and \"extrapolateRight\" so no need to handle this case.\n. I think we should still set this._offset even if it is native. \n. I think we should still set this._offset even if it is native. \n. Same here, we should try to keep the JS values in sync even if it is native driven.\n. Same here, we should try to keep the JS values in sync even if it is native driven.\n. The bridge property is defined in the parent class so I can't use the ivar directly in this case.\n. The bridge property is defined in the parent class so I can't use the ivar directly in this case.\n. Let's go with collapsableChildren, this will allow to keep the same API and could even be useful in the future for other cases where we want an index based API like stickyHeaderIndices.\n. Let's go with collapsableChildren, this will allow to keep the same API and could even be useful in the future for other cases where we want an index based API like stickyHeaderIndices.\n. Haven't tested a case where that would happen but I'm pretty sure it would cause issues if we optimize out a view that we want to make sure it's child exists and map to the same index as Views in react js.\n. Haven't tested a case where that would happen but I'm pretty sure it would cause issues if we optimize out a view that we want to make sure it's child exists and map to the same index as Views in react js.\n. I moved it to avoid a circular reference of dependencies when building with buck.\n. I moved it to avoid a circular reference of dependencies when building with buck.\n. Sure sounds good!\n. Sure sounds good!\n. \ud83d\udc4d Updated with a slightly more optimized version that doesn't call updateAnimation and does the minimal amount of work needed to update the views since we don't need to do everything updateAnimation does in this case.\n. \ud83d\udc4d Updated with a slightly more optimized version that doesn't call updateAnimation and does the minimal amount of work needed to update the views since we don't need to do everything updateAnimation does in this case.\n. Yea otherwise the text is not centered vertically.\n. Yea otherwise the text is not centered vertically.\n. I think android has some padding by default (probably to offset for the underline)\n. I think android has some padding by default (probably to offset for the underline)\n. Is this even needed? The module initialize method should always get called before getSize can be called.\n. Is this even needed? The module initialize method should always get called before getSize can be called.\n. If it gets initialized here we don't use the custom config that can be passed to FrescoModule. I can see 2 ways to fix this, we can either also pass the config to this module when we create it or have some static method on FrescoHelpers to change the default config and call that before creating the native modules.\n. If it gets initialized here we don't use the custom config that can be passed to FrescoModule. I can see 2 ways to fix this, we can either also pass the config to this module when we create it or have some static method on FrescoHelpers to change the default config and call that before creating the native modules.\n. Not sure about this approach but layout animation didn't work properly at all here since the new position of the view isn't docked yet it gets animated in a weird way. What I did is simply add a flag to disable layout animation on ReactViewGroup.\n. Not sure about this approach but layout animation didn't work properly at all here since the new position of the view isn't docked yet it gets animated in a weird way. What I did is simply add a flag to disable layout animation on ReactViewGroup.\n. == null returns true for both null and undefined so this is fine.\nAccording to the doc:\nThe default value is zero, which results in the scroll event being sent only once each time the view is scrolled\nI agree the default should probably be 16 but I'd rather not make a breaking change for this.\n. == null returns true for both null and undefined so this is fine.\nAccording to the doc:\nThe default value is zero, which results in the scroll event being sent only once each time the view is scrolled\nI agree the default should probably be 16 but I'd rather not make a breaking change for this.\n. Nit: new line\n. Nit: new line\n. Same here\n. Same here\n. Is this check useful? As far as I can tell we don't update this value and we already check it at the start of the method, save for the one a few lines later and the one at the end.\n. Nit: Can you get rid of this return? Looks odd to me.\n. I think we can get rid of this, we're only writing to it and never using it's value.\n. Nit: Can you use id<...> instead of NSObject<...> in this file.\n. Yea, not sure about this change either, looks like _updatedValueNodes is pretty useless at the moment. We are only calling cleanupAnimationUpdates on it during the animation loop.\nI did notice that setAnimatedNodeValue was broken anyway and didn't actually update the value if there is no other animation running. Might want to just revert this and fix it separatly.\n. I'll double check but I think this is already validated somehow in JS so we can assume that the config is correct here.\n. I'll double check but I think this is already validated somehow in JS so we can assume that the config is correct here.\n. Add copyrights header\n. Nit: Add m prefix for ivars\n. same here\n. FB copyright header\n. FB copyright header\n. Could we just pass the transform config as is now and do the conversion to CATransform3D when setting the prop in the UIViewManager. This is what android does now, I think iOS still does some parsing in JS it could be a good opportunity to fix that as well. This would avoid having multiple representations of the transform (Array of objects -> CATransform -> number array -> CATransform). That way we'd always just have Array of objects -> CATransform.\nSee https://github.com/facebook/react-native/blob/master/Libraries/StyleSheet/processTransform.js#L36\n. Could we just pass the transform config as is now and do the conversion to CATransform3D when setting the prop in the UIViewManager. This is what android does now, I think iOS still does some parsing in JS it could be a good opportunity to fix that as well. This would avoid having multiple representations of the transform (Array of objects -> CATransform -> number array -> CATransform). That way we'd always just have Array of objects -> CATransform.\nSee https://github.com/facebook/react-native/blob/master/Libraries/StyleSheet/processTransform.js#L36\n. Let's avoid the extra props copy and just pass the style in jsx directly. Something like:\njs\n<Component {...props} style={...} />\n. Typo: they -> the\n. This is needed since we can't rely on the flush that happens in the frame callback because it will be a frame behind, this is especially visible with animations that use an Animated.event. Should be RCTConvert (Transform). Shoud that also be RCTLogConvertError?. same here. Need to also support rotateZ in that case.. @javache I don't think the current solution is perfect but this is how it is done on Android so I think this is a good first step (vs the adhoc property setter that we had before).\nIdeally we'd want to have the normal prop setting mechanism aware of native animated props and use that to properly update views instead of not passing the props at all but I haven't looked at this yet so I'm not sure how this could be implemented.. 1. Yea I think showing the warning is fine, it will be shown from TouchableOpacity too anyway so it doesn't really matter.\n\nI guess we could remove it. @ericvicenti any reason why this was added in the first place?. Every non-layout prop works with native animation, I guess we can leave it here for now even if it's a noop. I think we can simplify this a bit with by using the ?: operator.\n\nlabel.textColor = [RCTConvert UIColor:_items[row][@\"textColor\"]] ?: _color;. Is there a way to express this properly in flow? I want to add props to an object using Object.assign. Can't create a new object here because it breaks the getter.. Nit: use const instead var and arrow function.. Let's add an else case here and return findNodeHandle(this._scrollComponent) so we always return a node even if the scroll component doesn't implement getScrollableNode.. This should actually be removed, we don't want to have an init implemented to make the module lazy initiable.. I think this is fine since the native module will be lazy initialized. Would it be possible to use the same JS implementation for iOS and Android? You would have to provide the same API for the native module. One thing that the iOS one does is that it tracks subscribers in JS instead of adding a new listener for each watchKeys call which I think is better. The main advantage of using the same JS is that we could share that subscription logic.. If there are small differences we can just fork with Platform.OS. Does shared preference only support string sets?. Could we just use iOS props minimumTrackTintColor and maximumTrackTintColor instead of adding 2 new props?. I think this should be selectionColor: true. Looking at other examples (TextInput) it seems like we don't need to manually call processColor for props of type Color.. Ahh I see, Could you just change the if check to be newProps.selectionColor != null instead to match null and undefined.. Ahh I see, Could you just change the if check to be newProps.selectionColor != null instead to match null and undefined.. I'm not sure, I never used those props but I think that's what it does. If it is the case we could use your name and deprecate those, I agree that it is not really clear. It would just be nice to be able to set that using the same prop for ios and android.. I'm not sure, I never used those props but I think that's what it does. If it is the case we could use your name and deprecate those, I agree that it is not really clear. It would just be nice to be able to set that using the same prop for ios and android.. Nit: Move this with other function requires (those that start with a lowercase letter). Nit: Move this with other function requires (those that start with a lowercase letter). Nit: Align comment *s.. Nit: Align comment *s.. Native animated events do need a wrapper for ScrollView / ListView this is the reason it is exported here.. Native animated events do need a wrapper for ScrollView / ListView this is the reason it is exported here.. I did try using React.Children.map but it doesn't work, looks like indices are different. My guess is that toArray handles null / nested children differently and that's the behavior we want here.. I did try using React.Children.map but it doesn't work, looks like indices are different. My guess is that toArray handles null / nested children differently and that's the behavior we want here.. I don't really have other ideas except maybe exporting this as a constant somewhere.. I don't really have other ideas except maybe exporting this as a constant somewhere.. Added a comment, let me know if that makes sense.. Added a comment, let me know if that makes sense.. @sahrens Using { ...AnimatedImplementation, ... } will compile to Object.assign({}, AnimatedImplementation, ...) but there seems to be an issue with getters on iOS, the getter doesn't get assigned but it's value is instead, losing the getter altogether.\nThis is why I used Object.assign(Animated, AnimatedImplementation) instead to avoid having to copy Animated props and getters get preserved properly. However doing that causes a bunch of flow issues because we are assigning props that don't exist on the initial object.. @sahrens Using { ...AnimatedImplementation, ... } will compile to Object.assign({}, AnimatedImplementation, ...) but there seems to be an issue with getters on iOS, the getter doesn't get assigned but it's value is instead, losing the getter altogether.\nThis is why I used Object.assign(Animated, AnimatedImplementation) instead to avoid having to copy Animated props and getters get preserved properly. However doing that causes a bunch of flow issues because we are assigning props that don't exist on the initial object.. Not sure why this is needed now :S. Not sure why this is needed now :S. Is there another way to declare instance variables with createClass that are not nullable? I can't just initialize these values here because otherwise the same object gets used for every instance so I have to do it in componentWillMount. As a workaround I'm just creating these values to be able to make the type not nullable.. Is there another way to declare instance variables with createClass that are not nullable? I can't just initialize these values here because otherwise the same object gets used for every instance so I have to do it in componentWillMount. As a workaround I'm just creating these values to be able to make the type not nullable.. No there were some flow errors at some point, doesn't show as outdated diff because I changed some other line to fix it.. No there were some flow errors at some point, doesn't show as outdated diff because I changed some other line to fix it.. This isn't used in this diff but we export it as part of the public api like Animated.View. Had to make this change just because this diff creates a circular reference since ScrollView now imports animated.. This isn't used in this diff but we export it as part of the public api like Animated.View. Had to make this change just because this diff creates a circular reference since ScrollView now imports animated.. this should be this._scrollComponent.scrollToEnd. this should be this._scrollComponent.scrollToEnd. I agree, however it is already true by default if not specified (https://github.com/facebook/react-native/blob/master/Libraries/CustomComponents/ListView/ListView.js#L500). Up to you if you want to keep it to make it more explicit.. I agree, however it is already true by default if not specified (https://github.com/facebook/react-native/blob/master/Libraries/CustomComponents/ListView/ListView.js#L500). Up to you if you want to keep it to make it more explicit.. Got a PR already to get rid of it if you want to shipit :) https://github.com/facebook/react-native/pull/11999. Got a PR already to get rid of it if you want to shipit :) https://github.com/facebook/react-native/pull/11999. I don't think we want to reset the offset here.. I think this should be called iterations since that the name of the parameter in Animated.loop, so numLoops -> iterations.. Nit: trailing comma. Prefix this with an underscore as it is private-ish API.. You could use default params + descructuring to make this nicer\n{iterations = -1}: LoopAnimationConfig = {}. We probably still want to be able to pass 0 for iterations, this can be fix as per my previous comment.. I don't think we want any props from AnimationConfig, the type should just be { iterations: number }.. Why -1 here? Should it be mStartFrameTimeNanos = frameTimeNanos; like in the FrameBasedAnimationDriver?. Why -1 here? Should it be mStartFrameTimeNanos = frameTimeNanos; like in the FrameBasedAnimationDriver?. Could this prop be added to AnimationConfig type and the Animation base class instead of in all classes?. Could this prop be added to AnimationConfig type and the Animation base class instead of in all classes?. Let's avoid mutating the config object, in case it gets reused for multiple animations, { ...config, iterations }.. Let's avoid mutating the config object, in case it gets reused for multiple animations, { ...config, iterations }.. The prop in style is called transform so I guess this is fine, I just fixed the flow type as it was bad, flow didn't catch the error but it always was an array that is passed to this function.. The prop in style is called transform so I guess this is fine, I just fixed the flow type as it was bad, flow didn't catch the error but it always was an array that is passed to this function.. As per my previous reply, it doesn't change the API, just fix the flow type that was wrong. The array is effectively for the order of the transforms.. As per my previous reply, it doesn't change the API, just fix the flow type that was wrong. The array is effectively for the order of the transforms.. Yea I think having reset as public API is fine as it could be useful by it's own.. Yea I think having reset as public API is fine as it could be useful by it's own.. Sounds good. Sounds good. Oups :). Fixed. Fixed. You mean not putting Krzysztof's talk?. I like that. Yea updated with brent's one. Fixed. Fixed. Fixed. Fixed. Fixed. Fixed. A props node always keep the same props, if the props change we create a new one. See https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/AnimatedImplementation.js#L1777 which is called from componentWillReceiveProps.. I see, working on a fix.. You can import platform from react-native instead importing it with haste.. You can avoid this check completely if you use destructuring + default parameters for the config object.\nIt should look like\njs\nvar loop = function(\n  animation: CompositeAnimation,\n  { iterations = -1 }: LoopAnimationConfig = {},\n )\nThis way it works whether you call it with loop(anim) or loop(anim, {}).. AFAIK it will run on the same queue as the module specifies, will double check.. Yea you are right. Yea this actually avoids a deadlock too haha, will update the comment a bit.. I think it's preferable that adding observers is synchronous, with the current impl that adds an observer for each batch this is needed otherwise the observer could be added after the UI operations are completed.. Yes I can verify that.. I assume all native modules get deallocated at the same time, I guess the bridge is where it could leak.. Yea I see, so now it's a race instead of happening all the time. Anyway if I make the change to use one observer this locking won't be needed anymore.. Native modules never seemed to get deallocated during runtime so it shouldn't be an issue, even if they did shouldn't leak since we are removing the observer.. I know it was like this before but could you change this to == undefined so it also matches null.. I know it was like this before but could you change this to == undefined so it also matches null.. I think it should work, we're just passing these paths to the sharp library and it should resolve it properly, forward slashes are valid for paths on windows.. I think it should work, we're just passing these paths to the sharp library and it should resolve it properly, forward slashes are valid for paths on windows.. I did test reloading but dealloc never got called for neither UIManager nor AnimatedModule.. Yea you are right, I checked how UIManager works it it will dispatch to the main queue once per batch and execute only the operations from that batch instead of every it has available. I think what could work well here is only process one batch at a time, this will work because for each completed batch there will be a call to the UIManagerObserver methods.. LinkedList will be better here since we are only adding at the end and iterating over it.. LinkedList will be better here since we are only adding at the end and iterating over it.. Used an iterator to get O(1) remove on the linked list.. Used an iterator to get O(1) remove on the linked list.. Yes, just tested and it does ignore it.. Yes, just tested and it does ignore it.. Yea it's probably trivial, I had mostly the other case in mind when we use it in runUpdates where it can get quite a bit larger. I feel like LinkedList works well here since it can have very variable lengths so it's nice to avoid array resizes.. Yea it's probably trivial, I had mostly the other case in mind when we use it in runUpdates where it can get quite a bit larger. I feel like LinkedList works well here since it can have very variable lengths so it's nice to avoid array resizes.. Changed this one to an ArrayList, which makes more sense if we optimize for 1 element.. Changed this one to an ArrayList, which makes more sense if we optimize for 1 element.. Well makes sense that dealloc never gets called if it leaks lol. Moved the code that cleans up the module to invalidate and now everything gets dealloc'ed properly on reload.. Oh wow, so that might explain why it didn't crash when I was testing (probably did most testing on iOS then tested quickly on Android where the crash actually happens).. Any reason for this change? I'd rather keep the more precise flow type.. Let's prefix this method with an underscore since it's not really public API.. I see, does keeping (state: {value: number}) => void in AnimatedWithChildren and using a different type for AnimatedValueXY works? If not I don't really have a better idea :(. iOS had this feature so I added here too. This will be useful for example in Exponent to be able to show a custom loading screen.. iOS had this feature so I added here too. This will be useful for example in Exponent to be able to show a custom loading screen.. Sadly no, this class can only be used to create a multipart request and not to parse a response. I've seen in an issue that this kind of response is not common enough to be implemented in okhttp and they recommended implementing it manually. iOS also implements this response parsing from scratch so this is largely based on it.. Sadly no, this class can only be used to create a multipart request and not to parse a response. I've seen in an issue that this kind of response is not common enough to be implemented in okhttp and they recommended implementing it manually. iOS also implements this response parsing from scratch so this is largely based on it.. Yes this is the standard for http, will add a comment.. Yes this is the standard for http, will add a comment.. Just in case the chunk doesn't specify a status we use the one from the request.. Just in case the chunk doesn't specify a status we use the one from the request.. Yea this will redscreen, this code is just moved from above.. Yea this will redscreen, this code is just moved from above.. I think this is fine since we can assume the header will always be properly formed since we control the packager server.. I think this is fine since we can assume the header will always be properly formed since we control the packager server.. Yea we can assume utf8 here since we know that this is what the packager server uses.. Yea we can assume utf8 here since we know that this is what the packager server uses.. When backgrounding the app we need to hide this view (since it's a system overlay) so we use this flag to restore it to the proper visibility after.. When backgrounding the app we need to hide this view (since it's a system overlay) so we use this flag to restore it to the proper visibility after.. Yea I could use just the text + some padding instead of centering with fixed height.. Yea I could use just the text + some padding instead of centering with fixed height.. Let's avoid creating a new object at each iterations and just mutate the initial one.. Let's avoid creating a new object at each iterations and just mutate the initial one.. I think this will cause issues with Array and null, if I remember correctly both of those will have type object but we don't want to traverse those.. I think this will cause issues with Array and null, if I remember correctly both of those will have type object but we don't want to traverse those.. Looks like a bug in flow 0.41, it uses the type of defaultProps instead of props, it should be any function but ends up being () => null.. Not sure about why this error happens so $FlowFixMe seemed like an ok solution for now... Here's the full error\nLibraries/CustomComponents/NavigationExperimental/NavigationHeader.js:121\n121:     viewProps: PropTypes.shape(View.propTypes),\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call of method `shape`. Expected a React PropType instead of\n372:     hitSlop: EdgeInsetsPropType,\n                  ^^^^^^^^^^^^^^^^^^ object type. See: Libraries/Components/View/View.js:372. We already handle the case where this is undefined, the flow type wasn't up to date.. This does a bunch of metaprogramming and would be a pain to properly typecheck so just cast to Object.. Not sure why this didn't cause issues before these changes but we have react-dom as a dev dep (for tests I guess) so just ignore it to avoid other haste conflicts.. Not sure why this didn't cause issues before these changes but we have react-dom as a dev dep (for tests I guess) so just ignore it to avoid other haste conflicts.. Not sure if there is a better way to do this, we have to inject a mock in here but there is no way currently. I tried using PowerMockito.whenNew but could not get it to work.. Ideally we'd also test multithreading here to make sure everything gets called on the proper thread and is safe but I'm not sure how to do that.. I think we should make it clear here that this does not add the permissions and what needs to be done if someone wants to add those to their app (probably just remove tools:node=\"remove\").. I think one module that needs read permissions is CameraRoll. I fixed it recently because we didn't request the permission in UIExplorer on Android 23+.. maybe write (virtual node) instead of mYogaNode == null. I've also noticed this recently, when I checked it came from react-dom that we install as a dev dependency (I think it's needed for some test utils to work). If it is the case we should just ignore react-dom instead of our module.\n.*/node_modules/react-dom/.*. I've also noticed this recently, when I checked it came from react-dom that we install as a dev dependency (I think it's needed for some test utils to work). If it is the case we should just ignore react-dom instead of our module.\n.*/node_modules/react-dom/.*. Actually the only reason we need to run on the UIManager queue now is to avoid having to lock _operations and _preOperations.. Added a comment to explain that.. Not sure why these changes happened, I didn't touch the tvOS target. I did reset that file and relinked libRCTAnimation.a but xcode still changed it like this.. Not sure why these changes happened, I didn't touch the tvOS target. I did reset that file and relinked libRCTAnimation.a but xcode still changed it like this.. Right now I'm using null as a way to know that the view doesn't have z-index set so we can avoid using custom view drawing when no child has z-index set.. Should return here. Should return here. This should be reactTestRendererVersion. This should be reactTestRendererVersion. Also maybe update the message to Missing dev dependencies .... Also maybe update the message to Missing dev dependencies .... You can pass 2 instead of 2 space characters in the 3rd param of JSON.stringify. It will make it a bit clearer.. There are other cases below where we don't handle null responseBody could you make sure those are covered too?. There are other cases below where we don't handle null responseBody could you make sure those are covered too?. We'll need to cancel this timeout if the idle callback is called before it triggers.. We'll need to cancel this timeout if the idle callback is called before it triggers.. I think this time should be taken inside the setTimeout function so it is the current time instead of when the idle callback was created.. I think this time should be taken inside the setTimeout function so it is the current time instead of when the idle callback was created.. This should be timeout != null so passing timeout: 0 still works.. This should be timeout != null so passing timeout: 0 still works.. I think this should be timeoutId and not timeout. I think this should be timeoutId and not timeout. Can you call this timeoutId to make it clear it's not the same as the other timeout var we use that is the time of the timeout.. Same here, timeout != null. I think it would be better to use a Map here with the requestIdleCallback timer id as the key and the timeout timer id as the value.. Cleanup unused code from the commit that removed addons from ReactNative.. Yep, looks like the bug is fixed now, getting unused supression error.. This was added in https://github.com/facebook/react-native/pull/11315 as a workaround for bugs with the old z-index implementation. Tested that it isn't needed anymore, maybe the test failure in unrelated?. You're right, I should have actually checked the diff -_- https://github.com/facebook/react-native/pull/11315/files#diff-f8f8b220fc0d1573e4f8b78c84415075L478. Nit: 4 space continuation to match the style of the file.. Nit: 4 space continuation to match the style of the file.. Nit: Same here. Sorry about the noise in this file, ran prettier because I lost my ability for format JS properly :). It is useful in case someone wants to pass iterations = 0 so the animation doesn't run. Doesn't seems like a useful thing to do but meh.... No this won't matter.. Yea :S Managed to make it format it better by putting each arg on a different line.. That one isn't super nice either :(. We've actually hit a few issues with sticky sections headers when updating Expo to 0.44. I've fixed then and will make some PRs soon. Hopefuly it also fixes your issue.. Yea I held off doing caching to keep this simpler but I do agree it might be needed. I also think the second solution is ideal and is also similar to what we do on Android.. Nit: Could you remove the extra empty lines from L493 to L502. Let's just use an instance var instead. Are you sure this is not needed anymore?. > In fact, it looks even better because the refreshControl is displayed without delay.\nDo you mean there is no more animation or the animation is just faster / better now? This code was written on iOS 8 or 9 so it's possible it is not needed anymore and I think it's reasonable to remove it.. We could make this @Nullable Integer to avoid having to sync mIsBackgroundColorSet. I think if we remove the background color (color = 'something' then color = null) it will keep the old background color instead of drawing no background. If we use my suggestion to make mBackgroundColor nullable we could just assign here and null check in drawOutput.. Yes I think it is better even if it will be the same value for each instance. RefreshControl is not a component that has many instances so the memory usage is negligible. Also small detail but maybe initialHeight would be a better name.. Could you also add a small comment that explains why we can't use self.frame.size.height here.. I see, I thought it was a NSArray then this is fine.. Oups forgot to update the signature in tests, also updated it to readAllPartsWithCompletionCallback:progressCallback:. Should land this time!. We could just get rid of the iOS code path and always use UIManager.dispatchViewManagerCommand, afaik it also works on iOS.. We could just get rid of the iOS code path and always use UIManager.dispatchViewManagerCommand, afaik it also works on iOS.. What is the boolean returned by this? Since we're not using it might as well not return it.. What is the boolean returned by this? Since we're not using it might as well not return it.. Same for the boolean here. Same for the boolean here. I think ViewManagers as modules were just never implemented on Android. I was mostly basing this comment on other methods like scrollTo uses only dispatchViewManagerCommand even on iOS. On iOS react nativr is already built from source so you could test by either running the RNTester xcodeproj or changing code under node_modules in an app.. I think ViewManagers as modules were just never implemented on Android. I was mostly basing this comment on other methods like scrollTo uses only dispatchViewManagerCommand even on iOS. On iOS react nativr is already built from source so you could test by either running the RNTester xcodeproj or changing code under node_modules in an app.. But there should not be any native changes required on iOS, it should just work when using dispatchViewManagerCommand. But there should not be any native changes required on iOS, it should just work when using dispatchViewManagerCommand. But there should not be any native changes required on iOS, it should just work when using dispatchViewManagerCommand. But there should not be any native changes required on iOS, it should just work when using dispatchViewManagerCommand. I don't think we should log this, having this error print out could be confusing.. I don't think we should log this, having this error print out could be confusing.. I'd rather avoid using var scoping here and just use let/const instead.. I'd rather avoid using var scoping here and just use let/const instead.. Yea I was just thinking declaring the let outside the block. Yea I was just thinking declaring the let outside the block. Since this looks like an onScroll event from ScrollView I think we should not add the gestureState param, might be more confusing than anything else. Maybe just (event) => console.log(event). Since this looks like an onScroll event from ScrollView I think we should not add the gestureState param, might be more confusing than anything else. Maybe just (event) => console.log(event). Even for ScrollView onScroll? I thought it was only for PanResponder events.. Even for ScrollView onScroll? I thought it was only for PanResponder events.. Sure lets just change to onPanResponderMove instead. Sure lets just change to onPanResponderMove instead. I think it could be useful to make this public, if you prefer not to let's just add a / package / comment like here for example https://github.com/AndrewJack/react-native/blob/f1cf378cf4ef3e5473fe2ace6d564be897e56a0e/ReactAndroid/src/main/java/com/facebook/react/devsupport/RedBoxDialog.java#L51. I think we should get rid of xcpretty and just use xcprettyProcess as the flag.. I think we should get rid of xcpretty and just use xcprettyProcess as the flag.. RCTEvent protocol is a bit specific to views events but the coalescing logic can be used for any kind of event. Ideally this would not be called viewTag but for now we use this to coalesce events by node tag. It would have also been possible to use coalescingKey instead.. RCTEvent protocol is a bit specific to views events but the coalescing logic can be used for any kind of event. Ideally this would not be called viewTag but for now we use this to coalesce events by node tag. It would have also been possible to use coalescingKey instead.. Sadly we can't use NativeEventEmitter anymore.. Sadly we can't use NativeEventEmitter anymore.. From what I  understand @synthesize is used to implement properties from a protocol without having to redefine them (https://github.com/facebook/react-native/blob/master/React/Base/RCTBridgeModule.h#L87). It's pretty much used for every native module that needs to access the bridge.. From what I  understand @synthesize is used to implement properties from a protocol without having to redefine them (https://github.com/facebook/react-native/blob/master/React/Base/RCTBridgeModule.h#L87). It's pretty much used for every native module that needs to access the bridge.. Same as the _bridge for native modules, it implements properties from the RCTEvent protocol. Based this on other events (https://github.com/facebook/react-native/blob/master/React/Views/RCTScrollView.m#L51). Same as the _bridge for native modules, it implements properties from the RCTEvent protocol. Based this on other events (https://github.com/facebook/react-native/blob/master/React/Views/RCTScrollView.m#L51). This should be possible, we only use viewTag to generate an id for the event based on viewTag + eventName + coalescingKey. We could make view tag optional for events that are not related to views and only use coalescingKey to identify these events. (https://github.com/facebook/react-native/blob/master/React/Base/RCTEventDispatcher.m#L34). This should be possible, we only use viewTag to generate an id for the event based on viewTag + eventName + coalescingKey. We could make view tag optional for events that are not related to views and only use coalescingKey to identify these events. (https://github.com/facebook/react-native/blob/master/React/Base/RCTEventDispatcher.m#L34). Nit: boolean instead of Boolean. Nit: boolean instead of Boolean. Is this necesary? I don't see any case where now could be smaller than _lastTime.. Is this necesary? I don't see any case where now could be smaller than _lastTime.. Can we make _stiffness, _damping, _mass and _initialVelocity non-nullable now? Looks like they are initialized in every case.. Can we make _stiffness, _damping, _mass and _initialVelocity non-nullable now? Looks like they are initialized in every case.. If we make those non-nullable we can remove the ||. If we make those non-nullable we can remove the ||. Let's use NSTimeInterval for time values. Let's use NSTimeInterval for time values. NSTimeInterval . NSTimeInterval . NSTimeInterval . NSTimeInterval . Can we assert this in the ctor instead? If we do that we could also remove those asserts from the native implementations.. Can we assert this in the ctor instead? If we do that we could also remove those asserts from the native implementations.. Are these changes on purpose?. Are these changes on purpose?. Sure we can keep it, I assume the images were already there?. Sure we can keep it, I assume the images were already there?. Let's initialize this array inside the dispatch once block, just like the nameToWeight dictionary.. Use @[a, b, c] shorthand to initialize the array instead of arrayWithObjects.. I remember trying to type this properly but I hit some issue. React components typing changed in flow 0.53 I can try again to see if I can figure out something that works.. @ide prefered not to, I don't really have a preference. @ide prefered not to, I don't really have a preference. I think it is because target needs to be in the event body for JS so instead of putting it both in the body and passing it as an arg we just extract it from the body. . Yea that would be better (just copied that code :)). I think the main use of RCTEvent is to support event coalescing. RCTComponentEvent is a generic event that is sent to a component so it could be something like a touch or scroll event and those can all have different bodies. It is also used by event blocks created by view managers (RCTDirectEventBlock, RCTBubblingEventBlock).\nIf someone want to make a type safe event I think the best way is to create a new class that implements RCTEvent or subclass RCTComponentEvent. An example of this is https://github.com/facebook/react-native/blob/master/React/Views/RCTScrollView.m#L26. It is a generic untyped event for Components because it DOES use view tags (target that is extracted from the body). We could say that it is preferred to create a custom event class that implements RCTEvent for type safety. The main use case of this class is it's usage internally in RCTDirectEventBlock and RCTBubblingEventBlock. It can also be used to migrate code that used sendInputEvent directly without creating a custom class.. It could be subclassed but just reimplementing RCTEvent is probably better especially now that a bunch of methods are optional.. We could probably pass target as a parameter and add it to the body in the init.. Yea this class is used internally and could also be used as an easy migration from sendEventWithName. Other events should just implement RCTEvent. On Android we have to explicitly check the thread to avoid dispatching if we are already on the main thread while on iOS this is already handled in RCTExecuteOnMainQueue. On Android we have to explicitly check the thread to avoid dispatching if we are already on the main thread while on iOS this is already handled in RCTExecuteOnMainQueue. I thought the extra copy to make the NSDictionary mutable would be bad but we actually did it already here https://github.com/facebook/react-native/pull/15894/files#diff-b9fc78351b7b976a36356ef6f08c1f79L117. So the main difference performance wise is the extra allocation of RCTEvent. I'm pretty sure JS needs the tag in the body that's why we put it here. I could be wrong though I'd have to look at the RCTEventEmitter.receiveEvent code.. Yea it is definitely used https://github.com/facebook/react/blob/7f78749ee3023608a614b2f595739bcd36acc128/src/renderers/native/ReactNativeEventEmitter.js#L112. I'd rather not touch this :). Yea I'm not sure why we are sending the tag as both the first arg and in the event body as target. I just think we should keep it like this to avoid breaking react.. @bvaughn Could you clarify why we need to pass both rootNodeID and nativeEvent.target here https://github.com/facebook/react/blob/7f78749ee3023608a614b2f595739bcd36acc128/src/renderers/native/ReactNativeEventEmitter.js#L126? AFAIK those 2 values are always the same.. @shergin Let's see if someone from the react team can help here. I agree we should have a clear plan here. We also have to consider android if we make any change to the native / react bridging api.. Thanks @bvaughn, I'm pretty sure we need to keep target in the event payload otherwise it would be a breaking change for apps that rely on this value. Maybe we could avoir passing the tag as the first argument if it's always the same as body.target. Needs more investigation.\n@shergin What do you think about landing this as is since it will unblock a few other improvements I wanted to make?. Can we use a preprocessor macro instead of modifying the source? I think we already set the RCT_PACKAGER env var so we could use that, if I remember correctly there's some config in xcode to hook up defines to env vars.. Can we use a preprocessor macro instead of modifying the source? I think we already set the RCT_PACKAGER env var so we could use that, if I remember correctly there's some config in xcode to hook up defines to env vars.. Do we need this default arg? Let's try to only specify the default value once in the command config.. Do we need this default arg? Let's try to only specify the default value once in the command config.. I don't think we need to pass the packager port to xcpretty.. I don't think we need to pass the packager port to xcpretty.. Can we remove default value here?. Can we remove default value here?. Nit: We can use object spread instead of Object.assign here:\nreturn {env: {...process.env, RCT_PACKAGER: port}};. Nit: We can use object spread instead of Object.assign here:\nreturn {env: {...process.env, RCT_PACKAGER: port}};. Same here can we get rid of the default value?. Same here can we get rid of the default value?. Use path.join. Use path.join. Nit: Spaces after commas and colons. Nit: Spaces after commas and colons. Nit: Use string interpolation here.. Nit: Use string interpolation here.. Chrome throws if you don't pass a the parts and name args so I added an invariant. Behavior is slightly different since chrome accepts new File([], undefined) and stringifies it but I think it's better to not allow that. Still need the || '' to make flow happy though.. Chrome throws if you don't pass a the parts and name args so I added an invariant. Behavior is slightly different since chrome accepts new File([], undefined) and stringifies it but I think it's better to not allow that. Still need the || '' to make flow happy though.. Can you just revert these changes now. Nit: Can you use arrow functions instead, there's a couple other places too.. Could we just use View#getRotationX and View#getRotationY instead of keeping our own transform info here?. Could a negative scale affect the backface visibility?. You can add @format pragma to tell tools this file uses prettier.. Can you add a test for major don't match too so we cover all cases. Same @format here. Can you just add types for props and state, you can just use Object for the type of state.dims.. Looks like you have to specify supportsTVOS, it causes a flow error.. Can you phrase this not as a question. Something like \"Specify if it will adjust ...\". Sadly NSMapTable doesn't support subscript notation. Avoids keeping long lived strong refs on other native modules. Would there be another way to pass around the activity? It feels kind of out of place on this interface.. Yea if it doesn't require too many changes I think number 2 would be nice. Are you sure this is needed, looks like ContentResolver#getType calls the ContentProvider#getType method which is implemented like https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/provider/DocumentsProvider.java#829 for the document one.. Looking at the VirtualizedList implementation I think we still need to render the header if the list is empty. Have you tested header + empty component to make sure the behaviour is the same?. I don't think we need to annotate this, will avoid some duplication.. Maybe add a new line at the end of the file? It does cause a clang warning, maybe that's the issue.\n```\nIn file included from /Users/distiller/react-native/React/Base/RCTConvert.h:15:\n/Users/distiller/react-native/React/Base/RCTDefines.h:108:7: warning: no newline at end of file [-Wnewline-eof]\nendif\n  ^\n\n/Users/distiller/react-native/React/Base/RCTBundleURLProvider.m:17:67: error: expected expression\nconst NSUInteger kRCTBundleURLProviderDefaultPort = RCT_METRO_PORT;\n``. Do we need to add keys here to avoid the missing key warning?. Use arrow function here. if (finished) {. \"Animation was completed\" maybe?. Ohh I see, yea this is good!. Nit: Can you change this tothis.state.ds.getRowCount() === 0to make it clearer?. Have you tried running./scripts/objc-test-ios.sh? This is the script CI runs.. Right, it should be MetroListView instead (https://github.com/cdlewis/react-native/blob/22e2686a7ec2bc81656d8309676ddbd74057f0ba/Libraries/Lists/FlatList.js#L624). My bad for not noticing this, probably still passed flow because they have the same props.. Hmm if it's justgetScrollResponder` maybe you could just add it to MetroListView and just call the method on the underlying ListView ref.. So this flag is only the visibility bit if I understand correctly? It won't unset the fact that it is a password or not.. A bit later in this code we set the TYPE_TEXT_VARIATION_VISIBLE_PASSWORD flag, should we just set passwordVisibilityFlag instead?. Let's move this and passwordVisibilityFlag to private static final members in the class.. Makes sense, let's keep the current behavior (current PR code).. copyCurrentGitIgnoreFile is not async so no need to use await here.. copyCurrentGitIgnoreFile is not async so no need to use await here.. I made this a long time ago but it never got reviewed, could be useful https://github.com/facebook/react-native/pull/13014. I made this a long time ago but it never got reviewed, could be useful https://github.com/facebook/react-native/pull/13014. I had a look at this and I think the current api makes sense because of how it is used in Websocket.js. It has the same type of API as WebSocketModule which has similar methods.. I had a look at this and I think the current api makes sense because of how it is used in Websocket.js. It has the same type of API as WebSocketModule which has similar methods.. The blocks are atually slightly different (uri, request and response handlers). Handler should be used tho, something probably got lost in a merge.. The blocks are atually slightly different (uri, request and response handlers). Handler should be used tho, something probably got lost in a merge.. This looks kind of bad, it probably only works because of some transitive dependency that also includes uuid.\nNot sure what the best solutions would be, we could vendor the uuid module used internally or maybe add it to fbjs.\nAnother solution that could work is to use the uuid v4 import directly so require('uuid/v4') (https://github.com/kelektiv/node-uuid#quickstart---commonjs-recommended). This looks kind of bad, it probably only works because of some transitive dependency that also includes uuid.\nNot sure what the best solutions would be, we could vendor the uuid module used internally or maybe add it to fbjs.\nAnother solution that could work is to use the uuid v4 import directly so require('uuid/v4') (https://github.com/kelektiv/node-uuid#quickstart---commonjs-recommended). According to https://stackoverflow.com/questions/12648373/what-is-androidallowbackup this will cause a lint warning if not set. I think we could just set it to false by default.. The changes in the yoga folder need to be made to https://github.com/facebook/yoga then they are synced here.. The changes in the yoga folder need to be made to https://github.com/facebook/yoga then they are synced here.. Looks like nuclide uses this to register custom plugins, that would probably work instead or using a file dependency. https://github.com/facebook/nuclide/blob/693623fd6e2124b094ab4d4d5fad15a67496c6b7/.eslintrc.js#L513-L514. Looks like nuclide uses this to register custom plugins, that would probably work instead or using a file dependency. https://github.com/facebook/nuclide/blob/693623fd6e2124b094ab4d4d5fad15a67496c6b7/.eslintrc.js#L513-L514. There are still a lot of files that are not converted to es6 so the rule is not enabled.. There are still a lot of files that are not converted to es6 so the rule is not enabled.. Fast path here since we only need the height of the ScrollView for the inverted case which is pretty rare.. Fast path here since we only need the height of the ScrollView for the inverted case which is pretty rare.. Each chunk of the multipart response has it's own headers so this is why we clear it every time we emit a chunk so we parse the next one.. Each chunk of the multipart response has it's own headers so this is why we clear it every time we emit a chunk so we parse the next one.. We do emit progress for each chunk so even if it is not the last chunk (what isCloseDelimiter means) we still want to pass isFinal to true. Its only use is to make sure the last event isn't throttled so we see 100%.. We do emit progress for each chunk so even if it is not the last chunk (what isCloseDelimiter means) we still want to pass isFinal to true. Its only use is to make sure the last event isn't throttled so we see 100%.. Yea there might be an error here, we don't take into consideration the length of the headers delimiter, it can cause the progress number to be off by a bit. I could keep currentHeadersLength and do content.size() - currentHeadersLength - headersDelimiter.size() or change currentHeadersLength for something like contentStart.. Yea there might be an error here, we don't take into consideration the length of the headers delimiter, it can cause the progress number to be off by a bit. I could keep currentHeadersLength and do content.size() - currentHeadersLength - headersDelimiter.size() or change currentHeadersLength for something like contentStart.. No it is not the case, progress is reset for each chunk so let's say we have three chunks progress would look like: 0, 1, 0, 1, 0, 1. In the case of RN packager we only care about the progress of the last chunk (the JS bundle so we ignore progress of the other ones (https://github.com/facebook/react-native/pull/17809/files/bbe67864421b1de228d7af3ddd7327ed8bca060c#diff-948206404ada96979d687d628e935ee1R204).. No it is not the case, progress is reset for each chunk so let's say we have three chunks progress would look like: 0, 1, 0, 1, 0, 1. In the case of RN packager we only care about the progress of the last chunk (the JS bundle so we ignore progress of the other ones (https://github.com/facebook/react-native/pull/17809/files/bbe67864421b1de228d7af3ddd7327ed8bca060c#diff-948206404ada96979d687d628e935ee1R204).. Just to clarify a chunk is a \"part\" from the multipart response. You can pretty much see it as multiple http responses nested inside the normal http response. It has it's own headers and we track progress of downloading each chunk separately. The goal is to allow the server to push multiple responses to the client (packager progress events + final chunk is the js bundle).. Just to clarify a chunk is a \"part\" from the multipart response. You can pretty much see it as multiple http responses nested inside the normal http response. It has it's own headers and we track progress of downloading each chunk separately. The goal is to allow the server to push multiple responses to the client (packager progress events + final chunk is the js bundle).. Should we call this updateAnimationConfig instead since it doesn't \"reset\" the animation completely but only updates certain parameters.. Should we call this updateAnimationConfig instead since it doesn't \"reset\" the animation completely but only updates certain parameters.. Nit: dictionary notation (a[@\"b\"]) for this and next line.. Nit: dictionary notation (a[@\"b\"]) for this and next line.. Maybe call this _toValueNodeTag, kind of confusing which is what because of _valueNodeTag.. Maybe call this _toValueNodeTag, kind of confusing which is what because of _valueNodeTag.. If we decide to update the name in the iOS impl update this too.. If we decide to update the name in the iOS impl update this too.. Why was this change needed? Does it match the iOS / JS implementation better like this?. Why was this change needed? Does it match the iOS / JS implementation better like this?. Let's name these ivars the same as the iOS implementation if possible.. Let's name these ivars the same as the iOS implementation if possible.. Were these broken before?. Were these broken before?. Makes sense, I agree it will be clearer like that, not sure if we have to mark this as breaking since I don't think it is meant to be public api.. Makes sense, I agree it will be clearer like that, not sure if we have to mark this as breaking since I don't think it is meant to be public api.. @axemclion @kmagiera I think this line could be the culprit. I guess it could be possible that mStartFrameTimeNanos is bigger than the curent clock time.. @axemclion @kmagiera I think this line could be the culprit. I guess it could be possible that mStartFrameTimeNanos is bigger than the curent clock time.. Why is this needed? Can't we just use the prop directly?. Why is this needed? Can't we just use the prop directly?. I don't think flow understands this so the cast seems fine. I don't think flow understands this so the cast seems fine. Renamed so controls fit on 2 lines :/. Renamed so controls fit on 2 lines :/. No need for that comment since it is pretty self explanatory.. Could you also open a PR on https://github.com/facebook/react-native-website to add this prop?. Same, remove comment.. Nested scrolling is supported by default on iOS sounds better I think.. You can use ColorPropType instead of PropTypes.string. Maybe we should call it checkedTintColor instead for consistency with other components (I was looking at Switch). Same for unchecked.. Can we move this to setCheckboxTintList instead of passing it as arguments, seems like we always pass the same values. . Looks like ModuleHolder has a getCanOverrideExistingModule method, we can use this inside of putModuleTypeAndHolderToModuleMaps instead of passing canOverrideExistingModule as a parameter.. I tried using that but the insets were always 0.. Weird, I can try to investigate this further. I agree it would be cleaner to use keyWindow.safeAreaInsets.. Is that needed?. I think this should be return Assertions.assertNotNull(mActivity) so we still crash if it is null.. This will need to be a bit more robust to match iOS's [NSString capitalizedString]. I did some testing and something like this seems to work well and produce the same result as iOS.\n```java\nimport java.text.BreakIterator;\n...\nString text = \".aa\\nbb\\tcc  dd EE \\r\\nZZ I like to eat apples. \u4e2d\u6587\u00e9\u00e9 \u6211\u559c\u6b22\u5403\u82f9\u679c\u3002awdawd   \";\nBreakIterator wordIterator = BreakIterator.getWordInstance();\nwordIterator.setText(text);\nStringBuilder res = new StringBuilder(text.length());\nint start = wordIterator.first();\nfor (int end = wordIterator.next(); end != BreakIterator.DONE; end = wordIterator.next()) {\n  String word = text.substring(start, end);\n  if (Character.isLetterOrDigit(word.charAt(0))) {\n    res.append(Character.toUpperCase(word.charAt(0)));\n    res.append(word.substring(1).toLowerCase());\n  } else {\n    res.append(word);\n  }\n  start = end;\n}\nLog.d(\"test\", res.toString());\n```\n(based on https://stackoverflow.com/a/42219474)\nMight be nice to also add some more complex test cases like this. Could be a good candidate for some unit tests too.. Delete instead of commenting out.. Could we use executeOnExecutor (https://developer.android.com/reference/android/os/AsyncTask.html#executeOnExecutor(java.util.concurrent.Executor,%20Params...)) instead of execute and keep using GuardedAsyncTask instead?. We still need it for jest tests, I guess I could move it to dev deps. Oh that's strange. Thanks for investigating this!. I think we should change the type of value to be id on iOS or Object on Android. Then we can use instanceof checks in when we need to use the actual value.. Could you explain the changes and add a comment here that gives the overall flow of the following code. I think it would help understand what is going on.. Good point, I'll update it.. Thanks for adding this, took me a while to figure out what this was for when working on fixing textTransform.. If work queue cannot be null can we just remove this?. Should we check the stream status here before trying to close it like we do here https://github.com/facebook/react-native/blob/master/Libraries/WebSocket/RCTSRWebSocket.m#L1034\nMight be worth extracting to a shared method to safely close streams.. Are you sure about this?\nIf the root view covers the bottom half of the screen then it would be:\nassume windowInsets.top = 25 and windowLocation[1] = 300  initially\nMath.max(25 - ( windowHeight / 2), 0) -> Math.max(-275, 0) -> 0\nLet me know if there is something that could make the code clearer.. I think this is fine, do you have a case in mind where this would not work? I did test showing / hiding the navigation bar and it did work properly.. Yea I did not handle the case in the polyfilled version, I guess it can be done easily by checking the window flags. On a sidenote the iOS polyfill also doesn't handle this properly so it is partly why I didn't bother with it.. Ew, I'll look into this method to see if I can use this for the polyfill instead of using status bar / navigation bar dimensions.. Yea we should disable this rule for RNTester it uses inline styles everywhere. Can you add a comment here about -1 being the default platform duration since it's not super obvious from the code. Same thing for the other places this code is copied.. Could you extract transformDataType to NativeAnimatedHelpers and use it here https://github.com/facebook/react-native/blob/4148976a83ab96029de1b26b515ff95d3cb58c10/Libraries/Animated/src/nodes/AnimatedInterpolation.js#L356 also.. Yea sounds good, the main thing that is nice to extract out to be able to re-use is the deg to number conversion part. \ud83d\udc4d . The reason for not having it inside AppContainer is that it is also used in modal here https://github.com/facebook/react-native/blob/007e00fa70d0e1d69f7148e901790d2092e15b8c/Libraries/Modal/Modal.js#L244. \ud83d\udc4d . Adding a useRootLayout hook sounds good, it think it will just be a simple wrapper around useContext.. Ok I've re-read your initial comment and it makes sense now. I still think using the same type is slightly clearer but either way works.. Makes sense, yea let\u2019s do this then this is good to ship!. Can you add a variable for effectiveTextAttributes to avoid computing it twice, looks like a pretty big getter https://github.com/facebook/react-native/blob/9d16ddf639056b2fc3ce2194e20ab658bcc0397b/Libraries/Text/RCTTextAttributes.m#L82 (I hate properties :)). Can you add a variable for effectiveTextAttributes to avoid computing it twice, looks like a pretty big getter https://github.com/facebook/react-native/blob/9d16ddf639056b2fc3ce2194e20ab658bcc0397b/Libraries/Text/RCTTextAttributes.m#L82 (I hate properties :)). same here. same here. ",
    "nmccready": "returns to avoid more nested if else when nothing is being done afterwards any how.\n. Why yargs is not being used in cli.js is beyond me when it is already a dependency.\n. Why yargs is not being used in cli.js is beyond me when it is already a dependency.\n. Example react-native run-android --open iterm\n. Example react-native run-android --open iterm\n. Can you be more explicit? The common use case can still be run. --open is not required whatsoever. Only used by power user if they want a different term.\n. Can you be more explicit? The common use case can still be run. --open is not required whatsoever. Only used by power user if they want a different term.\n. That sounds good to me.\n. That sounds good to me.\n. That is the way it was but people made comments to change it to this. So who the heck do I follow?\n. Copy paste error from PR comments. Which shall it be --open or --term?\n. @mkonicek I think I addressed your concerns. I rebased on top of latest.\n. ",
    "dmmiller": "You don't need this block, it does the exact same thing as the line below it.\n. Can you use defaultBoolean = true as well in the prop?\n. I'm not sure this will work, as it will only prevent events flowing to js, but the underlying scrollview will still process them and may thus allow scrolling.  Not sure, would have to try.\n. The two nested ifs should be on one line.\nif (mScrollEnabled && super.onInterceptTouchEvent(ev))\n. you can also do this on one line\nreturn mScrollEnabled && super.onTouchEvent(ev);\n. I think I would feel more comfortable if this were explicitly set to true.  Does ReactNative always call us if there is a default property?  Or is it always set in the js?  It doesn't look like it.\n. Can you type the promise with string?\nPromise?\n. There is code somewhere that does translation.  This is probably fine.\n. I like that idea @bestander.  I had had to write the if (arguments.length ...) code a few times and was looking for a better way.  I'd like to make sure we also keep the console.warn in there which contains the name.\n. copy/paste error.  This should be ReactHorizontalScrollView\n. We probably won't remove it then because we may have others that we will get to over time.  Maybe we should pass the timeline in to the deprecatedCallback explicitly and add it to the warning that is output.\n. I'd prefer early return.\nif (callbacks.length === 0) {\n    return promise;\n  }\nrather than long indentation.\n. Is throw the right thing to do here?  Or should we just silently swallow it or maybe console.warn that the user had an error they are ignoring?  Throwing will potentially change behavior which we don't want to do.\n. From looking up a few lines, it looks like there is a RequestBodyUtil.getEmptyBody which basically does this but might be a better call.  Then you won't have to add the import as it will hide behind something we already do.\n. Yea, I'd just rather not commit us to a particular time frame on the utility function.  We may need something like this later for other things.\n. I agree with @lexs \nIf you are going to have a comment, a better one is closer to what was there before and say we default to an empty body \n. should say notification.dismiss()\n. Should this be NotificationAndroid.android.js and should we add a .ios.js that is not implemented rather than just marking all the methods below as @platform android?\n. Oh, actually this file should probably go away since you have a NotificationAndroid under Libraries/Notification and also one below under Libraries/NotificationAndroid but same question applies below.\n. Should you use the same NOTIFICATION_ID every time?  Do you want to bump it each time?  If the tag is not specified you will end up having two notifications with the same (tag, id) pair which is not good.\n. The comment indicates error first but the case indicates value first. \n. Can the TAG const go away now?  I think you removed the only two calls to it.\n. Oops, this is not a class specific TAG it is the general TAG we use all over.  Never mind.\n. You should probably say that this has customType=\"color\" as well.\nI'm not sure if defaultInt will keep null from actually showing up.  If null does show up or defaultInt you probably need to set it back to whatever it was before.\n. This seems like it does nothing.\n. This needs parenthesis, it is a little hard to read.  Or indentation.\n. Shouldn't this be value[some index] instead of hardcoded to 9-12?\n. Can you remove the defaultInt and check one thing for me?  If you set the color to something and then you rerender with no color set, does it revert back to the proper color?\n. Can you remove the defaultInt and check one thing for me?  If you set the color to something and then you rerender with no color set, does it revert back to the proper color?\n. If you leave the defaultInt bit in, does it then work?\n. If you leave the defaultInt bit in, does it then work?\n. We need to figure that out before we can take it.  It's possible for people to want to change their color and then back.  You could also look at why the color that works via spans doesn't for password colors.\n. We need to figure that out before we can take it.  It's possible for people to want to change their color and then back.  You could also look at why the color that works via spans doesn't for password colors.\n. Love the new test!  Thanks for adding one.\n. Love the new test!  Thanks for adding one.\n. Thanks for cleaning this, but this is really orthagonal.  Want to put up a quick PR to fix these and then I can accept and then this one will be easier to read?\n. Thanks for cleaning this, but this is really orthagonal.  Want to put up a quick PR to fix these and then I can accept and then this one will be easier to read?\n. Thanks!\n. Given that this code is presumably copied from ReactTextShadowNode, would be nice to either factor into a common place they can both use or at least make a comment indicating that (probably in both places so that if someone updates one they know to update the other)\n. Same\n. Same\n. nit: remove the extra line\n. nit : extra line\n. Should you remove the Todo comment?\n. Should you remove the Todo comment?\n. why exact- instead of exact_ \n. why exact- instead of exact_ \n. why [0] after taking the slice?\n. why [0] after taking the slice?\n. Would be nice to include directions of how to do that.\n. Would be nice to include directions of how to do that.\n. I think you mean to remove this line from the comments above.  You removed it from the selectTextOnFocus property\n. I think you mean to remove this line from the comments above.  You removed it from the selectTextOnFocus property\n. Is this the right call?  This certainly will update the EditText, but will it properly update js?\n. Is this the right call?  This certainly will update the EditText, but will it properly update js?\n. This is just a straight copy of Android (http://developer.android.com/reference/android/os/Vibrator.html#vibrate(long[], int))\nThat said, I tend to agree.  I wonder if we should do just a boolean for repeat or not, and not allow for the direct indexing into the pattern for repeat.\n. This is just a straight copy of Android (http://developer.android.com/reference/android/os/Vibrator.html#vibrate(long[], int))\nThat said, I tend to agree.  I wonder if we should do just a boolean for repeat or not, and not allow for the direct indexing into the pattern for repeat.\n. Yep, that was my point :)\n. Yep, that was my point :)\n. should be removed\n. should be removed\n. Despite not being alphabetical, our convention is to leave these at the top.\n. add a default case probably that sets it to DONE\n. I'm not sure we want to do special handling on this.  Or at least do it as a separate request.\n. Ok, that seems reasonable then.  That we eat the default behavior.\n. Yes, because it may have been set to something else and then later set back to garbage and we shouldn't allow that.\n. @nicklockwood Does iOS support a generic label for the enter key?\n. The other option is to let the default call view.setImeActionLabel with the value.\nThen we might be able to get rid of returnKeyLabel\n. Is this fixed on Android? \n. Is this fixed on Android? \n. I think you can remove the import for OkHttpImagePipelineConfigFactory.\n. I think you can remove the import for OkHttpImagePipelineConfigFactory.\n. @andreicoman11 is this the preferred time data that we want to use?\n. @andreicoman11 is this the preferred time data that we want to use?\n. Is all this code basically just the fetch method from OkHttpNetworkFetcher just so we can inject headers?  Or do you do something fundamentally different?\n. Is all this code basically just the fetch method from OkHttpNetworkFetcher just so we can inject headers?  Or do you do something fundamentally different?\n. This comment probably needs to be updated.  Since do nothing now looks like doing something.\n. This comment probably needs to be updated.  Since do nothing now looks like doing something.\n. You can't get rid of this.  We use this internally in apps.\n. Is this correct?  Didn't we know switch from nano to milli?\n. Is this correct?  Didn't we know switch from nano to milli?\n. should be effectiveLineHeight\n. should be effectiveLineHeight\n. This shouldn't happen here.  It should be adjusted in native code like we do all other measures\n. ",
    "notj": "I was wondering where would I put that, thanks, I have added this to the latest commit\n.\n. I surrounded the block by the scrollenabled check in the lastest commit \n. ",
    "ahanriat": "@ide good idea, and this way I can leave the engines to \"node\": \">=4\"\n. Sure I will :) \nI didn't manage to resolve to package.json using require.resolve options, so I have to propositions:\n- not very pretty..., replace theindex.jsin the string returned by the require.resolve withpackage.json- try both paths'../node_modules/babel-core/package.json'and'../../node_modules/babel-core/package.json'and select the existing one\n. @maksimr thanks !\n. Size of navbar + status bar \ud83d\ude09 \n. I'm wondering if we should or not add a default value forgestureResponseDistance` with vertical direction\n. ",
    "Bhullnatik": "I'm not sure if it's a good solution (and very close to your first option) but\njs\npath.join(require.resolve('babel-core'), '../package.json'),\nworks fine on npm3.\n. I'm not sure if it's a good solution (and very close to your first option) but\njs\npath.join(require.resolve('babel-core'), '../package.json'),\nworks fine on npm3.\n. I left the IME_ACTION_DONE in the createViewInstance(). Is it still necessary to add the default case?\n. Special handling allows us to use PREVIOUS/NEXT. Without that, Android will try to call the default behavior on these actions (moving to the previous/next focusable view), which was way too unstable for React Native.\nNot a great lose, but one of the most expected icon I suppose.\n. That was exactly my first idea and how my code was arranged in my v1. I didn't like the propType definition then (could be any string on Android but if you specified a string in a specific enum it was not the same behavior, and only an even more diverse enum on iOS). I would be fine either way, or even if it's possible to do something like that on iOS too.\n. ",
    "maksimr": "@Bhullnatik you can simple write require.resolve('babel-core/package.json') it works fine for npm@2.x and npm@3.x\n. @Bhullnatik you can simple write require.resolve('babel-core/package.json') it works fine for npm@2.x and npm@3.x\n. path.join does not needed if we use require.resolve\n. path.join does not needed if we use require.resolve\n. ",
    "Salakar": "@ide bind is used all over this file, zero arrow functions, surely keep it the same?\n. Ah, I could not find where it had moved to as per my comment in the PR. Will update \ud83d\udc4d . Agree, should be switching over to the release version of v7 - I had to add these in at a fixed version to align with metro's version of babel/core - once metro has been updated to use Babel 7 then all of these except for @babel/core can be removed.\nmetro-react-native-babel-preset's Babel packages would also need updating to the same version of Babel as used here and in metro - to avoid random bugs/issues.\nhttps://github.com/facebook/metro/blob/master/packages/metro-react-native-babel-preset/package.json - still using beta.56 - I can PR over an update to switch these to v7.0.0 if you'd like?. babelrc: false was added so that the babel.config.js file is ignored by the jest preprocessors transform logic in this file - this babel config file is only needed for local-cli whilst running inside CI  & local tests. \nThe jest preprocessor requires it's own babel plugins here: https://github.com/facebook/react-native/blob/3af30dfcc73a8fb879c55e573b4072b2f591b33c/jest/preprocessor.js#L65 - so we don't want the babel.config.js file to interfere with this otherwise it loads RN specific Babel plugins and causes all sorts of havoc.. Ooo noice, missed that one - ok is it worth merging this on beta.56 (after I sort below changes though) to get build/CI working as is - then once that metro PR is landed and published to NPM I can drop another PR here to update it to the latest versions.\nOr we can just wait for metro to be updated - is another option \ud83d\ude43 . ",
    "Ehesp": "@ide updated... Was going to initially, saw other binds in the file doing the same thing so went with that syntax.\n. @ide updated... Was going to initially, saw other binds in the file doing the same thing so went with that syntax.\n. @SandroMachado Please see https://github.com/facebook/react-native/pull/10867 . @SandroMachado Please see https://github.com/facebook/react-native/pull/10867 . @studio3w please advise ^^. @studio3w please advise ^^. ",
    "asmockler": "Omitted break; before default so that perspective would still run through the number test.\n. Added the number check to the perspective case.\n. This could cause a divide by 0 error\n. Sounds good. Sometimes the value will unintentionally pass over 0 during an animation, but I agree this is probably not the time or the place to handle for that. Just thought I would mention it. Thanks :) \n. ",
    "aflanagan": "yup, i like the idea of allowing any value. I had just named it scrollDecelerationRate locally as well :) \nWill have this updated shortly.\n. ",
    "andybb": "Is this needed?\n. Better now?\n. ",
    "seidtgeist": "@yelled3 No worries, thanks for the notice. I'll take care of it next time I work on this :) Actually didn't update the PR :)\n. @sahrens Seems like I haven't fully understood how to implement a controlled prop. Thanks for pointing that out. This might also be the cause for selection's value fluctuating between multiple values the last time I tried this. I do still think normalizing the single line & multiline selection events would be necessary before providing a means of setting the selection, but that's more related to the PR in general, not this comment. Thanks again.\n. ",
    "dickeylth": "@nicklockwood, thank you for your review, I'll update the code.\n. ",
    "mtostenson": "Heh, that's a really good idea.\n. This is a good idea, do you have a recommendation for where this deprecatedPropType method should go so that any component can access it?\n. Sounds good to me, I'll leave the warnings as they are for the now.\n. ",
    "AndrewJack": "This will not work, because when a product flavor does not exist the build type should not be capitalized.\n. @martnu In groovy aString == true will evaluate to true if not null or empty.\ngroovy\nif (aString) {\n  print \"String not null or empty\"\n}\nhttp://groovy-lang.org/semantics.html#Groovy-Truth\n. It uses targetName to generate the task name:\n// Bundle task name for variant\ndef bundleJsAndAssetsTaskName = \"bundle${targetName}JsAndAssets\"\n. :+1: yep thats better. Are we going to use this PR or #5579 ?\n. The Pull request that you referenced referenced, works around the issue by removing the HTTP_2 protocol. \n. The react.gradle from node_modules should work when run via the command line ./gradlew assembleRelease.\nHowever it seems to skip the task when run through Android studio, I think it's occurs when the gradle daemon is enabled (which is enabled by default when running in Android studio).\nI'll see if I can find some time to look into this.\n. Use Build.VERSION_CODES for api levels\nBuild.VERSION_CODES.JELLY_BEAN == 16\nBuild.VERSION_CODES.KITKAT_WATCH == 20 - maybe use KITKAT (v19) with a <= for readability\n. do we need this link?\n. The sendPing public API has been removed, 3.5.0 does automatic pings.\n\n\nWe can hide the API iff we ship with auto-pings. i'm still willing to bet exposing it is the first issue filed after the release though.\nhttps://github.com/square/okhttp/issues/2902#issuecomment-253106088\n\n\nAlso this: https://github.com/square/okhttp/issues/2239. This is just the same as:\ndef devEnabled = !(config.\"devDisabledIn${targetName}\"\n        || targetName.toLowerCase().contains(\"release\"))\nproductFlavorName is an empty string if no flavors are specified, making targetName the same as buildTypeName\nCould you remove line 80?. AsyncStorage Uses SQLite which saves to the app's local storage which doesn't require a permission.\nHowever CameraRoll will require READ_EXTERNAL_STORAGE (for getPhotos) & WRITE_EXTERNAL_STORAGE (for saveToCameraRoll). Don't think so, this prevents anyone from connecting while it's already connected. ok, I'll check that.. Could try JVM_OPTS: -Xmx3200m or larger if you've increased the size?\nhttps://circleci.com/docs/2.0/language-android/. ",
    "jaggs6": "+1\n. +1\n. Nope, Because it will use the targetName variable everywhere and not the sourceName one.\n. Nope, Because it will use the targetName variable everywhere and not the sourceName one.\n. Looks good. Let me test it.\n. Looks good. Let me test it.\n. @satya164 it looks cleaner on separate line.\n. @satya164 it looks cleaner on separate line.\n. yes. thanks\n. yes. thanks\n. ",
    "martnu": "@AndrewJack To me it seems that this if-statement is a noop, when will productFlavorName be false?\n. Won't this become the gradle task assembleflavorDebug when we want assembleFlavorDebug?\n. :+1: \n. Ok! What about\ngroovy\ndef targetName = \"${productFlavorName.capitalize()}${buildTypeName.capitalize()}\"\ndef targetPath = \"${buildTypeName}\"\nif (productFlavorName) {\n  targetPath = \"${productFlavorName}/${buildTypeName}\"\n}\nto make it more readable and if we're not using sourceName anymore?\n. ",
    "jerolimov": "Isn't it recommended to use the Alert module instead of the polyfil?\n. Ok, your decision. Revert or keep? :smirk: \n. Please note that this happen only if you change the internal code. This can not happen by any input from JSX. But I can change this when nothing other blocks this PR.. :+1: Will change it. Yep, that are different units. The problem is that the Android only supports the M-unit while iOS only supports points. Is it not possible (for me) to use the exakt same unit here. \ud83e\udd37\u200d\u2642\ufe0f. Like you, I would prefer option one.\nCan you help me to calculating the exact width of the letter M in a performant way?\nDid you see my current calculation in calculateLetterSpacing which is a \"high performant\" \ud83d\ude0f  way which calculates a good result in 90%... \ud83e\udd37\u200d\u2642\ufe0f. Like you, I would prefer option one.\nCan you help me to calculating the exact width of the letter M in a performant way?\nDid you see my current calculation in calculateLetterSpacing which is a \"high performant\" \ud83d\ude0f  way which calculates a good result in 90%... \ud83e\udd37\u200d\u2642\ufe0f. For example, when defining 5 as letter spacing, this means 5 points on iOS.\nWith the current implementation this means \"letterSpacingInput / fontSize * 2f\" M on Android.\nWith a fontSize of 14 dpi this means ~0.71 M. And because the \"small M\" needs round about 8-10 dpi* from left to right this results in 5-6 dpis \"real letter spacing\" on Android. \nWith a fontSize of 28 dpi this means ~0.36 M. And because the \"bigger M\" here needs round about 16-20 dpi* from left to right this results in 6-7 dpis \"real letter spacing\" on Android.\nIn our case (and I think in many more cases) this is much better than no letter spacing. \ud83d\ude48 Also if I know, an addtional PR can improve this in the future. And I'm looking forward to anybody who can and will do this. S/he will get some free \ud83c\udf7b  from us, here in Cologne. \ud83d\ude04  \n*I does not measure the size exactly because it depends on the selected font family.. For example, when defining 5 as letter spacing, this means 5 points on iOS.\nWith the current implementation this means \"letterSpacingInput / fontSize * 2f\" M on Android.\nWith a fontSize of 14 dpi this means ~0.71 M. And because the \"small M\" needs round about 8-10 dpi* from left to right this results in 5-6 dpis \"real letter spacing\" on Android. \nWith a fontSize of 28 dpi this means ~0.36 M. And because the \"bigger M\" here needs round about 16-20 dpi* from left to right this results in 6-7 dpis \"real letter spacing\" on Android.\nIn our case (and I think in many more cases) this is much better than no letter spacing. \ud83d\ude48 Also if I know, an addtional PR can improve this in the future. And I'm looking forward to anybody who can and will do this. S/he will get some free \ud83c\udf7b  from us, here in Cologne. \ud83d\ude04  \n*I does not measure the size exactly because it depends on the selected font family.. ",
    "eadz": "haha. Yes I am new to this.\n. ",
    "prashanth1509": "```\n...\ncase 'success-first': var [success, error] = callbacks;\ncase 'error-first': var [error, success] = callbacks;\ncase 'node': var [success] = callbacks;\n...\n```\n. ",
    "jordanranz": "Yep, good call.\n. ",
    "yungsters": "} else {\n. Single quotes.\n. Actually, replace this entire block with:\nreturn this.substr(...) === arguments[0];\n. Nit: Can you fix the indentation here? (One too many spaces.). Ditto.. Nit: Space before />.. To follow conventions of the repository (especially since initializing BlobManager does not have side effects), can you hoist these inlined require statements into the module scope?. I don't see any reason for making data writeable. Why not make Blob write to _data directly and replace the data getter with a getData method?\nAlso, these methods cause the docblock for slice to be misplaced. Please fix.. If we remove the ability to mutate a Blob, can this just be a plain number property on each instance?. Ditto.. Typo here and on line 117.. Did you consider making addWebSocketHandler return a record of type {remove: () => void}?. Ditto. Did you consider making addWebSocketHandler return a record (or maybe even an instance of a Blob-over-WebSocket class) with a send(blob) method?. Mutating this.data seems a bit like a code smell even though we know that the parent is currently the only one instantiating and managing it. I don't have any suggestions, though.. Let's add an invariant that this.data.name is a string instead of defaulting to '' (if it's just to make Flow happy). If it is anything else, then some constraint was violated between the constructor and invocation of this method.. Ditto, this should just be an invariant that lastModified is a number (if it's just to make Flow happy).. Maybe also print out any useful debug information about this._response? Like its type?. Nice. I encourage you to add @format to this file, too.. Can you make this just require('BatchedBridge')?. Can you make sure to run Prettier over this file? I'm pretty sure this will be formatted with ); on the next line.. For explicitness, can you change this check to this._immediatesCallback != null?. Can you also add a Flow type for the member variable?\nShould be able to add this to below line 50:\n_immediatesCallback: ?() => void;. Also, you no longer need `let JSTimers = null;` in this file.. Can you avoid doing this if the polyfill is not needed (i.e. for versions of JSC where `Map` and `Set` are present)?. lol. Also, should this be in a new file/module that lives closer to `Map.js`?. This was a change to Haste (or `jest-haste[-map]`) about a year ago. It is configured to use file base names as haste identifiers instead.. Can you enable Prettier for this file with `@format`?.\n",
    "jesseruder": "We don't want to prioritize views with hitSlop. We just want to treat the views as bigger than they actually are so that you don't have to make your styles more complicated or wrap buttons with an extra View.\nIn [1] we would respect the ordering of the views - if Child1 is above Child2 it'd get the touch and vice versa.\nFor [2] this is the same behavior as when you extend Android touch areas with http://developer.android.com/reference/android/view/TouchDelegate.html. It is also consistent with the iOS portion of this PR.\n. Makes sense. I'll change that.\n. @kmagiera TouchDelegate is weird because it takes precedence over everything else (and also only applies to one child view unless you do extra work) so I think it's fine for hitSlop to work differently. I'll add more details to the comment to explain that. Thanks!\n. Yes\n. ",
    "DavidYKay": "Fixing.\n. Fixing.\n. Fixing.\n. Removing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. @satya164 I disagree. The official documentation didn't work for me. I had to run the packager separately to get it to work. Terminal 1: react-native start, Terminal 2: react-native run-android.\nLet me know what you wanna do about this.\n. @satya164 \nSymlink: My experience is that 14.04 provides /usr/bin/node using /etc/alternatives/node. I can verify this in a VM if need be.\nOther distros: I'm a huge fan of alternate distros, but I'd rather get Ubuntu published covered first then come back and patch this for Arch and Fedora. Let me know if this is OK.\n. Merging Platform & Prereqs.\n. I prefer to have one page for everything a beginner will need as it's confusing to jump back and forth in the middle. That is, if we can set this guide up to be entirely \"A\" then go follow guide \"B,\" or vice versa, great, but at the moment, It would be a an A-B-A sandwich, since the quick start does not get a user up and running on Linux, as noted in this comment.\n. Fixed.\n. I move both sections to after \"Setting up Device.\" Let me know if you need me to clean up my casual language.\n. Alright. \n. Verified that symlink is already provided.\nAdded link to NodeJS webpage.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Fixing.\n. Not the UDEV part. That's completely not covered and needs to be. adb devices verifies that UDEV worked.\n. Fixing.\n. Fixing.\n. The \"Installing React Native\" section? \nIf so, I agree and can make the change. But the Quick Start could use some other tweaks to be more friendly to Linux users. Right now, it's a bit Mac-centric.\n. Yes let me fix that.\n. ",
    "elliottsj": "Do other whitespace characters (e.g. \\t) need to be quoted as well? What if we simply quote all paths, regardless of whether they contain whitespace?\n. Should we use child_process.spawn here instead? If I'm not mistaken, child_process.exec will buffer the output of command, which might consume a lot of memory if command runs for a while.\n. I'd actually prefer this way (launchChromeDevTools(options.port);) since launchChromeDevTools() doesn't need any of the other options\n. Can you add some usage docs here for how to use process.env.REACT_DEBUGGER?\n. Okay, sounds good to me! Maybe clarify in the docs that the REACT_DEBUGGER command should exit quickly, so that the packager doesn't end up exec-ing many long-running child processes if launchDevTools is called many times.\n. It's the default limit of child_process.exec; can be configured with the maxBuffer option. Also see https://github.com/facebook/react-native/pull/5683#discussion_r52185544\n. ",
    "cosmith": "No, calling console.error in release mode only shows an error message in the logs.\n. ",
    "digeff": "child_process.exec uses a buffer of at max 200 kb by default, so I think this should be okay. We are planning on launching a small node process which will launch the real debugger in our case, so the 200 kb limit won\u2019t be an issue. Using exec also makes it easier to put a command in the environment variable, and execute it directly with exec. We'd have to transform the environment variable into two values, one for the command and one for the arguments to make it work with spawn, or we\u2019d be limited to just call and executable program without any custom parameters.\n. Yes, that's a good idea. Done.\n. Done!\n. Done!\n. Done!\n. Done!\n. Done!\n. Added this as an example:\n(e.g. If you set REACT_DEBUGGER=\"node /path/to/launchDebugger.js --port 2345 --type ReactNative\" then the command \"node /path/to/launchDebugger.js --port 2345 --type ReactNative /path/to/reactNative/app\" will end up being executed)\n. Added this as an example:\n(e.g. If you set REACT_DEBUGGER=\"node /path/to/launchDebugger.js --port 2345 --type ReactNative\" then the command \"node /path/to/launchDebugger.js --port 2345 --type ReactNative /path/to/reactNative/app\" will end up being executed)\n. @frantic What kind of paths do you think will break with this logic? I tested this with paths with spaces and some common symbols used in folders and it worked on both Mac and Windows.\nThe reason I think it's better to use exec is because to use spawn we'll need to parse the contents of the environment variable to split it into the command, and the array of arguments, and we'll need to implement some kind of parsing/escaping for the contents of the environment variable (In our prototype debugger we are passing 3 different folder paths in this environment variable as: \"path_to_node path_to_script path_to_debugger\"). So we'll still have an escaping/parsing issue if we go the spawn route. Here at least we can use quotes that seem to work for all the scenarios I've tested so far.\n. @frantic What kind of paths do you think will break with this logic? I tested this with paths with spaces and some common symbols used in folders and it worked on both Mac and Windows.\nThe reason I think it's better to use exec is because to use spawn we'll need to parse the contents of the environment variable to split it into the command, and the array of arguments, and we'll need to implement some kind of parsing/escaping for the contents of the environment variable (In our prototype debugger we are passing 3 different folder paths in this environment variable as: \"path_to_node path_to_script path_to_debugger\"). So we'll still have an escaping/parsing issue if we go the spawn route. Here at least we can use quotes that seem to work for all the scenarios I've tested so far.\n. @ide said: \"Debug JavaScript Remotely (or Debug JS Remotely if that string fits in the UI more nicely) sounds good to me. The \"remotely\" part is fairly important to make clear.\"\n@mkonicek Could you please agree with @ide on what string to use? I'm happy to change it to whatever you guys agree is clearer/better\n. @ide said: \"Debug JavaScript Remotely (or Debug JS Remotely if that string fits in the UI more nicely) sounds good to me. The \"remotely\" part is fairly important to make clear.\"\n@mkonicek Could you please agree with @ide on what string to use? I'm happy to change it to whatever you guys agree is clearer/better\n. ",
    "astuetz": "Good point, if it's fine for you I will remove SetIconSource and rename IconControllerListener.onDrawableReady to IconControllerListener.setDrawable which sounds better for all usages then.\n. Good point, if it's fine for you I will remove SetIconSource and rename IconControllerListener.onDrawableReady to IconControllerListener.setDrawable which sounds better for all usages then.\n. ",
    "djhi": "ok, I'll update this\n. ",
    "andreicoman11": "This should be more obvious to the reader, something like * NOTE * or even \"Experimental\" would help here\n. same as above\n. Sounds good, was just curios what the intent behind that style was. Lgtm!\n. Why is this needed?\n. Why is the promise final?\n. There should be a test for this, checking that: the intent is built correctly, the currentActivity starts the correct intent.\n. This is messy, please refactor.\n. Please add if statements for each Platform type.\n. nit: log exception\n. no tests? :(\n. Why does this live here instead of a module?\n. It looks like onActivityResults is also going through ReactInstanceManager, then I think this can follow the same route. Never mind, carry on.\n. I think this is good here. We should implement this for the new bridge as well (you can consider current bridge is deprecated). That would mean copying the code from ReactInstanceManagerImpl to https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/XReactInstanceManagerImpl.java.\n. nit: return; after Flog.w in order to simplify the else branch.\n. Whoah, you are adding a lot of complexity here. Can you please further elaborate on why this is absolutely necessary?\n. Why is this needed?\n. Why is this needed?\n. I don't understand why this is needed. Why would the app care if the user has shared or dismissed the dialog? If it goes in other parts of the app, those parts should know if a certain action happened or not.\n. Any reason why this is different from the way iOS handles selection? I'd prefer it to be the same.\nAlso, here end is selection.end which is null, while on iOS end is selection.start.\n. what does this do?\n. Sorry, I wasn't very clear, and maybe my JS knowledge isn't up to par here.\nI'm confused as to what \"multiline\" does here. Is it a prop? Is it a style? Is it necessary?\n. Why is this necessary?\n. I don't think this is needed here.\n. Doesn't this fit in one line?\n. This is missing the license header, mind adding this so we can land this change?. ",
    "lexs": "Please also kill this comment, no point in referring to closed issues.\n. This comment is still here, you can just remove it.\n. Can you add a warning for the error case (FLog.e). Somebody might try to use this method internally and be suprised about it not working.\n. Can you make this instead of using the string perhaps pass down the IOException? I'm not sure exactly what the exception type it'll be but perhaps SocketTimeoutException. Then just compare the getClass(). This avoids depending on an implementation detail somewhere setting \"timeout\" as the message.\nIt's probably easiest to split onRequestError() into two methods, one taking an error string and one taking an exception.\n. nit, you can consolidate these to something like _sendEvent(this.ontimeout) so you get rid of the duplication. then just call these from setReadyState()\n. Docs for @ReactProp says it can be a float but yeah, just test it and if it doesn't work don't worry about it and use float.\n. can you change this one too? or at least move the public to be at the beginning\n. Why do you use a factory instead of just having a list of ArgumentExtractors?\n. I think I'd prefer having this be provided with from a method instead? \nLike: List<ArgumentExtractor> getCustomExtractors()\nAlso define an extra class so we can tell the type from the extractor, something like:\nabstract class CustomArgumentExtractor<T> extends ArgumentExtractor {\n  Class<T> getSupportedType();\n}\n. Let's go ahead and change to using the method instead. I realize I feel strongly about this for a few reasons; even if I agree on that inheritance is not always a good solution, however in this case it's really implementing an interface (even if we provide a simplifying base class). The method also gives us more lazy behavior which is something were trying hard to move to, it also matches how this class already works.\n. ",
    "sreesharp": "@lexs I had updated the comment with \"similar to #3371\", so that others get the context why we are doing this change.\n. @dmmiller @lexs   Alright. I have removed that comment now :)\n. As per https://xhr.spec.whatwg.org/#the-responsetype-attribute, values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\". Hence I opted for string type.\n. Done.\n. Done.\n. Done.\n. Done.\n. 'response' is object type, and Flow was complaining about the string to object type mismatch.\n. Done.\n. Done.\n. Thanks. Updated the code.\n. Done.\n. Done.\n. ",
    "jimthedev": "\ud83d\udc4d\ud83c\udffd\nOn Fri, Feb 12, 2016 at 9:06 PM Janic Duplessis notifications@github.com\nwrote:\n\nIn local-cli/runAndroid/adb.js\nhttps://github.com/facebook/react-native/pull/5902#discussion_r52821952:\n\n@@ -0,0 +1,41 @@\n+/\n- * Copyright (c) 2015-present, Facebook, Inc.\n- * All rights reserved.\n- \n- * This source code is licensed under the BSD-style license found in the\n- * LICENSE file in the root directory of this source tree. An additional grant\n- * of patent rights can be found in the PATENTS file in the same directory.\n- /\n  +\n  +var child_process = require('child_process');\n\nYou can use es6 const/let especially in new code, prefer const when\npossible.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/facebook/react-native/pull/5902/files#r52821952.\n. Oh goodness. Thanks.\n. Thanks, will do.\n. You are correct. I'll make this change.\n. Good idea. I'll work this in.\n. Good idea. I've changed much of the strings in this file to use template literals. The only ones I didn't change were long multiline strings that would have needed dedentation in order to not look screwed up in the console.\n. e.g. \n\nif(thereAreErrors) {\n  let error = `I am a long multiline \nerror there are multiple lines.\nsksksmfskdmf`;\n}\n. ",
    "xcarpentier": "@chirag04 thanks !\nIt's fixed.\n. @chirag04 thanks !\nIt's fixed.\n. ",
    "icodethings": "@grabbou I was going to do that, but I was thinking about leaving it in there to make sure people can identify exactly what simulator is launched. Just incase you have, let's say, two iPhone 6 (iOS 9.2) setup.\nThoughts?\n. @grabbou I was going to do that, but I was thinking about leaving it in there to make sure people can identify exactly what simulator is launched. Just incase you have, let's say, two iPhone 6 (iOS 9.2) setup.\nThoughts?\n. @frantic Each one of these JSON blobs are unique to each test. I was thinking it'd be easier to read if each of them were inside the test. Thoughts?\n. ",
    "axelander": "Yes, this line could probably be removed, at least if NO_GRAVITY is the default behaviour.\n. No sorry, horizontal gravity should be reset here and or:ed with current gravity.\n. :ok_hand: \n. ",
    "ywz2010": "b is better, so change the Byte to b\n. ",
    "Thomas101": "I don't think getSettings does return null. setDomStorageEnabled does pretty much the same thing and doesn't check for example\n. ",
    "alloy": "There\u2019s no such xcode project, so this script failed to run. Or is that auto-generated somewhere that I overlooked? (Couldn\u2019t find anything about it in the docs.)\n. There\u2019s no such xcode project, so this script failed to run. Or is that auto-generated somewhere that I overlooked? (Couldn\u2019t find anything about it in the docs.)\n. Hah, yeah, totally agreed, I made it reflect the code in setFrame:forView:, which clearly since then has been updated to also remove the \u2018root\u2019 part and I just didn\u2019t see that after rebasing. Will update.\n. Hah, yeah, totally agreed, I made it reflect the code in setFrame:forView:, which clearly since then has been updated to also remove the \u2018root\u2019 part and I just didn\u2019t see that after rebasing. Will update.\n. Not a biggie, but I\u2019m unsure what the point is of the extra ternary. Right now it reads to me like: if the result of converting is nil return nil instead.\n. Are you sure that you want to clear the badge number if the entry was not included in the payload? That would make it effectively impossible to not touch the badge number with a payload.\n. Reading the documentation added to the JS file, that does not appear to be the intention, so this should be more like:\nobjc\nif (details[@\"applicationIconBadgeNumber\"] != nil) {\n  notification.applicationIconBadgeNumber = [RCTConvert NSInteger:details[@\"applicationIconBadgeNumber\"]];\n}\n. Should probably be a BOOL.\n. Should probably be a BOOL.\n. Same here (BOOL).\n. Same here (BOOL).\n. Small stylistic comment:\nobjc\n- (NSDictionary<NSString *, NSNumber *> *)getMetadataForImage:(id)imageOrData\n{\n. Small stylistic comment:\nobjc\n- (NSDictionary<NSString *, NSNumber *> *)getMetadataForImage:(id)imageOrData\n{\n. Is this the convention that the RN source uses to check for nil and a string not being empty?\n. Is this the convention that the RN source uses to check for nil and a string not being empty?\n. Judging by the preceding notification handlers, dot-notation is preferred: notification.userInfo.\n. Judging by the preceding notification handlers, dot-notation is preferred: notification.userInfo.\n. This name doesn\u2019t really read nicely. What about a name like remoteNotificationsRegistrationError (and in all other places in the code) ?\n. This name doesn\u2019t really read nicely. What about a name like remoteNotificationsRegistrationError (and in all other places in the code) ?\n. Add a space between if(.\n. Add a space between if(.\n. Maybe combine these into a single if (view && ancestor) { \u2026 } ?\n. Is a separate function really necessary?\n. Is this number arbitrary and, if so, why is it needed at all?\n. Ah, I see the same magic number above. I guess there\u2019s a reason then \u00af(\u30c4)/\u00af \n. return ancestor == shadowView ?\n. That\u2019s totally fair. I\u2019m just providing some general code feedback, following existing styles is definitely a good choice \ud83d\udc4d \n. It\u2019s more usual to use id instead of NSObject as type.\n. It\u2019s more usual to use id instead of NSObject as type.\n. Best to avoid property access in dealloc and instead access the ivar directly.\n. Best to avoid property access in dealloc and instead access the ivar directly.\n. Ah, my bad \ud83d\udc4d \n. Ah, my bad \ud83d\udc4d \n. Maybe this can be made slightly more helpful by mentioning that this can be used in combination with --transformer to process other file types?. Maybe this can be made slightly more helpful by mentioning that this can be used in combination with --transformer to process other file types?. @ide Yeah you\u2019re totally right that the code should match what\u2019s being used in the tests, but I was under the impression that Yoga moving to an official podspec was paving the way for us to make using both RN and Yoga as dependencies of our apps nicer.\nI.e. I would really like to have the choice to have flattened transitive dependencies in my app, no duplications (smaller binary size), and less dealing with possible duplicate symbols and what not.\n@emilsjolander do you know if that was/is not the case?\n\nNonetheless, as it stands, the code is indeed out of sync, I should have noted that.\n\nThe code vendored in RN is this Yoga version.\nThe published v1.0.0 of Yoga is this newer revision.\n\nSo if this were to be used, either the version in 1 needs to be published as e.g. Yoga v0.9, or the vendored code in RN should be updated to the version in 2.. @ide Yeah you\u2019re totally right that the code should match what\u2019s being used in the tests, but I was under the impression that Yoga moving to an official podspec was paving the way for us to make using both RN and Yoga as dependencies of our apps nicer.\nI.e. I would really like to have the choice to have flattened transitive dependencies in my app, no duplications (smaller binary size), and less dealing with possible duplicate symbols and what not.\n@emilsjolander do you know if that was/is not the case?\n\nNonetheless, as it stands, the code is indeed out of sync, I should have noted that.\n\nThe code vendored in RN is this Yoga version.\nThe published v1.0.0 of Yoga is this newer revision.\n\nSo if this were to be used, either the version in 1 needs to be published as e.g. Yoga v0.9, or the vendored code in RN should be updated to the version in 2.. > Getting releases in sync will be very hard.\nOh, bummer, I thought that cutting Yoga releases wasn\u2019t a big deal \u201cIf you need a new release to be cut please file a task.\u201d\n\ncould we have the podspec in the dirsynced folder so we can reference the included copy?\n\nYou mean that users would add that to their Podfile separately? Because I don\u2019t see a way to reference it from RN\u2019s podspec \ud83e\udd14 . You mean you would add subfolders but not include them with the same path, but rather all under the \u2018namespace\u2019?. Took a quick look at using the vendored Yoga code, alas this is not going to work well right now due to https://github.com/CocoaPods/CocoaPods/issues/6440. I think settling on the same systems is going to be a hard sell. If I understand it right, there\u2019s the following types of consumers:\n\nFB engineers, I assume they use Buck\nOSS CP users\nOSS npm users\n\nWhat\u2019s most important is that they can all know, at release time, what the right version is, no? So some metadata about the Yoga commit/tag that\u2019s being used is the main requirement. This could be a file next to the vendored code, or maybe something like a git subtree (assuming that git records metadata about these like with subomdules, but I\u2019ve never used them).\nThe same applies to other parts of RN, btw, like the snapshot (image) testing module. The way it\u2019s currently included makes it hard to integrate with apps that use FBSnapshotTestcase directly.. This version of the spec uses POD_TARGET_SRCROOT, which is a CocoaPods 1.2.0 only feature. I'll have another think when finalizing it.. Alas, this is definitely the better fix for the majority of people. However, you could probably replace the $(POD_TARGET_SRCROOT) parts with $(SRCROOT) and point it to where your RN source lives relative to the Xcode source root.. ",
    "mroswald": "Shall I change that?\n. Shall I change that?\n. I didn't change anything here besides spaces ;-) But I can change the text in this PR anyway\n. I didn't change anything here besides spaces ;-) But I can change the text in this PR anyway\n. I'd suggest to discuss the change for android in another PR. There is already a parameter \"root\", which seems to do the same job. Maybe we just rename it or add an alias (for backwards compability). Also we have no working sample app for android which is runnable via run-android (needs a android/gradlew file?).\n. I'd suggest to discuss the change for android in another PR. There is already a parameter \"root\", which seems to do the same job. Maybe we just rename it or add an alias (for backwards compability). Also we have no working sample app for android which is runnable via run-android (needs a android/gradlew file?).\n. This depends strongly on your system (only macbooks on wifi, right?). And if you assume that you're on a mac, you could just use ipconfig getifaddr en0\n. This depends strongly on your system (only macbooks on wifi, right?). And if you assume that you're on a mac, you could just use ipconfig getifaddr en0\n. @chirag04 Yeah, I thought about that and it makes sense in the most cases in which you need the bundle. But for react-native start it's false and I wanted to keep the behaviour consistent. Adding this to the react-native-xcode.sh seems a better practice\n. Yes, that's the tradeoff :-) I will check if we can get it elsewhere, but it depends on the chosen scheme and therefore we have to read it from the xcode project (which is possible, somehow).\nThe other option would be to use spawn (async) and wrap it with something that makes it async. Then we could show the output directly and save it to a variable at the same time.\n. Yes, that's the tradeoff :-) I will check if we can get it elsewhere, but it depends on the chosen scheme and therefore we have to read it from the xcode project (which is possible, somehow).\nThe other option would be to use spawn (async) and wrap it with something that makes it async. Then we could show the output directly and save it to a variable at the same time.\n. @javache sure! As you can see I'v only changed the spawnSync of xcodebuild to spawn, added eventlisteners for data and exit and changed the way the promise of runIOS is resolved.\n. @javache sure! As you can see I'v only changed the spawnSync of xcodebuild to spawn, added eventlisteners for data and exit and changed the way the promise of runIOS is resolved.\n. You're right. Good catch, didn't even notice the unnecessary newlines in this huge log :-) I will fix it\n. You're right. Good catch, didn't even notice the unnecessary newlines in this huge log :-) I will fix it\n. @javache  done\n. @javache  done\n. done\n. done\n. please remove this empty line\n. indentation seems wrong\n. please be consistent: \"Max's iPhone\" in both cases\n. Maybe add a check if ios-deploy is installed. If not, suggest to install it. Even better would be to add it to the dependencies, but as we have seen that throws errors on non-osx machines\n. Maybe add a check if ios-deploy is installed. If not, suggest to install it. Even better would be to add it to the dependencies, but as we have seen that throws errors on non-osx machines\n. ",
    "mpretty-cyro": "@nicklockwood Wasn't compiling without them.\n. ",
    "Sunakujira1": "@hedgerwang I am not familiar with how the navigator will look in future, but for current, I needed this feature for my certain use case. I see some other questionable things about navigator, and I hope they get fixed in future as well.\n. ",
    "caabernathy": "Remembering this better, when the initial props come in and we try to set the navigation state this doesn't happen as the initial state is being set at the same time by the normal app set up. This is a race condition that the setTimeout helps avoid.\nI'll put this note in the code as well and rename.\n. Could be either/or. Sometimes it's a more generic thing being discussed. In this case not.\n. Good catch!\n. Nit: align-self for consistency with other changes you've made.\n. Delete word \"parameter\" seems like a typo.\n. It would be nice to say a little bit more about flex but not sure what. Perhaps more about what the positive number means.\n. Nit: wrap justifyContent here in code.\n. Perhaps an actual link to the file in code?\n. Minor, but it may be worth mention that you can use any key to distinguish your scene. In your case you just happened to pick \"title\"\n. I'd avoid images at all costs for future maintainability. If you can say it with simple words, use that.\n. ",
    "sooth-sayer": "@dmmiller Could you explain in more detail about defaultInt?\n. @dmmiller If i set the color and then rerender without color, it fails with \"Error while updating property 'color' of a view managed by: AndroidTextInput\"\n. No. it fails regardless of defaultInt presence\n. ",
    "kenwheeler": "@nicklockwood Updated. Sorry about that, my javascript is showing :)\n. @nicklockwood Updated. Sorry about that, my javascript is showing :)\n. ",
    "farwayer": "\nCan getTopLevelDrawable return null?\n\nNo, it can't. Root drawable in DraweeHolder exists all time.\n\nWhat is true, true?\n\nFirst true turn on visibility. There is no effect If drawable is already visible. Second true resets drawable animation to start. Although animations is not enabled now it can be turned on in future (with one line). Param has no any effect for now.\n\nAh so uri being null in a previous call makes this invisible?\n\nSystem calls setVisible() of Drawable with false if you set logo or icon to null. And then if you set uri to valid path then Drawee will not trigger image fetch request.\n. ",
    "gre": "note to myself: need to getDouble for width/height. and do a PixelRatio conversion in uiimplementation (or somewhere before the snapshot class)\n. yes it's explained here: http://facebook.github.io/react-native/docs/image.html#resizemode. ",
    "geirman": "Ok, I'll think on this more\n. sure, I'll give it more thought\n. I do, unless you know something I don't. I stringify there to avoid having to do it below, and I AsyncStorage only stores stringified values, else it errors. Or am I missing something?\n. I'm not too familiar with flow types. I've tried fun and function but those cause errors. What should this type be?\n. I'm not too familiar with flow types. I've tried fun and function but those cause errors. What should this type be?\n. I'll add a space, and will also remove the superfluous console.log statement on the next commit. \n. I'll add a space, and will also remove the superfluous console.log statement on the next commit. \n. @rops thanks, no doubt that's possible... but it's all still a mystery at the moment since I've not yet dug into flow. I've updated the argument per your direction and that seems to have done the trick. Thanks!\n. @rops thanks, no doubt that's possible... but it's all still a mystery at the moment since I've not yet dug into flow. I've updated the argument per your direction and that seems to have done the trick. Thanks!\n. I don't understand this complaint \ud83e\udd14\n. I don't understand this complaint \ud83e\udd14\n. Ah, that makes sense! \n@zongjingyao will you please update so that it passes lint?\n. Ah, that makes sense! \n@zongjingyao will you please update so that it passes lint?\n. I trust your opinion, but gestureState is passed along as the second param... so isn't it better to document it? . I trust your opinion, but gestureState is passed along as the second param... so isn't it better to document it? . Good point, maybe I should move the example to onPanResponderMove... or add another?. Good point, maybe I should move the example to onPanResponderMove... or add another?. Ok, done! I left the example for onScroll too. Can only help, right?. Ok, done! I left the example for onScroll too. Can only help, right?. ",
    "axemclion": "@mkonicek Jordan suggested that, but looks like @frantic suggested we go the debug-hub route for now. Attaching to JSC for Android may also require us to tweak the JSC .so that is shipped with ReactNative. \n. Looks like this line is starting to cause IllegalStateException  in apps- \nCaused by: java.lang.IllegalStateException: Calculated frame index should never be lower than 0\n    at com.facebook.react.animated.FrameBasedAnimationDriver.runAnimationStep(FrameBasedAnimationDriver.java:60)\n    at com.facebook.react.animated.NativeAnimatedNodesManager.runUpdates(NativeAnimatedNodesManager.java:444)\n    at com.facebook.react.animated.NativeAnimatedModule$1.doFrameGuarded(NativeAnimatedModule.java:100)\n    at com.facebook.react.uimanager.GuardedFrameCallback.doFrame(GuardedFrameCallback.java:29)\nIs there a reason why timeFromStartMills will be negative ? The exception seems to have started with this PR merged in. ",
    "pglotov": "Sure, will do it later today.\n. Sure, will do it later today.\n. Created PR for path changes here.\n. Created PR for path changes here.\n. Good catch.\n. Good catch.\n. ",
    "jordansexton": "@pglotov Possible issue based on my reading of the source here. The semantics of onShouldStartLoadWithRequest are that if a true value is returned, the WebView should handle the request, whereas the semantics of shouldOverrideUrlLoading are the same if a false value is returned. It seems to me that this line should be changed to:\njavascript\nvar shouldOverride = !this.props.onShouldStartLoadWithRequest(event.nativeEvent);\n. ",
    "jeffmo": "Time to delete this comment?\n. Time to delete this comment?\n. Yay lint! I forgot to delete this extra type param while poking around\n. Yay lint! I forgot to delete this extra type param while poking around\n. Good catch\n. Good catch\n. ",
    "jeffchienzabinet": "Gotcha, updated.\n. Gotcha, updated.\n. Ah good catch, updated.\n. Ah good catch, updated.\n. ",
    "rops": "_renderRow: function(rowData: string, sectionID: number, rowID: number, highlightRow: (sectionID: number, rowID: number) => void)\n. you can also run flow yourself to check if the types are ok\n. ",
    "jlyman": "I debated the same thing about the back button, and ended up doing it for completeness but would be fine excluding such a change.\nAs for the necessity of defaultStyle, requiring the dev to dig into the source to know that NavigationCardStackStyleInterpolator is required to be part of it in order for the animation to work is kind of a high bar, and will be the source of many questions as to \"why is my push/pop not animating?\" Combining the two at the lower level will lead to less questions, and it can still be overridden as written.\nHowever, I did realize that the if (style === undefined) is unnecessary, so I'm going to take that out.\n. I like that unification. Would you suggest we hold off on this particular change until that is in place? Or since it isn't directly affecting that we go with it for now?\n. I'm fine with that and I'll close the PR for now .\nETA on when the unified API will be in master/can you ping me when it is?\n. ",
    "dgladkov": "I did not test if onChange is fired and forgot to test controlled TextInputs behavior, will do that. Thanks for the suggestion!\n. I did not test if onChange is fired and forgot to test controlled TextInputs behavior, will do that. Thanks for the suggestion!\n. Shouldn't there be \\n at the end of the patch string?\n. Shouldn't there be \\n at the end of the patch string?\n. ",
    "CntChen": "Thanks for your suggest. I had updated codes.\n. ",
    "solomonhawk": "When duck-typing Promises, I'm used to seeing: \njs\nif ('then' in thing && typeof thing.then === 'function') { .. }\nShould this be checking whether valueOrPromise.then is a function rather than valueOrPromise directly?\nApologies if I'm overlooking something here.\n. ",
    "prometheansacrifice": "@satya164 Just thought verbosity would be better :)\n. ",
    "mikemonteith": "PropTypes work but the website doesn't pick them up. Shall I duplicate the propType in the Touchable* and also leave it in the Touchable.Mixin?\n. PropTypes work but the website doesn't pick them up. Shall I duplicate the propType in the Touchable* and also leave it in the Touchable.Mixin?\n. No it should just be android. Should I add a Platform.os === 'android' check here?\n. No it should just be android. Should I add a Platform.os === 'android' check here?\n. ",
    "cpunion": "\nI think this is the single required change to make this work but I'm not sure what would be the best way to support this feature without affecting HMR performance.\n\nThe changes of other two files(RCTDevMenu.m and DevServerHelper.java) avoid the clients process both onchange and HMR, because clients can enable live reloading and hot reloading.\nThanks for your point, I tested competition, HMR first and Live Reload first, every are not good, just worked.\nIs it possible to bundle once for Live Reload and HMR? or more common works to reduce bundle time? I can't handle this topic, I don't know details of how packager/bundler works yet.\n. > I think this is the single required change to make this work but I'm not sure what would be the best way to support this feature without affecting HMR performance.\nThe changes of other two files(RCTDevMenu.m and DevServerHelper.java) avoid the clients process both onchange and HMR, because clients can enable live reloading and hot reloading.\nThanks for your point, I tested competition, HMR first and Live Reload first, every are not good, just worked.\nIs it possible to bundle once for Live Reload and HMR? or more common works to reduce bundle time? I can't handle this topic, I don't know details of how packager/bundler works yet.\n. @martinbigio Thanks for your explain clearly. I think if HMR works fine and can replace Live Reload, we no longer need Live Reload. Yes, it seems an edge case.\nThanks again.\n. @martinbigio Thanks for your explain clearly. I think if HMR works fine and can replace Live Reload, we no longer need Live Reload. Yes, it seems an edge case.\nThanks again.\n. I modified a similar feature for myself, sometimes send raises exceptions, so need catch it. Maybe Broken Pipe, I don't remember.\n. Is it possible imageURL or imageURL.path is nil? my case is not common, so  I'm not sure for that.\n. Thanks for explanation, I'm not an iOS programmer, I will update later. :-)\n. ",
    "hyugit": "shall we allocate this variable only once, and reuse it by calling reset()?\n. ",
    "chrisliu529": "Actually I'm new to react-native community and I've no idea what its convention is. If the env var should be capitalised then  REACT_NATIVE_APP_ROOT would be better :)\nAnd I just grep all existing 'process.env' references in current code base, indeed all env vars are capitalised. I agree REACT_NATIVE_APP_ROOT is better.\n. ",
    "magrinj": "Ok, what you think is : Remove minimumDate and maximumDate native props from render and assign it in _onChange function that's right ? So, did I also remove date prop from render and only assign int inside _onChange ?\n. Ok, what you think is : Remove minimumDate and maximumDate native props from render and assign it in _onChange function that's right ? So, did I also remove date prop from render and only assign int inside _onChange ?\n. I just check the code, and I don't think we can set minimumDate and maximumDate in _onChange method, it's static values, so I think they needs to stay in render \n. I just check the code, and I don't think we can set minimumDate and maximumDate in _onChange method, it's static values, so I think they needs to stay in render \n. I think it's can be done in another way, by changing the name of the native function from onChange to onDateChange, this warning is triggered because the js props are apply to native props, so that's require a function named onDateChange\n@christopherdro, @ide: What do you think ? \n. I think it's can be done in another way, by changing the name of the native function from onChange to onDateChange, this warning is triggered because the js props are apply to native props, so that's require a function named onDateChange\n@christopherdro, @ide: What do you think ? \n. Unfortunately, I don't think we can specify the type of SectionBase, because sections can be plain JS, Immutable or any data blob, so, by exemple the object tree of Immutable is really different of plain JS. If we keep this definition, and the user specify something else than plain JS, a lot of warning would appear. I understand, that keeping this kind of type definition is important, but in this case I don't find any other solutions, maybe I'm wrong, but if you know a way to handle it, let me know, and I will try to implement it.. You're right, it can be an object! :) I had misread the declaration of sections type and confused with the flow type of an element in the array.\nI will change it! Sorry. You're right, it can be an object! :) I had misread the declaration of sections type and confused with the flow type of an element in the array.\nI will change it! Sorry. The SectionBase type can't be specified, because it can handle different type of datas, like classic js object or Immutable object, by exemple the data type of VirtualizedList is any.\nFor SectionList component SectionBase can be specified because we know the data must be javascript object.. The SectionBase type can't be specified, because it can handle different type of datas, like classic js object or Immutable object, by exemple the data type of VirtualizedList is any.\nFor SectionList component SectionBase can be specified because we know the data must be javascript object.. I'm not really an expert with complex flow typing, I can try to remove this, but I'm not sure if I'm going to fix something of fix it in a good way :/ . I'm not really an expert with complex flow typing, I can try to remove this, but I'm not sure if I'm going to fix something of fix it in a good way :/ . ",
    "BilalBudhani": "Hmmm... You're right. I'll take a look at this again. Thanks for pointing it out. \n. ",
    "vikeri": "@satya164: Check!\n. @satya164 Sure, do you mean after the other note about saving the keystore?\n. @satya164 fixed!\n. ",
    "rreusser": "Modified. Pardon the sloppiness. Got in a hurry since need to check in on our Android release. If at any point it's easier to put this on a back burner or just make it right without trying to steer me in the right direction, don't hesitate \ud83d\udc4d \n. Yup. Will remove as soon as I have Internet!\n. Agreed.\n. Yeah, as @satya164 said, it felt like there should be an intermediate layer (ActivityEventListener?) to which it sends the intent, and then that module makes the choice to interpret it as an opened URL, but that pathway wasn't quite clear.\n. Fixed, but GH is in some sort of weird read-only mode\u2026 waiting to see how this pans out\u2026\n. ",
    "radko93": "Yes, here https://github.com/facebook/react-native/blob/master/react-native-cli/index.js#L122.\n. ",
    "jemise111": "@janicduplessis thanks for the tip, fixed!\n. @janicduplessis thanks for the tip, fixed!\n. @javache @grabbou done! Thanks for the suggestions\n. ",
    "clozr": "Good point. I will update the description\n. Good point. I will update the description\n. According to RFC 3986, it should be lowercase however I will verify and change if needed. Apple doc doesn't say anything.\n. According to RFC 3986, it should be lowercase however I will verify and change if needed. Apple doc doesn't say anything.\n. RCTNetworking is  using NSURLSession while Websocket is using NSURLConnection. So it may not be necessary for RCTNetworking. However currently NSURL session is initialized with default configuration, without specifying  HTTPCookieAcceptPolicy, HTTPCookieStorage and HTTPShouldSetCookies. I can make the changes and test it out if you want to go that route.\nI think that would be a better approach too.\nOn the other for Websocket, we may need to do this.\n. RCTNetworking is  using NSURLSession while Websocket is using NSURLConnection. So it may not be necessary for RCTNetworking. However currently NSURL session is initialized with default configuration, without specifying  HTTPCookieAcceptPolicy, HTTPCookieStorage and HTTPShouldSetCookies. I can make the changes and test it out if you want to go that route.\nI think that would be a better approach too.\nOn the other for Websocket, we may need to do this.\n. ",
    "deminoth": "@grabbou this else if was a request of @andreicoman11. I guess it's for RN on Windows platform and furthermore.\n. @grabbou Can I use both of flow and default parameter? \n. @satya164 I've copy this code from TimePickerDialogModule. If you sure we don't need to support FragmentActivity, I'll remove that.\n. @satya164 My previous code uses Intent.createChooser, which generates Intent.ACTION_CHOOSER. It uses a system dialog and that doesn't return any results. We can get user actions with this dialog, so we got more consistency between iOS and Android.\n(And easy to make tests \ud83d\ude04 )\n. @satya164 It looks same as I know because it uses a system layout android.R.layout.select_dialog_item. \n. @satya164 It fails tests on my device(4.4.2) if I remove that...\n. \nwhoops it's not same in 6.0\n. @satya164 It seems above 5.0 uses bottom sheet dialog to share, so my implements looks different. From 5.1, I can use system dialog for getting user actions. Should I check version and use system dialog? \n. @andreicoman11 Mainly this module send (text) data to an another app. If this module can't tracking user's selection, the app's developer never know what's going on. I think many people want to know detail user actions to analyze and understand users. \n. Fyi, this pattern(resolve with constant action) comes from DatePickerAndroid and TimePickerAndroid.\n. ",
    "joshuapinter": "Ha. Yes, yes I can.\n. Ha. Yes, yes I can.\n. I can't recall now but I thought I had to do this for it to work properly. I'll fire it up and try again and see what the deal is.\n. I can't recall now but I thought I had to do this for it to work properly. I'll fire it up and try again and see what the deal is.\n. @javache Right, so I just did a test and when I don't wrap it in another Array I only get one of the scheduled notification objects back instead of an Array of them. Using this JS: \njs\nPushNotificationIOS.getScheduledLocalNotifications( (notifications) => {\n  console.log(notifications);\n}\nSo that would return something like:\njs\nObject { \n  alertBody: \"You should get in touch with Aaron\", \n  applicationIconBadgeNumber: 3, \n  soundName: \"UILocalNotificationDefaultSoundName\", \n  fireDate: \"2016-06-24T09:03:20.000-06:00\", \n  userInfo: Object }\nAny ideas?\n. @javache Right, so I just did a test and when I don't wrap it in another Array I only get one of the scheduled notification objects back instead of an Array of them. Using this JS: \njs\nPushNotificationIOS.getScheduledLocalNotifications( (notifications) => {\n  console.log(notifications);\n}\nSo that would return something like:\njs\nObject { \n  alertBody: \"You should get in touch with Aaron\", \n  applicationIconBadgeNumber: 3, \n  soundName: \"UILocalNotificationDefaultSoundName\", \n  fireDate: \"2016-06-24T09:03:20.000-06:00\", \n  userInfo: Object }\nAny ideas?\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. Updated in cbe2afd.\n. @javache Sounds good. I'll take a look.\n. @javache Sounds good. I'll take a look.\n. @javache Pushed a refactor that moves the formatting loop to a class method and makes generous use of RCTNullIfNil.\nMuch cleaner now, thanks. \nHave a look and let me know if it's \ud83d\udc4d \n. @javache Pushed a refactor that moves the formatting loop to a class method and makes generous use of RCTNullIfNil.\nMuch cleaner now, thanks. \nHave a look and let me know if it's \ud83d\udc4d \n. On it! :)\n. On it! :)\n. ",
    "tlvenn": "Exactly the same as styles :\n```\n{\n  title: {\n    ...\n  },\nleft: {\n    ...\n  },\nright: {\n    ...\n  },\n}\n``\n. I am not an expert in flow,stylejust above is equally optional and typed asanyso I just followed it.\n. I rather keep the definition of style simple without introducing a ternary expression and I don't think the cost of allocating an empty literal will matter at all...\n. I guess we could debate cleverness over readability but fair enough.\n. I guess we could debate cleverness over readability but fair enough.\n. Good catch, I actually somehow missed the?. Good catch, I actually somehow missed the?`\n. ",
    "hayeah": "you mean split the conditions on multiple lines?\n. ",
    "rlog": "Done, Thanks for your review  :)\n. done\n. ",
    "benhoyt": "Got it, will remove.\n. Got it, will remove.\n. Fixed in 607f0ba\n. Fixed in 607f0ba\n. ",
    "glittershark": "Done. I'm assuming headers[key] = val doesn't work as a replacement for setObject:forKey:? I'm really not much of an ObjC person...\n. Done.\n. ",
    "codeheroics": "Sorry I missed it when it was just the next line, just updated the PR!\n. Sorry I missed it when it was just the next line, just updated the PR!\n. Sorry I'm not too familiar with the project's structure, but I assumed this message could only be shown on Android device, given that the file is under the directory ReactAndroid\n. Sorry I'm not too familiar with the project's structure, but I assumed this message could only be shown on Android device, given that the file is under the directory ReactAndroid\n. Done!\n. Done!\n. ",
    "marketmar": "Locked out of my MacBook Pro \n. Help\n. ",
    "rigdern": "Are you suggesting that in JavaScript, developers must subscribe to onScroll for most of the scroll position information and then onMomentumScrollEnd to find out what the resting scroll position is? If so, this design of the onScroll event seems broken to me. If developers care about scroll position, it's likely that they'll sign up for the onScroll event but not realize that they also need to sign up for the onMomentumScrollEnd event resulting in a bug in their app. Because of this, it seems to me that it would be preferable to fire an onScroll event as we are doing now.\nWhat do you think?\n. I can't use +initialize here. I'll add a comment describing why. Here's the reasoning: +initialize runs immediately before the first message is sent to the class which may be too late for us. By this time, we may have missed some UIKeyboardWillChangeFrameNotifications.\nI might be able to use +load but there are some caveats when using +load because it is executed so early so I feel more comfortable with a custom initialization function.\n. Is it okay to call RCTLogError in production or do I need to keep that part guarded by a #if RCT_DEBUG?\n. I think we need to keep it until we export an initialAppState constant on Android.\n. removed\n. done\n. Fixed\n. Interesting, thanks for posting about this internally.\nDoes the iOS implementation actually call the str method? In my testing, this bug reproed on Android but not iOS.\n. > I might be mistaken but I think we only look at *.ios.js when generating docs for the website: http://facebook.github.io/react-native/docs/image.html\nIt looks like you were right.\n\nnit: Could you please explain what the difference between resize and scale is? I don't actually remember which one does the downsampling by skipping pixels.\n\nDone\n. @foghina My team solved this problem in our web app by fetching the image with an XHR and then using URL.createObjectURL to generate a local URL for the image data.\nAs to your question about caching, Fresco uses the same configuration in its implementation of OkHttpNetworkFetcher which ReactOkHttpNetworkFetcher is subclassing: https://github.com/facebook/fresco/blob/e437ef96c5c63e10c4dd6a94bd44cf58e4d7118d/imagepipeline-backends/imagepipeline-okhttp/src/main/java/com/facebook/imagepipeline/backends/okhttp/OkHttpNetworkFetcher.java#L87.\nAdam Comella\nMicrosoft Corp.\n. Does line height also need to be adjusted based on the value of allowFontScaling?\n. Do these scenarios work correctly?\n1. Developer sets allowFontScaling to null. It looks to me like this will cause mAllowFontScaling to be false but the default should be true. To fix this, remove the @Nullable annotation and use @ReactProp's defaultBoolean = true feature. I think that'll make the code clearer and correct.\n2. Developer toggles the value of allowFontScaling when mFontSizeInput is UNSET. I suspect the text will not be rerendered to account for the change in the allowFontScaling value because markUpdated is never called.\n3. Developer sets allowFontScaling to false and then to true. I suspect the text will not be rerendered to account for the change in the allowFontScaling value because markUpdated is never called.\n. What happens if fontSize is set to 12 and then back to UNSET? I suspect the text will not be rerendered because mFontSize isn't updated.\n. Yes null in JS maps to UNSET in Java because defaultFloat is UNSET in the @ReactProp.\nThanks for verifying this works.\n. What's the purpose of the forceRecalculation flag? It seems to only be used by setAllowFontScaling and setAllowFontScaling only calls setFontSize under conditions such that whole function would run even if forceRecalculation was false.\nI'm thinking we should get rid of the forceRecalculation flag and have setAllowFontScaling always call setFontSize. I think this would make the code more straight forward, it would behave the same way, and it wouldn't introduce any noticeable performance overhead. What do you think?\n. @foghina My understanding is that React Native is currently applying no-store to all requests because that is what Fresco is doing. Here's how I came to that conclusion:\n- FrescoModule uses OkHttpImagePipelineConfigFactory (code)\n- OkHttpImagePipelineConfigFactory calls setNetworkFetcher with OkHttpNetworkFetcher (code)\n- OkHttpNetworkFetcher applies no-store to all requests (code)\nYou raise an interesting question but I set no-store on all requests because I was trying to preserve the current behavior. I don't have background on why things are done that way. If I am right that this is the current behavior, then I think the issue you've raised is tangential to my PR.\n. @sdg9 Do you have any thoughts on my question about line height?\n. @charpeni I updated a BUCK file which I think should resolve the issue. This time, it looks like the CI build failed for a reason unrelated to my change:\nUnable to download: mvn:org.webkit:android-jsc:aar:r174650\nBUILD FAILED: //ReactAndroid/src/main/jni/prebuilt:android-jsc-aar failed with exit code -1:\n. @leeight Thanks for the suggestion. Is there an existing event you had in mind that should be fired? If not, is there a real world need for supporting a new event and firing it here? If not, I would prefer to leave the PR as is and we can add a JS event in the future if a real world need arises.\n. @ericvicenti To give you some background, the names always, always-if-content-scrolls, and never come from the names of the Java constants OVER_SCROLL_ALWAYS, OVER_SCROLL_IF_CONTENT_SCROLLS, and OVER_SCROLL_NEVER.\nWould you still prefer if I renamed always-if-content-scrolls to auto?\n. @ericvicenti I renamed the always-if-content-scrolls' prop toautoas requested. I also rebased my branch on master.. For clarity, maybe we should callmarkUpdated()at the end ofsetAllowFontScaling. I knowsetFontSizeandsetLineHeightalready call it but it'll make it clearer that this method does indeed dirty the node. Calling [markUpdated()](https://github.com/facebook/react-native/blob/346858a5528a95e0fe869f4fd0269aa43b31cae0/ReactAndroid/src/main/java/com/facebook/react/uimanager/ReactShadowNode.java#L124-L133) multiple times should be cheap.. WhenmFontSizeInputisUNSETmaybe we should setmFontSizetoUNSETsimilar to how we setmLineHeighttoNaNwhenmLineHeightInputisUNSET`.\nThe reasoning is that this PR changes the behavior of lines 145 and 195. Before your PR, if somebody reverted the font size to its default by passing null for the fontSize prop, mFontSize would become UNSET. Now, setFontSize never leaves mFontSize with the value UNSET.\nSetting mFontSize to UNSET when mFontSizeInput is UNSET would preserve the old behavior of these conditionals.\n. In this earlier comment you mentioned that we should get the font scale from getResources().getConfiguration().fontScale rather than calculating it from scaledDensity / density.\nThe reason I pass fontScale around rather than the Configuration object is that I wanted it to be very obvious that we are passing mFontScale to JavaScript. I was concerned that there might be some race where font scale is extracted from the Configuration object but it has a different value than mFontScale.. I fixed this now. One interesting detail is that the dimensions part of constants is now a WritableMap instead of a HashMap. I wasn't sure what the impact of this would be. It built and ran fine.. @javache Sweet, I wasn't aware of viewForReactTag:.\nI addressed your feedback.. Switching from a color to null did work correctly before because drawOutput checked mIsBackgroundColorSet before drawing a background color.\nI still implemented your nullable integer suggestion to make the code clearer.. @chirag04 That's an interesting suggestion. A downside to that design is it'll open the door to a tricky to catch app bug. Suppose the app wants to request permissions on its own but fails to. With the current implementation, the app will see an exception due to not having the proper permissions. With your suggestion, RN will request permissions on behalf of the app making it difficult for the developer to realize there's a bug in their app.. @javache \"This method includes RN in the name to minimize the chances that the web spec will introduce an API with the same name.\". @AlanFoster thanks for the heads up.. What props are you talking about? What should they be remapped to? It looks like you are highlighting allowFontScaling which is already getting remapped to fontAttributes.. @shergin Are you saying we should default to passing nil to fontAttributes properties instead of forwarding whatever was in defaultView?\nI think that will change the behavior but at least now things will be more consistent. For example, today I think if you don't specify fontSize during the initial render, the rendered fontSize will be RCTFont's default. If you later set the fontSize to 20 and then back to nil, I think it'll fallback to a default of defaultView.font.pointSize which is not necessarily the same as RCTFont's default so the font could be a different size now than it was when it was initially rendered.. This overrides the superclass's implementation of fontAttributesDidChangeWithFont. Are you suggesting I move this logic to the superclass's implementation so RCTTextView doesn't have to override it?. It ensures that _backedTextInput's font gets initialized to RCTFontAttributes's default font. This is not necessarily the same as _backedTextInput's default font.. Instead of dispatching the event manually should we use this.emit?\nAppState extends NativeEventEmitter which extends EventEmitter which provides an emit method.\nAdam Comella\nMicrosoft Corp.. >[results setObject:@\"disk\" forKey:urlRequest.URL.absoluteString]; \nDo we want this branch to run when storagePolicy is NSURLCacheStorageNotAllowed?. Does this match the kind of things that can appear in requests on Android?. Okay, it's good that it's consistent with the existing cross-platform image APIs. Nit: Missing a space between the else if and the open parenthesis.\nsuggestion\n    } else if (\"none\".equals(textTransform)) {. If I had a defaultTextAttributes(), I could get rid of the parentTextAttributes == null checks.\nSome tricky things to watch out for:\n  - What if the data type doesn't have a good value to represent \"not set\" (everything is float now and float has Float.NaN)?\n  - We have to ensure that the root text shadow node always adds fontSize to the span even if it matches the default value (ViewDefaults.FONT_SIZE_SP).. Is this feedback legitimate? This file has over 100 usages of inline styles.. Thanks for the suggestions.\nI removed the example I added to RNTester for now because it won't work until we make a change to the React repo. Specifically, we have to remove this assert from ReactNativeRenderer-dev.js.\nI created a branch with several inline view examples which I'll send as a PR after the prerequisite PRs have been merged. I shared code between iOS and Android where possible.\nUnrelated to inline views, we should consider factoring out some of the common examples between TextExample.ios.js and TextExample.android.js into a shared file.. You were right. I was able to craft cases where inline images and views did not get rerendered. You can see them in the ChangeImageSize, ChangeViewSize, and ChangeInnerViewSize functions in TextInlineView.js in my branch. I'll be sending my branch as a separate PR so we can have these inline view examples in RNTester.\nI added a TODO comment in ReactShadowNodeImpl.java to note this bug.. ",
    "modocache": "Drive-by comment: this is probably more tersely (and idiomatically) expressed as [UIColor whiteColor].\n. I see your point. In that case, you could use +[UIColor colorWithRed:green:blue:alpha:], which avoids the need to call +[UIColor alloc].\nAlso, why use 1.0f for every float value besides alpha, which is simply 1?\nAll of these are nits of course, feel free to ignore. :)\n. ",
    "shaneosullivan": "It is more terse, but that's not the point :-)  If you want to actually customize the colour, you need to see the Objective-C syntax, and hiding it all behind whiteColor was explicitly not done for that reason.\n. It is more terse, but that's not the point :-)  If you want to actually customize the colour, you need to see the Objective-C syntax, and hiding it all behind whiteColor was explicitly not done for that reason.\n. ",
    "jsdevel": "I believe the purpose of this statement was to keep the xinput window open.  By removing this, I believe you'll break that.  read essentially waits for the first input received from stdin until LFS has been supplied, then it exits.  As long as we're OK with breaking xinput, then this change should be OK.\n. I believe the purpose of this statement was to keep the xinput window open.  By removing this, I believe you'll break that.  read essentially waits for the first input received from stdin until LFS has been supplied, then it exits.  As long as we're OK with breaking xinput, then this change should be OK.\n. done.  sorry about the fat finger!\n. done.  sorry about the fat finger!\n. view.getResources().getIdentifier(testId, \"id\", view.getContext().getPackageName()) will return 0 if no matching identifier is found.  I wanted to avoid calling it more than once for a given testID if possible which is why there are 2 checks:\n- The first check is for caching purposes.\n- The second check is to avoid setting the testId on the View if the user didn't define it.\n. Markdown allows you to use any number here for ordered lists and it handles it.  I find it easier to maintain, but will change it if you'd like me to.\nHere's what it looks like:\n\nThanks for sharing how to run the docs!\n. done\n. fixed\n. Simulates the behavior of reactEditText.getId() I.E. it returns View.NO_ID if no react tag has been set.  Being that getTag returns Object this also removes the need to cast to int everywhere.\n. See https://github.com/facebook/react-native/pull/9942/files#r80302609\n. Good point!  Is there a central location where I can perform some cleanup?\n. \\o/\n. fixed\n. removed.\n. Just noticed there was a dangling ) in the first sentence (after setTag).  Removed it.\n. Thanks!  I couldn't think of a better one.  The resource ids need to be created at compile time in order for uiautomatorviewer to recognize them.\n. I think I found it. Looks like onDropViewInstance in ViewManager. I added an override in BaseViewManager to clean up the mappings to avoid memory leaks.\n. removed\n. I updated this so it reads 1. 2. 3. etc.\n. > I don't think this scales well.\nI agree.  I was originally thinking I could make this work with a deprecated constructor in Event.java; however, I realized that all of these events are exposed publicly.\n\nDo you have an idea how we could make events and tags work without patching any of them?\n\nNot really.  I struggled with this because I wanted to avoid the duplication.  Any plugin that creates a ContentSizeChangeEvent with the view tag would break without this constructor. \nI think the @Deprecated constructors are needed.  Perhaps they ship with a few releases, then get removed with the hope that plugin maintainers have the chance to update their code?\n. > I don't think this scales well.\nI agree.  I was originally thinking I could make this work with a deprecated constructor in Event.java; however, I realized that all of these events are exposed publicly.\n\nDo you have an idea how we could make events and tags work without patching any of them?\n\nNot really.  I struggled with this because I wanted to avoid the duplication.  Any plugin that creates a ContentSizeChangeEvent with the view tag would break without this constructor. \nI think the @Deprecated constructors are needed.  Perhaps they ship with a few releases, then get removed with the hope that plugin maintainers have the chance to update their code?\n. Another option is to call getOriginalReactTag wherever the events were created; however, that feels like a fail given that plugin authors would need to be aware of react-native internals.\n. Another option is to call getOriginalReactTag wherever the events were created; however, that feels like a fail given that plugin authors would need to be aware of react-native internals.\n. I'm essentially swapping setId and setTag.  Instead of using setId for the react tags I'm using setTag.\n. I'm essentially swapping setId and setTag.  Instead of using setId for the react tags I'm using setTag.\n. Nope.  With this approach, all events can continue as they were.\n. Nope.  With this approach, all events can continue as they were.\n. The integers generated by R.class are typically higher values.  It could really be any value so long as it's low.  Should I add a comment to state that this is an arbitrary low value to avoid collisions with R.class?\n. The integers generated by R.class are typically higher values.  It could really be any value so long as it's low.  Should I add a comment to state that this is an arbitrary low value to avoid collisions with R.class?\n. Ids should be in the xml file so R.class is generated correctly; otherwise, uiautomatorviewer and appium can't associate it to the testID.\n. Ids should be in the xml file so R.class is generated correctly; otherwise, uiautomatorviewer and appium can't associate it to the testID.\n. > Should this be reactTagFor or just getReactTag?\nI struggled with the naming of this one because in some places there are class methods named getReactTag.  I think reactTagFor(view) makes sense.  I'll go with that.\n\nIt returns a tag for a view, not a tag from a view, correct?\n\nGood point.  If the view is null, it will return View.NO_ID, so reactTagFor makes more sense.\n. > Should this be reactTagFor or just getReactTag?\nI struggled with the naming of this one because in some places there are class methods named getReactTag.  I think reactTagFor(view) makes sense.  I'll go with that.\n\nIt returns a tag for a view, not a tag from a view, correct?\n\nGood point.  If the view is null, it will return View.NO_ID, so reactTagFor makes more sense.\n. Removed the javadoc.  I'm not really sure how to create a new instance of a static class in the tests.\n. Removed the javadoc.  I'm not really sure how to create a new instance of a static class in the tests.\n. *Util is more common.  Renaming to that.  I couldn't find an existing class to put this in.\n. *Util is more common.  Renaming to that.  I couldn't find an existing class to put this in.\n. Android has a ViewUtil class.  Would it be confusing if we define one as well?\n. Android has a ViewUtil class.  Would it be confusing if we define one as well?\n. I think I can delete this comment.  It should return a unique value for the element in the list, which reactTagFor will provide.  getId isn't guaranteed to always return a value now.\n. I think I can delete this comment.  It should return a unique value for the element in the list, which reactTagFor will provide.  getId isn't guaranteed to always return a value now.\n. yea, getReactTag is also used in a few places as class methods, so I'm not sure renaming it would always be more readable.  I'm open to changing it.\n. yea, getReactTag is also used in a few places as class methods, so I'm not sure renaming it would always be more readable.  I'm open to changing it.\n. ",
    "glaw": "That is true. Removing this will close the window.\n. ",
    "cornedor": "The API currently does not use a Promise in iOS, doesn't it mean that if I change that to a Promise that it will be incompatible?\n. You're right, after some logging with isClosed() I've also added image.close()\n. ",
    "shiranGinige": "done. \n. ",
    "blackbing": "@bestander, I fixed it. thanks for your reviewing.\n. @bestander, I fixed it. thanks for your reviewing.\n. @bestander my bad. fixed  and thanks again.\n. @bestander my bad. fixed  and thanks again.\n. ",
    "davidyaha": "These two cammands are basically the same as creating package.json as you've added in lines 18-31:\n1. npm init\n2. npm install react-native --save\nAs this guide only hopes to get you started as fast as possible, it might be best to use those.\n. Hey I think that it ultimately depends on when these docs will be released. For now, following these docs on version 0.26.x will throw a warning like this:\nreact-native@0.26.3 requires a peer of react@15.0.2 but none was installed.\nAnd if the user will not run npm i react@15.0.2 --save --save-exact he will definitely run into problems.\n@javache We might want to add a reference to this PR on the release notes. \nAnd for the future as @davidshayer said, we do need to add the following command sequence:\nnpm init\nnpm install react --save\nnpm install react-native --save\nGreat day,\nDavid\n. Hey I think that it ultimately depends on when these docs will be released. For now, following these docs on version 0.26.x will throw a warning like this:\nreact-native@0.26.3 requires a peer of react@15.0.2 but none was installed.\nAnd if the user will not run npm i react@15.0.2 --save --save-exact he will definitely run into problems.\n@javache We might want to add a reference to this PR on the release notes. \nAnd for the future as @davidshayer said, we do need to add the following command sequence:\nnpm init\nnpm install react --save\nnpm install react-native --save\nGreat day,\nDavid\n. ",
    "TanTan-TT": "I think in different files can be easy to maintain. \n. @satya164 This is the old code, but in previous version, this code was deleted. Before that version, this code is used in downloading scenario. I just reuse this code. Thus I don't know what NS really mean. \nDo you think we should remove NS?\n. ",
    "avaly": "npm run flow -- check if you expect this to run flow check\n. UIExplorer project does start a terminal, but it does not work in Sandcastle.\n. You are right! But this will kill the forked processes as well.\n. It won't conflict with running the packager manually. The later instance will just exit when it can't bind to port 8081.\n. ",
    "stereodenis": "))\n. Now it is in 'react' package\n. @satya164 done!\n. ",
    "rozele": "Would it be possible to poll these docs using RNPM instead of having them configured statically?\n. Would it be possible to poll these docs using RNPM instead of having them configured statically?\n. Could this come from a dev-dependency on rnpm-plugin-link instead of being committed directly to react-native?\n. Could this come from a dev-dependency on rnpm-plugin-link instead of being committed directly to react-native?\n. the packageName argument should remain optional shouldn't it?\n. the packageName argument should remain optional shouldn't it?\n. There's going to be an issue with this eventually.  For example, how does one add an examples section to the link command?  If you did add examples, you'd lose the original usage() value ([options] [packageName]).\n. probably should assign this...\n. >namespace \nIt is possible that the namespace might be different for various files.  Shouldn't we match the namespace for only the file with the IReactPackage. >namespace \nIt is possible that the namespace might be different for various files.  Shouldn't we match the namespace for only the file with the IReactPackage. Do we need to pre-generate the solutionInsert and projectInsert for every imaginable RNPM plugin, or could we just generate this when needed in the link command?. Do we need to pre-generate the solutionInsert and projectInsert for every imaginable RNPM plugin, or could we just generate this when needed in the link command?. >ProjectReference \nI don't think this works.  This is typically followed by:\n<Project>{c7673ad5-e3aa-468c-a5fd-fa38154e205c}</Project>\n      <Name>ReactNative</Name>\n    </ProjectReference>\nAnd the full project reference should come after the close  #Resolved. >ProjectReference \nI don't think this works.  This is typically followed by:\n<Project>{c7673ad5-e3aa-468c-a5fd-fa38154e205c}</Project>\n      <Name>ReactNative</Name>\n    </ProjectReference>\nAnd the full project reference should come after the close  #Resolved. Is it possible to capture regex groups and re-apply them in the patch?  If so, you could capture the whitespace for the (\\s*)new MainReactPackage() and apply it to the patch so there's matching whitespace.  Thinking something like:\n{\n    pattern: '(\\s*)new MainReactPackage()',\n    patch: \",\\n$1' + processedInstance\n}. Is it possible to capture regex groups and re-apply them in the patch?  If so, you could capture the whitespace for the (\\s*)new MainReactPackage() and apply it to the patch so there's matching whitespace.  Thinking something like:\n{\n    pattern: '(\\s*)new MainReactPackage()',\n    patch: \",\\n$1' + processedInstance\n}. >MainReactPackage \nI think there's a bug here if new MainReactPackage() already ends in a comma.. >MainReactPackage \nI think there's a bug here if new MainReactPackage() already ends in a comma.. Nevermind, you use the flip parameter to make sure the patch comes before the ProjectReference.\n\nIn reply to: 90884760 . Nevermind, you use the flip parameter to make sure the patch comes before the ProjectReference.\n\nIn reply to: 90884760 . Unless you use the flip parameter here, then you can add the comma after processedInstance to guarantee it's always correct.\n\nIn reply to: 90885370 . Unless you use the flip parameter here, then you can add the comma after processedInstance to guarantee it's always correct.\n\nIn reply to: 90885370 . >generateGUID \nNice, I should use this and remove the dependency on uuid in react-native-windows CLI.. >generateGUID \nNice, I should use this and remove the dependency on uuid in react-native-windows CLI.. I would have actually suggested to add two separate regular expressions, the first one to filter for files matching IReactPackage, then one to select the namespace.  I.e.,\nfiles\n  .map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n  .filter(file => file.match(/class .* : IReactPackage/)\n  .map(file => file.match(/namespace (.*)\\s*/))\n  .filter(match => match);\n\nIn reply to: 90896264 . I would have actually suggested to add two separate regular expressions, the first one to filter for files matching IReactPackage, then one to select the namespace.  I.e.,\nfiles\n  .map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n  .filter(file => file.match(/class .* : IReactPackage/)\n  .map(file => file.match(/namespace (.*)\\s*/))\n  .filter(match => match);\n\nIn reply to: 90896264 . Make this more resilient to whitespace differences.. Make this more resilient to whitespace differences.. Add same for iOS #Closed. >null \nreturn; #Closed. >getProjectDependencies \nneed to import #Closed. >packageName \nname? #Closed. >name \nI don't think this takes a name param. #Closed. @chirag04 - this.props is copied into a local variable:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/TextInput/TextInput.js#L836\nThis is exactly how it's done for iOS:\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/TextInput/TextInput.js#L771\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/TextInput/TextInput.js#L822\n. Works for me. Coming right up.. Let's just add the name parameter to the isInstalled signature.. I published #18207 to fix the issue for Android and iOS.. >touchableHandleActivePressIn \nWould this preclude us from supporting keyboard navigation scenarios. E.g., get a focus event when tabbing to and pressIn event when you hit Enter or space?. >   \nlooks like whitespace is a bit sloppy here.. @dlowder-salesforce how do you differentiate between focus and holding a button on the remote? I would think the onFocus event would trigger a different highlight than holding a button down.. Seems like this could use a comment, not sure how it works. I ran a test on the regex, and I can't get it to match Foo.native.js. This is the code that I had commented in Slack about. Unfortunately, hasteImpl is dynamically required by jest-haste-map, so it's not trivial to inject \"plugin\" platform extensions.\nHowever, we can move to a model where plugin platforms must create their own metro.config.js and hasteImpl.js file with the platform extensions in the regex for getHasteName, but that would mean it would be more challenging to add plugin platforms to projects that already have their own metro.config.js. We could probably use babel to modify existing metro.config.js files and add hasteImplModulePath if it's not already there, and just throw a warning if it's already there pointing to instructions on how to add the necessary platform behavior to their hasteImpl.js. . ",
    "buba447": "Oh good to know! Thanks!\n. Oh really? Good to know! \nFor some reason I always thought it was faster. Maybe I just thought that because the syntax was prettier. Specious reasoning on my part :smile: \n. @nicklockwood I busted id for animation to match what is happening on the JS/Android side. For some reason they use ID only for the animation tag. \n. ",
    "JAStanton": "Cannot do a BOOL because it's going into an NSDictionary, it needs to be a NSNumber instead. Casted it to that. \n. \ud83d\udc4d  done.\n. \ud83d\udc4d  Done.\n. Gotcha, yeah I updated the PR to achieve the second approach but I agree with the shorthand of the first approach! Updated again! Done\n. Gotcha, alright I played with it on my device and the only change I made was wrapping the bitwise-and in parenthesis before comparing it. Otherwise it works fine \ud83d\udc4d\n. Oh nice, so it works because I was passing in UIUserNotificationSettings to the userInfo parameter of my NSNotification message instead of setting it a dictionary like how it's supposed to be used. Bummer. Updated, take a look! Thanks.\n. Hmmm well looking at Github's master I see this: https://github.com/facebook/react-native/blob/master/Libraries/PushNotificationIOS/PushNotificationIOS.js#L175-L177 which does NOT have isRemote. Maybe you're seeing something I'm not? Possibly something that's internal to Facebook members only? I don't know. I just updated with master and this is the diff though.\n. ah brilliant! ok I'll update my PR to rely on it then. Thanks\n. Whoops! Bad merge\n. Whoops :) Bad merge.\n. \ud83d\udc4d  this bug is result of a 9 month long PR with subtle refactors over long periods of time and not testing after each refactor. Thank you for catching this, I believe what you have here is correct \n. \u00af_(\u30c4)_/\u00af I'm a contributor not an owner, I don't have merge control :)\n. ",
    "skozer": "@janicduplessis If a file is in more than one target, it will have more than one PBXBuildFile in the build files section - the file reference will still be the same.\n. ",
    "maartenschumacher": "@satya164 You're right, hadn't thought of that. Do you think checking if it starts with a / covers all the cases?\n. @nicklockwood That works. I was afraid it wouldn't work when the redirect URL has a different domain, but it's smart enough.\n. ",
    "hramos": "\"Following\" is misspelled.\n. \"Following\" is misspelled here as well.\n. Xcode\n. I also changed this 'next' link in #8299 (to handling-touches), and we should coordinate to make sure these two PRs do not conflict.\nI propose that Style.md be updated to point to colors in its next link, and Colors.md be updated to point to 'images', resulting in:\n- Style\n- Colors\n- Images\n- Handling Touches\nWhat do you think?\n. This can be removed.\n. I dropped some of these as it did not seem like it was worth calling out in the docs. Many seemed like, if they are still an issue, they would be easily discovered by performing a search for the issue.\nHappy to reinstate them, it just seems like there's a grab bag of random issues in this doc that may no longer be relevant.\n. \ud83d\udcb0\n. \ud83d\ude97\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\n. \ud83c\udf4c\ud83c\udf4c\ud83c\udf4c\n. Should we link to the API references here or would it introduce too much clutter?\n. You may need to update the permalink to docs/layout-with-flexbox.html.\n500 Error: Error: Following module not in specified search paths: /Users/hramos/git/react/react-native/website/src/react-native/docs/layout-with-flexbox.js\n. Use network OR update the networking guide's permalink to docs/networking.html\n. Use network.html OR update the networking guide's permalink to docs/networking.html\n. Use network here OR update the permalink to use docs/networking.html too. I know -- this id system does not appear to work as intended.\n. Yes, the previous order was:\nUsing a ListView -> Networking -> More Resources\nWith this PR, we're adding Navigators between Networking and More Resources. This required some reshuffling of the last sentences to maintain the flow. Networking now segues to navigation, and navigation closes out the tutorial.\n. Oops, I meant to that sentence.\n. Is the term 'lockdown' used in a similar manner outside of FB? Maybe go with similar wording as the blog post:\n\n\"Recently we've been working hard to make the docs better based on your feedback. Your responses to this yes/no style survey will help us gauge whether we moved in the right direction with the improvements. Thank you!\"\n. So it looks like most of these are already tracked in GitHub. I recently went through this Troubleshooting page and removed anything already tracked elsewhere. I don't think Troubleshooting is meant to be an exhaustive page that list every single issue. I'd actually like to get it to a point where we don't have a troubleshooting page and instead link to GitHub where people can find the most up to date discussion on any particular issue.\n. GitHub doesn't show this in the default view, but please note that this block is within a @media query and is not in conflict with L915.\n. The issue in the earlier PR was introduced here, as content can be either undefined or JSX. On further review, using the default website description when a doc is shared should be alright, so I'm removing this.\n. Similarly, we'll just default to the generic description here.\n. Added a blog-specific description to the blog index layout.\n. This also caused issues in the earlier PR.\n. This fixes a warning.\n. I am not too happy with the redundant use of colons here, once L105 is added in this PR.\n\nI suggest the following:\n\" A more complete example that demonstrates the pushing and popping of routes could therefore look like the following. Change your main file to:\"\nI am not 100% happy with the use of \"main file\" here as it can confuse a new user, though I don't have a better suggestion. The concern is that a new user would not necessarily know if this refers to the main App.js file (incorrect), or the actual file for the SimpleNavigationComponent we're working with in this example (correct).\n. I don't think this belongs in the Getting Started guide. After all, the goal is to get you up and running with a simple React Native app.\nIf you do intend to make changes to native Java code, then you'd likely read the Native Android Modules doc, which now has these instructions.\n. I like Current Version (Stable).\n. SGTM.\nI've only ever seen one pre-release at a time, but used plural here as master could be considered pre-release (e.g. whatever is there should be picked up by the next RC cut).\n. Actually since this section contains both master and at least one RC, I don't think changing the title to Pre-release Version (RC) would work unless we move master somewhere else.\nThe RC release already has -RC appended to its title, would that work?\n. It is, good catch.\n. Ah, silly mitake.\n. I'm not a fan of adding multiple notes to cover possible issues - this PR would make for three in a row.\nWe should fix the issue if possible, instead of making it part of the Getting Started guide.\n. Is this intentional (tvOS)?\n. I haven't done any Apple TV development yet, and I am not familiar with how Xcode handles static libraries for projects that may target tvOS. @dlowder-salesforce perhaps you can chime in? \n. Your PR description claims that the issue arises when an URL is used with a scheme other than ws/wss/http/https, and according to https://github.com/facebook/react-native/blob/master/Libraries/WebSocket/RCTSRWebSocket.m#L318, ws, wss, http, https are all valid schemes. \nHowever your check only covers the wss case, and will throw an error if a url uses any of the http, https, ws schemes.\n. I wonder if this will render properly in the autodocs. Won't this result in renderSectionFooter having no documentation attached to it? What is displayed when you navigate to ListView.html?\n. FWIW I think it's fine to just add a second note to renderSectionFooter and make the edits there, rather than combine the two methods.\n. What about UITextAutocorrectionTypeDefault, do we need additional handling for that case?\n. @jacobp100 see feedback above.\n. @jacobp100 see feedback above.\n. @jacobp100 see @javache feedback above.\n. Was this feedback addressed?\n. PTAL @linjson \n. Why is the default behavior 'bottom'?\n. You should be able to gate this paragraph to be Linux-only using a <block /> tag.. You should be able to gate this paragraph to be Linux-only using a <block /> tag.. Add a comma at the end of this line. We follow this convention to ensure we don't need to update the preceding line when adding parameters.. Maybe link Mike's name to his Twitter account here.. Maybe link Mike's name to his Twitter account here.. Expand RN and FB to React Native and Facebook, for clarity.. Expand RN and FB to React Native and Facebook, for clarity.. \"Always use the latest release candidate when possible\".. \"Always use the latest release candidate when possible\".. Link the Twitter handles here as well. My personal preference would be to use their full names in the text instead of their Twitter handles but it's fine either way.. Link the Twitter handles here as well. My personal preference would be to use their full names in the text instead of their Twitter handles but it's fine either way.. The title refers to a new release cadence, but doesn't specify the frequency :)\nMaybe something like \"Adopting a monthly Release Cadence: December and January RC now available\" though that feels a bit long.. The title refers to a new release cadence, but doesn't specify the frequency :)\nMaybe something like \"Adopting a monthly Release Cadence: December and January RC now available\" though that feels a bit long.. The frontmatter here all looks good, but to be sure, did you check that the blog post is properly rendered in the website? Is your author byline showing up properly?. The frontmatter here all looks good, but to be sure, did you check that the blog post is properly rendered in the website? Is your author byline showing up properly?. See comment in line 334. This is not where you want to add this app.. Please take a look at the comment in line 334. This is not the right place to add this app. . Please take a look at the comment in line 334. This is not the right place to add this app. . From the linked article, it seems you can use:\n[UIImagePickerController availableMediaTypesForSourceType:\n        UIImagePickerControllerSourceTypeCamera]\nThis will choose the right media types for the video mode. Would that work here?\nAlso - what do you mean by photo mode plus video mode? Is that the camera interface where you can both record a video as well as snap photos during recording? If so, is that actually in the image picker as well?. Can you compare against a constant here instead of the string, \"Videos\"?. Can you use a constant here instead of \"Photos\"?. Can you explain why this change is needed?. Can you address this?. I meant using a constant in Java, but after taking another look at this file, it seems like that would be against convention. Disregard.. Can you add the comma back?. You don't need a defaultLink here, as this is only used for apps in the pinned array.. Ideally this title would describe what infoLink is about.. In \"react renders\", can you capitalize \"React\" here.. The following sentence is a bit hard to read:\n\nA few months later Brandon Withrow built the initial implementation on iOS and after that Ryan Gomba and myself worked on adding missing features like support for Animated.event as well as squash bugs we found when using it in production apps.\n\nCan you add a comma after \"A few months later\" and add a full stop after iOS? \n\nA few months later, Brandon Withrow built the initial implementation on iOS. After that, Ryan Gomba .... You can add comma after \"As of today\" or remove that phrase. The following works just as well:\nIt is now used by Touchable components in React Native as well as for navigation animations in the newly released React Navigation library.. Comma after \"First\". Comma after \"As you can see\", and replace \"so\" with a hard stop.\nAs you can see, most of the work happens on the JS thread. If it is blocked, the animation will skip frames.. The first phrase in this sentence feels awkward. Comma after \"With that,\". Comma after \"As you can see,\". > For normal animations, the answer is pretty simple: just add useNativeDriver: true [...]. I split these out while I was looking into the timing of each of these steps, as it allowed me to use console.time() and console.timeEnd() before/after each of these to identify the bottlenecks in extractDocs. I missed undoing this change after I removed the timing calls.\n\nSplitting these out is not required for the main goal of this PR, if you feel this change should be reverted let me know.. I split these out while I was looking into the timing of each of these steps, as it allowed me to use console.time() and console.timeEnd() before/after each of these to identify the bottlenecks in extractDocs. I missed undoing this change after I removed the timing calls.\nSplitting these out is not required for the main goal of this PR, if you feel this change should be reverted let me know.. Remove defaultLink, it is not needed here.. Do you have a technical blog post about React Native that we could use here instead?. Please add a trailing comma here.. Can you use a shorter title here? Longer titles can look odd in the showcase.. One last thing, can you remove the double quotes around this title.. That was my original approach, but I could not find a clean way to filter for unpinned entries in https://github.com/facebook/react-native/pull/12626/files#diff-deb30c36b81d11c5a077a65d4e2d9baaR60 in that case.\nVariations I tried that failed to only return objects missing the pinned key (or have pinned: false):\nconst featuredApps = showcaseApps.filter(app => {\n  return !app.hasOwnProperty('pinned') || !app.pinned;\n}).sort(function(a, b) {\n  return a.name.localeCompare(b.name);\n});. Missing \"pinned\": false here.. Do you have a technical article describing your use of React Native in this app?. Leave this in.. Can you delete the whole paragraph altogether? This was meant to be a segue to a guide that has now been deleted. Some else opened a PR for this, I'll merge whoever's makes this change first.. Ideally we'd have a standalone CRNA doc that covers any caveats, as well as the ejection process. We can tackle that in a different PR though, I'm OK with this section here for now.. Looks good to me, once we have a CRNA doc we can be more verbose there.. I'm not sure about this section title yet but I don't have a better suggestion just yet shrug. Maybe explain that, if you \"ejected\" or are integrating into an existing app, you will need to setup all the dependencies covered in this section. The idea would be to make it clear RN init is not necessary (as you already have a project). To me it's obvious RN init is not needed, but it may not be clear to a new user if RN init does some additional, required setup.. /me pours one out for Parse.. Since the same sentence will show up whether you're following the guide for iOS or Apple TV, I'd rather use \"in your Simulator\" (drop the \"iOS or Apple TV\") here.. Since the same sentence will show up whether you're following the guide for iOS or Apple TV, I'd rather use \"in your Simulator\" (drop the \"iOS or Apple TV\") here.. I've been thinking about this and have currently landed on these two terms to distinguish between the two types of React Native projects people might be working with:\n\nCreate-React-Native-App Projects\nProjects with Native Code\n\nThe second one covers any project created using react-native init, or using CRNA but has since \"ejected\".\nIf we use these terms, then this section could be named \"Building Projects with Native Code\". Thoughts?\n. Can you use npm instead? We're all big fans of Yarn but we haven't yet updated our docs with Yarn instructions, so it's best if we use npm for consistency.\nPeople who've installed Yarn are more likely to be aware of what the equivalent Yarn command is.. Is this the right place to make this edit? I am not familiar with these docs but I'd expect there to be a different source of truth.. Is this the right place to make this edit? I am not familiar with these docs but I'd expect there to be a different source of truth.. Is reactCtx defined at this point?. Was this method used anywhere?. This could use a SnackPlayer preview, maybe in another PR. I updated this PR prior to seeing this comment. Would you prefer we recommend a specific version that we know is compatible with RN, or is there a process we can document for people to figure out what version of OkHttp they should be using here?. Why 19? What does the comment say?. Can you explain a bit more here in a comment? A brief description is great, and people can look up the thread later for more context.. Space after if and parens. Why 19?. If this is Android specific, then check for Platform.OS being Android. You can't assume that anything that is not iOS will be Android.. Is this necessary?. Shouldn't this be PerfMonitor?. Shouldn't this be PerfMonitor?. Sad owl is now happy because it learned it can develop iOS apps on Windows.. My editor automatically ran Prettier on this page, which explains all the non-copy changes.\nHappy to undo these if necessary.. My editor automatically ran Prettier on this page, which explains all the non-copy changes.\nHappy to undo these if necessary.. Blame Prettier for this.. Blame Prettier for this.. Not using 17 here because the Snack player doesn't seem to support it.. Not using 17 here because the Snack player doesn't seem to support it.. This is what is implied by the next line in the doc.\nCan you instead add this note as a follow up to the next line in the doc?. This is what is implied by the next line in the doc.\nCan you instead add this note as a follow up to the next line in the doc?. Note that the contents of this conditional mirror the original deployment steps under \"deployment\". Note that the contents of this conditional mirror the original deployment steps under \"deployment\". Can you link to \"docs/virtualizedlist.html#scrolltooffset\" instead? This will ensure the link works regardless of what version of the docs the user is browsing.. Can you link to \"docs/virtualizedlist.html#scrolltooffset\" instead? This will ensure the link works regardless of what version of the docs the user is browsing.. Can you add yarn here? If yarn is installed, it will be used instead of npm.. Can you add yarn here? If yarn is installed, it will be used instead of npm.. This was flagged by one of our internal tools.\n\nMethod getHttpClientProvider() may return null but it is not annotated with @Nullable..\n. This was flagged by one of our internal tools.\nMethod getHttpClientProvider() may return null but it is not annotated with @Nullable..\n. Also flagged:\nThere may be a Field Should Be Nullable: Field MainReactPackage.mConfig should be annotated with @Nullable.. Also flagged:\nThere may be a Field Should Be Nullable: Field MainReactPackage.mConfig should be annotated with @Nullable.. Please use the standard header here:\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */. Please use the standard header here:\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */. Can you add a space after if here? You can look at other files in the repo to get an idea of the coding style we use.\n. It's alright.. mp4 all the way.. @pvinis can you address @shergin's feedback?. This file is autogenerated. Do not review. See changes to docs/Contributing.md when revewing.. I actually liked having App Extensions as the title, even when the Today Widget is the only one discussed so far.\nIf the doc is named Today Widget, I'm left wondering about how I can implement other extensions.. I feel like this could use an intro to app extensions and the Today Widget, as not everyone reading this may be familiar with classic iOS development.. Should today widget be capitalized everywhere?. I agree. Lets remove it altogether.. I'm not sure if multi-line comments are currently supported by the bot. I have a vague recollection that we tried \\n some time ago, which wasn't parsed correctly. As these comments appear to be parsed as markdown when sent to GitHub, I'll try adding HTML line breaks directly and see if that works.FWIW, they appear to work fine in this comment (I added two lines breaks before this line).. This PR was not merged.. Usually, yes, but interpolating environment variables there is not yet supported. This is a workaround suggested by a Circle CI employee.\nWithout the workaround, defining PATH in environment would blow away the original value of PATH (because $PATH is not defined), resulting in errors such as mkdir not being available in the path. . Good idea on splitting (and actually I did this just now before reading this).\nI do want to set up caching, but I'll probably get to it once we have a full successful run. I don't want to pollute the cache or introduce side effects until I'm sure everything is working as expected.\nI wish GitHub would not hide review comments automatically with any new commit, as I want to get back to this piece of feedback later on.. Same as above, cannot do because $PATH is not available to us when environment is processed.. Hadn't seen this comment but I believe it's done now :). Done.. It'd be useful to have some variables that define which version of watchman, Buck, etc we'd like to use.. It'd be useful to have some variables that define which version of watchman, Buck, etc we'd like to use.. @ide any ideas how we can only update the cache if ~/ndk didn't exist? From what I can tell, saving a cache can only be done by specifying a save-cache key as a step, so this can't be easily moved into the step above.. @ide any ideas how we can only update the cache if ~/ndk didn't exist? From what I can tell, saving a cache can only be done by specifying a save-cache key as a step, so this can't be easily moved into the step above.. Actually, updating the cache if ~/ndk didn't exist is not what we want. Leaving this line in should be OK if Circle skips updating the cache if the key already exists.. Actually, updating the cache if ~/ndk didn't exist is not what we want. Leaving this line in should be OK if Circle skips updating the cache if the key already exists.. We don't want to encourage people to open issues for old releases, and 0.48 is already the current stable. Can you rewrite this a bit so that it assumes people are using 0.48 or newer? Just have them run react-native info, and maybe add a note saying that if they get (insert whatever error is shown if they're not using 0.48+) then they should make sure they're using a recent version of React Native.\nThat way we can remove the whole next section that asks people to run several commands.. We don't want to encourage people to open issues for old releases, and 0.48 is already the current stable. Can you rewrite this a bit so that it assumes people are using 0.48 or newer? Just have them run react-native info, and maybe add a note saying that if they get (insert whatever error is shown if they're not using 0.48+) then they should make sure they're using a recent version of React Native.\nThat way we can remove the whole next section that asks people to run several commands.. Good idea!. Good idea!. Maybe use message here and below, since a PR may not necessarily require release notes.. Maybe use message here and below, since a PR may not necessarily require release notes.. Our linter is complaining about these unicode characters (\u2375, \u03b6, \u221a). It may not be a big deal to import, as this is a comment and not executable code, but the check is probably there for a reason and may prevent issues with our current tooling.\nDo you have any preference on how to format this instead? I could replace these with html entities, but that affects readability when looking at the code.\nNo need to edit your PR, I already have a copy of this PR checked out internally and I can apply any patch prior to landing.. Our linter is complaining about these unicode characters (\u2375, \u03b6, \u221a). It may not be a big deal to import, as this is a comment and not executable code, but the check is probably there for a reason and may prevent issues with our current tooling.\nDo you have any preference on how to format this instead? I could replace these with html entities, but that affects readability when looking at the code.\nNo need to edit your PR, I already have a copy of this PR checked out internally and I can apply any patch prior to landing.. Here's why the PR hasn't landed - missing opening comment. I'll see if I can fix it on our side, no need to update your PR.. Here's why the PR hasn't landed - missing opening comment. I'll see if I can fix it on our side, no need to update your PR.. This PR is not importing due to the following error:\nFlow check failed:\n1 Flow error and 0 Flow warnings detected!\n=====Flow error #0====\nError: scripts/versiontemplates/ReactNativeVersion.js line 15 col 11-11: Unexpected token {\n. This PR is not importing due to the following error:\nFlow check failed:\n1 Flow error and 0 Flow warnings detected!\n=====Flow error #0====\nError: scripts/versiontemplates/ReactNativeVersion.js line 15 col 11-11: Unexpected token {\n. This image is not loading for me. The opengraph image for RN is https://facebook.github.io/react-native/img/opengraph.png. This image is not loading for me. The opengraph image for RN is https://facebook.github.io/react-native/img/opengraph.png. This image is not loading for me, either.. This image is not loading for me, either.. Sounds good to me.. Sounds good to me.. If this were a simple website change, it would be alright as the website is versioned and the references to the new images will only go live once the images are deployed.\nIn this case, I think the images won't be visible on https://facebook.github.io/react-native/ for up to two months due to the way the website is deployed.\nLet's first use existing images in the repo itself. Maybe update existing images instead, if that does not break anything unrelated?. If this were a simple website change, it would be alright as the website is versioned and the references to the new images will only go live once the images are deployed.\nIn this case, I think the images won't be visible on https://facebook.github.io/react-native/ for up to two months due to the way the website is deployed.\nLet's first use existing images in the repo itself. Maybe update existing images instead, if that does not break anything unrelated?. I'm leaning towards taking advantage of the manual approval, for the reasons mentioned. I need to look into who would have the necessary permission to approve the deploy to go out - I wouldn't want to hold you back from pushing out a release if this is only available to FB employees. (It's midnight here, I'll check up on this in the morning). Same.. Sure. Feel free to edit the file on the PR (if you have access). Sure. Feel free to edit the file on the PR (if you have access). We can do this separately from this PR, but at some point we should switch over to iOS 11.0 here, and tvOS 11.0 in test-objc-tvos. This would match what we're testing internally.. Agreed. I like what you did in the other PR.. Agreed. I like what you did in the other PR.. We can consolidate this into a single command:\nnpm install --no-package-lock --no-spin --no-progress\n(Using the separate npm config commands is good when changing the preferences globally, but we're mostly running npm install on separate images where the preference won't persist)\n. --no-package-lock is new to npm@5, which is not used in the Node 6 and Node 4 tests. It's why I initially didn't set up a npm install alias to use everywhere. I do think it's alright to use it here, because earlier npm versions will silently ignore the flag. . Changes to this file appear unintentional. Can you remove it?. Changes to this file appear unintentional. Can you remove it?. Lint raised an error here: 'Platform' is not defined.\n(Sorry for the late, late review here. This was stuck for other reasons, and I failed to get back to it in a timely manner.). Lint raised an error here: 'Platform' is not defined.\n(Sorry for the late, late review here. This was stuck for other reasons, and I failed to get back to it in a timely manner.). Fixed in my rebase.. Fixed in my rebase.. Does this render correctly? There's an extra *. While this is a docs only change, it's still a good idea to build and test that your change looks good.. I think that template is due to be removed anyway.. I think that template is due to be removed anyway.. Here's the PR that will move the template out: #16579. Here's the PR that will move the template out: #16579. Ah, yes, this folder is used in the xplat .flowconfig.. Ah, yes, this folder is used in the xplat .flowconfig.. Moved to flow-github, to follow the convention established by the react-native-github folder in xplat.. Moved to flow-github, to follow the convention established by the react-native-github folder in xplat.. Nevermind, this is a separate template (HelloNavigation). Taking a look.. Nevermind, this is a separate template (HelloNavigation). Taking a look.. Why rn_ and not fb_?. What is this change for?. > LINT: The variable handler is never used. A variable was assigned a value that isn't used again.\nThis whole block looks like it is repeated down in 469. Was that intentional?. > LINT: The variable handler is never used. A variable was assigned a value that isn't used again.\nThis whole block looks like it is repeated down in 469. Was that intentional?. wat. wat. > Advice: Specify types for collections to improve code readability and safety\n\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. > Advice: Specify types for collections to improve code readability and safety\nAdd types to your collection using generics (e.g. NSArray) to improve readability for future maintainers and prevent crashes due to mismatched types.. Is this necessary? uuid has been in use without this dependency (see https://github.com/facebook/react-native/pull/11573/files#diff-d7db9e5e49c3ea163f89547a0be6a438L19 in this PR).\n\nThis is one of the blockers, as adding the uuid package may conflict with another uuid dependency that we use internally at Facebook.. Is this necessary? uuid has been in use without this dependency (see https://github.com/facebook/react-native/pull/11573/files#diff-d7db9e5e49c3ea163f89547a0be6a438L19 in this PR).\nThis is one of the blockers, as adding the uuid package may conflict with another uuid dependency that we use internally at Facebook.. Per #16543 looks like the missing uuid package is causing issues for some folks.. Per #16543 looks like the missing uuid package is causing issues for some folks.. I'm not sure this will work with our internal Yarn offline cache that well, unfortunately.. I'm not sure this will work with our internal Yarn offline cache that well, unfortunately.. I don't think this change is correct. The fishhook.h file is not in the same directory, so importing it needs to be done through the fishhook library, e.g. #import <fishhook/fishhook.h>.\nIt might be the case that it's actually included under React, instead (see https://github.com/facebook/react-native/pull/16192#issuecomment-337428712).\n. I don't think this change is correct. The fishhook.h file is not in the same directory, so importing it needs to be done through the fishhook library, e.g. #import <fishhook/fishhook.h>.\nIt might be the case that it's actually included under React, instead (see https://github.com/facebook/react-native/pull/16192#issuecomment-337428712).\n. Can you add these docs to the docs at https://github.com/facebook/react-native-website instead? We'll be slowly pruning out these comment blocks over the next few months.. Can you add these docs to the docs at https://github.com/facebook/react-native-website instead? We'll be slowly pruning out these comment blocks over the next few months.. (It's fine to wait for this PR to be merged first). (It's fine to wait for this PR to be merged first). Let's document these in https://github.com/facebook/react-native-website as well, since those are the docs that are displayed on the website itself.. Let's document these in https://github.com/facebook/react-native-website as well, since those are the docs that are displayed on the website itself.. Ditto. These will need to be copied over to the react-native-website repo as well.. Ditto. These will need to be copied over to the react-native-website repo as well.. \ud83d\udc4d We're using 27.0.2 internally.. \ud83d\udc4d We're using 27.0.2 internally.. Line 44 in the edited file, or 80 in the original, contains a reference to this builtInTemplates const. This was picked up by lint during import.. Line 44 in the edited file, or 80 in the original, contains a reference to this builtInTemplates const. This was picked up by lint during import.. Ping. Ping. Go for it - the PR did not land, anyway.. Go for it - the PR did not land, anyway.. Can you explain why this is necessary?. Can you explain why this is necessary?. Can you open a PR that applies these same changes to https://github.com/facebook/react-native-website/blob/master/docs/scrollview.md ?\nThese comments are not synced. At some point we need to update these comments with links to the generated docs at http://facebook.github.io/react-native instead (I've done this with a few source files already but had not gotten to ScrollView yet).. Currently fails on Circle CI:\nscripts/android-setup.sh: line 4: /bin/.tests.env: No such file or directory. react-native-bot is set up to look for the old envinfo snippet (see lines 112 - 124). Since we have control over how this data is printed out when it's done within a RN project, we might as well print out some unique string that we can easily grep for.\nCurrently that is \"Packages: (wanted => installed)\" but that's fragile. I don't have any suggestion at the moment, other than it should be a string that is unlikely to appear elsewhere in a GitHub issue.. Yep that would work!. Yep I can do that.. Done!. Can you change this to the new MIT license header used elsewhere in the repo?. Can you change this to the new MIT license header used elsewhere in the repo?. Ditto.. Ditto.. Hi @mjesun! When might that fix be ready? It's keeping us from running Android tests.. Hi @mjesun! When might that fix be ready? It's keeping us from running Android tests.. Can you move this step to just before # Collect Results?\n. Can you move this step to just before # Collect Results?\n. @chirag04 we just added RNTester to this job, so I think it's fine to ignore lint errors right now to keep tests green. We should, however, have someone send PR(s) to fix any lint warnings that currently exist in master so that we can re-enable lint errors.\nI have a similar issue where ShellCheck has surfaced a lot of issues in our shell scripts, but enabling it would turn tests red right away. In that particular case I plan to chip away at the shell issues until ShellCheck can be enabled fully.. @chirag04 we just added RNTester to this job, so I think it's fine to ignore lint errors right now to keep tests green. We should, however, have someone send PR(s) to fix any lint warnings that currently exist in master so that we can re-enable lint errors.\nI have a similar issue where ShellCheck has surfaced a lot of issues in our shell scripts, but enabling it would turn tests red right away. In that particular case I plan to chip away at the shell issues until ShellCheck can be enabled fully.. Yup! Can you fix?\n. Yup! Can you fix?\n. Note to myself or whoever imports this to FB: If this PR is approved, please see D8459570 for an example of how to update the offline Gradle cache as part of the import process. This will needed in order to land this PR without breaking the internal React Native OSS Android test.. Note to myself or whoever imports this to FB: If this PR is approved, please see D8459570 for an example of how to update the offline Gradle cache as part of the import process. This will needed in order to land this PR without breaking the internal React Native OSS Android test.. Moving this block down makes PR review less convenient, I am afraid.\nHere's what has changed. The following if/else block was removed (leaving the contents of the if block in place):\nif [ -z \"$CIRCLE_PULL_REQUEST\" ]; then\n ...\nelse    \n  echo \"Skipping deploy.\"   \nfi\nThe \"save-*-cache\" steps have been removed. No need to slow down a deploy while waiting for a cache to upload. This is already a noop in most cases because the cache is already up to date from the preceding jobs.\nConsolidating buck fetch steps into a single script, matching test_android.. Moving this block down makes PR review less convenient, I am afraid.\nHere's what has changed. The following if/else block was removed (leaving the contents of the if block in place):\nif [ -z \"$CIRCLE_PULL_REQUEST\" ]; then\n ...\nelse    \n  echo \"Skipping deploy.\"   \nfi\nThe \"save-*-cache\" steps have been removed. No need to slow down a deploy while waiting for a cache to upload. This is already a noop in most cases because the cache is already up to date from the preceding jobs.\nConsolidating buck fetch steps into a single script, matching test_android.. This PR is waiting for @magicien to follow up to @shergin's feedback, or alternatively for @shergin to sign off on the PR to be merged as-is.\nIt's not clear to me that this can be merged just yet, as it seems like @shergin asked for [self dirtyLayout] to be called after _previousAttributedText = _localAttributedText; and the feedback has not been addressed.. This PR is waiting for @magicien to follow up to @shergin's feedback, or alternatively for @shergin to sign off on the PR to be merged as-is.\nIt's not clear to me that this can be merged just yet, as it seems like @shergin asked for [self dirtyLayout] to be called after _previousAttributedText = _localAttributedText; and the feedback has not been addressed.. I would avoid installing utilities that are not related to Node here. You can have a separate run step instead:\n- run:\n      name: Install Apple Simulator Utilities\n      command: |\n        brew tap wix/brew\n        brew install applesimutils. I would avoid installing utilities that are not related to Node here. You can have a separate run step instead:\n- run:\n      name: Install Apple Simulator Utilities\n      command: |\n        brew tap wix/brew\n        brew install applesimutils. Same as above, split this into two run steps.. Same as above, split this into two run steps.. Syntax error, this should be - run: (space before run).. Syntax error, this should be - run: (space before run).. Indent needs to be fixed here:\ncommand: \\\n  yarn run test-ios-e2e. Indent needs to be fixed here:\ncommand: \\\n  yarn run test-ios-e2e. If you're not planning on adding commands to this step, you can simply use:\n- run:\n    name: Run Detox Tests\n    command: yarn run test-ios-e2e\nOr, if you don't want to explicitly name the step, use:\n- run: yarn run test-ios-e2e\nWhen the name: field is missing, Circle CI will display the one command instead. This is fine for self explanatory commands (i.e. \"run iOS e2e test\" above).. If you're not planning on adding commands to this step, you can simply use:\n- run:\n    name: Run Detox Tests\n    command: yarn run test-ios-e2e\nOr, if you don't want to explicitly name the step, use:\n- run: yarn run test-ios-e2e\nWhen the name: field is missing, Circle CI will display the one command instead. This is fine for self explanatory commands (i.e. \"run iOS e2e test\" above).. This job is not yet part of any workflow, and will not run. What you have here at the moment is a job definition, but it needs to be added to a workflow at the end of the file.. This job is not yet part of any workflow, and will not run. What you have here at the moment is a job definition, but it needs to be added to a workflow at the end of the file.. Actually, is this needed here? You have a separate test_end_to_end_detox job definition below.. Actually, is this needed here? You have a separate test_end_to_end_detox job definition below.. Scroll down to line 711, and add the following after the test_end_to_end block:\n# End-to-end tests (Detox)\n      - test_end_to_end_detox:\n          filters: *filter-ignore-gh-pages\n          requires:\n            - checkout_code\nThis will trigger Detox to run after the code is checked out in checkout_code.. Scroll down to line 711, and add the following after the test_end_to_end block:\n# End-to-end tests (Detox)\n      - test_end_to_end_detox:\n          filters: *filter-ignore-gh-pages\n          requires:\n            - checkout_code\nThis will trigger Detox to run after the code is checked out in checkout_code.. ``\nError ---------- local-cli/server/runServer.js:59:48\nCannot callMetro.runServerwith object literal bound to the first parameter because propertywatchis missing inRunServerOptions` [1] but exists in object literal [2].\n                                                 v\n\n59|   const serverInstance = await Metro.runServer({\n  60|     config: {\n  61|       ...config,\n    :\n  77|     watch: !args.nonPersistent,\n  78|   });\n      --^\nReferences:\n  metro/packages/metro/src/index.js:201:4\n  201| }: RunServerOptions) => {\n          ^^^^^^^^^^^^^^^^ [1]\n                                                     v\n  59|   const serverInstance = await Metro.runServer({\n  60|     config: {\n  61|       ...config,\n    :\n  77|     watch: !args.nonPersistent,\n  78|   });\n      --^ [2]\n.\nError ---------- local-cli/server/runServer.js:59:48\nCannot call Metro.runServer with object literal bound to the first parameter because property watch is missing in RunServerOptions [1] but exists in object literal [2].\n                                                 v\n\n59|   const serverInstance = await Metro.runServer({\n  60|     config: {\n  61|       ...config,\n    :\n  77|     watch: !args.nonPersistent,\n  78|   });\n      --^\nReferences:\n  metro/packages/metro/src/index.js:201:4\n  201| }: RunServerOptions) => {\n          ^^^^^^^^^^^^^^^^ [1]\n                                                     v\n  59|   const serverInstance = await Metro.runServer({\n  60|     config: {\n  61|       ...config,\n    :\n  77|     watch: !args.nonPersistent,\n  78|   });\n      --^ [2]\n``. This, while convenient for local development, does not seem like a safe default. It may add friction but I'd rather have people explicitly disable ATS.. This, while convenient for local development, does not seem like a safe default. It may add friction but I'd rather have people explicitly disable ATS.. It looks like the cookies are added asynchronously. Can we guarantee cookies have finished being added before they are flushed / written to permanent storage?\n. It looks like the cookies are added asynchronously. Can we guarantee cookies have finished being added before they are flushed / written to permanent storage?\n. Is this even necessary? We are only using git in the publish script to read the git tags, there is no write action.. Is this even necessary? We are only using git in the publish script to read the git tags, there is no write action.. Explicitly checking out here should eliminate the \"The authenticity of host 'github.com (192.30.253.113)' can't be established.\" issue. [**checkout** adds the key to~/.ssh/known_hosts](https://discuss.circleci.com/t/git-clone-fails-in-circle-2-0/15211/7), and~/.ssh` is not copied over as part of the workspace in attach_workspace.\n. Explicitly checking out here should eliminate the \"The authenticity of host 'github.com (192.30.253.113)' can't be established.\" issue. checkout adds the key to ~/.ssh/known_hosts, and ~/.ssh is not copied over as part of the workspace in attach_workspace.\n. It looks like this regex aims to strip out .es6 suffixes, but it needs one more capture group. As it stands right now, it would take index.es6 and return .es6, which is unlike the other reducers that strip out .js or .flow.js.\nIt looks like you want to use ^([^\\.]+)(\\.es\\d)?$ here, which would return index in the above example.\nThis doesn't match the comment from the line above it, however.\n. It looks like this regex aims to strip out .es6 suffixes, but it needs one more capture group. As it stands right now, it would take index.es6 and return .es6, which is unlike the other reducers that strip out .js or .flow.js.\nIt looks like you want to use ^([^\\.]+)(\\.es\\d)?$ here, which would return index in the above example.\nThis doesn't match the comment from the line above it, however.\n. This was one of the changes requested as part of the internal review (cc @PeteTheHeat).. This was one of the changes requested as part of the internal review (cc @PeteTheHeat).. Shouldn't we at least YellowBox in dev in this case?. Shouldn't we at least YellowBox in dev in this case?. Should this be considered a breaking change? . Should this be considered a breaking change? . This line will be updated to have no reference to the year in an upcoming commit. I'd leave it untouched, to avoid merge conflicts.... This line will be updated to have no reference to the year in an upcoming commit. I'd leave it untouched, to avoid merge conflicts.... We are no longer running the publish_npm_package job on stable branches, but rather we look for the actual git tag (e.g. v0.57.1, see Circle CI config).\n$CIRCLE_TAG is available when a Circle CI job is initiated due to a commit that matches the pattern established in .circleci/config.yml.\nThis envvar is empty when a job is initiated due to a commit to a branch, so we need to switch to using $CIRCLE_TAG instead.\n. Prior to removing this block, we'd end up with two separate publish_npm_package jobs.\nRemoving it ensures we only run that job on commits that are tagged with a string that matches /v[0-9]+(.[0-9]+)*(-rc(.[0-9]+)?)?/ (from the tags: block).. Circle CI is more stable these days, let's avoid pushing a release when tests are red.. rename to weakSelf and move to line 1345. rename to weakSelf and move to line 1345. I'm a bit nervous about doing the NSTimer to the RCTSR_networkRunLoop and would prefer just deallocating it in advance. Is there no other way?. I'm a bit nervous about doing the NSTimer to the RCTSR_networkRunLoop and would prefer just deallocating it in advance. Is there no other way?. Would the default client provided by OkHttpClientProvider.createClient() have similar defaults to the ones defined below?. Would the default client provided by OkHttpClientProvider.createClient() have similar defaults to the ones defined below?. \ud83d\udc4d . \ud83d\udc4d . Can you use the standard copyright header used elsewhere in the repo?\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. Can you use the standard copyright header used elsewhere in the repo?\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. Same here. Remove this line and make sure the copyright header is:\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. Same here. Remove this line and make sure the copyright header is:\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. Ditto\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. Ditto\n// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. // Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. // Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. // Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. // Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.. ReactActivityDelegate is a public method that might be used by product code in open source. As this is a breaking change, let's hold off on removing it. Can you mark it as deprecated instead? We can then remove it in the release following the one where this deprecation notice is sent out.. ReactActivityDelegate is a public method that might be used by product code in open source. As this is a breaking change, let's hold off on removing it. Can you mark it as deprecated instead? We can then remove it in the release following the one where this deprecation notice is sent out.. After importing your PR, I'm seeing the following error in one of our internal checks:\n```\nFailed parsing: The rule //libraries/fresco/fresco-react-native:nativeimagefilters could not be found.\nPlease check the spelling and whether it exists in fbandroid/libraries/fresco/fresco-react-native/BUCK.\n```\nThat BUCK file at fbandroid/libraries/fresco/fresco-react-native/BUCK is quite different from react-native-github/ReactAndroid/src/main/libraries/fresco/fresco-react-native/BUCK though. There's no nativeimagefilters reference in it, but I found a reference to native-filters in it:\n// ...\nfb_android_library(\n    name = \"imagepipeline\",\n    srcs = glob([\"**/*.java\"]),\n    visibility = DEFAULT_VISIBILITY,\n    exported_deps = [\n        \"//libraries/fresco/imagepipeline-base/src/main/java/com/facebook/imagepipeline:imagepipeline\",\n        \"//libraries/fresco/imagepipeline/src/main/java/com/facebook/imagepipeline:imagepipeline\",\n        \"//libraries/fresco/native-filters:native-filters\",\n    ],\n)\n// ...\nI'm not very familiar with BUCK, but should be use native-filters below instead of nativeimagefilters as the name for this dep?. Please add here the standard copyright header used elsewhere in the codebase.. Please add here the standard copyright header used elsewhere in the codebase.. You can remove the \"fix bug\" line here, as it should be implied by the commit message.\nCan you fix the \"donot\" typo while you're at it?. You can remove the \"fix bug\" line here, as it should be implied by the commit message.\nCan you fix the \"donot\" typo while you're at it?. This line is too long. This line is too long. @gengjiawen I noticed you added this item recently. I am not sure the template is the best place to include this. I'll remove it for now, but happy to discuss further about what you'd like to encourage people to do.. @gengjiawen I noticed you added this item recently. I am not sure the template is the best place to include this. I'll remove it for now, but happy to discuss further about what you'd like to encourage people to do.. I've been avoiding using markdown in these templates, as they are not rendered by default and actually make it harder to copy the URL. It's fairly safe for URLs, as GitHub will still render them as links should the user hit \"Preview\".\nFor reference, this is what a user sees when opening a blank template-less issue on master right now:\n\nThis is how the proposed change would look like:\n\nThis is what the current template that does not use markdown for the link looks like if the user hits \"Preview\":\n\n. I've been avoiding using markdown in these templates, as they are not rendered by default and actually make it harder to copy the URL. It's fairly safe for URLs, as GitHub will still render them as links should the user hit \"Preview\".\nFor reference, this is what a user sees when opening a blank template-less issue on master right now:\n\nThis is how the proposed change would look like:\n\nThis is what the current template that does not use markdown for the link looks like if the user hits \"Preview\":\n\n. Don't drop the colon after \"plan\", to ensure Phabricator pulls this into the Test Plan field.. Don't drop the colon after \"plan\", to ensure Phabricator pulls this into the Test Plan field.. This seems valid, the is too long.. This seems valid, the is too long.. Alright, this is silly. It looks like prettier is not happy either way... You can ignore it, and we'll try to resolve it after importing the PR.. Alright, this is silly. It looks like prettier is not happy either way... You can ignore it, and we'll try to resolve it after importing the PR.. (BTW, did you run prettier locally?). (BTW, did you run prettier locally?). Comment from Orvid King at Facebook:\n\"This header is already included, why include it again?\". Comment from Orvid King at Facebook:\n\"This header is already included, why include it again?\". I dropped the \"or Proposal\" from the title here.. Done. eslint only ignores the top node_modules directory by default, so using bots/node_modules here is sufficient to suppress the errors originating from third party code.. Done. eslint only ignores the top node_modules directory by default, so using bots/node_modules here is sufficient to suppress the errors originating from third party code.. danger/ was removed some time ago, the dangerfile is now in bots/. danger/ was removed some time ago, the dangerfile is now in bots/. Flow found some issues here:\n```\nUnexpected reserved type\nLibraries/Components/ScrollView/ScrollView.js:104:44\n  104|   disableScrollViewPanResponder: PropTypes.bool,                         \n                                                  ^^^^\n```\nTo reproduce locally try running\nflow . --flowconfig-name .flowconfig.android. Changed to ?boolean internally.. I think this phrase could benefit from additional rewording:\n\n(note: you need to run test-android-build before executing this, because if the image does not exist, it will fail)\". This is unrelated to your PR but if you can tackle it while you're touching this: can you remove this alias? It's no longer used.. This is unrelated to your PR but if you can tackle it while you're touching this: can you remove this alias? It's no longer used.. This document was moved from /DockerTests.md.. \n",
    "antoinerousseau": "resolved\n. resolved\n. resolved\n. resolved\n. resolved\n. resolved\n. ",
    "tuckerconnelly": "Whoops, that's old. I'll delete it.\n. Mmmm all the other numerical props were float, so I just copied those. I'm guessing this is because React only has PropTypes.number, which is basically float.\nI can totally make a custom integer PropType though. Will need to test how the bridge reacts if you still sent a float through, and the setZIndex param is int.\n. ",
    "noerK": "I added the fallback just because I wasn't sure whether _dispatchHotspotUpdate() was important for non-ripple-touchables. I would rather stop calling the hotspot update if pressInLocation is undefined than renaming the variables?\n. Good point. I'll add a comment :)\nActually the bug also appears on the x coord but most of the time ripple elements will be about 90-100% width of the screen or small. In these cases the wrong placement is hard to determine. \n. this.pressInLocation is set in Touchables.js. _performSideEffectsForTransition() calls _savePressInLocation() if its a new highlight. Since this doesn't get updated during an active touch i used its absolute pageX/pageY for calculation.\ne.nativeEvent does always contain the new absolute pageX/pageY values and the relative locationX/locationY vals. Here the relative values stay the same.\nI didn't found an easier way to calculate the current relative position than this but i also didnt want to go too deep.\nAt the moment its (current absolute X - (static relative X - static absolute X)).\n. ",
    "JoelMarcey": "Yeah, I thought about that -- but I wanted it to match the code on GitHub that I link to at the end as much as possible.\n. Can we remove the extraneous blank line entry here?\n. <3\n. Ha ha ha <3\n. Sure. That's cool with me.\n. Ah - nice catch. This was a debugging statement for me.\n. nit: link to the \"gesture responder system\" guide here?\n. I was thinking the same thing too. Since this has been accepted and started to ship, I will create a PR to make the extends on these. No need to block this now, imho.\n. Let me try running locally on the simulator....\n. Yeah, seems to run without Component. Seems weird. Since we are calling registerComponent on something that isn't technically a Component. Is there some sort of implied extension when we omit it or something?\n. Just curious why split out \"web view\" instead of codifying WebView? Aren't all these talking about the specific instance of the WebView in question? Or is \"web view\" the more generic thing that is being discussed?\n. I think you still wanted to keep the @platform android, right?\n. It is built in this way in the web player right now. Maybe down the road it can be configurable...\nhttps://github.com/facebook/react-native/blob/master/website/core/WebPlayer.js#L47\n. I just love the name duck punch -- so doing that sounds awesome.\nBut I am for whatever can be done quickest for now.\n. Nope. I am good. Shipping it.\n. Maybe this should be a note? e.g., \n\nThe core simulation engine is provided by Nicolas Gallagher's react-native-web project, which provides a way to display React Native components like Text and View on the web. Check out react-native-web if you're interested in building mobile and web experiences that share a large chunk of the codebase.\n\nWhat do you think?\n. We are starting to explicitly add previous links as well.\nprevious: communication-ios\n. Actually, did you mean to have this document? The one below is the one you meant, maybe, right?\n. We are starting to explicitly add previous links as well.\nprevious: communication-ios\n. \"Packaging an iOS compnent\"\n. packaging-an-ios-component\n. \"....inject native modules into React Native....\"\n\"....and publishing it as an npm package.\"\nRemove the \"so that anyone can use it\"\n. I think you can remove this.\n. \"Create a new XCode project as depicted in the following pictures. Ensure that the name of your project is prefixed with RN.\"\n. Can we just have these images locally, like we do with other images?\nPlace them in website/src/react-native/img\nAnd reference them like: ![new-project](img/1-new-project.png)\n. Instead of saying \"Note-\" explicitly, use the markdown version like:\n```\n\nRN is a prefix mainly used to indicate that it is a react-native standard library. It is not required, but it is encouraged.\n```\n. semi-colon\n\n\"...run npm init; fill out your information.\"\n. local image again.\n. You can keep these on one line.\n. no capital C in XCode.\n\"Xcode\"\n. local images again.\n. \"...for development and the one above it...\"\n. weird double spacing or something in this sentence.\n. local image again.\n. combine these two lines and maybe say something like:\n\"Great! You now have a package that can be used publicly by calling npm install your-best-package-name\"\n. Local image.\n. You can remove this.\n. I was more saying that you should use local images instead of pointing to an external URL http://brentvatne.ca, although @caabernathy mentioned maybe we shouldn't use images at all.\n. You fixed 1/2. Can you fix the other 1/2? :)\nThis should say \"This example\"  -- corrected the misspelling, but it being plural was also wrong. \n. Maybe \"By default, GIF and WebP are not supported on Android.\" ??\n. Missing comma.\n\"....android/app/build.gradle, depending on the needs.....\"\n. Missing comma\n\"Also, if you use GIF with ProGuard, you will need....\"\n. Add a previous like:\nprevious: communication-ios\n. maybe put RN in quotes like:\n\"RN\"\n. space between \"package-name,\" and \"version\"\n. It should be \"publishing\"\n. Space between \"library.\" and \"It\"  -- i.e., space after the period\n. \"...in the node_modules...\"\nspace after the period after the word \"package.\"\n. I think you can remove this line.\n. You don't need this line. The gif will speak for itself.\n. Do we even need the Using the offline bundle as part of the heading any longer?\n. @skatpgusskat Sorry for the delay. Yes, I like the updated title you proposed. Can you update the PR with that? Then I think we can ship this.\n. nit: .....that can remove all.....\n. You can probably put console.* in code format too using the backticks. e.g., console.*\n. nit: Same comment for console.* here.\n. nit .....in a release (production) version of your project.\n. nit: However, the console.* calls will still be executed in the debug version of your project.\n. Should this be called Stable? Or maybe Current Version (Stable)?\n. ....and this\nPre-release Version (RC)\nBtw, is there ever more than one Pre-release version / RC?\n. ",
    "vkarpov15": "This line will still cause a syntax error when using https://www.npmjs.com/package/babel-plugin-transform-inline-environment-variables , so you can use the specified babel plugin if you're like me and can't stand the stench of mutating global state.\n. This line will still cause a syntax error when using https://www.npmjs.com/package/babel-plugin-transform-inline-environment-variables , so you can use the specified babel plugin if you're like me and can't stand the stench of mutating global state.\n. ",
    "leeight": "@satya164 I submit a new commit which added UIExplorerApplication and MoviesApplication, please review it. Thanks\n. Auto Formatting issues, i'll fix it.\n. @satya164 Done. ;-)\n. But it will fail if value is a color type?\n. Ok\n. Ok\n. I think it's better use ES6 syntax, like this?\nimport {BackAndroid} from 'react-native';\n. I think it's better use ES6 syntax, like this?\nimport {BackAndroid} from 'react-native';\n. Nice. Done :-)\n. @janicduplessis Ping\n. @janicduplessis Ping\n. DONE\n. DONE\n. \u8bb0\u5f97\u8fd9\u4e2a break \u5f53\u65f6\u662f\u67d0\u4e2a\u63d0\u4ea4\u91cc\u9762\u523b\u610f\u52a0\u4e0a\u7684\n(translated: Remember this break was a deliberately added by submitting inside)\n. \u8bb0\u5f97\u8fd9\u4e2a break \u5f53\u65f6\u662f\u67d0\u4e2a\u63d0\u4ea4\u91cc\u9762\u523b\u610f\u52a0\u4e0a\u7684\n(translated: Remember this break was a deliberately added by submitting inside)\n. Fixed\n. <ViewPagerAndroid initialPage={0} />\n. <ViewPagerAndroid initialPage={0} />\n. @ide super.initialize do nothing, so it's safe now.\n. @ide super.initialize do nothing, so it's safe now.\n. I add some breakpoints in Android Studio, launch UIExplorer app, and found ImageLoader.prefetch was called before ImageLoader.initialize. I haven't found out the root cause, but i think it's worth send another PR.\n. I add some breakpoints in Android Studio, launch UIExplorer app, and found ImageLoader.prefetch was called before ImageLoader.initialize. I haven't found out the root cause, but i think it's worth send another PR.\n. @ide Remove the duplicate call super.initialize()\n. @ide Remove the duplicate call super.initialize()\n. Add missing deps, make scripts/run-android-local-unit-tests.sh happy\n. Add missing deps, make scripts/run-android-local-unit-tests.sh happy\n. missing space around operators\n. missing space around operators\n. Why not call promise.reject?\n. In the NetworkingModule.java, header.getString(1) was called, so the value must be String type.\n. In the NetworkingModule.java, header.getString(1) was called, so the value must be String type.\n. @javache Done.\n. break\n. break\n. \ud83d\udc4e \n. if (name === modulePath) {\n  return Promise.resolve(fromModule.getPackage()).then(resolveRoot);\n}\nreturn name;\n. rootModule could be optional?\n. If i set fontWeight to 0, it will fallback to 400, so i think it's better using font.fontWeight != null ? font.fontWeight.toString() : '400'\n. Actually React Native has many compatible issues with api level 23, so only check overlay permission is not enough?\n@satya164 How do you think about that?\n. Should be fbjs/lib/invariant\n. Should be fbjs/lib/invariant\n. @platform ios ??\n. @platform ios ??\n. We should ensure viewConfig exists before call setNativeProps\nif (this._component.viewConfig != null) {\n  this._component.setNativeProps(...);\n}\nSee https://github.com/facebook/react-native/blob/master/Libraries/Renderer/src/renderers/native/NativeMethodsMixin.js#L141-L156\n. So we can change throw new Erorr to console.warn??\n. So we can change throw new Erorr to console.warn??\n. @oblador \n\nIsn't it better to do this check in the setNativeProps function instead?\n\nLGTM\n. @oblador \n\nIsn't it better to do this check in the setNativeProps function instead?\n\nLGTM\n. @platform ios ??\n. I think it should be this.constructor.displayName\n. I think it should be this.constructor.displayName\n. var ctor = this.constructor;\nvar componentName = ctor.displayName || ctor.name || '<Unknown Component\n. var ctor = this.constructor;\nvar componentName = ctor.displayName || ctor.name || '<Unknown Component\n. How about dispatch event to JS side?\n. How about dispatch event to JS side?\n. Why not use enum type?\n. Actually i'm not sure it's right or not add  res:shell dependency here, but i guess it's a bad smell...\n. How about remove react_native_target('res:shell'), dependency and use context.getResources().getIdentifier instead of R...., for example:\ncc @satya164 \n```\nReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/I18nManagerModule.java\n44:    final Locale locale = context.getResources().getConfiguration().locale;\nReactAndroid/src/main/java/com/facebook/react/modules/statusbar/StatusBarModule.java\n58:    final int heightResId = context.getResources()\n61:      PixelUtil.toDIPFromPixel(context.getResources().getDimensionPixelSize(heightResId)) :\nReactAndroid/src/main/java/com/facebook/react/uimanager/DisplayMetricsHolder.java\n55:    DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();\nReactAndroid/src/main/java/com/facebook/react/uimanager/NativeViewHierarchyManager.java\n601:    Resources resources = v.getContext().getResources();\nReactAndroid/src/main/java/com/facebook/react/views/imagehelper/ResourceDrawableIdHelper.java\n54:    int id = context.getResources().getIdentifier(\n64:    return resId > 0 ? context.getResources().getDrawable(resId) : null;\nReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageView.java\n167:    return new GenericDraweeHierarchyBuilder(context.getResources())\nReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/FrescoBasedReactTextInlineImageShadowNode.java\n80:    int resId = context.getResources().getIdentifier(\n97:    Resources resources = getThemedContext().getResources();\nReactAndroid/src/main/java/com/facebook/react/views/toolbar/ReactToolbar.java\n301:    return new GenericDraweeHierarchyBuilder(getResources())\n308:    return getResources().getIdentifier(\n317:      return getResources().getDrawable(getDrawableResourceByName(name));\nReactAndroid/src/main/java/com/facebook/react/views/view/ReactDrawableHelper.java\n41:      int attrID = context.getResources().getIdentifier(attr, \"attr\", \"android\");\n49:          return context.getResources()\n52:          return context.getResources().getDrawable(sResolveOutValue.resourceId);\n72:          color = context.getResources().getColor(sResolveOutValue.resourceId);\n. `if (`\n. `if (`\n. `} else {`\n. java\ndialog = new DismissableDatePickerDialog(activityContext, onDateSetListener, year, month, day);\nswitch (mode) {\n  case CALENDAR:\n    dialog.getDatePicker().setCalendarViewShown(true);\n    dialog.getDatePicker().setSpinnersShown(false);\n    break;\n  case SPINNER:\n    dialog.getDatePicker().setCalendarViewShown(false);\n    break;\n}\n```\n. Why revert it? @mkonicek landed this commit (https://github.com/facebook/react-native/commit/1488725db38e925e096df94e5ca8d9ac712854db) days ago.... Why revert it? @mkonicek landed this commit (https://github.com/facebook/react-native/commit/1488725db38e925e096df94e5ca8d9ac712854db) days ago.... ",
    "skatpgusskat": "my fault. I will fix it.\n. my fault. I will fix it.\n. I heard that redirect response cannot arrive as NSURLResponse, and I tested and checked it.\nAnd by line 374, that code doesn't process 301 or 302. I never heard the NSURLResponse whit GET method has status code 301 or 302. If it's wrong, please let me know.\n. I heard that redirect response cannot arrive as NSURLResponse, and I tested and checked it.\nAnd by line 374, that code doesn't process 301 or 302. I never heard the NSURLResponse whit GET method has status code 301 or 302. If it's wrong, please let me know.\n. I tested that situation, and figured out that NSURLRequest(imageURLRequest)'s URL wasn't same with NSHTTPURLResponse's URL(set as final location of file), and the response's status code is 200(or 404 if there are no file) with that server's response headers.\nI think without implementation about URLSession:willPerformHTTPRedirection, the user-agent(in this case, iOS) try redirect and get final server's response.\n. I tested that situation, and figured out that NSURLRequest(imageURLRequest)'s URL wasn't same with NSHTTPURLResponse's URL(set as final location of file), and the response's status code is 200(or 404 if there are no file) with that server's response headers.\nI think without implementation about URLSession:willPerformHTTPRedirection, the user-agent(in this case, iOS) try redirect and get final server's response.\n. And I finally found the docs about this.\n\nIf the response is an HTTP redirect response, the NSURLSession object calls the delegate\u2019s URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler: method. That delegate method calls the provided completion handler with either the provided NSURLRequest object (to follow the redirect), a new NSURLRequest object (to redirect to a different URL), or nil (to treat the redirect\u2019s response body as a valid response and return it as the result).\nIf you decide to follow the redirect, go back to step 2.\nIf the delegate doesn\u2019t implement this method, the redirect is followed up to the maximum number of redirects.\n. And I finally found the docs about this.\nIf the response is an HTTP redirect response, the NSURLSession object calls the delegate\u2019s URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler: method. That delegate method calls the provided completion handler with either the provided NSURLRequest object (to follow the redirect), a new NSURLRequest object (to redirect to a different URL), or nil (to treat the redirect\u2019s response body as a valid response and return it as the result).\nIf you decide to follow the redirect, go back to step 2.\nIf the delegate doesn\u2019t implement this method, the redirect is followed up to the maximum number of redirects.\n. @JoelMarcey I think it could be better title, like Building an app for production. or Building an app for distribution.\nUsing the offline bundle or Disabling the developer menu is not enough I think. \n\nThe Using the offline bundle is the aciton, and Disabling the developer menu is the result. and Building an app for distribution is what people really want to do and can cover all of other things.\nLet's see this sentence, Building an app for distribution using the offline bundle, Disabling the developer menu. At least this ordering looks better than other ordering. So the title must be Building an app for distribution or similar things, I think. \nwhat about you?\n. @JoelMarcey I'm sorry to have bothered you but could you give me more feedback?\n. ",
    "burgalon": "Added :)\n. Added :)\n. @javache  So I guess I should just remove the IOS notes right?\n. ",
    "artyomtrityak": "just to be consistent can you please add spaces around Component? \nimport React, { Component } from 'react';\n. should this and same next in this review be extended from Component?\nclass AwesomeProject extends React.Component or\njs\nimport React, { Component } from 'react';\nclass AwesomeProject extends Component\n. same here about FlowType: Should FlowType State type be added for this?\n. we can use direct link to method https://github.com/facebook/react/blob/master/src/renderers/native/ReactNativeBaseComponent.js#L100\n. We can use direct link to line number here https://github.com/facebook/react/blob/master/src/renderers/native/NativeMethodsMixin.js#L142\n. You might consider to use local flow and run it from node_modules/.bin/. This allows to use different flow versions on multiple React Native projects\n. You might consider to use local flow and run it from node_modules/.bin/. This allows to use different flow versions on multiple React Native projects\n. ",
    "dabbott": "I can change it. Two things I could do:\n1. I can make it so you can override. So right now if you do '''ReactNativeWebPlayer?runApp=WhateverYouWant it won't override cause it's hardcoded. But I can have it check if you use a param and only add runApp=AwesomeProject if you don't.\n2. On the iframe side, I can just duck punch registerComponent and not care what is registered.\n. ",
    "linjson": "using \"require('./xxx.png')\" or \"require('image!xxx')\"\n. I has tested on iOS\n. ",
    "jmurzy": "I totally agree. \ud83d\udc4d Updated the PR. \nShould we remove NavigationAnimatedValue as well? Perhaps the best way to approach this is to expose the type definitions from Animated itself so we can just import them from there. I might submit another PR to fix this in Animated.\n\ud83c\udf7a \n. Not feeling too good about this. But it seems to be the only way to disable pinching. \u2639\ufe0f \n. Not feeling too good about this. But it seems to be the only way to disable pinching. \u2639\ufe0f \n. That is correct. ScrollView attaches the UIPinchGestureRecognizer very late in its lifecycle and is enabled by default. So setting the prop will have no effect.\n. That is correct. ScrollView attaches the UIPinchGestureRecognizer very late in its lifecycle and is enabled by default. So setting the prop will have no effect.\n. Currently, pinch gesture is always enabled by default and there is no way to disable it.\n. Currently, pinch gesture is always enabled by default and there is no way to disable it.\n. Sending messages to nil is legal in Obj-C. So this is safe. \ud83e\udd16\n. Sending messages to nil is legal in Obj-C. So this is safe. \ud83e\udd16\n. @dlowder-salesforce It's a subclass of ScrollView, not ScrollViewController. Lifecycle methods aren't available.. @dlowder-salesforce It's a subclass of ScrollView, not ScrollViewController. Lifecycle methods aren't available.. @shergin That's a good idea!. @shergin That's a good idea!. ",
    "pletcher": "Nit: reference \n(saw this in an email, wanted to comment -- hope it's not too late)\n. Nit: reference \n(saw this in an email, wanted to comment -- hope it's not too late)\n. onSubmitEditing\n. onSubmitEditing\n. ",
    "dbasedow": "It's not part of the JS browser API. Most low level WebSocket implementations expose a ping or sendPing method. Usually you can add data to the ping that will be sent back as a pong by the server.\nHigher level libs like socket.io do not directly expose a method for pinging but instead manages the regular pinging internally: https://github.com/socketio/engine.io-client/blob/2c55b278a491bf45313ecc0825cf800e2f7ff5c1/lib/socket.js#L487\n. It's not part of the JS browser API. Most low level WebSocket implementations expose a ping or sendPing method. Usually you can add data to the ping that will be sent back as a pong by the server.\nHigher level libs like socket.io do not directly expose a method for pinging but instead manages the regular pinging internally: https://github.com/socketio/engine.io-client/blob/2c55b278a491bf45313ecc0825cf800e2f7ff5c1/lib/socket.js#L487\n. ",
    "wv1124": "@Override\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n  if (url.startsWith(\"tel:\") || url.startsWith(\"sms:\") || url.startsWith(\"smsto:\") || url.startsWith(\"mms:\") || url.startsWith(\"mmsto:\")) {\n    ReactContext reactContext = (ReactContext) view.getContext();\n    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    reactContext.startActivity(intent);\n    return true;\n  }\n  return false;\n}\n. @Override\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n  if (url.startsWith(\"tel:\") || url.startsWith(\"sms:\") || url.startsWith(\"smsto:\") || url.startsWith(\"mms:\") || url.startsWith(\"mmsto:\")) {\n    ReactContext reactContext = (ReactContext) view.getContext();\n    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    reactContext.startActivity(intent);\n    return true;\n  }\n  return false;\n}\n. @Override\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n  if (url.startsWith(\"tel:\") || url.startsWith(\"sms:\") || url.startsWith(\"smsto:\") || url.startsWith(\"mms:\") || url.startsWith(\"mmsto:\")) {\n    ReactContext reactContext = (ReactContext) view.getContext();\n    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    reactContext.startActivity(intent);\n    return true;\n  }\n  return false;\n}\n. @Override\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n  if (url.startsWith(\"tel:\") || url.startsWith(\"sms:\") || url.startsWith(\"smsto:\") || url.startsWith(\"mms:\") || url.startsWith(\"mmsto:\")) {\n    ReactContext reactContext = (ReactContext) view.getContext();\n    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    reactContext.startActivity(intent);\n    return true;\n  }\n  return false;\n}\n. ",
    "Hari70a": "Ok @bestander  I will do it\n. Ok @bestander  I will do it\n. Yes the next one.(packaging a ios component alone)\n. Yes the next one.(packaging a ios component alone)\n. ok\n. ok\n. Ok I will do\n. Ok I will do\n. You want to remove the line which are marked with red  stars . Am I right?\n. You want to remove the line which are marked with red  stars . Am I right?\n. Do I need to remove the  one marked with red stars indicating the  topic of \"using the package\"\n. Do I need to remove the  one marked with red stars indicating the  topic of \"using the package\"\n. ",
    "yueshuaijie": "I'm worried that if NativeMethodsMixin.js source code changes, the line number we specified will mismatch.\n. Fixed in 99673f4e8d3d429adbe89bca22370aed0cfefc87.\n. Fixed in 99673f4e8d3d429adbe89bca22370aed0cfefc87.\n. Thanks! Patch updated.. ",
    "david135": "Agreed.  With a prominent warning that loading from the development server will not be available, they could still test their app with the installed bundle.\n. It's not my intent that we keep the three alternatives in place, but I thought it might be helpful in deciding which alternative is best.  Happy to make it only whichever one  you (@frantic, @javache, and  @nathanajah) prefer and remove the alternatives. I agree that some improvements under the hood would ultimately be most helpful, but hope that this would provide some immediate improvements for newer developers, with very little downside. Thanks, and good travels!\n. ",
    "fadils": "thanks @chirag04 !\n. @satya164 If I remember correctly, it's related to how flow keeps complaining. That's probably messed my head a bit on this as well as on the custom prop checker. I'll revert it, and see how it goes.\n. Will do @janicduplessis \n. Thanks!\n. I think the case is because we use custom propType checker instead. Since I'm gonna revert it, this doc is will be better left out. Thanks!\n. @satya164 This is what I was talking about that flow keeps complaining, and thus I decided to create a custom propType checker instead.\n. @satya164 This is what I was talking about that flow keeps complaining, and thus I decided to create a custom propType checker instead.\n. Thanks! Didn't know about it.\n. Thanks! Didn't know about it.\n. @janicduplessis Previously, you suggested that we erase example that uses transformation.\nI was thinking that if we put\n{\n  platform: 'ios',\n  ...\n}\nthen it would be a bit misleading as actually transformation can be done in Android as well.\nIf we didn't use platform, then the example will still be shown in Android, along with the custom size (with number) examples.\nAny input?\nShould we just keep it with something like this:\n{\n   title: 'Custom size (transform scale: 1.5)',\n}\n. @janicduplessis Previously, you suggested that we erase example that uses transformation.\nI was thinking that if we put\n{\n  platform: 'ios',\n  ...\n}\nthen it would be a bit misleading as actually transformation can be done in Android as well.\nIf we didn't use platform, then the example will still be shown in Android, along with the custom size (with number) examples.\nAny input?\nShould we just keep it with something like this:\n{\n   title: 'Custom size (transform scale: 1.5)',\n}\n. OK. Thanks!\n. OK. Thanks!\n. ",
    "enterline": "@ide I pulled this class out of ReactWebViewManager and made it public so that I could spy on it using Mockito and test the functionality of the ReactWebViewManager. \nI figured other simliar classes like this are already public (eg. https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextView.java et al.) so there is no harm\n. Since we are already in the android directory: https://github.com/facebook/react-native/pull/8950/files#diff-a003f89d34db18b4567fdb55080a003eR81\nI believe these two file paths should be app/build.gradle and app/build/intermediates/manifests/full\n. ",
    "SwiftyWii": "You are right, I used to think the snippet is in the index file\n2016-07-25 18:37 GMT+08:00 Alexey notifications@github.com:\n\nIn docs/UsingNavigators.md\nhttps://github.com/facebook/react-native/pull/9000#discussion_r72042054:\n\n@@ -103,7 +103,7 @@ A more complete example that demonstrates the pushing and popping of routes coul\njavascript\n import React, { Component, PropTypes } from 'react';\n-import { Navigator, Text, TouchableHighlight, View } from 'react-native';\n+import {AppRegistry, Navigator, Text, TouchableHighlight, View } from 'react-native';\n\nnit: space between { and AppRegistry.\nI'd rather add AppRegistry in the places where it's used (it's not used\nin the code snippet where you added it)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/facebook/react-native/pull/9000/files/2efe82dffe129143a2cd5147769f064ac8c61d23#r72042054,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKXTLAU4JRqEV2AxzYixXQXglrfnzGJ-ks5qZJIHgaJpZM4JTypP\n.\n. \n",
    "matryoshcow": "Shiny! :D One final thought: you are only logging the directory read time; could you please include the symlink resolving in your timing as well? This is relevant too and may in fact be more costly than the simple read op.\n. Also, it appears you're requiring the symlink resolver but you're not actually using it.\n. What I mean is - you might actually want to call findSymlinkPaths to... you know... find the symlink paths and perhaps append them where they belong, no? :)\n. ",
    "ryangomba": "Aren't we going to have a problem if we happen to re-render during an animation? Namely, out-of-date JS values will override up-to-date native values when the view us updated. Contrived example:\nTick 1 (first render):\n- js=0\n- native=0\nTick 2 (animation driven natively):\n- js=0\n- native=0.1\nTick 3: (still driving, listener called on the JS side)\n- js=0.1\n- native=0.2\nTick 4: (still driving, we call a re-render)\n- js=0.2\n- native=0.3\nTick 5 (re-rendered):\n- js=0.2\n- native=0.2 (but we'd expect 0.4)\nIt seems like the old __getValue, this updated __getValue behavior, and __getAnimatedValue all have slightly different intents:\n(1) What prop values should we be setting on the native view when we render?\n(2) What are the current values of animated props?\n(3) What values are we driving and may need update via setNativeProps? (inverse of 1)\nIt seems like there is a great tension between an animate prop being treated like any other prop, and being managed independently. \n. It's fine that the values passed to JS aren't representative of the true state of the element. What's not okay is if we take this stale data and use it to update the element, which we will do here whenever we render the element again. Concretely, you might see the animated view unexpectedly snap backward in time when you call setState, which would be jarring.\n. Another contrived example, but imagine there is no value listener and you do the following:\n- render a view with opacity = new Animated.Value(0)\n- call anim.setValue(1) \n- drive a native animation from 1 to 0.5\n- call setState({foo: 'bar'}); the view will be re-rendered with opacity=1\nThe bug will pop up when both the following conditions are true:\n1. the value has changed on the JS side since the last render\n2. the value on the JS side and the native side are out of sync\n. nit: space\n. nit: space\n. feels like we should assert here for the correct number of arguments + the type of the arg at index 2 and throw a helpful error if we run into a problem. also, nit: can we just name this currentValue\n. Hmm, in what scenario would this be true? No prop should be driven both by the shadow view and a native animation, it's one or the other. Native animated props actually get stripped from the set of props sent to the shadow view; they are mutated independently via this package, completely outside the shadow view hierarchy. It's a limitation for sure, e.g. we can't drive layout props like width or height, but this should be safe from a race.. Do you feel that the comment in the header file is insufficient?\n/**\n * Used by native animated module to bypass the process of updating the values through the shadow\n * view hierarchy. This method will directly update native views, which means that updates for\n * layout-related propertied won't be handled properly.\n * Make sure you know what you're doing before calling this method :)\n */\nThis warning also exists in the Android codebase.. ",
    "scarlac": "I looked at the two other examples in the beginning of the guide to keep the code style the same and they wrap JSX components in parenthesis, even for 1-liners so I tried to keep the style identical. @hramos but I can change it if you want?\n. @hramos Yes, that was unintentional. Sorry about that.\n. Sure, that's a question of preference. I just tried to make as minimal changes as I could. Should I fix it up, @hramos ?\n. I think this one needs to be changed as well, to match the code later on, @hramos \n. I think this one needs to be changed as well, to match the code later on, @hramos \n. Great suggestion, @mmmulani! I actually forgot about that I could inspect the UI layers.\nI'm thinking of this, which seems to work:\nNSString *subviewClass = NSStringFromClass([subview class]);\nif([subviewClass isEqualToString:@\"_UIRefreshControlModernContentView\"]) { ... }\nI will look into adding a test instead of doing this runtime this week.. Great suggestion, @mmmulani! I actually forgot about that I could inspect the UI layers.\nI'm thinking of this, which seems to work:\nNSString *subviewClass = NSStringFromClass([subview class]);\nif([subviewClass isEqualToString:@\"_UIRefreshControlModernContentView\"]) { ... }\nI will look into adding a test instead of doing this runtime this week.. Since the callbacks are now added by the parent class (AnimatedWithChildren), the arguments are now up to the extending classes, which means AnimatedValueXY takes {x: number, y:number} while AnimatedValue takes {value: number}.\nI'd like to keep the types but I'm not familiar enough with Flow to know how that would work. Should I investigate further?. Actually, after the flow fixes your suggestion may work (listeners for AnimatedValue and ~XY were decoupled). I'll brb with a fix and change the name back as well, to keep the changes minimal.. ",
    "zxcpoiu": "If I add addition [self cancel]; before return ( line 72 ), then eventually, _timer object will be set to nil on each cancel, ! _vibrating and before any _timer recreation.\nwould retain cycle be avoided ?\nor should I create a weak target ?\n. ",
    "cameronhunter": "Sure thing. I didn't think it would be worth setting the backup if the original wasn't going to be redefined.\n. ",
    "jr-k": "Thanks for this code review !\n. Yes you're right\n. ",
    "naqvitalha": "Done\n. ",
    "manicakes": "Good idea - will do. \n. Good idea - will do. \n. \ud83d\udc4d \n. \ud83d\udc4d \n. \ud83d\udc4d \n. \ud83d\udc4d \n. It's used in the subsequent lines, as I split out the rgb and alpha components. Hope that makes sense. \n. It's used in the subsequent lines, as I split out the rgb and alpha components. Hope that makes sense. \n. ",
    "cjhopman": "I think we're fine with just copying this code into cxxreact/ for now. This fixes one of the most common crashes we've seen in the wild. Longer term, we'll figure out a less bad solution... but that may be a while.\n. I think we're fine with just copying this code into cxxreact/ for now. This fixes one of the most common crashes we've seen in the wild. Longer term, we'll figure out a less bad solution... but that may be a while.\n. ",
    "LearningDave": "My bad. Added ios-deploy as optional dependency because it fails the npm install if its run on any other os besides darwin.\nDoes anyone have a better solution? \n. Good idea, i've added a message if ios-deploy is not installed globally:\n\n\n. ",
    "kgritesh": "@enterline yes you are right these two paths should be app/build.gradle and app/build/intermediates/manifests/full . I have updated my PR accordingly.\n. ",
    "GantMan": "You have version 0.31 still here.\n. This is a flow mock to add the web polyfill for the mocked boolean.\n. This is a flow mock to add the web polyfill for the mocked boolean.\n. Would that be correct?  I'm adding a function to keyboard.  Would that be defeating the idea of const?\n. You're the boss! :)\n. These comments don't make sense when you short-circuit the IF condition.  They should be removed/modified.\n. These comments don't make sense when you short-circuit the IF condition.  They should be removed/modified.\n. it is the same condition, but the above line might have made module not null.  It's not an else if.  It tricked me up, too.   But this is the cascading code.   If the above code modified module, then the second code doesn't run.\nI don't know who chose to write this code like this... feels unreadable, but I followed suite :)\n\"When in Rome\"\n. yup flip works \ud83d\udc4d . yup flip works \ud83d\udc4d . This pattern is how it works in Android.  . This pattern is how it works in Android.  . \ud83d\udc4d \n. \ud83d\udc4d \n. I can see about moving this down to patch level.. I can see about moving this down to patch level.. will give this a try and let you know.. will give this a try and let you know.. Will check into this and report back.\n. Will check into this and report back.\n. I punched up the Regex so it finds the first namespace that is followed by IReactPackage\n. I punched up the Regex so it finds the first namespace that is followed by IReactPackage\n. moved down to patches.. moved down to patches.. Yeah, take heed on the npm cache if you do local folders :(. you can move these requires inside of the windows code, so they won't be required on non-win32.\nNot a huge refactor, but I'd do it.. you can move these requires inside of the windows code, so they won't be required on non-win32.\nNot a huge refactor, but I'd do it.. ",
    "jankalfus": "Done\n. It's related to this issue: https://github.com/facebook/react-native/issues/8701\nShould I add it as a note?\n. What if you don't set a concrete React Native package version in package.json?\n. Done\n. @satya164 I guess it's a matter of personal preference. I always like to be explicit.\nChanged into a note.\n. @satya164 I've tried merging a gradle script file for an existing project with the react.gradle one from react-native, but without success. There is too much going on and I'm not a gradle expert.\nIf you knew how to do that for any existing project, that would be great..,\n. Done\n. Done\n. Done\n. Done\n. @satya164 Nope. I've tried this and ran into issues that I mentioned earlier.\n. ",
    "dlowder-salesforce": "Correct... that's a deprecated API on iOS, and not available on tvOS.  Apple recommends NSURLSession.\n. Correct... that's a deprecated API on iOS, and not available on tvOS.  Apple recommends NSURLSession.\n. Fixed.  Will just leave this file unchanged and modify the Xcode project to not include it in the Apple TV libraries/executables.\n. Fixed.  Will just leave this file unchanged and modify the Xcode project to not include it in the Apple TV libraries/executables.\n. Fixed. Will just leave this file unchanged and modify the Xcode project to not include it in the Apple TV libraries/executables.\n. Completion handler cannot be NULL -- but I'll make the rest of this change.\n. OK.\n. No there doesn't seem to be.  For persistent storage, apps can use NSUserDefaults (for tiny amounts of data) or iCloud sync.  https://developer.apple.com/library/tvos/documentation/General/Conceptual/AppleTV_PG/\n. Ok.\n. Ok.\n. I'd like to leave this as is for now and gut it later.  It's required by default in ScrollResponder.js.  Gutting it would require package manager changes for Apple TV so the JS layer can know when it's running on tvOS.\n. Agreed, I'll back out all the TARGET_OS_TV stuff here and just stub this out in the tvOS project files when we get there.\n. Agreed, DatePickerManager can be stubbed out in tvOS projects.\n. Ok.\n. Agreed, will just leave this out of the tvOS projects.\n. Good idea... done :)\n. onFocus and onBlur are already used as event names in TextInput, I would like to keep unique names to avoid confusion.  In any case, I can remove these for now, these should really be part of a later commit.\n. Done.\n. Removing this change, this should be part of a later commit.\n. Happy to kill it now :)\n. Happy to kill it now :)\n. Ok.\n. Ok.\n. Agreed, I'll back out the RCTPicker and RCTPickerManager changes.\n. Agreed, I'll back out the RCTPicker and RCTPickerManager changes.\n. I don't recall making this change... might have been there when I started the Apple TV work and just was carried along with my commits.  I'll remove this.\n. I don't recall making this change... might have been there when I started the Apple TV work and just was carried along with my commits.  I'll remove this.\n. Done.\n. Done.\n. Ok.\n. Ok.\n. Ok.\n. Looks like this is possible, so I will go ahead and back this out.\n. That's a good question -- it seems to compile for tvOS now that I'm on tvOS 10.  Will back this out.\n. Hmmm I think that got changed and then changed back by an upstream commit... will fix this.\n. OK\n. This should have been wrapped in a TARGET_OS_TV... will fix.\n. Will fix this.\n. Weird I committed the change to remove the whitespace, but the diff doesn't show it....\n. This is fixed in my latest commit.\n. This is fixed in my latest commit.\n. Agreed, the default should be the same as the current behavior.\n. Can you disable it in viewDidLoad?\n. Done\n. All libraries should have two targets now, one for iOS and one for tvOS.  So this is probably correct.  If you have integration test automation for the new library, and it is passing on tvOS, then the project is ok :)\n. @hramos I just noticed that this is for generating starter iOS projects.  From what I'm seeing, there are tvOS targets for the other libraries included, so this should be fine.  At some point fairly soon, I'll get to supporting tvOS fully for starter projects.\n. I've found a performant way to do this with a custom event emitter, so we won't need to walk the view tree... a commit is coming soon :)\n. Sure, I'll fix this.\n. I ran into some problems and errors if I did \"extend React.Component\".  I'll have another look.\n. If there's a way for the JS layer to know that it's running on tvOS, then I can make sure that TVView is only used in that case.  I see that there is the concept of \"userInterfaceIdiom\" in RCTPlatform.m, but that doesn't seem to be exposed in the JS layer.\n. Yes, I can apply the defaults on the native side.\n. I'll take a look at this.... thanks for the suggestion!\n. Using the original argument variable, they didn't seem to show up in the closure... I'll have another look.. That will get updated after I merge in the Platform.ios.js changes...\n. Ok.. Ok. Ok. Ok. I'd love to see an example of how you would like to modify the Touchable components for TV... I think the Platform.ios.js changes are good to have in any case, as they make it possible for developers to have common components with iOS and tvOS specific customizations or styles.. Sure I can do that.  I think I started doing a null check on Platform when an earlier version of my changes caused the TouchableHighlight JS unit test to need that check :). Yes!. OK.. OK.. Is it guaranteed that interfaceIdiom == 'tv' only for tvOS?  . This won't have any effect on iOS or Android.. It seemed to me that this was cleaner, since some of the sizes were duplicated and I have a preference for defined vars over hardcoded numbers..... It seemed to me that this was cleaner, since some of the sizes were duplicated and I have a preference for defined vars over hardcoded numbers..... That's copied from the Android version.. That's copied from the Android version.. I think this makes the code more readable.. I think this makes the code more readable.. I'm leaving this as is because it's copied from the existing code in the previous BackAndroid.android.js. I'm leaving this as is because it's copied from the existing code in the previous BackAndroid.android.js. See comment at line 26.  This only runs if the script is run with an additional argument -- it allows a developer to run all the tvOS tests locally.  If the extra argument is not passed in, this is skipped and the script just builds tvOS and exits.. There were only two pages when I tested this, one for BackHandler, and one for BackAndroid to let users know that it is deprecated.. There were only two pages when I tested this, one for BackHandler, and one for BackAndroid to let users know that it is deprecated.. Yes the website seems to be generated fine.... I'll add a screen shot. Yes, that is the intention.  I'll change the title and filename.. No problem. Done.. Screen shots:\n\n\n. LOL that's what happens when you do search and replace text too quickly..... LOL that's what happens when you do search and replace text too quickly..... The original is giving a \"documentation error\"  when compiling and running the unit and integration tests.. The original is giving a \"documentation error\"  when compiling and running the unit and integration tests.. Done.. Done.. . . It's probably simpler to just wrap those files in if TARGET_OS_TV. OK. Never mind -- this is done now.. didSelectViewController seems to work fine on iOS too... if desired, we could just use this method for both iOS and tvOS.. didSelectViewController seems to work fine on iOS too... if desired, we could just use this method for both iOS and tvOS.. Done. Done. Done. Done. I'll try that.. I'll try that.. In my testing, onRequestClose gets set before insertReactSubview.  We definitely don't want the gesture recognizer to be added unless onRequestClose is implemented, otherwise the default menu button action won't happen.. In my testing, onRequestClose gets set before insertReactSubview.  We definitely don't want the gesture recognizer to be added unless onRequestClose is implemented, otherwise the default menu button action won't happen.. Ok.. Ok.. @shergin I've made the changes you requested. @shergin I've made the changes you requested. My concern is that if the gesture recognizer is there, but there is no onRequestClose, then the application will be stuck with the modal showing.  That said, your statements about needing to override setOnRequestClose are correct, and I'll make that change.. My concern is that if the gesture recognizer is there, but there is no onRequestClose, then the application will be stuck with the modal showing.  That said, your statements about needing to override setOnRequestClose are correct, and I'll make that change.. Requested changes are made.. Requested changes are made.. This class seems to be set up so that subviews has either 0 or 1 views in it.  I can use _reactSubview instead, I suppose..... This class seems to be set up so that subviews has either 0 or 1 views in it.  I can use _reactSubview instead, I suppose..... Please back out the changes to this file -- it's not related to your new feature and I think the issue with this file has already been fixed separately by someone else.. Please back out the changes to this file -- it's not related to your new feature and I think the issue with this file has already been fixed separately by someone else..  I had the impression that developers using RN would not use Touchable directly, but use TouchableOpacity, TouchableHighlight, etc., which implement onTouchableHandleActivePressIn (and Out).  So it seems to me that those files also need to change, yes?  And the way this has been done, it appears that components implementing Touchable methods aren't allowed to handle both press and focus events.  It seems to me that that would be a big breaking change for Apple TV, at the very least..  I had the impression that developers using RN would not use Touchable directly, but use TouchableOpacity, TouchableHighlight, etc., which implement onTouchableHandleActivePressIn (and Out).  So it seems to me that those files also need to change, yes?  And the way this has been done, it appears that components implementing Touchable methods aren't allowed to handle both press and focus events.  It seems to me that that would be a big breaking change for Apple TV, at the very least.. So eventually, TouchableHighlight and TouchableOpacity would not work on tvOS?. So eventually, TouchableHighlight and TouchableOpacity would not work on tvOS?. Currently in tvOS, a focus event fires onPressIn, a blur event fires onPressOut.  This allows TouchableHighlight and TouchableOpacity to work very naturally without changes on tvOS, and therefore an iOS and tvOS app can share a lot of React Native UI code.  It seemed to me that the changes in this PR were heading in a direction where this would eventually not be possible -- did I misunderstand what you are trying to do?. Thanks @jayphelps .... sorry for my slowness.  I read it over again, and had a good discussion about it with @matthargett .  Looks good.. @rozele on Apple TV, we don't do any special highlighting when the remote button is held down.  In general, TV apps highlight a view only when it comes into focus as a result of arrow key or touchpad swipe navigation.. ",
    "Razzeee": "I feel the same way. We could change main file to index.ios.js or index.android.js which might be confusing, but probably better?\n. ",
    "littlesome": "There's a bug on iPad with split screen, Dimensions.get('window') always returns screen size.\nwindow's: width & height should be UIWindow's bounds as apple said:\n\nLikewise, in iOS 9 it\u2019s no longer appropriate to employ the screen\u2019s bounds to gauge your app\u2019s visible area. Instead, obtain the value of your app\u2019s window\u2019s bounds property (which the UIWindow class inherits from the UIView class.)\n\nhttps://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/AdoptingMultitaskingOniPad/index.html#//apple_ref/doc/uid/TP40015145-CH3-SW1\nand what about provide both window and screen like android do?\n. ping is missing. ",
    "rh389": "Could be if (devices.indexOf(args.deviceId) !== -1) using args.deviceId in the call below, and then there's no need for the filter function. The call won't work as-is because selectedDevice is actually an array.\n. If devices isn't an array we need to worry about that earlier than this.\n. Should use devices here rather than making another method call.\n. Should move this tryRunAdbReverse call into the forEach block below, after we've guaranteed that we can get a list of devices. Otherwise the map call will error and we'd never fall back to shell am start.\n. If we look for and validate args.deviceId here couldn't we simply set devices = [args.deviceId] and not have to fork the logic - there'd be no need for runOnSpecificDevice at all? Particularly because at the moment runOnSpecificDevice skips building gradleArgs - it seems better to keep things consistent and avoid repetition.\n. header.BCVersion is pulled directly out of the byte code header and it's unsigned, which obviously makes sense. runtimeBCVersion is a signed argument allowing JSNoBytecodeFileFormatVersion = -1 to be used as a magic value indicating no support (although in this logic I've assumed any negative value or equality with that magic value indicates runtime incompatibility).\nThe idea is we determine that runtimeBCVersion is non-negative (i.e. MSB=0) before comparing it to the unsigned header.BCVersion - it's safe to cast the former to uint32_t at that point and do a comparison.. header.BCVersion is pulled directly out of the byte code header and it's unsigned, which obviously makes sense. runtimeBCVersion is a signed argument allowing JSNoBytecodeFileFormatVersion = -1 to be used as a magic value indicating no support (although in this logic I've assumed any negative value or equality with that magic value indicates runtime incompatibility).\nThe idea is we determine that runtimeBCVersion is non-negative (i.e. MSB=0) before comparing it to the unsigned header.BCVersion - it's safe to cast the former to uint32_t at that point and do a comparison.. Maybe - to be honest I'm not a fan of magic values that sit inside the theoretical range of versions. Personally I'd use a separate argument or box it in an NSNumber * (with nil indicating incompatibility), but I was trying to keep this PR minimal and minimally opinionated ;).\nLooking at it, changing versions to uints across the board would have implications for RCTJSCExecutor, ReactCommon and a few public APIs - so perhaps the safest thing to do is to keep a light touch?\nYour call though - I'm happy to update the PR with whatever you prefer.. Maybe - to be honest I'm not a fan of magic values that sit inside the theoretical range of versions. Personally I'd use a separate argument or box it in an NSNumber * (with nil indicating incompatibility), but I was trying to keep this PR minimal and minimally opinionated ;).\nLooking at it, changing versions to uints across the board would have implications for RCTJSCExecutor, ReactCommon and a few public APIs - so perhaps the safest thing to do is to keep a light touch?\nYour call though - I'm happy to update the PR with whatever you prefer.. It is an Image, yes, I was following the lead of CameraRollExample.js. AFAIK it's fine to use any type as a key but possibly sub-optimal if object references change when their contents don't materially change. Happy to go with path instead if you like - it's probably safe to assume that's unique in this context.. It is an Image, yes, I was following the lead of CameraRollExample.js. AFAIK it's fine to use any type as a key but possibly sub-optimal if object references change when their contents don't materially change. Happy to go with path instead if you like - it's probably safe to assume that's unique in this context.. Done - and I've added comments to explain the encoding/decoding. The bot's pointing to the wrong line here, but the issue is now fixed.. I'll be honest, I had to google that one! Cheers ;). Optional because they're set to null once called, Function rather than anything more specific because we don't know how many args they're called with, afaik. Open to suggestions?. I think I didn't touch this because that seemed too obvious - does #14551610 say anything? (I guess that's internal). My guess is that since we'd want to throw an error if callback isn't set anyway, it's not worth the (small) performance hit to check it - noting that we do check in dev?\nCheers for having a look.. This isn't my design but that's what they are - the CameraRollView is a ListView where each row's data is an array of Images (as in instances of the Image RN component). See for example getInitialState and _rowHasChanged. Apparently that's just used as a container for data from which the rendered Image is built.. This isn't my design but that's what they are - the CameraRollView is a ListView where each row's data is an array of Images (as in instances of the Image RN component). See for example getInitialState and _rowHasChanged. Apparently that's just used as a container for data from which the rendered Image is built.. npm run lint doesn't have any problem with this.. ",
    "gorangajic": "introducing a new one\n. introducing a new one\n. This is needed because one edge case that I stumble upon. When you are in the \"pressing\" state if component update it will change opacity, so to prevent that we need to ignore that update and update only when press is released\nnot sure if I am clear, if you need more info I will try to explain that better\n. This is needed because one edge case that I stumble upon. When you are in the \"pressing\" state if component update it will change opacity, so to prevent that we need to ignore that update and update only when press is released\nnot sure if I am clear, if you need more info I will try to explain that better\n. ",
    "zimengle": "@lacker done..thanks for your advice.\n. ",
    "tepamid": "OK. I'll fix it.\n. If I do not markUpdateSeen each child in the entire Surface subtree, then ARTSurface's method onCollectExtraUpdates is called ONLY ONCE right after the app start. As I understood from the react-native sources when a child is updated it is marked \"update not seen\" (i.e. some ARTShape on a ARTSurface) and also it tries to mark its parent as \"update not seen\" only if parent doesn't have any pending updates. Otherwise if parent itself is already marked \"update not seen\", then an update is not propagated further to even more distant ancestors and obviously to the ultimate ancestor ARTSurface. \nThat's why I need to mark all ARTSurface's children as \"UpdateSeen\" even if TextureView's Android.Surface is not ready for drawing.\nOr is there a pre-built method in ReactNative for this?\n. @ide Ok. Got your point. I'll fix it.\n. @greghe do you think it's necessary to avoid multiple instantiation of OkHttpClient?\nMakes sense.\nWhat about getOkHttpClient() ? Should it be also declared synchronized ?\n. ",
    "RD1991": "'Are there no other callbacks we get after the auto correct suggestion gets committed?'\nI don't think so. \n. ",
    "mdamien": "oops, nice catch\n. ",
    "ransj": "Haha, all i thought was make smallest change to the code.\nMaybe i should write like the official android api:\nDisplayMetrics dm = new DisplayMetrics();\ngetWindowManager().getDefaultDisplay().getMetrics(dm);\nis this ok?\n. Haha, all i thought was make smallest change to the code.\nMaybe i should write like the official android api:\nDisplayMetrics dm = new DisplayMetrics();\ngetWindowManager().getDefaultDisplay().getMetrics(dm);\nis this ok?\n. e...., fbcore can be removed. Tks, the master branch still works on 2.1.3 and android-apt works with 2.2+, I will try annotationProcessor.\ndependencies {\n        classpath 'com.android.tools.build:gradle:2.1.3'\n        classpath 'de.undercouch:gradle-download-task:2.0.0'. I have thought where the processor module should be, two reasons not a top level module.\n1. The processor module only work on android performance\n2. The module should be a third-party library. The copy work with official source and another work alone version optimize custom modules and views created by app developers.. @felipecsl I can not found annotationProcessor on google, pls give me a link.. @felipecsl seems annotationProcessor does not support local module. er..., it is strange to use getDouble and convert to int or float. I have read the original code of ARGUMENT_EXTRACTOR_INTEGER and ARGUMENT_EXTRACTOR_FLOAT. I will fix this and refresh PR. ",
    "AaaChiuuu": "isn't this and line 94 checking the same thing? can you combine this logic?\n. do we need args.containsKey(DatePickerDialogModule.ARG_SPINNERMODE)?\nargs.getBoolean(DatePickerDialogModule.ARG_SPINNERMODE) defaults to false\n. do we need args.containsKey(DatePickerDialogModule.ARG_SPINNERMODE)?\nargs.getBoolean(DatePickerDialogModule.ARG_SPINNERMODE) defaults to false\n. Why was this if case deleted from here and moved up? If setConfig(null) is called multiple we create a new default config multiple times.\n. Why change the call to initialize with the ReactApplicationContext instead of the ApplicationContext?\n. Why remove null-ing out mConfig? Now we risk a memory leak.\n. I think this case can stay deleted with mConfig being set to null below. Looks like a refactor may have gone wrong.\n. ",
    "SandroMachado": "Because in iOS project by default only the portrait orientation is enable. I think it should match the same configuration.\n. Because in iOS project by default only the portrait orientation is enable. I think it should match the same configuration.\n. Sure, I will update the PR.\n. @JoelMarcey, agree, I am not a native english speaker. Thanks for the feedback. I will update the PR.\n. During the app I migrated, I only found this issue and the #10478. There is a list with the other issues? This one is blocking, without this, the app will not work.\n. @satya164 I am mobile developer and I know that I need to add permissions to access location or even the network state in Android. I also know that in iOS to access user location I need to include the UIRequiredDeviceCapabilities key in the app\u2019s Info.plist file. That is in the docs.\nI am starting at React Native, so this problem is probably mine, but, I didn't know that to an Hello World app integration (and probably the other Android Developers or React Native/JS developers also) I need to request the overlay permission. And since the app just crashes and the crash report in the logcat is not the most helpful, IMO, this information would be very helpful to other developers.\nMost of the Android developers will not use an emulator, so when they open the ReactActivity they will just see a crash because the activity is not connected with the NPM server. They need to open the React Native activity the first time to access to the dev activity to configure the server url.\nAbout the run time permissions, introduced in Android API level 23, there is a section in the documentation (PermissionsAndroid) so, the developers know that they need to handle it. My point is: it is not easy to get, that if you are targeting to Android API level 23, you will need to request the overlay permission in development mode, even for an Hello World.\nPlease don't get me wrong. I am just trying to contribute to the community and improve the documentation to help other developers to have a better learning curve when they start in React Native.\nThanks for your feedback.\n. @satya164 I am mobile developer and I know that I need to add permissions to access location or even the network state in Android. I also know that in iOS to access user location I need to include the UIRequiredDeviceCapabilities key in the app\u2019s Info.plist file. That is in the docs.\nI am starting at React Native, so this problem is probably mine, but, I didn't know that to an Hello World app integration (and probably the other Android Developers or React Native/JS developers also) I need to request the overlay permission. And since the app just crashes and the crash report in the logcat is not the most helpful, IMO, this information would be very helpful to other developers.\nMost of the Android developers will not use an emulator, so when they open the ReactActivity they will just see a crash because the activity is not connected with the NPM server. They need to open the React Native activity the first time to access to the dev activity to configure the server url.\nAbout the run time permissions, introduced in Android API level 23, there is a section in the documentation (PermissionsAndroid) so, the developers know that they need to handle it. My point is: it is not easy to get, that if you are targeting to Android API level 23, you will need to request the overlay permission in development mode, even for an Hello World.\nPlease don't get me wrong. I am just trying to contribute to the community and improve the documentation to help other developers to have a better learning curve when they start in React Native.\nThanks for your feedback.\n. > The template shipped with RN has the target SDK set to 22, so most developer won't face any issue unless they manually set the target SDK to 23. Probably the only thing we need to document is that you should target API level 22 until we officially support it.\nIf you are integrating with an existent app (thats the point of this guide) you should be targeting api level 24. See the bot. So, everyone that follow that guide probably will be targeting >22.\n\nAlso I don't think it's something to do with if people use an emulator or not. It should crash anyways.\n\nFor the Hello World  described in this guide, I think it will only crash in the device, since the emulator is in the localhost and will be able to work without any issue.\n\nIn case of overlay permissions, RN should show a dialog saying the permission is not granted, instead of crashing. \n\nThat would be great! \n\nCurrently it does redirect you to the permissions screen and then crashes, so probably a minor thing we need to fix.\n\nAt least on my device I only see the crash. It does not redirect me to the permissions screen.\nLike I said before, IMO, the disclaimer will help other developers to perform a seamless integration with the existing apps.\n@satya164 thanks again for the feedback and for the clarification. \n. > The template shipped with RN has the target SDK set to 22, so most developer won't face any issue unless they manually set the target SDK to 23. Probably the only thing we need to document is that you should target API level 22 until we officially support it.\nIf you are integrating with an existent app (thats the point of this guide) you should be targeting api level 24. See the bot. So, everyone that follow that guide probably will be targeting >22.\n\nAlso I don't think it's something to do with if people use an emulator or not. It should crash anyways.\n\nFor the Hello World  described in this guide, I think it will only crash in the device, since the emulator is in the localhost and will be able to work without any issue.\n\nIn case of overlay permissions, RN should show a dialog saying the permission is not granted, instead of crashing. \n\nThat would be great! \n\nCurrently it does redirect you to the permissions screen and then crashes, so probably a minor thing we need to fix.\n\nAt least on my device I only see the crash. It does not redirect me to the permissions screen.\nLike I said before, IMO, the disclaimer will help other developers to perform a seamless integration with the existing apps.\n@satya164 thanks again for the feedback and for the clarification. \n. @varungupta85 the truth is that React Native supports every android version above 16, if you are targeting the >23 you need to request the permissions to the user. In the native is the same behaviour. In this PR, my point is that to show the error view, it is required the overlay permission.\n. Sure, the build type (Release or Debug) is now added in the line 99. By default it will append to the install + Debug unless the user pass as argument --configuration release. In that case it will append to the install + Release.\nIn the previous code version, it will always run the debug version. \n. Sure, done. With the push -f I removed your commit, sorry for that. I will fix the type in the commit.\n. Done. Please let m know WDYT.\n. Use the current command --configuration?\nAlso, the --variant is not described in the module.export.options, but probably the --variant is not necessary, since we already have --configuration.\n. Two spaces only.. Why? In the other options we do not use any abbreviation. I don't see any improvements with this change.\nYou also need to update it here, here and here.. Why? In the other options we do not use any abbreviation. I don't see any improvements with this change.\nYou also need to update it here, here and here.. And probably change the name to REQUEST_OVERLAY_PERMISSION_CODE?. And probably change the name to REQUEST_OVERLAY_PERMISSION_CODE?. Probably we can remove this now, WDYT?. Probably we can remove this now, WDYT?. ... >= Build.VERSION_CODES.M?. ... >= Build.VERSION_CODES.M?. Yup, makes sense! \ud83d\udc4d Please ignore.. Yup, makes sense! \ud83d\udc4d Please ignore.. For instance, google uses: https://github.com/google/iosched/blob/e8c61e7e23f74aa6786696dad22e5136b423a334/android/src/main/java/com/google/samples/apps/iosched/ui/BaseActivity.java#L81. For instance, google uses: https://github.com/google/iosched/blob/e8c61e7e23f74aa6786696dad22e5136b423a334/android/src/main/java/com/google/samples/apps/iosched/ui/BaseActivity.java#L81. Why did you removed the configuration flag? This is a breaking change.. Remove the extra line?. I think response.request() has that information. I will try to do that and amend the PR. . I think response.request() has that information. I will try to do that and amend the PR. . @satya164 done, can you please review it again.. ",
    "bbodenmiller": "Looks like this got dropped during the update, was that intentionally?\n. ",
    "majak": "Could you add some inline documentation here on what this ivar represents and why we need it?\n. ",
    "olgabanis": "Hey David, it can go both ways. I didn't want to get into changing the wording and grammar. \n. ",
    "davepack": "Nope, sorry, accidentally left it from my testing.\n. ",
    "felipecsl": "I though about doing this way but I'm really not a fan of having this \"inheritance party\" behavior. Using constructor arguments is a much more explicit way of letting subclasses know about that functionality and having a hook point for defining that.\nI understand if you're not a fan of that style though and I'd be happy to change it\n. This allows you to \"plug-in\" the logic that associates a specific ArgumentExtractor with a Type. This way you wouldn't need the big if/else/else if... chain in buildArgumentExtractors() and could delegate it to the Factories to provide or not an extractor for the provided Type.\n. ",
    "pureklkl": "Sure, I have changed it to be a rejection.\n. ",
    "StevePotter": "I had the same concern.  I tried different combinations for stdout and got nothing that would pipe output and allow me to buffer it.  I totally get the problem it creates but node basically gives you the option to buffer or pipe: https://nodejs.org/api/child_process.html#child_process_child_process_spawnsync_command_args_options\nAnother option could be to do try using child_process.spawn, as done here.\nI'll see what I can do.  But IMO it's worth it now, considering it is fixing a bug that I consider to be major.  Even adding a console.log(\"Building, please wait this can take a while.\" before could be good enough for now. \n. I had the same concern.  I tried different combinations for stdout and got nothing that would pipe output and allow me to buffer it.  I totally get the problem it creates but node basically gives you the option to buffer or pipe: https://nodejs.org/api/child_process.html#child_process_child_process_spawnsync_command_args_options\nAnother option could be to do try using child_process.spawn, as done here.\nI'll see what I can do.  But IMO it's worth it now, considering it is fixing a bug that I consider to be major.  Even adding a console.log(\"Building, please wait this can take a while.\" before could be good enough for now. \n. Will do\n. Will do\n. @javache, this better?\n. @javache, this better?\n. Done\n. Done\n. This is the part that will honor an empty device name (\"deviceName === true\") with only one device connected, and use that name.  Much easier for testing on a single device with zero side effects.\n. This is the part that will honor an empty device name (\"deviceName === true\") with only one device connected, and use that name.  Much easier for testing on a single device with zero side effects.\n. Done via promises.\n. Done via promises.\n. -configuration Debug?  What about production or other types?  I would say that you should pass a scheme in and use that, like:\nfunction getBuildConfig(scheme) {\n   const result = child_process.execFileSync(\n     'xcodebuild',\n     ['-showBuildSettings', '-scheme', scheme],\n. -configuration Debug?  What about production or other types?  I would say that you should pass a scheme in and use that, like:\nfunction getBuildConfig(scheme) {\n   const result = child_process.execFileSync(\n     'xcodebuild',\n     ['-showBuildSettings', '-scheme', scheme],\n. left as var because simulators is used outside the context of the try/catch it's in.  Turn it into a const and you get \"simulators is not defined\" error.  You could pull it out of the try/catch, but then you have to use let.  So I thought var was actually the best choice here.  If you want, I'll add \"let simulators;\" above the try.   What do you prefer?\n. left as var because simulators is used outside the context of the try/catch it's in.  Turn it into a const and you get \"simulators is not defined\" error.  You could pull it out of the try/catch, but then you have to use let.  So I thought var was actually the best choice here.  If you want, I'll add \"let simulators;\" above the try.   What do you prefer?\n. yes, that's it. oops that's a relic from an old PR.  I'll remove them if it will get the PR merged. ",
    "nitrogenlabs": "Yes, this would not be good. Thanks!\n. ",
    "zhouyuexie": "routes[i]  must be has name:\njavascript\nconst routes = [\n  {name:\"Home\",component:Home,index:0},\n  {name:\"Seller\",component:Seller,index:1}\n];\nI think I'll have to adjust this code.\n. ",
    "SilVdB": "Indeed, we don't need that condition.\n. Indeed, we don't need that condition.\n. compile 'com.facebook.react:react-native:+' is indeed the better way to reference dependencies, but the problem we faced was the following:\nIn f.e. react-native-maps, the repositories are defined like this:\nrepositories {\n      mavenLocal()\n      jcenter()\n      maven {\n          // For developing the library outside the context of the example app, expectreact-native// to be installed at./node_modules.\n          url \"$projectDir/../node_modules/react-native/android\"\n      }\n      maven {\n          // For developing the example app.\n          url \"$projectDir/../../react-native/android\"\n      }\n  }\nWhat happens here, is that gradle will search in all these repositories for react-native, but since it can't find anything in node_modules/react-native/android (no build has happened yet), it will take the version it CAN find, which is the one on Maven. When you're building Android from source, you have to run this command first to build react-native, resulting in an /android folder: ./gradlew :ReactAndroid:installArchives.\nJust thought it would be nice to put it here, since we spent quite some time searching for this :)\n. compile 'com.facebook.react:react-native:+' is indeed the better way to reference dependencies, but the problem we faced was the following:\nIn f.e. react-native-maps, the repositories are defined like this:\nrepositories {\n      mavenLocal()\n      jcenter()\n      maven {\n          // For developing the library outside the context of the example app, expectreact-native// to be installed at./node_modules.\n          url \"$projectDir/../node_modules/react-native/android\"\n      }\n      maven {\n          // For developing the example app.\n          url \"$projectDir/../../react-native/android\"\n      }\n  }\nWhat happens here, is that gradle will search in all these repositories for react-native, but since it can't find anything in node_modules/react-native/android (no build has happened yet), it will take the version it CAN find, which is the one on Maven. When you're building Android from source, you have to run this command first to build react-native, resulting in an /android folder: ./gradlew :ReactAndroid:installArchives.\nJust thought it would be nice to put it here, since we spent quite some time searching for this :)\n. ",
    "cdlewis": "yup -- redundant code from WebView, I'll remove.\n. nope not intentional ><\n. My preference would be to avoid injecting JS into the webview where possible so I'm going to update the docs.\n. I don't have a good understanding of addUserScript but it sounds to me that if the controller is instantiated on initWithFrame but scripts are added here, we'd just keep adding more scripts every time navigation finished.\nI played around with adding it to initWithFrame but I don't think we have access to _injectedJavascript yet. \nAny ideas? \n. Hmm yeah that's a good point, it would be kinda annoying. Another thing to consider is that it looks like window.postMessage is already set in WKWebView but has different behaviour to what we expected in WebView (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).\nSo we'd be guaranteed to be overwriting a native function although it probably wouldn't matter because the injected code will call back to it too.\nI'll take a look at doing this.\n. whoops -- removing this\n. I intended to have this in my original PR. You can't setData:nil.. Hmmm, when I change it to MetroListView I see a bunch of errors related to that component not having properties such as getScrollResponder. Any ideas?. ",
    "oprisnik": "I think you can do this from any thread, so I don't think a check is needed.\nThere could be an issue if you send a request before initialization finished (e.g. from another thread), but otherwise it should work.\n. I think you can do this from any thread, so I don't think a check is needed.\nThere could be an issue if you send a request before initialization finished (e.g. from another thread), but otherwise it should work.\n. cc @kirwan @massimocarli - do you know more about this?\n. cc @kirwan @massimocarli - do you know more about this?\n. ",
    "sharnik": "Fixed, thanks!\n. ",
    "fkoester": "Probably not, I removed it.\n. Probably not, I removed it.\n. Good idea!\n. Good idea!\n. Done.\n. Done.\n. ",
    "varungupta85": "@satya164 I am trying to get a better understanding of the whole overlay permission and have some questions. Please comment if you have time. I have tried these myself but wanted to know if I am missing anything.\n1. Is this required only to be able to show the dev menu and the red box? When I was reading about the 'Draw over other apps' permission, I found that it is usually frowned upon and should be requested only when it is absolutely needed. If it is not needed during production, I would rather remove it from the manifest file while creating production apks. I tried it and it seems to work.\n2. Can I remove the SYSTEM_ALERT_WINDOW permission from the AndroidManifest.xml file and just request it programmatically? I checked the base react activity class that you added here where you are programmatically requesting the overlay permission if we are in DEBUG mode. If that is the case, I am not sure why is the SYSTEM_ALERT_WINDOW permission added in the default AndroidManifest.xml file. I tried to run the app after removing the permission and with targetSdkVersion 22, it worked without any problem. On targetSdkVersion 25, it showed the Draw over other apps dialog box as expected and after I allowed the permission, it worked as expected.\n3. This is a bit unrelated and more for my own understanding. In this comment, you have mentioned to disable dev menu in production which is done in the default template. Where is this template located?\n. @SandroMachado I understand that react-native supports Android version 16 and above and I was able to test it using Andriod version 25. I guess the main difference is the whole permissions change and not just the Draw over other apps change but for other things as well like accessing contacts or photos etc. So, if a user updates the targetSdkVersion to greater than 22, then he will need more than just instructing the user to allow the Draw over other apps permissions. Just once clarification, you said that the native has the same behavior, have you come across any apps where when you first open the app, the Draw over other apps screen is shown. I guess this permission is not required for most of the apps and hence I haven't come across it in any android app.\n. @satya164 Thanks a lot for your inputs. Very informational. I guess the only thing remaining for me is to figure out if I can somehow get rid of the SYSTEM_ALERT_WINDOW permission in the production apks. I will generate an apk after removing the permission from the AndroidManifest.xml file and check what kind of permissions are requested by the app when it is first installed. Like you said, the RN lib may be adding this permission even if I remove it from the manifest file which I can confirm by this test and if that is the case, I will try to figure out if I can somehow remove it in the production apks even if it means that I may have to make some manual changes before generating them. I guess my only concern is that I don't want to ask for permissions which I don't need and can't explain in the app's terms and conditions document.\n. @satya164 Found this issue which contains plethora of information on how to disable permissions during release builds. Thanks again for your help. I am all set now.\n. ",
    "vladimir-kotikov": "Looks nice, thanks!\n. The thing is that stack = [...stack] produces a shallow copy, i.e. members of stack after the assignment would still remain frozen, so the old code still would throw the exception. Also modifying input parameter doesn't sound like a safe operation, so i'd still prefer to have a separate variable for any modifications, unless the modification is intentional.\nThough I agree that stackCopy isn't a perfect name and might be confusing. Maybe use separate variable for modified stack and then do JSON.stringify({stack: (processedStack || stack)})?\n. So basically you suggest fixing this in regenerator? I'm fine with that, but i think this rings a bell. Honestly, I don't know whether it should be expected or not but I'd say that we should do something to stop recursion, because nobody can guarantee that at some moment we won't run into the same situation again.\n. @MSLaguana, you're right - I revisited this again and it looks like it doesn't related to regenerator - I can confirm that the loop starts in getter itself, not in regenerator.\nSome experiments show that our problem has to do with Node - in particular it's very possible that we're getting into loop because delete global.regeneratorRuntime doesn't actually delete anything\n\nWhen we're running this code in Chrome, after property deletion calling global.regeneratorRuntime doesn't trigger getter again because the property been deleted.\nI think it's very likely that we're running into https://github.com/nodejs/node/issues/6287 - not sure how to deal with this though\n. @MSLaguana, you're right - I revisited this again and it looks like it doesn't related to regenerator - I can confirm that the loop starts in getter itself, not in regenerator.\nSome experiments show that our problem has to do with Node - in particular it's very possible that we're getting into loop because delete global.regeneratorRuntime doesn't actually delete anything\n\nWhen we're running this code in Chrome, after property deletion calling global.regeneratorRuntime doesn't trigger getter again because the property been deleted.\nI think it's very likely that we're running into https://github.com/nodejs/node/issues/6287 - not sure how to deal with this though\n. ",
    "sindresorhus": "This should be process.platform === 'win32'. It's always win32, even on 64-bit.\n. It will never change. win32 is the identifier for the Windows platform, not the architecture.\n. ",
    "christophermark": "I've found that using adjustPan instead of adjustResize works better for scrolling the input area to the top of the keyboard.\n. I've found that using adjustPan instead of adjustResize works better for scrolling the input area to the top of the keyboard.\n. ",
    "robclouth": "Yes, only iOS. On android this isn't an issue. Do I need to add something here?\n. AsyncStorage.StorageLocation.documents for example?\n. IOS suffix in the obj-C too?. ",
    "EllisShen": "@brentvatne, yes, it is... do you want me to revise the whole file to follow the standard?\n. @brentvatne, yes, it is... do you want me to revise the whole file to follow the standard?\n. ",
    "cbrevik": "Looking over this again, I don't think this will solve the issue my PR is attempting to solve. The problem there (#10055) is with custom URL schemes. If you can only block http/https/file requests it will not be sufficient. Same thing with the iOS implementation.\n. Why? It's just about not making the check specific to certain URL schemes? Since there's an open issue that can be fixed by this PR, I don't see the point of not doing it.\n. It seems like navigationType is only used in the iOS RCTWebView.h. That field isn't available in ReactWebViewManager on Android.\nThough if we need navigationType as a policy at all (for blocking purposes) is unclear to me.. Seems from the blocking logic that currentURL is the \"source\" URL, i.e. the URL we're going from. Whilst url is the \"request\" URL, i.e. the URL we're going to. Maybe the naming should reflect that a bit better.\nAlso both of them are matched as regex, so the docs should reflect that.. Please extract to a protected method instead, since that is a bit more extensible.. The second part of the while condition excludes RCTViewManager.\nsuperClass != [RCTViewManager class]\nSo it shouldn't add RCTViewManager props.. So it bascially loops through the inheritance-chain, until it hits RCTViewManager, and then breaks out. Which should make it behave as it does today, only that it supports further sub-classing of other view managers.. ",
    "rseemann": "that is true. We could use an even broader approach where the policies would include the schemes as well.\n. that is true. We could use an even broader approach where the policies would include the schemes as well.\n. I'd say let's push this version as is and we can come up with a more general solution later.\n. I'd say let's push this version as is and we can come up with a more general solution later.\n. It would be a very nice solutions, even easier to test for what request was blocked. I didn't do it to keep the exact same native event sent throughout all the other callbacks, onLoadStart, onLoadError and the likes. Although it seems like a good improvement, do you think we should change this?\n. It would be a very nice solutions, even easier to test for what request was blocked. I didn't do it to keep the exact same native event sent throughout all the other callbacks, onLoadStart, onLoadError and the likes. Although it seems like a good improvement, do you think we should change this?\n. it isn't used anywhere else in the class, are you sure?. This seemed to be the way it is done in this class, and similar ones. E.g.: take a look at the webViewDidFinishLoad implementation. I agree with you about readability, just want to make sure this is the way to go.. Because there is an event variable declared on line 215 and I didn't want to reuse it.. Same explanation as before. If we think this is the way to go, sure, it makes sense.. This came with the rebase, but sure, I changed it.. ",
    "npomfret": "Cool.  will it go into 38?\n.  \"do we really need this?\"  \nDo you mean the feature in general? I certainly do. I use a protected http source that contains my images - it requires an auth header to be passed otherwise I just get a 401 back.\n. ",
    "greghe": "shouldn't this be declared synchronized ?\n. shouldn't this be declared synchronized ?\n. I didn't actually change any code in Settings.js (other than rename the file from Settings.ios.js). But I agree we should probably improve this file's code as part of this change.. This is how I originally implemented it and it is the cleaner implementation. I will restore it. . Should be fixed now.. Yes, and differing calls here are entirely intentional. getSharedPreferences()  lets the caller specify a specific file name in which to store the shared preferences, whereas getPreferences() stores the preferences values in a file with a default name.\nIn the section above we allow the programmer the option of storing the preferences in a file with a specific name (say, to match an existing shared preferences file already in use by the application), or, to simply store the preferences in a file with a default name.. Yes, and differing calls here are entirely intentional. getSharedPreferences()  lets the caller specify a specific file name in which to store the shared preferences, whereas getPreferences() stores the preferences values in a file with a default name.\nIn the section above we allow the programmer the option of storing the preferences in a file with a specific name (say, to match an existing shared preferences file already in use by the application), or, to simply store the preferences in a file with a default name.. will do. will do. The settings file created by the Settings Module is accessible to that Settings module and therefore indirectly accessible to any Activity or to any other Java class that imports the Settings module.\nThe only potential concern raised by calling getPreferences() here is for apps that have multiple Activities each instantiating a MainReactPackage. This is by no means a common occurrence, but if an app is engaging in this behavior - then having each Settings Module in each MainReactPackage use its own, private settings store seems like the most reasonable default behavior. \nNevertheless, if separate settings files are not desired, that is, if the developer wants to ensure that every Settings Module instantiated anywhere in the the app will always use the same settings file - then that developer merely has to provide a file name to the Settings Module, and - as long as they take care that only one Settings Module is ever extant at one time - it will be the case that every Settings Module created anywhere in the app will use the same settings file which will have the provided name.. The settings file created by the Settings Module is accessible to that Settings module and therefore indirectly accessible to any Activity or to any other Java class that imports the Settings module.\nThe only potential concern raised by calling getPreferences() here is for apps that have multiple Activities each instantiating a MainReactPackage. This is by no means a common occurrence, but if an app is engaging in this behavior - then having each Settings Module in each MainReactPackage use its own, private settings store seems like the most reasonable default behavior. \nNevertheless, if separate settings files are not desired, that is, if the developer wants to ensure that every Settings Module instantiated anywhere in the the app will always use the same settings file - then that developer merely has to provide a file name to the Settings Module, and - as long as they take care that only one Settings Module is ever extant at one time - it will be the case that every Settings Module created anywhere in the app will use the same settings file which will have the provided name.. I've renamed setFilename to setSharedPreferencesFilename and documented its proper use.  setSharedPreferencesFilename may not be called after a Settings Module has been instantiated (this is, before a ReactMainPackage initialization) - and will throw an exception if this requirement is not met. \nBasically, this method exists as a convenient customization point for a developer with specialized requirements regarding handling of the Shared Preferences file - and would typically be invoked from the app's main activity just before it sets up the RN environment.\nTherefore invoking setSharedPreferencesFilename is not possible from any JS code -because by the time the JS code would be executing, the Settings Module and its shared preferences file will already be up and running.. I've renamed setFilename to setSharedPreferencesFilename and documented its proper use.  setSharedPreferencesFilename may not be called after a Settings Module has been instantiated (this is, before a ReactMainPackage initialization) - and will throw an exception if this requirement is not met. \nBasically, this method exists as a convenient customization point for a developer with specialized requirements regarding handling of the Shared Preferences file - and would typically be invoked from the app's main activity just before it sets up the RN environment.\nTherefore invoking setSharedPreferencesFilename is not possible from any JS code -because by the time the JS code would be executing, the Settings Module and its shared preferences file will already be up and running.. No, mPreferences is not null here because that would cause a crash. \ud83d\ude42\ngetPreferences would be better named getPreferencesAndInstantiateIfNecessary which I abbreviated to ensurePreferences() when I renamed this method.. No, mPreferences is not null here because that would cause a crash. \ud83d\ude42\ngetPreferences would be better named getPreferencesAndInstantiateIfNecessary which I abbreviated to ensurePreferences() when I renamed this method.. done. done. Remember these are the persisted settings values, not the current values of the Settings Module. Whereas AsyncStorage has to read and write its stored values asynchronously through native code, Settings reads and writes its settings immediately and synchronously all within its javascript code. It is true that the JS-side settings value are then lazily and asynchronously propagated to native code - both to inform the native app of any changes and also to persist the settings values for a subsequent relaunch of the app. But the values being stored here are not the values that Settings Module is actually providing to its clients.\nTherefore, there is no reason to use a promise here because the Settings module is basically unaware and unaffected by what this method is doing.\nThe double-to-float conversion does affect the persisted numeric values that populate the Settings Module upon launch. Because these loaded numeric values have been \"round tripped\" through a smaller type, they may wind up losing precision or over/under flowing their representation. Although this information loss is unfortunate - as a practical matter, few settings are likely to be affected - either because they are integers or they are far, far smaller than 3.4 \u00d7 10\u00b3\u2078 - the upper range of a float.\nMoreover, it is not a error for a number to be too large or too small for a floating point type to represent - for such numbers, infinity is used for the huge ones and zero for the tiny values.\n. Remember these are the persisted settings values, not the current values of the Settings Module. Whereas AsyncStorage has to read and write its stored values asynchronously through native code, Settings reads and writes its settings immediately and synchronously all within its javascript code. It is true that the JS-side settings value are then lazily and asynchronously propagated to native code - both to inform the native app of any changes and also to persist the settings values for a subsequent relaunch of the app. But the values being stored here are not the values that Settings Module is actually providing to its clients.\nTherefore, there is no reason to use a promise here because the Settings module is basically unaware and unaffected by what this method is doing.\nThe double-to-float conversion does affect the persisted numeric values that populate the Settings Module upon launch. Because these loaded numeric values have been \"round tripped\" through a smaller type, they may wind up losing precision or over/under flowing their representation. Although this information loss is unfortunate - as a practical matter, few settings are likely to be affected - either because they are integers or they are far, far smaller than 3.4 \u00d7 10\u00b3\u2078 - the upper range of a float.\nMoreover, it is not a error for a number to be too large or too small for a floating point type to represent - for such numbers, infinity is used for the huge ones and zero for the tiny values.\n. ",
    "ariabuckles": "There are other ways of solving this, but I'm pretty out-of-my-depth with regards to the RN animation code. Open to suggestions on what the right approach is to solve this issue.\nA quicker & dirtier solution is to just not use 0 in TouchableOpacity. A more robust solution might see if it's acceptable to \"animate\" 0-duration animations in JS even for elements using the native driver, but i'm not sure what the implications would be there.\n. There are other ways of solving this, but I'm pretty out-of-my-depth with regards to the RN animation code. Open to suggestions on what the right approach is to solve this issue.\nA quicker & dirtier solution is to just not use 0 in TouchableOpacity. A more robust solution might see if it's acceptable to \"animate\" 0-duration animations in JS even for elements using the native driver, but i'm not sure what the implications would be there.\n. I'm not certain what the best value is here, as I'm not confident what setting the element to active here is accomplishing, but this keeps the behaviour the same as previously.\n. I'm not certain what the best value is here, as I'm not confident what setting the element to active here is accomplishing, but this keeps the behaviour the same as previously.\n. ",
    "salanki": "You'll want to add @platform ios in the doc comment to signify that this is only relevant for iOS.\n. ",
    "PdTeSm": "RELEASE\n. ",
    "ncuillery": "Maybe we could have a more \"yeoman-ish\" prompt with the status clearly displayed in colors and a Yes/No answer (default Yes).\nThe log about the changes and the HelloWorld app location should be displayed once and for all at the beginning.\nTyping \"keep\" or \"replace\" for each file (typically 5 to 10 times) is boring.\n. Double equal :smile:\n. If the user makes a typo in \"replace\", the file is kept. It could lead to a lot of madness :p\n. Incorrect template string placeholders: missing $\n. \ud83d\udc4d  it is an old copy-paste from the local CLI. It has been changed in a477aec10d29b4651944cb4292daf06dfa953ea3 and 8dbb025959a560302761e02bad807a3991f9a271\nI'll do the same (single quote as string separator to stick JS conventions, and double quote inside). \ud83d\udc4d  it is an old copy-paste from the local CLI. It has been changed in a477aec10d29b4651944cb4292daf06dfa953ea3 and 8dbb025959a560302761e02bad807a3991f9a271\nI'll do the same (single quote as string separator to stick JS conventions, and double quote inside). LGTM, should we mentioning yarn in the existing upgrade command too ? \nhttps://github.com/facebook/react-native/blob/8dbb025959a560302761e02bad807a3991f9a271/local-cli/upgrade/upgrade.js#L73\nAll these messages are duplicates, that's the problem with the standalone module approach.... LGTM, should we mentioning yarn in the existing upgrade command too ? \nhttps://github.com/facebook/react-native/blob/8dbb025959a560302761e02bad807a3991f9a271/local-cli/upgrade/upgrade.js#L73\nAll these messages are duplicates, that's the problem with the standalone module approach.... The cliVersion isn't the version of the CLI, it's the version specified in the CLI command (okay the name sucks \ud83d\ude04).\nshell\nreact-native-git-upgrade 0.38.0\ncliVersion equals '0.38.0'\nHow about renaming to argumentVersion or cliArgumentVersion  ?\nI'm not sure about fetching the version here, I like this separation of concern: there are only simple synchronous check functions in this file. Instead of fetch the version from npm here, I've moved the semver.clean in the main file:\n```javascript\n// checks.js\nexport function checkNewVersion(context) {\n  if (!semver.valid(context.newVersion) && context.cliArgVersion) {\n    throw new Error(\n      'The specified version ' + context.cliArgVersion + ' doesn\\'t exist.\\n' +\n      'Re-run the react-native-git-upgrade command with an existing version,\\n' +\n      'or without argument to upgrade to the latest: \\'react-native-git-upgrade\\'.'\n    );\n  }\n}\n// cliEntry.js\nlog.info('Get react-native version from NPM registry');\nconst versionOutput = await exec(context, 'npm view react-native@' + (context.cliArgVersion || 'latest') + ' version');\ncontext.newVersion = semver.clean(versionOutput);\nlog.info('Check new version');\ncheckNewVersion(context, versionOutput);\n```\nNo second argument and simpler checkNewVersion function.\n. The cliVersion isn't the version of the CLI, it's the version specified in the CLI command (okay the name sucks \ud83d\ude04).\nshell\nreact-native-git-upgrade 0.38.0\ncliVersion equals '0.38.0'\nHow about renaming to argumentVersion or cliArgumentVersion  ?\nI'm not sure about fetching the version here, I like this separation of concern: there are only simple synchronous check functions in this file. Instead of fetch the version from npm here, I've moved the semver.clean in the main file:\n```javascript\n// checks.js\nexport function checkNewVersion(context) {\n  if (!semver.valid(context.newVersion) && context.cliArgVersion) {\n    throw new Error(\n      'The specified version ' + context.cliArgVersion + ' doesn\\'t exist.\\n' +\n      'Re-run the react-native-git-upgrade command with an existing version,\\n' +\n      'or without argument to upgrade to the latest: \\'react-native-git-upgrade\\'.'\n    );\n  }\n}\n// cliEntry.js\nlog.info('Get react-native version from NPM registry');\nconst versionOutput = await exec(context, 'npm view react-native@' + (context.cliArgVersion || 'latest') + ' version');\ncontext.newVersion = semver.clean(versionOutput);\nlog.info('Check new version');\ncheckNewVersion(context, versionOutput);\n```\nNo second argument and simpler checkNewVersion function.\n. \ud83d\udc4d  \nNote: the correct command is react-native-git-upgrade 0.38.0. The command react-native-git-upgrade --version just print the version of the tool (0.1.0 in the meantime). \ud83d\udc4d  \nNote: the correct command is react-native-git-upgrade 0.38.0. The command react-native-git-upgrade --version just print the version of the tool (0.1.0 in the meantime). Hmm, English is not my native language but.. I think a noun following \"without\" is always singular ;). Hmm, English is not my native language but.. I think a noun following \"without\" is always singular ;). Yes it is.\nTo be honest, I ended up using a preset because I had a lot of problems using babel-register (i.e. runtime transpilation) inside a module installed globally. It is not designed for that (see http://stackoverflow.com/questions/35120305/using-babel-register-in-my-cli-npm-app-works-locally-but-not-globally-after-pub for example). It's a quick and \"not-so-dirty\" solution.\nYes, the CLI code is already transpiled with Babel: it reuses the packager's configuration here.\nWhen react-native-git-upgrade will be merged into the core, I think we should extends the existing packager's babel config with the 2 plugins necessary for async/await instead of including the whole preset.\n. Yes it is.\nTo be honest, I ended up using a preset because I had a lot of problems using babel-register (i.e. runtime transpilation) inside a module installed globally. It is not designed for that (see http://stackoverflow.com/questions/35120305/using-babel-register-in-my-cli-npm-app-works-locally-but-not-globally-after-pub for example). It's a quick and \"not-so-dirty\" solution.\nYes, the CLI code is already transpiled with Babel: it reuses the packager's configuration here.\nWhen react-native-git-upgrade will be merged into the core, I think we should extends the existing packager's babel config with the 2 plugins necessary for async/await instead of including the whole preset.\n. The promise syntax was my first approach, https://github.com/ncuillery/react-native/commit/838b6c8121e15e29fe0f03cda6410933c35e1d7a#commitcomment-19170889\n@bestander and me aren't huge fans of long promise chains.... The promise syntax was my first approach, https://github.com/ncuillery/react-native/commit/838b6c8121e15e29fe0f03cda6410933c35e1d7a#commitcomment-19170889\n@bestander and me aren't huge fans of long promise chains.... \ud83d\udc4d I'll comment this line. The value means \"all files inside the react-native-git-upgrade folder except its node_modules subdirectory AND the local-cli/generator folder\"\nI've basically added the local-cli/generator folder because I encountered syntax errors in it.  \nA closer look reveals that the new \"copyAndReplace\" generator uses trailing comma in function calls here and here.\nIf I remove them it works without transpiling the generator, but I guess it depends of the Node version (I use Node 7), an older version of Node might fail somewhere else...\nI think we should be consistent: if the generator is transpiled with react-native upgrade, it must be the same with react-native-git-upgrade.. \ud83d\udc4d I'll comment this line. The value means \"all files inside the react-native-git-upgrade folder except its node_modules subdirectory AND the local-cli/generator folder\"\nI've basically added the local-cli/generator folder because I encountered syntax errors in it.  \nA closer look reveals that the new \"copyAndReplace\" generator uses trailing comma in function calls here and here.\nIf I remove them it works without transpiling the generator, but I guess it depends of the Node version (I use Node 7), an older version of Node might fail somewhere else...\nI think we should be consistent: if the generator is transpiled with react-native upgrade, it must be the same with react-native-git-upgrade.. I copied-pasted the uncommented packager's config \ud83d\ude1b \nI use options I don't really need, that's the true problem I think. \nretainLines and babelrc have been added in ff0eb47dbd0866e210d10621480528733ebdc74c.\nI think I can remove them. . I copied-pasted the uncommented packager's config \ud83d\ude1b \nI use options I don't really need, that's the true problem I think. \nretainLines and babelrc have been added in ff0eb47dbd0866e210d10621480528733ebdc74c.\nI think I can remove them. . Ooops, you're right !. Ooops, you're right !. Hmmm, I don't know, I like the consistency \"context-first\" of all functions called in the main function:\nhttps://github.com/ncuillery/react-native/blob/react-native-upgrader/react-native-git-upgrade/cliEntry.js#L147-L225\nCan we made an exception to this golden rule ?\n. Hmmm, I don't know, I like the consistency \"context-first\" of all functions called in the main function:\nhttps://github.com/ncuillery/react-native/blob/react-native-upgrader/react-native-git-upgrade/cliEntry.js#L147-L225\nCan we made an exception to this golden rule ?\n. \ud83d\udc4d code === 0 LGTM, I prefer being stricter here, rejecting an error if anything change in shelljs . \ud83d\udc4d code === 0 LGTM, I prefer being stricter here, rejecting an error if anything change in shelljs . Not really, it's more a Java thing, it designates thepom.xml in a Maven project: https://maven.apache.org/ref/3.3.9/maven-model/maven.html. That's probably why I use it naturally (I have an old Java background).\nIt could be confusing with unix \"file descriptor\" which is totally something else.\nHow about readPackageFiles and the corresponding log: Read package.json files?. Not really, it's more a Java thing, it designates thepom.xml in a Maven project: https://maven.apache.org/ref/3.3.9/maven-model/maven.html. That's probably why I use it naturally (I have an old Java background).\nIt could be confusing with unix \"file descriptor\" which is totally something else.\nHow about readPackageFiles and the corresponding log: Read package.json files?. Yes, I have taken precautions to add the lowest number of dependencies. It is the same about npmlog and semver (but not shelljs). I'm not sure about being so specified. If react is upgraded, it could lead to further unmet dependency (in case of other dependencies declare react as peer, like React addons for example).\nI'd be more evasive like \"fix any unmet peer dependency requirements\".. PathPath ? \ud83d\ude09 \nnodeModulesPakPath I guess.. If React is upgraded after RN, NPM2 will still fail in case of unmet react peerDep during the previous step. I think the only way to fix that is to upgrade both R & RN at the same time. See: https://github.com/facebook/react-native/pull/11123#issuecomment-262850815. Interesting point, it's a good idea to restore the initial node_modules tree. But we don't need to manage a reference toward the initial version.\nThe git checkout project-snapshot restore the original package.json file, so just run npm install here, the initial version of R and RN will be restored \ud83d\udcaa . I've noted that the first sentence is actually the teaser seen on the home page. That's why I went with a long sentence introducing the blog post and encouraging people to read it:\n\nEach release of React Native may come with changes inside the iOS and Android sub-projects that you have to report in your project. This synchronisation has always been a major pain point because of the poor changes detection within your source files. Today, I'm proud to announce a new upgrading process relying on the most popular version control system: Git. \n\nAt the current time, the home page looks like this: \n. Suggestion: Quote character to wrap this in a orange block ?\nRequirement should be singular, this is the only one \ud83d\udcaa \nPreview (with \"requirement:\" bold):\n\n. >no argument\nsingular. > you wouldn't have been able to enjoy this feature until when using old versions of React Native\nI'm not 100% sure but... I understood the opposite because of \"until\". Shouldn't we say \"you wouldn't have been able to enjoy this feature when using old versions of React Native\" ?. I didn't know that \\o/ \ud83c\udf89 . Suggestion:\n\nso anyone can have this improved experience now while using an older version of React Native.\n\n\ud83d\udc49 so anyone can enjoy this improved experience from today while using an older version of React Native.. \"to make this working well for everyone\" ?. \ud83d\udc4d \nI think we could have a better looking with a colorful screenshot rather than the code snippet. What do you think ?\n\n. It sounds strange to me at first, because I asked myself if \"work\" was a noun or a verb... but it is not really important, move forward with \"make this work\". \ud83d\udc4d . It sounds strange to me at first, because I asked myself if \"work\" was a noun or a verb... but it is not really important, move forward with \"make this work\". \ud83d\udc4d . Good catch !. Good catch !. ",
    "zongjingyao": "Updated :)\n. ",
    "sdg9": "Is setting back to UNSET (-1 in Android) the same as setting to null in js?  If so this is now accounted for in latest commit.\n. Good call.  1 is resolved per your recommendation.  I also made sure 2 and 3 are working with my latest commit.  Here is a screen recording of it working with both dynamic font size as well as toggling allowFontScaling between true and false\nhttps://youtu.be/AjDurnKfYKY\n. Essentially I don't want to call setFontSize with an UNSET value.  If I do so there are issues with the font displaying correctly.  I took your suggestion and removed forceRecalculation but instead have to check for fontSize == UNSET and if so set it to ViewDefaults.FONT_SIZE_SP so that fontSize is set to 14 (current default) rather than -1.\nWhile updating it I also have setAllowFontScaling only call setFontSize if the value of allowFontScaling actually changed.\n. Added markUpdated() for clarity. Good catch I now preserve original UNSET value for null input. ",
    "MSLaguana": "I don't think that this particular issue is caused by regenerator though. When I saw this myself, it was actually the line https://github.com/facebook/react-native/blob/master/Libraries/Core/InitializeCore.js#L156 which caused the recursion: The access of global.regneratorRuntime called into the same getter function.\n. ",
    "grabcode": "Of course.\n. ",
    "kirwan": "I think the answer is pretty simple.\nFresco caches images, in memory and disk, so it doesn't need the network layer to cache them too. If OkHttp cached the responses we'd be storing two copies of each for little or no benefit.\nFresco will ignore this setting when deciding whether or not to cache the responses itself, referring only to its own cache configs and properties of the individual request to decide what and how much to cache.\n. ",
    "mlguys": "I can't find any trailing spaces in above code. What could this really mean??\n. Hi, self.gradientStroke cannot be null because I initialized it as an empty array\nSo the condition if ((!self.fill && !self.stroke && !self.gradientStroke.count) || !self.d)  is used to check if Shape is provided with any prop fill, stroke, or gradientStroke or not at all and is there a path for drawing the shape or not.\nIf fill, stroke, or gradientStroke altogether is not provided or no path (which is d ) is provided, Shape component will stop drawing.\nTherefore, I used self.gradientStroke.count to check if gradientStroke prop is empty or not because self.gradientStroke.count == 0 means the colors array in gradientStroke is empty.\nThanks for asking!\nP.s: I will add Test Plan in a moment.. Thanks! \ud83d\udc4d . Thanks! \ud83d\udc4d . ",
    "omeid": "Yup, a typo. Just pushing a fix.\n. No reason, I have no idea how I forgot to change that after copying the initial setImportantForAccessibility method. Pushing a fix now.. Fixed.. ",
    "VojtechBartos": "@javache make sense, will add a getter. Thanks!. ",
    "Froelund": "Because I want to construct NativeEventEmitter, and export an instance module.exports = new Clipboard();. Because I want to construct NativeEventEmitter, and export an instance module.exports = new Clipboard();. Both startObserving and stopObserving will be called from RCTEventEmitter\nFrom the RCTEventEmitter.h:\n/**\n * These methods will be called when the first observer is added and when the\n * last observer is removed (or when dealloc is called), respectively. These\n * should be overridden in your subclass in order to start/stop sending events.\n */\n- (void)startObserving;\n- (void)stopObserving;. Both startObserving and stopObserving will be called from RCTEventEmitter\nFrom the RCTEventEmitter.h:\n/**\n * These methods will be called when the first observer is added and when the\n * last observer is removed (or when dealloc is called), respectively. These\n * should be overridden in your subclass in order to start/stop sending events.\n */\n- (void)startObserving;\n- (void)stopObserving;. ",
    "NoelBroda": "What about this text? Why is it into a sh block?. What about \"also upgrade react running:\"?. ",
    "asgvard": "Should I remove indicesToRemove in the end, or we should leave it for any backward compat case?\nAlso is there any news/plans on reviewing this one? :) Would be awesome to have it merged. ",
    "notjosh": "Oh, this changed recently in 3683beb88ab3233038ac32b9c33112d537478088. Addressed in b3485a8.. Oh, this changed recently in 3683beb88ab3233038ac32b9c33112d537478088. Addressed in b3485a8.. ",
    "EasonWang01": "ok,thanks. ",
    "rohmanhm": "```\n\u279c  HelloProject react-native run-android --help\nreact-native run-android [options]\n  builds your app and starts it on a connected Android emulator or device\nOptions:\n-h, --help          output usage information\n--install-debug\n--root [string]     Override the root directory for the android build (which contains the android directory)\n--flavor [string]   --flavor has been deprecated. Use --variant instead\n--variant [string]\n--config [string]   Path to the CLI configuration file\n\n```\nand when I type react-native run-android --configuration show this error\n```\n\u279c  HelloProject react-native run-android --configuration\nerror: unknown option `--configuration'\n```\nHere is my versions react-native-cli\n\u279c  HelloProject react-native --version\nreact-native-cli: 1.2.0\nreact-native: 0.38.0. ",
    "n3tr": "it's used in line 25 and 27.\nhttps://github.com/facebook/react-native/pull/11174/files/48039bd0dd7404d53e27af458bd73691f81048a9#diff-549f6559732f42d8d33684b24c5cea46R25. it's used in line 25 and 27.\nhttps://github.com/facebook/react-native/pull/11174/files/48039bd0dd7404d53e27af458bd73691f81048a9#diff-549f6559732f42d8d33684b24c5cea46R25. You're correct.\nconfig.getProjectRoots() can be overridden by user in rn-cli.config.js which can return anything.\nI just read through the cli code. I think we can simply use process.cwd() to get projectDir since react-native-cli/index.js already has prevented us from running react-native <commend> outside project directory (contains ./node_modules/react-native/cli.js), What you think?\n. You're correct.\nconfig.getProjectRoots() can be overridden by user in rn-cli.config.js which can return anything.\nI just read through the cli code. I think we can simply use process.cwd() to get projectDir since react-native-cli/index.js already has prevented us from running react-native <commend> outside project directory (contains ./node_modules/react-native/cli.js), What you think?\n. For more detail,\n\nAs I understand, init/init uses yarn.getYarnVersionIfAvailable() to get version and it will return null from catch block due to execSync is not defined\n\nbash\nThis will walk you through creating a new React Native project in /Users/n3tr/Code/RN/AwesomeApp\nUsing yarn v0.16.1\nInstalling react-native... # via yarn\nSetting up new React Native app in /Users/n3tr/Code/RN/AwesomeApp\nInstalling React... # via npm: from npm install output (init/init.js:80)\nInstalling Jest.... For more detail,\n\nAs I understand, init/init uses yarn.getYarnVersionIfAvailable() to get version and it will return null from catch block due to execSync is not defined\n\nbash\nThis will walk you through creating a new React Native project in /Users/n3tr/Code/RN/AwesomeApp\nUsing yarn v0.16.1\nInstalling react-native... # via yarn\nSetting up new React Native app in /Users/n3tr/Code/RN/AwesomeApp\nInstalling React... # via npm: from npm install output (init/init.js:80)\nInstalling Jest.... I'm thinking as well but still have some questions: \n\nHow to handle the different command of yarn [add] and npm [install --save] ?\nShould it accept an option to allows to force use the npm client (like in react-native-cli/index)?\n\nWhat if I make a function call look like:\njs\ncallYarnOrNpm('add some-package', 'install some-package --save', options);\nand let it decides which command will be executed.\n. I'm thinking as well but still have some questions: \n\nHow to handle the different command of yarn [add] and npm [install --save] ?\nShould it accept an option to allows to force use the npm client (like in react-native-cli/index)?\n\nWhat if I make a function call look like:\njs\ncallYarnOrNpm('add some-package', 'install some-package --save', options);\nand let it decides which command will be executed.\n. @kureev thanks for suggestions. I'm thinking of it as well but there're some cases might need to supported:\n1. simple add/remove command: it can be achieved by manager.add('some-package')\nyarn add some-package\nnpm install some-package --save\n2. add/remove multiple deps:  we can use manager.add('package1 package2')\nyarn add package1 package2 package3\nnpm install yarn add package1 package2 package3 --save\n3. with additional arguments\n```\nyarn add some-package --exact\nnpm install some-package --save --save-exact\nyarn add some-package --dev --exact\nnpm install package2 --save-dev --save-exact\n``\nFor this case, Do we need make it into a separated function eg.manager.addDev('some-package')or allowaddto takes extra args (eg.add(' ', isDev)`\n4 - RARE CASE: Caller want to stick with npm\nlike react-native-cli/index which allows user can init project with --npm flag and it's  happen only before react-native have been installed - it doesn't use local-cli during its process. btw I don't think we need to support --npm flag in local-cli right now.\n. Maybe I'm thinking too much, I will try to make it simple and improve later depends on further use case. \ud83e\udd12 . Is it necessary to create manager class and export its instance? IMO, wouldn't it be simpler to just exports a plain object with functions?\nmodule.exports = {\n  add: add,\n  remove: remove\n}\nand I'm not sure what's the filename will be used for manager?  is PackageManager good enough? . minimist is required in index.js:12. minimist is required in index.js:12. ",
    "Kerumen": "Noted! I updated the PR :). ",
    "nihgwu": "\nWhy removed !!NativeAnimatedModule? then there will be a warning to add NativeAnimation library if they upgrade from a early version of RN if I don't miss the commits.\nNavigationCardStackStyleInterpolator.canUseNativeDriver always returns true now as all the transforms can be driven by native, so I think we can make this function simpler .. 1. Why removed !!NativeAnimatedModule? then there will be a warning to add NativeAnimation library if they upgrade from a early version of RN if I don't miss the commits.\nNavigationCardStackStyleInterpolator.canUseNativeDriver always returns true now as all the transforms can be driven by native, so I think we can make this function simpler .. @Kureev an extra flag is needed if we implement the sticky section header on Android as they have the different behavior by default\nThere is a discussion here #9957 and @janicduplessis did the same thing as @matto1990 did, though that PR was reverted then. @Kureev an extra flag is needed if we implement the sticky section header on Android as they have the different behavior by default\nThere is a discussion here #9957 and @janicduplessis did the same thing as @matto1990 did, though that PR was reverted then. @Kureev there is another implementation #11315 but still in working. @Kureev there is another implementation #11315 but still in working. @janicduplessis \nstickySectionHeader on ListView is not work as expected after this change on both master branch and 0.45.0-rc.0, while it's OK on SectionList\n\nYou can see the sticked sectionHeader is overlapped by the others, works perfectly after reverted. @janicduplessis \nstickySectionHeader on ListView is not work as expected after this change on both master branch and 0.45.0-rc.0, while it's OK on SectionList\n\nYou can see the sticked sectionHeader is overlapped by the others, works perfectly after reverted. @janicduplessis Great, BTW, can you help to review #13885. @janicduplessis Great, BTW, can you help to review #13885. \n",
    "jpshelley": "I think its still worth showing to the developer though so they understand what they need to do. Especially since we distribute to quality assurance it would help them understand the situation.. I think its still worth showing to the developer though so they understand what they need to do. Especially since we distribute to quality assurance it would help them understand the situation.. I can surely change the value, but I don't think there is any benefit of it being random. It doesn't need to be unique to other application just your own. So if your actvitiy ends up having multiple request codes its best to have them well defined, in order, and organized.\nie:\nprivate final int MY_FIRST_CODE = 1111;\nprivate final int MY_SECOND_CODE = 2222;\n Also it doesn't need to be 4 digits in length, just a common pattern I've noticed in the community.\n I'll update the name though, seems reasonable.. I can surely change the value, but I don't think there is any benefit of it being random. It doesn't need to be unique to other application just your own. So if your actvitiy ends up having multiple request codes its best to have them well defined, in order, and organized.\nie:\nprivate final int MY_FIRST_CODE = 1111;\nprivate final int MY_SECOND_CODE = 2222;\n Also it doesn't need to be 4 digits in length, just a common pattern I've noticed in the community.\n I'll update the name though, seems reasonable.. @satya164 The number must be between 0 and 65535 I believe\nhttp://stackoverflow.com/a/37812367/1784299\nI don't think Random is the correct approach because then it is \"random\" for a developer when that clashes. It should be predefined so a developer knows early on why they can't use 1 for example as their request code.\nI don't think its that big of a deal to be honest but want to get it \"right\" the first time. . @satya164 The number must be between 0 and 65535 I believe\nhttp://stackoverflow.com/a/37812367/1784299\nI don't think Random is the correct approach because then it is \"random\" for a developer when that clashes. It should be predefined so a developer knows early on why they can't use 1 for example as their request code.\nI don't think its that big of a deal to be honest but want to get it \"right\" the first time. . @satya164 Okay two thoughts:\n We can use a random number as you suggest.\n   * I'm okay with this, but we always have the potential of clashes then.\n   * A can change the clash in their own app if they caused the clash\n   * However if the clash came from another library/dependency then they would have to change or this project would have to change.\n Or we can not hardcode it and allow the user to pass in whatever RequestCodethey want.\n   * This could be through the Delegate constructor.\n   * That way they always have control over it and can change it if needed so as not to clash.\n   * We would just add an assertion after the number is passed in to make sure its a valid number\n   * This isn't very common in the Android Community but from a Developer perspective I don't see why it wouldn't work.. @satya164 Okay two thoughts:\n We can use a random number as you suggest.\n   * I'm okay with this, but we always have the potential of clashes then.\n   * A can change the clash in their own app if they caused the clash\n   * However if the clash came from another library/dependency then they would have to change or this project would have to change.\n Or we can not hardcode it and allow the user to pass in whatever RequestCodethey want.\n   * This could be through the Delegate constructor.\n   * That way they always have control over it and can change it if needed so as not to clash.\n   * We would just add an assertion after the number is passed in to make sure its a valid number\n   * This isn't very common in the Android Community but from a Developer perspective I don't see why it wouldn't work.. Yeah, its basically a duplication of the [ReactActivityDelegate] (https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java#L34) which relies on the permission system to allow dev/debug mode.\nEdit: I can add comments, or as mentioned in your summary comment I can attempt to share the code between this and the delegate class?. Yeah, its basically a duplication of the [ReactActivityDelegate] (https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java#L34) which relies on the permission system to allow dev/debug mode.\nEdit: I can add comments, or as mentioned in your summary comment I can attempt to share the code between this and the delegate class?. See comment above ^^. See comment above ^^. Good call out. How would you see this working then? Extra param in the constructor to pass a DefaultHardwareBackBtnHandler object which can either be a fragment or an activity that implements the interface? . Good call out. How would you see this working then? Extra param in the constructor to pass a DefaultHardwareBackBtnHandler object which can either be a fragment or an activity that implements the interface? . I'm actually implementing react-navigation this week in a project that will make use of the back button login, in this exact fragment class, so I can tweak it a bit to figure out what feels best. But I think I agree with what you're saying above.. I'm actually implementing react-navigation this week in a project that will make use of the back button login, in this exact fragment class, so I can tweak it a bit to figure out what feels best. But I think I agree with what you're saying above.. @serj-lotutovici So I updated the code a bit in https://github.com/facebook/react-native/pull/12199/commits/b089982ebe9cec0e86a71bf4986c783ac5355e37\nAfter messing with fragment navigations stacks this week, it seemed easier to allow the Activity to handle the back navigation. If the Fragment handled the back button handler, it ended up getting stuck in a loop, or it wasn't able to safely call the super.onBackPressed() like I was hoping for. I'm open to suggestions but this is the conclusion I came to.\nThis will be shown via documentation for sure, but I'll work on documentation if/when we get this PR \"approved\" and the idea is solidified.. @serj-lotutovici So I updated the code a bit in https://github.com/facebook/react-native/pull/12199/commits/b089982ebe9cec0e86a71bf4986c783ac5355e37\nAfter messing with fragment navigations stacks this week, it seemed easier to allow the Activity to handle the back navigation. If the Fragment handled the back button handler, it ended up getting stuck in a loop, or it wasn't able to safely call the super.onBackPressed() like I was hoping for. I'm open to suggestions but this is the conclusion I came to.\nThis will be shown via documentation for sure, but I'll work on documentation if/when we get this PR \"approved\" and the idea is solidified.. We are currently in the process of open sourcing our solution at Hudl. Since contributing back to React Native seems to be taking longer then expected, we wanted to be able to share our approach with others. I will comment back on this PR when that happens.. We are currently in the process of open sourcing our solution at Hudl. Since contributing back to React Native seems to be taking longer then expected, we wanted to be able to share our approach with others. I will comment back on this PR when that happens.. ",
    "lukemiles": "The problem with using eval in this way is that if the page enforces a Content Security policy that restricts the use of eval, the code won't be executed.. The problem with using eval in this way is that if the page enforces a Content Security policy that restricts the use of eval, the code won't be executed.. ",
    "cameron": "Indeed, NSRunLoop methods are not thread safe. . Indeed, NSRunLoop methods are not thread safe. . I'm not 100% sure what to make of this comment \u2014 it seems to conflict with your suggestion above to try scheduling on the mainRunLoop (which is owned by the main thread). \nI see that executors don't always run on the same thread, and that my solution here might re-introduce the bug I'm attempting to fix when not running on the WebSocketExecutor, so I'll see if I can come up with something more general. . I'm not 100% sure what to make of this comment \u2014 it seems to conflict with your suggestion above to try scheduling on the mainRunLoop (which is owned by the main thread). \nI see that executors don't always run on the same thread, and that my solution here might re-introduce the bug I'm attempting to fix when not running on the WebSocketExecutor, so I'll see if I can come up with something more general. . ",
    "younthu": "Not guranteed.\nI suggest users to configure it at the launch of app, such as in the Application.onCreate, and don't make any fetch call before that.. Cool, i will revise it.. Appreciated!. I can't reply your last comment, so please allow reply here. We are using nginx 1.10.1.. ",
    "goshakkk": "+1. I know it's a pretty darn amazing experience to have Android support for RN apps practically for free and I appreciate all the work that went into making it happen! And it would be very cool to have zIndex support fixed on Android.. +1. I know it's a pretty darn amazing experience to have Android support for RN apps practically for free and I appreciate all the work that went into making it happen! And it would be very cool to have zIndex support fixed on Android.. ",
    "drewvolz": "+1. I also appreciate the work that has gone into this PR. I would be excited to see if someone could be found to review this.. ",
    "mmmulani": "what view are we looking for? can we be more certain that it's the right one.\nalso I would a better explanation as to what view you're looking for so that whomever has to fix this when it breaks knows what to do :). ",
    "hansemannn": "This doesn't look right. The delegate implementation starts in line 96 and ends in 98, with a root indentation aligned to the method signature. The change will cause the following method body:\nobjc\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo\n*                                                           fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n  {\n    [RCTPushNotificationManager didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n  }\n}. ",
    "charlesvinette": "Forgot to remove the init, not needed with the setBridge method. Removed!. ",
    "btoueg": "If rate limit is a problem, we could make use of a Github token. If rate limit is a problem, we could make use of a Github token. ",
    "cooperka": "Personally I don't like destructuring Immutable collection types, because the names conflict with e.g. plain JS Map. I prefer to use Immutable.Map to avoid confusion.. this.items should be numeric, don't you need to get the length here if it's immutable?. In this case length is a property of dataBlob[key]. It's adding the value of length to the total value of this.items. So if length is 3, we add that to the total. I think to make your code work you can replace (dataBlob[key] && !dataBlob[key].isEmpty()) with simply dataBlob[key].size since you already checked that it's an immutable Map.. ",
    "manosim": "I agree and have updated! It makes more sense to use immutable.Map (btw it looks like it's imported with a lowercase i in other places so I didn't change it).. I think that the way it was before:\nthis.items += dataBlob[key] && dataBlob[key].length;\n\nit was returning true/false so kept it that way?. ",
    "nscoding": "UIImpactFeedbackGenerator has initWithStyle which has 3 styles of vibrations.. ",
    "terribleben": "I prefer keeping it weaker (but with predefined key constants) for two reasons:\n- Classes can define their own keys, such as kRCTDevSettingShakeToShowDevMenu which applies only to the RCTDevMenu UI but can still leverage the generic DevSettings interface.\n- The documentation can live by the keys, instead of trying to put it in two places (the key const definition for, e.g. kRCTDevSettingIsDebuggingRemotely in addition to the method definition such as setIsDebuggingRemotely:)\nHowever, if you disagree, then I can move the RCT_EXPORT'd methods from RCTDevSettings.m into RCTDevSettings.h, providing strongly-defined setters for these properties as you requested.. You're right. Will remove this code and change RCTDevMenu to simply call the handler when the item is selected. If developers want to subscribe to the data source changes on their own, they can.. Good catch, it was just copied over from the old implementation and I overlooked it.. Hmm. Can you give an example of a situation where you're afraid of it breaking? I designed this as a NSNotification so that anybody can subscribe to updates about settings changing in the dataSource.\nRCTDevSettings is one such subscriber, because it uses the notification to activate/deactivate its dev tools. If somebody wanted to add a custom dev setting, they would follow the same pattern-- tell the data source to update, subscribe to changes, and take action after a change is posted.\nI designed it this way because the old implementation had really convoluted state management, and this seemed like a clean unidirectional model, where there is one authority about the current state of a dev setting (the data source) and potentially many subscribers.. I believe you might be conflating isLiveReloadAvailable (whether it's possible to use live reload) with isLiveReloadEnabled(whether we are currently using live reload). Both properties are defined just once. Only the second property is settable.. This is exposed in the header because RCTDevMenu's older deprecated reload method calls it. All the old RCTDevMenu exports are still exposed and deprecated (for now) in order to avoid breaking old workflows.. Interesting! TIL. The old DevMenu exports debugRemotely: to JS. In the new implementation, that old method is deprecated and wraps this method. The new method is still exposed to JS.. ",
    "ptomasroos": "Sure thing. Will fix. Right. ",
    "matt-oakes": "Fixed \ud83d\udc4d  This comment was on the wrong line. Fixed \ud83d\udc4d  This comment was on the wrong line. I can see what you mean. I was attempting to follow the convention set by removeClippedSubviews, but I guess it would be clearer as stickySectionHeadersEnabled. Should I make that change?. I can see what you mean. I was attempting to follow the convention set by removeClippedSubviews, but I guess it would be clearer as stickySectionHeadersEnabled. Should I make that change?. @Kureev Previously the code would add in the indexes of all the sections headers whatever you set stickyHeaderIndices to. It did this by sending this.props.stickyHeaderIndices.concat(sectionHeaderIndices) to the ScrollView which the ListView uses. Because this happened within the ListView, there didn't seem to be a way to not have the headers sticky. The documentation also suggested this with the way it was worded. stickyHeaderIndices then essentially becomes the indexes of any additional views which you want to be sticky. Without this flag, section headers are always passed to the underlying ScrollView.\nThis flag basically makes that single line of logic run conditionally only if you want the headers to be sticky.\nI can't see how that block of code would disable the sticky headers. Where are you proposing using it?. @Kureev Previously the code would add in the indexes of all the sections headers whatever you set stickyHeaderIndices to. It did this by sending this.props.stickyHeaderIndices.concat(sectionHeaderIndices) to the ScrollView which the ListView uses. Because this happened within the ListView, there didn't seem to be a way to not have the headers sticky. The documentation also suggested this with the way it was worded. stickyHeaderIndices then essentially becomes the indexes of any additional views which you want to be sticky. Without this flag, section headers are always passed to the underlying ScrollView.\nThis flag basically makes that single line of logic run conditionally only if you want the headers to be sticky.\nI can't see how that block of code would disable the sticky headers. Where are you proposing using it?. I was following the style that I saw in the comment above (https://github.com/facebook/react-native/pull/11700/files#diff-b4c8e4c7b175f06ffa084d8dca28e86aL185), but I can see now that the double spacing is not consistent.\nShould I change just my misuse or all double spaces in this face?. I was following the style that I saw in the comment above (https://github.com/facebook/react-native/pull/11700/files#diff-b4c8e4c7b175f06ffa084d8dca28e86aL185), but I can see now that the double spacing is not consistent.\nShould I change just my misuse or all double spaces in this face?. Looking through the files in Library/CustomCompnents there are lots of instances of .<space><space>. I don't think it's appropriate for this pull request to fix all of them. I will change the 10 instances in the ListView.js property comments, but I'll leave the copyright header with the double spaces so it is the same as the other headers in this folder.\nIt's not a big deal, but I don't want to muddy up this PR with unrelated style changes.. Looking through the files in Library/CustomCompnents there are lots of instances of .<space><space>. I don't think it's appropriate for this pull request to fix all of them. I will change the 10 instances in the ListView.js property comments, but I'll leave the copyright header with the double spaces so it is the same as the other headers in this folder.\nIt's not a big deal, but I don't want to muddy up this PR with unrelated style changes.. ",
    "el": "webSocket is local, mWebSocket is not they are the same. webSocket is local, mWebSocket is not they are the same. WebSocket.close does not throw an exception. WebSocket.close does not throw an exception. ping is deprecated from okhttp. ping is deprecated from okhttp. Should I add some comments? \n1000 is normal closure status,\nnull is the reason (text)\nhttps://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java. Should I add some comments? \n1000 is normal closure status,\nnull is the reason (text)\nhttps://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java. ",
    "huangmr": "and replaceOkHttpClient too I guess.\n. ",
    "joaogranado": "Default function parameter syntax is supported since node 6. I have checked both in node 4 and 5 and it works as expected, since it is transpiled by babel in the CLI entry (local-cli/cli.js).. Default function parameter syntax is supported since node 6. I have checked both in node 4 and 5 and it works as expected, since it is transpiled by babel in the CLI entry (local-cli/cli.js).. ",
    "ericnakagawa": "Can you clarify here what this means regarding when releases will come out? Certain day of month?\nAlso, perhaps suggest that this switch will help work towards a more stable releases or other benefits I'm not seeing.\n\"You can now expect a new monthly release on the nth of the month. We expect the slower release cycle will allow more stability by allowing additions and features more time for the community to weigh in.\". Can you clarify here what this means regarding when releases will come out? Certain day of month?\nAlso, perhaps suggest that this switch will help work towards a more stable releases or other benefits I'm not seeing.\n\"You can now expect a new monthly release on the nth of the month. We expect the slower release cycle will allow more stability by allowing additions and features more time for the community to weigh in.\". ",
    "hollanderbart": "Because you copied the keys from the object, i.e.: there is no direct reference anymore, I think you can still use the enhanced for loop. So it could look like this: \nvar keys = Object.keys(object);\nfor (var key in keys) { \n if (object.hasOwnProperty(key)) {\n          object.__defineGetter__(key, identity.bind(null, object[key]));\n          ...\n}}. Because you copied the keys from the object, i.e.: there is no direct reference anymore, I think you can still use the enhanced for loop. So it could look like this: \nvar keys = Object.keys(object);\nfor (var key in keys) { \n if (object.hasOwnProperty(key)) {\n          object.__defineGetter__(key, identity.bind(null, object[key]));\n          ...\n}}. ",
    "adamjernst": "i would expect both signed or both unsigned if we're comparing them. what's up?. i would expect both signed or both unsigned if we're comparing them. what's up?. @rh389 Right, makes sense. I'd change runtimeBCVersion to be unsigned and change the magic value to numeric_limits<uint32_t>::max(), which seems a little less dangerous. But ultimately, it's all theoretical.. @rh389 Right, makes sense. I'd change runtimeBCVersion to be unsigned and change the magic value to numeric_limits<uint32_t>::max(), which seems a little less dangerous. But ultimately, it's all theoretical.. ",
    "fourlastor": "that would trigger this every time you add a listener, while you want it to be triggered only the first time as far as I understood. do I need to import anything? fairly new to objective-c :smile: I usually work on the Android side of things. aa44160 seems like not from what I saw :). ",
    "MaxGraey": "@vjeux  My last fork was 5 days ago, so I try to remote update to actual base, but anyway I still have unresolved 2 conflicts. What would you recommend?. @vjeux  My last fork was 5 days ago, so I try to remote update to actual base, but anyway I still have unresolved 2 conflicts. What would you recommend?. ",
    "kevinresol": "This is because querying against Images.Media.EXTERNAL_CONTENT_URI will only gives you images. So we need to query against the \"whole external content uri\" and use MediaStore.Files.FileColumns.MEDIA_TYPE to filter out what we need, either photos or videos or both.. Do you mean using a constant in Java or exporting the constant to JS? Because I found that the iOS companion didn't export constants to JS.. Because it simply won't work to append the id directly to the external content uri.. I tried to limit the amount of changes to functional parts only. There are quite a few things that can be improved but I am just afraid to expand the scope of this PR too much.\ndataIndex is needed for extracting the uri of the file. I found this the easiest way to reliably obtain the file uri. . [self dirtyLayout]; doesn't work.. [self dirtyLayout]; doesn't work.. just to avoid any ambiguity:\n_previousAttributedText = _localAttributedText; works\nthis PR works as-is at its current state.\n. just to avoid any ambiguity:\n_previousAttributedText = _localAttributedText; works\nthis PR works as-is at its current state.\n. What I understand from @shergin 's comment is to replace _previousAttributedText = _localAttributedText; with [self dirtyLayout]; and I have already stated clearly that it does not work.. What I understand from @shergin 's comment is to replace _previousAttributedText = _localAttributedText; with [self dirtyLayout]; and I have already stated clearly that it does not work.. @shergin : a friendly reminder to review this, thanks.. @shergin : a friendly reminder to review this, thanks.. ",
    "vonovak": "yeah, I see now. Will change.. according to the docs, getPreferences returns\n\na SharedPreferences object for accessing preferences that are private to this activity\n\nSo by default, the preferences file created by this module would be available only to the activity that created it. That may or may not be what you want, and could be changed by calling the setFilename method. That brings us to another question - how do you call setFilename from the javascript side?. Thanks for the explanation @greghe. I'm just unsure if it is possible to call setFilename from Javascript with the current impl?. I hope I am not becoming annoying :D but why do you use mPreferences here, while you call ensurePreferences() in other methods? I believe there should be only one way of working with the preferences.. We still need to have the case when the value is out of the range of Float covered. I don't want to make it more complicated for you than necessary, but personally I'd do it so that this method returns a promise that resolves / rejects with error message if there is one. This would require changes to the ios module as well though.. I am aware that the settings values live in javascript and are also asynchronously (although I would't say lazily) sent to native land and persisted.\nThe problem here is that you can store an object to preferences, for example {name: \"John\", age: null } and when you read the preferences somewhere else, you the module returns the same what you have stored (because the value is read from JS). But then you restart the app and what you get is {name: \"John\"} - the age field is lost!\nWith the current implementation, people can store things without knowing they weren't saved or that they weren't saved exactly the way they were meant to be saved (e.g. because the settings module does not support storing nulls or because there was a trouble casting their large number they wanted to save). This silent failing is very developer-unfriendly. That is why I suggested that a promise would be helpful - if such case happens, the promise could reject.\nI think it pays off to do things right here - many people will likely use this module (myself included, which is why I did the review). Now, I am not a person that has the rights to merge this PR, so maybe you can go ahead and ask some core contributor to merge, but I think they will also want to make the module more error-proof. I think I have said all that I wanted, so good luck getting this merged \ud83d\udc4d . before, the scrollView would move down with animation and after that the refreshControl would show up. I used the refreshControl to indicate fetching in progress. If the fetching was really fast, you'd only see the scrollView move down and then up, without the refreshControl becoming visible.\nNow the scrollView moves down with animation and the refreshControl is shown even before the animation is done, so the refreshControl is visible even when the fetching is really fast.\nI have only tested this on emulator. Will test it on a device as well and let you know.. I purposely made it static so that the value (which is the same for all instances of refreshControl) is only stored once. Having an instance variable means more memory consumption which in this case is not necessary. Are you sure to change it to per-instance var?. this is taken from ToolbarAndroid. would be nice to have only one CompoundButtonCompat.setButtonTintList call instead of two, but I'm afraid it would break the tests (because they are somehow unstable lately), so I'm leaving it as-is for now.. we always pass the same values, but in different order: \nsetCheckboxTintList(..., defaultColorIdOfUncheckedState, defaultColorIdOfCheckedState);\nsetCheckboxTintList(..., defaultColorIdOfCheckedState, defaultColorIdOfUncheckedState);\nI guess I should rename those vars. I think defaultProps would be a better fit for this. Also, if you do not specify the hidden and translucent props, they will be undefined and this.props.hidden !== false will evaluate to true.. ",
    "ivmarkov": "You are looking at the wrong method.\nThe above patch calls DevServerHelper.getDebugServerHost(), while you are looking at DevInternalSettings.getDebugServerHost().\nDevServerHelper.getDebugServerHost() cannot - ever - return null. Look at its implementation, in GitHub master:\n```Java\n/*\n   * @return the host to use when connecting to the bundle server.\n   /\n  private String getDebugServerHost() {\n    // Check debug server host setting first. If empty try to detect emulator type and use default\n    // hostname for those\n    String hostFromSettings = mSettings.getDebugServerHost();\nif (!TextUtils.isEmpty(hostFromSettings)) {\n  return Assertions.assertNotNull(hostFromSettings);\n}\n\nString host = AndroidInfoHelpers.getServerHost();\n\nif (host.equals(AndroidInfoHelpers.DEVICE_LOCALHOST)) {\n  FLog.w(\n    ReactConstants.TAG,\n    \"You seem to be running on device. Run 'adb reverse tcp:8081 tcp:8081' \" +\n      \"to forward the debug server's port to the device.\");\n}\n\nreturn host;\n\n}\n``. See above..AndroidInfoHelpers.getServerHost()cannot return null, as it is basically choosing amongst one of three hard-coded, non-null strings. And this method is not called directly by my \"three-liner\" anyway.\nAlso, even if I add a null-check in my method, a null host will blow up in the caller -DevServerHelper.getJSBundleURLForRemoteDebugging(), which relies on getHostForJsProxy()` returning a non-null value.\nTL;DR: Don't get me wrong - adding a null check is 30 seconds, but it will just not fix anything, as the whole code is written in a way where null for the host is not anticipated anywhere. But if you really insist - I'll commit a null check ASAP.\nLong story: For these cases, I'm more of a fan of using proper JSR-308 @Nullable annotations to clearly indicate if a type includes null not. A defensive non-null check might save the current method invocation, but still blow up the call chain if the caller does not anticipate the returned value to be null - as in our case. With that said - while the ReactAndroid code does have @Nullable annotations here and there - it is not Java-8 compatible and does not have a JSR-308 null analyzer running as part of the build (right?). So you are also right that if DevServerHelper.getDebugServerHost() starts to return null for host, this change will go unnoticed at compile time.\n. ... and before :. Will fix.. Fixed the ? : formatting and pushed a non null assertion (defensive if also possible, if you insist).. ",
    "harshil07": "it does work @Kureev . i moved the file to util as part of this PR given it was being used outside of \"server\" code.\n\n. it does work @Kureev . i moved the file to util as part of this PR given it was being used outside of \"server\" code.\n\n. ",
    "edmofro": "Great point, done. Great point, done. Done. Done. Sweet, done. Sweet, done. Caught. Caught. Sure, removed. Sure, removed. I see your point, but just startNativeLoop right? The reset could be useful publicly?. I see your point, but just startNativeLoop right? The reset could be useful publicly?. On line 39 there is a conditional checking if (mStartFrameTimeMillis == -1) (as it is on construction), and if so runs some initialisation code. I'd thought it best to let the animation driver go through the same code path on restarting a loop, rather than duplicating the code in the restart section. Let me know if you still think I should change it.. On line 39 there is a conditional checking if (mStartFrameTimeMillis == -1) (as it is on construction), and if so runs some initialisation code. I'd thought it best to let the animation driver go through the same code path on restarting a loop, rather than duplicating the code in the restart section. Let me know if you still think I should change it.. I've added a comment to this effect.. I've added a comment to this effect.. Good idea. Seems to work like this:\nconfig: LoopAnimationConfig = {iterations: -1},. Good idea. Seems to work like this:\nconfig: LoopAnimationConfig = {iterations: -1},. ",
    "bachand": "@alloy is there a feature of CocoaPods 1.2.0 that is required to support this new podspec? If not, do you think we could relax the version requirement? Would be nice if it wasn't necessary to update to consume this fix!\nThanks for doing this, solves the problem we've been having!! \ud83d\udc4d . ",
    "nikosch86": "Since i am not the original author of this code i can not be certain what the intention was. Since i am not the original author of this code i can not be certain what the intention was. ",
    "serj-lotutovici": "This forces the host activity to implement the interface, when in fact it's already implemented by the ReactFragment (that btw is never used). . That would be my first choice. I wonder if the the behaviour would be the same, since ReactActivity is calling super.onBackPressed() and the fragment only calls getActivity().onBackPressed(). The chain of thought is that the host activity will have to call the fragment's onBackPressed method do decide whether or not to call the super method.. ",
    "shergin": "@jmurzy Have you tried reseting enabled property in didMoveToWindow?. \ud83d\udc4d . I believe we have to move this logic to RCTView and UIView+React introducing new category method reactZIndex. (Where we also have to reset the cache for superview... So we also have to have something like reactInvalidateZIndex.). As you know, hitTest must be incredibly performant, so I believe we have to decouple this logic and introduce caching.\nI think we can implement at least two cache invalidation strategies:\n * Use weak references and invalidate inside something like setNeedsLayout;\n * Use strong NSArray and destroy it in all insert/add/remove/Subview methods family (I personally prefer this one even if it requires overriding half of dozen methods).. And, also, if we could not find a way to disable pinchGestureRecognizer, we can directly compare pinchGestureRecognizer and gestureRecognizer here instead of using isKindOfClass.. float quality = [(cropData[@\"quality\"] ?: @(0.75)) floatValue] or\nfloat quality = [cropData[@\"quality\"] floatValue] ?: 0.75.. It should be nil instead of NO.. Please use RCTConvert to map strings to enum values (see RCTScrollView for examples).. Dot notation here.. RCT_EXPORT_VIEW_PROPERTY(presentationStyle, UIModalPresentationStyle). New line.. New line.. Image as a type? \ud83e\udd14\nHow does it work?. Can we do not call getText twice here?. Please fix code style here.. These names should be more unique and follow Objective-C/Foundation code style.. constantsToExport prevents the module to be lazy loaded, so when it is possible (like this case), we have to move this to JavaScript side.. It should be ivar, not static variable.. I am afraid that we forget to consider contentInset here. :(. Should be NSMutableString *accessibilityLabel = [NSMutableString new];.\n(Please, use new and, please, avoid abbreviation.). Please remove * here.. Why do we import it RCTConvert?. This change seems completely unrelated to test plan.. Please add comment here why it is required.\nAnd I believe something more explicit like {'section_' + sectionID + '_row_' + rowID} would be better.. Please fix code style.. Should we deallocate _locationManager somewhere?. I would create a dedicated method for it like initLocationManagerIfNeeded.. \ud83e\udd14. It will crash on iOS 9.. We definitely should not configure it here.. Yeah, it worked before even without iterating over RCTViewManager! So, even it it does now, it is not intentional. I would try to optimize this iteration a bit by using some ObjC runtime functions (because we can and because we care \ud83d\ude04 ), but I want to have conceptual consensus before.. That the point. I have not idea, yet. \ud83d\ude04 Do you?\nOkay, I will figure out. You are right, we have to know that before making this kind of changes.. (Just to be clear, I am no so reckless, I plan to investigate it before landing this, I just want to have a consensus among us related to the general move.). self.isTransparent, no?\nI am curious, how does it work? We rename the getter to isTransparent, but... accessing it as self.transparent still works. That's confusing.. self.isTransparent, no?\nI am curious, how does it work? We rename the getter to isTransparent, but... accessing it as self.transparent still works. That's confusing.. You have to put condition inside warning, that's the point of warning.. You have to put condition inside warning, that's the point of warning.. Yeah, but it should be something like\nwarning(!(props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent), ...)\nor\nwarning(!props.presentationStyle || props.presentationStyle === 'overFullScreen' || !props.transparent, ...)\n.. Yeah, but it should be something like\nwarning(!(props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent), ...)\nor\nwarning(!props.presentationStyle || props.presentationStyle === 'overFullScreen' || !props.transparent, ...)\n.. <Image> with children is deprecated and this feature will be removed very soon. See <ImageBackground> for more details.. Please, provide more context and motivation.. Yeah, I know, but how? I prefer to see self.isTransparent here anyway.. Yeah, I know, but how? I prefer to see self.isTransparent here anyway.. UIExplorer was actually renamed.. UIExplorer was actually renamed.. Yeah, this is deprecated. We have to use typed event objects instead of strings.. Yeah, this is deprecated. We have to use typed event objects instead of strings.. Remove __unused, please.. Remove __unused, please.. We don't need : void here because it can be inferred.. We don't need : void here because it can be inferred.. We have to unify native event names with JS ones, this will drastically simplify this code fragment. . Can we workaround it on native side (use another event)? Or it is just conceptually impossible/meaningless.. Can we workaround it on native side (use another event)? Or it is just conceptually impossible/meaningless.. The relationship between android:windowSoftInputMode, [keyboardDidShow + keyboardDidHide], and  [keyboardWillShow + keyboardWillHide] is still unclear to me. Does  android:windowSoftInputMode affect  [keyboardWillShow + keyboardWillHide], or this pair of events generally unavailable on Android?. The relationship between android:windowSoftInputMode, [keyboardDidShow + keyboardDidHide], and  [keyboardWillShow + keyboardWillHide] is still unclear to me. Does  android:windowSoftInputMode affect  [keyboardWillShow + keyboardWillHide], or this pair of events generally unavailable on Android?. Why do we need this?. Why do you remove information about where full list of types can be found?. Why do we need this?. Why do we need this?. nit: Indention.. nit: Indention.. Why the returning type is different from _contentAvailable.. Why the returning type is different from _contentAvailable.. Looks like the only possible values are 1 and null, right?. Looks like the only possible values are 1 and null, right?. Can we declare special type type ContentAvailable = 1; (https://flow.org/en/docs/types/unions/) and then use it as ?ContentAvailable? (I am not sure.) Or maybe we can create special already optional type?. Can we declare special type type ContentAvailable = 1; (https://flow.org/en/docs/types/unions/) and then use it as ?ContentAvailable? (I am not sure.) Or maybe we can create special already optional type?. I am totally n00b in Android, but maybe we should call it inputConnectionWrapper instead?. I am totally n00b in Android, but maybe we should call it inputConnectionWrapper instead?. space character before class .... space character before class .... We have to call super method here.. We have to call super method here.. Should we use more explicit name like pinchGestureEnabled?. Should we use more explicit name like pinchGestureEnabled?. It just should be inside RCTPicker's init method, and View Managers should be as declarative as possible.. It just should be inside RCTPicker's init method, and View Managers should be as declarative as possible.. That's not quite correct, I think. It should work this way:\n * blurOnSubmit && isMultiline => generate submit event; blur; return true;\n * !blurOnSubmit && isMultiline => return false; // Perform default behaviour.\n * blurOnSubmit && !isMultiline => generate submit event; blur; return true;\n * !blurOnSubmit && !isMultiline => return true; // Shallow <Enter>.. That's not quite correct, I think. It should work this way:\n * blurOnSubmit && isMultiline => generate submit event; blur; return true;\n * !blurOnSubmit && isMultiline => return false; // Perform default behaviour.\n * blurOnSubmit && !isMultiline => generate submit event; blur; return true;\n * !blurOnSubmit && !isMultiline => return true; // Shallow <Enter>.. I would suggest rewrite whole function in this manner with local boolean variables: blurOnSubmit, isMultiline, shouldDispatchSubmitEvent, shouldClearFocus, and returnValue.. I would suggest rewrite whole function in this manner with local boolean variables: blurOnSubmit, isMultiline, shouldDispatchSubmitEvent, shouldClearFocus, and returnValue.. Why do we need this?. Why do we need this?. Seems that we also have to exclude IME_ACTION_NEXT and IME_ACTION_PREVIOUS here.. Seems that we also have to exclude IME_ACTION_NEXT and IME_ACTION_PREVIOUS here.. Could you please make it more clear?. Could you please make it more clear?. nit: Please avoid \"negative logic\": Changing != to == will make this code easier to read.. nit: Please avoid \"negative logic\": Changing != to == will make this code easier to read.. Does using do { } while (); loop make this code a bit cleaner/easier-to-read?. I am okay with anything which makes the code obvious. Even adding parentheses and indentations for original solution is enough.. I am okay with anything which makes the code obvious. Even adding parentheses and indentations for original solution is enough.. Just curious, why do we need this? We know that  is \"native\".. Just curious, why do we need this? We know that  is \"native\".. N00b question: Will this conflict with ref prop existed in this.props (...)?. N00b question: Will this conflict with ref prop existed in this.props (...)?. I think we harmlessly can inline it. No?. I think we harmlessly can inline it. No?. This name is quite confusing (because it is not connection), can/should we rename it to something like getConnectionInfo or getConnectionStatus?. Why the event name is all lower case? And . I see. The connection attribute, when getting, returns an object that implements the NetworkInformation interface. Yeah, I think using getConnectionInfo or getConnectionInformation would be much better.. This function should accept UIImageOrientation and use conversion internally.. Is this make sense only for JPEG?. If we changing this quite radically (eg switching to using NSMutableDictionary), we can rename it to imageOptions (actual correct name from CGImageDestinationCreateWithData signature).. It should not be instance method because it completely stateless. It should be static C function.\nAnd we should name it something like CGImagePropertyOrientationFromUIImageOrientation.\nAnd, also, it would be great if we add comment with this link: https://stackoverflow.com/a/6699649/496389 .\nAnd, moreover, if we create additional enum for all CGImagePropertyOrientation values from documentation (something like that: https://github.com/facebook/react-native/blob/master/React/Base/RCTRootView.h#L23), it would be just awesome!! \ud83d\ude04 . UIImageOrientationUp. Why do we convert to kilobytes here?. Should we update mTargetCoordinates instead? If we do so, UP event also will have proper coordinates, right?. Should we update mTargetCoordinates instead? If we do so, UP event also will have proper coordinates, right?. What a second, what if we make RCTGetImageData accept UIImage instance instead of CGImage and UIImageOrientation? Looks like it will be much simpler!. And, we have to move it above to avoid duplication. . We also have to remove ANIMATION_END from ScrollEventType.. We also have to remove ANIMATION_END from ScrollEventType.. Can we just use [[UIApplication sharedApplication] keyWindow].bounds?\nWhy do we need to subscribe for RCTUIManagerDidUpdateAvailableSizeNotification? Is your app hybrid (uses not only RN but also native views and view controllers)?\nI hope, should be the better/easier way to subscribe for UIWindow size changing notification.. Btw, please, don't use abbreviation in code.. Please make the code style consistent with existing code.. Should It be negative?. Should It be negative?. In which cases invertedCameraDistance is 0 and why?\nDoes 0 make any logical sense  as invertedCameraDistance value?. In which cases invertedCameraDistance is 0 and why?\nDoes 0 make any logical sense  as invertedCameraDistance value?. Why we don't make them smaller right before displaying them?. I meant we have to put && on previous line (seems that is current style). (Sorry.). onRequestClose can be set later, right? So, probably we don't need this check here.. onRequestClose can be set later, right? So, probably we don't need this check here.. - (void)menuButtonPressed:(__unused UIGestureRecognizer *)gestureRecognizer . - (void)menuButtonPressed:(__unused UIGestureRecognizer *)gestureRecognizer . Can/should we pass nil here?. Can/should we pass nil here?. And I would prefer to create _tapGestureRecognized inside init method.. And I would prefer to create _tapGestureRecognized inside init method.. You probably have to convert the value manually using RCTConvert's API.. Why we don't want to? Just because of performance reasons or because it changes default dehaviour?\nI think there is no logical connections between adding subviews and setting onRequest property. Let's imagine that we apply this property inside render function only if some condition is true, so it can happene after the view three is established. Does this make sense?\nSo, I believe we have to override setter setOnRequsetClose and establish gesture recognizer there. And we also have to reinfoce it in insertReactSubview:.. Why we don't want to? Just because of performance reasons or because it changes default dehaviour?\nI think there is no logical connections between adding subviews and setting onRequest property. Let's imagine that we apply this property inside render function only if some condition is true, so it can happene after the view three is established. Does this make sense?\nSo, I believe we have to override setter setOnRequsetClose and establish gesture recognizer there. And we also have to reinfoce it in insertReactSubview:.. This is not technically hash, so we should not call it hash. . I would split this function to two: RCTGetBorderImage and RCTGetCachedBorderImage.. What the point of this change? I always thought that contentOffset already \"contains\" contentInset, so when contentOffset is {0, 0}, the insets are visible. So, when contentOffset is {-contentInset.top, 0} we have doubled top inset. Am I wrong?. Sorry, I was terribly wrong. We have to fix this asap.\nhttps://www.objc.io/issues/3-views/scroll-view/\n\nThe property contentInset can change the maximum and minimum values of the content offset to allow scrolling outside of the scrollable area. Its type is UIEdgeInsets, which consists of 4 numbers: {top, left, bottom, right}. When you introduce an inset, you change the range of the content offset. For example, setting the content inset to have a value of 10 for its top value allows the content offset\u2019s y value to reach -10. This introduces padding around the scrollable area.. I mean we have to fix that for all four sides, in separate PR. I will be able to do it later this week. Or PR is welcomed. :smile: . We have to change this name to something more explicit like _menuButtonGestureRecognizer. . We have to change this name to something more explicit like _menuButtonGestureRecognizer. . r: Please don't use abbreviations.. r: Please don't use abbreviations.. Space after if, please. . Space after if, please. . Use dot notation for count, please. . Use dot notation for count, please. . Using subviews[] here is technically correct, but it is extremly fragile abstraction. In better world we would have dedicated property, something like contentView, which smart getter and setter would manage gesture recognizers and add/remove it from view hierarchy. . Using subviews[] here is technically correct, but it is extremly fragile abstraction. In better world we would have dedicated property, something like contentView, which smart getter and setter would manage gesture recognizers and add/remove it from view hierarchy. . Space, please.. Space, please.. Oh, we even already have ivar for it with strange name _reactSubview.. Oh, we even already have ivar for it with strange name _reactSubview.. Oh, actually, subviews is always empty. So, it is exactly what I mean by fragile. \ud83d\ude1e . Oh, actually, subviews is always empty. So, it is exactly what I mean by fragile. \ud83d\ude1e . We have to add a comment here about that fact that super method actually removes subview from _modalViewController.view because it absolutely not obvious.. We have to add a comment here about that fact that super method actually removes subview from _modalViewController.view because it absolutely not obvious.. Should we also modify bounds.origin.top here?. This is not bounds, this is rect.. Space after if. . Why do we need this custom setter here?. If we changed the signature of this method, may be we can name it a bit better including callback word into this? Something like readAllPartsWithCallback:progressCallback: or something even better?. @janicduplessis Yeah, you are absolutely right. We also have pretty similar bug internally. \ud83d\ude22 And I don't have good idea how to fix that. As I wrote internally:\nI understand why it is happening but I have no idea how to fix it properly (without reverting the diff). And the problem seems that there is no enough content size in the rendering moment to scroll to desired offset.\nConceptually, the problem is that we should not have scrollOffset property in the first place, because it is momentary value, not something permanent, and because of this the semantic of this property is unclear.\nSo, let's imagine we have scrollOffset={10,10} enforced in render method.\nQuestions:\nWhen exactly ScrollView must scroll to this offset?\nWhat if there is no enough content for this?\nShould user actions (touch gestures) reset this value?\nWhy should we scroll to this offset only when it is changing?\nSo, again, because it is momentary, it the perfect world, we have to use scrollTo method instead of using this prop.\n\nAny ideas how we can address this?. And for context, that diff is supposed to fix the problem known as https://github.com/facebook/react-native/issues/13566 . Having reactive and declarative nature of React and React Native, I don't think that even having initialContentOffset will make it clear. Because... Which moment is \"initial\"? What if some ancestor component was rebuilt? How RN should response on changing this value later, on runtime?\n@sahrens Do you have any thoughts about it?. We have to check responseType nullability here as well. Or, even better, we can check nulabity somewhere above. . We have to check responseType nullability here as well. Or, even better, we can check nulabity somewhere above. . We can call awakenScrollBars right from here, right?. We can call awakenScrollBars right from here, right?. Why super?. Why super?. Could you please fix code style here?. Could you please fix code style here?. We have to remove it now. \ud83c\udf89. We have to remove it now. \ud83c\udf89. One module - one line, I think you can import all modules directly by names.. One line, please.. Separate file, please.. Why do we need xcpretty process?. Sorry, I meant \"Why do we need xcpretty variable here?\".. (It looks redundant, we already have *process.). I am okay with both renaming or using xcprettyProcess as a flag.. If it is not a viewTag, should we don't implement viewTag property at all and mark viewTag as optional in the protocol.. We don't need (( anymore.. Why do not declare this as regular @-properties?. Just serious, is this a special reason to use syntesize here? Why should not use just a ivar?. Or why don't add this as a prop to class interface inside this (.m) file?\nTo me, @syntesize always looks like or something redundant/old-fasioned or something very specific.. How can we make it less specific or simply better? Let's do this. \ud83d\ude04. Having less points to discuss is the fastest way to get PR approved. \ud83d\ude04 . We have to use integerValue method, NSInteger type and no conversion.. Why do we need this wrapping here?. Code style.. Code style.. fonte? French? \ud83d\ude04 . We also have to remap other font-related props like this one.. ... and get rid of all custom imperative logic inside ViewManager.\nWe don't really need defaultView here.. Instad of having real prop, we probably want to have only setter which will redirect the value to backedTextInputView.font. (Also we have to add font to BackedTextInputProtocol if it does not have it already.). The modern Apple convention is \"always use NSInteger unless you really need to use NSUInteger\", we are following it in RN.. This should be rewritten in manner where we are modify only NSForegroundColorAttributeName value inside the dictionary.. #ifdef ?. Should we discribe here that it is general purpose event? Should/can it be subclasses?. Should we add a comment here that this type of Event does not have reactTag?. New line.. And /* **/.. We have two usage of this in internal code base, which is cool and  manageable!. Why should we extract target from body? Should we pass it directly?. Hmm, why we initialize it with untyped NSDictionary? I thought whole point of having RCTEvent objects is typesafty and explicitly.\nHow do you see the perpose of this class? Something simple which should replace all current untyped events? Should we have it?. Why do we need this?. (We can consider moving this to superclass.). Yes. invalidateContentSize does not exist in base class, right? I think we can also move this method to the base class (even with possibly empty implementation).. (This does not block landing. We can do it in the future.). Just curious, if the default value is android why do not setup it here instead of having same custom logic in two places?. We access optional canCoalesce and coalescingKey here.\nSo, we have two options here:\n 1. Do responseToSelector check here.\n 2. Make that props required for all implementations.\nI strongly prefer 2 because we should maintain this function as perfromant as possible.\nRight?. Oh, no, I see, I am wrong.. Why should we have it in View manager (view managers usually are about RN-specific stuff), why not move this to RCTModalHostView?. Why do we need this? How incall status bar on old iPhones is conceptually different from iPhone X's tall status bar?. Should we deprecate this?. Please remove this todo. Without a task number it will not pass linter.. We cannot rely on RCTPresentedViewController here, it simply will not work.. Why do we need this?. Why do we introduce the new listeners APIs (with remove function) here?. I think we have to name it top, not x.. Oh, I see.. Why did we remove willChange event?. We don't need this, because it enforced by Flow.\nJust move this condition into invariant.. I don't remember. \ud83d\ude04 Search for deprecate in .js files.\nOkay, let's deprecate it in another PR.\n. Oh, I see what you mean, you want to have statusBarFrame to be relative to your RootView position. Right? The problem here is that you cannot assume that:\n * You have only one RootView at any particular the moment;\n * Your RootView is not moving.\nYou probably should use <SafeAreaView> to get same effect.\nI would start from simple API where statusBarFrame always return absolute values.. I am affraid, that kind of hacks are unacceptable. This notification already fires on the main thread, and this nextTick looks very hacky and unreliable.. We probably need to add RCTAssertMainQueue() here.. Where do we use this?\nExporting constants from Module turns off some \"lazy\" performance optimization, so if we don't really need this, we have to remove it.. Why do we need this?. Why do we need this?. Should we reject promise here?. Should we reject promise here?. Okay, but what is an idea/reasoning behind this changeset?\nComparing view.frame with superview.bounds makes no any sense, I am afraid.. Okay, but what is an idea/reasoning behind this changeset?\nComparing view.frame with superview.bounds makes no any sense, I am afraid.. @grabbou Hey! Do you have any concerns related to event-subscribing API here?. @grabbou Hey! Do you have any concerns related to event-subscribing API here?. Why do we need this? Implementing constantsToExport prevents this module to be lazy-loaded which affects performance.. Why do we need this? Implementing constantsToExport prevents this module to be lazy-loaded which affects performance.. Should we unify these names with Android counterpart... somehow?. Should we unify these names with Android counterpart... somehow?. We have to #import <mutex>.. We have to #import <mutex>.. Should be kBlobURIScheme.. Should be kBlobURIScheme.. Mutex here?. Mutex here?. Yeah, I see. So, theoretically, we can use iOS values on Android (something like always and denied), right?. Yeah, I see. So, theoretically, we can use iOS values on Android (something like always and denied), right?. Honestly, I am okay with any approach, I just want to have single one pattern across whole codebase. I also don't want to have it overengineered.. Honestly, I am okay with any approach, I just want to have single one pattern across whole codebase. I also don't want to have it overengineered.. Why do we need this?. Why do we need this?. Just move those constants to JS file.. Just move those constants to JS file.. Why did we add DEBUG here?. Why did we add DEBUG here?. Oh my, it this a standard way to handle this kind of problem?. Oh my, it this a standard way to handle this kind of problem?. Why do we need this?. Why do we need this?. Maaaaaagic.... Maaaaaagic.... Code style. . Code style. . Is this intentional. Why?. Is this intentional. Why?. Please, don't use abbreviations.. Please, don't use abbreviations.. Can we decouple file names and command names into separate variables/constants?. Can we decouple file names and command names into separate variables/constants?. Why do we add .h files here?. Why do we add .h files here?. Why do we need this?. Why do we need this?. Obviously, we would love to have first party support of Android TV in RN! Krzysztof, thank you so much for your effort! \u2764\ufe0f\nHowever, we discussed this approach internally at Facebook and we mostly concern about this place. Given that fact that Android TV is still pretty marginal platform, having AndroidTV-specific code in this base class looks... excessive. We are worried about performance and unpredictable/undesirable implications.\nIs there a way to restructure this somehow to remove explicit mentioning of TV from the most basic and important classes?. cc @mdvacca. Please follow existing code style guides.. Why should we have this condition?\nSeems we just have to have one single expression which ensure that offset inside allowed range.. I think we simply have to call [self dirtyLayout]; here.. I am sorry about being silent for the last couple of months, I am working hard on a different project, so I don't always have time to respond. I am really sorry.\nMy original concern relate to this code was: what does _previousAttributedText = _localAttributedText; actually mean? What is the \"physical meaning\" of this? What do we want to achieve by that? What is this correct? I am asking because those two variables mean totally different things, and I am not sure that we can assign one to another.\nI think, it's clear that we want to make affect this condition, right?\nI thought about this for a minute and my first idea was that we have to introduce another BOOL variable to handle that. But then I actually think that we can simply set this to nil as an indication that we need to proxy the new value to the view instance.\n- (void)setText:(NSString *)text\n{\n  _text = text;\n  // Some meaningful comment here.\n  _previousAttributedText = nil;\n  [self dirtyLayout];\n}. @magicien If you can confirm that _previousAttributedText = nil; works and update the diff, I would land this.. I am a bit concerned about this change because it relies on current implementation details of Yoga. Yoga is an independent library and its implementation can change any time. And, if we remove change, why should not we remove the next line that resets the flag?. I mean why not to fallback to copyAttributesFrom here, if we see that super.attributedText.string === attributedText?. I mean why not consolidate all attribute specific-logic in this class making attributedText and setAttributedText behave as we want?\nWe have to have two different underlying components because they simply behave differently. There is no way to configure UITextView behave exactly as UITextField.. I mean we have an original problem: When we call setAttributedText, marked fragment gets reset. So, let's add all checks that prevents that into both  RCTUITextField and RCTUITextView (iirc, now we have only one of them).. (Let's continue discussion here.)\nNow we are abstracted from anything else, so we can work on it. \ud83d\ude04 \nI think, it's great. \u2764\ufe0f \nNits:\n Instead of referring issues and commenting every single line, we have to leave one comment that describe a problem and (most importantly) the change in the behavior of the methods. That's more sustainable and easy to understand for people from the future which don't have a full context.\n Codestyle. (New line before { and spaces.)\nBtw, I don't think it's only fix for CJK problem. It's more wide problem which happens when we are replacing some attributed string with completely new one without paying attention to what attributes were added to the string by active text input. So, if we can preserve those attributes, I bet full replacing will work with CJK. (The current solution is good enough though.). (Let's continue discussion here.)\nNow we are abstracted from anything else, so we can work on it. \ud83d\ude04 \nI think, it's great. \u2764\ufe0f \nNits:\n Instead of referring issues and commenting every single line, we have to leave one comment that describe a problem and (most importantly) the change in the behavior of the methods. That's more sustainable and easy to understand for people from the future which don't have a full context.\n Codestyle. (New line before { and spaces.)\nBtw, I don't think it's only fix for CJK problem. It's more wide problem which happens when we are replacing some attributed string with completely new one without paying attention to what attributes were added to the string by active text input. So, if we can preserve those attributes, I bet full replacing will work with CJK. (The current solution is good enough though.). Probably we can simplify logic if parentTextAttributes always be non-null. So we can implement TextAttributes::defaultTextAttributes() (with default values, obviously) and pass into the function initially.\nI am not sure about this though. I am also curious how I did this in Fabric.. Probably we can simplify logic if parentTextAttributes always be non-null. So we can implement TextAttributes::defaultTextAttributes() (with default values, obviously) and pass into the function initially.\nI am not sure about this though. I am also curious how I did this in Fabric.. Can we move this to the top of the java class?. Can we move this to the top of the java class?. (This is great and should be enough for now, but... ) I believe this will not work in all cases.\nLet's imagine that the deeply nested view inside interleaving Text and View hierarchy was changed. This view is not virtual, so it will not call getParent().dirty(). As a result of calling dirty, Yoga will propagate the dirty flag to the closes root node, and that's it; the propagation will stop on the nearest inline View.\nTo fix this we have to additionally implement onDirty handler in Yoga that will dirty the semi-virtual (virtual outside, non-virtual inside) anchor View node (the inline view node) that will propagate this dirty call to ancestors until the first non-virtual one calls to Yoga again.. (This is great and should be enough for now, but... ) I believe this will not work in all cases.\nLet's imagine that the deeply nested view inside interleaving Text and View hierarchy was changed. This view is not virtual, so it will not call getParent().dirty(). As a result of calling dirty, Yoga will propagate the dirty flag to the closes root node, and that's it; the propagation will stop on the nearest inline View.\nTo fix this we have to additionally implement onDirty handler in Yoga that will dirty the semi-virtual (virtual outside, non-virtual inside) anchor View node (the inline view node) that will propagate this dirty call to ancestors until the first non-virtual one calls to Yoga again.. As I said previously, I don't think we need this line, but it certainly doesn't hurt.. As I said previously, I don't think we need this line, but it certainly doesn't hurt.. Here and everywhere with ShadowNodeFragment:\nI think if we should:\n * Rename ShadowNodeFragment::nullSharedProps() (and family) to ShadowNodeFragment::propsPlaceholder();\n * Introduce similar functions for the rest of members (tag and rootTag);\n * Feel free to rename rootTag to surfaceId.\nI believe if we go this way, we don't need comments in the code.\nSeems this is only data structure worth to improve this way, the rest is fine.. Here and everywhere with ShadowNodeFragment:\nI think if we should:\n * Rename ShadowNodeFragment::nullSharedProps() (and family) to ShadowNodeFragment::propsPlaceholder();\n * Introduce similar functions for the rest of members (tag and rootTag);\n * Feel free to rename rootTag to surfaceId.\nI believe if we go this way, we don't need comments in the code.\nSeems this is only data structure worth to improve this way, the rest is fine.. I don't think we need really this. Having this option introduces bigger diffs which complicates merges... and the real value of having things aligned is kinda debatable.\nThis is quite unpopular setting across FB monorepo, so... I would prefer not to enable this.. I don't think we need really this. Having this option introduces bigger diffs which complicates merges... and the real value of having things aligned is kinda debatable.\nThis is quite unpopular setting across FB monorepo, so... I would prefer not to enable this.. Are we sure that in this configuration clang-formant will pick up the style guide from the file in the root of the repo (not some default settings)?\nI suspect we should pass something like --file.. I am worried a bit about over-firing. So, e.g. if only text attributes were changed, we don't want to send an event.. I am worried a bit about over-firing. So, e.g. if only text attributes were changed, we don't want to send an event.. -> @\"%@-%@\"\nAnd we need to decouple that into dedicated function.. -> @\"%@-%@\"\nAnd we need to decouple that into dedicated function.. I am not sure that this part is correct (or optimal), but I trust you.. Could you please add a comment here describing why we need this and apply code style?. Could you please add a comment here describing why we need this and apply code style?. --root--. .get\b is an implementation detail, we have to use special conversion function from RCTConvertions.h`\b.. RN_FABRIC_ENABLED. RN_FABRIC_ENABLED. Do we really need those xcscheme files to be checked in?. Do we really need those xcscheme files to be checked in?. ",
    "raymondchooi": "Moved down to if mPagingEnabled is false as fling is not needed if paging is enabled. Separated as a few optimisations were added (same as changes in ReactHorizontalScrollView.java). Yes that's correct, the first part of fling is not used if paging is enabled and the second part is moved to handlePostTouchScrolling() to neaten and separate additions found in ReactHorizontalScrollView.java. Yes that's correct, this is the second part of fling() which handles post touch. As ReactHorizontalScrollView.java was added after ReactScrollView.java I thought it would be best to update the code to be similar to this. This section is exactly the same as in the horizontal scroll view (apart from some names). \nThe changes are (in order) \n- a quick exit (possible move to where handlePostTouchScrolling() is called)\n- check to make sure only one thread at a time\n- ReactScrollViewHelper.emitScrollMomentumBeginEvent(this) only runs if mSendMomentumEvents is true (and not || isScrollPerfLoggingEnabled() - is this for some kind of override calling fling? I'm not sure of the need for it). \n-  mFlinging is changed to mActivelyScrolling and checks/snapping to page added to runnable()\n- No enableFpsListener()? I've added where I think it should be (It seems to be missing in ReactHorizontalScrollView.java too)\nI'll try add a test plan soon.. Add enableFpsListener(), line 372? Seems to be missing in ReactHorizontalScrollView.java too.. ",
    "Jarred-Sumner": "\nmmediately\n\nShould probably be:\n\nimmediately. \n",
    "ndejesus1227": "@ericvicenti I just updated it with your data structure proposal. Lemme know if this works for you!. Oops! that's what I named the project with app.json, I should make that dynamic. Thank you. I'm sorry, remove what exactly? That console.log?. I don't see a typo? This uses sharp to spit out an image an image of the same width and height to whatever path it is on in the ICON_SIZES object. It works as expected. @jamesisaac doh! Thank you. I just fixed it!\n@ericvicenti is there anything I can do to make sure it passes the tests or is that all internal? The sharp dependency seems beyond my reach. ",
    "iboxgithub": "Done but Circle CI doesn't pass, don't know why... Can you take a look? (I just added \"on Linux\"...). ",
    "Maxwell2022": "The existing Podfile are extracted from projects NumberTileGame and swift-2048 which are not using react-native 0.42.0 so I didn't want to add confusion. That's why I added a new Podfile example block and added a Note to explain why.. done! So many commits for 4 new lines of documentation... \ud83d\ude44\ud83d\ude2c\ud83d\ude07. I'm confused, these methods are not exposed in the Linking library:\nLibraries/Linking/Linking.js:127. ",
    "mohammedsabi": "Updated & added pinned false. Thanks! @hramos . @hramos Unfortunately, there is not technical article as such. . ",
    "ayc1": "It doesn't look like you're using this class as a custom viewgroup (you're not doing anything with measure/layout/draw and RelativeLayout features are unused), but rather as a controller for the inner text view. Don't inherit from RelativeLayout here since it adds an unnecessary layer to the view hierarchy. It doesn't look like you're using this class as a custom viewgroup (you're not doing anything with measure/layout/draw and RelativeLayout features are unused), but rather as a controller for the inner text view. Don't inherit from RelativeLayout here since it adds an unnecessary layer to the view hierarchy. Instead of always having the dev loading view as a lingering GONE view, remove it from the view hierarchy when it's not in use. Instead of always having the dev loading view as a lingering GONE view, remove it from the view hierarchy when it's not in use. Do you need this flag? How about just checking the visibility/existence of mDevLoadingView to determine if it's visible?. Do you need this flag? How about just checking the visibility/existence of mDevLoadingView to determine if it's visible?. Can you wrap_content instead of hardcoding a height?. Can you wrap_content instead of hardcoding a height?. This RelativeLayout is unused. The height can be applied on the TextView. You can change this to a <merge>. This RelativeLayout is unused. The height can be applied on the TextView. You can change this to a <merge>. nit: return 0 if null. one issue with this approach is that getChildDrawingOrder needs to be implemented by each ViewGroup (ScrollView, ModalHostView, any custom ViewGroups) in order to support z index for that specific ViewGroup. \n\ncan you add a warning for usages of z index if the parent ViewGroup doesn't support z index? possibly by using an interface\ncan you extract the add, remove, child drawing order logic into a separate class to make it easier to reuse this logic across other ViewGroups if needed? a unit test for this new class would be useful as well. another option is to change the increment/decrement condition to ReactViewManager.getViewZIndex(view) != 0. use ViewGroupManager.getViewZIndex instead of ReactViewManager.getViewZIndex to fix dep issue. this is causing the clipped subviews tests to fail. is this intended?. this should be removeClippedSubviews={this.props.removeClippedSubviews} otherwise ScrollView will never remove clipped subviews. Have you tried using https://developer.android.com/reference/android/support/v4/view/ViewCompat.html#isAttachedToWindow(android.view.View) ?. Have you tried using https://developer.android.com/reference/android/support/v4/view/ViewCompat.html#isAttachedToWindow(android.view.View) ?. this creates a circular dependency \n\n//java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react:react -> //java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react/devsupport:devsupport -> //java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react:react\nmaybe you should leave the interface in react/devsupport?. this creates a circular dependency \n//java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react:react -> //java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react/devsupport:devsupport -> //java/com/facebook/catalyst/js/react-native-github/ReactAndroid/src/main/java/com/facebook/react:react\nmaybe you should leave the interface in react/devsupport?. ",
    "ocie": "There is no way to access the in app settings if the port is already in use. If you start a web server or some other server on port 8081 before launching the app, that should simulate the same situation. . There is no way to access the in app settings if the port is already in use. If you start a web server or some other server on port 8081 before launching the app, that should simulate the same situation. . If port 8081 is in use when you try to launch the app (for example, react-native run-ios), the app will fail to launch with the message \"Port 8081 already in use, packager is either not running or not running correctly\". Since the react-native app doesn't start on the emulator, there is no way to bring up the app settings menu. The app does appear to start with Android, so maybe this is just an issue that affects the iOS flavor.. If port 8081 is in use when you try to launch the app (for example, react-native run-ios), the app will fail to launch with the message \"Port 8081 already in use, packager is either not running or not running correctly\". Since the react-native app doesn't start on the emulator, there is no way to bring up the app settings menu. The app does appear to start with Android, so maybe this is just an issue that affects the iOS flavor.. In the iOS version, if I remove the build step to start the packager, react-native will start on the iOS emulator, but I see no way to change the port as I can when running on Android. That's why I suggested that the user simply edit all the source files to change 8081 to 8088 or some other port which is free if port 8081 can't be freed up.. In the iOS version, if I remove the build step to start the packager, react-native will start on the iOS emulator, but I see no way to change the port as I can when running on Android. That's why I suggested that the user simply edit all the source files to change 8081 to 8088 or some other port which is free if port 8081 can't be freed up.. ",
    "petterh": "Done.. I believe mHttpClient  can be converted into a local variable.. I believe mHttpClient  can be converted into a local variable.. Yes, you're right, of course. (I was looking at ReconnectingWebSocket which is quite similar -- but uses a boolean field mClosed to prevent connection if it's already connected.). Yes, you're right, of course. (I was looking at ReconnectingWebSocket which is quite similar -- but uses a boolean field mClosed to prevent connection if it's already connected.). ",
    "nicktate": "Have you cleared your cache on circle CI builds recently? After pulling in the latest set of commits, I started to get failures on the javascript flow tests related to that module being a duplicate. I wonder if circle CI is running with an older version of node modules for a certain dependency? If not, then it may be a difference in our docker environment which I can definitely dig into more.\nAlso, I will update this PR stripping out the ScrollView tests for instrumentation. I noticed they were removed from your circle CI test run suite.\n@ericvicenti . Have you cleared your cache on circle CI builds recently? After pulling in the latest set of commits, I started to get failures on the javascript flow tests related to that module being a duplicate. I wonder if circle CI is running with an older version of node modules for a certain dependency? If not, then it may be a difference in our docker environment which I can definitely dig into more.\nAlso, I will update this PR stripping out the ScrollView tests for instrumentation. I noticed they were removed from your circle CI test run suite.\n@ericvicenti . Thanks for the suggestion @janicduplessis. I will update, test locally and then submit the changes if it looks good.. Thanks for the suggestion @janicduplessis. I will update, test locally and then submit the changes if it looks good.. ",
    "raininfall": "Do you mean the com.facebook.react.bridge.SoftAssertions? I could not find  SoftAssertions in .common package.. ",
    "ferrannp": "I tried AsyncStorage without this permission and it works fine. I guess under the hood it uses SQLite from Android so it does not really need this permission.. ",
    "bvaughn": "Blah. Yeah, sorry. Multi-tasking fail. Will fix. :). Blah. Yeah, sorry. Multi-tasking fail. Will fix. :). Just copied above wording/formatting.. Just copied above wording/formatting.. Might be worth clarifying, \"in DEV mode\". Hmm...the prior check would handle the case where $DEV is undefined (eg react-native-xcode.sh) whereas the new check would handle $DEV being explicitly defined as false (eg $DEV=false react-native-xcode.sh). I wonder if we shouldn't actually be checking for $DEV != true? since that would handle both cases.. Hi! I'm only somewhat familiar with our event code. (I don't think anyone on the core team presently is deeply familiar with it, to be honest.)\nThe event params like target seem to be optional given the Flow typing and the fact that we fallback to undefined values.\nIf the 2 values are always the same (for Android too) then it seems silly to always pass them both and I could update the ReactNativeEventEmitter to just create this wrapper object (or not, if we determine it's not actually being used for anything).. FWIW it looks like the Java implementation doesn't necessarily pass a target but it does pass other attributes in some cases (eg on content size change). The Java interface also defines the map as a @Nullable type and in at least some cases explicitly passes null.. > I'm pretty sure we need to keep target in the event payload otherwise it would be a breaking change for apps that rely on this value. \nSure! To be clear: I wasn't suggesting we remove event.target on the JS side, just that we could remove the duplicate parameter and (on the RN JavaScript side) just always set target equal to the tag number.\nBut that's obviously kind of a polish detail and could be done, or not, at any time.. tiny nit: \",\" should be a \";\" I think. ",
    "ykzts": "Thank you review comment! It has changed. 99756a1b7a2c7f277e094a795e210af51128f171. ",
    "hoangpham95": "Sure. I'll add those changes.. ",
    "karanjthakkar": "productFlavor is not a compulsory field so it may or may not exist. In cases where it doesn't the path to the BuildConfig.java file will be malformed. Eg:  (app/build/generated/source/buildConfig//debug/com/example/BuildConfig.java). I think there should be a null check for separateBuild before you access [1] of it. Reason: I was integrating React Native in an existing project and by default it did not have this key in the build.gradle file, nor is it necessary. So it would keep throwing the wrong error because the code for getManifestFile is wrapped in a try catch. So the error that an end user actually gets is adb invocation failed. Do you have adb in your PATH?.. Also, if I dont have any flavors, then there is no right way to differentiate between whether the value in the variant flag is a flavor or a build type. I think a better way would be to add another flag or follow the implementation in #12820 . @Phredward This should be + '.' + mainActivity right? With the current implementation it breaks and searches for <packageName>NaN activity. cc: @ericvicenti. @Phredward Yeah. I saw that. I won't be able to make any changes to this PR. If you are unable to do it, I can do it in a separate PR but I would rather the authorship stay with you for working on this :). ",
    "Phredward": "Yup.  Thanks for catching that.  You can see that the other shell am start (with the hardcoded   '.MainActivity') gets it right.\nCan you make this fix, or should I do it?. ",
    "peterp": "As far as I know this should return a promise, but I'm not also 100% certain that jest.fn() isn't returning a promise. :). ",
    "ZauberNerd": "Good catch, thank you!\nFixed and rebased.. ",
    "willdurand": "Ah sure!. One question though, I looked at this definition to decide on the methods to mock, but you say I should only mock the native APIs. Should I completely omit the Geolocation JS class, and only mock the native methods? (then, I would have to mock getCurrentPosition() and stopObserving() on the LocationObserver too.. @javache Isn't LocationObserver the native module?. @javache alright, updated to only mock the LocationObserver :). ",
    "farazs": "we would need to be able to distinguish the two though. should we use all the same event code and just add an isSslError boolean to the event in onReceivedSslError?. ",
    "gengjiawen": "this need to be 25. also need to be 25. replace compile with implementation. This is useless.. @hramos done.. Maybe lock this version by remove ^ to keep it predictable.. Any special reason not put this deps in root package.json. With two ?: this looks a little confusing, maybe split it up. Are you revert to jobs if ndkJobs not defined ?. Remove android.useDeprecatedNdk=true in gradle.properties. Why not 26.0.3. I think add this dependency to template is unnecessary.. why touch this line ?. Why change this line ?. Looks like forget to change here.. Appveyor need to change to.. I mean windows ci need related change too.. I think maybe api is better.. https://github.com/facebook/react-native/blob/master/appveyor.yml, change ANDROID_BUILD_VERSION and ANDROID_TOOLS_VERSION is okay. I mean most of them, like okhttp, fresco, appcompat. And also the compile is still exist.. Maybe 3.1.4.. Nope, 3.1.4. It's out today.. If you change it to api or implementation, what's the error ?. Using implementation instead of api may break many things, since docs has show the usage too such as okhttp and fresco.. why 4.8 here ?. also use wrapper task to update, don't change gradle-wrapper.properties directly.. I think old-fashioned is good and more readable.. test framework don't need to expose.. Why not 4.17.10. Why yarn run flow is not enough ?. Maybe Just remove test task.. why ignore exitvalue ?. A java module won't need this.. maybe keep it simple, not introduce jsc in this pr.. If that's the case, you need to clean the old jsc and lock jsc version.. Don't delete this, it's used to upgrade gradle.. Same as above.. Any doc I can check on this deprecation ?. This is the thing I can think of.. Split maybe a good idea. We may have more usage for this if we move more component out.. Why not just use okhttp-tls.. Change this and rules to 1.1.0 ?\nhttps://developer.android.com/jetpack/androidx/releases/test. Why not inline warnOnce ?. redundant. The docker image already include yarn.. should we update template too ?. ",
    "jamesisaac": "@ndejesus1227 The closing parenthesis from toFile(path) is in the wrong place (I'm guessing you meant to pass in the error handler as 2nd argument).  Right now that comma is in the middle of nowhere and invalid JS syntax.. Good spot, thanks.  I don't know of any special falsey type in Flow, so have just gone with empty string.. ",
    "Feng999": "Good advice\uff01 Thank you.. Good advice\uff01 Thank you.. ",
    "jasonnoahchoi": "decided to leave in return YES to be distinctly clear that this class function is returning a BOOL. decided to leave in return YES to be distinctly clear that this class function is returning a BOOL. @javache k updated, had to add id class; at the top because unable to call self in c function. @javache k updated, had to add id class; at the top because unable to call self in c function. @javache thanks for the feedback. @javache thanks for the feedback. ",
    "gabrielbull": "How would you return NO? It needs to return NO, I tried first with your solution and it did not work. . This way the next responder could decide to have the copy item or not? Makes sense.. if there is a nextResponser, shouldn't it also be able to determine if it returns YES?. I think so, I will have to check on this tomorrow though.. ",
    "koenpunt": "I'm pretty sure this is the source. However I've seen the incorrect shortcut in a markdown file somewhere else too, so I will update it there also.. Oh well, turned out the other place that mentions the devtools already does this correctly:\nhttps://github.com/facebook/react-native/blob/master/docs/Debugging.md#chrome-developer-tools. I actually tried that in the app where I extracted this methods from, and that didn't went well.. That might of course have just been me. \nBut for one the status of the authorization is binary on Android, or at least with the currently available API:\njs\nconst permission = PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION;\nPermissionsAndroid.check(permission).then((granted) => {\n  if (granted) {\n    // ...\n  }\n});\nWhere on iOS there are a lot more values.\nAlso now that I think of it, I should probably also add getAuthorizationStatus to this PR. Edit: 02b198a. Well to be able to compare them to the value of the authorizationStatusChange. So something like this:\njs\nGeolocation.addEventListener('authorizationStatusChange', (status) => {\n  if (Geolocation.authorizedAlways === status) {\n    // ...\n  }\n  if (Geolocation.denied === status) {\n    // ...\n  }\n});\nOr am I missing something and can this be achieved in another way?. I indeed saw a comment of @grabbou on a different PR where he did put some remarks on the event-subscribing, but I figured that since on other places the addEventListener conversion is still being used I should follow that.\nTo make it compatible with other implementation throughout the source code I should probably also return { remove: () => null } for the warning case. . My previous comment was hidden under outdated changes, so here again:\n\nWell to be able to compare them to the value of the authorizationStatusChange. So something like this:\njs\nGeolocation.addEventListener('authorizationStatusChange', (status) => {\n  if (Geolocation.authorizedAlways === status) {\n    // ...\n  }\n  if (Geolocation.denied === status) {\n    // ...\n  }\n});\nOr am I missing something and can this be achieved in another way?\n. Yes and no, because the API for android will return false when the user was never prompted a request in the first place, whereas iOS then returns notDetermined. . However, on requesting permissions more details are revealed; \n``js\nconst permission = PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION;\nPermissionsAndroid.request(permission).then((result) => {\n  if (result === PermissionsAndroid.RESULTS.NEVER_ASK_AGAIN) {\n    //\n  }\n  if (result === PermissionsAndroid.RESULTS.DENIED) {\n    //\n  }\n  if (result === PermissionsAndroid.RESULTS.GRANTED) {\n    //\n  }\n});. Maybe we can add something [like this](https://github.com/facebook/react-native/blob/75123c614bb5a61c383cdc247230b3a76c76e14d/ReactAndroid/src/main/java/com/facebook/react/modules/permissions/PermissionsModule.java#L117-L124) to thecheckmethod, although this would be a breaking change on the API... Or maybe we can implement thegetAuthorizationStatusalso for Android, and leave thePermissionsAndroid.checkas-is?. Done. I kind of agree, wasn't really happy with it either, but couldn't really think of a better way.. So I'm open to suggestions :)\n  . Oh now that I look at it again I think I can simply move thebuildProjectcall into the first promise. Let me try\n  . I've moved the invocation ofbuildProjectinto the first promise. But now I wonder why it wasn't there in the first place... Another option would be to add theudidto the resolve call inbuildProject, but that doesn't feel right either..groupCollapsed` isn't there because the console object in the JSC is not the original console object. The original one is called after using a polyfill method;\nhttps://github.com/facebook/react-native/blob/3592122af3856ac58273dfeeeac59f6439fb93ef/Libraries/polyfills/console.js#L541-L549\n. ",
    "timbuckley": "Doesn't matter but the markdown syntax tag here should be sh or bash (or nothing at all), not js :-). Doesn't matter but the markdown syntax tag here should be sh or bash (or nothing at all), not js :-). ",
    "Minishlink": "Sure, done :). Thanks for the review, and sorry for the delay, I'll check this hopefully tomorrow night.. There are keys in the _renderHeader and _renderEmpty. Is this not sufficient?. Sure, done, should I rebase ?. ",
    "dobrienlzd": "@jpshelley I agree on the importance of Fragment support.  For example some components like ViewPager return Fragments for each view.  This is standard.   Btw, are there tests for the Fragment solution or do you have an example app that is using these modifications?. Sounds great! I am currently doing React Native component integration into Native app and would like to try it out when available.. ",
    "isilher": "Each of these coordinates needs to be multiplied by mScale to support high density screens:\n```\nrender() {\n    const linearGradient1 = new LinearGradient(['red', 'green', 'red'], 0, 0, 100, 0)\n    const linearGradient2 = new LinearGradient(['red', 'green', 'red'], 0, 0, 0, 200)\n    const linearGradient3 = new LinearGradient(['red', 'green', 'red'], 0, 0, 300, 300)\nreturn (\n  <View>\n    <Surface width={100} height={100}>\n      <Shape x={0} y={0} d=\"M10 10 H 90 V 90 H 10 L 10 10\" fill={linearGradient1} />\n    </Surface>\n    <Surface width={200} height={200}>\n      <Shape x={0} y={0} d=\"M10 10 H 190 V 190 H 10 L 10 10\" fill={linearGradient2} />\n    </Surface>\n            <Surface width={300} height={300}>\n      <Shape x={0} y={0} d=\"M10 10 H 290 V 290 H 10 L 10 10\" fill={linearGradient3} />\n    </Surface>\n  </View>\n)\n\n}\n```\nWithout mScale, comparing MotoG3 to iOS simulator\n\nWith mScale, comparing motoG3 to iOS simulator\n\n. Each of these coordinates needs to be multiplied by mScale to support high density screens:\n```\nrender() {\n    const linearGradient1 = new LinearGradient(['red', 'green', 'red'], 0, 0, 100, 0)\n    const linearGradient2 = new LinearGradient(['red', 'green', 'red'], 0, 0, 0, 200)\n    const linearGradient3 = new LinearGradient(['red', 'green', 'red'], 0, 0, 300, 300)\nreturn (\n  <View>\n    <Surface width={100} height={100}>\n      <Shape x={0} y={0} d=\"M10 10 H 90 V 90 H 10 L 10 10\" fill={linearGradient1} />\n    </Surface>\n    <Surface width={200} height={200}>\n      <Shape x={0} y={0} d=\"M10 10 H 190 V 190 H 10 L 10 10\" fill={linearGradient2} />\n    </Surface>\n            <Surface width={300} height={300}>\n      <Shape x={0} y={0} d=\"M10 10 H 290 V 290 H 10 L 10 10\" fill={linearGradient3} />\n    </Surface>\n  </View>\n)\n\n}\n```\nWithout mScale, comparing MotoG3 to iOS simulator\n\nWith mScale, comparing motoG3 to iOS simulator\n\n. ",
    "henrikra": "You can just use isNetworkAvailable(context) here and remove checkInternet method totally :). Maybe like this\n``\nconst getPackageNameWithSuffix = ({appId, appIdSuffix, packageName}) => {\n  if (appId) {\n    return appId;\n  }\n  else if (appIdSuffix) {\n    return${packageName}.${args.appIdSuffix}`;\n  }\nreturn packageName;\n}\n// calling\ngetPackageNameWithSuffix({appId, appIdSuffix, packageName})\n. Instead of comment I would do variable like \"Clean code\" book suggest:\nboolean isAnyEnterActionOtherThanNextOrPrevious = (\n  (actionId & EditorInfo.IME_MASK_ACTION) > 0 &&\n  actionId != EditorInfo.IME_ACTION_NEXT &&\n  actionId != EditorInfo.IME_ACTION_PREVIOUS\n) || actionId == EditorInfo.IME_NULL;\nif (isAnyEnterActionOtherThanNextOrPrevious) {\n // code\n}\n``. You should usemapinstead of forEach. Can you remove this emptyelse` block safely?. ",
    "pfulop": "Yes you are right. It's just some old leftover code I forgot to change. (originally the function did a bit more). Yes you are right. It's just some old leftover code I forgot to change. (originally the function did a bit more). ",
    "navneet-sandhu": "****.",
    "adambene": "Shouln't it be npm i -D ...?. Shouln't it be npm i -D ...?. ",
    "jeanlauliac": "Could you make it non-nullable instead? That's the new pattern we tend to stick with for new fields, by providing a default value that is an empty function in the defaultConfig object. You can take example on the way we added the new configuration function getSourceExts: https://github.com/eacaps/react-native/commit/4a86f93982ede66a993a72e31cadb85d9bd4b3a3\n(without going as far as to add it as a command line argument, that I don't think is necessary in that case). Could you make it non-nullable instead? That's the new pattern we tend to stick with for new fields, by providing a default value that is an empty function in the defaultConfig object. You can take example on the way we added the new configuration function getSourceExts: https://github.com/eacaps/react-native/commit/4a86f93982ede66a993a72e31cadb85d9bd4b3a3\n(without going as far as to add it as a command line argument, that I don't think is necessary in that case). See defaultConfig down that file.. See defaultConfig down that file.. How come Flow is complaining here? Doesn't that mean the project is still using the previous version of metro-bundler where it is still named TerminalClass? In which case we cannot switch it over just yet?. Normally we'd want to go through a reporter for any output, not print to the console directly. But I'm okay with shipping it like so and we can improve later :). Normally we'd want to go through a reporter for any output, not print to the console directly. But I'm okay with shipping it like so and we can improve later :). ",
    "teameh": "Haha now way... copied it from a snippet from https://github.com/facebook/react-native/issues/12163 and did not pay attention. Fixed. . Does objectivec{9,17,31-48} creates a highlight for the ReactNative docs as well? . Removed typehint (since none of the other code is using it). And removed the ugly .bind(this). Not sure if this is okay in the sample code, please review. . ",
    "jordanpapaleo": "hi - it was  more that when you look at this function, the params were ..args array of anything.  My goal was to make this method signature clear and concise.. It also seemed good update/fix the args closer to the source of the incorrect args being set. . @chirag04 Let me know if you think this PR is not helpful and I will close it.  Again my goal was making it easier for developers to read the source :). Navigation iOS page no longer exists. I updated the docs to use the correct page. Not sure what you are asking. . Navigation iOS page no longer exists. I updated the docs to use the correct page. Not sure what you are asking. . ",
    "amilcar-andrade": "You can add the  @Nullable annotation just like List<NetworkInterceptorCreator>. You could update the {@link } to point to the OkHttpClientProvider . Also, probably you should just call it provider . You could use the {@link} annotation for the java docs. Same comment about the {@link} annotation. I also dont think that the sentence This will be very useful is needed. . nit remote. Same comment than before you can just call it provider. nit @param context the {@link ReactApplicationContext} of the application. nit extra space httpClientProvider  {. ",
    "chnfeeeeeef": "[Thread is initialized by the Runnable parameter in the previous code to ensure the Looper is ready when Thread is created]\nWe can use the thread lock way to solve this problem,I added the MessageQueueHandlerThread class. MessageQueueThreadImpl initialization, call MessageQueueHandlerThread class getLooper method, getLooper method will block the current thread until the thread is created, so more timely and effective. [Thread is initialized by the Runnable parameter in the previous code to ensure the Looper is ready when Thread is created]\nWe can use the thread lock way to solve this problem,I added the MessageQueueHandlerThread class. MessageQueueThreadImpl initialization, call MessageQueueHandlerThread class getLooper method, getLooper method will block the current thread until the thread is created, so more timely and effective. return new MessageQueueThreadImpl(name, messageQueueHandlerThread.getLooper(), exceptionHandler);\nThe above code can replace the deleted code to ensure that a return with a secure Looper MessageQueueThreadImpl\nMessageQueueThreadRegistry class looks like unused.. return new MessageQueueThreadImpl(name, messageQueueHandlerThread.getLooper(), exceptionHandler);\nThe above code can replace the deleted code to ensure that a return with a secure Looper MessageQueueThreadImpl\nMessageQueueThreadRegistry class looks like unused.. final SimpleSettableFuture<Looper> looperFuture = new SimpleSettableFuture<>();\nfinal SimpleSettableFuture<MessageQueueThread> mqtFuture = new SimpleSettableFuture<>();\nDoing so for additional performance overhead.. final SimpleSettableFuture<Looper> looperFuture = new SimpleSettableFuture<>();\nfinal SimpleSettableFuture<MessageQueueThread> mqtFuture = new SimpleSettableFuture<>();\nDoing so for additional performance overhead.. Sorry for that ,onLooperPrepared is Unused.. Sorry for that ,onLooperPrepared is Unused.. Should I removeonLooperPrepared method ,add Process.setThreadPriority(Process.THREAD_PRIORITY_DISPLAY)code  to MessageQueueHandlerThread and pull request again?. Should I removeonLooperPrepared method ,add Process.setThreadPriority(Process.THREAD_PRIORITY_DISPLAY)code  to MessageQueueHandlerThread and pull request again?. I have removed unused onLooperPrepared method,added Process.setThreadPriority(Process.THREAD_PRIORITY_DISPLAY) code into MessageQueueHandlerThread and updated the code.. I have removed unused onLooperPrepared method,added Process.setThreadPriority(Process.THREAD_PRIORITY_DISPLAY) code into MessageQueueHandlerThread and updated the code.. ",
    "thotegowda": "I haven't looked in to the details of how Fresco is using this client. But I guess, Fresco might need its own customised client configuration. \nFor now, I will add a comment in MainPackageConfig. Will take a look at this later.  Would be great if someone with Fresco context can share some light. . ",
    "hey99xx": "ReadableMap.toMap sounds a bit strange though, simply because ReadableMap is also a Map, albeit not a regular Java one. I agree with @dcestari that this makes more sense as HashMap.\nIf both parties agree, I would suggest\nList toList\nMap toJavaMap\nThis would probably deal with the confusion.. What's the point of keeping this activity with no subclassed methods of ReactActivity? Looks like it could be removed now.. not deleting this line ( import java.nio.charset.StandardCharsets )? it won't crash but still incorrect to import it, may be accidentaly used again in the future. Should clean the block below \"Patch for folly build break on gcc 4.9 and could be removed after build by clang\"\n. By clearing old JSC is there anything else except 64-bit libicu_common.so and libjsc.so files checked into this package?. Any chance for NPE if contentMediaType is null?\nCharset charset = contentMediaType == null\n    ? StandardCharsets.UTF_8\n    : contentMediaType.charset(StandardCharsets.UTF_8);. Instead of duplicating the method above will minimal change, why not call apply(paint, style, weight, family, context.getAssets());. \nI know you deprecated the method above, but until you can get rid of CustomStyleSpan(..., AssetManager) constructor I think it's a more concise solution.. I don't know if the first priority should go to mFontCache (which has advantage of it can be changed programmatically) or to the static assets.\nAlso for static assets, I'd guess both getIdentifier and Typeface.create call can be slow, that's why there are caches in the first place. If you have 100s of textviews, you probably don't want to redo these computations that never change.\nResourcesCompat.getFont is documented as a blocking call. I don't know if that means it blocks for network or something else, but keep that in mind too. I don't have too much knowledge about the new font system, this is just looking up to javadoc, but I don't know if this would then work for downloadable fonts.. Ah nevermind. Then you would call old ReactFontManager.getTypeface method again. Still, there might be a prettier way to refactor this. For example you can have a single method that takes both args:\n```java\nprivate static void apply(\n    Paint paint,\n    int style,\n    int weight,\n    @Nullable String family,\n    Context context, \n    AssetManager assets) {\n// ...\n\nif (family != null) {\n    ReactFontManager fontManager = ReactFontManager.getInstance();\n    typeface = context != null \n          ? fontManager.getTypeface(family, want, context) \n          : fontManager.getTypeface(family, want, assets);\n} else if (typeface != null) {\n\n```\n    . ",
    "hnryjms": "Could you send me a link to a code style spec document? I had been assuming that npm run lint and @eslint-bot had been the declarative code style requirements. If not, a link would be helpful both now, and committed in the CONTRIBUTING.md file.. Could you send me a link to a code style spec document? I had been assuming that npm run lint and @eslint-bot had been the declarative code style requirements. If not, a link would be helpful both now, and committed in the CONTRIBUTING.md file.. That's ObjC, man \ud83d\ude36. That's ObjC, man \ud83d\ude36. Seems to me that throughout the code, using warning(false, ...) is preferable. See links below:\nhttps://github.com/facebook/react-native/blob/e13b9c6e49480e8262df06b7c1e99caab74e801f/Libraries/Components/TextInput/TextInput.js#L644\nhttps://github.com/facebook/react-native/blob/5257c35d05578bab0233254da81f1216f461f18d/Libraries/Utilities/BackAndroid.js#L35\nhttps://github.com/facebook/react-native/blob/9b4a644fec94422c2976f11be0ccf66f2715d9bd/Libraries/Network/XMLHttpRequest.js#L185. Seems to me that throughout the code, using warning(false, ...) is preferable. See links below:\nhttps://github.com/facebook/react-native/blob/e13b9c6e49480e8262df06b7c1e99caab74e801f/Libraries/Components/TextInput/TextInput.js#L644\nhttps://github.com/facebook/react-native/blob/5257c35d05578bab0233254da81f1216f461f18d/Libraries/Utilities/BackAndroid.js#L35\nhttps://github.com/facebook/react-native/blob/9b4a644fec94422c2976f11be0ccf66f2715d9bd/Libraries/Network/XMLHttpRequest.js#L185. Generally ObjC prefers using bracket syntax for synthesized getters, or dot syntax for property reference directly. This is the most common practice, so I am going to leave it as is.. Generally ObjC prefers using bracket syntax for synthesized getters, or dot syntax for property reference directly. This is the most common practice, so I am going to leave it as is.. Weird...your change recommended earlier shouldn't have affected CI systems....but it must have messed up the internal Facebook tools (which I don't know).... Guess I was lucky \ud83e\udd37\u200d\u2642\ufe0f . Weird...your change recommended earlier shouldn't have affected CI systems....but it must have messed up the internal Facebook tools (which I don't know).... Guess I was lucky \ud83e\udd37\u200d\u2642\ufe0f . ",
    "G2Jose": "Done, thank you!. ",
    "SuhanKoh": "Did you mean ACCESS_FINE_LOCATION?. ",
    "TikiTDO": "Er, yeah, that's correct. Sorry, I haven't had any time to look into this at all the past few weeks.. Er, yeah, that's correct. Sorry, I haven't had any time to look into this at all the past few weeks.. ",
    "dejakob": "Sure. ",
    "DukeNukem1990": "This StackOverflow page  and several others suggest that there is indeed no way on Android to do this.. keyboardWillShow and keyboardWillHide are not available on Android. There is just no event for that. (As of now, might of course change in the future (hopefully)).. Is there anything more you like to know?. ",
    "JonnyBurger": "PropTypes is also used in the file.\nThis would be possible:\njs\nconst PropTypes = require('React');\nconst {checkPropTypes} = PropTypes;. ",
    "tabrindle": "Can do - also this may depend on https://github.com/facebook/react-native/pull/14428\nWe may want to wait until this one is finished. . Can do - also this may depend on https://github.com/facebook/react-native/pull/14428\nWe may want to wait until this one is finished. . Added yarn next to npm, gave node its own line. Also reordered and added hint about react-native info to coincide with https://github.com/facebook/react-native/pull/14428. Added yarn next to npm, gave node its own line. Also reordered and added hint about react-native info to coincide with https://github.com/facebook/react-native/pull/14428. Crap.. Crap.. Good point- was just a relic of debug code. Will remove. . Good point- was just a relic of debug code. Will remove. . Normally I agree, but I was hoping to avoid running the synchronous xcprettyAvailable function if I could avoid it when verbose is enabled. I can flatten this out if this is not considered an issue. \nI suppose I could just declare the the let outside the block. Feels less clean to me, but whatever you want! \ud83d\udc4d . Normally I agree, but I was hoping to avoid running the synchronous xcprettyAvailable function if I could avoid it when verbose is enabled. I can flatten this out if this is not considered an issue. \nI suppose I could just declare the the let outside the block. Feels less clean to me, but whatever you want! \ud83d\udc4d . Done. \n. Done. \n. Done. . Done. . It is to store a reference to the spawned child process to pipe the console output to. Needs to be declared at the same scope as the xcpretty variable to be accessible in subsequent blocks. . It is to store a reference to the spawned child process to pipe the console output to. Needs to be declared at the same scope as the xcpretty variable to be accessible in subsequent blocks. . xcpretty is simply a boolean to show that it is available. Could possibly be renamed to be more specific if that is a point of confusion. \nOne can only start the process if it is available. A couple other switches depend on it as well. . xcpretty is simply a boolean to show that it is available. Could possibly be renamed to be more specific if that is a point of confusion. \nOne can only start the process if it is available. A couple other switches depend on it as well. . Essentially I don't want a variable to possibly Have different types based on state. Variables are cheap, and I believe this makes it more clear. . Essentially I don't want a variable to possibly Have different types based on state. Variables are cheap, and I believe this makes it more clear. . @eslint-bot Idk what you're smoking. . Sounds good to me. Will update. . I think we will require them in the PR template, but opt out of adding them to the final notes via keyword as discussed below. That ok?. ",
    "andrewlinfoot": "That link currently 404s. I can find an updated link for the defaults and add that too. ",
    "navratill": "It was crashing cocoapods build, because only module visible is . \nAlso it is local dependency and it should be imported like that. The best solution would be completely get rid of this import and replace it by forward declaration of RCTValueAnimatedNodeObserver (which is actually need it in this file). Should I do it?. @protocol RCTValueAnimatedNodeObserver;. ",
    "zoontek": "This has been fixed here: https://github.com/facebook/react-native/pull/14568/commits/b6e8b91fb5efd18a4789751a8687985fe2d375ad#diff-0468751a1a9708b31a37cde71e096450R20. This has been fixed here: https://github.com/facebook/react-native/pull/14568/commits/b6e8b91fb5efd18a4789751a8687985fe2d375ad#diff-0468751a1a9708b31a37cde71e096450R20. ",
    "blankg": "This property is added by the iOS native code for remote notification (handleRemoteNotificationReceived) and the PushNotificationIOS constructor looks for it otherwise it will not look for the aps object.. yes, it can be 1 or null/undefined so this is why it is optional. I aligned _contentAvailable member with the other private members in this class which add the optional flag only in the getter.. will fix. Create a ContentAvailable type which is already optional. ",
    "pvinis": "whats different than before? we are not configuring anything here, im just setting some defaults so the lines appear.. whats different than before? we are not configuring anything here, im just setting some defaults so the lines appear.. since you are here, could you throw a comma at the end of this? :). since you are here, could you throw a comma at the end of this? :). ",
    "joshjhargreaves": "'totally n00b in Android': that makes two of us then ;). Thank-you yes, good point!. Thank you, very good point!. Thanks!. Sounds like a more sensible name, thank you :P. . Thanks, with your suggested changes, @Nullable no longer necessary!. Good spot, thanks. . Thank you!. Unless there's any styling rule requirement, moving of the imports is unnecessary. \n  . ",
    "kevinluvian": "Hi shergin, thanks for the review.\nas far as I know, the code should work just like you said:\nblurOnSubmit && isMultiline => generate submit event; blur; return true;\n!blurOnSubmit && isMultiline => return false; // Perform default behaviour.\nblurOnSubmit && !isMultiline => generate submit event; blur; return true;\n!blurOnSubmit && !isMultiline => return true; // Shallow <Enter>.\ncould you please elaborate more where the logic is wrong?\nbut I must admit that it is not very clear, I will try to rewrite the whole function with local variables\nThanks!. ah, I think I found what you mean..\n\n!blurOnSubmit && isMultiline => return false; // Perform default behaviour.\n!blurOnSubmit && !isMultiline => return true; // Shallow .\n\nshould not generate submit event, right? I will fix them asap. yeah, I think so, I'll add it now. Hi @shergin, is this the correct way to exclude it?. sorry I don't know android very much. I see, I think that's better, thanks!. ",
    "etripier": "I think this block should be closed much further down - removing this line fixed issues with the method definitions below.. ",
    "patw0929": "Sorry, updated at https://github.com/facebook/react-native/pull/14884/commits/010963527ca5caa964e4af289f021c37cb99d998.\nThanks again!. ",
    "Guichaguri": "@javache The reason why I use ArrayList is because it is Serializable while a List isn't, because of that, I can use it in toBundle with Bundle.putSerializable.\nDo you think it's better to return List and then cast it in toBundle?. ",
    "newyankeecodeshop": "I considered that, but I am not that familiar with this code and its history. I'm not sure if there is other code and/or libraries relying on mTargetCoordinates being fixed during a touch. I generally agree that it would make sense to update the coordinates on move and up too. Let me know if I should make that change.. Can you also remove regenerator-runtime from the dependencies in package.json?. ",
    "kipricker": "[[UIApplication sharedApplication] keyWindow].bounds is better, I can change that.\nOur app is pure RN. The two best ways I could find for getting alerted to a UIWindow size change are either using the UIContentContainer protocol method viewWillTransitionToSize or catch the change using UIViews layoutSubviews. Since there is no RN view controller class I opted to report the size change from layoutSubviews. So, setAvailableSize seemed like the most appropriate place to add the RCTUIManagerDidUpdateAvailableSizeNotification post to update us on a size change.. ",
    "bartolkaruza": "This is the exact value that comes through if you pass a {perspective: 1280} value in the transform array on the JS side. When omitting a perspective transform, the value is 0. With this change, the value is forced from 0 to the default 1280 value, forcing the . setCameraDistance call.\nNot calling .setCameraDistance is causing the rendering issue, which is caused by a 0 invertedCameraDistance.. This is the exact value that comes through if you pass a {perspective: 1280} value in the transform array on the JS side. When omitting a perspective transform, the value is 0. With this change, the value is forced from 0 to the default 1280 value, forcing the . setCameraDistance call.\nNot calling .setCameraDistance is causing the rendering issue, which is caused by a 0 invertedCameraDistance.. 0 is the value when no perspective transform is passed in the array in javascript. The deleted line if (invertedCameraDistance < 0) { was preventing that case from causing a division by 0 and a crash, but it was also preventing a call to .setCameraDistance which is causing the rendering issues. This change affects the 0 case, by forcing it to a sensible default other than 0.. 0 is the value when no perspective transform is passed in the array in javascript. The deleted line if (invertedCameraDistance < 0) { was preventing that case from causing a division by 0 and a crash, but it was also preventing a call to .setCameraDistance which is causing the rendering issues. This change affects the 0 case, by forcing it to a sensible default other than 0.. @dickie81 Thank you for looking out, I did not check the full range of test cases on the actual UI when changing the style back to the original style, leaning on the unit tests instead. I'll try out your approach against the cases I have locally for all the lineHeight scenario's and post the test setup so everyone can verify.. @dickie81 Thank you for looking out, I did not check the full range of test cases on the actual UI when changing the style back to the original style, leaning on the unit tests instead. I'll try out your approach against the cases I have locally for all the lineHeight scenario's and post the test setup so everyone can verify.. @dickie81 I've been testing the ui effects and there is definitely a regression in the case of bigger lineHeight and even with very small lineHeight something broke. \nUnfortunately your proposed solution still causes cut-off at the bottom, when the lineHeight is small.\n@andreicoman11 I'm looking into this more in depth, this PR is not ready yet as it stands now. I'll try to improve it to cover all scenario's.\nHere is the testing setup that you can use to verify on your end: https://gist.github.com/bartolkaruza/b74f228636bb78fea00aa8bd82e3766d\nAnd these are the 4 different implementations compared to iOS. Not one is quite right yet.\nCurrent PR state after review changes:\n\nOriginal implementation before PR:\n\nImplementation before review changes:\n\nProposed change by @dickie81 :\n\n. @dickie81 I've been testing the ui effects and there is definitely a regression in the case of bigger lineHeight and even with very small lineHeight something broke. \nUnfortunately your proposed solution still causes cut-off at the bottom, when the lineHeight is small.\n@andreicoman11 I'm looking into this more in depth, this PR is not ready yet as it stands now. I'll try to improve it to cover all scenario's.\nHere is the testing setup that you can use to verify on your end: https://gist.github.com/bartolkaruza/b74f228636bb78fea00aa8bd82e3766d\nAnd these are the 4 different implementations compared to iOS. Not one is quite right yet.\nCurrent PR state after review changes:\n\nOriginal implementation before PR:\n\nImplementation before review changes:\n\nProposed change by @dickie81 :\n\n. Hi, for us it has solved the problems in the design completely, but I see that there is still something wrong for your design case. Maybe you can open up a new issue for this and see if you can get the attention of other developers, linking to these issues, to get your specific case fixed. Even better to open a new issue, with a PR that fixes it.. ",
    "atsjenk": "I see. Yes that seems to be the pattern. I'll fix that.\nIndentation for the if condition did not match the current style either as per line 147.. ",
    "matejkriz": "Today Widget is not the only app extension on iOS. For example Share extension is already implemented by @andrewsardone : https://github.com/andrewsardone/react-native-ios-share-extension. What about \"Today Widget\" title? It's not about other app extensions.. ",
    "piotrek1543": "I think that braces here are useless and you may remove them. \nAlso could you add this as link to this blog post: \nhttps://facebook.github.io/react-native/blog/2017/02/14/using-native-driver-for-animated.html? \nas it clearly explains why 'unless you set useNativeDriver: true' :-). You missed 44 line. There also you should fix a path to gradle.properties. change to media. Medias is a wrong phrase.. Change to GetMediaTask. I'm pretty sure that one medium, multiple medias. Check: https://english.stackexchange.com/questions/314099/should-i-use-media-or-medias. ",
    "simonayzman": "Very true. I figured that making a bold statement like \"It doesn't work\" would get enough disagreement for it become more refined \ud83d\ude06 . Will probably just change to this! That way I don't have to talk about other app extensions, which I haven't really tried out. Added intro and capitalized Today (mirroring Apple's docs).. ",
    "Adlai-Holler": "I added this line because it seems to have been missing from previous implementation. The pattern of \"read cancel block into local variable, erase the __block variable, run the local variable\" was copied from line 400 but it was missing this line, which defeats the purpose.. I added this line because it seems to have been missing from previous implementation. The pattern of \"read cancel block into local variable, erase the __block variable, run the local variable\" was copied from line 400 but it was missing this line, which defeats the purpose.. I took this out because it looks like it was there by mistake. The stroke color gets overwritten two lines down, before the next draw operation.. I took this out because it looks like it was there by mistake. The stroke color gets overwritten two lines down, before the next draw operation.. You could use NSData here, and it would actually be slightly faster since the isEqual: wouldn't have to check the underlying type. But it also means another heap allocation \u2013 NSValue stores the data on the object itself instead of pointing into the heap. Plus it just feels more purpose-built.. You could use NSData here, and it would actually be slightly faster since the isEqual: wouldn't have to check the underlying type. But it also means another heap allocation \u2013 NSValue stores the data on the object itself instead of pointing into the heap. Plus it just feels more purpose-built.. It's inexpensive, almost never showed up at 1ms sampling on my iPhone 6 so I'd stick with the CGColor.. It's inexpensive, almost never showed up at 1ms sampling on my iPhone 6 so I'd stick with the CGColor.. Yep we can, I initially chose not to for the sake of visual cleanliness but thanks for the feedback, safety is king. Ill drop it in later today.. Yep we can, I initially chose not to for the sake of visual cleanliness but thanks for the feedback, safety is king. Ill drop it in later today.. Hmm constexpr isn't available except in C++. We can make this RCTProfile.mm but that's a bigger change and we'll lose a tiny bit of efficiency (due to ARC exception safety). What do?. Hmm constexpr isn't available except in C++. We can make this RCTProfile.mm but that's a bigger change and we'll lose a tiny bit of efficiency (due to ARC exception safety). What do?. Hmm turns out we can't use constexpr because it implies const and we need to mutate this value.. Hmm turns out we can't use constexpr because it implies const and we need to mutate this value.. The changes in this file are to address an implicit loss of precision warning. I figured the best way was to make the loss of info explicit and standardize on NSUInteger as quickly as possible.. ",
    "fson": "There are multiple Buck installation links in the docs and they all point to https://buckbuild.com/setup/install.html. Maybe it's easier to make sure the link doesn't break in the future, if they're all the same? We could also change them all to https://buckbuild.com/setup/getting_started.html, which is the URL /setup/install.html currently redirects to, but I'm not sure if that's worth the trouble?. But this is singlequote?. But this is singlequote?. ",
    "dantman": "I used forEach and unshift to skip the extra step of reversing the array.. I used forEach and unshift to skip the extra step of reversing the array.. KitKat also has a android.provider.DocumentsContract.Document.COLUMN_MIME_TYPE.. KitKat also has a android.provider.DocumentsContract.Document.COLUMN_MIME_TYPE.. Whoops, did a blind copy from RNTesterList.android since the example works the exact same on both platform. Didn't notice the ios specific property.\nFixed.. Whoops, did a blind copy from RNTesterList.android since the example works the exact same on both platform. Didn't notice the ios specific property.\nFixed.. This is an error check of the arguments to make sure they actually follow the flow spec that makes this supposedly \"unreachable\".\nDo I have to do something to avoid this incorrect warning?. This is an error check of the arguments to make sure they actually follow the flow spec that makes this supposedly \"unreachable\".\nDo I have to do something to avoid this incorrect warning?. Sounds reasonable, but it'll probably be a long one since it's used in a lot of things and it's not a simple transition because a lot of people do the really bad thing of hardcoding the currentHeight value in a constant, which means it's a tougher transition to using something non-constant.. iPhone X, 44px status bar that is always 44px in portrait mode.\nIn-Call Status bar, dynamic status bar that is 40px in portrait mode on non-iPhone X phones. However the app's root view is pushed down 20px when it expands, so navigators still only have 20px of overlap they need to compensate for.. Good idea.. We can't subtract the y offset of the root view in the willChange event so we can't calculate the height of the portion of the status bar people actually care about from within that event.. I had issues with iOS deciding to return 0 instead of a proper value sometimes for the y/height, even notification didn't always behave right IIRC.. Do you know of a more reliable way to get the y-offset of the app? We can't rely purely on the statusBarFrame's height because iOS reports 40px for the In-Call Status bar, but if navigators use that value then it'll get pushed down 20px more than it should.. Shame, StatusBar.js had a similar type of comment in it.. This is how NetInfo, AppState, and most of the classes that have events do it, so I just copied that. What is the best practice for new classes with events?. What is the preferred way to deprecate a property in RN?. This is the source of the StatusBar.currentHeight property. All I've done for Android is move most of the code in getConstants to a common method that is used by both getConstants so the old currentHeight still works till we drop it. And the new cross-platform getHeight.. ",
    "octopitus": "It will not work if legacyImplementation prop is true, because VirtualizedSectionList doesn't have setNativeProps.. It will not work if legacyImplementation prop is true, because VirtualizedSectionList doesn't have setNativeProps.. Should I add setNativeProps method to VirtualizedSectionList?. Should I add setNativeProps method to VirtualizedSectionList?. ",
    "mbarbon": "Fixed the missing semicolons.. Fixed the missing semicolons.. Fixed the missing semicolons.. ",
    "TheSavior": "How about this? Also, can we split the comment into multiple lines?\n\nThank you for your contribution. Unfortunately, this pull request seems relatively large. \nIn order to reduce the load on maintainers, it would be valuable if you could split this into small, targeted PRs that changed one thing at a time. \nIf doing this requires more than a few pull requests, please open (or update) an issue specifying your goal and the different steps you will take in your PRs. This will ensure maintainers have context on the relationship between the PRs.\nWe have added the tag large-pr and closed this task. If this is a codemod or other formatting change that is simple but inherently touches many files, please comment on this and let us know and we will reopen the PR.\n. It may also be worth linking to something about how and why this is valuable.\n\nA quick google search brought up a post that @breerly wrote that looks good. https://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/. It seems like this is only for really old versions of IE, do we need this?. From my small experimenting in the chrome console, it seems like your media query addition is the only part of the PR needed to fix the previous/next button of the docs. Why do we need this display: table stuff?. From looking through the rest of this file it looks like we prefer having the ending curly on the previous line. From looking through the rest of this file it looks like we prefer having the ending curly on the previous line. Should this be applying to all buttons on small screens or should this rule be .btn.docs-prev, .btn.docs-next? I haven't checked this PR locally to verify buttons across the site look fine on small screens.\nAlso, you add margin-bottom in this rule for the stacked buttons, do we need your addition of margin-bottom (of a different amount) for .buttons-unit .button above?. Should this be applying to all buttons on small screens or should this rule be .btn.docs-prev, .btn.docs-next? I haven't checked this PR locally to verify buttons across the site look fine on small screens.\nAlso, you add margin-bottom in this rule for the stacked buttons, do we need your addition of margin-bottom (of a different amount) for .buttons-unit .button above?. In terms of specificity, this might be fine, I just have less confidence in this css change than I would if it was limited to just the buttons we are trying to fix rather than all buttons on small screens.\nMy question about the bottom margin is that if we are just trying to fix these for small screens, do we really need to be modifying things for large screens too? . In terms of specificity, this might be fine, I just have less confidence in this css change than I would if it was limited to just the buttons we are trying to fix rather than all buttons on small screens.\nMy question about the bottom margin is that if we are just trying to fix these for small screens, do we really need to be modifying things for large screens too? . These are a bummer. This should probably be React.Node. This file will get pulled in internally because react-native-github/flow is a lib dir for our xplat .flowconfig at facebook, right? Will this cause a problem?. This file will get pulled in internally because react-native-github/flow is a lib dir for our xplat .flowconfig at facebook, right? Will this cause a problem?. Do you want to ignore metro from this file too?. Do you want to ignore metro from this file too?. Based on other callsites in this repo, is this supposed to be fbjs/lib/invariant? https://github.com/facebook/react-native/search?utf8=%E2%9C%93&q=invariant&type=. Based on other callsites in this repo, is this supposed to be fbjs/lib/invariant? https://github.com/facebook/react-native/search?utf8=%E2%9C%93&q=invariant&type=. How about WebSocketModule.close.length === 3?. How about WebSocketModule.close.length === 3?. You don't need the + since the whole object is wrapped with $ReadOnly.. This needs to be kept in sync with the .flowconfig.android file and will fail to land if they are not in sync.. Can you add more context here? Maybe include a comment at the top of the Babel.config.js?\nWhat needs it and what needs to not use it?\nFrom your comment I couldn\u2019t tell which thing you are saying jest needs.. Can you make this $ReadOnly and exact as well?\ntype Props = $ReadOnly<{||}>;. Does this need to be exported?. \ud83d\udc4d . Should this be React.Element or React.Node? I'm not sure what this function can return. It probably is a React.Element. \ud83d\udc4d . Does this need to be exported? We try not to export a bunch of things, only the things that are actually necessary or expected to be used by other files.. While typing this component, can you clean up these FlowFixMes as well, as best as possible. This one for example is because children isn't defined in the props: children: React.Node. Why this change?. Can we do better than this?. Could also use template literal. <3. Lets not export these. We prefer $ReadOnlyArray. $ReadOnlyArray, missing the $. This diff fails to land internally because of callsites that pass null to onRequestClose. We typically like to make optional arguments nullable to enable spreading props and other things to work. Can you update this type and the others in this diff that are optional to also be nullable?\nonRequestClose?: ?(event?: SyntheticEvent<null>) => mixed,. React.Node includes null\nchildren?: React.Node. React.Node includes null\nchildren?: React.Node. Same here. Same here. I think I'd prefer if you just named these types Props. I believe that is consistent with all the other files. I think I'd prefer if you just named these types Props. I believe that is consistent with all the other files. When there are a bunch of Props that are supported on different platforms, I like doing this pattern:\n```\ntype AndroidProps = //\ntype IOSProps = //\ntype Props = $ReadOnly<{|\n  ...IOSProps,\n  ...AndroidProps,\n  // shared props\n|}>\n```. When there are a bunch of Props that are supported on different platforms, I like doing this pattern:\n```\ntype AndroidProps = //\ntype IOSProps = //\ntype Props = $ReadOnly<{|\n  ...IOSProps,\n  ...AndroidProps,\n  // shared props\n|}>\n``. \ud83d\ude09 \u2764\ufe0f . Is this always set? Like, does View'sonLayout` callback include touchHistory?. Looks like this is where it is set: https://github.com/facebook/react-native/blob/5491c3f942430982ce9cb6140ed1733879ed3d1d/Libraries/Renderer/oss/ReactNativeRenderer-dev.js#L1629-L1638. Want to add a matching ResponderSyntheticEvent to CoreEventTypes?\n``\nexport type ResponderSyntheticEvent<T> = $ReadOnly<{|\n  ...SyntheticEvent<T>\n  // touchHistory...\n|}>. If you type this as returning a boolean I think you'll find that the flow type foronStartShouldSetPanResponder` is not correct.\nSame with onStartShouldSetResponderCapture and onResponderTerminationRequest. Can you change this too to:\n/* eslint-disable no-bitwise */\n// code\n/* eslint-enable no-bitwise */. \u2764\ufe0f . Woah! We weren't checking this!? Scary!. I think the second command overwrites the first. Looking at the CI logs for this step in this PR show that it only ran flow on android: https://circleci.com/gh/facebook/react-native/53561?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\nYou'll probably need to change this from run-flow-checks to run-flow-ios and have another one for android.. That only runs checking with the default config which checks .ios.js files but not .android.js files.. Should be React.Node instead of React.Element because the render function on line 32 has an explicit return type of React.Node.. Let's just name these Props. That is consistent with how we've done it for other components. I'm not sure these should be nullable. Lets leave fileName and lineNumber the way they were:\nfileName?: string,\nlineNumber?: string. setSelection is only ever called with a number, never with null, so the argument shouldn't be nullable. setSelection?: (number) => mixed. Can you rename the variable to match the require?\nconst DeprecatedEdgeInsetsPropType = require('DeprecatedEdgeInsetsPropType');. Should probably call this DeprecatedEdgeInsetsPropType here as well. Can you move these comments to the flow types in TVViewPropTypes.js?. Let's make these nullable either. The goal of nullable props is so that a component can take optional props and pass them to another component which takes the optional prop.. I'm not sure we need the | {} on this. Did it solve a particular problem for you or were you just trying to be consistent with the original code?. Can you add @format as well so that prettier will format this file?. I'm looking for:\ninspected?: {\n  frame?: Object \n  style?: ViewStyleProp\n}\nAlthough inspected should also use $ReadOnly<{||}>. So:\ninspected?: $ReadOnly<{|\n  frame?: Object \n  style?: ViewStyleProp\n|}>. Yeah, but it is fine to leave it in this diff. For some reason a bunch of the files in the repo still have this so we will remove them all in another PR. Better to be consistent for now. \ud83d\udc4d . You can remove the comments from here so that the source of truth is on the Flow types. Let's use const instead of var while we are here. Do we still want these lines?. Can you flow type this based on the docblock comment above?. I believe this is the old header as it is now MIT licensed. . I'm not sure either, but it seems like we should be keeping them unless the options are no longer valid.. The propTypes version spreads in DeprecatedViewPropTypes so we probably need to include the view props here too.\n```\nimport type {ViewProps} from 'ViewPropTypes';\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  // ...\n|};\n``\n. Unintentional extra whitespace?. Can you move this comment to the file with Flow types as well? You can put it on top of____LayoutStyle_Internal. onClose is required based on the propTypes, you shouldn't need this check. If you do, then the flow types for onClose aren't properly showing that it is required.. same withonSwipeStart. If you could check the other ones in this file too that would be great.. I don't think this is true. The native component doesn't takedisabledorvaluefor example.. I don't think we have a type for this yet in Flow but I'd rather it be$FlowIssuehere thanObject.. Are you sure this is nullable? It looks like it defaults to false and is only ever set to true.. Yeah, it has to be passed in as a prop of a different name than ref (like forwardedRef). We should flow typesetAndForwardRefto ensure thatgetForwardedRefandsetLocalRefoperate on the same ref type. . Separate is best. I just noticed as part of some weirdness in how it is being used here.. What do you think about doing the casting toClasshere instead?. Can you at least create different types for the events? You can keep them all as Object for now but it will at least help knowing what the different types should be and that they aren't necessarily all the same shape.. Woah, I had no idea.. Maybe we shouldnullthrows` this one as well to avoid changing the logic.. We still need this in order to have context passed in, right? Interestingly, I don't see any reference to either of these context variables internally and I believe they were part of the initial react sync. \nI'd like to avoid changing logic as much as possible so maybe we should keep these in this PR and remove reference to them in a separate one.. In the other examples in the repo it seems like it is typed as:\nforwardedRef: ?React.Ref<'RCTImageView'>,\nOr\nforwardedRef: ?React.Ref<'RCTTextInlineImage' | 'ImageViewNativeComponent'>,\nShould we do the same thing here?\n. How do you feel about the different places this could go? At the top level, constructor, componentDidMount, render. My feeling is that I'd prefer constructor or componentDidMount but I'm curious if you had thought about this already.. Removing this caused Flow errors on Android:\nError ---------------------------------------------------------------------------\nreact-native/RNTester/js/TabBarIOSBarStyleExample.js:40:10\nCannot get `TabBarIOS.Item` because property `Item` is missing in statics of `DummyTabBarIOS` [1].\n  react-native/RNTester/js/TabBarIOSBarStyleExample.js:40:10\n  40|         <TabBarIOS.Item title=\"Tab\" icon={{uri: base64Icon, scale: 3}} selected>\n               ^^^^^^^^^^^^^^\nReferences:\n  react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js:19:7\n  19| class DummyTabBarIOS extends React.Component<$FlowFixMeProps> {\n            ^^^^^^^^^^^^^^ [1]\nError -------- react-native/RNTester/js/TabBarIOSExample.js:49:10\nCannot get `TabBarIOS.Item` because property `Item` is missing in statics of `DummyTabBarIOS` [1].\n  react-native/RNTester/js/TabBarIOSExample.js:49:10\n  49|         <TabBarIOS.Item\n               ^^^^^^^^^^^^^^\nReferences:\n  react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js:19:7\n  19| class DummyTabBarIOS extends React.Component<$FlowFixMeProps> {\n            ^^^^^^^^^^^^^^ [1]\nError -------- react-native/RNTester/js/TabBarIOSExample.js:60:10\nCannot get `TabBarIOS.Item` because property `Item` is missing in statics of `DummyTabBarIOS` [1].\n  react-native/RNTester/js/TabBarIOSExample.js:60:10\n  60|         <TabBarIOS.Item\n               ^^^^^^^^^^^^^^\nReferences:\n  react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js:19:7\n  19| class DummyTabBarIOS extends React.Component<$FlowFixMeProps> {\n            ^^^^^^^^^^^^^^ [1]\nError -------- react-native/RNTester/js/TabBarIOSExample.js:73:10\nCannot get `TabBarIOS.Item` because property `Item` is missing in statics of `DummyTabBarIOS` [1].\n  react-native/RNTester/js/TabBarIOSExample.js:73:10\n  73|         <TabBarIOS.Item\n               ^^^^^^^^^^^^^^\nReferences:\n  react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js:19:7\n  19| class DummyTabBarIOS extends React.Component<$FlowFixMeProps> {\n            ^^^^^^^^^^^^^^ [1]\nFound 4 errors\nI'll fix it\n. What about?\nsuggestion\n_requestsListViewOnScroll = (e: Object): void => {\n    this._requestsListViewScrollMetrics = {\n      offset: e.nativeEvent.contentOffset.y,\n      visibleLength: e.nativeEvent.layoutMeasurement.height,\n      contentLength: e.nativeEvent.contentSize.height,\n  };\n. There are no internal callsites of this. The only other thing that defines getInnerViewNode is ScrollView and innerViewRef is never ScrollView. Let's kill it.. This is only needed because AccessibilityInfo is requiring the Promise module instead of using Promise from global. That seems weird. Does everything else use it from global? . This fix seems detrimental to that particular issue. require('Promise') should be resolving to Libraries/Promise.js via Haste (which does have @flow at the top so there is something else weird happening). By specifying declare module 'Promise' { in flow/Promise.js it is bypassing the haste module which is probably not what we want.\nCan you try running flow get-def on require('Promise') in the statement you have above and see where Flow is trying to resolve that module from and debug from there?. The linter would be happy with double quotes here and then you don't need to escape the inner ones.\nsuggestion\n  it(\"Two buttons with JustifyContent:'space-between' should be tappable\", async () => {. It seems like we need these because the examples use a local alias like var styles = sample2Styles;. I haven't looked too closely but does it make sense to you why they do that and why we should ignore the rule for these blocks? Or should we remove the aliases and have these blocks referenced directly without the need for the lint disable?. Looks like getProducts.js isn't accessed anywhere else and can be deleted too.. I don't think this is the same behavior. React handles null (allowed by the flow type) differently than undefined. Was there a flow error that required this change?. Could you link to the file(s) that shows that this is the type for timestamp from native? . Ah, I think to be semantically the same it needs to be changed to the following then.\nlocale={(props.locale != null && props.locale != \"\")  ? props.locale : undefined}. This changes the behavior in the case that duration is 0. If you add the explicit check for that then flow should be okay.\nif (duration != null && duration != 0) {. :+1:\nThis one doesn't need the check for empty string because LayoutAnimation.Types because easing is a key and would be indexing into .Types which probably doesn't have a defined key for the empty string. :). In fact, the easing type at the top of this file could probably be even stronger by using Type from LayoutAnimation.js instead of string. . If you make another function called warnOnce then it can be used for the existing warnings in the api as well.. If we are going to add error handling here then this return should probably be a process.exit(1) so that it results in a non zero exit code.. We typically prefer $ReadOnlyArray over Array. Hopefully the code in this file isn't modifying this directly so having it be a read only array should be fine with Flow.. I'm not sure without trying to test it out myself. What flow error do you get without this change?. Is this different from PressEvent in CoreEventTypes?. Is the touch events here for View the same as the ones for ScrollView? We apparently are using the CoreEventTypes types for ScrollView: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollView.js#L62-L68. Are you sure this is passed an argument.\nWe appear to have a type for some of these in some files internally which use this type:\ntype ResponseHandlers = $ReadOnly<{|\n  onResponderGrant: (event: PressEvent) => void,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n  onStartShouldSetResponder: () => boolean,\n|}>;. Could you make this a separate PR?\nWe have a custom lint rule internally at Facebook that does this. We should probably switch over to the one in the react-native plugin but it will require more work to make sure that they both catch the same things. I don't want to hold up this PR removing dead code from one adding this lint rule since it will take us longer to resolve.. Why do you need to cast this to a boolean if fromUser is typed as a boolean already?. I believe that these are things that all views get and should probably only appear in ViewProps. ScrollView and RCTText all inherit from View's props so they should all have the same types for the responders.\nIn Flow ScrollView is actually spreading ViewProps so it doesn't even need to be defined again there. The text props are a bit more complicated since they aren't actually spreading ViewProps right now so I'd just make sure they are the same types in both ViewProps and TextProps.. Can you look to see what native does? Does iOS and Android code provide the argument?. Do you expect that the CLI and react-native will continue to be versioned together?. This is to fix the flow warning about not importing from untyped files, right? If that is the case then lets just not turn on strict-local in this file.. This is almost the same. global's alert sets the title of the alert to \"Alert\". https://github.com/facebook/react-native/blob/master/Libraries/Core/setUpAlert.js#L20. To avoid blocking this diff until we know absolutely everything, should we instead leave the ones we aren't sure of as Function and land the rest?. Is SyntheticEvent from CoreEventTypes helpful here?\nAlso, are we sure this shouldn't be ScrollEvent from CoreEventTypes? Where do you see that this event contains touches?. The reason we were exporting this is because ScrollView still uses createReactClass and is thus untyped. I believe with the change in this PR the Props type is now unused, I think this was the only callsite.. Migrating it to an ES6 class and not using mixins would be great and something we need to do anyways. It probably makes sense to do that in a separate PR as we've seen those be pretty tricky. cc @empyrical as he has converted a few other ones and ran into some edge cases. If you two work together to work out any problems you come across I'd be super excited!\nDo you think that PR needs to happen first?. The easiest thing to do is probably something like:\nthis._scrollResponder = new ScrollResponder();\nAnd then in ScrollView's componentWillMount call this._scrollResponder.componentWillMount(), same for componentWillUnmount, and then replace these lines: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollView.js#L915-L936\nwith: \nconst props = {\n  // ... other props\n  ...this._scrollResponder.getHandlers(),\n  // ... other props\n}\nThis should let as much as possible stay exactly the same. In fact changing the ScrollResponder in that way could probably be done without even switching off of createReactClass in the same PR. \ud83d\udc4d . We've had other things break when making changes to this kind of stuff. I'd really rather we do small PRs for this so that things can be bisected and reverted easily if there are issues without necessarily having to revert the whole thing.. We've had other things break when making changes to this kind of stuff. I'd really rather we do small PRs for this so that things can be bisected and reverted easily if there are issues without necessarily having to revert the whole thing.. It potentially makes sense to do one between that just converts it to a class with the existing typings. We\u2019ve run into problems with how we\u2019ve handled migrating the native refs at that point which has caused lots of headaches. Having it be separate would probably make it easier to carefully test and review.. It potentially makes sense to do one between that just converts it to a class with the existing typings. We\u2019ve run into problems with how we\u2019ve handled migrating the native refs at that point which has caused lots of headaches. Having it be separate would probably make it easier to carefully test and review.. Sorry for what seems like a lot of overhead here. We just got burned recently and I want to help make sure we don\u2019t repeat the same issues and that you get to learn from our problems. :-). Sorry for what seems like a lot of overhead here. We just got burned recently and I want to help make sure we don\u2019t repeat the same issues and that you get to learn from our problems. :-). Yeah, it is to support spreading props into the component. I wrote up an explanation with code samples on one of the issues I managed where people were sending PRs I think but I\u2019m on mobile and can\u2019t find it.. Yeah, it is to support spreading props into the component. I wrote up an explanation with code samples on one of the issues I managed where people were sending PRs I think but I\u2019m on mobile and can\u2019t find it.. This seems like it would be problematic if the props passed to ScrollView change. This seems like it would be problematic if the props passed to ScrollView change. Aren't these expectations covered by the previous statement? VAL_1 isn't null, so we know that result isn't null.. The following expectation would fail if result was null. Promise<?string>. keys is nullable?\nCan this use $ReadOnlyArray instead of Array? $ReadOnlyArray is stricter so we prefer it where we can.. Is this annotation necessary?. $ReadOnlyArray. We prefer $ReadOnlyArray over Array. Please replace all Array types that you added in this diff with $ReadOnlyArray. Why does this Promise resolve the any type? Are we able to be more specific with this type?. We prefer the explicit null checking rather than truthy checking. For example, we don't want to be checking for the empty string since \"\" == false.. I moved this file because jest requires all files in the __tests__ directory to have tests. I believe this is getting fixed soon but this makes things pass until then.. I moved this file because jest requires all files in the __tests__ directory to have tests. I believe this is getting fixed soon but this makes things pass until then.. This feels gross. When tapping on an element that is disabled, EarlGrey throws the following error:\n```\nerr:  Cannot perform action due to constraint(s) failure.\n    Exception with Action: {\n      \"Action Name\":  \"Tap\",\n      \"Element Description\":  \"\",\n      \"Failed Constraint(s)\":  \"enabled\",\n      \"All Constraint(s)\":  \"(!(isSystemAlertViewShown) && ((respondsToSelector(isAccessibilityElement) && isAccessibilityElement) || kindOfClass('UIView')) && (enabled && !(((kindOfClass('UIView') || respondsToSelector(accessibilityContainer)) && ancestorThatMatches(!(enabled))))) && interactable)\",\n      \"Recovery Suggestion\":  \"Adjust element properties so that it matches the failed constraint(s).\"\n    }\n[\n  {\n    \"Description\":  \"Cannot perform action due to constraint(s) failure.\",\n    \"Error Domain\":  \"com.google.earlgrey.ElementInteractionErrorDomain\",\n    \"Error Code\":  \"1\",\n    \"File Name\":  \"GREYBaseAction.m\",\n    \"Function Name\":  \"-[GREYBaseAction satisfiesConstraintsForElement:error:]\",\n    \"Line\":  \"66\"\n  }\n]\n\n```\nany ideas of a cleaner way to handle this case @rotemmiz?. This feels gross. When tapping on an element that is disabled, EarlGrey throws the following error:\n```\nerr:  Cannot perform action due to constraint(s) failure.\n    Exception with Action: {\n      \"Action Name\":  \"Tap\",\n      \"Element Description\":  \"\",\n      \"Failed Constraint(s)\":  \"enabled\",\n      \"All Constraint(s)\":  \"(!(isSystemAlertViewShown) && ((respondsToSelector(isAccessibilityElement) && isAccessibilityElement) || kindOfClass('UIView')) && (enabled && !(((kindOfClass('UIView') || respondsToSelector(accessibilityContainer)) && ancestorThatMatches(!(enabled))))) && interactable)\",\n      \"Recovery Suggestion\":  \"Adjust element properties so that it matches the failed constraint(s).\"\n    }\n[\n  {\n    \"Description\":  \"Cannot perform action due to constraint(s) failure.\",\n    \"Error Domain\":  \"com.google.earlgrey.ElementInteractionErrorDomain\",\n    \"Error Code\":  \"1\",\n    \"File Name\":  \"GREYBaseAction.m\",\n    \"Function Name\":  \"-[GREYBaseAction satisfiesConstraintsForElement:error:]\",\n    \"Line\":  \"66\"\n  }\n]\n\n```\nany ideas of a cleaner way to handle this case @rotemmiz?. I'm thinking I'll end up pulling these out to use on more tests but I don't want to overabstract until we know they are needed. I'm thinking I'll end up pulling these out to use on more tests but I don't want to overabstract until we know they are needed. One example of something cleaner would be using jest's expect .toThrow. In this example it would look like this:\nawait jestExpect(element(by.id(onTestID)).tap()).rejects.toThrow('Cannot perform action due to constraint(s) failure');\nHowever, the error we get back is actually an Error object, with the message field set to an Error, with that's message field set to the long string, making it impossible to assert as if it was a normal error.. One example of something cleaner would be using jest's expect .toThrow. In this example it would look like this:\nawait jestExpect(element(by.id(onTestID)).tap()).rejects.toThrow('Cannot perform action due to constraint(s) failure');\nHowever, the error we get back is actually an Error object, with the message field set to an Error, with that's message field set to the long string, making it impossible to assert as if it was a normal error.. Why don't we want this anymore? It seems like it is there to catch people from making mistakes. Is that mistake not possible anymore? Or we just think it isn't a big deal anymore?. Why don't we want this anymore? It seems like it is there to catch people from making mistakes. Is that mistake not possible anymore? Or we just think it isn't a big deal anymore?. Keys can\u2019t be objects, right?. Keys can\u2019t be objects, right?. I believe it calls toString on Objects. So it is easily for multiple to conflict. Using a key or ID here would be better I think.. i'm actually not sure how this worked previously at all because this function is passed to the onPress of TouchableWithoutFeedback which doesn't pass a first and second argument. \nI guess I understand how you were keeping the behavior the same by just using the object. \nIt looks like in the original commit for this file, it used\nonPress={this._linearTap.bind(this)}\nwhich was probably copied and pasted from a different internal file which uses the following for the AnimationBlock:\nthis.linearTap.bind(this, 'linear_ref')\nAnd then in 2016 this was cleaned up in this commit: https://github.com/facebook/react-native/commit/e2d84a8221391cb9b405bb64b131e60d46d81172 changing:\nonPress={this._linearTap.bind(this)}\nto\nonPress={this._linearTap}\n\nSo, looks like there is a lot of legacy here that probably doesn't make sense anymore. We probably don't want to use the location of the touch as the key because then every touch it would be a different key instead of the intention which is tied to this component instance. \nFor the minimal amount of changes, feel free to just go back to using the event as the key, even though it doesn't make sense. That at least means that there are no changes in this PR.\nAs a separate diff, this could probably be revisited as from my initial glancing it doesn't seem like this is created in a loop or needing to keep track of the toggleStatus for multiple things so a lot of this logic could probably be deleted, but that is probably a change that will require more testing. To unblock, changing this back to the event is reasonable. Sorry for all the churn. I understand this a lot better now. . Should this have a more specific testID?. This seems like a good helper. I don\u2019t think we should use Diff here, can we just change the props definition? Also, feel free to just merge the two objects, they are all Native props! :-). I don\u2019t think we should use Diff here, can we just change the props definition? Also, feel free to just merge the two objects, they are all Native props! :-). Yep, exactly. Just like that!. Yep, exactly. Just like that!. We want to have flow types for these components defined in these files too. Take a look at some of the other PRs as an example.. We want to have flow types for these components defined in these files too. Take a look at some of the other PRs as an example.. I don't think you need this type exported from this file. You should just be able to do React.Ref<ProgressBarAndroidNativeComponent>, or if that doesn't work then React.Ref<typeof ProgressBarAndroidNativeComponent>. I don't think you need this type exported from this file. You should just be able to do React.Ref<ProgressBarAndroidNativeComponent>, or if that doesn't work then React.Ref<typeof ProgressBarAndroidNativeComponent>. I think you are missing a closing paren here.. I think you are missing a closing paren here.. If inline views are now supported on both platforms we should consolidate the example out of this .android.js file so that the examples are used for both ios and android. \nAlso, your PR summary lists some potential edge cases around clipping and different sized views. Can you add examples for not just the happy path but for all of those edge cases too? That way we can track how they change over time and ensure that they have consistent behavior across iOS and Android.. If inline views are now supported on both platforms we should consolidate the example out of this .android.js file so that the examples are used for both ios and android. \nAlso, your PR summary lists some potential edge cases around clipping and different sized views. Can you add examples for not just the happy path but for all of those edge cases too? That way we can track how they change over time and ensure that they have consistent behavior across iOS and Android.. In order to have confidence in these changes, can you investigate what it would take to have Flow pass if we remove these $FlowFixMes? . In order to have confidence in these changes, can you investigate what it would take to have Flow pass if we remove these $FlowFixMes? . ",
    "roya3000": "Should I be more specific and add styles to only doc section? (I checked other pages  and they look good). I don't understand that wrong with margin-bottom in   .buttons-unit .button. Should I add margin-bottom only for the first button?. Should I be more specific and add styles to only doc section? (I checked other pages  and they look good). I don't understand that wrong with margin-bottom in   .buttons-unit .button. Should I add margin-bottom only for the first button?. added more specific targets for styles.. added more specific targets for styles.. ",
    "AlanFoster": "Unfortunately not as it's protected :) . I've nuked it now! :)\nJust for visibility though; The android API is:\ntrue if the animation is played, false otherwise. Just a small left-over piece of code; I was initially overriding to just widen the scope:\njava\n@Override\npublic boolean awakenScrollBars() {\n  return super.awakeScrolBars();\n}\nBut I decided to align the names with the existing API; And now the super was out of place. Deleted now, and the PR has been updated :). Hmm! In honesty, I wasn't quite sure why on iOS there was an explicit ScrollViewManager as a native module, but on android there isn't one\nUnfortunately I'm lacking the iOS-foo to test this change out, and I can't see any equivalent docs for running a modified of react-native with iOS - similar to the the Android Building React Native from source docs. I'm going to have to punt on this one unfortunately!. Ah; There's some magic inside the UIManager.js to handle iOS. Gotcha now :+1:\nUpdated :). Just for visibility; I've also changed this file: https://github.com/facebook/react-native/pull/15566/files#diff-0e688b19a3a45a0d17cd8d922cc0580aR29\nIf that makes its way into the code-base, there may be a small rebase required :+1:. Cool; I didn't realize that's how it's wired up in React-Native. Just out of curiosity, do we need to add support for other IntelliJ products, like RubyMine + IntelliJ? \ud83e\udd14 \n/Applications/RubyMine.app/Contents/MacOS/rubymine. I'm not a massive fan of the localised state mutation, but it feels like an improvement to the existing code.\nI assumed the previous mutation was for performance reasons, and I've aligned with the most simplistic approach for now.. ",
    "myrjola": "This function was needed after rebasing on latest master. I took some inspiration from https://github.com/facebook/react-native/blob/master/jest/preprocessor.js.\nWithout it running Jest will give the following error:\n```\n FAIL  Libraries/Image/tests/assetBaseNameInSnapshot.js\n  \u25cf renders assets based on basename\n/Users/martin/git/react-native/Libraries/Image/__tests__/img/img1.png:1\n({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){module.exports = [object Object];\n                                                                                                                  ^^^^^^\n\nSyntaxError: Unexpected identifier\n\n  at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:305:17)\n  at Object.<anonymous> (Libraries/Image/__tests__/assetBaseNameInSnapshot.js:21:64)\n  at tryCallTwo (node_modules/promise/lib/core.js:45:5)\n  at doResolve (node_modules/promise/lib/core.js:200:13)\n\n\u2715 renders assets based on basename (144ms)\n```. This function was needed after rebasing on latest master. I took some inspiration from https://github.com/facebook/react-native/blob/master/jest/preprocessor.js.\nWithout it running Jest will give the following error:\n```\n FAIL  Libraries/Image/tests/assetBaseNameInSnapshot.js\n  \u25cf renders assets based on basename\n/Users/martin/git/react-native/Libraries/Image/__tests__/img/img1.png:1\n({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){module.exports = [object Object];\n                                                                                                                  ^^^^^^\n\nSyntaxError: Unexpected identifier\n\n  at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:305:17)\n  at Object.<anonymous> (Libraries/Image/__tests__/assetBaseNameInSnapshot.js:21:64)\n  at tryCallTwo (node_modules/promise/lib/core.js:45:5)\n  at doResolve (node_modules/promise/lib/core.js:200:13)\n\n\u2715 renders assets based on basename (144ms)\n```. Thanks for reporting! Could you give a bit more detail what the problem is? Apparently this change has broken your tests. Could you give some steps to reproduce?\nI immediately notice that the regex ^[./a-zA-Z0-9$_-]+\\\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp)$ does not match the @ character in ./file@2x.png. The regex has been moved from moduleNameMapper to the transform mapper on line 17 in the same file. Perhaps the change from ./file.png to ./file@2x.png happens between the mappers. @oblador, could you edit the regex on line 17 to ^[./a-zA-Z0-9@$_-]+\\\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp)$, so that it also matches ./file@2x.png?. Thanks for reporting! Could you give a bit more detail what the problem is? Apparently this change has broken your tests. Could you give some steps to reproduce?\nI immediately notice that the regex ^[./a-zA-Z0-9$_-]+\\\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp)$ does not match the @ character in ./file@2x.png. The regex has been moved from moduleNameMapper to the transform mapper on line 17 in the same file. Perhaps the change from ./file.png to ./file@2x.png happens between the mappers. @oblador, could you edit the regex on line 17 to ^[./a-zA-Z0-9@$_-]+\\\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp)$, so that it also matches ./file@2x.png?. ",
    "ManikSmartdata": "Do i need to to upgrade my RN to 0.47.2. because below version doesn't have any video support. I am using RN version 0.45.0. Video support is not there in 0.45.0. What should I do. Please let me know. ",
    "nhducit": "I think the github link should be https://github.com/kmagiera. ",
    "andrejunges": "@grabbou I can't agree more with you regarding our link issue where we just link the first target. Besides being able to have a target for different platforms (tvOS..) I think there are more use cases that'd use more than one target - a white label product (app) is a good example. My team face this issue every time we add a new library with native deps.. Let me know if I can help you in any way.. @grabbou I can't agree more with you regarding our link issue where we just link the first target. Besides being able to have a target for different platforms (tvOS..) I think there are more use cases that'd use more than one target - a white label product (app) is a good example. My team face this issue every time we add a new library with native deps.. Let me know if I can help you in any way.. hmm, that's a good point, I don't think we'll be able to make it work in all podfiles.. (my comments above were more related to not cocoa-pod links..)\nI have an example where we customized the Podfile so it'd be possible to add new dep for all targets at once.\n[\n  \"Target1\",\n  \"Target2\",\n  \"Target3\",\n  \"Target4\",\n  \"Target5\",\n  \"Target6\",\n].each do |target_name|\n  target target_name do\n    pod \"IQKeyboardManager\"\n    pod \"Firebase/Messaging\"\n    pod \"Firebase/Crash\"\n    pod \"Firebase/Core\"\n    pod \"FLAnimatedImage\"\n  end\nend. hmm, that's a good point, I don't think we'll be able to make it work in all podfiles.. (my comments above were more related to not cocoa-pod links..)\nI have an example where we customized the Podfile so it'd be possible to add new dep for all targets at once.\n[\n  \"Target1\",\n  \"Target2\",\n  \"Target3\",\n  \"Target4\",\n  \"Target5\",\n  \"Target6\",\n].each do |target_name|\n  target target_name do\n    pod \"IQKeyboardManager\"\n    pod \"Firebase/Messaging\"\n    pod \"Firebase/Crash\"\n    pod \"Firebase/Core\"\n    pod \"FLAnimatedImage\"\n  end\nend. ",
    "mironiasty": "I don't call pod install anywhere. It is up to user to call it later on (it could be also run automatically in build process/Xcode). Right now link/unlink processes only modify configuration files (and with this change only modify Podfile file).. I don't call pod install anywhere. It is up to user to call it later on (it could be also run automatically in build process/Xcode). Right now link/unlink processes only modify configuration files (and with this change only modify Podfile file).. This might be tricky to do. Current implementation is kind of naive, and works only for simple cases (that was assumptions from the beginning). So, I'm just looking for target that has same name as project, and then look for good place to add new line.\nBut to make it work in most cases, I would have to write some simple Ruby parser to look for all non-nested targets (possible only ones, that already had React as dependency?), and then add new line to them. And I'm sure, that there always will be some project that somehow abuse Podfile syntax, and my approach would fail.\nAnyway, if you could send me some real life Podfiles, I might try to check few ways to make it better. Also if you have some ideas how to improve it, let me know.. This might be tricky to do. Current implementation is kind of naive, and works only for simple cases (that was assumptions from the beginning). So, I'm just looking for target that has same name as project, and then look for good place to add new line.\nBut to make it work in most cases, I would have to write some simple Ruby parser to look for all non-nested targets (possible only ones, that already had React as dependency?), and then add new line to them. And I'm sure, that there always will be some project that somehow abuse Podfile syntax, and my approach would fail.\nAnyway, if you could send me some real life Podfiles, I might try to check few ways to make it better. Also if you have some ideas how to improve it, let me know.. Ok, so my implementation would not work for such file - I assumed that target name would be same as project name. Which might be true in this case, but regexp's are not smart enough to find it out :(. Ok, so my implementation would not work for such file - I assumed that target name would be same as project name. Which might be true in this case, but regexp's are not smart enough to find it out :(. @Kureev  I did some research when I started work on this. But I couldn't find any library that could parse Podfile (or any Ruby file) in JS.\nFor me, the whole idea of \u00a0react-native link is to update project configuration, if it is quite simple. If user starts modifying configuration files by hand, there will be always a case when auto-updating will fail. Or code that update configuration would be quite complex.\n@grabbou I might add search for these special comment(s) in file, then adding new pod under it. And if there is no such comment, I might use current approach (as the original idea, is to make it work with ejected expo projects).. @Kureev  I did some research when I started work on this. But I couldn't find any library that could parse Podfile (or any Ruby file) in JS.\nFor me, the whole idea of \u00a0react-native link is to update project configuration, if it is quite simple. If user starts modifying configuration files by hand, there will be always a case when auto-updating will fail. Or code that update configuration would be quite complex.\n@grabbou I might add search for these special comment(s) in file, then adding new pod under it. And if there is no such comment, I might use current approach (as the original idea, is to make it work with ejected expo projects).. ",
    "zrumenjak": "@grabbou you copied the wrong like here, it should be https://shoutem.github.io/.. Same as above, the link for extensions should be https://github.com/shoutem/extensions. ",
    "krystofcelba": "I think that the statement can be changed to\nNSInteger headersContentLength = headers[@\"Content-Length\"] != nil ? [headers[@\"Content-Length\"] intValue] : 0; so the value didn't have to be cast.. ",
    "GingerBear": "@hramos when i use react-native init to create a new project, alpha.12 is the version that actually get installed.. Gotcha, it make sense.. ",
    "kesha-antonov": "I think here we get medias - multiple. Isn't it? Previously we get photos. What's wrong here?. Same. Why media? We get multiple items. Ok, Got it. This code works faster than fat arrow.\nIn render we should avoid create function every time\n@tomasreimers . ",
    "esbenvb": "Of course, if people use RubyMine for RN development and it has a command line tool for opening files. I know that webstorm and idea have, but appcode doesn't seem to have one.... ",
    "Green-Cat": "Media is already plural, the singular is medium.. ",
    "DaKaZ": "Please note: I left the default here because it is possible for someone to use this function outside of the build scripts.. Please note: I left the default here because it is possible for someone to use this function outside of the build scripts.. Thats just a warning and seems to have no effect - the error is in the preprocessor replacement which isn't replaced.  This has to be something unique the CircleCI compiler.... Thats just a warning and seems to have no effect - the error is in the preprocessor replacement which isn't replaced.  This has to be something unique the CircleCI compiler.... @janicduplessis thank you!  It took a few days (literally) but I finally figured this out.   xcode was setting RCT_METRO_PORT to empty string on the testing, so I figured out how to test for that and then redefine to 8081 if its empty.  That was a sporty problem \ud83d\udc4d . @janicduplessis thank you!  It took a few days (literally) but I finally figured this out.   xcode was setting RCT_METRO_PORT to empty string on the testing, so I figured out how to test for that and then redefine to 8081 if its empty.  That was a sporty problem \ud83d\udc4d . @shergin When I added the GCC preprocessor section in XCode, it was added automatically, likely because this is the debug preset  (see line 440). My guess is that if you omit the preprocessor section XCode auto-assigns the DEBUG define, but I am no XCode/Objective-C wizard and can't confirm this. . @shergin When I added the GCC preprocessor section in XCode, it was added automatically, likely because this is the debug preset  (see line 440). My guess is that if you omit the preprocessor section XCode auto-assigns the DEBUG define, but I am no XCode/Objective-C wizard and can't confirm this. . @shergin good question :) . This is the only way I could find to cleanly handle the empty string dilemma.  I thought at first that we could use a bash expansion trick where you say ${RCT_METRO_PORT:=8081} but xcode did not support the default value there.  I tried about 10 other ways that I found on varies stack overflow/exchange posts but this was by far the cleanest.  I am open to suggestions, but this works.. @shergin good question :) . This is the only way I could find to cleanly handle the empty string dilemma.  I thought at first that we could use a bash expansion trick where you say ${RCT_METRO_PORT:=8081} but xcode did not support the default value there.  I tried about 10 other ways that I found on varies stack overflow/exchange posts but this was by far the cleanest.  I am open to suggestions, but this works.. The RCT_METRO_PORT is passed in as an environment variable to keep the code as clean as possible.  I only added the RCT_METRO_PORT, when adding the GCC preprocessor definitions xcode pre-populated the list with the other defines.. The RCT_METRO_PORT is passed in as an environment variable to keep the code as clean as possible.  I only added the RCT_METRO_PORT, when adding the GCC preprocessor definitions xcode pre-populated the list with the other defines.. This is my first PR for react-native, how would you like this styled differently?. This is my first PR for react-native, how would you like this styled differently?. Not sure what this comment means.  Would you like me to a comment to the code to explain what is going on here?. Not sure what this comment means.  Would you like me to a comment to the code to explain what is going on here?. @syzer fixed. @syzer fixed. ",
    "gusgard": "These URLs won't work until are added to the website page (after merged the PR). These URLs won't work until are added to the website page (after merged the PR). I prefer logo-og.png since the logo is in the center and has a dark background and all the examples in RNTester fit better, what do you think? \n\n. I prefer logo-og.png since the logo is in the center and has a dark background and all the examples in RNTester fit better, what do you think? \n\n. We could use this URL raw.githubusercontent.com/gusgard/react-native/correct-url-logo/website/src/react-native/img/logo-small.png that don't depend on the website. (changing user and branch for facebook and master). \nOtherwise, I could use the images that are already in the img folder and test it well.. We could use this URL raw.githubusercontent.com/gusgard/react-native/correct-url-logo/website/src/react-native/img/logo-small.png that don't depend on the website. (changing user and branch for facebook and master). \nOtherwise, I could use the images that are already in the img folder and test it well.. ",
    "Inlesco": "i'd consider using the same terms for styling props here because you're mapping textSize to fontSize. why not name this fontSize in the first place to prevent this internal remapping?\nalso, your textSize propType def require a string, but here you convert it to int - consider changing the proptype def to number to remove the conversion? or make that propType accept 2 types with oneOfTypes. ",
    "akshetpandey": "ModuleRegistryHolder isn't a class anymore.\nIs it here for backwards compatibility?. ",
    "swansontec": "Oops! Just pushed a fixed version.. ",
    "dmueller39": "derp not getFrescoComponent but getFrescoVersion I can update when we're sure we want to move forward with this.. the alternative here is that it just throws an error when it can't find a correct version. doing this will likely just continue the same problem. any thoughts on best practices?. ",
    "adrianomelo": "Hi @hramos, thank you for your feedback. It does render correctly. I tested it using Android. I am going to update the commit removing the extra *.\nAnd I built ./website locally, it looks good with the new changes. :). ",
    "milindagrawal": "Can we add something here which will take user locale by default ?\nNote: no need to use ternary here, just use props.locale and add user locale in defaultProps.. Awesome. ",
    "RobertPaul01": "If the locale isn't specified, the default device locale will be used.. ",
    "dickie81": "@bartolkaruza & @andreicoman11:\nI've been looking at this PR and noticed a possible regression. Line height seems to be (more) broken on wrapped lines of text when line height is greater than font size. It seems to be related to this line of code.\nHere is an example of what I'm seeing:\n\nJSX:\n<View style={{backgroundColor: \"yellow\", paddingTop: 100, paddingBottom: 100}}>\n    <Text style={{fontSize: 20, lineHeight: 60, backgroundColor: \"blue\", color: \"white\"}}>\n        Fontsize 20 Lineheight 60 qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCVBNM\n        Fontsize 20 Lineheight 60 qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCVBNM\n    </Text>\n</View>\n. @bartolkaruza & @andreicoman11:\nI've been looking at this PR and noticed a possible regression. Line height seems to be (more) broken on wrapped lines of text when line height is greater than font size. It seems to be related to this line of code.\nHere is an example of what I'm seeing:\n\nJSX:\n<View style={{backgroundColor: \"yellow\", paddingTop: 100, paddingBottom: 100}}>\n    <Text style={{fontSize: 20, lineHeight: 60, backgroundColor: \"blue\", color: \"white\"}}>\n        Fontsize 20 Lineheight 60 qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCVBNM\n        Fontsize 20 Lineheight 60 qwertyuiopasdfghjklzxcvbnm QWERTYUIOPASDFGHJKLZXCVBNM\n    </Text>\n</View>\n. Restoring fm.ascent -= additional; gives me this behaviour:\n\n. Restoring fm.ascent -= additional; gives me this behaviour:\n\n. Proposed fix to make Android consistent with iOS:\n```\n      // Show proportionally additional ascent / top & descent / bottom\n      final int additional = mHeight - (-fm.top + fm.bottom);\n  fm.top -= additional / 2;\n  fm.ascent -= additional / 2;\n  fm.descent += additional / 2;\n  fm.bottom += additional / 2;\n\n```\nGiving following behaviour:\n\n. Proposed fix to make Android consistent with iOS:\n```\n      // Show proportionally additional ascent / top & descent / bottom\n      final int additional = mHeight - (-fm.top + fm.bottom);\n  fm.top -= additional / 2;\n  fm.ascent -= additional / 2;\n  fm.descent += additional / 2;\n  fm.bottom += additional / 2;\n\n```\nGiving following behaviour:\n\n. ",
    "AntonPuko": "why do we need extra object inside state? isn't it simpler keep it as before but put into flat list  extraData={this.state} ?. ",
    "vovkasm": "'overriding \"--dev\"'? May be better something like '(default: false for development build, otherwise true)'\nAlso \"--dev\" option description needs to be clarified.... 'overriding \"--dev\"'? May be better something like '(default: false for development build, otherwise true)'\nAlso \"--dev\" option description needs to be clarified.... It would be good to not call RCTExportedDimensions two times, right?. Does this change come from some internal conversations? What purpose?\nI wonder because I intentionally moved relative slow call of respondsToSelector method out of \"critical path\" code in layoutSubviews. It was tradeoff speed/size, cost of this optimization was 1 byte stored in ivars area.. Does this change come from some internal conversations? What purpose?\nI wonder because I intentionally moved relative slow call of respondsToSelector method out of \"critical path\" code in layoutSubviews. It was tradeoff speed/size, cost of this optimization was 1 byte stored in ivars area.. Done :-). Done :-). ",
    "fishmwei": "@shergin \nI always think that the size of content view should be equal to its super view's size. That's why you set content's frame in the function layoutSubviews of rootView ? \n- (void)layoutSubviews\n{\n  [super layoutSubviews];\n  _contentView.frame = self.bounds;  // here\n  _loadingView.center = (CGPoint){\n    CGRectGetMidX(self.bounds),\n    CGRectGetMidY(self.bounds)\n  };\n}\nif view.frame  != superview.bounds, it's invalidate.  If  update avaliableSize in the case, it will lead to set view.bounds with a size which does not equal to superview.bounds later,  so the bug occurs.. @shergin \nI always think that the size of content view should be equal to its super view's size. That's why you set content's frame in the function layoutSubviews of rootView ? \n- (void)layoutSubviews\n{\n  [super layoutSubviews];\n  _contentView.frame = self.bounds;  // here\n  _loadingView.center = (CGPoint){\n    CGRectGetMidX(self.bounds),\n    CGRectGetMidY(self.bounds)\n  };\n}\nif view.frame  != superview.bounds, it's invalidate.  If  update avaliableSize in the case, it will lead to set view.bounds with a size which does not equal to superview.bounds later,  so the bug occurs.. @shergin what's your  opinion?. @shergin what's your  opinion?. ",
    "eballeste": "???. ???. ???. why is it pointing to the prev version of the diff?. ???. ???. ",
    "sballew": "Agreed, and done.. ",
    "syzer": "Maybe spaces in arguments on LOC 277 ?\nex: packagerEnvFile,content => packagerEnvFile, content. Maybe spaces in arguments on LOC 277 ?\nex: packagerEnvFile,content => packagerEnvFile, content. ",
    "swashcap": "Reflow to make this <=100 chars per line. The change is s/CSSNode/ReactShadowNode.. CSSNodeDEPRECATED is how I noticed the problem!. ",
    "olegbl": "This means that passing in \"message\" will always crash.. This means that passing in \"message\" will always crash.. This is a breaking API change that introduces crashes into all existing apps using it. Highly suggest introducing a \"urls\" argument instead.. This is a breaking API change that introduces crashes into all existing apps using it. Highly suggest introducing a \"urls\" argument instead.. ",
    "tomasreimers": "@kesha-antonov \nFollowing the example in https://facebook.github.io/react-native/docs/flatlist.html\n\nBy passing extraData={this.state} to FlatList we make sure FlatList itself will re-render when the state.selected changes. Without setting this prop, FlatList would not know it needs to re-render any items because it is also a PureComponent and the prop comparison will not show any changes.. @kesha-antonov \n\nFollowing the example in https://facebook.github.io/react-native/docs/flatlist.html\n\nBy passing extraData={this.state} to FlatList we make sure FlatList itself will re-render when the state.selected changes. Without setting this prop, FlatList would not know it needs to re-render any items because it is also a PureComponent and the prop comparison will not show any changes.. Why this change?. Why this change?. @kesha-antonov totally get that -- I meant why .bind(this) in the initializer instead of using class fields (like _onScroll). @kesha-antonov totally get that -- I meant why .bind(this) in the initializer instead of using class fields (like _onScroll). \n",
    "BrandonWilliamsCS": "That is correct. We wouldn't want to set/unset general password status in keyboardType, only in secureTextEntry.. Will do, commit incoming.. That's a good question. I think it comes down to how the field should behave when keyboardType=\"visible-password\" but secureTextEntry=\"false\". Due to the way Android handles the flags, if we set the flag I called passwordVisibilityFlag without setting the InputType.TYPE_TEXT_VARIATION_PASSWORD flag, it will actually treat it like InputType.TYPE_TEXT_VARIATION_URI.\nSo three options I see:\n1. Somehow forbid keyboardType=\"visible-password\" with secureTextEntry=\"false\"\n2. Let keyboardType=\"visible-password\" override the secureTextEntry prop (equivalent to the current PR code)\n3. Allow the consumer to set the props inconsistently (probably with a warning) and risk an unexpected InputType.TYPE_TEXT_VARIATION_URI\nI should probably leave that decision up to the core maintainers.. ",
    "motiz88": "You probably mean to use letterSpacing here.. I believe the approach taken in #13877 is a more sound one with respect to the unit conversions involved; see also my comment on setFontSize below.. Nitpick (though I'm not an authority on this codebase): \"previous\" implies you're keeping an old state, but in fact you're just converting units for the same state; maybe something like mLetterSpacingPts and mLetterSpacingEms? (or mLetterSpacingInput and mLetterSpacing, following the pattern seen elsewhere in this file with e.g. mFontSize). You probably mean letterSpacing here and below.. Nitpick: Kerning seems to be the wrong term per Wikipedia.\n\nLetter-spacing should not be confused with kerning. [...] Kerning is a spacing adjustment of one or more specific pairs of adjacent characters [...]. Still on the subject of unit conversions:\n\nmFontSize is in pixels here, but letter spacing is given in points (presumably the same units as mFontSizeInput - SP or DIP depending on mAllowFontScaling). We need to pass ems to setLetterSpacing(); the correct calculation to yield that would seem to be letterSpacing / mFontSizeInput (handling UNSET gracefully somehow - is there a default font size defined somewhere?), since the font size is by definition the em size.. Wondering aloud: Is there a precedent for RN enabling an Android-version-dependent feature with neither a fallback nor a warning for older versions?. It's probably prudent to amend this, perhaps to say something like (iOS, Android >= 5.0).. This clones just the reference (a cheap operation), unless I'm missing something? So to gracefully handle any errors between allocating and returning the bitmap (e.g. I don't know if new Canvas() might throw, or if more code might be introduced in between), I treat output as a local reference which gets released within process(), and explicitly make a new reference to return (keeping the Bitmap alive) right before releasing it.. I was going for a clear parallel with the structure of toScaleType() above, but I see your point - will fix. ",
    "steveccable": "Sure, that was Android Studio moving them around automatically but i can set them back.. ",
    "Ashoat": "Made a comment on the PR but probably should've mentioned it inline too.\n\nI also corrected a Flow type error - finish takes a string, not a FetchResult (which is the object containing the valid strings).\n\nThis type is incorrect, and it shows when you attempt to use the API.. Made a comment on the PR but probably should've mentioned it inline too.\n\nI also corrected a Flow type error - finish takes a string, not a FetchResult (which is the object containing the valid strings).\n\nThis type is incorrect, and it shows when you attempt to use the API.. @PeteTheHeat, shouldn't this warning be constrained to only occur on Android?. @PeteTheHeat, shouldn't this warning be constrained to only occur on Android?. ",
    "turnrye": "Whoops. Fixing.. ",
    "samsafay": "I honestly couldn't justify the need of it being logged to the console, that's why i deleted it; I think we may have to submit two seperate PRs, since these commits are kind of mutually exclusive, even though I initially thought they are related! Lets wait until they get back to us.... ",
    "ihenshaw": "Renamed isWin to isWindows everywhere where it's necessary.. I'm not sure what you want here? are you looking for new const variables, one for .packager.bat and one for .packager.env?\nI'd have preferred to use just a single filename, unfortunately, Windows doesn't have a source .env equivalent, you can get the same result by using a batch file, but the batch files must have a .bat extension to be invoked with call from the parent script... . ",
    "vekerdyb": "Thanks for the feedback! Unfortunately I am quite busy at the moment, but will get back to this mid February, unless it is picked up by someone else by then.\n\nI think I've seen it already in generator subfolder where they do the same for react-native init (sanitize the name when creating Android main application). We could potentially reuse that as well \n\nI agree, I faintly remember seeing init working as expected now.. Thanks for the feedback! Unfortunately I am quite busy at the moment, but will get back to this mid February, unless it is picked up by someone else by then.\n\nI think I've seen it already in generator subfolder where they do the same for react-native init (sanitize the name when creating Android main application). We could potentially reuse that as well \n\nI agree, I faintly remember seeing init working as expected now.. Hey @Titozzz, unfortunately I haven't had the time yet, but will aim to do it this weekend. If not, I will let you know!. Hey @Titozzz, unfortunately I haven't had the time yet, but will aim to do it this weekend. If not, I will let you know!. @Titozzz And I didn't have any screen time this weekend, sorry, probably best if it goes on your march TODO!. @Titozzz And I didn't have any screen time this weekend, sorry, probably best if it goes on your march TODO!. ",
    "t4deu": "fixed. fixed. fixed!. fixed!. ",
    "ss18": "@jacobrosenthal in my prev PR it was done automatically https://github.com/facebook/react-native/pull/17578. @jacobrosenthal in my prev PR it was done automatically https://github.com/facebook/react-native/pull/17578. also Yoga has been changed, why not do the same in this PR?. also Yoga has been changed, why not do the same in this PR?. @ide \ud83e\udd26\u200d\u2642\ufe0f . @ide \ud83e\udd26\u200d\u2642\ufe0f . ",
    "mdvacca": "React is never used, lets remove it. React is never used, lets remove it. Can we add a comment to isTVOS describing that it is deprecated and it will be replaced by isTV().\nAlso can you move its implementation to isTV(), that way it is easier to deprecate in the future. Can we add a comment to isTVOS describing that it is deprecated and it will be replaced by isTV().\nAlso can you move its implementation to isTV(), that way it is easier to deprecate in the future. NIT: can you unify these two IFs conditions?. NIT: can you unify these two IFs conditions?. Let early exit of the method if targetView == null || eventKeyAction != KeyEvent.ACTION_UP:\nif (targetView == null || eventKeyAction != KeyEvent.ACTION_UP) {\n    return;\n}\n.... Let early exit of the method if targetView == null || eventKeyAction != KeyEvent.ACTION_UP:\nif (targetView == null || eventKeyAction != KeyEvent.ACTION_UP) {\n    return;\n}\n.... The findFocusedView method transverses the entire viewHierarchy for every keyEvent on the ReactRootView. We need to do this only for TV. The findFocusedView method transverses the entire viewHierarchy for every keyEvent on the ReactRootView. We need to do this only for TV. Hey @kmagiera thank you for your effort!\nI like the option 1) renaming this with ReactAndroidHWInputDeviceHelper, my concern with this approach is this line: https://github.com/facebook/react-native/pull/16500/files#diff-c308f7d4634ee2c75c99e773916f5e53R57\nThis means that for every key we will search for the focusedView and that is expensive. Maybe we could execute the findFocusedView(mReactRootView) only when the keyEvent is one of the events we handle?\n. Hey @kmagiera thank you for your effort!\nI like the option 1) renaming this with ReactAndroidHWInputDeviceHelper, my concern with this approach is this line: https://github.com/facebook/react-native/pull/16500/files#diff-c308f7d4634ee2c75c99e773916f5e53R57\nThis means that for every key we will search for the focusedView and that is expensive. Maybe we could execute the findFocusedView(mReactRootView) only when the keyEvent is one of the events we handle?\n. NIT: why not to unify all the conditions that return Shader.TileMode.CLAMP into one \"IF\"?. NIT: why not to unify all the conditions that return Shader.TileMode.CLAMP into one \"IF\"?. use  CloseableReference.closeSafely(output); . use  CloseableReference.closeSafely(output); . question: do you need to clone the output?. question: do you need to clone the output?. Use CloseableReference.closeSafely();. Use CloseableReference.closeSafely();. Use CloseableReference.closeSafely();. Use CloseableReference.closeSafely();. Can you simplify this \"for\" statement?. Can you simplify this \"for\" statement?. Don't you need to use a ReactHorizontalScrollView here? . Instead of set the value 8 here, you should export a new constant in UIManagerModuleConstants.AccessibilityEventTypes:\nsee: https://github.com/facebook/react-native/blob/26684cf3adf4094eb6c405d345a75bf8c7c0bf88/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstants.java#L138\nand then use that new constant from here. Instead of set the value 8 here, you should export a new constant in UIManagerModuleConstants.AccessibilityEventTypes:\nsee: https://github.com/facebook/react-native/blob/26684cf3adf4094eb6c405d345a75bf8c7c0bf88/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstants.java#L138\nand then use that new constant from here. What happens if an exception is thrown when executing the Runnable?\nGuardedAsyncTask provided error management, see: https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/GuardedAsyncTask.java#L34\n. What happens if an exception is thrown when executing the Runnable?\nGuardedAsyncTask provided error management, see: https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/GuardedAsyncTask.java#L34\n. I'm not sure if adding a new executor is the best approach here, but If you are adding this you should override the  onCatalystInstanceDestroy method and then shutdown the executor.\nSee:\nhttps://github.com/facebook/react-native/blob/26684cf3adf4094eb6c405d345a75bf8c7c0bf88/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java#L51\n. I'm not sure if adding a new executor is the best approach here, but If you are adding this you should override the  onCatalystInstanceDestroy method and then shutdown the executor.\nSee:\nhttps://github.com/facebook/react-native/blob/26684cf3adf4094eb6c405d345a75bf8c7c0bf88/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java#L51\n. You can keep using MapBuilder here:\nprivate static final Map KEY_EVENTS_ACTIONS = MapBuilder.of()\n.put(KeyEvent.KEYCODE_DPAD_CENTER, \"select\")\n....\n.build();. You can keep using MapBuilder here:\nprivate static final Map KEY_EVENTS_ACTIONS = MapBuilder.of()\n.put(KeyEvent.KEYCODE_DPAD_CENTER, \"select\")\n....\n.build();. Can you revert changes in this file?. Can you revert changes in this file?. Can you revert changes in this file?. Can you revert changes in this file?. Can you revert changes in this file?. Can you revert changes in this file?. Can you revert changes in this file and upgrade version of support library from 27.1.1 to 28.0.0 in the original file?. Can you revert changes in this file and upgrade version of support library from 27.1.1 to 28.0.0 in the original file?. Can you revert changes in this file?. Can you revert changes in this file?. And upgrade dependencies from 27.1.1 to 28.0.0 in the original file?. And upgrade dependencies from 27.1.1 to 28.0.0 in the original file?. Can you add \"rn_prebuilt_jar\" here?\nload(\"//tools/build_defs/oss:rn_defs.bzl\", \"react_native_dep\", \"rn_prebuilt_jar\"). Can you add \"rn_prebuilt_jar\" here?\nload(\"//tools/build_defs/oss:rn_defs.bzl\", \"react_native_dep\", \"rn_prebuilt_jar\"). let's replace this for:\n\":android-support-annotations\",\n. let's replace this for:\n\":android-support-annotations\",\n. can you add?\nfb_native.prebuilt_jar(\n    name = \"android-support-annotations\",\n    binary_jar = \":support-annotations-binary.jar\",\n)\n. can you add?\nfb_native.prebuilt_jar(\n    name = \"android-support-annotations\",\n    binary_jar = \":support-annotations-binary.jar\",\n)\n. can you add?\nfb_native.remote_file(\n    name = \"support-annotations-binary.jar\",\n    sha1 = \"ed73f5337a002d1fd24339d5fb08c2c9d9ca60d8\",\n    url = \"mvn:com.android.support:support-annotations:jar:28.0.0\",\n)\n. can you add?\nfb_native.remote_file(\n    name = \"support-annotations-binary.jar\",\n    sha1 = \"ed73f5337a002d1fd24339d5fb08c2c9d9ca60d8\",\n    url = \"mvn:com.android.support:support-annotations:jar:28.0.0\",\n)\n. is this change of behavior correct?. the usage of getMarkedViewCount() here makes getChildCount() inefficient, now we iterate for every \"marked child\", can we avoid this?\n. creating an empty ArrayList for every ReactViewGroup is quite expensive, specially because this is not going to be used in most of the cases\nAlso this variable is not @Nullable. can you add documentation about what is the purpose of these new methods?\nAlso let's revisit the names, you are mixing View with Child, e.g. markView vs getMakedChildAt. is this method @Nullable?. the usage of getPrefixMarkedViewCount() here makes addView() inefficient, now we iterate for every \"marked child\", and we do this twice. can we avoid this?. The usage of mDeleteMark is quite inefficient here.\nEvery time you remove an element from a specific index of the ArrayList, you will shift to the left all the elements on the right of the element. Then you will add the element and shift all the same elements but this time to the right. \nSee  https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#remove-int- \nand https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#add-int-E-\ncan you choose a different data-structure?. ",
    "dryganets": "We don't need to write the log to logcat in case we have handler as this is a handler responsibility now.\nIf we do we will have duplicate logs.. Logging everything using FLog class.. Fixes unified headers warning. You don't support android-9 anyway.. lambdas you are using is part of c++14 clang extension.\nthe code continues to compile with your toolchain.\nThe flag works for both clang and gcc 4.9. Wouldn't work in gcc 4.8.. This is a struct not class see folly sources.\nclang is more diligent about such things.. This is the best common denominator between clang and gcc.. You shouldn't add this suppress.\nThe lib had a bug:\nhttps://github.com/google/glog/commit/a5ffa884137f7687d0393ccba22557d583654a25\n. You don't support targets below HONEYCOMB anyway. The only API level affected by the original check was 16.. ",
    "cagataycali": "Why eslint does not throw error when using \"var\" ?. Same here.  https://github.com/facebook/react-native/pull/17720/files#r163449140. ",
    "wd": "I think maybe here should be\nlaunchDevTools({...options, host}, isChromeConnected);. This PR works here after this modify.. ",
    "njbmartin": "You're right. Messed up the copy pasta. ",
    "yordis": "@vjeux your first comment makes sense if you wouldn't talk about React ecosystem. I am having a hard time trying to understand why would you use that argument.\n.jsx was invented by React team from the beginning of the time where React appear on the market as long as I remember from 2014 (4 years ago).\nSo yeah, I wouldn't support any random extension that appear but this one do not makes sense at all, React Native is about React, so probably .jsx would be more important than .js itself, but because we started using Babel we forget where we come from.\nOutside that airbnb code style requires it for a really good reason, you are explicit about which file requires JSX syntax and which one doesn't and IDE/Editors likes that extension.\nSeemsGood\nI can't understand your point.. @vjeux your first comment makes sense if you wouldn't talk about React ecosystem. I am having a hard time trying to understand why would you use that argument.\n.jsx was invented by React team from the beginning of the time where React appear on the market as long as I remember from 2014 (4 years ago).\nSo yeah, I wouldn't support any random extension that appear but this one do not makes sense at all, React Native is about React, so probably .jsx would be more important than .js itself, but because we started using Babel we forget where we come from.\nOutside that airbnb code style requires it for a really good reason, you are explicit about which file requires JSX syntax and which one doesn't and IDE/Editors likes that extension.\nSeemsGood\nI can't understand your point.. ",
    "hovox": "We are creating static frameworks and using that instead of directly using pods. Headers are needed to create folly framework. Will revert it. For us would be good to have headers here. Please let me know if it will be merged, I will create a separate pull request with changed headers. Thanks.. We are creating static frameworks and using that instead of directly using pods. Headers are needed to create folly framework. Will revert it. For us would be good to have headers here. Please let me know if it will be merged, I will create a separate pull request with changed headers. Thanks.. To clarify, we are doing that for build performance.. To clarify, we are doing that for build performance.. ",
    "aputinski": "When I was running the build locally, that file was generated and I didn't want to commit any build artifacts. It's unrelated to my change and I can remove it if necessary.. ",
    "JulienKode": "Thanks for the information @hramos I've created a pull request here https://github.com/facebook/react-native-website/pull/176. ",
    "siddhantsoni": "@shergin  Updated PR to handle offset range in single expression.. ",
    "krzysztofciombor": "Hm, this check is currently done in onKeyLongPress (https://github.com/facebook/react-native/pull/16500/files#diff-f3ee27db155d4af4368a3ff1e60a765cR156).\nDo you think it should be moved to here, or do you think it's worth keeping it in both places?. Hm, this check is currently done in onKeyLongPress (https://github.com/facebook/react-native/pull/16500/files#diff-f3ee27db155d4af4368a3ff1e60a765cR156).\nDo you think it should be moved to here, or do you think it's worth keeping it in both places?. Wouldn't that create a tight coupling between ReactRootView and AndroidHWInputDeviceHelper? What if someone would want to reuse the helper in some other place, which theoretically should be possible now since we've made it more generic?. Wouldn't that create a tight coupling between ReactRootView and AndroidHWInputDeviceHelper? What if someone would want to reuse the helper in some other place, which theoretically should be possible now since we've made it more generic?. ",
    "msand": "Good to know.. The new gradle version will choose the build tools version itself, but specifying it here won't (afaik) hurt either.. Is Object preferable to Dynamic here? Both require boxing of primitives, but Object is probably cheaper anyway. Just not completely sure how this would interact with other native libraries for react-native, or how many of them depend on this being a primitive data type. Also the cost of boxing can be quite significant and can even cause heap allocations. A float would take 4 bytes normally, but a Float can be 16(-ish) bytes, plus the cost of the pointer (device/cpu dependent). I'm afraid this could cause a noticeable performance regression in some cases.. I essentially just tried to translate the logic from the js implementation straight. I'll take a look at documenting this once I have some time to spare. Thanks for the review!. I just realised that the JavaOnlyMap will cause autoboxing of the double into a Double already anyway (and the android implementation already uses doubles rather than floats). So using Object should be fine.. True, was mostly thinking it can be reused across instances, so made it shared among them.. ",
    "CFKevinRef": "This is generally how the internal Android tasks work (example) - the full task clears its destination directory and places its outputs there. Directories aren't shared by tasks or merged at any point, they're separate source sets eventually merged into the final package automatically.\nAs far as I can tell, react-native bundle always regenerates a full bundle anyway. Keeping the directory around doesn't provide a benefit, but introduces the possibility of old assets being included until a manual clean.\nWe still have to do the somewhat hacky copy to $buildDir/intermediates/assets/${targetPath} below because unfortunately we only have variant.registerGeneratedResFolders() and not variant.registerGeneratedAssetsFolders().. This is generally how the internal Android tasks work (example) - the full task clears its destination directory and places its outputs there. Directories aren't shared by tasks or merged at any point, they're separate source sets eventually merged into the final package automatically.\nAs far as I can tell, react-native bundle always regenerates a full bundle anyway. Keeping the directory around doesn't provide a benefit, but introduces the possibility of old assets being included until a manual clean.\nWe still have to do the somewhat hacky copy to $buildDir/intermediates/assets/${targetPath} below because unfortunately we only have variant.registerGeneratedResFolders() and not variant.registerGeneratedAssetsFolders().. ",
    "Titozzz": "Hello @vekerdyb , did you get back to this or shall I add it to my march TODO ? :). Okay, I'll tell you if/when I start working on it !. Okay, I'll tell you if/when I start working on it !. Ok so I spent one hour trying to understand what was happening, but I think I finally got it, there was some regressions due to react-native 0.54.0...\nThe function makeBuildPatch gets called with an object instead of the name ..., @grabbou , i'll fix it and we should release 0.54.1 because it completely destroy the detection of previous android links and re-links every time. Ok so I spent one hour trying to understand what was happening, but I think I finally got it, there was some regressions due to react-native 0.54.0...\nThe function makeBuildPatch gets called with an object instead of the name ..., @grabbou , i'll fix it and we should release 0.54.1 because it completely destroy the detection of previous android links and re-links every time. Nevermind i'll just base of https://github.com/facebook/react-native/pull/18131. Nevermind i'll just base of https://github.com/facebook/react-native/pull/18131. Unlink suffers the same issue for android and iOS unlink is broken. Unlink suffers the same issue for android and iOS unlink is broken. Okay so this thing https://github.com/facebook/react-native/commit/2c5fbd7 broke so much stuff everywhere, android linking detection is broken (fixed by https://github.com/facebook/react-native/pull/18131) but also unlinking is broken on android AND iOS.\nFixing everything is going to require more time @vekerdyb @grabbou . Okay so this thing https://github.com/facebook/react-native/commit/2c5fbd7 broke so much stuff everywhere, android linking detection is broken (fixed by https://github.com/facebook/react-native/pull/18131) but also unlinking is broken on android AND iOS.\nFixing everything is going to require more time @vekerdyb @grabbou . Thanks for the fix for android, but you also fixed iOS at the same time by importing the correct file ? Looks like it @rozele \n\n. Thanks for the fix for android, but you also fixed iOS at the same time by importing the correct file ? Looks like it @rozele \n\n. I'll test your fix and make mine from your branch if this works. I'll test your fix and make mine from your branch if this works. Because your branch is being landed, i'll apply my fixes to it \ud83d\udc9b . Because your branch is being landed, i'll apply my fixes to it \ud83d\udc9b . There you go: #18275. There you go: #18275. Fixed \ud83d\ude04 . Fixed \ud83d\ude04 . ",
    "adnanbabar": "The fix works fine within React/Views/RCTPickerManager.m but when I move it within  RCTPicker's initWithFrame it doesn't work. \n@shergin what am I doing wrong?\nThanks\n\n. ",
    "guperrot": "The thing is dependency.config[platform] does not contain dependency.name, should we add dependencyName to dependency.config[platform] object then?. The thing is dependency.config[platform] does not contain dependency.name, should we add dependencyName to dependency.config[platform] object then?. ",
    "charpeni": "Good point!. Negative degrees are handled.\njavascript\nflipAnimation.interpolate({\n  inputRange: [0, 180],\n  outputRange: ['0deg', '180deg'],\n});\njavascript\nflipAnimation.interpolate({\n  inputRange: [0, 180],\n  outputRange: ['0deg', '-180deg'],\n});. Actually, we rely on buildToolsVersion in the CI. That's why test_android is failing.\nhttps://github.com/facebook/react-native/blob/b63015d34ef51585c452142f666d4f36ceaa1b56/scripts/validate-android-test-env.sh#L55\n. ",
    "anp": "@hramos I didn't see this before, but I suspect this might break some of the Metro team's plans. Will it break the import if I edit again?. ",
    "draperunner": "You're right, it is not needed. I tested after removing it, and it still works. I've updated this in the latest commit, 196ce0658b7c71ec5f30b88018d784b49272cc02. You're right, it is not needed. I tested after removing it, and it still works. I've updated this in the latest commit, 196ce0658b7c71ec5f30b88018d784b49272cc02. ",
    "Liamandrew": "It's absolutely not, my bad. I have removed it now.. ",
    "tuncaulubilge": "983e69f. 983e69f. ",
    "jayphelps": "I'll double check the code soon. If I'm remembering correctly, this base mixin is included into TouchableOpacity, etc and is used as the single event handler entry point. This code then defers to touchableHandleActivePressIn and touchableHandleFocus. touchableHandleActivePressIn has default implementations in some of those components, e.g. TouchableBounce provides a touchableHandleActivePressIn which does the bounce effect and then calls props.onPressIn if it was provided. For focus, the idea in this PR would be that Touchable itself has the default implementation of touchableHandleFocus which then defers to onFocus if it was indeed provided. This was done mostly because some custom Touchables might want to have a style/effect change on focus, but I didn't want to make that opinion just yet, though I can definitely see some sort of default style being desirable--wanted to keep the scope narrow to make the discussion easier.\nI'll circle back after I've had a chance to review the codebase again, but do let me know if I'm off base. \ud83d\udc4d . Also to clarify, this PR as it stands does not remove the behavior of onPressIn being called for focus events, it just deprecates it so that it could be removed in a future release so that a true distinction could be made between onPressIn and onFocus, and in follow up PRs potentially opening up onFocus to other platforms than just TV. good catch!. To try and minimize controversy this PR deprecates the behavior of onPressIn/Out being called for focus events on TVs, with the goal of eventually removing it so that on platforms where onFocus and onPressIn make sense it would be supported. As far as Enter/space specifically, I believe that'd be a platform-specific behavior, e.g. on the web hitting space inside of an input does not by default do anything other than add a space character to the input value.\nDoes that make sense?. @dlowder-salesforce I checked the code again, my above description appears correct. Lmk I'm mistaken.. @dlowder-salesforce oops that's not the intent, can you elaborate?. ",
    "danilobuerger": "@bae-unidev you might want to swap that with the permissionCheck as this null check should run faster.. ",
    "andrenerd": "temp solution. but we need built-in one!\nhttp://www.fallingcanbedeadly.com/posts/enabling-react-native-jsx-extension. ",
    "angly-cat": "Changed.. > Out of curiosity, have you tried playing around with code? I missed it for the first time.\nI missed it too, actually. But now when you mentioned it, I'll go and check if it contains zero exit code for successful builds and non-zero code for failed builds. If it does, it would be more clean to use it.\n\nAlso, since we don't really do anything than just if(error), maybe instead of doing error = data.toString() we simply store a variable let hasError or something.\n\nI agree. If code argument contains what I suspect it to contain, then this additional variable may not even be needed. Otherwise, I'll change this code according to your suggestion.. ",
    "jd009": "Misspelling of 'Destroy'.. Minor misspelling here of \"Destroy\" --- should be mReactDelegate.onHostDestroy();. ",
    "ladipro": "My understanding is that responses obtained from the cache will never have such storagePolicy because they would not be inserted in the cache in the first place. I recognize that it would be safer to explicitly check for NSURLCacheStorageAllowed in the second if, though.. No, but it is consistent with what existing functions take on iOS. The JS typing on getSize, prefetch, ..., and now queryCache is technically incorrect because the argument is not limited to only string / array of strings. I do not intend to address the discrepancy in this PR.. ",
    "DimitrisJim": "Any reason why this can't be bumped to higher versions like 3.0.0? As per its release notes, 3.0.0 offers better compilations speeds and requires Build Tools 26.0.2 or higher.. Also, shouldn't the gradle-wrapper.properties distributionUrl be bumped?. ",
    "maicki": "I change it to just compare to Connection has no connected handler, the same as in my_nwlog_legacy_v. Correct, changed back.. Added. Fixed. Done. ",
    "rubennorte": "Hi @chirag04, I don't think that specific error is caused by the @providesModule change, but a bad integration between Metro and Watchman. @mjesun or @rafeca can you please confirm that?. ",
    "vladikoff": "@MattFoley sorry, if you have a moment, what are the steps after these files are created? How can mere mortals upload a forked / custom version to maven or consume it any other way?. ",
    "mjesun": "Hi @hramos \ud83d\ude42 Mentioned you in D8223545 \ud83d\ude09. Hi @hramos \ud83d\ude42 Mentioned you in D8223545 \ud83d\ude09. ",
    "tasomaniac": "should be completely removed. Also libraries should not even define targetSdk. ",
    "hgale": "Thanks for the feedback @sahrens! I'll give that a go and report back if it works.. ",
    "marafat": "Version was locked and updated to latest from [npm/jsc-android]. Test plan succeeded. \ud83e\udd1e on ci tests. ",
    "kelset": "Are you sure this won't need to be updated to classpath 'com.android.tools.build:gradle:3.1.3'?. Which I guess would require this change too: https://github.com/react-native-community/react-native-svg/issues/584#issuecomment-359261019. But I'm not entirely sure, so yeah just asking. nvm I saw you did a dedicated PR for that https://github.com/facebook/react-native/pull/19697. awesome, thanks for clarifying, as soon as we have a new RC out I'll test and report back :). Why is this not \"metro-react-native-babel-preset\": \"0.43.x\"?. for all the beta, I think we want to have babel 7.0 support ASAP so I think we should not merge this until we have everything on 7.0.. uhm maybe this fixes https://github.com/facebook/react-native/issues/19859? Not sure. yup, there is already a PR for that :). TBH since the PR is passing all the tests  I'd prefer to first have the Metro team release a new version and synch up RN master https://github.com/facebook/metro/pull/233. ah yeah sorry I'm dumb \ud83d\ude48. I agree with having separate versioning, but this means that the new repo must have a table of compatibility of some sort. I feel that to keep RN and the CLI separated but having them both using these utils the separate package option is a valid solution. I agree with Ruben's feedback, once the PR is updated I'll try to import it :) Thanks for doing this btw \ud83d\udc4f. would you mind just adding a comment for our future selves, something like\ntemporary workaround for 0.57 and Metro 48\nso that if I encounter any issue in future releases/cherry-picks I can quickly remember what this was about?. ",
    "dulmandakh": "This patch just works for me, you need to add the changes to android/build.gradle file in the root of your project. Please double check\nBumping gradle plugin to 3.x will cause many issues, like requires build-tools 27. This patch just works for me, you need to add the changes to android/build.gradle file in the root of your project. Please double check\nBumping gradle plugin to 3.x will cause many issues, like requires build-tools 27. Just one ?:  which means \ngradle\nvalue ?: default\nthen default value is ternary operator.\n``` gradle\n '--jobs', ndkJobs ?: project.hasProperty(\"jobs\") ? project.property(\"jobs\") : Runtime.runtime.availableProcessors()\n`\nMeans get ndkJobs value or check if project has \"jobs\" property then get it's value or Runtime.runtime.availableProcessors(). Just one ?:  which means gradle\nvalue ?: default \n```\nthen default value is ternary operator.\n``` gradle\n '--jobs', ndkJobs ?: project.hasProperty(\"jobs\") ? project.property(\"jobs\") : Runtime.runtime.availableProcessors()\n````\nMeans get ndkJobs value or check if project has \"jobs\" property then get it's value or Runtime.runtime.availableProcessors(). fixed, my bad :(. fixed, my bad :(. it's redundant, I'll remove it tomorrow. it's redundant, I'll remove it tomorrow. Android Studio was showing warning, so fixed it \ud83d\ude04 . Android Studio was showing warning, so fixed it \ud83d\ude04 . @gengjiawen change to what?. @gengjiawen change to what?. @gengjiawen sorry, I have no experience of Appveyor. Please provide me exact change to make.. @gengjiawen sorry, I have no experience of Appveyor. Please provide me exact change to make.. IIRC, 3.1.3 is the latest version.. IIRC, 3.1.3 is the latest version.. Changing compile to something else if breaking ReactAndroid build. So I think that it requires some refactoring to fix the issue.. Changing compile to something else if breaking ReactAndroid build. So I think that it requires some refactoring to fix the issue.. @gengjiawen done. @gengjiawen done. @gengjiawen yes, you're right. I'll make changes to use api instead of compile. @gengjiawen yes, you're right. I'll make changes to use api instead of compile. @gengjiawen done, thanks \ud83d\udc4d . @gengjiawen done, thanks \ud83d\udc4d . @janicduplessis got it and ready to push the change, but waiting for CI to become green again.. @janicduplessis got it and ready to push the change, but waiting for CI to become green again.. I think that it might be better to stick to gnustl when we still use gcc. I think that it might be better to stick to gnustl when we still use gcc. this regex will match ts.flow and tsx.flow. I looked into https://github.com/square/okhttp/blob/master/CHANGELOG.md and added those lines. I looked into https://github.com/square/okhttp/blob/master/CHANGELOG.md and added those lines. nativeimagefilters is maven artifact or gradle package name, so if we change that into native-filters Circle CI will fail to find it. Do you have any solution for this? Otherwise, we'll stick with with 1.10 forever.. @hey99xx thanks, removed. BREAK_STRATEGY_HIGH_QUALITY was introduced in 23 or M, and is a default text breaking strategy. Before that BREAK_STRATEGY_SIMPLE was default, which has value of 0.. Maybe adding cache would be a good idea, like you said it'll improve performance for 100s texts.. Maybe adding cache would be a good idea, like you said it'll improve performance for 100s texts.. ",
    "ikesyo": "\n1st of October\n\nLooks like this should be 1st of September, right?. > 1st of October\nLooks like this should be 1st of September, right?. Okay I'll fix!. Okay I'll fix!. Submitted #19751.. Submitted #19751.. Looks like this parameter should be nonnull.\nhttps://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623112-application\n\noptions: [UIApplication.OpenURLOptionsKey : Any] = [:]\nBy default, the value of this parameter is an empty dictionary.. Thers is already an ongoing PR https://github.com/facebook/react-native/pull/21782, and the capitalized targetName seems incorrect. This should be non-capitalized variant.name and that is #21782.. Thers is already an ongoing PR https://github.com/facebook/react-native/pull/21782, and the capitalized targetName seems incorrect. This should be non-capitalized variant.name and that is #21782.. \n",
    "jason-feng": "@shergin @kevinresol any updates?. ",
    "iegik": "https://github.com/facebook/react-native/releases/tag/v0.40.0\n\n\nThis change affects all native modules and application code on iOS that refer to react native .h files\n\nAfter e1577df, Native code on iOS must refer to headers out of the react namespace. Previously the following would work:\n#import \"RCTUtils.h\"\nBut now all headers have been moved:\n#import <React/RCTUtils.h>\nThis means that all iOS native libraries need a major version bump for RN 0.40. We attempt to minimize changes of this magnitude, and we apologize for any inconvenience caused.. \n",
    "patrickkempff": "@janicduplessis why aren't you using RCTKeyWindow().safeAreaInsets? Otherwise it will force the view controller to load the view.. @janicduplessis why aren't you using RCTKeyWindow().safeAreaInsets? Otherwise it will force the view controller to load the view.. Oh that is strange. ~Just to verify you are not running the code in a app extension right? Because RCTSharedApplication is returning nil when RCTRunningInAppExtension returns true.~ i need sleep, ofcourse you are not, RCTKeyWindow is returning not nil otherwise it did not work at all.\nAs an example we are using this is a large scale production app:\n```objc\n- (NSDictionary *) constantsToExport {\n    return @{\n             @\"SAFE_AREA_INSETS_TOP\": @([self safeAreaInsetsTop]),\n             @\"SAFE_AREA_INSETS_BOTTOM\": @([self safeAreaInsetsBottom])\n             };\n}\n\n\n(CGFloat) safeAreaInsetsTop {\n    if (@available(iOS 11.0, *)) {\n        return UIApplication.sharedApplication.keyWindow.safeAreaInsets.top;\n    }\n    return 0;\n}\n\n\n(CGFloat) safeAreaInsetsBottom {\n    if (@available(iOS 11.0, *)) {\n        return UIApplication.sharedApplication.keyWindow.safeAreaInsets.bottom;\n    }\n    return 0;\n}\n```\n\n\nI wanted to open a PR myself but awesome that you are doing this already. thanks!. Oh that is strange. ~Just to verify you are not running the code in a app extension right? Because RCTSharedApplication is returning nil when RCTRunningInAppExtension returns true.~ i need sleep, ofcourse you are not, RCTKeyWindow is returning not nil otherwise it did not work at all.\nAs an example we are using this is a large scale production app:\n```objc\n- (NSDictionary *) constantsToExport {\n    return @{\n             @\"SAFE_AREA_INSETS_TOP\": @([self safeAreaInsetsTop]),\n             @\"SAFE_AREA_INSETS_BOTTOM\": @([self safeAreaInsetsBottom])\n             };\n}\n\n\n(CGFloat) safeAreaInsetsTop {\n    if (@available(iOS 11.0, *)) {\n        return UIApplication.sharedApplication.keyWindow.safeAreaInsets.top;\n    }\n    return 0;\n}\n\n\n(CGFloat) safeAreaInsetsBottom {\n    if (@available(iOS 11.0, *)) {\n        return UIApplication.sharedApplication.keyWindow.safeAreaInsets.bottom;\n    }\n    return 0;\n}\n```\n\n\nI wanted to open a PR myself but awesome that you are doing this already. thanks!. I tihnk this is the wrong error message for xcodebuild. I tihnk this is the wrong error message for xcodebuild. ",
    "kimihiro64": "I will look into that, wasn't thinking about it as I was assuming user's going to be entering valid scheme and such- can't user self-shell injection be a feature? :p. Will do. Will do. ",
    "magicien": "@shergin @kevinresol @hramos Apologies for taking so long to reply.\nI would like to make sure what @shergin means.\n@shergin, do you mean this code?\n- (void)setText:(NSString *)text\n{\n  _text = text;\n  _previousAttributedText = _localAttributedText;\n  [self dirtyLayout];\n}\nI'm wondering if it needs to call dirtyLayout because dirtyLayout is called after setText is called. Calling dirtyLayout could be safer, though.\nIf the above code is the expected one, I will update this PR.\n. @shergin Thank you for your review!\n\nI think, it's clear that we want to make affect this condition, right?\n\nExactly. It changes _previousAttributedText to notify the view that text native prop is set.\nI tested _previousAttributedText = nil; with the test app and I confirmed that it worked as expected.\n. ",
    "matthargett": "I suggest doing appveyor-retry npm to make it resilient against intermittent network issues. I added this in the react-native-windows AppVeyor configuration to eliminate a not-uncommon source of flakiness. https://github.com/Microsoft/react-native-windows/blob/master/appveyor.yml#L40\nYou may also want to add appveyor-retry npm install npm@lts as the first command. We also did that to combat flakiness around the npm 5 era.. Fixed. Yes, that would be a good place to propose a new API, or discuss on the contributor's slack.. why not just have the render throw(\"Not implemented\") or something similar? or just export require('UnimplementedView'); like the other files?. same question here -- why not just throw?. why empty here and not require('UnimplementedView'); as elsewhere?. if require('UnimplementedView'); can't work here, let's inline the assignment as elsewhere.. yes. apollo-server just needed the constructor and toString() to work, but I went ahead and implemented toJSON and href so I could bring over some of the existing unit tests. . I changed it due to a flow warning about mixed exports from before I disabled flow. Is there a reason ES6 export wasn't part of the general sweep to convert things to ES6 classes, etc?. I could not find anyone who got flow working with Symbol.iterator(), and only found issues where flow maintainers said the necessary annotation feature would not be added to flow. The whatwg-fetch implementation we have in-tree also doesn't have flow annotation, so I opted to fall in line with that. Let me know if it's a showstopper.. how does this affect out-of-tree platforms? cc @empyrical @rozele . ",
    "albert-carreras": "Would be nice to have a reply/merge @shergin to resolve this. IMO, the PR is working as it is, and the suggested change doesn't seem to work.. ",
    "wangjoshuah": "Just removed it. I agree it could lead to some hard to debug scenarios if things work locally but differently against a server.. ",
    "stephencookdev": "Nice, thanks for this! I've used your suggestion in c580a505c1fb6fe75aa314ebbea28c328b59572a and included your test string in the test view, as well as writing some UTs.\nAlthough, I'm struggling to run them and I've noticed this in the UTs BUCK file:\nrn_robolectric_test(\n    name = \"views\",\n    # TODO Disabled temporarily until Yoga linking is fixed t14964130\n    # srcs = glob(['**/*.java']),\n    srcs = glob([\"image/*.java\"]),\nI can't see that issue, or run the Text UTs without hitting the linking issue mentioned \ud83e\udd14 (so my UTs... probably work? \ud83d\ude05)\nNot sure if anyone knows a way around this?. Nice, thanks for this! I've used your suggestion in c580a505c1fb6fe75aa314ebbea28c328b59572a and included your test string in the test view, as well as writing some UTs.\nAlthough, I'm struggling to run them and I've noticed this in the UTs BUCK file:\nrn_robolectric_test(\n    name = \"views\",\n    # TODO Disabled temporarily until Yoga linking is fixed t14964130\n    # srcs = glob(['**/*.java']),\n    srcs = glob([\"image/*.java\"]),\nI can't see that issue, or run the Text UTs without hitting the linking issue mentioned \ud83e\udd14 (so my UTs... probably work? \ud83d\ude05)\nNot sure if anyone knows a way around this?. Could we not just make handleEvent be more robust, so it can handle the cleanup not having occurred?\nThat way, we can be more flexible with when we do the cleanup. Could we not just make handleEvent be more robust, so it can handle the cleanup not having occurred?\nThat way, we can be more flexible with when we do the cleanup. ",
    "rafeca": "Can you force to install the same metro-react-native-babel-preset version as the Metro version that RN is depending on?. ",
    "zhongwuzw": "@shergin Thanks for review. It's true that we should not rely details on third library. The reason I don't remove the line of resets the flag is maybe other code may query YGNodeGetHasNewLayout of this node, but actually, we don't have this check currently, IMO, maybe keep this reset is ok, we can keep the same way, when we reset it, it means we already layout the views.\nSo what's your opinion? \ud83e\udd14 We can remove hasNewLayout check? Or just to abandon this PR?. @shergin Thanks for review. It's true that we should not rely details on third library. The reason I don't remove the line of resets the flag is maybe other code may query YGNodeGetHasNewLayout of this node, but actually, we don't have this check currently, IMO, maybe keep this reset is ok, we can keep the same way, when we reset it, it means we already layout the views.\nSo what's your opinion? \ud83e\udd14 We can remove hasNewLayout check? Or just to abandon this PR?. ~~Yeah, I looked into this again, and we do all network callback on _workQueue, for the sake of thread safe, we put _cleanupSelfReference on _workQueue would be better.~~\nSeems still need to schedule on RCTSR_networkRunLoop, because (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode would be called even WebSocket already be wild pointer, so strange.. ~~Yeah, I looked into this again, and we do all network callback on _workQueue, for the sake of thread safe, we put _cleanupSelfReference on _workQueue would be better.~~\nSeems still need to schedule on RCTSR_networkRunLoop, because (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode would be called even WebSocket already be wild pointer, so strange.. @janicduplessis Emm, we need to schedule cleanup on RCTSR_networkRunLoop, seems we have no dispatch_queue here. Maybe we can use performSelector, but we can keep use timer, because they are the same actually.. @janicduplessis Emm, we need to schedule cleanup on RCTSR_networkRunLoop, seems we have no dispatch_queue here. Maybe we can use performSelector, but we can keep use timer, because they are the same actually.. @janicduplessis In theory, we don't need to check work queue nullable, the reason I add this is to add the further safe check, because if work queue is null, it would crash immediately.. @janicduplessis In theory, we don't need to check work queue nullable, the reason I add this is to add the further safe check, because if work queue is null, it would crash immediately.. @janicduplessis  \ud83d\udc4d We can extract it to a separate method.. @janicduplessis  \ud83d\udc4d We can extract it to a separate method.. Only pass responseDate or cacheControl may not sufficient, we can just pass response that we can get any response header we want.. Only pass responseDate or cacheControl may not sufficient, we can just pass response that we can get any response header we want.. Remove warning.. Remove warning.. @janicduplessis \ud83d\udc4d I removed !reactTextAttributes.effectiveTextAttributes check because it cannot be nil.. @janicduplessis \ud83d\udc4d I removed !reactTextAttributes.effectiveTextAttributes check because it cannot be nil.. @cpojer Yes, please see #23625 .. @cpojer Yes, please see #23625 .. @shergin \ud83d\udc4d Done.. @shergin \ud83d\udc4d Done.. Good to improve portability \ud83d\udc4d , just only __OBJC__ may defined this macro? I think it's the compiler attribute, GCC or other compiler not support?. Good to improve portability \ud83d\udc4d , just only __OBJC__ may defined this macro? I think it's the compiler attribute, GCC or other compiler not support?. And I think it's __unused, not ___unused?. And I think it's __unused, not ___unused?. I think we need to change all __unused macro in ReactCommon if it has portable issue.. I think we need to change all __unused macro in ReactCommon if it has portable issue.. Actually __unused may not happen, because __unused macro would be expanded to __attribute__((unused)) by compiler automatically.. @hzxiaosheng Hey, please rebase the branch first, sorry for that, it's our fault.\nAnd I think we need treat any emoji as 1 glyph, so here may wrong, because we still use substring's length to compare with allowedLength.. ",
    "MarkOSullivan94": "Why use implementation for some gradle files and api for others?. ",
    "empyrical": "plugins.platforms is an array of strings like this:\njavascript\n[ 'react-native-foo/local-cli/platform.js' ]\nWhich it gets from an entry in react-native-foo's package.json like this:\njavascript\n  \"rnpm\": {\n    \"platform\": \"./local-cli/platform.js\"\n  }\nBut getProvidesModuleNodeModules() just wants entries like react-native-foo, so unless I did something wrong this doesn't seem to work. \nBTW, I just discovered this repo:\nhttps://github.com/react-native-community/discussions-and-proposals/issues\nPerhaps a discussion on how renderer plugins could be implemented could be started there too?. plugins.platforms is an array of strings like this:\njavascript\n[ 'react-native-foo/local-cli/platform.js' ]\nWhich it gets from an entry in react-native-foo's package.json like this:\njavascript\n  \"rnpm\": {\n    \"platform\": \"./local-cli/platform.js\"\n  }\nBut getProvidesModuleNodeModules() just wants entries like react-native-foo, so unless I did something wrong this doesn't seem to work. \nBTW, I just discovered this repo:\nhttps://github.com/react-native-community/discussions-and-proposals/issues\nPerhaps a discussion on how renderer plugins could be implemented could be started there too?. I am not entirely sure what this means. I am not entirely sure what this means. StatusBarIOS isn't a React component\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/StatusBar/StatusBarIOS.ios.js\nNone if this code will be ran at all at any point - it is purely for the bundler's sake, so the actual code isn't that important. A lot of the shims, like DummySegmentedControlIOS are just copied over from Android shims in the RN codebase. Sorry for not making this clearer! I'll edit the main post. StatusBarIOS isn't a React component\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/StatusBar/StatusBarIOS.ios.js\nNone if this code will be ran at all at any point - it is purely for the bundler's sake, so the actual code isn't that important. A lot of the shims, like DummySegmentedControlIOS are just copied over from Android shims in the RN codebase. Sorry for not making this clearer! I'll edit the main post. That makes sense! Reducing the public api surface area is a good thing.. I had a look around the codebase and for callbacks like this it seems to use Element. Can reverse this.. After I converted it to a React class, it being nullable had a lot of type errors like this:\n```\nundefined [1] is not a number.\n[1]  59\u2502   maxSwipeDistance?: ?number,\n        :\n     306\u2502     const maxSwipeDistance = IS_RTL\n     307\u2502       ? -this.props.maxSwipeDistance\n     308\u2502       : this.props.maxSwipeDistance;\n     309\u2502     this._animateTo(-maxSwipeDistance, duration);\n     310\u2502   }\n     311\u2502\n     312\u2502   _animateToClosedPosition(duration: number = SWIPE_DURATION): void {\n```\nBut it has a default prop for maxSwipeDistance, so I removed the nullability because the flow docs mention this:\n\nNote: You don\u2019t need to make foo nullable in your Props type. Flow will make sure that foo is optional if you have a default prop for foo.\n\nWhen it's a creatReactClass again, I should revert this because that notice will no longer be relevant.. \ud83e\udd26\u200d\u2642\ufe0f D'oh. Fixed. Fixed \ud83e\udd26\u200d\u2642\ufe0f. Fixed!. Renamed it. Renamed it. And also re-organized these. And also re-organized these. I am not sure - I tried a few events out, and they all seemed to have it - but those were all touch-related, so that it probably why. I will make it nullable, but will require some more modifications to panresponder. Tried that, and it works great! \ud83d\udc4d . \ud83d\udc4d will take a look at this. Also I realize that the type for touchHistory.touchBank is wrong, so I will fix that too.. Thanks, didn't know about that one. Much cleaner!. Flow seemed fine with removing it. Thinking a top level function in the module, or a static method?. Several places in PanResponder change the values of gestureState, so setting this to $ReadOnly raises many errors. Not all of the functions have the same signature (see the types in PanResponderConfig) so this wouldn't work (unless I had it be a type like: {[key: string]: ActiveCallback | PassiveCallback}). Fixed!. Spaced them out. This might raise an eyebrow, so thought I'd explain reason I typed event like this; the nativeEvent for onPress is nil in the native code:\nhttps://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/React/Views/RCTTabBar.m#L203-L213. Good catch, fixed that up. It doesn't look like it passes any props to this callback. So you should be able to type this like:\njs\nrender: () => React.Element<any>,. You should change this up, so instead of importing and using DangerouslyImpreciseStyleProp, it uses ViewStyleProp. Should make it exact using |, like:\njs\ntype Props = $ReadOnly<{|\n\u00a0//...\n|}>;\n. children should be typed like this:\njs\nchildren?: React.Node,. Deprecated is misspelled here. should the @providesModule pragma be removed?. Looks very good! Should be made $ReadOnly and exact ({| |}) as well.. Unfortunately, due to some of the things I had to do for ref forwarding, Flow isn't able to detect the default prop types. This perhaps can be fixed when proper forwardRef support is added.. \ud83d\udc4d . \ud83d\udc4d . Should that be done in this PR, or a separate PR? (in case this one needs to be reverted). I would like to fill out the different event types (and the callbacks that use them) but would like to do that in a separate diff. When I typed it with a string like that, it seemed to interpret it as a ref to a DOM element. I think those sites have a FlowFixMe that suppresses type errors. The bit that needs to be copied for now specifically is the FlowFixMe comment above the forwardref call, to suppress the type errors. You can type the event like this:\n```js\n// Need to add this to your imports\nimport type {SyntheticEvent} from 'CoreEventTypes';\ntype Event = SyntheticEvent<\n  $ReadOnly<{|\n    value: number,\n    selectedSegmentIndex: number,\n  |}>,\n\n;\n```. Once the event is typed, you could type these callbacks like:\n\n```js\n  onValueChange?: ?(value: number) => mixed,\nonChange?: ?(event: Event) => mixed,\n``. Unfortunately, due to this being passed throughReact.forwardRef, it's not able to properly detectdefaultProps. Unfortunately, due to this being passed throughReact.forwardRef, it's not able to properly detectdefaultProps`. So it needs to be re-made optional\nsuggestion\n  enabled?: ?boolean,. Curious about thoughts on this. Is it left over from an old RN version? Not sure if it is safe to remove.. It also fixes this Flow error that is showing up for me locally and some other people:\n```\nError \u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508\u2508 Libraries/Core/polyfillPromise.js:21:33\nImporting from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of Promise?\n(untyped-import)\n 18\u2502  * If you don't need these polyfills, don't use InitializeCore; just directly\n 19\u2502  * require the modules you need from InitializeCore for setup.\n 20\u2502  */\n 21\u2502 polyfillGlobal('Promise', () => require('Promise'));\n 22\u2502\n\n```\nI don't know why this error isn't showing up on CircleCI (I also did a clean re-install of all node_modules and this still appears)\nForgot to add that to the main PR message, sorry!. It's resolving to node_modules/promise/index.js.\nThe particular version of promise RN is using doesn't have a Flow type stub which is probably why this is showing up as any. The latest version (8.0.2) has it, however:\nhttps://github.com/then/promise/commit/c98808978c0eda314c36268e284da219064348cb\nA less ideal but simpler alternative however could be to just remove strict-local on polyfillPromise, since it's (supposed to be) the only place where promise is required directly.\n(I am still not sure why it's working on CircleCI but not on my machine however \ud83e\udd14 ). It looks like timestamp can only be a number:\nhttps://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/React/Views/RCTDatePicker.m#L32-L37. sounds like a good idea! with the delay, maybe I should instead split this helper function into its own pull request?. These will probably differ when Fabric is more fully released, but this is what I could deduce of these types from what's in OSS\nhttps://github.com/facebook/react-native/blob/master/ReactCommon/fabric/components/view/TouchEventEmitter.cpp. It looks like when I typed PressEvent I didn't know most of that would only get assigned if Fabric was being used. I will have to look more closely and see if most of that is relevant to PressEvent and if I should slim it down, or remove TouchEvent for being redundant (and rename PressEvent to TouchEvent, perhaps).\nIt looks like these might be the same event props as the ones on ScrollView, but it looks like all Views might be getting these events. I will see if I can get some information about these props in #fabric. I added that event argument because the documentation comment above it mentions there being an event argument, and PanResponder has the argument too:\nhttps://github.com/facebook/react-native/blob/0ea95e70a3c00ec0e940fa918cb390ee402ad6db/Libraries/Interaction/PanResponder.js#L528-L532\nBut looking at all of the callsites in OSS RN, it seems like a significant amount don't use the event argument. So not sure how to type this. Should I omit the event?. I can't quite figure out whether or not it does , and I cannot seem to contrive an example where this event will fire so I can't do a good ol' console.log(event) to see at runtime if it's getting an event. (If someone who knows their way around it better can provide an example where this event will fire, that would be handy! Maybe we can automatically test these in the future)\nHowever, because PanResponder has the argument on its callback, if you spread the panresponder you get from PanResponder.create() on to a View, there will be a flow error. So to get around this I may need to modify PanResponder, which I'm not sure if I should do or not.. I think that TouchEvent might be redundant with PressEvent (thanks for pointing that out!) I will remove it for now, and could revisit it when Fabric is in OSS. I would have to remove strict-local to do that (there's flow errors otherwise). If you're okay with putting off having strict-local on this file (or, I do a $FlowFixMe) for now perhaps we could do that. They will have all of the properties that are in PressEvent (because they are an implementation of W3C touch events), but the only uncertainty I had was whether or not the TouchEvent I made was redundant.. I messed that up, thanks for pointing that out! The fact that this didn't cause any CI failures means that ifdef __OBJC__ wasn't even working on iOS, so I have to figure something else out.\nAs for other platforms, C++17 has the [[maybe_unused]] attribute and GCC has the __attribute__((unused)) that could possibly be added in to this macro on available platforms. __unused is simply a macro, so I tweaked it to just check for its definition instead.. Oh - I did not notice that it was in other files too! I am trying to just build the fabric stuff on MSVC right now, and this is the only cxxreact file directly depended on by Fabric (right now).\nThis tweak should be done to other files, but I would like to keep this pull request small for now - will make it a bit simpler to figure out if the macro I made will have issues when it is merged and ran through Facebook's internal tests. Yeah, it looks fine for me in that regard. I can try and test it out later and see if everything still works just to double check. ",
    "UrbanChrisy": "Fixed linting. ",
    "vdlindenmark": "@shergin, bump. ",
    "se-bastiaan": "If someone is using this directly then it is, but I don't think you should be using it like that. The real exposed documented API is defined in Image.ios.js and is not changed in behaviour at all.. https://github.com/facebook/react-native/pull/18850#discussion_r253265098. https://github.com/facebook/react-native/pull/18850#discussion_r253265098. Missed comment disabling the rule. @hramos. ",
    "analysis-bot": "prettier/prettier: Replace \"(\",\u00b7\"\\\\(\").replace(\")\",\u00b7\"\\\\)\")}`` with'(',\u00b7'\\(').replace(')',\u00b7'\\)')},. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Insert ,. prettier/prettier: Insert ,. dot-notation: [\"i4\"] is better written in dot notation.. Cannot assign args.watchFolders to config.watchFolders because read-only array type [1] is incompatible with array type [2].. semi: Missing semicolon.. no-shadow: 'options' is already declared in the upper scope.. quotes: Strings must use singlequote.. comma-dangle: Missing trailing comma.. handle-callback-err: Expected error to be handled.. curly: Expected { after 'if' condition.. comma-dangle: Missing trailing comma.. handle-callback-err: Expected error to be handled.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. no-shadow: 'options' is already declared in the upper scope.. quotes: Strings must use singlequote.. handle-callback-err: Expected error to be handled.. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Replace this._stackEntry,\u00b7this.props with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._stackEntry,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this.props,\u23ce\u00b7\u00b7\u00b7\u00b7. Missing type annotation for props.. react-native/no-inline-styles: Inline style: { borderWidth: 10,\n  borderTopLeftRadius: 10,\n  borderBottomRightRadius: 20,\n  borderColor: 'green' }. react-native/no-inline-styles: Inline style: { borderWidth: 5,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 20,\n  borderBottomRightRadius: 30,\n  borderBottomLeftRadius: 40,\n  borderColor: 'red' }. react-native/no-inline-styles: Inline style: { borderWidth: 10,\n  borderTopLeftRadius: 10,\n  borderBottomRightRadius: 20,\n  borderColor: 'green' }. react-native/no-inline-styles: Inline style: { borderWidth: 5,\n  borderTopLeftRadius: 10,\n  borderTopRightRadius: 20,\n  borderBottomRightRadius: 30,\n  borderBottomLeftRadius: 40,\n  borderColor: 'red' }. prettier/prettier: Replace dateVal\u00b7!=\u00b7null\u00b7&&\u00b7typeof\u00b7dateVal\u00b7==\u00b7'object'\u00b7&&\u00b7typeof\u00b7dateVal.getMonth\u00b7===\u00b7'function' with \u23ce\u00b7\u00b7\u00b7\u00b7dateVal\u00b7!=\u00b7null\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7typeof\u00b7dateVal\u00b7==\u00b7'object'\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7typeof\u00b7dateVal.getMonth\u00b7===\u00b7'function'\u23ce\u00b7\u00b7. eqeqeq: Expected '===' and instead saw '=='.. prettier/prettier: Replace dateVal\u00b7!=\u00b7null\u00b7&&\u00b7typeof\u00b7dateVal\u00b7==\u00b7'object'\u00b7&&\u00b7typeof\u00b7dateVal.getMonth\u00b7===\u00b7'function' with \u23ce\u00b7\u00b7\u00b7\u00b7dateVal\u00b7!=\u00b7null\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7typeof\u00b7dateVal\u00b7==\u00b7'object'\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7typeof\u00b7dateVal.getMonth\u00b7===\u00b7'function'\u23ce\u00b7\u00b7. eqeqeq: Expected '===' and instead saw '=='.. Cannot get StyleSheet.Styles because property Styles is missing in object literal [1].. Cannot get StyleSheet.Styles because property Styles is missing in object literal [1].. Cannot reference type PointProp [1] from a value position.. Cannot reference type PointProp [1] from a value position.. prettier/prettier: Replace (number) with number. prettier/prettier: Replace (number) with number. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. eol-last: Newline required at end of file but not found.. no-unused-vars: 'sendComment' is defined but never used.. no-unused-vars: 'sendComment' is defined but never used.. Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). eqeqeq: Expected '===' and instead saw '=='.. eqeqeq: Expected '===' and instead saw '=='.. eqeqeq: Expected '===' and instead saw '=='.. eqeqeq: Expected '===' and instead saw '=='.. Unclear type. Using any, Object, Function, $Subtype<...>, or $Supertype<...> types is not safe! (unclear-type). semi: Missing semicolon.. semi: Missing semicolon.. semi: Missing semicolon.. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7'../../vendor/core/_shouldPolyfillES6Collection',\u23ce\u00b7\u00b7\u00b7\u00b7()\u00b7=>\u00b7true\u23ce\u00b7\u00b7 with '../../vendor/core/_shouldPolyfillES6Collection',\u00b7()\u00b7=>\u00b7true. quotes: Strings must use singlequote.. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7'../../vendor/core/_shouldPolyfillES6Collection',\u23ce\u00b7\u00b7\u00b7\u00b7()\u00b7=>\u00b7true\u23ce\u00b7\u00b7 with '../../vendor/core/_shouldPolyfillES6Collection',\u00b7()\u00b7=>\u00b7true. quotes: Strings must use singlequote.. prettier/prettier: Replace \"Map\" with 'Map'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"is\u00b7not\u00b7native\" with 'is\u00b7not\u00b7native'. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. quotes: Strings must use singlequote.. prettier/prettier: Replace \"[native\u00b7code]\" with '[native\u00b7code]'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"Map\" with 'Map'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"is\u00b7not\u00b7native\" with 'is\u00b7not\u00b7native'. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. quotes: Strings must use singlequote.. prettier/prettier: Replace \"getIndex\" with 'getIndex'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"should\u00b7tolerate\u00b7non-extensible\u00b7object\u00b7keys\" with 'should\u00b7tolerate\u00b7non-extensible\u00b7object\u00b7keys'. new-parens: Missing '()' invoking a constructor.. prettier/prettier: Insert (). prettier/prettier: Replace \"should\u00b7not\u00b7get\u00b7confused\u00b7by\u00b7prototypal\u00b7inheritance\" with 'should\u00b7not\u00b7get\u00b7confused\u00b7by\u00b7prototypal\u00b7inheritance'. quotes: Strings must use singlequote.. new-parens: Missing '()' invoking a constructor.. prettier/prettier: Insert (). prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7'../../vendor/core/_shouldPolyfillES6Collection',\u23ce\u00b7\u00b7\u00b7\u00b7()\u00b7=>\u00b7true\u23ce\u00b7\u00b7 with '../../vendor/core/_shouldPolyfillES6Collection',\u00b7()\u00b7=>\u00b7true. quotes: Strings must use singlequote.. prettier/prettier: Replace \"Set\" with 'Set'. prettier/prettier: Replace \"is\u00b7not\u00b7native\" with 'is\u00b7not\u00b7native'. quotes: Strings must use singlequote.. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. quotes: Strings must use singlequote.. prettier/prettier: Replace \"[native\u00b7code]\" with '[native\u00b7code]'. prettier/prettier: Replace \"should\u00b7tolerate\u00b7non-extensible\u00b7object\u00b7elements\" with 'should\u00b7tolerate\u00b7non-extensible\u00b7object\u00b7elements'. quotes: Strings must use singlequote.. new-parens: Missing '()' invoking a constructor.. prettier/prettier: Insert (). quotes: Strings must use singlequote.. prettier/prettier: Replace \"should\u00b7not\u00b7get\u00b7confused\u00b7by\u00b7prototypal\u00b7inheritance\" with 'should\u00b7not\u00b7get\u00b7confused\u00b7by\u00b7prototypal\u00b7inheritance'. new-parens: Missing '()' invoking a constructor.. prettier/prettier: Insert (). prettier/prettier: Replace \u00b7freeze,\u00b7seal,\u00b7preventExtensions\u00b7 with freeze,\u00b7seal,\u00b7preventExtensions. prettier/prettier: Replace \u00b7freeze,\u00b7seal,\u00b7preventExtensions\u00b7 with freeze,\u00b7seal,\u00b7preventExtensions. no-unused-vars: 'ReactNative' is assigned a value but never used.. no-unused-vars: 'ReactNative' is assigned a value but never used.. no-unused-vars: 'ReactNative' is assigned a value but never used.. react-native/no-inline-styles: Inline style: { backgroundColor: '#0000ff' }. no-undef: 'AbsolutePositionTestAppStyles' is not defined.. no-undef: 'AbsolutePositionTestAppStyles' is not defined.. prettier/prettier: Replace \u00b7backgroundColor:\u00b7'#ff0000'\u00b7 with backgroundColor:\u00b7'#ff0000'. prettier/prettier: Replace \u00b7backgroundColor:\u00b7'#0000ff'\u00b7 with backgroundColor:\u00b7'#0000ff'. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7active:\u00b7false\u00b7 with active:\u00b7false. prettier/prettier: Replace \u00b7active:\u00b7true\u00b7 with active:\u00b7true. prettier/prettier: Replace \u00b7text:\u00b7text\u00b7 with text:\u00b7text. prettier/prettier: Delete ;. no-extra-semi: Unnecessary semicolon.. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete ;. prettier/prettier: Delete ;. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete ;. no-extra-semi: Unnecessary semicolon.. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete ;. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ,. prettier/prettier: Delete ;. no-extra-semi: Unnecessary semicolon.. react-native/no-inline-styles: Inline style: { backgroundColor: '#ff0000' }. react-native/no-inline-styles: Inline style: { backgroundColor: '#0000ff' }. null: Parsing error: Unexpected token, expected \",\"\n83 | \n  84 | \n\n85 |    scrollTo(destX, destY) {\n     |    ^\n  86 |     this.refs.scrollView.scrollTo(destY, destX);\n  87 |   }\n  88 |. react/no-string-refs: Using this.refs is deprecated.. react/no-string-refs: Using this.refs is deprecated.. keyword-spacing: Expected space(s) after \"if\".. prettier/prettier: Insert \u00b7. prettier/prettier: Replace config.resolver.sourceExts with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7config.resolver.sourceExts,\u23ce\u00b7\u00b7\u00b7\u00b7. null: Parsing error: Unexpected token, expected \")\"\n\n27 | \n  28 | class MovingBar extends React.Component {\n\n29 |   _intervalID: (null: ?IntervalID);\n     |                     ^\n  30 | \n  31 |   state = {\n  32 |     progress: 0,. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7onAccessibilityEscape={()\u00b7=>\u00b7alert('onAccessibilityEscape\u00b7success')} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7onAccessibilityEscape={()\u00b7=>\u00b7alert('onAccessibilityEscape\u00b7success')}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. no-alert: Unexpected alert.. no-alert: Unexpected alert.. prettier/prettier: Delete \u00b7. prettier/prettier: Delete \u00b7. prettier/prettier: Replace function\u00b7 with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7function. no-shadow: 'value' is already declared in the upper scope.. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace },\u00b7function\u00b7 with \u00b7\u00b7},\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7function. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace } with \u00b7\u00b7},\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete ;. no-shadow: 'value' is already declared in the upper scope.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace 'shouldn\\'t\u00b7recurse\u00b7infinitely' with \"shouldn't\u00b7recurse\u00b7infinitely\". prettier/prettier: Replace nextProps:\u00b7Props,\u00b7prevState:\u00b7State with \u23ce\u00b7\u00b7\u00b7\u00b7nextProps:\u00b7Props,\u23ce\u00b7\u00b7\u00b7\u00b7prevState:\u00b7State,\u23ce\u00b7\u00b7. no-alert: Unexpected alert.. no-alert: Unexpected alert.. prettier/prettier: Replace \u23ce\u00b7\u00b7danger.github.pr.body,\u23ce with danger.github.pr.body. jest/no-disabled-tests: Skipped test. react-native/no-inline-styles: Inline style: { flexDirection: 'row',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: 10 }. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{textLog}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 with {textLog}. react-native/no-inline-styles: Inline style: { textTransform: 'uppercase',\n  fontSize: 16,\n  color: 'turquoise',\n  backgroundColor: 'blue',\n  lineHeight: 32,\n  letterSpacing: 2,\n  alignSelf: 'flex-start' }. react-native/no-inline-styles: Inline style: { textTransform: 'uppercase',\n  fontSize: 16,\n  color: 'turquoise',\n  backgroundColor: 'blue',\n  lineHeight: 32,\n  letterSpacing: 2,\n  alignSelf: 'flex-start' }. jest/no-disabled-tests: Skipped test. jest/no-disabled-tests: Skipped test. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. no-undef: 'payload' is not defined.. prettier/prettier: Replace \u00b7:'wine' with :\u00b7'wine',. comma-dangle: Missing trailing comma.. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. no-undef: 'payload' is not defined.. prettier/prettier: Replace \u00b7:'wine' with :\u00b7'wine',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7:'wine' with :\u00b7'wine',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7:'wine' with :\u00b7'wine',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7[name:\u00b7string]:\u00b7string\u00b7 with [name:\u00b7string]:\u00b7string. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7'content-disposition':\u00b7contentDisposition\u00b7 with 'content-disposition':\u00b7contentDisposition. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7string:\u00b7JSON.stringify(value.value),\u00b7headers,\u00b7fieldName:\u00b7name with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7string:\u00b7JSON.stringify(value.value),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7headers,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7fieldName:\u00b7name,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Replace \u00b7...value,\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with ...value,\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Replace \u00b7string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name\u00b7 with string:\u00b7String(value),\u00b7headers,\u00b7fieldName:\u00b7name. prettier/prettier: Delete \u23ce. prettier/prettier: Replace \u00b7:\u00b7'wine\u00b7bottle' with :\u00b7'wine\u00b7bottle',. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. react-native/no-inline-styles: Inline style: { width: 50, height: 50 }. react-native/no-inline-styles: Inline style: { width: 50, height: 50 }. prettier/prettier: Replace \u00b7style={{flex:\u00b71,\u00b7flexDirection:\u00b7'row',\u00b7justifyContent:'space-between' with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={{\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flex:\u00b71,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flexDirection:\u00b7'row',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7justifyContent:\u00b7'space-between',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { flex: 1,\n  flexDirection: 'row',\n  justifyContent: 'space-between' }. prettier/prettier: Replace \u00b7onPress={this.showActionSheet}\u00b7style={style.button}\u00b7ref={this.anchorRef}>HERE with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7onPress={this.showActionSheet}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={style.button}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7ref={this.anchorRef}>\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7HERE\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7style={{flex:\u00b71,\u00b7flexDirection:\u00b7'row',\u00b7justifyContent:'space-between' with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={{\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flex:\u00b71,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flexDirection:\u00b7'row',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7justifyContent:\u00b7'space-between',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { flex: 1,\n  flexDirection: 'row',\n  justifyContent: 'space-between' }. prettier/prettier: Replace \u00b7onPress={this.showActionSheet}\u00b7style={style.button}\u00b7ref={this.anchorRef}>HERE with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7onPress={this.showActionSheet}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={style.button}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7ref={this.anchorRef}>\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7HERE\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current)\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {},\u00b7$FlowFixMeState with \u23ce\u00b7\u00b7{},\u23ce\u00b7\u00b7$FlowFixMeState,\u23ce. prettier/prettier: Replace \u00b7style={{flex:\u00b71,\u00b7flexDirection:\u00b7'row',\u00b7justifyContent:'space-between' with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={{\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flex:\u00b71,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flexDirection:\u00b7'row',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7justifyContent:\u00b7'space-between',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { flex: 1,\n  flexDirection: 'row',\n  justifyContent: 'space-between' }. prettier/prettier: Replace \u00b7onPress={this.showShareActionSheet}\u00b7style={style.button}\u00b7ref={this.anchorRef}>HERE with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7onPress={this.showShareActionSheet}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={style.button}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7ref={this.anchorRef}>\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7HERE\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current)\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current)\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {},\u00b7$FlowFixMeState with \u23ce\u00b7\u00b7{},\u23ce\u00b7\u00b7$FlowFixMeState,\u23ce. prettier/prettier: Replace \u00b7style={{flex:\u00b71,\u00b7flexDirection:\u00b7'row',\u00b7justifyContent:'space-between' with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={{\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flex:\u00b71,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7flexDirection:\u00b7'row',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7justifyContent:\u00b7'space-between',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { flex: 1,\n  flexDirection: 'row',\n  justifyContent: 'space-between' }. prettier/prettier: Replace \u00b7onPress={this.showShareActionSheet}\u00b7style={style.button}\u00b7ref={this.anchorRef}>HERE with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7onPress={this.showShareActionSheet}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7style={style.button}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7ref={this.anchorRef}>\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7HERE\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7ReactNative.findNodeHandle(this.anchorRef.current)\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'auto'\u00b7|\u00b7'no'\u00b7|\u00b7'noExcludeDescendants'\u00b7|\u00b7'yes'\u00b7|\u00b7'yesExcludeDescendants' with \u23ce\u00b7\u00b7\u00b7\u00b7|\u00b7'auto'\u23ce\u00b7\u00b7\u00b7\u00b7|\u00b7'no'\u23ce\u00b7\u00b7\u00b7\u00b7|\u00b7'noExcludeDescendants'\u23ce\u00b7\u00b7\u00b7\u00b7|\u00b7'yes'\u23ce\u00b7\u00b7\u00b7\u00b7|\u00b7'yesExcludeDescendants'\u23ce\u00b7\u00b7. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. react-native/no-inline-styles: Inline style: { backgroundColor: 'white' }. react-native/no-inline-styles: Inline style: { backgroundColor: 'white' }. react-native/no-inline-styles: Inline style: { backgroundColor: 'white' }. react-native/no-inline-styles: Inline style: { backgroundColor: 'white' }. prettier/prettier: Delete \u23ce. react/no-string-refs: Using string literals in ref attributes is deprecated.. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'Invalid\u00b7render\u00b7range\u00b7computing\u00b7viewability'\u00b7+\u00b7JSON.stringify({renderRange,\u00b7itemCount})) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'Invalid\u00b7render\u00b7range\u00b7computing\u00b7viewability'\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify({renderRange,\u00b7itemCount}),\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7);. semi: Missing semicolon.. prettier/prettier: Insert ;. semi: Missing semicolon.. Cannot return undefined because undefined [1] is incompatible with array type [2].. prettier/prettier: Replace JSON.stringify({renderRange,\u00b7itemCount}) with \u00b7\u00b7JSON.stringify({renderRange,\u00b7itemCount}),. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with 't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \"\\nAsset:\u00b7\"\u00b7+ with \u00b7\u00b7'\\nAsset:\u00b7'\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. quotes: Strings must use singlequote.. prettier/prettier: Replace \"\\nPossible\u00b7scales\u00b7are:\" with \u00b7\u00b7'\\nPossible\u00b7scales\u00b7are:'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(androidScaleSuffix,\u00b7null,\u00b7'\\t') with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(androidScaleSuffix,\u00b7null,\u00b7'\\t'),. prettier/prettier: Replace \"0.75\" with '0.75'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"1\" with '1'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"1.5\" with '1.5'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"2\" with '2'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"3\" with '3'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"4\":\u00b7'xxxhdpi' with '4':\u00b7'xxxhdpi',. comma-dangle: Missing trailing comma.. prettier/prettier: Replace 'Don\\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7'\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace '\\nAsset:\u00b7'\u00b7+ with \u00b7\u00b7'\\nAsset:\u00b7'\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert ,. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Replace 'Don\\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7'\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Replace 'Don\\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7'\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'Don\\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7'\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'Don\\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7'\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+ with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Replace \\'t\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with 't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(asset,\u00b7null,\u00b7'\\t')\u00b7+\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(asset,\u00b7null,\u00b7'\\t')\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nPossible\u00b7scales\u00b7are:'\u00b7+\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nPossible\u00b7scales\u00b7are:'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace '\\nAsset:\u00b7'\u00b7+\u00b7 with \u00b7'\\nAsset:\u00b7'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(asset,\u00b7null,\u00b7'\\t')\u00b7+\u00b7\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nPossible\u00b7scales\u00b7are:'\u00b7+\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7JSON.stringify(asset,\u00b7null,\u00b7'\\t')\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nPossible\u00b7scales\u00b7are:'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'\\nAsset:\u00b7'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u00b7. prettier/prettier: Replace '\\nPossible\u00b7scales\u00b7are:'\u00b7+\u00b7 with \u00b7'\\nPossible\u00b7scales\u00b7are:'\u00b7+. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+ with \"Don't\u00b7know\u00b7which\u00b7android\u00b7drawable\u00b7suffix\u00b7to\u00b7use\u00b7for\u00b7scale:\u00b7\"\u00b7+\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. Missing type annotation for value.. Cannot call this._callListeners because property _callListeners is missing in AnimatedValue [1].. Missing type annotation for value.. Cannot call this._callListeners because property _callListeners is missing in AnimatedValue [1].. Cannot call this._callListeners because property _callListeners is missing in AnimatedValue [1].. Cannot call this._callListeners because property _callListeners is missing in AnimatedValue [1].. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace 'connectionChange',\u00b7this._handleConnectionInfoChange with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'connectionChange',\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this._handleConnectionInfoChange,\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. react-native/no-inline-styles: Inline style: { marginTop: 10 }. prettier/prettier: Replace \u00b7marginTop:\u00b710\u00b7 with marginTop:\u00b710. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 10 }. prettier/prettier: Replace \u00b7marginTop:\u00b710\u00b7 with marginTop:\u00b710. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 10 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 10 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. react-native/no-inline-styles: Inline style: { marginTop: 20, fontSize: 15 }. react-native/no-inline-styles: Inline style: { fontSize: 15 }. prettier/prettier: Replace \u23ce\u00b7\u00b7'RCTPicker',\u23ce):\u00b7any):\u00b7RCTPickerIOSType); with 'RCTPicker'):\u00b7any):\u00b7RCTPickerIOSType);\u23ce. eol-last: Newline required at end of file but not found.. Cannot resolve name ReactNative.. prettier/prettier: Replace \u23ce\u00b7\u00b7'RCTPicker',\u23ce):\u00b7any):\u00b7RCTPickerIOSType); with 'RCTPicker'):\u00b7any):\u00b7RCTPickerIOSType);\u23ce. eol-last: Newline required at end of file but not found.. Cannot resolve name ReactNative.. prettier/prettier: Insert \u23ce. eol-last: Newline required at end of file but not found.. prettier/prettier: Insert \u23ce. eol-last: Newline required at end of file but not found.. prettier/prettier: Insert \u23ce. eol-last: Newline required at end of file but not found.. prettier/prettier: Insert \u23ce. eol-last: Newline required at end of file but not found.. Cannot resolve name NativeComponent.. Cannot resolve name NativeComponent.. prettier/prettier: Insert ;. Unclear type. Using any, Object, or Function types is not safe! (unclear-type). prettier/prettier: Insert ;. Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). Unclear type. Using any, Object, or Function types is not safe! (unclear-type). prettier/prettier: Replace 'RCTSegmentedControl'):\u00b7any):\u00b7NativeSegmentedControlIOS); with \u23ce\u00b7\u00b7'RCTSegmentedControl',\u23ce):\u00b7any):\u00b7NativeSegmentedControlIOS);\u23ce. eol-last: Newline required at end of file but not found.. prettier/prettier: Replace 'RCTSegmentedControl'):\u00b7any):\u00b7NativeSegmentedControlIOS); with \u23ce\u00b7\u00b7'RCTSegmentedControl',\u23ce):\u00b7any):\u00b7NativeSegmentedControlIOS);\u23ce. eol-last: Newline required at end of file but not found.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [1] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [1] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property sections.. no-shadow: 'sectionData' is already declared in the upper scope.. no-shadow: 'sectionData' is already declared in the upper scope.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [1] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [1] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [1] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderItem.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionFooter.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property section of the first argument of property renderSectionHeader.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in array element of property sections.. Cannot create VirtualizedSectionList element because SectionBase [1] is incompatible with SectionT [2] in property sections.. prettier/prettier: Delete \u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert \u23ce. eol-last: Newline required at end of file but not found.. react-native/no-inline-styles: Inline style: { textTransform: 'uppercase',\n  fontSize: 16,\n  color: 'turquoise',\n  backgroundColor: 'blue',\n  lineHeight: 32,\n  letterSpacing: 2,\n  alignSelf: 'flex-start' }. react-native/no-inline-styles: Inline style: { textTransform: 'uppercase',\n  fontSize: 16,\n  color: 'turquoise',\n  backgroundColor: 'blue',\n  lineHeight: 32,\n  letterSpacing: 2,\n  alignSelf: 'flex-start' }. null: Parsing error: Unexpected token, expected \",\"\n\n35 | type RCTSliderType = Class>;\n  36 | \n\n37 | module.exports = ((requireNativeComponent('RCTSlider'): any): RCTSliderType;\n     |                                                                            ^\n  38 |. Unexpected token ;. Importing from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of RCTSliderNativeComponent? (untyped-import). no-unused-vars: 'NativeComponent' is defined but never used.. no-unused-vars: 'PageScrollStateChangedEvent' is defined but never used.. no-unused-vars: 'ViewProps' is defined but never used.. no-unused-vars: 'SyntheticEvent' is defined but never used.. no-unused-vars: 'NativeComponent' is defined but never used.. no-unused-vars: 'SyntheticEvent' is defined but never used.. prettier/prettier: Replace ?\u00b7params.itemIndex with \u00b7?\u00b7params.itemIndex\u00b7. space-infix-ops: Infix operators must be spaced.. Cannot resolve module ../Utilities/Platform.. no-unused-vars: 'React' is assigned a value but never used.. no-unused-vars: 'SyntheticEvent' is defined but never used.. Cannot resolve module ActivityIndicatorNativeComponent.. Cannot resolve module RCTActivityIndicatorNativeComponent.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. Cannot use ReactPropsCheckType as a type because ReactPropsCheckType is a value. To get the type of a value use typeof.. Missing type annotation for props.. Cannot assign React.createRef() to this.viewRef because property viewRef is missing in KeyboardAvoidingView [1].. Cannot get this.viewRef because property viewRef is missing in KeyboardAvoidingView [1].. Cannot get this.viewRef because property viewRef is missing in KeyboardAvoidingView [1].. Cannot get this.viewRef because property viewRef is missing in KeyboardAvoidingView [1].. Cannot get this.viewRef because property viewRef is missing in KeyboardAvoidingView [1].. react-native/no-inline-styles: Inline style: { textTransform: 'uppercase',\n  fontSize: 16,\n  color: 'turquoise',\n  backgroundColor: 'blue',\n  lineHeight: 32,\n  letterSpacing: 2,\n  alignSelf: 'flex-start' }. Cannot call this._callListeners because property _callListeners is missing in AnimatedValue [1].. react-native/no-inline-styles: Inline style: { width: 340, height: 300, alignSelf: 'center' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'blue' }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'red' }. react-native/no-inline-styles: Inline style: { width: 340, height: 300, alignSelf: 'center' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'blue' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'blue' }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'red' }. react-native/no-inline-styles: Inline style: { width: 340, height: 300, alignSelf: 'center' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'blue' }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'red' }. react-native/no-inline-styles: Inline style: { width: 340,\n  height: 300,\n  alignSelf: 'center',\n  backgroundColor: '#eeeeee' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'red' }. react-native/no-inline-styles: Inline style: { width: 340, height: 300, alignSelf: 'center' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'blue' }. react-native/no-inline-styles: Inline style: { flex: 1, backgroundColor: 'red' }. react-native/no-inline-styles: Inline style: { width: 340,\n  height: 300,\n  alignSelf: 'center',\n  backgroundColor: '#eeeeee' }. react-native/no-inline-styles: Inline style: { flex: 1 }. react-native/no-inline-styles: Inline style: { height: 200, width: 200 }. react-native/no-inline-styles: Inline style: { width: 200, height: 200 }. react-native/no-inline-styles: Inline style: { height: 200, width: 200 }. react-native/no-inline-styles: Inline style: { width: 200, height: 200 }. Importing from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of _wrapObjectFreezeAndFriends? (untyped-import). Importing from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of _wrapObjectFreezeAndFriends? (untyped-import). Importing from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of _wrapObjectFreezeAndFriends? (untyped-import). Importing from an untyped module makes it any and is not safe! Did you mean to add // @flow to the top of _wrapObjectFreezeAndFriends? (untyped-import). Cannot assign function to Object[name] because property freeze is not writable.. Cannot assign function to Object[name] because property preventExtensions is not writable.. Cannot assign function to Object[name] because property freeze is not writable.. Cannot assign function to Object[name] because property preventExtensions is not writable.. Cannot assign function to Object[name] because property seal is not writable.. Cannot assign function to Object[name] because property freeze is not writable.. Cannot assign function to Object[name] because property preventExtensions is not writable.. Cannot assign function to Object[name] because property seal is not writable.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace {'\u00b7'}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7<Image\u00b7source={require('./flux.png')}\u00b7/>.\u00b7Neat, with \u00b7<Image\u00b7source={require('./flux.png')}\u00b7/>.\u00b7Neat,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {'\u00b7'}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7<Image\u00b7source={require('./flux.png')}\u00b7/>.\u00b7Neat, with \u00b7<Image\u00b7source={require('./flux.png')}\u00b7/>.\u00b7Neat,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace degrees\u00b7*\u00b7Math.PI with (degrees\u00b7*\u00b7Math.PI). no-unused-vars: 'ReactNativeViewAttributes' is assigned a value but never used.. prettier/prettier: Replace degrees\u00b7*\u00b7Math.PI with (degrees\u00b7*\u00b7Math.PI). no-unused-vars: 'ReactNativeViewAttributes' is assigned a value but never used.. no-unused-vars: 'Animated' is assigned a value but never used.. no-unused-vars: 'requireNativeComponent' is assigned a value but never used.. no-unused-vars: 'appInstance' is assigned a value but never used.. comma-dangle: Missing trailing comma.. consistent-this: Unexpected alias 'appInstance' for 'this'.. no-unused-vars: 'Animated' is assigned a value but never used.. no-unused-vars: 'requireNativeComponent' is assigned a value but never used.. no-unused-vars: 'appInstance' is assigned a value but never used.. comma-dangle: Missing trailing comma.. consistent-this: Unexpected alias 'appInstance' for 'this'.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. yoda: Expected literal to be on the right side of <.. no-shadow: 'data' is already declared in the upper scope.. dot-notation: [\"timeout\"] is better written in dot notation.. dot-notation: [\"timeout\"] is better written in dot notation.. prettier/prettier: Replace response\u00b7&&\u00b7'timeout'\u00b7in\u00b7response\u00b7&&\u00b7Number.isInteger(response.timeout) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7response\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7'timeout'\u00b7in\u00b7response\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7Number.isInteger(response.timeout)\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7[string]:\u00b7string\u00b7 with [string]:\u00b7string. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Replace \u00b7[string]:\u00b7string\u00b7 with [string]:\u00b7string. prettier/prettier: Replace \u00b7uri,\u00b7headers\u00b7 with uri,\u00b7headers. Cannot assign getSizeWithHeaders to Image.getSizeWithHeaders because property getSizeWithHeaders is missing in React.AbstractComponentStatics [1].. Cannot assign getSizeWithHeaders to Image.getSizeWithHeaders because property getSizeWithHeaders is missing in React.AbstractComponentStatics [1].. Cannot assign getSizeWithHeaders to Image.getSizeWithHeaders because property getSizeWithHeaders is missing in React.AbstractComponentStatics [1].. prettier/prettier: Replace \u00b7true?:\u00b7ColorValue,\u00b7false?:\u00b7ColorValue,\u00b7 with true?:\u00b7ColorValue,\u00b7false?:\u00b7ColorValue. prettier/prettier: Replace \u00b7true:\u00b7trueColor,\u00b7false:\u00b7falseColor\u00b7 with true:\u00b7trueColor,\u00b7false:\u00b7falseColor. no-unused-vars: 'Switch' is defined but never used.. no-undef: 'getRandomInt' is not defined.. no-undef: 'getRandomInt' is not defined.. no-undef: 'getRandomInt' is not defined.. no-unused-vars: 'alternatingText' is assigned a value but never used.. no-unused-vars: 'alternatingProps' is assigned a value but never used.. no-trailing-spaces: Trailing spaces not allowed.. eol-last: Newline required at end of file but not found.. Cannot resolve name getRandomInt.. Missing type annotation for props.. Cannot assign object literal to this.state because object literal [1] is incompatible with undefined [2].. Cannot call this.setState with object literal bound to partialState because property checkedColor is missing in undefined [1] but exists in object literal [2].. Cannot get this.state.counter because property counter is missing in undefined [1].. Cannot call this.setState with object literal bound to partialState because property checkedColor is missing in undefined [1] but exists in object literal [2].. Cannot get this.state.counter because property counter is missing in undefined [1].. property checkedColor is missing in undefined [1].. property uncheckedColor is missing in undefined [1].. property counter is missing in undefined [1].. Cannot get this.state.checked because property checked is missing in undefined [1].. no-shadow: 'data' is already declared in the upper scope.. no-shadow: 'data' is already declared in the upper scope.. prettier/prettier: Replace \u00b7checkPropTypes\u00b7 with checkPropTypes. prettier/prettier: Replace (string\u00b7|\u00b7object) with string\u00b7|\u00b7object. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace 'uri':\u00b7tag with uri:\u00b7tag,. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Replace \u00b7params:\u00b7getPhotosParamChecker\u00b7 with params:\u00b7getPhotosParamChecker. prettier/prettier: Replace \u00b7params\u00b7 with params. prettier/prettier: Replace \u00b7response:\u00b7getPhotosReturnChecker\u00b7 with response:\u00b7getPhotosReturnChecker. prettier/prettier: Replace \u00b7response\u00b7 with response. prettier/prettier: Delete \u00b7. Cannot resolve name object.. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Delete ;. prettier/prettier: Delete ;. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete \u00b7. Cannot resolve name object.. no-extra-semi: Unnecessary semicolon.. prettier/prettier: Delete \u00b7. Cannot resolve name object.. prettier/prettier: Replace '\\.') with \u00b7'.');. semi: Missing semicolon.. prettier/prettier: Replace '\\.') with \u00b7'.');. semi: Missing semicolon.. prettier/prettier: Replace simulatorVersion\u00b7&&\u00b7!versionWithDashReplacedByDot.endsWith(simulatorVersion) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7simulatorVersion\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7!versionWithDashReplacedByDot.endsWith(simulatorVersion)\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace simulatorVersion\u00b7&&\u00b7!versionWithDashReplacedByDot.endsWith(simulatorVersion) with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7simulatorVersion\u00b7&&\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7!versionWithDashReplacedByDot.endsWith(simulatorVersion)\u23ce\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace '\\ with \u00b7'. prettier/prettier: Replace '\\ with \u00b7'. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Insert ,. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7callbackOrButtons?:\u00b7?((()\u00b7=>\u00b7void)\u00b7|\u00b7ButtonsArray) with \u00b7\u00b7\u00b7\u00b7callbackOrButtons?:\u00b7?((()\u00b7=>\u00b7void)\u00b7|\u00b7ButtonsArray),. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7 with \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Replace \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7callbackOrButtons?:\u00b7?((()\u00b7=>\u00b7void)\u00b7|\u00b7ButtonsArray) with \u00b7\u00b7\u00b7\u00b7callbackOrButtons?:\u00b7?((()\u00b7=>\u00b7void)\u00b7|\u00b7ButtonsArray),. prettier/prettier: Delete \u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. Cannot resolve name ButtonsArray.. prettier/prettier: Delete \u00b7\u00b7. prettier/prettier: Delete \u00b7\u00b7. Cannot resolve name ButtonsArray.. prettier/prettier: Replace '*\u00b7expo-file-system:\u00b7readAsStringAsync(filepath,\u00b7\\'base64\\')' with \"*\u00b7expo-file-system:\u00b7readAsStringAsync(filepath,\u00b7'base64')\". prettier/prettier: Replace '*\u00b7react-native-fs:\u00b7readFile(filepath,\u00b7\\'base64\\')' with \"*\u00b7react-native-fs:\u00b7readFile(filepath,\u00b7'base64')\". Cannot assign this.state.initialSelectedIndex to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot get this.state.initialSelectedIndex because property initialSelectedIndex is missing in State [1].. Cannot get this.state.initialSelectedIndex because property initialSelectedIndex is missing in object literal [1].. Cannot get this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot assign this.state.selectedIndex to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot resolve name Props.. Cannot assign this.state.initialSelectedIndex to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot get this.state.initialSelectedIndex because property initialSelectedIndex is missing in State [1].. Cannot get this.state.initialSelectedIndex because property initialSelectedIndex is missing in object literal [1].. Cannot get this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot assign this.state.selectedIndex to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot resolve name Props.. Cannot return object literal because property textColor is missing in object type [1] but exists in object literal [2] in array element of property items.. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot call this.props.onValueChange with null bound to itemValue because: Either null [1] is incompatible with string [2]. Or null [1] is incompatible with number [3].. Cannot assign event.nativeEvent.position to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot return object literal because property textColor is missing in object type [1] but exists in object literal [2] in array element of property items.. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot call this.props.onValueChange with null bound to itemValue because: Either null [1] is incompatible with string [2]. Or null [1] is incompatible with number [3].. Cannot assign event.nativeEvent.position to this._lastNativePosition because property _lastNativePosition is missing in Picker [1].. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot get this.props.accessibilityLabel because property accessibilityLabel is missing in object type [1].. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot get this.props.accessibilityLabel because property accessibilityLabel is missing in object type [1].. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot assign picker to this._picker because HTMLElement [1] is incompatible with ReactNativeComponent [2].. Cannot resolve name ReactNativeComponent.. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot resolve name ReactNativeComponent.. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot call this.props.onValueChange because null or undefined [1] is not a function.. Cannot call this.props.onValueChange because undefined [1] is not a function.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. Cannot return object literal because number [1] is incompatible with string [2] in property color of array element of property items.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in property style.. Cannot create View element because property color is missing in object type [1] but exists in object type [2] in type argument T [3] of array element of property style.. prettier/prettier: Replace \"async-storage-moved\" with 'async-storage-moved'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"Async\u00b7Storage\u00b7has\u00b7been\u00b7extracted\u00b7from\u00b7react-native\u00b7core\u00b7and\u00b7will\u00b7be\u00b7removed\u00b7in\u00b7a\u00b7future\u00b7release.\u00b7\" with 'Async\u00b7Storage\u00b7has\u00b7been\u00b7extracted\u00b7from\u00b7react-native\u00b7core\u00b7and\u00b7will\u00b7be\u00b7removed\u00b7in\u00b7a\u00b7future\u00b7release.\u00b7'. quotes: Strings must use singlequote.. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Replace \"See\u00b7https://github.com/react-native-community/react-native-async-storage\u00b7for\u00b7more\u00b7informations.\" with \u00b7\u00b7'See\u00b7https://github.com/react-native-community/react-native-async-storage\u00b7for\u00b7more\u00b7informations.'. quotes: Strings must use singlequote.. no-unused-vars: 'DrawerStates' is defined but never used.. no-unused-vars: 'DrawerStates' is defined but never used.. Duplicate module provider for HMRLoadingView. Change either this module provider or the current module provider [1].. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled\u00b7 with 'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled. prettier/prettier: Replace \u00b7scrollEnabled:\u00b7false\u00b7 with scrollEnabled:\u00b7false. prettier/prettier: Replace \u00b7scrollEnabled:\u00b7true\u00b7 with scrollEnabled:\u00b7true. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled\u00b7 with 'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled. prettier/prettier: Replace \u00b7scrollEnabled:\u00b7false\u00b7 with scrollEnabled:\u00b7false. prettier/prettier: Replace \u00b7scrollEnabled:\u00b7true\u00b7 with scrollEnabled:\u00b7true. Cannot add 'Scrolling ...' and this.state.scrollEnabled because boolean [1] is incompatible with string [2].. Cannot add 'Scrolling ...' and this.state.scrollEnabled because boolean [1] is incompatible with string [2].. prettier/prettier: Replace {'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled.toString()} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled.toString()}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled.toString()} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7this.state.scrollEnabled.toString()}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7'another\u00b7long\u00b7piece\u00b7of\u00b7text.'} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7'another\u00b7long\u00b7piece\u00b7of\u00b7text.'}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace {'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7'another\u00b7long\u00b7piece\u00b7of\u00b7text.'} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{'Scrolling\u00b7enabled\u00b7=\u00b7'\u00b7+\u00b7'another\u00b7long\u00b7piece\u00b7of\u00b7text.'}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. Cannot use object type as a type because object type is a value. To get the type of a value use typeof.. Cannot use object type as a type because object type is a value. To get the type of a value use typeof.. Cannot call this._subscription.remove because property remove is missing in null or undefined [1].. no-unused-vars: 'result' is assigned a value but never used.. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Replace {innerChildren} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{innerChildren}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. string [1] is not an object.. property value is missing in object literal [1].. Cannot get map[IMAGE_PREFETCH_URL] because: Either string [1] is incompatible with $SymbolToStringTag [2]. Or string [1] is incompatible with $SymbolSpecies [3].. Cannot get map[IMAGE_PREFETCH_URL] because: Either string [1] is incompatible with $SymbolToStringTag [2]. Or string [1] is incompatible with $SymbolSpecies [3].. prettier/prettier: Replace \u00b7?\u00b7offset with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7offset\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace !== with \u00b7!==\u00b7. space-infix-ops: Infix operators must be spaced.. prettier/prettier: Replace \u00b7?\u00b7offset with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7offset\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. property _distanceFromEnd is missing in VirtualizedList [1].. Cannot assign distanceFromEnd to this._distanceFromEnd because property _distanceFromEnd is missing in VirtualizedList [1].. property _distanceFromEnd is missing in VirtualizedList [1].. Cannot assign distanceFromEnd to this._distanceFromEnd because property _distanceFromEnd is missing in VirtualizedList [1].. prettier/prettier: Replace \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7nextContentInset.top\u00b7||\u00b70,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 with nextContentInset.top\u00b7||\u00b70. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Delete \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \u00b7CrashyCrash\u00b7}\u00b7=\u00b7NativeModules\u23ce with CrashyCrash}\u00b7=\u00b7NativeModules;. semi: Missing semicolon.. prettier/prettier: Replace 'JS\u00b7crash' with \"JS\u00b7crash\". jsx-quotes: Unexpected usage of singlequote.. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Insert ;. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. prettier/prettier: Replace 'Native\u00b7crash' with \"Native\u00b7crash\". jsx-quotes: Unexpected usage of singlequote.. prettier/prettier: Insert ;. semi: Missing semicolon.. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7. no-unused-vars: 'styles' is assigned a value but never used.. no-unused-vars: 'styles' is assigned a value but never used.. no-unused-vars: 'StyleSheet' is defined but never used.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Delete \u00b7\u00b7. no-trailing-spaces: Trailing spaces not allowed.. prettier/prettier: Insert ;. semi: Missing semicolon.. prettier/prettier: Replace \u00b7section.data.length\u00b7>\u00b7itemIndex\u00b7+\u00b71\u00b7?\u00b7section.data[itemIndex\u00b7+\u00b71] with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7section.data.length\u00b7>\u00b7itemIndex\u00b7+\u00b71\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7?\u00b7section.data[itemIndex\u00b7+\u00b71]\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. Missing type annotation for props.. Cannot get this[name] because an indexer property is missing in TouchableOpacity [1].. Cannot assign this[name].bind(...) to this[name] because an indexer property is missing in TouchableOpacity [1].. Missing type annotation for nextProps.. Missing type annotation for prevProps.. Missing type annotation for prevState.. Missing type annotation for props.. Cannot get this[name] because an indexer property is missing in TouchableWithoutFeedback [1].. Cannot assign this[name].bind(...) to this[name] because an indexer property is missing in TouchableWithoutFeedback [1].. Cannot call this.touchableGetInitialState because property touchableGetInitialState is missing in TouchableWithoutFeedback [1].. Cannot extend property Component [1] with TextInput because object type [2] is incompatible with undefined [3] in property state.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot assign object literal to TouchableBounce.defaultProps because property defaultProps is missing in statics of TouchableBounce [1].. Missing type annotation for nextProps.. Cannot assign DEFAULT_PROPS to TouchableHighlight.defaultProps because property defaultProps is missing in statics of TouchableHighlight [1].. no-undef: 'touchableGetPressRectOffset' is not defined.. Missing type annotation for nextProps.. Missing type annotation for prevProps.. Cannot extend property Component [1] with TextInput because object type [2] is incompatible with undefined [3] in property state.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. no-undef: 'touchableGetPressRectOffset' is not defined.. Missing type annotation for prevProps.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. Cannot use function as a type because function is a value. To get the type of a value use typeof.. no-undef: 'touchableGetPressRectOffset' is not defined.. Missing type annotation for prevProps.. Cannot assign object literal to this.state because property animationID is missing in object literal [1] but exists in State [2].. Cannot assign object literal to this.state because property animationID is missing in object literal [1] but exists in State [2].. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Insert \u00b7. prettier/prettier: Delete \u23ce. prettier/prettier: Replace failure\u00b7|| with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7failure\u00b7||\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert \u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace } with \u00b7\u00b7\u00b7\u00b7},\u23ce\u00b7\u00b7\u00b7\u00b7. Cannot resolve name EdgeInsetsProp.. prettier/prettier: Replace {this.props.children.filter(item\u00b7=>\u00b7item\u00b7!==\u00b70)} with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7{this.props.children.filter(item\u00b7=>\u00b7item\u00b7!==\u00b70)}\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. Cannot call this.props.children.filter because property filter is missing in $Iterable [1].. Cannot call this.props.children.filter because property filter is missing in Boolean [1].. Cannot call this.props.children.filter because property filter is missing in Number [1].. Cannot call this.props.children.filter because property filter is missing in React.Element [1].. Cannot call this.props.children.filter because property filter is missing in React.Portal [1].. Cannot call this.props.children.filter because property filter is missing in String [1].. Cannot call this.props.children.filter because property filter is missing in null [1].. Cannot call this.props.children.filter because property filter is missing in undefined [1].. prettier/prettier: Insert \u00b7. prettier/prettier: Replace item\u00b7=>\u00b7item\u00b7!==\u00b70 with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7item\u00b7=>\u00b7item\u00b7!==\u00b70,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace item\u00b7=>\u00b7item\u00b7!==\u00b70 with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7item\u00b7=>\u00b7item\u00b7!==\u00b70,\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. quotes: Strings must use singlequote.. prettier/prettier: Replace \"string\" with 'string'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7* with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7*\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. quotes: Strings must use singlequote.. prettier/prettier: Replace \"string\" with 'string'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7* with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7*\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \"auto\" with 'auto'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"auto\" with 'auto'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u23ce\u00b7\u00b7style:\u00b7Object,\u23ce with style:\u00b7Object. quotes: Strings must use singlequote.. prettier/prettier: Replace \"top\",\u00b7\"height\" with 'top',\u00b7'height'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u23ce\u00b7\u00b7style:\u00b7Object,\u23ce with style:\u00b7Object. quotes: Strings must use singlequote.. prettier/prettier: Replace \"top\",\u00b7\"height\" with 'top',\u00b7'height'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"right\",\u00b7\"width\" with 'right',\u00b7'width'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"right\",\u00b7\"width\" with 'right',\u00b7'width'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"bottom\",\u00b7\"height\" with 'bottom',\u00b7'height'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"bottom\",\u00b7\"height\" with 'bottom',\u00b7'height'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"left\",\u00b7\"width\" with 'left',\u00b7'width'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"left\",\u00b7\"width\" with 'left',\u00b7'width'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"string\" with 'string'. quotes: Strings must use singlequote.. quotes: Strings must use singlequote.. prettier/prettier: Replace \"string\" with 'string'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7* with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7*\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \"auto\" with 'auto'. quotes: Strings must use singlequote.. prettier/prettier: Replace \u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7* with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7(parseFloat(style[direction])\u00b7/\u00b7100.0)\u00b7*\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Replace \"auto\" with 'auto'. quotes: Strings must use singlequote.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. comma-dangle: Missing trailing comma.. Cannot get require(...).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED because property __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED is missing in object literal [1].. Cannot get require(...).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED because property __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED is missing in object literal [1].. Cannot get require(...).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED because property __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED is missing in object literal [1].. SC2148: (error) Tips depend on target shell and yours is unknown. Add a shebang.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. no-shadow: 'listener' is already declared in the upper scope.. no-unused-vars: 'listener' is assigned a value but never used.. no-shadow: 'listener' is already declared in the upper scope.. no-unused-vars: 'listener' is assigned a value but never used.. prettier/prettier: Replace this.touchableHandleResponderTerminationRequest with \u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7this.touchableHandleResponderTerminationRequest\u23ce\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7. prettier/prettier: Insert ,. comma-dangle: Missing trailing comma.. Cannot get this.props.hitStop because property hitStop is missing in propTypes of React component [1].. Cannot get this.props.children because property children is missing in propTypes of React component [1].. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact undefined [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot create View element because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot get this.props.children because property children is missing in propTypes of React component [1].. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact undefined [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. no-undef: 'ththatis' is not defined.. Cannot resolve name ththatis.. Cannot get that.props.children because property children is missing in propTypes of React component [1].. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact undefined [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot create View element because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot get that.props.children because property children is missing in propTypes of React component [1].. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact undefined [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact object type [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. Cannot get this.props.children because property children is missing in propTypes of React component [1].. Cannot call Touchable.renderDebugView with object literal bound to the first parameter because inexact undefined [1] is incompatible with exact EdgeInsetsProp [2] in property hitSlop.. react/jsx-no-undef: 'Animated' is not defined.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. SC2038: (warning) Use -print0/-0 or -exec + to allow for non-alphanumeric filenames.. Cannot get this.props[prop] because property accessibilityIgnoresInvertColors is missing in propTypes of React component [1].. prettier/prettier: Replace \"yellow\" with 'yellow'. quotes: Strings must use singlequote.. prettier/prettier: Replace \"purple\" with 'purple'. quotes: Strings must use singlequote.. Cannot call componentProviderInstrumentationHook because function [1] requires another argument.. quotes: Strings must use singlequote.. \n",
    "AlicanC": "Cloud this be \"layout\" instead of \"frame\" and use the type \"Layout\" from \"Libraries/Types/CoreEventTypes.js\" instead of defining its own?. ",
    "RSNara": "Instead of importing the type from ListView, you could also do this:\ntypescript\ntype ListViewProps = React.ElementConfig<typeof ListView>;. Instead of importing the type from ListView, you could also do this:\ntypescript\ntype ListViewProps = React.ElementConfig<typeof ListView>;. The return type here might be overly generic, given that we know the types of each of the elements in the array. \ntypescript\nconst dataBlob: {[key: string]: { id: string, text: string }} = {}\nconst sectionIDs: Array<string> = ['Section 0'];\nconst rowIds: Array<Array<string>> = [[]]\nI wonder if it's better to remove it. Flow is smart enough to infer the return type. . The return type here might be overly generic, given that we know the types of each of the elements in the array. \ntypescript\nconst dataBlob: {[key: string]: { id: string, text: string }} = {}\nconst sectionIDs: Array<string> = ['Section 0'];\nconst rowIds: Array<Array<string>> = [[]]\nI wonder if it's better to remove it. Flow is smart enough to infer the return type. . Since we're not using this inside the _renderSeparator body, it's probably fine for us to use a regular function here. \nAlso: This is not necessary, but since we're not using any instance state of SwipeableListViewSimpleExample objects, we don't even have to keep this an instance method. . Since we're not using this inside the _renderSeparator body, it's probably fine for us to use a regular function here. \nAlso: This is not necessary, but since we're not using any instance state of SwipeableListViewSimpleExample objects, we don't even have to keep this an instance method. . I think we can be more specific here:\ntypescript\ntype State = {|\n  dataSource: SwipeableListViewDataSource\n|};. I think we can be more specific here:\ntypescript\ntype State = {|\n  dataSource: SwipeableListViewDataSource\n|};. Actually, this is fine. I misinterpreted the intention earlier.. Actually, this is fine. I misinterpreted the intention earlier.. Are we missing a $ReadOnly here?. Are we missing a $ReadOnly here?. nit: I think it'd be a good idea to space out the comment from the property above it. It visually groups the comment with the property, which makes it easier (for at least me) to read this type.. nit: I think it'd be a good idea to space out the comment from the property above it. It visually groups the comment with the property, which makes it easier (for at least me) to read this type.. I think you forgot to put a description here. . I think you forgot to put a description here. . I wonder if it's better to add the type annotation to panHandlers instead:\ntypescript\nconst panHandlers: {[key: string]: (event: PressEvent) => boolean} = {\n  onStartShouldSetResponder(event) {\n    // ...\n  }\n}\nWith this approach, you only have to type once for the whole map, as opposed to once per every function in it. Also, if someone adds a function to this map that doesn't conform to the panHandler signature, flow will raise an error. . I wonder if it's better to add the type annotation to panHandlers instead:\ntypescript\nconst panHandlers: {[key: string]: (event: PressEvent) => boolean} = {\n  onStartShouldSetResponder(event) {\n    // ...\n  }\n}\nWith this approach, you only have to type once for the whole map, as opposed to once per every function in it. Also, if someone adds a function to this map that doesn't conform to the panHandler signature, flow will raise an error. . typescript\ntype Props = $ReadOnly<{|\n  shouldThrow?: ?boolean,\n  waitOneFrame?: ?boolean,\n|}>. typescript\ntype Props = $ReadOnly<{|\n  shouldThrow?: ?boolean,\n  waitOneFrame?: ?boolean,\n|}>. typescript\ntype Props = $ReadOnly<{|\n  +children: React.Node,\n  nativeID?: ?string,\n  style?: ?ViewStyleProp,\n  backgroundColor?: ?DeprecatedColorPropType\n.... typescript\ntype Props = $ReadOnly<{|\n  +children: React.Node,\n  nativeID?: ?string,\n  style?: ?ViewStyleProp,\n  backgroundColor?: ?DeprecatedColorPropType\n.... This should be:\ntypescript\n  setInspecting?: ?(val: boolean) => void. This should be:\ntypescript\n  setInspecting?: ?(val: boolean) => void. This should be:\ntypescript\n  setPerfing?: ?(val: boolean) => void. This should be:\ntypescript\n  setPerfing?: ?(val: boolean) => void. This should be:\ntypescript\n  setTouchTargeting?: ?(val: boolean) => void. This should be:\ntypescript\n  setTouchTargeting?: ?(val: boolean) => void. This should be:\ntypescript\n  setNetworking?: ?(val: boolean) => void. This should be:\ntypescript\n  setNetworking?: ?(val: boolean) => void. We don't need to spread ViewProps into ButtonProps. The render method of Button only uses onClick, pressed, and title. . We don't need to spread ViewProps into ButtonProps. The render method of Button only uses onClick, pressed, and title. . nit: Can we rename this component to InspectorPanelButton? This current naming is super misleading. When I was reading through this code initially, I thought that the <Button/> used in InspectorPanel was the button component from react-native. . nit: Can we rename this component to InspectorPanelButton? This current naming is super misleading. When I was reading through this code initially, I thought that the <Button/> used in InspectorPanel was the button component from react-native. . It looks like the render method of InspectorPanel doesn't use any the props from View. So it's unnecessary to spread ViewProps into Props. . nit: Rename to InspectorPanelButtonProps. . I'm afraid I don't follow these comments. Should they be here?. I think this is a mistake. Shouldn't it be:\nJavaScript\nurl = url.replace(url.substr(0, 7), 'http://');. I think this is a mistake. Shouldn't it be:\nJavaScript\nurl = url.replace(url.substr(0, 7), 'http://');. nit: Instead of using String.prototype.indexOf, we could also use String.prototype.startsWith. It reads a bit better.. nit: Instead of using String.prototype.indexOf, we could also use String.prototype.startsWith. It reads a bit better.. nit: It'd be nice to have a comment to clarify why this needs to be done. Something like:\nJavaScript\n// Android requires url protocols to be lowercase (i.e: Https:// doesn't work, but https:// does). nit: It'd be nice to have a comment to clarify why this needs to be done. Something like:\nJavaScript\n// Android requires url protocols to be lowercase (i.e: Https:// doesn't work, but https:// does). @empyrical Hah! You made the same mistake I did. :P \nMore of a reason to rename Button to InspectorPanelButton.. This file should be named DeprecatedImagePropType, since that adheres to file naming convention that all other modules in this folder follow. . In general, we should have a singular source of truth for the documentation, which should be the flow types. So, could you move these comments to the ImageProps flow type?. You're right. This should also take the same signature:\ntyepscript\nonClick?: ?(val: boolean) => void. I think we should be more strict and use exact object types here, so:\ntypescript\n  inspected?: ?{|\n    style?: ?ViewStyleProp,\n    frame?: ?{|\n      top?: ?number,\n      left?: ?number,\n      width?: ?number,\n      height: ?number,\n    |},\n    source?: ?{|\n      fileName?: string,\n      lineNumber?: number,\n    |},\n  |},. Does the following work?\njavascript\n  if (value === true) {\n    // stuff\n  }. Hmm... There's only one use of <InspectorPanel> in the codebase: \nreact\n<InspectorPanel\n  devtoolsIsOpen={!!this.state.devtoolsAgent}\n  inspecting={this.state.inspecting}\n  perfing={this.state.perfing}\n  setPerfing={this.setPerfing.bind(this)}\n  setInspecting={this.setInspecting.bind(this)}\n  inspected={this.state.inspected}\n  hierarchy={this.state.hierarchy}\n  selection={this.state.selection}\n  setSelection={this.setSelection.bind(this)}\n  touchTargeting={Touchable.TOUCH_TARGET_DEBUG}\n  setTouchTargeting={this.setTouchTargeting.bind(this)}\n  networking={this.state.networking}\n  setNetworking={this.setNetworking.bind(this)}\n/>\nLets make the inspecting, setInspecting, perfing, setPerfing, selection, setSelection props non-optional. That should fix our problems.. Yeah, that sounds like a great idea! I can see there being an InspectorTypes module under Libraries/Inspector that contains shared types for the modules in that folder. But I think it may be too much to make that refactor in this diff. \nWould you like to tackle this in another PR? For now, we can just copy-paste the frame type here.. Now that I think about it more, a lot of these types are unnecessarily optional. For example, I think onClick should not be optional, since we assume (in the implementation of this component) that it's a function. Do you mind making these optional properties, that don't need to be optional, non-optional?. Oh, interesting. We should move these properties to the flow definitions. . JavaScript\n_rafIds: Array<AnimationFrameID>. Both componentDidMount and componentDidUpdate will write to this._rafId, which means that the rafId from componentDidUpdate will overwrite the rafId from componentDidMount. Suppose that both hooks are executed, and then the component is unmounted, all before the first requestAnimationFrame hook is executed. Then, with the current setup, we'll end up executing this._measureAndUpdateScrollProps(); once. \nTo get around this, we could add the following function to ListView:\nJavaScript\nrequestAnimationFrame(fn: () => void): void {\n  const rafId = requestAnimationFrame(() => {\n    this._rafIds.splice(this._rafIds.indexOf(rafId));\n    fn();\n  })\n  this._rafIds.push(rafId);\n},\n. JavaScript\ncomponentWillUnmount() {\n  this._rafIds.forEach(clearAnimationFrame);\n  this._rafIds = [];\n}. JavaScript\nthis._rafIds = [];. I think the displayName static property is unnecessary. . Ha! Flow makes this invalid JavaScript valid. Your code currently translates to this: \n```typescript\ntype T = {\n  title: 'PanResponder Sample',\n  description: 'Shows the use of PanResponder to provide basic gesture handling.',\n}\nclass PanResponderExample extends React.Component<{}> {\n  // ...\n  statics: T;\n  // ...\n}\n```\nI think what you really mean is this:\nJavaScript\nstatic title = 'PanResponder Sample',\nstatic description = 'Shows the Use of PanResponder to provide basic gesture handling',. PanResponder has Flow typings. I think we should use them in here. . I think we should make this typing more specific. Something like: \n```typescript\nimport type {ViewStyleProp} from 'StyleSheet';\n//...\n  _circleStyles: {| style: ViewStyleProp |} = { style: {} } \n//.... This is unnecessary. . We should fix this $FlowFixMeProps:\ntypescript\ntype ProgressBarProps = React.ElementConfig<typeof ProgressBar>\ntype MovingBarProps = $ReadOnly<$Diff<ProgressBarProps, {\n  progress: $ElementType<ProgressBarProps, 'progress'> \n}>>. \ud83d\ude04. Again, no need for this.. nit: For consistency, we should use: Array<string>.. If you remove this $FlowFixMe, does it still raise an error? If an error is raised and if the error is also easy to fix, we should probably fix it. Otherwise, we can leave this as is. . Flow's $ReadOnly (like Object.freeze) only goes 1 layer deep.  We should probably change this to:\ntypescript\ntype NetworkImageCallbackExampleProps = $ReadOnly<{|\n  source: $ReadOnly<{|\n    uri: string,\n  |}>,\n  prefetchedSource: $ReadOnly<{|\n    uri: string,\n  |}>,\n|}>;. nit: We should just use class properties for this.\nJavaScript\nclass ScrollViewTestApp extends React.Component {\n  scrollView = React.createRef();\n  //...\nThis way, we won't have to implement our own constructor.. React components are instantiated with arguments (the first of which is just props). To avoid potential problems, we should just forward them all to React.Component constructor.\nJavaScript\nclass ScrollViewTestApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    // ...\n  }\n  // ...\n}. Classes that extend React.Component do not call getInitialState to get their initial state. With the current configuration, this.state will be null inside the render() method, which will raise an exception given the current implementation of that method. Instead of implementing getInitialState, you should create the state and assign it to this.state inside the constructor. Since we support class property assignment, we should just do this:\nJavaScript\nclass ScrollViewTestApp extends React.Component {\n  scrollView = React.createRef();\n  state = getInitialState();. All functions need to meet two conditions before you should consider binding them (i.e: using this syntax):\n\nYou're using this inside the function.\nYou're passing the function by reference to component's prop or as a callback to some function. \n\nIn this case, since we're not using this inside onScroll, we don't actually need to bind this function. In fact, since we're not using this, we could leave onScroll as is (i.e: Implemented outside the ScrollViewTestApp class). \nLet's just move this back to where it was before.. Let's move this back to where it was before.. Let's move this back to being outside the component.. Let's move this out.. I don't think there's a reason for these functions to be attached to the component instance. So, after we move the functions out of the ScrollViewTestApp class, lets change this to:\njavascript\n  <Item\n    // ...\n    onScroll={onScroll}\n    onScrollBeginDrag={onScrollBeginDrag}\n    onScrollEndDrag={onScrollEndDrag}\n   // .... javascript\nclass HorizontalScrollViewTestApp extends React.Component {\n  scrollView = React.createRef();. There's no need to duplicate this function. . javascript\nclass HorizontalScrollViewTestApp extends React.Component {\n  scrollView = React.createRef();\n  state = getInitialState(). javascript\n  <ScrollView\n     horizontal={true}\n     onScroll={onScroll}. JavaScript\nconst newState: $Shape<State> = { loadingMore: false };. How come you're spreading the RNTesterProps into Props? . This shouldn't be bound.. Also, this doesn't have to be a method on the component class. . Also, this doesn't have to be a method on the component class. . Does this work?\n{...this._panHandler?.panHandlers}. Does this work?\n_panResponder: ?PanResponderInstance = null;. The following should work if we make every property in CircleStyleTypes optional:\nJavaScript\n _circleStyles: {|style: CircleStylesType |} = {style: {}};. As I mentioned below, we should make all these props optional. . Super weird... I think the bot's just bugging out, so I wouldn't worry about it. . Super weird... I think the bot's just bugging out, so I wouldn't worry about it. . This seems like a mistake. \nRight now, this is creating a property on UpdatePositionInListTestApp instances called flushUpdatePositionInList, which isn't what the original code does. What we actually need is something like this:\n```JavaScript\nclass UpdatePositionInListTestApp extends React.Component<\n  UpdatePositionInListTestAppProps,\n  UpdatePositionInListTestAppState,\n\n{\n  state = {\n    active: false,\n  }\n\nconstructor(...args) {\n    super(...args);\n    flushUpdatePositionInList = () => this.setState({active: true});\n  }\n```. This seems like a mistake. \nRight now, this is creating a property on UpdatePositionInListTestApp instances called flushUpdatePositionInList, which isn't what the original code does. What we actually need is something like this:\n```JavaScript\nclass UpdatePositionInListTestApp extends React.Component<\n  UpdatePositionInListTestAppProps,\n  UpdatePositionInListTestAppState,\n\n{\n  state = {\n    active: false,\n  }\n\nconstructor(...args) {\n    super(...args);\n    flushUpdatePositionInList = () => this.setState({active: true});\n  }\n```. It looks like we don't need these to be optional?\nJavaScript\ntype UpdatePositionInListTestAppState = $ReadOnly<{|\n  active: boolean,\n|}>. Hmm... ref like key isn't a prop, so my first instinct would be to omit it from the flow CommonProps type. Do we really need this here?. Hmm... ref like key isn't a prop, so my first instinct would be to omit it from the flow CommonProps type. Do we really need this here?. We don't have to make these optional, since we have the static defaultProps defined in CheckBox.\n```JavaScript\n   /*\n   * The value of the checkbox.  If true the checkbox will be turned on.\n   * Default value is false.\n   /\n  value: ?boolean,\n/*\n   * If true the user won't be able to toggle the checkbox.\n   * Default value is false.\n   /\n  disabled: ?boolean,\n``. We don't have to make these optional, since we have thestatic defaultPropsdefined inCheckBox`.\n```JavaScript\n   /*\n   * The value of the checkbox.  If true the checkbox will be turned on.\n   * Default value is false.\n   /\n  value: ?boolean,\n/*\n   * If true the user won't be able to toggle the checkbox.\n   * Default value is false.\n   /\n  disabled: ?boolean,\n``. As far as I'm aware, this won't work becauserefisn't a prop (i.e:this.props.refwill beundefined`). What we really need is something like this:\n```JavaScript\nclass CheckBox extends React.Component {\n   _setAndForwardRef = nativeRef => {\n     const {forwardedRef} = this.props;\n     // ...\n   }\n}\nCheckBox2 = React.forwardRef((props, ref) => );\n``. As far as I'm aware, this won't work becauserefisn't a prop (i.e:this.props.refwill beundefined`). What we really need is something like this:\n```JavaScript\nclass CheckBox extends React.Component {\n   _setAndForwardRef = nativeRef => {\n     const {forwardedRef} = this.props;\n     // ...\n   }\n}\nCheckBox2 = React.forwardRef((props, ref) => );\n``. nit: We should probably also pull out the style, like how you pulled outdisabledandvalue`. \nJavaScript\nconst {disabled, value, style, ...props} = this.props;\nconst nativeProps = {\n  ...props\n  // ...\n  style: [styles.rctCheckBox, style],\n}. nit: We should probably also pull out the style, like how you pulled out disabled and value. \nJavaScript\nconst {disabled, value, style, ...props} = this.props;\nconst nativeProps = {\n  ...props\n  // ...\n  style: [styles.rctCheckBox, style],\n}. Since the original code doesn't have nullthrows, I'm not sure if we should introduce it here.. Since the original code doesn't have nullthrows, I'm not sure if we should introduce it here.. nit: ViewProps are also common props. So, shouldn't we spread ViewProps into CommonProps?\n```JavaScript\ntype CommonProps = $ReadOnly<{|\n  ...ViewProps\n  // ...\n|}>\ntype Props = $ReadOnly<{|\n  ...CommonProps\n  // ...\n``. nit:ViewPropsare also common props. So, shouldn't we spreadViewPropsintoCommonProps`?\n```JavaScript\ntype CommonProps = $ReadOnly<{|\n  ...ViewProps\n  // ...\n|}>\ntype Props = $ReadOnly<{|\n  ...CommonProps\n  // ...\n```. I'm afraid I don't understand where you're confused. \nThat test looks like it renders the component, makes a few assertions, calls flushUpdatePositionInList, which updates the state and re-renders the component, and then makes a few more assertions. \nWe need to expose flushUpdatePositionInList because we need a way to re-render the component with new state after we make the first batch of assertions. \nWe can't call this.flushUpdatePositionInList(); inside the constructor, because (1) setState doesn't work inside the constructor and (2), even if it did work, we don't want to immediately re-render the component with the new state. Doing so would make the first batch of assertions fail in the test. \nI think there may have been some sort of miscommunication earlier. Let's change the code to this:\n```JavaScript\nlet flushUpdatePositionInList = null;\n// ...\nclass UpdatePositionInListTestApp extends React.Component<\n  UpdatePositionInListTestAppProps,\n  UpdatePositionInListTestAppState,\n\n{\n  state = {\n    active: false,\n  }\n\nconstructor(...args) {\n    super(...args);\n    flushUpdatePositionInList = () => this.setState({active: true});\n  }\n  // ...\n}\nconst UITestManagerModule = {\n  // ...\n  flushUpdatePositionInList,\n}\n```\n. I think we can (and should) get rid of these guards. . If we look at react-native/IntegrationTests/IntegrationTestsApp.js, it looks like this component is rendered with no props. So, we can remove this $FlowFixMe! Should have caught this earlier. \ud83d\ude05\n```JavaScript\ntype Props = $ReadOnly<{||}>\nclass LayoutEventsTest extends React.Component {\n```\n. This doesn't need to be auto-bound.. I think the general rule of thumb should be: If you see a $FlowFixMe, try to see if you can remove it.\nPretty sure this is suppressing some valid flow errors. For example, rowHasChanged takes an array of Image components, but this.state.assets is of type Array<GetPhotosEdge>. . I think the general rule of thumb should be: If you see a $FlowFixMe, try to see if you can remove it.\nPretty sure this is suppressing some valid flow errors. For example, rowHasChanged takes an array of Image components, but this.state.assets is of type Array<GetPhotosEdge>. . Can we remove this $FlowFixMe?. Can we remove this $FlowFixMe?. I think the flow type of this function is wrong. Shouldn't it be this\ud83d\udc47\ud83c\udffc?\nJavaScript\nfunction rowHasChanged(r1: Array<GetPhotosEdge>, r2: Array<GetPhotosEdge>) {}. I think the flow type of this function is wrong. Shouldn't it be this\ud83d\udc47\ud83c\udffc?\nJavaScript\nfunction rowHasChanged(r1: Array<GetPhotosEdge>, r2: Array<GetPhotosEdge>) {}. Can we get rid of this $FlowFixMe? . Can we get rid of this $FlowFixMe? . Can we get rid of this $FlowFixMe? . Can we get rid of this $FlowFixMe? . What do you think about renaming this to:\nJavaScript\nexport type PhotoIdentifierObject = {\nOr:\nJavaScript\nexport type PhotoIdentifier = {. What do you think about renaming this to:\nJavaScript\nexport type PhotoIdentifierObject = {\nOr:\nJavaScript\nexport type PhotoIdentifier = {. What do you think about renaming this to:\nJavaScript\nexport type PhotoIdentifierObjectsPage = {\nOr: \nJavaScript\nexport type PhotoIdentifiersPage = {. What do you think about renaming this to:\nJavaScript\nexport type PhotoIdentifierObjectsPage = {\nOr: \nJavaScript\nexport type PhotoIdentifiersPage = {. I should have caught this earlier, but when you create a ref using React.createRef, you have to access what it's referring to using ref.current. So, this should be something like:\nJavaScript\nconst { scrollView: { current: scrollView } } = this;\nif (scrollView == null) {\n  return;\n}\nscrollView.scrollTo(destY, destX);\nBut don't worry about it. \ud83d\ude04 I'll make the fix on my end. . I should have caught this earlier, but when you create a ref using React.createRef, you have to access what it's referring to using ref.current. So, this should be something like:\nJavaScript\nconst { scrollView: { current: scrollView } } = this;\nif (scrollView == null) {\n  return;\n}\nscrollView.scrollTo(destY, destX);\nBut don't worry about it. \ud83d\ude04 I'll make the fix on my end. . IIRC, the displayName is added on to our components in a babel transform. Flow doesn't know anything about that, so that's probably why it's raising this error. \nI think there're three fixes:\n1. Change this.constructor.displayName to this.constructor.name. (Both should be equivalent).\n2. Redundantly define the displayName static property in this class. \n3. Hardcode 'TimerTest' instead of this.constructor.displayName. \nYour call. \ud83d\ude04\n. IIRC, the displayName is added on to our components in a babel transform. Flow doesn't know anything about that, so that's probably why it's raising this error. \nI think there're three fixes:\n1. Change this.constructor.displayName to this.constructor.name. (Both should be equivalent).\n2. Redundantly define the displayName static property in this class. \n3. Hardcode 'TimerTest' instead of this.constructor.displayName. \nYour call. \ud83d\ude04\n. The signature of clearInterval is this:\nJavaScript\nfunction clearInterval(interval?: IntervalID) {\nSo clearInterval expects an argument that is either an IntervalID, undefined, or not present at all. You're passing in a value that's ?IntervalID, which is equivalent to IntervalID, undefined, or null. (The bottom line  is that clearInterval does not accept null as an argument). Therefore, If you guard this function call with a null check, your flow error should go away. \nJavaScript\nif (this.state.count === 3) {\n  if (this._intervalId != null) {\n    clearInterval(this._intervalId);\n  }\n}. I commented below how we can fix this.. Let's get rid of all $FlowFixMes in this file.. Let's get rid of: \nJavaScript\nTimersTest.displayName = 'TimersTest';\nIf we want to define static properties on TimerTest, we should do it using the static keyword inside the TimerTest class. That way, flow will be able to analyze the static property.. As far as I know, you can't pass in a component class to React.createRef. React.createRef expects a function. So what you really need to do is this:\nJavaScript\nconst SegmentedControlIOSWithRef = React.forwardRef((\n  props: Props, \n  ref: React.ref<typeof RCTSegmentedControl>\n) => {\n  return <SegmentedControlIOS {...props} forwardedRef={ref}/>\n}). This needs to be made more sophisticated:\nJavaScript\nrender() {\n  const { forwardedRef: ref, ...props } = this.props;\n  return (\n    <RCTSegmentedControl\n      {...props}\n      ref={ref}\n      style={[styles.segmentedControl, this.props.style]}\n      onChange={this._onChange}\n    />   \n  );\n}\n. I'm not sure why we have the string ref here. Pretty sure we can get rid of it, since it's not used anywhere in this file.. Since we have defaultProps this doesn't need to be optional. \nJavaScript\n  values: ?$ReadOnlyArray<string>,. Since we have defaultProps, this doesn't need to be optional.\nJavaScript\n  enabled: ?boolean,. Don't think this is necessary.. This should be:\nJavaScript\nonIconClicked?: ?() => void,. This should be:\nJavaScript\nonActionSelected?: ?(ToolbarAndroidChangeEvent) => void. nit: It looks like onIconClicked and onActionSelected aren't native props.\nJavaScript\nconst {\n  onIconClicked,\n  onActionSelected,\n  ...nativeProps,\n} = this.props;. You can get rid of this UNSAFE_componentWillMount by declaring all these bound functions before creating the _panResponder property:\n```JavaScript\nclass SwipeableRow extends React.Component {\n  _handleMoveShouldSetPanResponderCapture = // ...\n  _handlePanResponderGrant = // ...\n  _handlePanResponderMove = // ...\n  _handlePanResponderEnd = // ... \n  _onPanResponderTerminationRequest = // ...\n  _panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n    // ...\n  });\n} \n```\nAfter doing this, I think you should move the other properties to the start of the class. You could also just declare these as regular functions on the class (or outside the class) and bind them when you're creating the PanResponder object. Your call.. This should have the type PanResponderInstance. But I think we can address the type problem here by doing what I proposed earlier. . Let's give these functions more specific types:\nJavaScript\n  onClose: () => void,\n  onOpen: () => void,\n  onSwipeEnd: () => void,\n  onSwipeStart: () => void,\n. The problem with defaultProps is that it only defaults undefined props (and ignores when props are null). To make a component's API flexible, we should also default null props. This is why all of the optional props in this component are also nullable. However, the typings in this case are actually incorrect because we don't default nullable props. For example, maxSwipeDistance is nullable, so defaultProps doesn't default it to 0, but everywhere in the code, we assume that it's been defaulted to a number. \nInstead of relying on defaultProps, we should probably use the ?? operator:\nJavaScript\n_animateToOpenPosition(): void {\n  const maxSwipeDistance = this.props.maxSwipeDistance ?? 0;\n  const directionAwareMaxSwipeDistance = IS_RTL ? -maxSwipeDistance : maxSwipeDistance;\n  this._animateTo(-directionAwareMaxSwipeDistance);\n},\nWhat do you think about getting rid of defaultProps and using the ?? operator, which has this definition:\nJavaScript\n  x ?? y === x != null ? x : y. To successfully get rid of NativeMethodMixin, you need to do this:\nJavaScript\nconst ToolbarAndroidWithRef = React.forwardRef((props: Props, ref: React.Ref<typeof NativeToolbar>) => {\n  return <ToolbarAndroid {...props} forwardedRef={ref} />\n});\nAnd then inside ToolbarAndroid, you need to do this:\n```JavaScript\ntype Props = $ReadOnly<{|\n  // ...\n  forwardedRef: React.Ref,\n|}>\nclass ToolbarAndroid extends React.Component {\n  // ...\n  render() {\n    const {\n      onIconClicked,\n      onActionSelected,\n      forwardedRef: ref,\n      ...nativeProps,\n    } = this.props;  \n    // ...\nreturn <NativeToolbar onSelect={this._onSelect} {...nativeProps} ref={ref}/>\n\n}\n}\n```\nI think React.forwardRef isn't flow typed yet, so you'll have to find a workaround for that. There are other PRs removing NativeMethodsMixin that accomplish this (e.g: #21885). Instead of changing this getter into a function, which breaks the public API of this component, let's instead turn it into a covariant static property, which makes it read-only:\nJavaScript\nstatic +timeSetAction = 'timeSetAction'\n. Let's use a covariant static property here as well:\nJavaScript\nstatic +dismissedAction = 'dismissedAction';. I think you forgot to make this covariant:\nJavaScript\nstatic +dismissedAction: string = 'dismissedAction';\nYou need the + after the static and before dismissedAction.. Same here. You forgot to make this covariant:\nJavaScript\nstatic +timeSetAction: string = 'timeSetAction';. This static property should be covariant.\nJavaScript\nstatic +timeSetAction: string = 'timeSetAction';. This static property should be covariant:\nJavaScript\nstatic +dismissedAction: string = 'dismissedAction';. Down the line, we call onPressWithCompletion like \ud83d\udc47:\nJavaScript\n  onPressWithCompletion(() => {\n    this.state.scale.setValue(0.93);\n    this.bounceTo(\n      1,\n      this.props.releaseVelocity,\n      this.props.releaseBounciness,\n      this.props.onPressAnimationComplete,\n    );\n    return;\n  });\nSo, shouldn't the type of onPressWithCompletion be something like this:\nJavaScript\n  onPressWithCompletion?: ?(fn: () => void) => void,. Was this function always being called with a string?. This should also be $ReadOnly, right?. nit: I think we should remove the On from these event names. I haven't seen this convention elsewhere in the codebase. \nAlso, is there a reason why we didn't use exact object types here?. It looks like this is test code that slipped in?. This method calls this.touchableHandleActivePressOut, which you typed as accepting a PressEvent inside TouchableNativeFeedback.android.js. So, shouldn't the type of e also be PressEvent?. Same deal as _endHighlight here.. This event is forwarded to _startHighlight and _endHighlight. Shouldn't it therefore also be typed as a PressEvent?. This gets forwarded to _performSideEffectsForTransition. So, shouldn't e be typed as PressEvent?. I think this function accepts a PressEvent.. You've typed this function as accepting a PressEvent, but later on in the function, we forward this event to _receiveSignal, which accepts a LayoutEvent. There's a contradiction here.. Yeah, this is pretty brittle.. It might be a good idea to just turn this into a React.Component subclass right now: \n```JavaScript\nconst ScrollResponder = require('ScrollResponder');\nfunction createScrollResponder(node: React.ElementRef): typeof ScrollResponder.Mixin {\n  const scrollResponder = {... ScrollResponder.Mixin};\n  for (const key of Object.keys(ScrollResponder.Mixin)) {\n    if (typeof scrollResponder[key] === 'function') {\n      scrollResponder[key] = scrollResponder[key].bind(node);\n    }\n  }\n  return scrollResponder;\n}\nclass ScrollView extends React.Component {\n  _scrollResponder: typeof ScrollResponder.Mixin = createScrollResponder(this);\n}\n```\nThen, we change all references to scrollResponder methods within ScrollView to use this._scrollResponder. To avoid having to proxy props and state, you should just bind this to the component instance. . One way you could get around this is to define a getter. \nJavaScript\nObject.defineProperty(this._scrollResponder, 'props', {\n  get: () => {\n    return this.props;\n  }\n})\nBut I'm not sure if that's a good idea because it'll be difficult for flow to type check this. . I'm not too sure it's a good idea to hack getInitialState to initialize the scrollResponder. What we really need is a constructor, and we can get that by converting this component to a class, which shouldn't take too much time. I think we should just do that instead. Besides, we're going to have to remove this code eventually when we convert to a class down the line anyways. . I think we should just change getScrollResponder() to return this._scrollResponder.. JavaScript\nthis.getScrollResponder().UNSAFE_componentWillMount();. JavaScript\nthis.getScrollResponder(). componentWillUnmount();. Right. I completely overlooked the fact that mixin methods use this to access sibling methods.  \ud83d\ude05\nWhat I was worried about was mixin methods using component methods, or other methods defined in the mixins. Like, ScrollResponder.Mixin.scrollResponderGetScrollableNode, which calls this.getScrollableNode:\nJavaScript\n  /**\n   * Returns the node that represents native view that can be scrolled.\n   * Components can pass what node to use by defining a `getScrollableNode`\n   * function otherwise `this` is used.\n   */\n  scrollResponderGetScrollableNode: function(): ?number {\n    return this.getScrollableNode\n      ? this.getScrollableNode()\n      : ReactNative.findNodeHandle(this);\n  },\nthis.getScrollableNode is implemented on ScrollView, if you look further down in the file: \nJavaScript\n  getScrollableNode: function(): any {\n    return ReactNative.findNodeHandle(this._scrollViewRef);\n  },\nBut I think you took care of this with your update.. \ud83e\udd14 \nWouldn't this make the component lifecycle methods in ScrollResponder.Mixin override the component lifecycle methods of the ScrollView? In other words, when react executes UNSAFE_componentWillMount, wouldn't it actually execute the UNSAFE_componentWillMount of ScrollResponder.Mixin?. Good call. \ud83d\ude05. Since you are copying all the methods from ScrollResponder to the component instance, why do we need to also create the scrollResponder here? Why not just call the scrollResponder methods directly off of the component instance? Is it because of flow?. ",
    "danibonilha": "@TheSavior \nSure, also should I changed in react-native-implementation \n// Prop Types\n  get ColorPropType() {\n    return require('ColorPropType');\n  },\n  get EdgeInsetsPropType() {\n    return require('EdgeInsetsPropType');\n  },\nto\n// Prop Types\n  get ColorPropType() {\n    return require('ColorPropType');\n  },\n  get EdgeInsetsPropType() {\n    return require('DeprecatedEdgeInsetsPropType');\n  },\n?. ",
    "kdastan": "Should I make Props nullable?\ntype Props = ?$ReadOnly<{| ...\ndo not quite understand . Should I make Props nullable?\ntype Props = ?$ReadOnly<{| ...\ndo not quite understand . ",
    "exced": "Over consistency, I'll get rid of it, ty. I've never used this, do they bring useful information ? . Not sure how we can remove it properly though.\nThis is the Flow error I get :\nCannot extend property Component [1] with CameraRollView because property groupTypes is read-only in object type [2] but\nwritable in object type [3] in the first argument of property UNSAFE_componentWillReceiveProps.. fromUser is optional (Android only), I'd rather check if the fields exists instead. Oops you're right . On can get removed, and I can also remove duplicate types finding generic names.\nNo reason for exact object types, I just realized I forgot it ;). \n. ",
    "rmcp1g15": "Changed it to \njs \nrender: () => React.Node,\n. ",
    "ronal2do": "Thanks, thanks to the feedback I'll be editing\n. Thanks, thanks to the feedback I'll be editing\n. @RSNara Can you help me understand this problem with prettier and eslint?\n. @RSNara Can you help me understand this problem with prettier and eslint?\n. Thanks. Thanks. Thanks, for your feedback. @RSNara It seemed a bit confusing to me that the instance of this class is being created here, I believe that we do not need a method inside the constructor.\n```\n  public void testUpdatePositionInList() {\n    FrameLayout rootView = createRootView();\n    jsModule.renderUpdatePositionInListTestApplication(rootView.getId());\n    waitForBridgeAndUIIdle();\n...\n// Let's make the second elements 50px height instead of 10px\njsModule.flushUpdatePositionInList();\nwaitForBridgeAndUIIdle();\n\n....\n  }\nAnd now I'm not sure if we need this\n  flushUpdatePositionInList() {\n    flushUpdatePositionInList();\n  },\nLet me know what do you think, to help me.. Thanks a lot, awesome. @TheSavior @RSNarajs\n  // $FlowFixMe\n_intervalId: ?IntervalID = -1;\nI've had issues with Flow here and on the contructor.displayName\nbecause null or undefined is\nincompatible with IntervalID,\nand number is incompatible with IntervalID. @TheSavior @RSNarajs\n  // $FlowFixMe\n_intervalId: ?IntervalID = -1;\n```\nI've had issues with Flow here and on the contructor.displayName\nbecause null or undefined is\nincompatible with IntervalID,\nand number is incompatible with IntervalID. ",
    "nd-02110114": "I fixed \ud83d\udc4d . \ud83d\udc4d \n. \ud83d\udc4d . \ud83d\udc4d . \ud83d\udc4d . \ud83d\udc4d . \ud83d\udc4d . \ud83d\udc4d . Yes... I got this error...\nSketchy null check on string [1] which is potentially an empty string. Perhaps\nyou meant to check for null or undefined [2]? (sketchy-null-string)\nI think this is a problem of flow. The situation is simlilar to this issue https://github.com/facebook/flow/issues/4608. OK! I fixed.. \ud83d\udc4d . \ud83d\udc4d . I think this fix is not needed.\nBut flow needs... is this correct?. I think this fix is not needed.\nBut flow needs... is this correct?. I get this error...\n```js\nCannot create Picker element because string [1] is incompatible with number [2] in the\nfirst argument of property onValueChange.\n RNTester/js/PermissionsExampleAndroid.android.js\n 38\u2502     return (\n 39\u2502       <View style={styles.container}>\n 40\u2502         <Text style={styles.text}>Permission Name:</Text>\n 41\u2502         <Picker\n 42\u2502           style={styles.picker}\n 43\u2502           selectedValue={this.state.permission}\n                // this line causes error\n 44\u2502           onValueChange={this._onSelectPermission.bind(this)}>\n 45\u2502           <Item\n 46\u2502             label={PermissionsAndroid.PERMISSIONS.CAMERA}\n 47\u2502             value={PermissionsAndroid.PERMISSIONS.CAMERA}\n 48\u2502           />\n 49\u2502           <Item\n 50\u2502             label={PermissionsAndroid.PERMISSIONS.READ_CALENDAR}\n 51\u2502             value={PermissionsAndroid.PERMISSIONS.READ_CALENDAR}\n 52\u2502           />\n 53\u2502           <Item\n 54\u2502             label={PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION}\n 55\u2502             value={PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION}\n 56\u2502           />\n 57\u2502         </Picker>\n 58\u2502         <TouchableWithoutFeedback onPress={this._checkPermission}>\n 59\u2502           <View>\n 60\u2502             <Text style={[styles.touchable, styles.text]}>\n   :\n\n[1] 79\u2502   _onSelectPermission = (permission: string) => {\n. I get this error....js\nCannot create Picker element because string [1] is incompatible with number [2] in the\nfirst argument of property onValueChange.\n RNTester/js/PickerExample.js\n  37\u2502     return (\n  38\u2502       <RNTesterPage title=\"<Picker>\">\n  39\u2502         <RNTesterBlock title=\"Basic Picker\">\n  40\u2502           <Picker\n  41\u2502             style={styles.picker}\n  42\u2502             selectedValue={this.state.selected1}\n                  // this line causes error\n  43\u2502             onValueChange={this.onValueChange.bind(this, 'selected1')}>\n  44\u2502             <Item label=\"hello\" value=\"key0\" />\n  45\u2502             <Item label=\"world\" value=\"key1\" />\n  46\u2502           </Picker>\n  47\u2502         </RNTesterBlock>\n  48\u2502         <RNTesterBlock title=\"Disabled picker\">\n  49\u2502           <Picker\n    :\n\n[1] 119\u2502   onValueChange = (key: string, value: string) => {\n Libraries/Components/Picker/Picker.js\n\n[2]  73\u2502   onValueChange?: ?(itemValue: string | number, itemIndex: number) => mixed,\n```. ",
    "yuzhiyi": "Yes. Cookies have been obtained before being flushed to disk.. ",
    "hyunjongL": "okay ^_^. Yes, master. ",
    "fangasvsass": "\n. \n. merge it,please. merge it,please. ",
    "dkaushik95": "@RSNara I need a similar params/return type here. . Circle CI errors indicate that we need to strict type it rather than ?boolean. Do we want strict type checking or nullable type checking? or maybe both. I think this applies to all the boolean values when we are doing:\nif(value) then something. Cool. Also, I found these types from other components. So should we export these types on those components and reference them here? There are many components in Inspector which needs to be converted to flow types. . Yes. But these props can be either boolean or undefined. I don't know how to write for both? ?boolean should work, but I get this error:\nSketchy null check on boolean [1] which is potentially false. Perhaps you meant to check for null or undefined [2]?\n(`sketchy-null-bool`)`.  Sure. I'll finish up with this today and work on the Inspector folder next week. . ",
    "radex": "are you sure about this? isn't that Xcode 10-only-compatible mode?. ",
    "benjamn": "Definitely!. Improved: 60687ba48a0e55bfcaecff9230f11c5667a74f21. I'm a little surprised that this bare module identifier just works, without @providesModule _wrapObjectFreezeAndFriends or something like that. Should I be worried?. > Wouldn't we be better and safer off letting it use the (new-in-this-PR) fallback method instead?\nNo, because the fallback method has linear lookup time, compared to the tagging approach, which has constant lookup time. That's a nice advantage of this polyfill over other (better tested, more widely used) polyfills that settle for linear time in order to avoid tagging objects. If we don't care about the performance benefit of tagging, then we should really replace this whole polyfill with one that wasn't invented here.. I'm confident that .delete(obj) will always succeed if .set(obj, obj) succeeds in putting obj into the map. If that invariant does not hold, there's a bug, and we will fix it. And if .set(obj, obj) fails to put obj into the map, then there won't be any memory leak, whether or not .delete(obj) is called/succeeds.. I don't think enough objects will ever be added to this array to matter from a memory perspective, and I'm worried that removing and re-adding objects will give them different hashes over time. Since these hashes are just made-up (not based on the memory address of the object), and these objects are non-extensible, there's no way to give them the same hash every time without keeping them in memory somewhere.. I could be convinced that changing hashes doesn't matter in this case, but it worries me.. Sure.. Good idea!. ",
    "Dimous": "No. ",
    "peaonunes": "Hmm, I see, I remember seeing the way I have done as a suggestion in one of the PRs. \nMade your suggested changes on this 66a5b27!. You are completely right! Here is the change 18ff98b. wat 28a708f. okay 28a708f. ",
    "pvdz": "I'm slightly worried about a memory leak here. I think it's fine since the temporary arrays should not be retained once the map is released, but I'm not certain.\n. ... with the potential of leaking memory, unreported, if the error happens in the .delete() portion of things.\nHypothetically; if something wants to call freeze or seal on an object, how likely is it that it actually wouldn't want the __MAP_POLYFILL_INTERNAL_HASH__ expando applied to the object itself, in the first place? Wouldn't we be better and safer off letting it use the (new-in-this-PR) fallback method instead?. (The error above this line, to which github is not allowing me to comment;)\nThis could also fallback to the solution below.\n. ",
    "tolbkni": "The one defined before\njava\nOkHttpClient client = new OkHttpClient.Builder()\n        .connectTimeout(10, TimeUnit.SECONDS)\n        .writeTimeout(10, TimeUnit.SECONDS)\n        .readTimeout(0, TimeUnit.MINUTES) // Disable timeouts for read\n        .build();\nand the default client provided by OkHttpClientProvider.createClient()\njava\n// No timeouts by default\nOkHttpClient client = new OkHttpClient.Builder()\n        .connectTimeout(0, TimeUnit.MILLISECONDS)\n        .readTimeout(0, TimeUnit.MILLISECONDS)\n        .writeTimeout(0, TimeUnit.MILLISECONDS)\n        .cookieJar(new ReactCookieJarContainer())\n        .build();\nthey are a little different.. The one defined before\njava\nOkHttpClient client = new OkHttpClient.Builder()\n        .connectTimeout(10, TimeUnit.SECONDS)\n        .writeTimeout(10, TimeUnit.SECONDS)\n        .readTimeout(0, TimeUnit.MINUTES) // Disable timeouts for read\n        .build();\nand the default client provided by OkHttpClientProvider.createClient()\njava\n// No timeouts by default\nOkHttpClient client = new OkHttpClient.Builder()\n        .connectTimeout(0, TimeUnit.MILLISECONDS)\n        .readTimeout(0, TimeUnit.MILLISECONDS)\n        .writeTimeout(0, TimeUnit.MILLISECONDS)\n        .cookieJar(new ReactCookieJarContainer())\n        .build();\nthey are a little different.. ",
    "burkeshartsis": "For those landing here from Google I believe this is the PR that continued this work. https://github.com/facebook/react-native/pull/20999. ",
    "fkgozali": "Longer term it would be great to figure out a way to not list these out manually, so that upgrades can be easier. I don't know what the best solution is, but perhaps the folly repo has a cmake configuration we can use.. Looks like the capture of this is actually not used, failing the build internally:\nreact-native-github/ReactCommon/cxxreact/SampleCxxModule.cpp:117:39: error: lambda capture 'this' is not used [-Werror,-Wunused-lambda-capture]\n    Method(\"addIfPositiveAsPromise\", [this](dynamic args, Callback cb, Callback cbError) {\n                                      ^\nreact-native-github/ReactCommon/cxxreact/SampleCxxModule.cpp:126:37: error: lambda capture 'this' is not used [-Werror,-Wunused-lambda-capture]\n    Method(\"addIfPositiveAsAsync\", [this](dynamic args, Callback cb, Callback cbError) {\n                                    ^. is the motivation for moving this call before calling the module's invalidate method to avoid the race condition?. Is there any reliable way to use _methodQueue as an indication that the module is \"dead\" instead of adding a new _valid ivar? No big deal, but would be better to re-use existing ivars if possible.. what is this for? is it to run the codegen?. can you put short comment explaining what this script does?. so yeah, I'm not sure what pulled this in, but let's find a way to not depend on it. Could you open an issue then link that issue here? We'll look into it.. This needs to be configurable - it's ok to include fabric build in RNTester, but it shouldn't default to use Fabric yet (given it's not complete). It should default to the plain old RCTRootView, then via a toggle (a .plist, a global C flag, or something from NSUserDefault + simple UI to toggle, etc.), it should allow activating Fabric.. C #define'ed flag can work, that way the compiler/build system can influence it.. unrelated: I thought we're not supposed to check in .xcodeproj/.xcworkspace file when using cocoapods? should probably remove this in different PR. ok sounds good. was this an extra alias? I don't see it used. can you add the same copyright header like in other .m/.h?. styling nit, we usually don't indent for namespace stuffs, so it should just be:\n```\nnamespace facebook {\nnamespace react {\n/*\n ...\n /\nComponentRegistryFactory ... {\n}\n} // namespace react\n} // namespace facebook. let's put this link in the FIXME comment: https://github.com/facebook/react-native/issues/23910. Let's add // TODO: revisit this implementation for all WeakObject stuffs - we'll take care of it later. I consulted with some folks - let's actually guard this impl with #ifdef FABRIC_ENABLED and preserve the throw std::logic_error(...) when Fabric isn't enabled. Keep the comment though.. guard this defn with #ifdef FABRIC_ENABLED. should probably include cpp here too (even if it doesn't exist today). Also, would it be possible to have 2 parts of this definition?\n1. the shared part, under the turbomodule/core/\n2. the platform-specific part, under turbomodule/core/platform/ios/\nSample:\n1. https://github.com/facebook/react-native/blob/e6f7d69428a4b3344ee5205c11bca58cbb4317fc/ReactCommon/turbomodule/core/BUCK#L6-L13\n2. https://github.com/facebook/react-native/blob/e6f7d69428a4b3344ee5205c11bca58cbb4317fc/ReactCommon/turbomodule/core/BUCK#L47-L61\nYou should probably move this podspec file to turbomodule/core/ subdir to mirror BUCK location. Hmm, I don't think this file should be checked in. We should update the .gitignore under RNTester to ignore .xccheme -- I think this scheme gets generated when you pod install?. I see, let's then call the subspec core instead of RCTTurboModule.. I see, let's then call the subspec core instead of RCTTurboModule.. let's be explicit: platform/android/*. let's be explicit: platform/android/*. let's be explicit **/platform/android/*. let's be explicit **/platform/android/*. btw, the source_files defn here doesn't intersect with the exclude_files, so do you still need the exclude_files?. btw, the source_files defn here doesn't intersect with the exclude_files, so do you still need the exclude_files?. ",
    "rustle": "not sure what the expectation is here. this example code is consistent with the existing examples.. not sure what the expectation is here. this example code is consistent with the existing examples.. ",
    "ignacioola": "I'll remove it.. I'll remove it.. Done!. Done!. ",
    "vcalvello": "Yes, I think removing aliases is a better option. I'll work on that.. Yes, I think removing aliases is a better option. I'll work on that.. Sure, no problem.. Sure, no problem.. ",
    "Tnarita0000": "@RSNara Thank you for your advice. I've modified this.. @RSNara Thank you for your advice. I've modified this.. ",
    "mottox2": "Thank you for reviewing.\nI applied flow to Touchable.js then I removed FlowFixMe from TouchableNativeFeedback.android.js.. ",
    "listicos": "I tested this and is working, what is not so good practice in general is changing the argument value, instead create a new var. Thank you for this!. I tested this and is working, what is not so good practice in general is changing the argument value, instead create a new var. Thank you for this!. ",
    "mandrigin": "Thanks for reviewing!\nI\u2019m away from my laptop this week, will address you comment on Monday.. Thanks a lot!\nYeah, I agree about a variable, just wanted to make a smallest possible diff.\nI fixed it and rebased to the latest master.. @shergin it is easier to me to comment here, to show why I did it this way.\nUITextField is a very basic UI element. It doesn't expose any API to just change the string attributes without re-setting the attributed string completely (and breaking CJK input). \nLuckily, it relies on it's own public (and overridable) property attributedText when rendering.\nWhat I'm doing here is hijacking this property and replacing its value with the value I store locally, in NSMutableAttributedString, which I can replace without noticeable side-effects. So this override has to be here, if we want to continue to use UITextField. It's a hack and it can potentially break with new iOS releases, etc.\nTo be able to consolidate logic, we can just use UITextView everywhere, it provides all the necessary functionality as public APIs. What is the history between having 2 different implementations for single and multiline text views?. ah, okay, I mistread your initial comment.\nSo you mean, just duplicate the logic and encapsulate it inside RCTUITextField and RCTUITextView classes separately, so we can call setAttributedString safely on both RCTUITextField and RCTUITextView?. should be fixed now. should be fixed now. pushed the fix to address this feedback. @shergin is there anything else I need to fix in this PR?. ",
    "saitoxu": "In response to your review, I changed PR a lot.\nI found that the event defined by the existing flow type is getting passed in the arguments of all the functions defined in ScrollResponder, so we don't need to use SysntheticEvent here.. In response to your review, I changed PR a lot.\nI found that the event defined by the existing flow type is getting passed in the arguments of all the functions defined in ScrollResponder, so we don't need to use SysntheticEvent here.. Yes, the function is finally passed to UIManager.measureLayout as error callback.\nIn Java, the error callback argument is string, and in Objective-C, the callback is never called.\nref:\n Objective-C https://github.com/facebook/react-native/blob/master/React/Modules/RCTUIManager.m#L1321\n Java https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java#L645. Yes, the function is finally passed to UIManager.measureLayout as error callback.\nIn Java, the error callback argument is string, and in Objective-C, the callback is never called.\nref:\n Objective-C https://github.com/facebook/react-native/blob/master/React/Modules/RCTUIManager.m#L1321\n Java https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java#L645. ",
    "sebryu": "You are calling component function _onLayout which is not available from child.props.\nI think this line should look like this:\nsuggestion\n      child.props.onLayout(event, child.props.cellKey, child.props.index);. Hello @christianbach !\nI read your code, and I noticed _onLayout function in CellRenderer class. However - you are trying to call it as child.props._onLayout, and simply - _onLayout function is not accessible from child.props. You would need to have ref to CellRenderer to call its functions.\nSo in this case, my suggested changes should work.. Hi @christianbach !\nYou have to ping RN guys, I just wanted to create similar issue, so I reviewed your code. \nIt looks ok for me though \ud83d\udc4d . ",
    "wcandillon": "When no perspective is set, on Android, you still see some perspective when doing \"3d transformation\" while on iOS it show as expected. Therefore you always get a different result on iOS and Android when setting perspective yourself. Do you see what I mean? I could provide some examples.\nI would like to know what is the default perspective an android so I can adjust the transformation correctly for android.\nThank you so much for your great work, really appreciate it.. When no perspective is set, on Android, you still see some perspective when doing \"3d transformation\" while on iOS it show as expected. Therefore you always get a different result on iOS and Android when setting perspective yourself. Do you see what I mean? I could provide some examples.\nI would like to know what is the default perspective an android so I can adjust the transformation correctly for android.\nThank you so much for your great work, really appreciate it.. ",
    "acoates-ms": "Sure I can remove that.. Yup.  I didn't realize that the person that made this change internally had gone and copied that.. ",
    "ThangLuuQuoc": "when we use self.frame.size.height, it has a issue when we touch and hold to pull at list but just scroll to a part of loading indicator show on screen and then we release it, the height not correct -> beginRefresh will wrong, indicator will not show in nexttime. ",
    "christianbach": "Hi @sebryu and thanks for reviewing this!\n_onLayout is available and is part of the rewrite of CellRenderer to stop functions being created on every render\n_onLayout = (e): void =>\n     this.props.onLayout &&\n     this.props.onLayout(e, this.props.cellKey, this.props.index);. My bad and thanks! I will change it straight away!. Finally had the time to do a commit. Tested the change in our app without issues.. @sebryu Do I need to do anything else, perhaps rebase from master?. ",
    "Orvid": "Folly already defines all of these in folly/Portability.h, so it's probably better to just use those rather than have another copy of them :). #include <folly/portability/SysMman.h and change MAP_PRIVATE to MAP_SHARED (this is a read-only mmap, so copy-on-write is irrelevant) and this should work just fine on Windows :). ",
    "DanielZlotin": "Because running gradle clean before building executes ndkbuild which in turn throws errors for not being able to find the build folders. clean should always succeed.. That's the entire point of this PR. Overriding wrapper scripts is deprecated and will be removed in future gradle versions. Overriding wrapper scripts is deprecated and will be removed in future gradle versions. ",
    "thymikee": "O guess we can be more strict about this type and just go with boolean if it's set . Whoopsie! Will fix that soon \ud83d\ude05. Oh man, how could I miss that :o. I could migrate this to class component by duplicating ScrollResponder.Mixin (it's only used in deprecated ListView, so the duplication is going to be removed soon anyway). Yea, I agree that it would be better to land mixins removal for this component first and rebase this one on top of it.\nI'll look up @empyrical's work prior to that, to see what issues I can expect :D . If it's gonna be this little change, I could squeeze it into this PR, what do you think?. So, this makes sense?:\n1) get rid of mixin in ScrollView but keep the createReactClass \n2) rebase this and change to class component. Oh yea, I'm totally ok with that. It caused me headaches when I was grabbing components by name/display name in tests (bad practice to do so tho) or snapshotting them :D . Not sure about that. According to the comments getScrollResponder() is used to e.g. fire scrollTo() which is not available in ScrollResponder.Mixin. Unless they're wrong (there's no actual usage of getScrollResponder() in this repo, so it may relate to internal FB callsites). Turning this to class component turned out pretty straightforward. However, problem with binding scrollResponder to ScrollView is that methods from mixin will refer to ScrollView context, while they were not assigned to the ScrollView instance, but to this._scrollResponder. To mitigate that, I added an ugly temporary hack that copies methods from mixin back to the ScrollView. Wonder if it makes sense to actually do only that and only put lifecycle methods (componentWillMount/componentWillUnmount) inside this._scrollResponder. Yes, I wanted to address that, but I left it in a, let's say, \"request for comments\" state and lost track on this issue \u2013 this was the reason I left the this._scrollResponder so we can differentiate on state and lifecycle of mixin vs component. This is what I meant while writing:\n\nWonder if it makes sense to actually do only that and only put lifecycle methods (componentWillMount/componentWillUnmount) inside this._scrollResponder\n\nSo I think it's gonna be safer to revert this change you landed locally and get this sorted here (unless you'd like to to fix it on your own while landing it, then be my guest :D) \n. Looks like this plugin is targeting web: https://github.com/evcohen/eslint-plugin-jsx-a11y#supported-rules\nIt's also not enabled in the config's plugin list. I think that can be removed.\nFor RN there's https://github.com/FormidableLabs/eslint-plugin-react-native-a11y but it stopped receiving support shortly after release and iirc it still lacks some accessibility features introduced in 0.57. Whoops, scratch my last comment. I thought it's about the community plugin. eslint-config-fbjs requires the eslint-plugin-jsx-a11y. ",
    "watanabeyu": "Thanks review.\nI changed Array<StackEntryProps> to  $ReadOnlyArray<StackEntryProps> and npm run flow at local, it actually ok.. ",
    "Monte9": "@kelset this is not ideal as the code is redundant with RCTDeviceInfo.\nRCTDeviceInfo has a func called RCTIsIPhoneX but since I am not very proficient in Obj-C, I couldn't figure out how to reuse it. Any suggestions on how to reuse/improve this code would be appreciated! . @kelset Also ideally all those buttons should be in a func that just takes a param and returns a UIButton.\nThis would clean up the code a lot, but I haven\u2019t done Obj-C in a while. Let me know if that makes sense, and if something like would work.. @cpojer Yes, will update it tonight. Was waiting for @shergin to respond. \ud83d\udc4d . @frantic good point. Will update.. Yeah, that does sound better. Updated. Cleanup up 20 lines. \ud83d\udcaf . @frantic quick follow up: when I try to use the safeAreaInsets on the rootview I get 0 on an iPhoneX. \n```\nNSLog(@\"safeArea: %f\", rootView.safeAreaInsets.bottom);\n\n2018-12-13 14:42:24.955719-0600 RNTester[37397:1022268] safeArea: 0.000000\n```\n\nI looked up a few issues on stack overflow and I figure out that I need to do this instead:\n```\n[UIApplication sharedApplication].delegate.window.safeAreaInsets.bottom;\n````\nHence I came up with this which is pretty abstracted and much better than what I had before. Thanks for the suggestion. \ud83d\udc4d \n- (NSInteger)bottomSafeViewHeight\n{\n    if (@available(iOS 11.0, *)) {\n        return [UIApplication sharedApplication].delegate.window.safeAreaInsets.bottom;\n    } else {\n        return 0;\n    }\n}\n. ",
    "kpsroka": "All the prop types are defined like this. I'd rather keep it consistent than strict, and I assume there might be a reason for this. @grabbou Do you know who might shed some light on why these types are defined as optional on both sides?. ",
    "ggtmtmgg": "I couldn't find lines which use onNavigationStateChange. The other methods like onMessage can be found in RCTWKWebView.m. \nCould you help me to find onNavigationStateChange's use cases?. I couldn't find lines which use onNavigationStateChange. The other methods like onMessage can be found in RCTWKWebView.m. \nCould you help me to find onNavigationStateChange's use cases?. It comes from this line. source supposed to be number in some situations.\nI don't find the situation invoked with number but I followed previous types.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/WebView/WebView.ios.js#L165\n@RSNara . It comes from this line. source supposed to be number in some situations.\nI don't find the situation invoked with number but I followed previous types.\nhttps://github.com/facebook/react-native/blob/master/Libraries/Components/WebView/WebView.ios.js#L165\n@RSNara . I've solved it by myself!. I've solved it by myself!. ",
    "rotemmiz": "We should definitely have better error logs, but what do you mean by cleaner way?. ",
    "CodingItWrong": "Makes sense, those scripts would be the natural place to check to see what CI does. And if someone changes something that breaks CI, they will find out :-D. This makes sense; I switched to beforeEach to try to decrease flake of the Switch tests, but it wasn't 100% successful, and it makes sense that the filter might serve the same purpose.. Nice, I like how the filtering encourages grouping examples.. Cool, having all the example modules be more consistent will also be helpful for new contributors.. ",
    "dalcib": "@cpojer , you are right. I fixed it in https://github.com/facebook/react-native/pull/22217/commits/62551c2162e60b1a63c037089ae59b833602ebf0. ",
    "SudoPlz": "Got it that makes sense, I'll remove the comments. Done. ",
    "chuganzy": "Probably type ? contentTypeMap[type] : nil; might be clearer? Or just contentTypeMap[type] works.\nBTW, some projects might be already using iOS internal definitions (like given-name, family-name etc) directly.\nhttps://github.com/facebook/react-native/pull/22611/files#diff-a5239f085f0beab82ba2c1643be157acL198\nSo it might be better to assign directly if it was not defined in the map.\nself.backedTextInputView.textContentType = contentTypeMap[type] ?: type\n. Probably type ? contentTypeMap[type] : nil; might be clearer? Or just contentTypeMap[type] works.\nBTW, some projects might be already using iOS internal definitions (like given-name, family-name etc) directly.\nhttps://github.com/facebook/react-native/pull/22611/files#diff-a5239f085f0beab82ba2c1643be157acL198\nSo it might be better to assign directly if it was not defined in the map.\nself.backedTextInputView.textContentType = contentTypeMap[type] ?: type\n. ",
    "radeno": "@gengjiawen looks like there it is (hope) https://docs.gradle.org/4.8/release-notes.html#overwriting-gradle's-built-in-tasks but it says just about syntax, not whole overriding. ",
    "migbot": "Fixed.. Fixed.. ",
    "Eyesonly88": "Exactly.. ",
    "raphael-liu": "Without using reflection, to break the circular dependency of buck, there will be up to 795 lines changed. And Warnings:\n\n. Without using reflection, to break the circular dependency of buck, there will be up to 795 lines changed. And Warnings:\n\n. Without using reflection, to break the circular dependency of buck, there will be up to 795 lines changed. And Warnings:\n. Without using reflection, to break the circular dependency of buck, there will be up to 795 lines changed. And Warnings:\n. ",
    "rickhanlonii": "In many of these files I moved the stylesheet declaration (or other code) above the example exports so that every example has the exports at the bottom for consistency . Many of the example files used static properties to declare the title and description. This didn't work great with flow types and is inconsistent with the other examples so I moved them all to the exports. This needed refactored to export multiple examples. I moved these types to shared/RNTesterTypes. Also needed to refactor this to export multiple examples. Here are the main changes in this pull\nIf there is only one example exported, we just show the single example. This should maintain the existing behavior for modules until they're refactored to export multiple examples.\nIf there's more than one example exported, we add a filter which will filter by the example title. What do you think about keeping the old behavior for examples that only export one example?\n```suggestion\n    if (this.props.module.examples.length === 1) {\n      const Example = this.props.module.examples[0].render;\n      return ;\n    }\nconst filter = ({example, filterRegex}) => filterRegex.test(example.title);\n\n```. Maybe remove the qualifier altogether\nsuggestion\n    `This PR is unlikely to get reviewed because it touches too many lines (${danger. Ditto\nsuggestion\n    `This PR is unlikely to get reviewed because it touches too many files (${danger. LOVE the reordering and using markdown headers here. ",
    "wildseansy": "unsure how to fix this, there is a semicolon there.. unsure how to fix this, there is a semicolon there.. ",
    "osdnk": "But it's in superclass. If it actually has to be a global var (I think it could local as well -- it's just a regex), can't we initialize it immediately? \nAlso, the name is not very clear.. mShouldRound?. Why it can't be protected?. It's not very generic. I'd rather allow value to be an Object and check whether it's an instance of Double or String.. I know it's not perfect to use any, but we need to override this type in AnimatedValueXY with another type which is related to another logic. \ud83d\ude2d  . callback: (value: any) => void. Okay, well, I didn't want to do it previously, cause it changes existing code. ",
    "OdaDaisuke": "I got it.. I got it.. I got it.. I see. I'll modify these components.. I see. I'll modify these components.. ",
    "HeinrichTremblay": "Do you mean merging Props type with NativeProps into something like this?\n``` es6\n/\n Before\n/\ntype NativeProps = $ReadOnly<{|\n    ...$Diff<\n      Props,\n      $ReadOnly<{onDrawerStateChanged?: ?(state: DrawerStates) => mixed}>,\n    >,\n    onDrawerStateChanged?: ?(state: DrawerStateEvent) => mixed,\n  |}>;\n/\n After\n/\ntype NativeProps = $ReadOnly<{|\n    onDrawerStateChanged?: ?((state: DrawerStateEvent) => mixed), \n    children?: Node,\n    drawerBackgroundColor: ColorValue,\n    drawerLockMode?: ?(\"unlocked\" | \"locked-closed\" | \"locked-open\"),\n    drawerPosition: ?number,\n    drawerWidth?: ?number,\n    keyboardDismissMode?: ?(\"none\" | \"on-drag\"),\n    onDrawerClose?: ?(() => mixed),\n    onDrawerOpen?: ?(() => mixed),\n    onDrawerSlide?: ?((event: DrawerSlideEvent) => mixed),\n    renderNavigationView: () => Element,\n    statusBarBackgroundColor?: ?ColorValue,\n    style?: ?ViewStyleProp\n  |}>\n```\nI'm also not sure about onDrawerStateChanged, should the type be ?((state: DrawerStateEvent) => mixed)? \nI tried reading about how the ...$Diff utility type works, but I'm still confused.\nIf I got it wrong, any help would be welcome at this point \ud83d\ude4f. ",
    "rafaellincoln": "Resolved. ",
    "Kriyszig": "Fixed in 8468303. Resolved in 8c0f044. Resolved in 8c0f044. ",
    "Jyrno42": "Done. I will squash the commits once they have been approved.. ",
    "scisci": "OK I extracted to the common file. Interpolation works slightly differently (on an array) so it still needed the mapping function. This is from so long ago that I wasn't able to get the tests running again so maybe if you can check that it works.. ",
    "hamidhadi": "@hramos I just committed to fixing this issue.. @hramos I just committed to fixing this issue.. @hramos Another issue has just happened! What should I do? \ud83e\udd26\u200d\u2642\ufe0f . @hramos Another issue has just happened! What should I do? \ud83e\udd26\u200d\u2642\ufe0f . ",
    "wellmonge": "Okay, I'll do that.. Okay, I'll do that.. ",
    "JunielKatarn": "Done for all instances. Can you please approve? :). Done for all instances. Can you please approve? :). Caused by bad rebasing. Fixed.\nThis file is unrelated to the change and has been left untouched.. Caused by bad rebasing. Fixed.\nThis file is unrelated to the change and has been left untouched.. ",
    "guhungry": "suggestion\n * @property {string} text Button label. suggestion\n * @property {string} text Button label. ",
    "lostatseajoshua": "You should check for null first. It is a valid type on the JS side to pass undefined or null. Since you don't check for it and return out it will cause an exception to be thrown. We should allow null and set auto fill to its default. . Nit: You should alpha order this list. Unless you have a specific reason for it being in this order. I would alpha order all values and then add off at the end for clear readability. . Nit: You could alpha order this last same as above.. ",
    "ericlewis": "No, not easily.. let me refactor this one more time to keep imagesPerRow & resolve the dupe issue properly.. I will check if this is the case & fix it if that does occur. . I will check if this is the case & fix it if that does occur. . Remove this hack. We should select renderer based on wether or not they are using fabric surfaces. . Remove this hack. We should select renderer based on wether or not they are using fabric surfaces. . Do we actually want to change this? It\u2019s a prop change specific to fabric, but causes issues when trying to function side by side with vanilla react native. Should fabric use line-through as well?. Do we actually want to change this? It\u2019s a prop change specific to fabric, but causes issues when trying to function side by side with vanilla react native. Should fabric use line-through as well?. We have to create a whole new pod to contain graphics because Float.h doesn\u2019t play nice with Xcode. . We have to create a whole new pod to contain graphics because Float.h doesn\u2019t play nice with Xcode. . I am not sure if this implementation is correct. I am not sure if this implementation is correct. Libevent becomes a new dependency that must be included in users podspecs, even if they aren\u2019t using fabric.. Libevent becomes a new dependency that must be included in users podspecs, even if they aren\u2019t using fabric.. Will do in the morning.. @fkgozali for sure- I don't think we should merge these \"hacks\", but things like the podspecs should be good to go.. @fkgozali for sure- I don't think we should merge these \"hacks\", but things like the podspecs should be good to go.. Yes, for codegen.. Yes, for codegen.. Will do!. Will do!. Yes, will do that shortly.. Yes, will do that shortly.. That said, feature flagging it is pretty easy I suppose.. That said, feature flagging it is pretty easy I suppose.. What is your opinion on using a different scheme?. What is your opinion on using a different scheme?. C Flag is easiest heh.. C Flag is easiest heh.. Added a new flag called FABRIC_ENABLED.. Added a new flag called FABRIC_ENABLED.. removed it. removed it. Generally you check in the xcodeproj but not the xcworkspace when working with pods.. Generally you check in the xcodeproj but not the xcworkspace when working with pods.. This is a Default subspec, so that Folly doesn't install the fabric subspec automatically as well. It is a no-op technically.. This is a Default subspec, so that Folly doesn't install the fabric subspec automatically as well. It is a no-op technically.. I can make it so that it's not a no-op but actually controls what is built. I decided against this originally to prevent any mistakes from developers.. I can make it so that it's not a no-op but actually controls what is built. I decided against this originally to prevent any mistakes from developers.. https://github.com/facebook/react-native/issues/23910. It is better to keep default as a no-op, so user's can't accidentally forget to install Folly normally.. If I don\u2019t check them in, there is no schema to run. This seems to be the case on master too I think, so I suspect something got messed up somewhere along the way before these changes. . okay cool- I will do that.. The shared part is the top level podspec, RCTTurboModule is the platform specific part. I can lock down the dirs being searched so it is clear.. We don't; good point.. ",
    "nhunzaker": "I copied this from previous tests. It's possible more of the mocks below can be removed. Any thoughts?. Yes:\nhttps://github.com/square/okhttp/blob/19466ca4c0d43ebc69cdbc219b0298a8a6db30b4/okhttp/src/main/java/okhttp3/MediaType.java#L104-L110\nI'll make this change, :+1: . @hey99xx I updated this line to include your suggestion for null safety. Just for posterity too, this matches how other parts of the code are handling this case:\nhttps://github.com/facebook/react-native/blob/cda8171af30815edfa331e07d1bbf605f0926303/ReactAndroid/src/main/java/com/facebook/react/modules/network/NetworkingModule.java#L562-L563. @hey99xx I also added this test case to cover the null pointer exception instance on bad content types. It asserts that the content is still parseable as UTF8 and the Content Type header is preserved. . I had to do this to get unit tests to pass. Not sure if this is the best approach.. I really want to use AndroidInfoHelpers.getAdbReverseTcpCommand() here, but I wasn't sure if modules in common should depend on other modules.. Leaving a TODO for me: \nThis needs access to app context to get the port, since it's now defined as a string res. Ideally this would match the current port.. Got it. DebugServerException now accepts a URL in the makeGeneric method which parses out the port.. This isn't strictly necessary, but useful if you link the ReactNative module directly.. ",
    "ejanzer": "We should probably move this above here so that previousText is set correctly.. ",
    "elucaswork": "Fixed @TheSavior. It was just missing the proper definition for the Promise. . ",
    "michalchudziak": "Thanks @satya164, I think it's a good point..  I think keeping eslint test runner configuration within the project is ok. Jest is integrated into RN template, but other projects might depend on a different test runner. I'm fine with both solutions tho.. ",
    "PeteTheHeat": "You'll need to move around these cases.\nCREATE_REACT_CONTEXT_STOP, JS_BUNDLE_STRING_CONVERT_START ... are still not used, they should not be executing [weakPerformanceLogger markStartForTag:RCTPLNativeModuleSetup];. ",
    "RCiesielczuk": "Ahhh yeah, nice catch!\nI'll sort it out.. "
}