{
    "tjluoma": "Agreed. I tried to do the same thing, mostly to speed the loading of the page.\n. ",
    "arturadib": "Updated docs.\n. Not sure what's wrong with the output - this is what I see:\nhttp://d.pr/i/6fhy\nCan you send a screenshot of the problem? Thanks!\n. Ah, I see what you mean now.  That might require some tricky experiments with src/strapdown.css - the challenge will be making this work across devices. Leaving this open as a bug.\n. Yeah, plus I'm trying to get folks to reconsider this :)\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=12235#c15\n(Mainly XML has CDATA, why can't HTML have something like it?)\n. We'd have to ask users to explicitly escape special HTML chars (like < and >). That'd be a pain, and that's the sole reason we're using <xmp>.\n. The best Markdown JS lib I've found is https://github.com/chjj/marked and I don't think they support MultiMarkdown. It's a matter of finding a good JS lib that supports Github-style AND Multi... not so easy.\n. hey, good idea - would love to take a look at a pull request... :)\n. thanks! won't have time to debug this on mobile for a while, but please let me know if you find a fix! happy to take a pull request\n. Markdown parsing is done via Marked - https://github.com/chjj/marked/\nPlease report the issue there. I'll close it for now but please reopen if you can confirm the issue is not present upstream.\n. thanks! can you please replace vendor/marked.min.js with the latest version and see if that fixes the problem for Strapdown?\n. fixed in 509f99f9c00e6b40f208a39e2a2c980331642fe5\nlet me know if that does the trick, thanks\n. Hi thanks, I think this is a neat idea, but for this fork I was hoping to keep things pretty simple -- adding just enough HTML/JS complexity (<xmp>, and <script> tags) so that it works, but otherwise it's just a static Markdown doc. I didn't have any plans to support async loading of text, etc, though that'd be a neat library.\n. Hi there, thanks for the PR! I think this is an interesting niche feature for folks who need to mix-in HTML and Markdown, but I think it's a bit out of scope for Strapdown - I wanted it to be a simple Markdown renderer.\nThanks again! Keep good stuff coming.\n. Hi thanks for the contribution. I think this is beyond the scope of what I was trying to do. The main reason is that it makes the page non-indexable by search engines (since the content is on a separate file) and slow to load.\nA bit of feedback anyway:\n- jQuery adds a large overhead. I was aiming for fast, lightweight rendering.\n- Backbone and Underscore are included but never used.\n- XMLHttpRequest is being used synchronously. This is considered bad practice. In this particular case it'd block the main thread when it could actually be prepping the DOM for the content.\nThanks again, I appreciate the effort!\n. thanks!\n. i've made the A record changes, it needs to propagate though.. fingers\ncrossed.\n-Artur\nOn Fri, Oct 19, 2018 at 4:47 AM Kostya Golikov notifications@github.com\nwrote:\n\n@arturadib https://github.com/arturadib recently Github guys made it\nway easier to fix:\nhttps://blog.github.com/2018-05-01-github-pages-custom-domains-https/\nCan you please go and update A record? Unfortunately, it's ain't\nsomething we can contribute ourselves.\nAt current state broken certificate prevents some of the sites from using\nstrapdown.js properly. Because javascript is served from strapdownjs.com,\nwhen browser loads https page that uses strapdown, script is blocked as the\nmixed content.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/arturadib/strapdown/issues/92#issuecomment-431291591,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtQmPumbwIhxGGPfS31xpzs_a9IVz9Fks5umZGGgaJpZM4Wb3Rd\n.\n. \n",
    "lgarron": "Cool, I see it in 82f896ad5555ce2abdda1066740c8d10a37a3a41. That's just about the information I would have like to see  when I tried it out. G'luck with the project. :-)\n. ",
    "yawnt": "sure...\nthis is how it appears when you click on relationships http://i.imgur.com/9odxm.jpg\nthis is how it should appear http://i.imgur.com/5KLnN.jpg (because the anchor is above relationships)\nhope that made it clear, thanks again :)\n. thanks for taking the time to look into this :)\n. ",
    "godDLL": "Not likely to happen. It is used in production all over the Interwebs. \nI wouldn't touch it. \n. ",
    "LostCrew": "hi arturadib,\ni guess it should be good to have the markdown content inside a general-purpose tag like <pre> or <div>, and parse the content with strapdown only if the tag contains a specific attribute, for example a html5 friendly data-markdown.\nthe result would be:\n<div data-markdown>\n...\n</div>\nsimple, clean and flexible enough.\nhow do you think about that?\nthanks very much.\n. ",
    "billymoon": "Why not use either or... just let the developer decide which tehy want, and the script tries to load either way.\n. ",
    "Dynalon": "Problem with gist is, the github script uses \"document.write\" to create the gist in your document. However, it is not valid JS to call document.write after the document load event was fired. Strapdown does its magic after document.load, hence there is no way you can ever use document.write with strapdown.js\n. ",
    "zipizap": "I've hacked to join an existing JQuery-TOC-plugin into Strapdown, which shows a TOC (h1...h5)  below the navbar\nHave a look in my repo: https://github.com/zipizap/strapdown_template\n. @jamiejackson: it's not a Markdown standard, because what Markdown does is to convert text-to-html without a TOC. \nThe TOC idea as I see it, would be a complement to the markdown-generated-html-page: \n- first generate with Markdown the html-page \n- then parse the html-page for all existing h1..h5, and automatically create (with javascript) a TOC section, and put it in the top of the html-page\nHope it clarifies, that the TOC is not a Markdown-thing, it's a post-Markdown \"addon\" :)\n. ",
    "jamiejackson": "What's the syntax for a table of contents? Is it a MarkDown \"standard?\"\n. It's clearer to me now, thanks. I was thinking that there was some small bit of placeholder/toggle syntax, similar to WikiText's \"TOC\".\n. I tried placing the strapdown code on an HTTPS server, and it works. So it was just an HTTP/HTTPS mismatch, and if I get an answer to #53, it will solve this problem.\n. Thanks, @shawncplus, but I guess it's more that I want conditional output rather than conditional source selection.\nFor instance: At a certain point in the document, show version B of the paragraph instead of version A if, say \"?version=B\" is added as a URL variable.\n. I might try out the Bootmark fork (which includes external sources) and requesting features there, since this repo isn't getting any love lately.\n. BTW, this might be the culprit for my old #28. We'll see.\nUpdate: Yup, that was the problem. Solving this will solve my old #28, too.\n. html\n<script src=\"https://cdn.rawgit.com/arturadib/strapdown/gh-pages/v/0.2/strapdown.js\"></script>\nYeah!\nDid you even know about the GitHub CDN stuff? I didn't!\nMaybe that's where you should link by default (giving the option of http or https versions.)\n. There's no installation if you use the (remote) script source that Joe\nmentioned. Did you explicitly want to run it off local code?\nOn Thu, Oct 1, 2015 at 12:17 PM, Omid Hezaveh notifications@github.com\nwrote:\n\nSorry I didn't write clearly. I meant literally. Where is the getting\nstarted section.\nI'm used to seeing a big header like:\nGetting started\nor\nInstallation\nsomewhere in readme or project homepage. It's sort of a convention.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/arturadib/strapdown/issues/59#issuecomment-144776604.\n. Last I checked, this repo was dead. Do have a look at https://github.com/obedm503/bootmark .. \n",
    "mente": "Any chances to push it upstream?\n. ",
    "behrang": "I installed marked@0.2.7 and tested it using a nodejs script like this:\n```\nvar marked = require('marked');\nconsole.log(marked(\n  \" Header 1 | Header 2\\n\" +\n  \" -------- | --------\\n\" +\n  \" Cell 1   | Cell 2\\n\" +\n  \" Cell 3   | Cell 4\"\n));\n```\nThis prints an HTML table correctly. So I think the problem is somewhere in strapdownjs.\nThanks\n. I used the lib/marked.js version (not minified) and it worked! It converted the above input into a table.\n. It's fixed. Thanks\n. ",
    "joshmoody": "Instead of trying to keep all the bootswatch themes up to date in this project, what do you think about pulling the latest version from the bootstrap cdn?\njavascript\nlinkEl.href = '//netdna.bootstrapcdn.com/bootswatch/latest/' + theme + '/bootstrap.min.css';\nThen there is no need to update this repo for new themes or updated versions of bootstrap.\n. ",
    "kenetik": "I am also VERY interested in this capability as I am constantly editing my .md. \n. ",
    "colthreepv": "I've checked the forks and @didiercrunch implemented this feature already.\nLet's hope he compiles a Pull Request. Ref: https://github.com/didiercrunch/strapdown/commits/gh-pages\n. ",
    "rhythmus": "+1\n. ",
    "sevenate": "+1\n. +1\n. ",
    "somada141": "I just use Python and Jinja2 on a Strapdown template to get the above behavior. Its also cool to add mathjax support as shown in https://gist.github.com/memeplex/6309540\n. ",
    "bendavis78": "It's pretty easy to do using an XHR call: https://gist.github.com/bendavis78/236fb890ba23b10e66fc\n. ",
    "onesail": "Here's my version to support the usage of a src attribute: https://gist.github.com/onesail/5674982a379cef273bb3275344e3c20b\nexample:\nhtml\n<xmp src=\"homepage.md\" theme=\"cerulean\" style=\"display:none;\"></xmp>\n<script src=\"load-xmp-src.js\"></script>\n<script src=\"http://strapdownjs.com/v/0.2/strapdown.js\"></script>\n. ",
    "briceambrosiak": "+1. Is the project dead.. ?\n. ",
    "obedm503": "check bootmark\nit's originally a fork of strapdown but a lot more extended:\n- external files\n- all bootswatch themes (bootstrap 3)\n- optional automatic table of content\n- showdown parser (which is alot more capable than marked)\n- it's still a work in progress and im open to suggestions\ndemo here\nin the demo you can:\n- try a different theme by adding to the url:\n  - ?theme=<any bootswatch theme>\n  - bootswatch\n  - default theme for the demo is yeti\n- try with a different markdown file by adding to the url:\n  - ?fetch=<any public markdown file>\n  - default file is the bootstrap readme on github\n- try without a table of contents by adding to the url:\n  - ?toc=false\n. i'll leave this here \nit's pretty useful\nbootmark\n. there's the alternative, bootmark\nit was inspired by strapdown, but : \n- doesn't limit you to use the depracated xmp tags\n- it allows you to use as many \"markdown\" elements as you can\n- use external files within the same element (yes, that means you can request one or as many files as you want)\n- uses the showdown parser\n- you can decide how the markdown is parsed\n- have all the bootswatch themes, use math (latex or asciimath) with the katex-latex extension\n- has automatic table of contents creation\n- supported everywhere because jQuery\n- can be used through code\n- made for the future because fetch\n- and even more importantly everything is customizable\n. instead of creating a custom <custom-css> tag why not use the already existing <link>\nhtml\n<link rel=\"stylesheet\" href=\"style.css\" />. This is not really a solution but more an alternative. You could use bootmark. It doesn't require you to use <xmp> or <textarea>, but still adds bootstrap and a bunch of other stuff. Also, it's in active development, unlike strapdown.\nDisclaimer: I am the author of bootmark. ;)\n. as of now, bootmark is intended to work with a single block of markdown, and not different segments with other text in between. The good news is that I'm working on a new version that should fix stuff regarding polyfills, and I could fix your issue in there. I really never thought of that use case (several blocks of markdown instead of one), so thanks for bringing that up. It's a great idea.\nAs for the navigation bar, you can disable that through config on the element with markdown. You simply need to add\n<div id=\"bootmark\" data-html=\"{ toc: false }\">\n...some markdown...\n</div>\nto the element with the id of markdown (remember that id's have to be unique), or add\n<bootmark html=\"{ toc: false }\">\n...some markdown...\n</bootmark>\nif your using the <bootmark> element.\ntoc stands for Table Of Contents.\nNow that the idea came up of having multiple separated chunks of markdown, I might consider changin the requirement from id=\"bootmark\" to class=\"bootmark\" to allow for such a thing.\nAlso, I know that the docs are pretty bad right now, that should also be fixed on the new release.\n. though it would be cool, adding a custom code block language might be overkill. (is it even possible?) You could use normal  E = sum_i m_i c^2 syntax and disabling prettyprint. (prettyprint might mess up the math.) does asciimath allow for multiline math blocks? something like:\n`\nE = sum_i m_i c^2\n`\n\nI figured out how to use multiple bootmark elements/markdown blocks per page. This is still not on the latest stable release.\n\nI'll look into having a custom code block language\n. after digging through MathJax's documentation I couln't find a simple method which would take a string of math and return html. So I looked for alternatives, and the internet gave me KaTeX. It does just what I wanted, and is alot faster than mathjax.\nso, like you suggested, I created an extension for showdown (the parser used by bootmark) that uses katex to convert \"latex code\" to pretty math.\nthe syntax works like you suggested it should but instead of\n```math\nsome math here\n```\nit uses\n```latex\nsome math here\n```\nsince the \"code\" is in latex.\nFor a demo of the extension check this https://obedm503.github.io/katex-latex/\nthat page is built from multiple elements. some with markdown outside and some with markdown inside. Shared config is defined in the <script> tag in the head of the document. Shared config is something new to version 0.5.0 of bootmark.\nif you still need to use asciimath, it seems there are ways to convert asciimath to latex which would then be converted by the extension but it's not clear how to accomplish that. I'll look into this tho.\nTL;DR: katex-latex is a showdown extension for latex math in markdown. MathJax is slow, and KaTeX is fast (really fast compared to mathjax) with the tradeoff of latex instead of asciimath.\nwhat do you think of the use of latex instead of math ?\n. turns out it wasn't so complex to add asciimath support.\ncheck this for an example https://obedm503.github.io/katex-latex/ and it's source\nthe example builds the webpage from 2 markdown files (README.md and CHANGELOG.md) and some inline markdown (the second <bootmark> element), uses both the <bootmark> element and a div with class=\"bootmark\", uses both latex and asciimath, uses a different code prettify theme than the default, and defines global config for all elements to use.\nIt is the finest of bootmark + math examples.\nLet me know what you think.\n. just glad I could help\n. for this, are you using strapdown or bootmark?\nif it is bootmark, it is more appropriate to open an issue there or even better in katex-latex\n. Note: I'm not part of the strapdown project\nYou can checkout bootmark. It was directly inspired by strapdown. I ended up writing it because the idea of strapdown was great but it hasn't been updated in a while (at least 2 years), and is extremely limiting in the way it does things. Also, bootmark is a lot more extensible through showdown extensions. bootmark uses showdownjs as its parser instead of marked (the parser used by strapdown).\n. i'll say that it can get complex depending on the level of customization you want\nthis is the bare minimum\n``` html\n<!DOCTYPE html>\n\n\nany title\n\n\n\nany title\nany markdown\n\n\n\n\n```\nof course if you want to fetch external files, change bootstrap theme, code prettify theme, and custumize everything (which you can absolutely do, even the markdown parsing configurations), config has to be set.\nIf you have any api suggestions I'm open to ideas. I want to make bootmark as easy to use as possible. But like I said at the beginning of the thread, that is better discussed in the boomark repo.\n. I don't really know how to solve this on strapdown, but you could also use bootmark. It fulfills the same need as strapdown, just in a better way.\n```html\n\n<bootmark \n  template=\"{\n    text: '${bootmark}'\n  }\"\n\n \n  template=\"{ text: '${bootmark}' }\" \n  just means that bootmark will not wrap\n  the parsed markdown in any more html\n\n\ntitle\n\n\nblockqoute\n\nanother title\nparagraph\n\nlist\n\nitem 1\nitem 2\nsub item 1\nsub item 2\nsub item 3\n\n\nitem 3\n\n```\nI tested this on blogger and it works just fine.\n\nfor more info on bootmark see the webpage here, the docs here, and some examples here. you could always use bootmark it's always served in https. this is possible with bootmark. ",
    "memeplex": "This is not a bug. Just look at the output of marked for your markdown:\nmarked(markdown)\n=>\n<ul><li>works: $$a \\sum_{i}$$</li><li>works: $$a_n \\sum_i$$</li><li>doesn&#39;t: $$a<em>n \\sum</em>{i}$$</li></ul>\nDo you see the 's? Now read http://daringfireball.net/projects/markdown/syntax#em and you will understand.\nYou just need to escape special characters sometimes: http://daringfireball.net/projects/markdown/syntax#backslash.\nPlease close this one.\n. Well after some debugging I should say that strapdown is not the culprit but bootstrap instead. The themes css's are overriding the align attribute in td's. Here's a workaround to include in your html. But I think this should be done by strapdown if it's to claim that it supports the table extension properly:\n<style>\n  td[align=right] { text-align: right !important; }\n  td[align=center] { text-align: center !important; }\n  td[align=left] { text-align: left !important; }\n</style>\nBy the way are you still actively supporting this cute project?\n. Have you specified your charset?\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\nThis is not markdown, strapdown or marked related.\nI can see you hablas espa\u00f1ol by the way.\n. Hopefully you will be interested in this strapdown template I've shared as a gist:\nhttps://gist.github.com/memeplex/6309540\nBesides adding utf8 support it fixes some issues and allows for some additional goodies.\n. You're right. I did some last minute editions with the risks which that always implies.\n. If you give a look at the strapdown sources you'll notice the themes are being downloaded relatively to the strapdown.js location. So I guess you can use only the provided themes if you don't want to download and edit strapdown.js yourself.\n. ",
    "heyallan": "+1\n. ",
    "zhaopuming": "+1\n. ",
    "Zyles": "Trying to include Strapdown with BS3 gives me a blank page. I assume this is not support yet then?\n. ",
    "konsumer": "I did it without strapdown, just manually, and it worked pretty well.\n. ",
    "raarce": "Awesome product by the way!\n. ",
    "ccom3033": "Issue solved. Html:1, Me:0. Gracias!\n. ",
    "walterdavis": "This is a nice start. You may want to move the last closing comment down a couple of lines -- you missed the closing  tag...\nWalter\nOn Aug 22, 2013, at 12:30 PM, memeplex wrote:\n\nHopefully you will be interested in this strapdown template I've shared as a gist:\nhttps://gist.github.com/memeplex/6309540\nBesides adding utf8 support it fixes some issues and allows for some additional goodies.\n\u2014\nReply to this email directly or view it on GitHub.\n. Is there any documentation for the themes supported by strapdown? I fiddled around with these: http://bootswatch.com/2/ and some of them worked, while others did not.\n\nWalter\nOn Aug 22, 2013, at 1:15 PM, memeplex wrote:\n\nYou're right. I did some last minute editions with the risks which that always implies.\n\u2014\nReply to this email directly or view it on GitHub.\n. I looked yesterday to see if Strapdown was at CDNJS, and there was an issue (closed) saying that they had asked, but nobody replied. While it's great that you are willing to host it yourself, and to keep the DNS set correctly, maybe letting meadows bloom (by letting it be on all the public CDNs) would lighten the load.\n\nJust a thought,\nWalter\n\nOn Oct 19, 2018, at 10:56 AM, Artur Adib notifications@github.com wrote:\ni've made the A record changes, it needs to propagate though.. fingers\ncrossed.\n-Artur\nOn Fri, Oct 19, 2018 at 4:47 AM Kostya Golikov notifications@github.com\nwrote:\n\n@arturadib https://github.com/arturadib recently Github guys made it\nway easier to fix:\nhttps://blog.github.com/2018-05-01-github-pages-custom-domains-https/\nCan you please go and update A record? Unfortunately, it's ain't\nsomething we can contribute ourselves.\nAt current state broken certificate prevents some of the sites from using\nstrapdown.js properly. Because javascript is served from strapdownjs.com,\nwhen browser loads https page that uses strapdown, script is blocked as the\nmixed content.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/arturadib/strapdown/issues/92#issuecomment-431291591,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtQmPumbwIhxGGPfS31xpzs_a9IVz9Fks5umZGGgaJpZM4Wb3Rd\n.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n\n. CDNJS is a semi-complete collection of front-end software, all of it available elsewhere, which provides diversity and redundancy, at the cost of maybe needing to update your libraries in more than one place. I have put a few libraries there that were abandoned by their creators. I don't know what their policy is about posting maintained software -- who does the updating when a new version comes out? The physical way that it works is you clone the CDNJS repo, make an addition, and send the maintainers a pull request. It usually goes through quickly and automatically if you are already validated. It was years ago that I was validated, though, so who knows what the process is like now.\nWalter\n\nOn Oct 22, 2018, at 4:25 AM, Kostya Golikov notifications@github.com wrote:\n@walterdavis as far as I understand, github has it's own CDN for github pages and this is what Arthur is using to host strapdown. How is that compares to CDNJS (I am not a frontend dev per se)?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n. ",
    "ndossougbe": "+1 on this.\nIt would allow to use Strapdown on something else than bare-bones html. Right now  has to be a direct child of body. Trying to add a table of content, more complex style, etc. is needlessly complicated because of that.\n. Ah I forgot I had this PR open. The patches after the first one are irrelevant to the present issue. Closing this in favour of pull/68, which I made from a different branch and only has that patch.\n. ",
    "HowBowers": "I've noticed the same behavior serving from a IIS server, but only when the page is rendered in IE8 (IE10 works fine).\nI added  and  tags into the HTML markup and then the page appeared as expected.\n. ",
    "doneill": "When I put in a markdown link, e.g. [content](url) it doesn't provide a link with the content word in rendered html.  It renders the exact verbiage in a code block.  Does Strapdown support markdown links?\n. Links do work, issue I had was my html was indented, un-indented the <xmp> section and the markdown rendered properly.\n. ",
    "toomey8": "+1 on this. \n. ",
    "numtel": "If you're using one of the supplied bootstrap themes, use this snippet:\nhtml\n<style>\n.container { max-width: 700px; }\n</style>\n. ",
    "x2b": "+1\n. ",
    "joedf": "+1\n. Just made this. Cheers, :+1: \nhttps://github.com/joedf/strapdown-topbar\nhttp://joedf.github.io/strapdown-topbar\n. +1\nRelated: https://github.com/arturadib/strapdown/pull/55\n. :+1: x1000\n. Could you show us some code, or an example page?\nmaybe a JSFiddle ?\n. Nice\n. Either, self host or modify strapdown.js to match the new paths. \n. from http://strapdownjs.com\n``` html\n<!DOCTYPE html>\n\nHello Strapdown\n\nMarkdown text goes in here\nChapter 1\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\net dolore magna aliqua. \nChapter 2\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\nculpa qui officia deserunt mollit anim id est laborum.\n\n\n\n``\n. I would close this now. \n. Cool :+1: \n. you could use my plugin... light weight and works directly on top of strapdown. https://github.com/joedf/strapdown-topbar . @roddersg my pleasure! \ud83d\ude04 .strapdown.js` must run after. :/\n. I don't this user ever replies to anything here.... ",
    "shawncplus": "I created this https://github.com/shawncplus/markdown-talk which patches strapdown to allow you to specify the source as a github link shawncplus/bash-classes:historymanipulation.mkd, for example, which it will pull at pageload. It'd be trivial to check for a query parameter instead of looking at the source attribute.\n. ",
    "javierarilos": "@shawncplus IMHO being able to load markdown from another location is a very nice feature for strapdown.js ... guys, could be it possible to merge this into strapdown?\n. It is always a complex discussion wether to add, or not, features to any technology... I think it is a very useful and simple addition to strapdown... but is just my opinion :smile_cat: \n. ",
    "dralletje": "Ain't strapdown incredibly sexy because of it's feature-less-ness?\n. Why is this not merged? :sob: \n. ",
    "robbmj-index-exchange": "Can this get merged?\n. ",
    "LYF610400210": "I think the deprecation of the <xmp> tag makes the tag unique for Strapdown.js ... \u2229(\ufe36\u25bd\ufe36)\u2229\n. ",
    "binarez": "http://stackoverflow.com/a/10830811\n. Wouldn't it just work to use a div? I'm no html expert but it seems like\nthat is what most libs do, no?\nLe 5 janv. 2016 7:35 PM, \"tortoise74\" notifications@github.com a \u00e9crit :\n\nFor reference \"undeprecating\" the  tag for the benefit of strapdown\nand others was rejected by w3 (in 2013) as wont fix.\nSee https://www.w3.org/Bugs/Public/show_bug.cgi?id=12235#c15\nWould a sensible way forward be to support a custom tag based on  as\nan alternate syntax?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/arturadib/strapdown/issues/40#issuecomment-169178700.\n. \n",
    "jamesmortensen": "Except it doesn't make it unique. It simply leaves the library open to undefined behavior as described in the Stack Overflow link.  If everyone decided to go out and make up their own tags, then the Internet would be a mess.  There is nothing I see special or unique about Strapdown.js that isn't special or unique about some other library or tool that does use semantically correct markup.\nIf there is a good reason for this, it would be interesting to hear. I'm not against the idea of making up tags in practice, as long as it's not just because of ignorance of how HTML works.\n. That is what other libraries do which involve using different language, but I generally see that with scripting languages like Coffeescript or Brython, not markup languages.. ",
    "tortoise74": "For reference \"undeprecating\" the  tag for the benefit of strapdown and others was rejected by w3 (in 2013) as wont fix. \nSee https://www.w3.org/Bugs/Public/show_bug.cgi?id=12235#c15\nWould a sensible way forward be to support a custom tag based on  as an alternate syntax?\n. ",
    "dotku": "It works with textarea right now\n. @strongme it supports Chinese charaters. Checkout here: http://dotku.github.io/cn/tech/javascript/strapdown.js/\n. ",
    "jbenner-radham": "I know I'm late to the party but I would suggest using <script type=\"text/markdown\"> as the container tag. This won't encode HTML entities and you won't have to set display:none; styling on it as well.. That's a good point. Although it's not uncommon to see markup in text/x-template tags for various template systems like Handlebars, Vue, etc. it's not the most semantic implementation I agree. The only other thing I could think of would be something like <template class=\"markdown\">.. ",
    "mookid8000": "<template>  is meant for HTML code that is not readily rendered by a client, but instead leaves it in the DOM for scripts to manipulate. \nSince any content is allowed, it's an obvious candidate as an alternative to the deprecated <xmp> tag.. ",
    "tobegit3hub": "It's nice. We should use bower instead of the vender directory :smiley: \n. ",
    "crissdev": ":+1: \n. ",
    "stevelacy": "I'll send the PR in a few minutes\n. Any issues with this getting merged?\n. ",
    "guneysus": "Same problem for Turkish unicode chars. Following.\n. ",
    "cslecours": "You need to add <meta charset=\"utf-8\"> between the <head> and </head> blocks.\n. ",
    "hovancik": "@mespeche \nquick hack could be to use <xmp theme=\"a\" style=\"display:none;\"> and then style however you want it. \n. +1\n. ",
    "bhhaskin": "fixes #22 #13\n. ",
    "andrew-kzoo": ":+1: \n. ",
    "jacktan1991": "seems that the owner is too busy to update this lib...\n. @zTrix OK, I'll fork it! So what is the relationship between strapdown and strapdown-zeta ?\n. ",
    "zTrix": "@jacktan1991 Could you modify this PR to https://github.com/chaitin/strapdown-zeta ?\nWe are under active development and add more features to the strapdown project.\n. @jacktan1991 I forked from strapdown, and added many more useful features including mathjax support, git powered wiki server, live theme switching.\n. I have solved this in my derived project of strapdown.\nhttps://github.com/chaitin/strapdown-zeta\nExample: http://strapdown.ztx.io/#h1.0.1_features\n. ",
    "devyash": "When will this get merged?\n. ",
    "omgmog": "Un-indent your markdown code. Code indented by 4 spaces in markdown will be formatted as a <pre> preformatted code.\n. ",
    "sebastienvermeille": "+1 please merge. ",
    "ghost": "Yes, please ! +1\n. ",
    "albacoretuna": "Sorry I didn't write clearly. I meant literally. Where is the getting started section.\nI'm used to seeing a big header like: \nGetting started\nor\nInstallation\nsomewhere in readme or project homepage. It's sort of a convention.\n. I added a pull request to show what I mean, it's just a small change to README. \nhttps://github.com/arturadib/strapdown/pull/60\n. ",
    "OliverFlint": "Ignore me!\nThis was caused by Jade escaping.\nHad to change #{markdown} to !{markdown} to unescape it.\n. ",
    "androidand": "That's great, you saved me some trouble, thank you! \nSkickat fr\u00e5n min iPhone\n\n7 nov. 2015 kl. 17:40 skrev Wenlei Zhu notifications@github.com:\nI have solved this in my derived project of strapdown.\nhttps://github.com/chaitin/strapdown-zeta\nExample: http://strapdown.ztx.io/#h1.0.1_features\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "roddersg": "Strapdown-zeta uses ~~a compiled code, which I do not like placing on my server~~. a modified strapdownjs code (0.74) which I tried to build but was un-successful.  The themes etc do not work properly unless you grab them from his site. (It should, but must be me)\nIs there any way I can get this done with strapdown.js only?. @joedf - Thank you, very very much Your plugin has made my day.  I was struggling with strapdownjs-zeta but yours is a much cleaner design.  You have also solved my problem with the favicon.ico as well.  It is certainly a very neat way of doing things.  \nThanks again!. ",
    "dmelo": "Hi. I had a similar issue. So I wrapped strapdown.js into a function that I can call when it is convenient. Here is my fork https://github.com/dmelo/strapdown/tree/dmelo .\nNow, you have to call window.strapdown() to make it parse the markdown. I will make a PR as soon as I implement it on a backward compatible way.\n. ",
    "calvinjuarez": "Whoops, looks like this is a dupe of #22.  Closing.\n. ",
    "challe": "I just made this work locally by downloading the github-markdown.css from https://github.com/sindresorhus/github-markdown-css, renamed it github.min.css and added it to the themes folder. Then you can use theme=\"github\" on the xmp tag. For the CSS to work you need to add a markdown-body class to the html tag.\n. ",
    "TianBo-Timothy": "Hi,\nthanks for your suggestion. I tried bootmark this morning. It does not work\nas expected yet ...\nWhat I did is like:\nhtml\n\n\nany tag - document\n\n\n\n\n The first equation:  `E = m c^2`\n\n\n# First block of Markdown text goes in here\n\n The second equation: `E = sum_i m_i c^2`\n\n\n# Second block of Markdown text goes in here\n\n\n\n\nBoth equations are shown. But the second block of markdown text is gone\nafter rendering. And there is a navigation bar on the top of the page. Can\nyou give any suggestion to fix it?\n\nBest Regards\nTian, Bo\n\nOn Thu, Oct 6, 2016 at 3:53 AM, obedm503 notifications@github.com wrote:\n\n> This is not really a solution but more an alternative. You could use\n> bootmark https://obedm503.github.io/bootmark/. It doesn't require you\n> to use  or , but still adds bootstrap and a bunch of other\n> stuff. Also, it's in active development, unlike strapdown.\n> \n> Disclaimer: I am the author of bootmark. ;)\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/arturadib/strapdown/issues/71#issuecomment-251848162,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/APcDePsgKypxWXJiztU7ut4uPzA6pFnRks5qxFSwgaJpZM4KOgkD\n> .\n. So you will become the first to support AsciiMath along with markdown  :)\n\nI am also thinking about another approach: can we have some markdown\ndirectly for math, e.g.\n\n``` math\nE = sum_i m_i c^2\n```\n\nthen you can figure out a way to use MathJax for further processing.  In\nthis way, it will feel more like a native solution.\n\nWhat do you think ?\n\nB.R.\nTian, Bo\n\nOn Fri, Oct 7, 2016 at 1:58 AM, obedm503 notifications@github.com wrote:\n\n> as of now, bootmark is intended to work with a single block of markdown,\n> and not different segments with other text in between. The good news is\n> that I'm working on a new version that should fix stuff regarding\n> polyfills, and I could fix your issue in there. I really never thought of\n> that use case (several blocks of markdown instead of one), so thanks for\n> bringing that up. It's a great idea.\n> \n> As for the navigation bar, you can disable that through config on the\n> element with markdown. You simply need to add\n> \n> \n> ...some markdown...\n> \n> \n> to the element with the id of markdown (remember that id's have to be\n> unique\n> http://stackoverflow.com/questions/7262195/several-elements-with-the-same-id-responding-to-one-css-id-selector),\n> or add\n> \n> \n> ...some markdown...\n> \n> \n> if your using the  element.\n> \n> toc stands for Table Of Contents.\n> \n> Now that the idea came up of having multiple separated chunks of markdown,\n> I might consider changin the requirement from id=\"bootmark\" to\n> class=\"bootmark\" to allow for such a thing.\n> \n> Also, I know that the docs are pretty bad right now, that should also be\n> fixed on the new release.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/arturadib/strapdown/issues/71#issuecomment-252120811,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/APcDeIH5C-IGElUOpacJgyo7UMrdBYoMks5qxYsPgaJpZM4KOgkD\n> .\n. So you will become the first to support AsciiMath along with markdown  :)\n\nI am also thinking about another approach: can we have some markdown\ndirectly for math, e.g.\n\n``` math\nE = sum_i m_i c^2\n```\n\nthen you can figure out a way to use MathJax for further processing.  In\nthis way, it will feel more like a native solution.\n\nWhat do you think ?\n\nB.R.\n\nOn Fri, Oct 7, 2016 at 1:58 AM, obedm503 notifications@github.com wrote:\n\n> as of now, bootmark is intended to work with a single block of markdown,\n> and not different segments with other text in between. The good news is\n> that I'm working on a new version that should fix stuff regarding\n> polyfills, and I could fix your issue in there. I really never thought of\n> that use case (several blocks of markdown instead of one), so thanks for\n> bringing that up. It's a great idea.\n> \n> As for the navigation bar, you can disable that through config on the\n> element with markdown. You simply need to add\n> \n> \n> ...some markdown...\n> \n> \n> to the element with the id of markdown (remember that id's have to be\n> unique\n> http://stackoverflow.com/questions/7262195/several-elements-with-the-same-id-responding-to-one-css-id-selector),\n> or add\n> \n> \n> ...some markdown...\n> \n> \n> if your using the  element.\n> \n> toc stands for Table Of Contents.\n> \n> Now that the idea came up of having multiple separated chunks of markdown,\n> I might consider changin the requirement from id=\"bootmark\" to\n> class=\"bootmark\" to allow for such a thing.\n> \n> Also, I know that the docs are pretty bad right now, that should also be\n> fixed on the new release.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/arturadib/strapdown/issues/71#issuecomment-252120811,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/APcDeIH5C-IGElUOpacJgyo7UMrdBYoMks5qxYsPgaJpZM4KOgkD\n> .\n. It is certainly cool to be able to use Latex in Markdown. But it\u2019s still better to use AsciiMath. The idea is to save time of writing (time of parsing is not a big issue here)\n\nThere is a Latex package called asciimth (https://github.com/judah/asciimath-tex). It is old but it works. It use similar syntax to write math. Is it possible to use this package along with KaTeX?\n\nFrom: obedm503 \nSent: Monday, October 10, 2016 5:50 AM\nTo: arturadib/strapdown \nCc: TianBo-Timothy ; Author \nSubject: Re: [arturadib/strapdown] Work with AsciiMath (#71)\n\nafter digging through MathJax's documentation I couln't find a simple method which would take a string of math and return html. So I looked for alternatives, and the internet gave me KaTeX. It does just what I wanted, and is alot faster than mathjax.\n\nso, like you suggested, I created an extension for showdown (the parser used by bootmark) that uses katex to convert \"latex code\" to pretty math.\n\nthe syntax works like you suggested it should but instead of\n\n``` math\nsome math here\n```\n\nit uses\n\n``` latex\nsome math here\n```\n\nsince the \"code\" is in latex.\n\nFor a demo of the extension check this https://obedm503.github.io/katex-latex/\nthat page is built from multiple elements. some with markdown outside and some with markdown inside. Shared config is defined in the ",
    "kskarthik": "This project is still active? I like to use it on my website. Any alt project similar to this?\n. Thanks! I will take a look :) \n. But your project looks a bit complex to implement than this \n. Thanks! This is fine for me :smile: Enough to write down some notes\n. ",
    "extend1994": "@arturadib Sorry to bother you. Is it possible for you to help with this?. ",
    "sthiago": "This error is happening for me too. Copied all files from /v/0.2 to my server, since it was complaining that I couldn't use the library from strapdownjs.com because it wasn't https.. ",
    "gregsadetsky": "Hopefully this is useful (I'm not affiliated, etc.). You can use:\nhttps://cdn.rawgit.com/arturadib/strapdown/gh-pages/v/0.2/strapdown.js. ",
    "ace0": "Agree: this package looks great, but is useless to me without an HTTPS endpoint.\nThe suggested link by @gregsadetsky works to load most files, but only the themes listed in:\nhttps://github.com/arturadib/strapdown/tree/gh-pages/v/0.2/themes\nare supported.. ",
    "qgustavor": "\nThe current github cdn does not support https urls.\n\nGitHub Pages now supports HTTPS, but to make it work someone needs to fix the DNS records.. ",
    "daboxu": "Translated to English for visibility:\n\nIt would be better if we can specify the markdown text ID on xmp's attribute instead of directly replce child on the body. Example:\n``````html\n\n\n     ### markdown content here ###\n\nso we can try something like\n`````javascript\ndocument.getElementById(\"content\").replaceChild(newNode, markdownEl);. \n",
    "sufuf3": "@joedf I apologize for my mistake.. ",
    "ClayAndMore": "i had achieve it,the take away contents are converted to HTML to put the place where you want .. ",
    "oupala": "Is this repo still alive? Is this project still maintained?. Thanks a lot @jamiejackson for visiting this issue. And thanks also for making me doscover bootmark.\nIt is a bit more difficult than strapdown to use, as I find the document a bit worse. But in the end, it seems to work well, and it is maintained!. ",
    "lazyval": "@arturadib recently Github guys made it way easier to fix: https://blog.github.com/2018-05-01-github-pages-custom-domains-https/\nCan you please go and update A record? (hopefully you would not need to fix all the css and img files as well). Unfortunately, it's ain't something we can contribute ourselves.\nAt current state broken certificate prevents some of the sites from using strapdown.js properly. Because javascript is served from strapdownjs.com, when browser loads https page that uses strapdown, script is blocked as the mixed content. . @walterdavis as far as I understand, github has it's own CDN for github pages and this is what Arthur is using to host strapdown. How is that compares to CDNJS (I am not a frontend dev per se)?. So I wrote to github support, and they've expedited certificate creation and now https mode is on! \n\nHoraaay! Thanks to @arturadib and Thomas Baillie from github support\n\n. ",
    "qingshuibudong": "now both are supported. "
}